; ModuleID = 'build/adafruit_feather_stm32f405/subsys/testsuite/pytest/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.ztest_suite_stats = type { i32, i32, i32 }
%struct.ztest_suite_node = type { i8*, i8* ()*, void (i8*)*, void (i8*)*, void (i8*)*, i1 (i8*)*, %struct.ztest_suite_stats* }
%struct.ztest_unit_test_stats = type { i32, i32, i32, i32, i32 }
%struct.ztest_unit_test = type { i8*, i8*, void (i8*)*, i32, %struct.ztest_unit_test_stats* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.k_spinlock = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, [32 x i8], i32, %struct.ztest_suite_stats, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct._thread_arch = type { i32, i32 }
%struct.ztest_test_rule = type { void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)* }
%struct.ztest_expected_result_entry = type { i8*, i8*, i32 }
%struct.ztest_arch_api = type { void (i8*)*, i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, i8*)* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [82 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [82 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236380 to i8*), void (i8*)* inttoptr (i32 134235049 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236380 to i8*), void (i8*)* inttoptr (i32 134235029 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236380 to i8*), void (i8*)* inttoptr (i32 134235019 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236380 to i8*), void (i8*)* inttoptr (i32 134235119 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236380 to i8*), void (i8*)* inttoptr (i32 134235109 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236380 to i8*), void (i8*)* inttoptr (i32 134235099 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236380 to i8*), void (i8*)* inttoptr (i32 134235089 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236380 to i8*), void (i8*)* inttoptr (i32 134235079 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236380 to i8*), void (i8*)* inttoptr (i32 134235069 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236380 to i8*), void (i8*)* inttoptr (i32 134235059 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236380 to i8*), void (i8*)* inttoptr (i32 134235039 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [45 x i8*] [i8* bitcast (%struct.ztest_suite_node* @z_ztest_test_node_test_pytest to i8*), i8* bitcast (%struct.ztest_unit_test* @z_ztest_unit_test__test_pytest__test_pytest to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_37 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_21 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [12 x i8] c"test_pytest\00", align 1
@z_ztest_suite_node_stats_test_pytest = dso_local global %struct.ztest_suite_stats zeroinitializer, align 4, !dbg !25
@z_ztest_test_node_test_pytest = internal constant %struct.ztest_suite_node { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i8* ()* null, void (i8*)* null, void (i8*)* null, void (i8*)* null, i1 (i8*)* null, %struct.ztest_suite_stats* @z_ztest_suite_node_stats_test_pytest }, section "._ztest_suite_node.static.z_ztest_test_node_test_pytest", align 4, !dbg !109
@z_ztest_unit_test_stats_test_pytest_test_pytest = dso_local global %struct.ztest_unit_test_stats zeroinitializer, align 4, !dbg !173
@z_ztest_unit_test__test_pytest__test_pytest = internal global %struct.ztest_unit_test { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), void (i8*)* @_test_pytest_test_pytest_wrapper, i32 0, %struct.ztest_unit_test_stats* @z_ztest_unit_test_stats_test_pytest_test_pytest }, section "._ztest_unit_test.static.z_ztest_unit_test__test_pytest__test_pytest", align 4, !dbg !155
@.str.1 = private unnamed_addr constant [13 x i8] c"Hello world\0A\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !175
@.str.1.4 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.5 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !207
@.str.13 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !216
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !266
@.str.22 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.24 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.25 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.23 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.27 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.28 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.26 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.29 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.30 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.31 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.32 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.33 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.34 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.35 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.36 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.41 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.42 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.55 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.47 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.48 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.49 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.50 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.51 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.52 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.53 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.54 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.46 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22.45 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29.43 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33.44 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !295
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !447
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !301
@.str.67 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.68 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.69 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.70 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.75 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.76 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !456
@.str.6.77 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.78 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.71 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.72 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !492
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.87, i32 0, i32 0), %struct.k_spinlock { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.88, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !502
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !507
@.str.87 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.88 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@phase = dso_local local_unnamed_addr global i32 5, align 4, !dbg !527
@test_status = internal unnamed_addr global i32 0, align 4, !dbg !582
@.str.89 = private unnamed_addr constant [69 x i8] c"===================================================================\0A\00", align 1
@.str.1.92 = private unnamed_addr constant [22 x i8] c"PROJECT EXECUTION %s\0A\00", align 1
@.str.2.91 = private unnamed_addr constant [7 x i8] c"FAILED\00", align 1
@.str.3.90 = private unnamed_addr constant [11 x i8] c"SUCCESSFUL\00", align 1
@current_test_failed_assumption = internal unnamed_addr global i1 false, align 1, !dbg !693
@test_result = internal unnamed_addr global i32 0, align 4, !dbg !569
@.str.4.104 = private unnamed_addr constant [51 x i8] c" ERROR: cannot fail in test phase '%s()', bailing\0A\00", align 1
@.str.5.105 = private unnamed_addr constant [51 x i8] c" ERROR: cannot pass in test phase '%s()', bailing\0A\00", align 1
@.str.6.93 = private unnamed_addr constant [51 x i8] c" ERROR: cannot skip in test phase '%s()', bailing\0A\00", align 1
@_ztest_unit_test_list_start = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_unit_test_list_end = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_suite_node_list_start = external dso_local global [0 x %struct.ztest_suite_node], align 4
@_ztest_suite_node_list_end = external dso_local global [0 x %struct.ztest_suite_node], align 4
@.str.7.120 = private unnamed_addr constant [37 x i8] c"ERROR: Test suite '%s' did not run.\0A\00", align 1
@.str.8.121 = private unnamed_addr constant [66 x i8] c"ERROR: Test '%s' assigned to test suite '%s' which doesn't exist\0A\00", align 1
@.str.9.122 = private unnamed_addr constant [21 x i8] c"Bad stats for %s.%s\0A\00", align 1
@ztest_thread_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/subsys/testsuite/ztest/src/ztest_new.c\22.0", align 64, !dbg !573
@ztest_thread = internal global %struct.k_thread zeroinitializer, align 8, !dbg !584
@.str.10.95 = private unnamed_addr constant [6 x i8] c"setup\00", align 1
@.str.11.96 = private unnamed_addr constant [7 x i8] c"before\00", align 1
@.str.12.97 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@.str.13.98 = private unnamed_addr constant [6 x i8] c"after\00", align 1
@.str.14.99 = private unnamed_addr constant [9 x i8] c"teardown\00", align 1
@.str.15.100 = private unnamed_addr constant [10 x i8] c"framework\00", align 1
@.str.16.94 = private unnamed_addr constant [10 x i8] c"(unknown)\00", align 1
@.str.17.106 = private unnamed_addr constant [22 x i8] c"Running TESTSUITE %s\0A\00", align 1
@.str.18.108 = private unnamed_addr constant [24 x i8] c"TESTSUITE %s succeeded\0A\00", align 1
@.str.19.107 = private unnamed_addr constant [22 x i8] c"TESTSUITE %s failed.\0A\00", align 1
@.str.20.109 = private unnamed_addr constant [12 x i8] c"START - %s\0A\00", align 1
@tc_spend_time = internal unnamed_addr global i32 0, align 4, !dbg !691
@.str.21.110 = private unnamed_addr constant [29 x i8] c" %s - %s in %u.%03u seconds\0A\00", align 1
@tc_start_time = internal unnamed_addr global i32 0, align 4, !dbg !688
@_ztest_test_rule_list_start = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_test_rule_list_end = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_expected_result_entry_list_start = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@_ztest_expected_result_entry_list_end = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@.str.24.112 = private unnamed_addr constant [5 x i8] c"PASS\00", align 1
@.str.25.113 = private unnamed_addr constant [5 x i8] c"FAIL\00", align 1
@.str.26.114 = private unnamed_addr constant [5 x i8] c"SKIP\00", align 1
@.str.27.111 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.28.115 = private unnamed_addr constant [41 x i8] c"\0A------ TESTSUITE SUMMARY START ------\0A\0A\00", align 1
@.str.29.116 = private unnamed_addr constant [38 x i8] c"------ TESTSUITE SUMMARY END ------\0A\0A\00", align 1
@.str.30.117 = private unnamed_addr constant [44 x i8] c" - %s - [%s.%s] duration = %u.%03u seconds\0A\00", align 1
@.str.31.118 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.32.119 = private unnamed_addr constant [100 x i8] c"SUITE %s - %3d.%02d%% [%s]: pass = %d, fail = %d, skip = %d, total = %d duration = %u.%03u seconds\0A\00", align 1
@switch.table.get_friendly_phase_name = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10.95, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.96, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12.97, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.98, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.99, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15.100, i32 0, i32 0)], align 4
@switch.table.TC_RESULT_TO_STR = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24.112, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25.113, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26.114, i32 0, i32 0)], align 4
@ztest_api = dso_local local_unnamed_addr constant %struct.ztest_arch_api { void (i8*)* @z_ztest_run_all, i1 (i8*, %struct.ztest_suite_node*)* @z_ztest_should_suite_run, i1 (i8*, i8*)* @z_ztest_should_test_run }, align 4, !dbg !694
@.str.127 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.128 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.129 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !729
@__devicehdl_dts_ord_37 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !923
@.str.4.125 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_37 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !884
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !867
@__device_dts_ord_37 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.125, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_37, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_37, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !840
@__init___device_dts_ord_37 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_37 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !856
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !886
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !900
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !902
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !904
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !906
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !908
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !910
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !912
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !914
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !916
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !918
@__devicehdl_dts_ord_9 = dso_local constant [13 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 32767], section ".__device_handles_pass2", align 2, !dbg !928
@.str.130 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !957
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1051
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1040
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1092
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !950
@.str.139 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1158
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1444
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1410
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1396
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1335
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !948
@.str.1.147 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1446
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1414
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1412
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1352
@__devicehdl_dts_ord_21 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !946
@.str.2.148 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1459
@__devstate_dts_ord_21 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1418
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1416
@__init___device_dts_ord_21 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_21 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1358
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !944
@.str.3.149 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1461
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1422
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1420
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1364
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !942
@.str.4.150 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1463
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1426
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1424
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1370
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !940
@.str.5.151 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1465
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1430
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1428
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1376
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !938
@.str.6.152 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1467
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1434
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1432
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1382
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !936
@.str.7.153 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1469
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1438
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1436
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1388
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !934
@.str.8.154 = private unnamed_addr constant [14 x i8] c"gpio@40022000\00", align 1
@gpio_stm32_cfg_i = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073881088 to i32*), i32 8, %struct._thread_arch { i32 48, i32 256 } }, align 4, !dbg !1471
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1442
@gpio_stm32_data_i = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1440
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1394
@.str.9.140 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.32.146 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.33.142 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.34.145 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.35.141 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.36.143 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.37.144 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.158 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.158, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1473
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !952
@.str.1.161 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1629
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1684
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1627
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1686
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.161, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1618
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1620
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1673
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1676
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1678
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 839, i32 512 }, %struct._thread_arch { i32 871, i32 0 }], align 4, !dbg !1681
@.str.2.163 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.164 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.4.165 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.5.166 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.6.167 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.7.170 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.8.172 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.9.173 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.130, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([13 x i16], [13 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1024
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.10 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1697
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1808
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1810
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1806
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1801
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1775
@.str.177 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.178 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.179 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.180 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.181 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.182 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_21, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null], align 4, !dbg !1812
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.139, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1333
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.147, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1350
@__device_dts_ord_21 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.148, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_21, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_21, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1356
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.149, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1362
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.150, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1368
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.151, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1374
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.152, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1380
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.153, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1386
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.154, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_i to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_i to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1392
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1902
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1942
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1945
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1952
@.str.216 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.220 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.221 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.222 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.226 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.227 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.228 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.229 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.230 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.225 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.224 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.226, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.227, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.228, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.229, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.230, i32 0, i32 0)], align 4
@.str.232 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.232, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1959
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@__ccm_bss_start = external dso_local global [0 x i8], align 1
@__ccm_bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2183
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2172
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2178
@z_idle_stacks = internal global [1 x [4160 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2190
@.str.5.238 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2195
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.242 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.249, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.250, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.251, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.252, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.253, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.254, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.248, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.255, i32 0, i32 0)], align 4, !dbg !2223
@.str.249 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.250 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.251 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.252 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.253 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.254 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.248 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.255 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2338
@.str.8.247 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.260 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.261 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.262 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.263 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.267 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.268 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.272 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.273 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.282 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.283 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.284 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2351
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2462
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2465
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2467
@.str.285 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.301 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.292 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.306 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.314 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.294 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.309 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.291 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.318 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.319 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.325 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.326 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.327 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.330 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.286 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.287 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.288 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.289 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.290 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.293 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.305 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.310 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.311 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2180
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2188
@.str.23.320 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@__ccm_data_start = external dso_local global [0 x i8], align 1
@__ccm_data_rom_start = external dso_local global [0 x i8], align 1
@__ccm_data_end = external dso_local global [0 x i8], align 1
@.str.336 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.337 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.338 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.339 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2469
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2499
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2504
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2046
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2502
@.str.4.340 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.341 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.342 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.346 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.347 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.367 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3087 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3091, !srcloc !3092
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3093, !srcloc !3094
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3095, !srcloc !3096
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3097, !srcloc !3098
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3099, !srcloc !3100
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3101, !srcloc !3102
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3103, !srcloc !3104
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3105, !srcloc !3106
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3107, !srcloc !3108
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3109, !srcloc !3110
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3111, !srcloc !3112
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3113, !srcloc !3114
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3115, !srcloc !3116
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3117, !srcloc !3118
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3119, !srcloc !3120
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3121, !srcloc !3122
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3123, !srcloc !3124
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !3125, !srcloc !3126
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3127, !srcloc !3128
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3129, !srcloc !3130
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3131, !srcloc !3132
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3133, !srcloc !3134
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3135, !srcloc !3136
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3137, !srcloc !3138
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3139, !srcloc !3140
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3141, !srcloc !3142
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3143, !srcloc !3144
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3145, !srcloc !3148
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3149, !srcloc !3150
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3151, !srcloc !3152
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3153, !srcloc !3154
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3155, !srcloc !3156
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3157, !srcloc !3158
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3159, !srcloc !3160
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3161, !srcloc !3162
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3163, !srcloc !3164
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3165, !srcloc !3166
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3167, !srcloc !3168
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3169, !srcloc !3170
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3171, !srcloc !3172
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3173, !srcloc !3174
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3175, !srcloc !3176
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3177, !srcloc !3178
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3179, !srcloc !3180
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3181, !srcloc !3182
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3183, !srcloc !3184
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3185, !srcloc !3186
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3187, !srcloc !3188
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3189, !srcloc !3190
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3191, !srcloc !3192
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3193, !srcloc !3194
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3195, !srcloc !3196
  ret void, !dbg !3197
}

; Function Attrs: noinline nounwind optsize
define internal void @_test_pytest_test_pytest_wrapper(i8* nocapture noundef readnone %0) #1 !dbg !3200 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3202, metadata !DIExpression()), !dbg !3203
  tail call fastcc void @test_pytest_test_pytest() #24, !dbg !3204
  ret void, !dbg !3204
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc void @test_pytest_test_pytest() unnamed_addr #1 !dbg !3205 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i32 0, i32 0)) #25, !dbg !3206
  ret void, !dbg !3207
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3208 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3223, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8* %0, metadata !3219, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %1, metadata !3220, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %2, metadata !3221, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8* %3, metadata !3222, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8* %0, metadata !3224, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8* %0, metadata !3225, metadata !DIExpression()), !dbg !3286
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3287
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3287
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3228, metadata !DIExpression()), !dbg !3288
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3289
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3289
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3230, metadata !DIExpression()), !dbg !3290
  call void @llvm.dbg.value(metadata i32 0, metadata !3231, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 0, metadata !3232, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 0, metadata !3233, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 -1, metadata !3234, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8 0, metadata !3237, metadata !DIExpression()), !dbg !3286
  %12 = and i32 %2, 4, !dbg !3291
  %13 = icmp eq i32 %12, 0, !dbg !3292
  call void @llvm.dbg.value(metadata i1 %13, metadata !3238, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3286
  %14 = lshr i32 %2, 3, !dbg !3293
  %15 = and i32 %14, 7, !dbg !3293
  %16 = add nuw nsw i32 %15, 1, !dbg !3294
  call void @llvm.dbg.value(metadata i32 %16, metadata !3239, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8 0, metadata !3240, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8* %0, metadata !3241, metadata !DIExpression()), !dbg !3286
  %17 = ptrtoint i8* %0 to i32, !dbg !3295
  %18 = and i32 %17, 3, !dbg !3297
  %19 = icmp eq i32 %18, 0, !dbg !3297
  br i1 %19, label %20, label %320, !dbg !3298

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3299
  call void @llvm.dbg.value(metadata i8* %21, metadata !3225, metadata !DIExpression()), !dbg !3286
  %22 = icmp eq i8* %0, null, !dbg !3300
  %23 = and i32 %1, 7, !dbg !3302
  %24 = sub nuw nsw i32 8, %23, !dbg !3302
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3302
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3302
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3302
  call void @llvm.dbg.value(metadata i32 %27, metadata !3220, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8* %26, metadata !3225, metadata !DIExpression()), !dbg !3286
  br i1 %22, label %33, label %28, !dbg !3303

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3305
  %30 = sub i32 4, %17, !dbg !3305
  %31 = add i32 %30, %29, !dbg !3306
  %32 = icmp ugt i32 %31, %27, !dbg !3307
  br i1 %32, label %320, label %33, !dbg !3308

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3309
  call void @llvm.dbg.value(metadata i8* %34, metadata !3222, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8* %3, metadata !3236, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 4, metadata !3227, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 4, metadata !3226, metadata !DIExpression()), !dbg !3286
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3310

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3223, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8* %42, metadata !3222, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8* %43, metadata !3225, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %44, metadata !3226, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %45, metadata !3227, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %72, metadata !3234, metadata !DIExpression()), !dbg !3286
  br i1 %46, label %73, label %47, !dbg !3311

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3312
  %49 = zext i1 %48 to i32, !dbg !3316
  %50 = add nsw i32 %72, %49, !dbg !3316
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3316
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3316
  call void @llvm.dbg.value(metadata i32 %52, metadata !3226, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %51, metadata !3227, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8 poison, metadata !3237, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %50, metadata !3234, metadata !DIExpression()), !dbg !3286
  br label %53, !dbg !3317

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3223, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8* %40, metadata !3222, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8* %58, metadata !3225, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %57, metadata !3226, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %56, metadata !3227, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8 poison, metadata !3237, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %54, metadata !3234, metadata !DIExpression()), !dbg !3286
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3318
  call void @llvm.dbg.value(metadata i8* %60, metadata !3222, metadata !DIExpression()), !dbg !3286
  %61 = load i8, i8* %60, align 1, !dbg !3320
  %62 = icmp eq i8 %61, 0, !dbg !3321
  br i1 %62, label %226, label %63, !dbg !3322, !llvm.loop !3323

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3311

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3326

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3237, metadata !DIExpression()), !dbg !3286
  %75 = add nsw i32 %72, -1, !dbg !3327
  call void @llvm.dbg.value(metadata i32 %75, metadata !3234, metadata !DIExpression()), !dbg !3286
  br label %53, !dbg !3328

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3329

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3227, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 4, metadata !3226, metadata !DIExpression()), !dbg !3286
  br label %53, !dbg !3330

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3227, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 4, metadata !3226, metadata !DIExpression()), !dbg !3286
  br label %53, !dbg !3331

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3332
  %81 = icmp eq i8 %80, 108, !dbg !3334
  br i1 %81, label %82, label %109, !dbg !3335

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3336
  %84 = load i8, i8* %83, align 1, !dbg !3336
  %85 = icmp eq i8 %84, 108, !dbg !3339
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3340
  %89 = add i32 %88, 7, !dbg !3340
  %90 = and i32 %89, -8, !dbg !3340
  %91 = inttoptr i32 %90 to i8*, !dbg !3340
  %92 = inttoptr i32 %90 to double*, !dbg !3340
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3340
  %94 = load double, double* %92, align 8, !dbg !3340
  call void @llvm.dbg.value(metadata i8* %93, metadata !3223, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 8, metadata !3226, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 8, metadata !3227, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata double %94, metadata !3254, metadata !DIExpression()), !dbg !3342
  %95 = ptrtoint i8* %43 to i32, !dbg !3343
  %96 = add i32 %95, 7, !dbg !3343
  %97 = and i32 %96, -8, !dbg !3343
  %98 = inttoptr i32 %97 to i8*, !dbg !3344
  call void @llvm.dbg.value(metadata i8* %98, metadata !3225, metadata !DIExpression()), !dbg !3286
  br i1 %22, label %104, label %99, !dbg !3345

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3346
  %101 = icmp ugt i32 %100, %196, !dbg !3350
  br i1 %101, label %320, label %102, !dbg !3351

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3352
  store double %94, double* %103, align 8, !dbg !3352
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3355
  call void @llvm.dbg.value(metadata i8* %105, metadata !3225, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8 poison, metadata !3237, metadata !DIExpression()), !dbg !3286
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3237, metadata !DIExpression()), !dbg !3286
  br label %53, !dbg !3356

107:                                              ; preds = %73, %73
  br label %109, !dbg !3357

108:                                              ; preds = %73
  br label %109, !dbg !3357

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3286
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3286
  call void @llvm.dbg.value(metadata i32 %113, metadata !3226, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %112, metadata !3227, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8 poison, metadata !3240, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8 poison, metadata !3237, metadata !DIExpression()), !dbg !3286
  %114 = ptrtoint i8* %43 to i32, !dbg !3357
  %115 = add i32 %114, -1, !dbg !3357
  %116 = add i32 %115, %112, !dbg !3357
  %117 = sub i32 0, %112, !dbg !3357
  %118 = and i32 %116, %117, !dbg !3357
  %119 = inttoptr i32 %118 to i8*, !dbg !3358
  call void @llvm.dbg.value(metadata i8* %119, metadata !3225, metadata !DIExpression()), !dbg !3286
  br i1 %22, label %124, label %120, !dbg !3359

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3361
  %122 = add i32 %121, %118, !dbg !3362
  %123 = icmp ugt i32 %122, %196, !dbg !3363
  br i1 %123, label %320, label %124, !dbg !3364

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3365

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3358
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3366
  call void @llvm.dbg.value(metadata i8* %127, metadata !3223, metadata !DIExpression()), !dbg !3286
  %128 = bitcast i8* %41 to i8**, !dbg !3366
  %129 = load i8*, i8** %128, align 4, !dbg !3366
  call void @llvm.dbg.value(metadata i8* %129, metadata !3236, metadata !DIExpression()), !dbg !3286
  br label %130, !dbg !3367

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3286
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3368
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3286
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3369
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3286
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3286
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3286
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3286
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3286
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3286
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3370
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3223, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %142, metadata !3220, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8* %141, metadata !3222, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8* %140, metadata !3225, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %139, metadata !3226, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %138, metadata !3227, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %137, metadata !3231, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %136, metadata !3239, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %135, metadata !3232, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8 poison, metadata !3237, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8* %133, metadata !3236, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %132, metadata !3234, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %131, metadata !3233, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.label(metadata !3285), !dbg !3372
  br i1 %22, label %146, label %144, !dbg !3373

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3374
  store i8* %133, i8** %145, align 4, !dbg !3377
  br label %146, !dbg !3378

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3379
  call void @llvm.dbg.value(metadata i32 %147, metadata !3239, metadata !DIExpression()), !dbg !3286
  %148 = icmp sgt i32 %136, 0, !dbg !3380
  br i1 %148, label %152, label %149, !dbg !3381

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !3382
  %151 = zext i1 %150 to i32, !dbg !3382
  br label %152, !dbg !3381

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3381
  %154 = icmp eq i32 %153, 0, !dbg !3381
  call void @llvm.dbg.value(metadata i1 %154, metadata !3263, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3383
  call void @llvm.dbg.value(metadata i1 %36, metadata !3266, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3383
  %155 = or i1 %36, %154, !dbg !3384
  br i1 %155, label %156, label %192, !dbg !3384

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3385
  %158 = sub i32 %157, %17, !dbg !3385
  %159 = lshr i32 %158, 2, !dbg !3386
  call void @llvm.dbg.value(metadata i32 %159, metadata !3267, metadata !DIExpression()), !dbg !3387
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3388
  br i1 %161, label %162, label %163, !dbg !3388

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #25, !dbg !3390
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i32 0, i32 0)) #25, !dbg !3390
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #25, !dbg !3390
  unreachable, !dbg !3390

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3395
  br i1 %164, label %165, label %166, !dbg !3397

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #25, !dbg !3398
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0)) #25, !dbg !3398
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #25, !dbg !3398
  unreachable, !dbg !3398

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3403

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3404
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3407
  store i8 %168, i8* %169, align 1, !dbg !3408
  %170 = trunc i32 %132 to i8, !dbg !3409
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3410
  store i8 %170, i8* %171, align 1, !dbg !3411
  br i1 %154, label %175, label %172, !dbg !3412

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3413
  store i8 %173, i8* %169, align 1, !dbg !3413
  %174 = add i32 %131, 1, !dbg !3416
  call void @llvm.dbg.value(metadata i32 %174, metadata !3233, metadata !DIExpression()), !dbg !3286
  br label %187, !dbg !3417

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3418
  call void @llvm.dbg.value(metadata i32 %176, metadata !3232, metadata !DIExpression()), !dbg !3286
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3420

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3421
  call void @llvm.dbg.value(metadata i32 %179, metadata !3220, metadata !DIExpression()), !dbg !3286
  br label %187, !dbg !3424

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3425

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3426
  call void @llvm.dbg.value(metadata i32 %182, metadata !3220, metadata !DIExpression()), !dbg !3286
  br label %187, !dbg !3429

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !3430
  %185 = add i32 %142, 2, !dbg !3432
  %186 = add i32 %185, %184, !dbg !3433
  call void @llvm.dbg.value(metadata i32 %186, metadata !3220, metadata !DIExpression()), !dbg !3286
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3286
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3286
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3286
  call void @llvm.dbg.value(metadata i32 %190, metadata !3220, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %189, metadata !3232, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %188, metadata !3233, metadata !DIExpression()), !dbg !3286
  %191 = add nuw nsw i32 %137, 1, !dbg !3434
  call void @llvm.dbg.value(metadata i32 %191, metadata !3231, metadata !DIExpression()), !dbg !3286
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3286
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3369
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3286
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3370
  call void @llvm.dbg.value(metadata i32 %196, metadata !3220, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %195, metadata !3231, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %194, metadata !3232, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %193, metadata !3233, metadata !DIExpression()), !dbg !3286
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3435
  call void @llvm.dbg.value(metadata i8* %197, metadata !3225, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8* %143, metadata !3223, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8* %141, metadata !3222, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %139, metadata !3226, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %138, metadata !3227, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8 poison, metadata !3240, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8 poison, metadata !3237, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %132, metadata !3234, metadata !DIExpression()), !dbg !3286
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3318
  call void @llvm.dbg.value(metadata i8* %198, metadata !3222, metadata !DIExpression()), !dbg !3286
  %199 = load i8, i8* %198, align 1, !dbg !3320
  %200 = icmp eq i8 %199, 0, !dbg !3321
  br i1 %200, label %226, label %63, !dbg !3322

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3436

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3437
  call void @llvm.dbg.value(metadata i8* %203, metadata !3223, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 undef, metadata !3270, metadata !DIExpression()), !dbg !3438
  br i1 %22, label %219, label %204, !dbg !3439

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3437
  %206 = load i32, i32* %205, align 4, !dbg !3437
  call void @llvm.dbg.value(metadata i32 %206, metadata !3270, metadata !DIExpression()), !dbg !3438
  %207 = inttoptr i32 %118 to i32*, !dbg !3440
  store i32 %206, i32* %207, align 4, !dbg !3443
  br label %219, !dbg !3444

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3445
  %210 = add i32 %209, 7, !dbg !3445
  %211 = and i32 %210, -8, !dbg !3445
  %212 = inttoptr i32 %211 to i8*, !dbg !3445
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3445
  call void @llvm.dbg.value(metadata i8* %213, metadata !3223, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i64 undef, metadata !3276, metadata !DIExpression()), !dbg !3446
  br i1 %22, label %219, label %214, !dbg !3447

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3445
  %216 = load i64, i64* %215, align 8, !dbg !3445
  call void @llvm.dbg.value(metadata i64 %216, metadata !3276, metadata !DIExpression()), !dbg !3446
  %217 = inttoptr i32 %118 to i64*, !dbg !3448
  store i64 %216, i64* %217, align 8, !dbg !3453
  br label %219, !dbg !3454

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #25, !dbg !3455
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 noundef %113) #25, !dbg !3455
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #25, !dbg !3455
  unreachable, !dbg !3455

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3460
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3460
  call void @llvm.dbg.value(metadata i8* %221, metadata !3223, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8* %40, metadata !3222, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8* %222, metadata !3225, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %113, metadata !3226, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %112, metadata !3227, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8 poison, metadata !3240, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8 poison, metadata !3237, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %72, metadata !3234, metadata !DIExpression()), !dbg !3286
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3318
  call void @llvm.dbg.value(metadata i8* %223, metadata !3222, metadata !DIExpression()), !dbg !3286
  %224 = load i8, i8* %223, align 1, !dbg !3320
  %225 = icmp eq i8 %224, 0, !dbg !3321
  br i1 %225, label %226, label %38, !dbg !3322

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3461
  %228 = ptrtoint i8* %227 to i32, !dbg !3462
  %229 = sub i32 %228, %17, !dbg !3462
  %230 = lshr i32 %229, 2, !dbg !3464
  %231 = icmp ugt i32 %229, 1023, !dbg !3465
  br i1 %231, label %232, label %233, !dbg !3466

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #25, !dbg !3467
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)) #25, !dbg !3467
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #25, !dbg !3467
  unreachable, !dbg !3467

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3472

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3473
  %236 = add i32 %235, %229, !dbg !3476
  br label %320, !dbg !3477

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3478
  store i8 %238, i8* %0, align 1, !dbg !3479
  %239 = trunc i32 %194 to i8, !dbg !3480
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3482
  store i8 %240, i8* %242, align 1, !dbg !3484
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3485
  store i8 %241, i8* %243, align 1, !dbg !3486
  %244 = trunc i32 %193 to i8, !dbg !3487
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3488
  store i8 %244, i8* %245, align 1, !dbg !3489
  %246 = icmp eq i32 %193, 0, !dbg !3490
  %247 = xor i1 %246, true, !dbg !3491
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3491
  call void @llvm.dbg.value(metadata i8* %227, metadata !3225, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 0, metadata !3235, metadata !DIExpression()), !dbg !3286
  br i1 %249, label %250, label %269, !dbg !3491

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3492

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3225, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %254, metadata !3235, metadata !DIExpression()), !dbg !3286
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3493
  %256 = load i8, i8* %255, align 1, !dbg !3493
  %257 = icmp sgt i8 %256, -1, !dbg !3495
  br i1 %257, label %265, label %258, !dbg !3496

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3279, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3497
  %259 = ptrtoint i8* %253 to i32, !dbg !3498
  %260 = add i32 %251, %259, !dbg !3500
  %261 = icmp ugt i32 %260, %196, !dbg !3501
  br i1 %261, label %320, label %262, !dbg !3502

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3503
  call void @llvm.dbg.value(metadata i8 %263, metadata !3279, metadata !DIExpression()), !dbg !3497
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3504
  call void @llvm.dbg.value(metadata i8* %264, metadata !3225, metadata !DIExpression()), !dbg !3286
  store i8 %263, i8* %253, align 1, !dbg !3505
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3435
  call void @llvm.dbg.value(metadata i8* %266, metadata !3225, metadata !DIExpression()), !dbg !3286
  %267 = add nuw i32 %254, 1, !dbg !3506
  call void @llvm.dbg.value(metadata i32 %267, metadata !3235, metadata !DIExpression()), !dbg !3286
  %268 = icmp eq i32 %267, %195, !dbg !3507
  br i1 %268, label %269, label %252, !dbg !3492, !llvm.loop !3508

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3435
  call void @llvm.dbg.value(metadata i8* %270, metadata !3225, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 0, metadata !3235, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8* %133, metadata !3236, metadata !DIExpression()), !dbg !3286
  %271 = icmp eq i32 %195, 0, !dbg !3510
  br i1 %271, label %316, label %272, !dbg !3513

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3513

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3225, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8* %276, metadata !3236, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %277, metadata !3235, metadata !DIExpression()), !dbg !3286
  br i1 %246, label %282, label %278, !dbg !3514

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3517
  %280 = load i8, i8* %279, align 1, !dbg !3517
  %281 = icmp sgt i8 %280, -1, !dbg !3518
  br i1 %281, label %282, label %311, !dbg !3519

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3520

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3226, metadata !DIExpression()), !dbg !3286
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3521
  %285 = load i8, i8* %284, align 1, !dbg !3521
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3524
  call void @llvm.dbg.value(metadata i8* %286, metadata !3225, metadata !DIExpression()), !dbg !3286
  store i8 %285, i8* %275, align 1, !dbg !3525
  br label %297, !dbg !3526

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3527
  %289 = load i8, i8* %288, align 1, !dbg !3527
  %290 = zext i8 %289 to i32, !dbg !3527
  %291 = shl nuw nsw i32 %290, 2, !dbg !3529
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3530
  %293 = bitcast i8* %292 to i8**, !dbg !3531
  %294 = load i8*, i8** %293, align 4, !dbg !3531
  call void @llvm.dbg.value(metadata i8* %294, metadata !3236, metadata !DIExpression()), !dbg !3286
  store i8* null, i8** %293, align 4, !dbg !3532
  %295 = tail call i32 @strlen(i8* noundef %294) #25, !dbg !3533
  %296 = add i32 %295, 1, !dbg !3534
  call void @llvm.dbg.value(metadata i32 %296, metadata !3226, metadata !DIExpression()), !dbg !3286
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3286
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3535
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3286
  call void @llvm.dbg.value(metadata i8* %300, metadata !3225, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %299, metadata !3226, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8* %298, metadata !3236, metadata !DIExpression()), !dbg !3286
  %301 = ptrtoint i8* %300 to i32, !dbg !3536
  %302 = add i32 %273, %299, !dbg !3538
  %303 = add i32 %302, %301, !dbg !3539
  %304 = icmp ugt i32 %303, %196, !dbg !3540
  br i1 %304, label %320, label %305, !dbg !3541

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3542
  %307 = load i8, i8* %306, align 1, !dbg !3542
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3543
  call void @llvm.dbg.value(metadata i8* %308, metadata !3225, metadata !DIExpression()), !dbg !3286
  store i8 %307, i8* %300, align 1, !dbg !3544
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #25, !dbg !3545
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3546
  call void @llvm.dbg.value(metadata i8* %310, metadata !3225, metadata !DIExpression()), !dbg !3286
  br label %311, !dbg !3547

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3548
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3286
  call void @llvm.dbg.value(metadata i8* %313, metadata !3225, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8* %312, metadata !3236, metadata !DIExpression()), !dbg !3286
  %314 = add nuw i32 %277, 1, !dbg !3549
  call void @llvm.dbg.value(metadata i32 %314, metadata !3235, metadata !DIExpression()), !dbg !3286
  %315 = icmp eq i32 %314, %195, !dbg !3510
  br i1 %315, label %316, label %274, !dbg !3513, !llvm.loop !3550

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3435
  %318 = ptrtoint i8* %317 to i32, !dbg !3552
  %319 = sub i32 %318, %17, !dbg !3552
  br label %320, !dbg !3553

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3554
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3554
  ret i32 %321, !dbg !3554
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3555 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3559, metadata !DIExpression()), !dbg !3560
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !3561
  ret i1 %2, !dbg !3562
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3563 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3566, metadata !DIExpression()), !dbg !3567
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3568
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3569
  %4 = and i1 %2, %3, !dbg !3569
  ret i1 %4, !dbg !3570
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3571 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3575, metadata !DIExpression()), !dbg !3581
  call void @llvm.dbg.value(metadata i32 %1, metadata !3576, metadata !DIExpression()), !dbg !3581
  call void @llvm.dbg.value(metadata i32 %2, metadata !3577, metadata !DIExpression()), !dbg !3581
  call void @llvm.dbg.value(metadata i8* %3, metadata !3578, metadata !DIExpression()), !dbg !3581
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3582
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3582
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3579, metadata !DIExpression()), !dbg !3583
  call void @llvm.va_start(i8* nonnull %6), !dbg !3584
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3585
  %8 = load i32, i32* %7, align 4, !dbg !3585
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3585
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !3585
  call void @llvm.dbg.value(metadata i32 %10, metadata !3580, metadata !DIExpression()), !dbg !3581
  call void @llvm.va_end(i8* nonnull %6), !dbg !3586
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3587
  ret i32 %10, !dbg !3588
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3589 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3601, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3602, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.value(metadata i8* %2, metadata !3603, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.value(metadata i8* %3, metadata !3604, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.value(metadata i8* %3, metadata !3605, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.value(metadata i8* %3, metadata !3606, metadata !DIExpression()), !dbg !3620
  %5 = icmp eq i8* %3, null, !dbg !3621
  br i1 %5, label %45, label %6, !dbg !3623

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3615, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3620
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3624
  %8 = load i8, i8* %7, align 1, !dbg !3624
  %9 = zext i8 %8 to i32, !dbg !3625
  call void @llvm.dbg.value(metadata i32 %9, metadata !3616, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.value(metadata i8 undef, metadata !3617, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3620
  call void @llvm.dbg.value(metadata i8 undef, metadata !3618, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3620
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3612, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3620
  call void @llvm.dbg.value(metadata i32 0, metadata !3614, metadata !DIExpression()), !dbg !3620
  %10 = icmp eq i8 %8, 0, !dbg !3626
  br i1 %10, label %39, label %11, !dbg !3629

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3630
  call void @llvm.dbg.value(metadata i8 %12, metadata !3615, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3620
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3612, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3620
  %13 = zext i8 %12 to i32, !dbg !3631
  call void @llvm.dbg.value(metadata i32 %13, metadata !3615, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3620
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3612, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3620
  %14 = shl nuw nsw i32 %13, 2, !dbg !3632
  call void @llvm.dbg.value(metadata i32 %14, metadata !3615, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3612, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3620
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3633
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3612, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3620
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3634
  %17 = load i8, i8* %16, align 1, !dbg !3634
  call void @llvm.dbg.value(metadata i8 %17, metadata !3617, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3620
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3612, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3620
  %18 = zext i8 %17 to i32, !dbg !3635
  call void @llvm.dbg.value(metadata i32 %18, metadata !3617, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3612, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3620
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3636
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3612, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3620
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3637
  %21 = load i8, i8* %20, align 1, !dbg !3637
  call void @llvm.dbg.value(metadata i8 %21, metadata !3618, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3620
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3612, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3620
  %22 = zext i8 %21 to i32, !dbg !3638
  call void @llvm.dbg.value(metadata i32 %22, metadata !3618, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3612, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3620
  %23 = shl nuw nsw i32 %22, 1, !dbg !3639
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3612, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3620
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3640
  call void @llvm.dbg.value(metadata i8* %24, metadata !3612, metadata !DIExpression()), !dbg !3620
  br label %25, !dbg !3629

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3612, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.value(metadata i32 %27, metadata !3614, metadata !DIExpression()), !dbg !3620
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3641
  call void @llvm.dbg.value(metadata i8* %28, metadata !3612, metadata !DIExpression()), !dbg !3620
  %29 = load i8, i8* %26, align 1, !dbg !3643
  %30 = zext i8 %29 to i32, !dbg !3643
  call void @llvm.dbg.value(metadata i32 %30, metadata !3619, metadata !DIExpression()), !dbg !3620
  %31 = shl nuw nsw i32 %30, 2, !dbg !3644
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3645
  %33 = bitcast i8* %32 to i8**, !dbg !3646
  call void @llvm.dbg.value(metadata i8** %33, metadata !3613, metadata !DIExpression()), !dbg !3620
  store i8* %28, i8** %33, align 4, !dbg !3647
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !3648
  %35 = add i32 %34, 1, !dbg !3649
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3650
  call void @llvm.dbg.value(metadata i8* %36, metadata !3612, metadata !DIExpression()), !dbg !3620
  %37 = add nuw nsw i32 %27, 1, !dbg !3651
  call void @llvm.dbg.value(metadata i32 %37, metadata !3614, metadata !DIExpression()), !dbg !3620
  %38 = icmp eq i32 %37, %9, !dbg !3626
  br i1 %38, label %39, label %25, !dbg !3629, !llvm.loop !3652

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3654
  call void @llvm.dbg.value(metadata i8* %40, metadata !3605, metadata !DIExpression()), !dbg !3620
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3655
  %42 = bitcast i8* %41 to i8**, !dbg !3655
  %43 = load i8*, i8** %42, align 1, !dbg !3655
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !3656
  br label %45, !dbg !3657

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3620
  ret i32 %46, !dbg !3658
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3659 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3663, metadata !DIExpression()), !dbg !3673
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3664, metadata !DIExpression()), !dbg !3673
  call void @llvm.dbg.value(metadata i8* %2, metadata !3665, metadata !DIExpression()), !dbg !3673
  call void @llvm.dbg.value(metadata i8* %3, metadata !3666, metadata !DIExpression()), !dbg !3673
  call void @llvm.dbg.value(metadata i8* %4, metadata !3667, metadata !DIExpression()), !dbg !3673
  call void @llvm.dbg.value(metadata i8* %4, metadata !3668, metadata !DIExpression()), !dbg !3673
  %6 = ptrtoint i8* %4 to i32, !dbg !3674
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3674
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !3674
  ret i32 %8, !dbg !3675
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !3676 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3680, metadata !DIExpression()), !dbg !3685
  call void @llvm.dbg.value(metadata i32 %1, metadata !3681, metadata !DIExpression()), !dbg !3685
  call void @llvm.dbg.value(metadata i8 0, metadata !3683, metadata !DIExpression()), !dbg !3685
  call void @llvm.dbg.value(metadata i32 0, metadata !3684, metadata !DIExpression()), !dbg !3685
  call void @llvm.dbg.value(metadata i8 poison, metadata !3683, metadata !DIExpression()), !dbg !3685
  call void @llvm.dbg.value(metadata i8* %0, metadata !3680, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3685
  %3 = load i8, i8* %0, align 1, !dbg !3686
  call void @llvm.dbg.value(metadata i8 %3, metadata !3682, metadata !DIExpression()), !dbg !3685
  %4 = icmp eq i8 %3, 0, !dbg !3687
  br i1 %4, label %29, label %5, !dbg !3688

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3689
  call void @llvm.dbg.value(metadata i32 %8, metadata !3684, metadata !DIExpression()), !dbg !3685
  br i1 %9, label %11, label %22, !dbg !3690

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3692
  br i1 %12, label %13, label %17, !dbg !3696

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3697
  br i1 %14, label %29, label %15, !dbg !3700

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3701
  br i1 %16, label %29, label %22, !dbg !3703

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3704
  %19 = xor i1 %18, true, !dbg !3706
  %20 = zext i1 %18 to i32, !dbg !3706
  %21 = add nsw i32 %8, %20, !dbg !3706
  br label %22, !dbg !3706

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3685
  call void @llvm.dbg.value(metadata i32 %24, metadata !3684, metadata !DIExpression()), !dbg !3685
  call void @llvm.dbg.value(metadata i8 poison, metadata !3683, metadata !DIExpression()), !dbg !3685
  %25 = icmp eq i8 %6, 37, !dbg !3707
  %26 = xor i1 %25, %23, !dbg !3709
  call void @llvm.dbg.value(metadata i8* %10, metadata !3680, metadata !DIExpression()), !dbg !3685
  call void @llvm.dbg.value(metadata i8* %10, metadata !3680, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3685
  %27 = load i8, i8* %10, align 1, !dbg !3686
  call void @llvm.dbg.value(metadata i8 %27, metadata !3682, metadata !DIExpression()), !dbg !3685
  %28 = icmp eq i8 %27, 0, !dbg !3687
  br i1 %28, label %29, label %5, !dbg !3688, !llvm.loop !3710

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3685
  ret i1 %30, !dbg !3712
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #4 !dbg !3713 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3717, metadata !DIExpression()), !dbg !3718
  %2 = add i8 %0, -64, !dbg !3719
  %3 = icmp ult i8 %2, 59, !dbg !3719
  ret i1 %3, !dbg !3720
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3721 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3729, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i32 %1, metadata !3730, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3731, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i8* %3, metadata !3732, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i32 %4, metadata !3733, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i16* %5, metadata !3734, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i32 %6, metadata !3735, metadata !DIExpression()), !dbg !3798
  %11 = icmp eq i8* %0, null, !dbg !3799
  br i1 %11, label %12, label %13, !dbg !3802

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #25, !dbg !3803
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #25, !dbg !3803
  unreachable, !dbg !3803

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3736, metadata !DIExpression()), !dbg !3798
  %14 = bitcast i8* %0 to i32*, !dbg !3805
  call void @llvm.dbg.value(metadata i32* %14, metadata !3737, metadata !DIExpression()), !dbg !3798
  %15 = and i32 %4, 8, !dbg !3806
  %16 = icmp eq i32 %15, 0, !dbg !3807
  call void @llvm.dbg.value(metadata i1 %16, metadata !3741, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3798
  call void @llvm.dbg.value(metadata i8* %0, metadata !3744, metadata !DIExpression()), !dbg !3798
  %17 = icmp eq i32 %1, 0, !dbg !3808
  br i1 %17, label %18, label %20, !dbg !3809

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #24, !dbg !3810
  br label %20, !dbg !3809

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3809
  call void @llvm.dbg.value(metadata i32 %21, metadata !3730, metadata !DIExpression()), !dbg !3798
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3811
  %23 = load i8, i8* %22, align 1, !dbg !3811
  %24 = zext i8 %23 to i32, !dbg !3812
  call void @llvm.dbg.value(metadata i32 %24, metadata !3739, metadata !DIExpression()), !dbg !3798
  %25 = icmp ne i8 %23, 0, !dbg !3813
  %26 = and i32 %4, 1, !dbg !3814
  %27 = icmp ne i32 %26, 0, !dbg !3814
  %28 = and i1 %27, %25, !dbg !3814
  call void @llvm.dbg.value(metadata i1 %28, metadata !3743, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3798
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3815
  %30 = load i8, i8* %29, align 1, !dbg !3815
  %31 = zext i8 %30 to i32, !dbg !3816
  call void @llvm.dbg.value(metadata i32 %31, metadata !3740, metadata !DIExpression()), !dbg !3798
  %32 = icmp ne i8 %30, 0, !dbg !3817
  %33 = and i32 %4, 2, !dbg !3818
  %34 = icmp ne i32 %33, 0, !dbg !3818
  %35 = and i1 %34, %32, !dbg !3818
  call void @llvm.dbg.value(metadata i1 %35, metadata !3742, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3798
  %36 = select i1 %35, i1 true, i1 %28, !dbg !3819
  br i1 %36, label %41, label %37, !dbg !3819

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3821
  br i1 %38, label %287, label %39, !dbg !3824

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #25, !dbg !3825
  br label %287, !dbg !3827

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !3828
  %43 = zext i8 %42 to i32, !dbg !3829
  %44 = shl nuw nsw i32 %43, 2, !dbg !3830
  call void @llvm.dbg.value(metadata i32 %44, metadata !3738, metadata !DIExpression()), !dbg !3798
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3831
  %46 = bitcast i8* %45 to i8**, !dbg !3832
  %47 = load i8*, i8** %46, align 4, !dbg !3832
  call void @llvm.dbg.value(metadata i8* %47, metadata !3747, metadata !DIExpression()), !dbg !3798
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !3833
  call void @llvm.dbg.value(metadata i8* %48, metadata !3748, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i32 0, metadata !3749, metadata !DIExpression()), !dbg !3798
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3834
  br i1 %49, label %50, label %135, !dbg !3835

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3746, metadata !DIExpression()), !dbg !3798
  br i1 %28, label %51, label %76, !dbg !3836

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3746, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i8* %48, metadata !3748, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i32 0, metadata !3749, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i32 0, metadata !3750, metadata !DIExpression()), !dbg !3837
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !3838

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3746, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i8* %55, metadata !3748, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i32 %56, metadata !3749, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i32 %57, metadata !3750, metadata !DIExpression()), !dbg !3837
  %58 = load i8, i8* %55, align 1, !dbg !3839
  %59 = zext i8 %58 to i32, !dbg !3840
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !3840
  %61 = bitcast i32* %60 to i8**, !dbg !3841
  %62 = load i8*, i8** %61, align 4, !dbg !3841
  call void @llvm.dbg.value(metadata i8* %62, metadata !3756, metadata !DIExpression()), !dbg !3842
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #24, !dbg !3843
  call void @llvm.dbg.value(metadata i32 %63, metadata !3759, metadata !DIExpression()), !dbg !3842
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !3844
  br i1 %65, label %66, label %70, !dbg !3844

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !3846
  %68 = add nuw i32 %56, 1, !dbg !3848
  call void @llvm.dbg.value(metadata i32 %68, metadata !3749, metadata !DIExpression()), !dbg !3798
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !3849
  store i16 %67, i16* %69, align 2, !dbg !3850
  br label %70, !dbg !3851

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3798
  call void @llvm.dbg.value(metadata i32 %71, metadata !3749, metadata !DIExpression()), !dbg !3798
  %72 = add nsw i32 %63, %54, !dbg !3852
  call void @llvm.dbg.value(metadata i32 %72, metadata !3746, metadata !DIExpression()), !dbg !3798
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !3853
  call void @llvm.dbg.value(metadata i8* %73, metadata !3748, metadata !DIExpression()), !dbg !3798
  %74 = add nuw nsw i32 %57, 1, !dbg !3854
  call void @llvm.dbg.value(metadata i32 %74, metadata !3750, metadata !DIExpression()), !dbg !3837
  %75 = icmp eq i32 %74, %24, !dbg !3855
  br i1 %75, label %82, label %53, !dbg !3838, !llvm.loop !3856

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !3858
  %80 = select i1 %79, i32 %24, i32 0, !dbg !3858
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !3858
  br label %82, !dbg !3858

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !3861
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3798
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !3862
  call void @llvm.dbg.value(metadata i1 undef, metadata !3760, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3863
  call void @llvm.dbg.value(metadata i32 0, metadata !3761, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata i32 %85, metadata !3746, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i8* %84, metadata !3748, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i32 %83, metadata !3749, metadata !DIExpression()), !dbg !3798
  %86 = icmp eq i8 %30, 0, !dbg !3865
  br i1 %86, label %287, label %87, !dbg !3866

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !3867
  %89 = icmp eq i32 %88, 0, !dbg !3868
  call void @llvm.dbg.value(metadata i1 %89, metadata !3760, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3863
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !3866

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3746, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i8* %96, metadata !3748, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i32 %97, metadata !3749, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i32 %98, metadata !3761, metadata !DIExpression()), !dbg !3864
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !3869
  call void @llvm.dbg.value(metadata i8* %99, metadata !3748, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i8 undef, metadata !3763, metadata !DIExpression()), !dbg !3870
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !3871
  call void @llvm.dbg.value(metadata i8* %100, metadata !3748, metadata !DIExpression()), !dbg !3798
  %101 = load i8, i8* %99, align 1, !dbg !3872
  call void @llvm.dbg.value(metadata i8 %101, metadata !3766, metadata !DIExpression()), !dbg !3870
  %102 = zext i8 %101 to i32, !dbg !3873
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !3873
  %104 = bitcast i32* %103 to i8**, !dbg !3874
  %105 = load i8*, i8** %104, align 4, !dbg !3874
  call void @llvm.dbg.value(metadata i8* %105, metadata !3767, metadata !DIExpression()), !dbg !3870
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #24, !dbg !3875
  call void @llvm.dbg.value(metadata i1 %106, metadata !3768, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3870
  br i1 %16, label %113, label %107, !dbg !3876

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !3878
  call void @llvm.dbg.value(metadata i8 %108, metadata !3763, metadata !DIExpression()), !dbg !3870
  %109 = zext i8 %108 to i32, !dbg !3879
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #24, !dbg !3880
  br i1 %110, label %111, label %113, !dbg !3881

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #25, !dbg !3882
  %112 = add nsw i32 %95, -2, !dbg !3888
  call void @llvm.dbg.value(metadata i32 %112, metadata !3746, metadata !DIExpression()), !dbg !3798
  br label %130, !dbg !3889

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !3890

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !3891

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !3893
  call void @llvm.dbg.value(metadata i32 %116, metadata !3746, metadata !DIExpression()), !dbg !3798
  br label %130, !dbg !3896

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !3897

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3794), !dbg !3898
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #24, !dbg !3899
  call void @llvm.dbg.value(metadata i32 %119, metadata !3769, metadata !DIExpression()), !dbg !3870
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !3900
  br i1 %121, label %122, label %126, !dbg !3900

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !3902
  %124 = add nuw i32 %97, 1, !dbg !3904
  call void @llvm.dbg.value(metadata i32 %124, metadata !3749, metadata !DIExpression()), !dbg !3798
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !3905
  store i16 %123, i16* %125, align 2, !dbg !3906
  br label %126, !dbg !3907

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3798
  call void @llvm.dbg.value(metadata i32 %127, metadata !3749, metadata !DIExpression()), !dbg !3798
  %128 = add i32 %95, -1, !dbg !3908
  %129 = add i32 %128, %119, !dbg !3909
  call void @llvm.dbg.value(metadata i32 %129, metadata !3746, metadata !DIExpression()), !dbg !3798
  br label %130, !dbg !3910

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3798
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !3870
  call void @llvm.dbg.value(metadata i32 %132, metadata !3746, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i32 %131, metadata !3749, metadata !DIExpression()), !dbg !3798
  %133 = add nuw nsw i32 %98, 1, !dbg !3911
  call void @llvm.dbg.value(metadata i8* %100, metadata !3748, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i32 %133, metadata !3761, metadata !DIExpression()), !dbg !3864
  %134 = icmp eq i32 %133, %31, !dbg !3865
  br i1 %134, label %287, label %94, !dbg !3866, !llvm.loop !3912

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3771, metadata !DIExpression()), !dbg !3914
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3772, metadata !DIExpression()), !dbg !3915
  br i1 %28, label %136, label %138, !dbg !3916

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3773, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i8 0, metadata !3774, metadata !DIExpression()), !dbg !3798
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !3917
  call void @llvm.dbg.value(metadata i8* %137, metadata !3775, metadata !DIExpression()), !dbg !3798
  br label %143, !dbg !3920

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !3921
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !3921

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3775, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i8 undef, metadata !3774, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i8 0, metadata !3773, metadata !DIExpression()), !dbg !3798
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #25, !dbg !3923
  br label %148, !dbg !3926

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !3927
  call void @llvm.dbg.value(metadata i8* %151, metadata !3748, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i32 0, metadata !3777, metadata !DIExpression()), !dbg !3928
  call void @llvm.dbg.value(metadata i8 %149, metadata !3774, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i8 %150, metadata !3773, metadata !DIExpression()), !dbg !3798
  %152 = icmp eq i8 %30, 0, !dbg !3929
  br i1 %152, label %153, label %155, !dbg !3930

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !3931
  br label %160, !dbg !3930

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !3930

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !3931
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !3932
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !3933
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3798
  call void @llvm.dbg.value(metadata i8 undef, metadata !3770, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3798
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3934
  %166 = load i8, i8* %165, align 1, !dbg !3934
  %167 = zext i8 %162 to i32, !dbg !3935
  %168 = add i8 %166, %162, !dbg !3936
  call void @llvm.dbg.value(metadata i8 %168, metadata !3770, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3798
  %169 = icmp eq i32 %33, 0, !dbg !3937
  %170 = lshr i8 %163, 1, !dbg !3938
  %171 = select i1 %169, i8 %170, i8 0, !dbg !3938
  call void @llvm.dbg.value(metadata i8 %171, metadata !3770, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3798
  %172 = icmp eq i32 %26, 0, !dbg !3939
  %173 = icmp eq i32 %161, 0, !dbg !3931
  %174 = select i1 %173, i8 0, i8 %163, !dbg !3931
  %175 = select i1 %172, i8 %174, i8 0, !dbg !3931
  call void @llvm.dbg.value(metadata i8 %175, metadata !3770, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3798
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3785, metadata !DIExpression()), !dbg !3940
  %176 = load i32, i32* %14, align 1, !dbg !3941
  store i8 %168, i8* %165, align 1, !dbg !3942
  store i8 %175, i8* %22, align 1, !dbg !3942
  store i8 %171, i8* %29, align 1, !dbg !3942
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #25, !dbg !3943
  call void @llvm.dbg.value(metadata i32 %177, metadata !3776, metadata !DIExpression()), !dbg !3798
  %178 = icmp slt i32 %177, 0, !dbg !3944
  br i1 %178, label %287, label %240, !dbg !3946

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3748, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i32 %181, metadata !3777, metadata !DIExpression()), !dbg !3928
  call void @llvm.dbg.value(metadata i8 %182, metadata !3774, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i8 %183, metadata !3773, metadata !DIExpression()), !dbg !3798
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !3947
  call void @llvm.dbg.value(metadata i8* %184, metadata !3748, metadata !DIExpression()), !dbg !3798
  %185 = load i8, i8* %180, align 1, !dbg !3948
  call void @llvm.dbg.value(metadata i8 %185, metadata !3779, metadata !DIExpression()), !dbg !3949
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !3950
  call void @llvm.dbg.value(metadata i8* %186, metadata !3748, metadata !DIExpression()), !dbg !3798
  %187 = load i8, i8* %184, align 1, !dbg !3951
  call void @llvm.dbg.value(metadata i8 %187, metadata !3782, metadata !DIExpression()), !dbg !3949
  %188 = zext i8 %187 to i32, !dbg !3952
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !3952
  %190 = bitcast i32* %189 to i8**, !dbg !3953
  %191 = load i8*, i8** %190, align 4, !dbg !3953
  call void @llvm.dbg.value(metadata i8* %191, metadata !3783, metadata !DIExpression()), !dbg !3949
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #24, !dbg !3954
  call void @llvm.dbg.value(metadata i1 %192, metadata !3784, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3949
  br i1 %16, label %196, label %193, !dbg !3955

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !3957
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #24, !dbg !3958
  br i1 %195, label %235, label %196, !dbg !3959

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !3960

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !3961

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !3964
  br i1 %199, label %201, label %200, !dbg !3969

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #25, !dbg !3970
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #25, !dbg !3970
  unreachable, !dbg !3970

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !3964
  %203 = add nuw nsw i8 %183, 1, !dbg !3972
  call void @llvm.dbg.value(metadata i8 %203, metadata !3773, metadata !DIExpression()), !dbg !3798
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !3973
  br label %231, !dbg !3974

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !3975

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !3976
  br i1 %207, label %209, label %208, !dbg !3981

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #25, !dbg !3982
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #25, !dbg !3982
  unreachable, !dbg !3982

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !3976
  %211 = add nuw nsw i8 %182, 1, !dbg !3984
  call void @llvm.dbg.value(metadata i8 %211, metadata !3774, metadata !DIExpression()), !dbg !3798
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !3985
  br label %231, !dbg !3986

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !3987

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !3989
  br i1 %215, label %217, label %216, !dbg !3994

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #25, !dbg !3995
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #25, !dbg !3995
  unreachable, !dbg !3995

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !3989
  %219 = add nuw nsw i8 %183, 1, !dbg !3997
  call void @llvm.dbg.value(metadata i8 %219, metadata !3773, metadata !DIExpression()), !dbg !3798
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !3998
  br label %231, !dbg !3999

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4000
  br i1 %222, label %224, label %223, !dbg !4004

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4005
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4005
  unreachable, !dbg !4005

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4000
  %226 = add nuw nsw i8 %182, 1, !dbg !4007
  call void @llvm.dbg.value(metadata i8 %226, metadata !3774, metadata !DIExpression()), !dbg !3798
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4008
  store i8 %185, i8* %227, align 1, !dbg !4009
  %228 = add nuw nsw i8 %182, 2, !dbg !4010
  call void @llvm.dbg.value(metadata i8 %228, metadata !3774, metadata !DIExpression()), !dbg !3798
  %229 = zext i8 %226 to i32, !dbg !4011
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4011
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4012
  br label %235, !dbg !4013

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3798
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !3933
  call void @llvm.dbg.value(metadata i8 %237, metadata !3774, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i8 %236, metadata !3773, metadata !DIExpression()), !dbg !3798
  %238 = add nuw nsw i32 %181, 1, !dbg !4013
  call void @llvm.dbg.value(metadata i8* %186, metadata !3748, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i32 %238, metadata !3777, metadata !DIExpression()), !dbg !3928
  %239 = icmp eq i32 %238, %31, !dbg !3929
  br i1 %239, label %160, label %179, !dbg !3930, !llvm.loop !4014

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !3938
  call void @llvm.dbg.value(metadata i32 %177, metadata !3746, metadata !DIExpression()), !dbg !3798
  store i32 %176, i32* %14, align 1, !dbg !4016
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4017
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #25, !dbg !4018
  call void @llvm.dbg.value(metadata i32 %243, metadata !3776, metadata !DIExpression()), !dbg !3798
  %244 = icmp slt i32 %243, 0, !dbg !4019
  br i1 %244, label %287, label %245, !dbg !4021

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3746, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3798
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4022
  %248 = add nuw nsw i32 %44, %24, !dbg !4022
  %249 = sub i32 %247, %248, !dbg !4022
  call void @llvm.dbg.value(metadata i32 %249, metadata !3786, metadata !DIExpression()), !dbg !3798
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #25, !dbg !4023
  call void @llvm.dbg.value(metadata i32 %250, metadata !3776, metadata !DIExpression()), !dbg !3798
  %251 = icmp slt i32 %250, 0, !dbg !4024
  br i1 %251, label %287, label %252, !dbg !4026

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4027
  call void @llvm.dbg.value(metadata i32 %253, metadata !3746, metadata !DIExpression()), !dbg !3798
  %254 = add nuw nsw i32 %253, %250, !dbg !4028
  call void @llvm.dbg.value(metadata i32 %254, metadata !3746, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i32 0, metadata !3787, metadata !DIExpression()), !dbg !4029
  %255 = icmp eq i8 %162, 0, !dbg !4030
  br i1 %255, label %284, label %256, !dbg !4031

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4031

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3787, metadata !DIExpression()), !dbg !4029
  call void @llvm.dbg.value(metadata i32 %260, metadata !3746, metadata !DIExpression()), !dbg !3798
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4032
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4033
  %262 = load i8, i8* %261, align 1, !dbg !4033
  call void @llvm.dbg.value(metadata i8 %262, metadata !3789, metadata !DIExpression()), !dbg !4034
  store i8 %262, i8* %10, align 1, !dbg !4035
  %263 = zext i8 %262 to i32, !dbg !4036
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4036
  %265 = bitcast i32* %264 to i8**, !dbg !4037
  %266 = load i8*, i8** %265, align 4, !dbg !4037
  call void @llvm.dbg.value(metadata i8* %266, metadata !3792, metadata !DIExpression()), !dbg !4034
  br i1 %257, label %270, label %267, !dbg !4038

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4039
  %269 = load i16, i16* %268, align 2, !dbg !4039
  br label %270, !dbg !4038

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4038
  call void @llvm.dbg.value(metadata i32 undef, metadata !3793, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4034
  call void @llvm.dbg.value(metadata i8* %10, metadata !3789, metadata !DIExpression(DW_OP_deref)), !dbg !4034
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4040
  call void @llvm.dbg.value(metadata i32 %272, metadata !3776, metadata !DIExpression()), !dbg !3798
  %273 = icmp slt i32 %272, 0, !dbg !4041
  br i1 %273, label %277, label %274, !dbg !4043

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3793, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3746, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3798
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #24, !dbg !4044
  call void @llvm.dbg.value(metadata i32 %275, metadata !3776, metadata !DIExpression()), !dbg !3798
  %276 = icmp slt i32 %275, 0, !dbg !4045
  br i1 %276, label %277, label %279, !dbg !4047

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3746, metadata !DIExpression()), !dbg !3798
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4048
  call void @llvm.dbg.value(metadata i32 undef, metadata !3746, metadata !DIExpression()), !dbg !3798
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4049
  call void @llvm.dbg.value(metadata i32 %280, metadata !3746, metadata !DIExpression()), !dbg !3798
  %281 = add nsw i32 %280, %275, !dbg !4050
  call void @llvm.dbg.value(metadata i32 %281, metadata !3746, metadata !DIExpression()), !dbg !3798
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4048
  %282 = add nuw nsw i32 %259, 1, !dbg !4051
  call void @llvm.dbg.value(metadata i32 %282, metadata !3787, metadata !DIExpression()), !dbg !4029
  %283 = icmp eq i32 %282, %167, !dbg !4030
  br i1 %283, label %284, label %258, !dbg !4031, !llvm.loop !4052

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4028
  call void @llvm.dbg.value(metadata i32 %285, metadata !3746, metadata !DIExpression()), !dbg !3798
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4054
  br label %287, !dbg !4055

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3798
  ret i32 %288, !dbg !4056
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4057 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4061, metadata !DIExpression()), !dbg !4069
  %2 = icmp eq i8* %0, null, !dbg !4070
  br i1 %2, label %3, label %4, !dbg !4073

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #25, !dbg !4074
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #25, !dbg !4074
  unreachable, !dbg !4074

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4062, metadata !DIExpression()), !dbg !4069
  call void @llvm.dbg.value(metadata i8* %0, metadata !4063, metadata !DIExpression()), !dbg !4069
  %5 = load i8, i8* %0, align 1, !dbg !4076
  %6 = zext i8 %5 to i32, !dbg !4076
  %7 = shl nuw nsw i32 %6, 2, !dbg !4077
  call void @llvm.dbg.value(metadata i32 %7, metadata !4064, metadata !DIExpression()), !dbg !4069
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4078
  %9 = load i8, i8* %8, align 1, !dbg !4078
  %10 = zext i8 %9 to i32, !dbg !4078
  call void @llvm.dbg.value(metadata i32 %10, metadata !4065, metadata !DIExpression()), !dbg !4069
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4079
  %12 = load i8, i8* %11, align 1, !dbg !4079
  %13 = zext i8 %12 to i32, !dbg !4079
  call void @llvm.dbg.value(metadata i32 %13, metadata !4066, metadata !DIExpression()), !dbg !4069
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4080
  call void @llvm.dbg.value(metadata i8* %14, metadata !4062, metadata !DIExpression()), !dbg !4069
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4081
  call void @llvm.dbg.value(metadata i8* %15, metadata !4062, metadata !DIExpression()), !dbg !4069
  call void @llvm.dbg.value(metadata i32 0, metadata !4067, metadata !DIExpression()), !dbg !4082
  %16 = icmp eq i8 %9, 0, !dbg !4083
  br i1 %16, label %17, label %22, !dbg !4085

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4069
  %19 = ptrtoint i8* %18 to i32, !dbg !4086
  %20 = ptrtoint i8* %0 to i32, !dbg !4086
  %21 = sub i32 %19, %20, !dbg !4086
  ret i32 %21, !dbg !4087

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4067, metadata !DIExpression()), !dbg !4082
  call void @llvm.dbg.value(metadata i8* %24, metadata !4062, metadata !DIExpression()), !dbg !4069
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4088
  call void @llvm.dbg.value(metadata i8* %25, metadata !4062, metadata !DIExpression()), !dbg !4069
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #25, !dbg !4090
  %27 = add i32 %26, 1, !dbg !4091
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4092
  call void @llvm.dbg.value(metadata i8* %28, metadata !4062, metadata !DIExpression()), !dbg !4069
  %29 = add nuw nsw i32 %23, 1, !dbg !4093
  call void @llvm.dbg.value(metadata i32 %29, metadata !4067, metadata !DIExpression()), !dbg !4082
  %30 = icmp eq i32 %29, %10, !dbg !4083
  br i1 %30, label %17, label %22, !dbg !4085, !llvm.loop !4094
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4096 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4100, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i8* %1, metadata !4101, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i8* %2, metadata !4102, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i16 %3, metadata !4103, metadata !DIExpression()), !dbg !4104
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4105
  br i1 %5, label %6, label %9, !dbg !4107

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4108
  %8 = add i32 %7, 1, !dbg !4110
  br label %20, !dbg !4111

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4112
  br i1 %10, label %13, label %11, !dbg !4113

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4113
  br label %16, !dbg !4113

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4114
  %15 = add i32 %14, 1, !dbg !4115
  br label %16, !dbg !4113

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4113
  %18 = and i32 %17, 65535, !dbg !4116
  call void @llvm.dbg.value(metadata i32 %17, metadata !4103, metadata !DIExpression()), !dbg !4104
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4117
  br label %20, !dbg !4118

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4104
  ret i32 %21, !dbg !4119
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4120 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4122, metadata !DIExpression()), !dbg !4123
  ret i32 0, !dbg !4124
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !4125 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4129, metadata !DIExpression()), !dbg !4130
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4131
  ret void, !dbg !4132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !4133 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4134
  ret i8* %1, !dbg !4135
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4136 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4147, metadata !DIExpression()), !dbg !4158
  call void @llvm.dbg.value(metadata i8* %0, metadata !4146, metadata !DIExpression()), !dbg !4158
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !4159
  ret void, !dbg !4161
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4162 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4166, metadata !DIExpression()), !dbg !4168
  call void @llvm.dbg.value(metadata i8* %1, metadata !4167, metadata !DIExpression()), !dbg !4168
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4169
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !4169
  ret i32 %4, !dbg !4170
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4171 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4178, metadata !DIExpression()), !dbg !4179
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4175, metadata !DIExpression()), !dbg !4179
  call void @llvm.dbg.value(metadata i8* %1, metadata !4176, metadata !DIExpression()), !dbg !4179
  call void @llvm.dbg.value(metadata i8* %2, metadata !4177, metadata !DIExpression()), !dbg !4179
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !4180
  ret void, !dbg !4181
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4182 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4186, metadata !DIExpression()), !dbg !4189
  call void @llvm.dbg.value(metadata i32 %1, metadata !4187, metadata !DIExpression()), !dbg !4189
  call void @llvm.dbg.value(metadata i32 0, metadata !4188, metadata !DIExpression()), !dbg !4189
  %3 = icmp eq i32 %1, 0, !dbg !4190
  br i1 %3, label %13, label %4, !dbg !4193

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4188, metadata !DIExpression()), !dbg !4189
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4194
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4196
  %8 = load i8, i8* %7, align 1, !dbg !4196
  %9 = zext i8 %8 to i32, !dbg !4196
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !4194
  %11 = add nuw i32 %5, 1, !dbg !4197
  call void @llvm.dbg.value(metadata i32 %11, metadata !4188, metadata !DIExpression()), !dbg !4189
  %12 = icmp eq i32 %11, %1, !dbg !4190
  br i1 %12, label %13, label %4, !dbg !4193, !llvm.loop !4198

13:                                               ; preds = %4, %2
  ret void, !dbg !4200
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4201 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4205, metadata !DIExpression()), !dbg !4207
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4208
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4208
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4206, metadata !DIExpression()), !dbg !4209
  call void @llvm.va_start(i8* nonnull %3), !dbg !4210
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4211
  %5 = load i32, i32* %4, align 4, !dbg !4211
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4211
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !4211
  call void @llvm.va_end(i8* nonnull %3), !dbg !4212
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4213
  ret void, !dbg !4213
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4214 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4218, metadata !DIExpression()), !dbg !4223
  call void @llvm.dbg.value(metadata i32 %1, metadata !4219, metadata !DIExpression()), !dbg !4223
  call void @llvm.dbg.value(metadata i8* %2, metadata !4220, metadata !DIExpression()), !dbg !4223
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4224
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4224
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4221, metadata !DIExpression()), !dbg !4225
  call void @llvm.va_start(i8* nonnull %5), !dbg !4226
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4227
  %7 = load i32, i32* %6, align 4, !dbg !4227
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4227
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !4227
  call void @llvm.dbg.value(metadata i32 %9, metadata !4222, metadata !DIExpression()), !dbg !4223
  call void @llvm.va_end(i8* nonnull %5), !dbg !4228
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4229
  ret i32 %9, !dbg !4230
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4231 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4238, metadata !DIExpression()), !dbg !4245
  call void @llvm.dbg.value(metadata i8* %0, metadata !4235, metadata !DIExpression()), !dbg !4245
  call void @llvm.dbg.value(metadata i32 %1, metadata !4236, metadata !DIExpression()), !dbg !4245
  call void @llvm.dbg.value(metadata i8* %2, metadata !4237, metadata !DIExpression()), !dbg !4245
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4246
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4246
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4239, metadata !DIExpression()), !dbg !4247
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4248
  store i8* %0, i8** %7, align 4, !dbg !4248
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4248
  store i32 %1, i32* %8, align 4, !dbg !4248
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4248
  store i32 0, i32* %9, align 4, !dbg !4248
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !4249
  %10 = load i32, i32* %9, align 4, !dbg !4250
  %11 = load i32, i32* %8, align 4, !dbg !4252
  %12 = icmp slt i32 %10, %11, !dbg !4253
  br i1 %12, label %13, label %15, !dbg !4254

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4255
  store i8 0, i8* %14, align 1, !dbg !4257
  br label %15, !dbg !4258

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4259
  ret i32 %10, !dbg !4260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4261 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4266, metadata !DIExpression()), !dbg !4268
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4267, metadata !DIExpression()), !dbg !4268
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4269
  %4 = load i8*, i8** %3, align 4, !dbg !4269
  %5 = icmp eq i8* %4, null, !dbg !4271
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4272
  br i1 %5, label %12, label %8, !dbg !4273

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4274
  %10 = load i32, i32* %9, align 4, !dbg !4274
  %11 = icmp slt i32 %7, %10, !dbg !4275
  br i1 %11, label %15, label %12, !dbg !4276

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4277
  %14 = add nsw i32 %7, 1, !dbg !4279
  store i32 %14, i32* %13, align 4, !dbg !4279
  br label %25, !dbg !4280

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4281
  %17 = icmp eq i32 %7, %16, !dbg !4283
  br i1 %17, label %18, label %21, !dbg !4284

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4285
  store i32 %19, i32* %6, align 4, !dbg !4285
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4287
  store i8 0, i8* %20, align 1, !dbg !4288
  br label %25, !dbg !4289

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4290
  %23 = add nsw i32 %7, 1, !dbg !4292
  store i32 %23, i32* %6, align 4, !dbg !4292
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4293
  store i8 %22, i8* %24, align 1, !dbg !4294
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4295
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4296 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4301, metadata !DIExpression()), !dbg !4305
  call void @llvm.dbg.value(metadata i8* %1, metadata !4302, metadata !DIExpression()), !dbg !4305
  call void @llvm.dbg.value(metadata i8* %2, metadata !4303, metadata !DIExpression()), !dbg !4305
  call void @llvm.dbg.value(metadata i8* %3, metadata !4304, metadata !DIExpression()), !dbg !4305
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !4306
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4307
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4308
  unreachable, !dbg !4309
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4310 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4417
  ret %struct.k_thread* %1, !dbg !4418
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4419 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4424, metadata !DIExpression()), !dbg !4425
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4426, !srcloc !4428
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !4429
  ret void, !dbg !4430
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4431 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4432, !srcloc !4434
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !4435
  ret %struct.k_thread* %1, !dbg !4436
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4437 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4450, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4447, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.value(metadata i8* %1, metadata !4448, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.value(metadata i8* %2, metadata !4449, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.value(metadata i32 %4, metadata !4451, metadata !DIExpression()), !dbg !4576
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4577
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4577
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4452, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 0, metadata !4456, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.value(metadata i1 undef, metadata !4458, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4576
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4579

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4579

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4580
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4450, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.value(metadata i8* %30, metadata !4449, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.value(metadata i32 %29, metadata !4456, metadata !DIExpression()), !dbg !4576
  %31 = load i8, i8* %30, align 1, !dbg !4581
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4579

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4581
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4582
  call void @llvm.dbg.value(metadata i8* %34, metadata !4449, metadata !DIExpression()), !dbg !4576
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4582
  call void @llvm.dbg.value(metadata i32 %35, metadata !4460, metadata !DIExpression()), !dbg !4583
  %36 = icmp slt i32 %35, 0, !dbg !4584
  %37 = add i32 %29, 1, !dbg !4582
  call void @llvm.dbg.value(metadata i32 undef, metadata !4456, metadata !DIExpression()), !dbg !4576
  br i1 %36, label %365, label %28, !llvm.loop !4586

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4588
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4465, metadata !DIExpression()), !dbg !4589
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4589
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4508, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4511, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata i8* %30, metadata !4514, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata i32 -1, metadata !4515, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata i32 -1, metadata !4516, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata i8* null, metadata !4517, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata i8* %14, metadata !4518, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata i8 0, metadata !4519, metadata !DIExpression()), !dbg !4590
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4591
  call void @llvm.dbg.value(metadata i8* %39, metadata !4449, metadata !DIExpression()), !dbg !4576
  %40 = load i24, i24* %15, align 8, !dbg !4592
  %41 = and i24 %40, 256, !dbg !4592
  %42 = icmp eq i24 %41, 0, !dbg !4592
  br i1 %42, label %51, label %43, !dbg !4594

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4595
  call void @llvm.dbg.value(metadata i8* %44, metadata !4450, metadata !DIExpression()), !dbg !4576
  %45 = bitcast i8* %27 to i32*, !dbg !4595
  %46 = load i32, i32* %45, align 4, !dbg !4595
  call void @llvm.dbg.value(metadata i32 %46, metadata !4515, metadata !DIExpression()), !dbg !4590
  %47 = icmp slt i32 %46, 0, !dbg !4597
  br i1 %47, label %48, label %56, !dbg !4599

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4600
  store i24 %49, i24* %15, align 8, !dbg !4600
  %50 = sub nsw i32 0, %46, !dbg !4602
  call void @llvm.dbg.value(metadata i32 %50, metadata !4515, metadata !DIExpression()), !dbg !4590
  br label %56, !dbg !4603

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4604
  %53 = icmp eq i24 %52, 0, !dbg !4604
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4606
  br label %56, !dbg !4606

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4607
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4590
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4450, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.value(metadata i32 %58, metadata !4515, metadata !DIExpression()), !dbg !4590
  %60 = and i24 %57, 1024, !dbg !4607
  %61 = icmp eq i24 %60, 0, !dbg !4607
  br i1 %61, label %69, label %62, !dbg !4608

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4609
  call void @llvm.dbg.value(metadata i8* %63, metadata !4450, metadata !DIExpression()), !dbg !4576
  %64 = bitcast i8* %59 to i32*, !dbg !4609
  %65 = load i32, i32* %64, align 4, !dbg !4609
  call void @llvm.dbg.value(metadata i32 %65, metadata !4520, metadata !DIExpression()), !dbg !4610
  %66 = icmp slt i32 %65, 0, !dbg !4611
  br i1 %66, label %67, label %74, !dbg !4613

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4614
  store i24 %68, i24* %15, align 8, !dbg !4614
  br label %74, !dbg !4616

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4617
  %71 = icmp eq i24 %70, 0, !dbg !4617
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4619
  br label %74, !dbg !4619

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4620
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4590
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4590
  call void @llvm.dbg.value(metadata i8* %77, metadata !4450, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.value(metadata i32 %76, metadata !4516, metadata !DIExpression()), !dbg !4590
  store i32 0, i32* %16, align 4, !dbg !4621
  store i32 0, i32* %17, align 8, !dbg !4622
  %78 = lshr i24 %75, 16, !dbg !4620
  call void @llvm.dbg.value(metadata i24 %78, metadata !4523, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4590
  %79 = lshr i24 %75, 11, !dbg !4623
  %80 = and i24 %79, 15, !dbg !4623
  %81 = zext i24 %80 to i32, !dbg !4623
  call void @llvm.dbg.value(metadata i32 %81, metadata !4524, metadata !DIExpression()), !dbg !4590
  %82 = trunc i24 %78 to i3, !dbg !4624
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4624

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4625

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4628
  call void @llvm.dbg.value(metadata i8* %85, metadata !4450, metadata !DIExpression()), !dbg !4576
  %86 = bitcast i8* %77 to i32*, !dbg !4628
  %87 = load i32, i32* %86, align 4, !dbg !4628
  %88 = sext i32 %87 to i64, !dbg !4628
  store i64 %88, i64* %20, align 8, !dbg !4630
  br label %115, !dbg !4631

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4632
  call void @llvm.dbg.value(metadata i8* %90, metadata !4450, metadata !DIExpression()), !dbg !4576
  %91 = bitcast i8* %77 to i32*, !dbg !4632
  %92 = load i32, i32* %91, align 4, !dbg !4632
  %93 = sext i32 %92 to i64, !dbg !4632
  store i64 %93, i64* %20, align 8, !dbg !4635
  br label %115, !dbg !4636

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4637
  %96 = add i32 %95, 7, !dbg !4637
  %97 = and i32 %96, -8, !dbg !4637
  %98 = inttoptr i32 %97 to i8*, !dbg !4637
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4637
  call void @llvm.dbg.value(metadata i8* %99, metadata !4450, metadata !DIExpression()), !dbg !4576
  %100 = inttoptr i32 %97 to i64*, !dbg !4637
  %101 = load i64, i64* %100, align 8, !dbg !4637
  store i64 %101, i64* %20, align 8, !dbg !4638
  br label %115, !dbg !4639

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4640
  %104 = add i32 %103, 7, !dbg !4640
  %105 = and i32 %104, -8, !dbg !4640
  %106 = inttoptr i32 %105 to i8*, !dbg !4640
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4640
  call void @llvm.dbg.value(metadata i8* %107, metadata !4450, metadata !DIExpression()), !dbg !4576
  %108 = inttoptr i32 %105 to i64*, !dbg !4640
  %109 = load i64, i64* %108, align 8, !dbg !4640
  store i64 %109, i64* %20, align 8, !dbg !4641
  br label %115, !dbg !4642

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4643
  call void @llvm.dbg.value(metadata i8* %111, metadata !4450, metadata !DIExpression()), !dbg !4576
  %112 = bitcast i8* %77 to i32*, !dbg !4643
  %113 = load i32, i32* %112, align 4, !dbg !4643
  %114 = sext i32 %113 to i64, !dbg !4644
  store i64 %114, i64* %20, align 8, !dbg !4645
  br label %115, !dbg !4646

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4647
  call void @llvm.dbg.value(metadata i8* %117, metadata !4450, metadata !DIExpression()), !dbg !4576
  %118 = trunc i24 %79 to i4, !dbg !4648
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4648

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4649
  %121 = ashr exact i64 %120, 56, !dbg !4649
  store i64 %121, i64* %20, align 8, !dbg !4652
  br label %177, !dbg !4653

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4654
  %124 = ashr exact i64 %123, 48, !dbg !4654
  store i64 %124, i64* %20, align 8, !dbg !4657
  br label %177, !dbg !4658

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4659

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4662
  call void @llvm.dbg.value(metadata i8* %127, metadata !4450, metadata !DIExpression()), !dbg !4576
  %128 = bitcast i8* %77 to i32*, !dbg !4662
  %129 = load i32, i32* %128, align 4, !dbg !4662
  %130 = zext i32 %129 to i64, !dbg !4662
  store i64 %130, i64* %20, align 8, !dbg !4664
  br label %157, !dbg !4665

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4666
  call void @llvm.dbg.value(metadata i8* %132, metadata !4450, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.value(metadata i8* %132, metadata !4450, metadata !DIExpression()), !dbg !4576
  %133 = bitcast i8* %77 to i32*, !dbg !4666
  %134 = load i32, i32* %133, align 4, !dbg !4666
  %135 = zext i32 %134 to i64, !dbg !4666
  store i64 %135, i64* %20, align 8, !dbg !4666
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4668
  %138 = add i32 %137, 7, !dbg !4668
  %139 = and i32 %138, -8, !dbg !4668
  %140 = inttoptr i32 %139 to i8*, !dbg !4668
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4668
  call void @llvm.dbg.value(metadata i8* %141, metadata !4450, metadata !DIExpression()), !dbg !4576
  %142 = inttoptr i32 %139 to i64*, !dbg !4668
  %143 = load i64, i64* %142, align 8, !dbg !4668
  store i64 %143, i64* %20, align 8, !dbg !4669
  br label %157, !dbg !4670

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4671
  %146 = add i32 %145, 7, !dbg !4671
  %147 = and i32 %146, -8, !dbg !4671
  %148 = inttoptr i32 %147 to i8*, !dbg !4671
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4671
  call void @llvm.dbg.value(metadata i8* %149, metadata !4450, metadata !DIExpression()), !dbg !4576
  %150 = inttoptr i32 %147 to i64*, !dbg !4671
  %151 = load i64, i64* %150, align 8, !dbg !4671
  store i64 %151, i64* %20, align 8, !dbg !4672
  br label %157, !dbg !4673

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4674
  call void @llvm.dbg.value(metadata i8* %153, metadata !4450, metadata !DIExpression()), !dbg !4576
  %154 = bitcast i8* %77 to i32*, !dbg !4674
  %155 = load i32, i32* %154, align 4, !dbg !4674
  %156 = zext i32 %155 to i64, !dbg !4675
  store i64 %156, i64* %20, align 8, !dbg !4676
  br label %157, !dbg !4677

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4678
  call void @llvm.dbg.value(metadata i8* %159, metadata !4450, metadata !DIExpression()), !dbg !4576
  %160 = trunc i24 %79 to i4, !dbg !4679
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4679

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4680
  store i64 %162, i64* %20, align 8, !dbg !4683
  br label %177, !dbg !4684

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4685
  store i64 %164, i64* %20, align 8, !dbg !4688
  br label %177, !dbg !4689

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4690
  %167 = add i32 %166, 7, !dbg !4690
  %168 = and i32 %167, -8, !dbg !4690
  %169 = inttoptr i32 %168 to i8*, !dbg !4690
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4690
  call void @llvm.dbg.value(metadata i8* %170, metadata !4450, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.value(metadata i8* %170, metadata !4450, metadata !DIExpression()), !dbg !4576
  %171 = inttoptr i32 %168 to double*, !dbg !4690
  %172 = load double, double* %171, align 8, !dbg !4690
  store double %172, double* %19, align 8, !dbg !4690
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4694
  call void @llvm.dbg.value(metadata i8* %174, metadata !4450, metadata !DIExpression()), !dbg !4576
  %175 = bitcast i8* %77 to i8**, !dbg !4694
  %176 = load i8*, i8** %175, align 4, !dbg !4694
  store i8* %176, i8** %18, align 8, !dbg !4697
  br label %177, !dbg !4698

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4590
  call void @llvm.dbg.value(metadata i8* %178, metadata !4450, metadata !DIExpression()), !dbg !4576
  %179 = and i24 %75, 3, !dbg !4699
  %180 = icmp eq i24 %179, 0, !dbg !4699
  br i1 %180, label %185, label %181, !dbg !4699

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4700
  call void @llvm.dbg.value(metadata i32 %182, metadata !4525, metadata !DIExpression()), !dbg !4701
  %183 = icmp slt i32 %182, 0, !dbg !4702
  %184 = add i32 %182, %29, !dbg !4700
  call void @llvm.dbg.value(metadata i32 undef, metadata !4456, metadata !DIExpression()), !dbg !4576
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4704
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4705

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4706
  call void @llvm.dbg.value(metadata i32 %188, metadata !4529, metadata !DIExpression()), !dbg !4707
  %189 = icmp slt i32 %188, 0, !dbg !4708
  %190 = add i32 %29, 1, !dbg !4706
  call void @llvm.dbg.value(metadata i32 undef, metadata !4456, metadata !DIExpression()), !dbg !4576
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4710
  call void @llvm.dbg.value(metadata i8* %192, metadata !4517, metadata !DIExpression()), !dbg !4590
  %193 = icmp sgt i32 %76, -1, !dbg !4711
  br i1 %193, label %194, label %196, !dbg !4713

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4714
  call void @llvm.dbg.value(metadata i32 %195, metadata !4532, metadata !DIExpression()), !dbg !4716
  br label %241, !dbg !4717

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4718
  call void @llvm.dbg.value(metadata i32 %197, metadata !4532, metadata !DIExpression()), !dbg !4716
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4517, metadata !DIExpression()), !dbg !4590
  %199 = load i64, i64* %20, align 8, !dbg !4720
  %200 = trunc i64 %199 to i8, !dbg !4721
  store i8 %200, i8* %10, align 1, !dbg !4722
  call void @llvm.dbg.value(metadata i8* %23, metadata !4518, metadata !DIExpression()), !dbg !4590
  br label %245, !dbg !4723

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4724
  %203 = icmp eq i24 %202, 0, !dbg !4724
  %204 = trunc i24 %75 to i8, !dbg !4726
  %205 = shl i8 %204, 1, !dbg !4726
  %206 = and i8 %205, 32, !dbg !4726
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4726
  call void @llvm.dbg.value(metadata i8 %207, metadata !4519, metadata !DIExpression()), !dbg !4590
  %208 = load i64, i64* %20, align 8, !dbg !4727
  call void @llvm.dbg.value(metadata i64 %208, metadata !4457, metadata !DIExpression()), !dbg !4576
  %209 = icmp slt i64 %208, 0, !dbg !4728
  br i1 %209, label %210, label %212, !dbg !4730

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4519, metadata !DIExpression()), !dbg !4590
  %211 = sub nsw i64 0, %208, !dbg !4731
  store i64 %211, i64* %20, align 8, !dbg !4733
  br label %212, !dbg !4734

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4590
  call void @llvm.dbg.value(metadata i8 %213, metadata !4519, metadata !DIExpression()), !dbg !4590
  %214 = load i64, i64* %20, align 8, !dbg !4735
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4736
  call void @llvm.dbg.value(metadata i8* %215, metadata !4517, metadata !DIExpression()), !dbg !4590
  br label %216, !dbg !4737

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4738
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4739
  call void @llvm.dbg.value(metadata i8* %218, metadata !4517, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata i8 %217, metadata !4519, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.label(metadata !4575), !dbg !4740
  %219 = icmp sgt i32 %76, -1, !dbg !4741
  br i1 %219, label %222, label %220, !dbg !4742

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4743
  br label %245, !dbg !4742

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4745
  %224 = sub i32 %22, %223, !dbg !4745
  call void @llvm.dbg.value(metadata i32 %224, metadata !4534, metadata !DIExpression()), !dbg !4746
  %225 = load i24, i24* %15, align 8, !dbg !4747
  %226 = and i24 %225, -65, !dbg !4747
  store i24 %226, i24* %15, align 8, !dbg !4747
  %227 = icmp ugt i32 %76, %224, !dbg !4748
  br i1 %227, label %228, label %245, !dbg !4750

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4751
  store i32 %229, i32* %16, align 4, !dbg !4753
  br label %245, !dbg !4754

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4755
  %232 = icmp eq i8* %231, null, !dbg !4757
  br i1 %232, label %245, label %233, !dbg !4758

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4759
  %235 = zext i32 %234 to i64, !dbg !4759
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4761
  call void @llvm.dbg.value(metadata i8* %236, metadata !4517, metadata !DIExpression()), !dbg !4590
  %237 = load i24, i24* %15, align 8, !dbg !4762
  %238 = or i24 %237, 1048576, !dbg !4762
  store i24 %238, i24* %15, align 8, !dbg !4762
  store i8 120, i8* %21, align 1, !dbg !4763
  br label %216, !dbg !4764

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4765
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4768
  br label %363, !dbg !4769

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4770
  call void @llvm.dbg.value(metadata i32 %242, metadata !4532, metadata !DIExpression()), !dbg !4716
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4771
  call void @llvm.dbg.value(metadata i32 -1, metadata !4516, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata i32 %29, metadata !4456, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.value(metadata i8* %192, metadata !4517, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata i8* %243, metadata !4518, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata i8 0, metadata !4519, metadata !DIExpression()), !dbg !4590
  %244 = icmp eq i8* %192, null, !dbg !4772
  br i1 %244, label %363, label %245, !dbg !4774, !llvm.loop !4586

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4743
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4537, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4590
  call void @llvm.dbg.value(metadata i32 0, metadata !4538, metadata !DIExpression()), !dbg !4590
  %250 = zext i8 %249 to i32, !dbg !4775
  %251 = icmp eq i8 %249, 0, !dbg !4777
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4537, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4590
  call void @llvm.dbg.value(metadata i32 undef, metadata !4537, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4537, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4590
  call void @llvm.dbg.value(metadata i32 undef, metadata !4537, metadata !DIExpression()), !dbg !4590
  %252 = icmp sgt i32 %58, 0, !dbg !4778
  br i1 %252, label %253, label %302, !dbg !4779

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4743
  %255 = icmp eq i24 %254, 0, !dbg !4743
  %256 = ptrtoint i8* %248 to i32, !dbg !4780
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4537, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4590
  %257 = ptrtoint i8* %247 to i32, !dbg !4780
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4537, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4590
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4537, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4590
  %258 = xor i1 %251, true, !dbg !4781
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4537, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4590
  %259 = sext i1 %258 to i32, !dbg !4781
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4537, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4590
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4537, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4590
  %260 = lshr i24 %246, 19, !dbg !4782
  %261 = and i24 %260, 1, !dbg !4782
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4782
  %263 = zext i24 %262 to i32, !dbg !4782
  %264 = add i32 %257, %259, !dbg !4782
  %265 = add i32 %256, %263, !dbg !4782
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4537, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4590
  %266 = and i24 %246, 4194304, !dbg !4783
  %267 = icmp eq i24 %266, 0, !dbg !4783
  %268 = load i32, i32* %16, align 4, !dbg !4785
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4537, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4590
  call void @llvm.dbg.value(metadata i32 undef, metadata !4537, metadata !DIExpression()), !dbg !4590
  %269 = load i32, i32* %17, align 8, !dbg !4786
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4786
  call void @llvm.dbg.value(metadata i32 undef, metadata !4537, metadata !DIExpression()), !dbg !4590
  %271 = add i32 %264, %58, !dbg !4786
  %272 = add i32 %265, %268, !dbg !4786
  %273 = add i32 %272, %270, !dbg !4787
  %274 = sub i32 %271, %273, !dbg !4787
  call void @llvm.dbg.value(metadata i32 %274, metadata !4515, metadata !DIExpression()), !dbg !4590
  %275 = and i24 %246, 4, !dbg !4788
  %276 = icmp eq i24 %275, 0, !dbg !4788
  br i1 %276, label %277, label %302, !dbg !4789

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4539, metadata !DIExpression()), !dbg !4790
  %278 = and i24 %246, 64, !dbg !4791
  %279 = icmp eq i24 %278, 0, !dbg !4791
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4792
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4792
  %282 = select i1 %279, i32 32, i32 48, !dbg !4792
  br i1 %280, label %287, label %283, !dbg !4792

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4793
  call void @llvm.dbg.value(metadata i32 %284, metadata !4544, metadata !DIExpression()), !dbg !4794
  %285 = icmp slt i32 %284, 0, !dbg !4795
  %286 = add i32 %29, 1, !dbg !4793
  call void @llvm.dbg.value(metadata i32 undef, metadata !4456, metadata !DIExpression()), !dbg !4576
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4590
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4580
  call void @llvm.dbg.value(metadata i32 %290, metadata !4456, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.value(metadata i8 undef, metadata !4539, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.value(metadata i8 %288, metadata !4519, metadata !DIExpression()), !dbg !4590
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4797
  %292 = add i32 %291, -1, !dbg !4797
  br label %293, !dbg !4797

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4798
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4580
  call void @llvm.dbg.value(metadata i32 %295, metadata !4456, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.value(metadata i32 %294, metadata !4515, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata i32 %294, metadata !4515, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4590
  %296 = icmp sgt i32 %294, 0, !dbg !4799
  br i1 %296, label %297, label %302, !dbg !4797

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4800
  call void @llvm.dbg.value(metadata i32 %298, metadata !4515, metadata !DIExpression()), !dbg !4590
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4801
  call void @llvm.dbg.value(metadata i32 %299, metadata !4550, metadata !DIExpression()), !dbg !4802
  %300 = icmp slt i32 %299, 0, !dbg !4803
  %301 = add i32 %295, 1, !dbg !4801
  call void @llvm.dbg.value(metadata i32 undef, metadata !4456, metadata !DIExpression()), !dbg !4576
  br i1 %300, label %361, label %293, !llvm.loop !4805

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4590
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4590
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4580
  call void @llvm.dbg.value(metadata i32 %305, metadata !4456, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.value(metadata i32 %304, metadata !4515, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata i8 %303, metadata !4519, metadata !DIExpression()), !dbg !4590
  %306 = icmp eq i8 %303, 0, !dbg !4807
  br i1 %306, label %312, label %307, !dbg !4808

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4809
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4810
  call void @llvm.dbg.value(metadata i32 %309, metadata !4553, metadata !DIExpression()), !dbg !4811
  %310 = icmp slt i32 %309, 0, !dbg !4812
  %311 = add i32 %305, 1, !dbg !4810
  call void @llvm.dbg.value(metadata i32 undef, metadata !4456, metadata !DIExpression()), !dbg !4576
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4580
  call void @llvm.dbg.value(metadata i32 %313, metadata !4456, metadata !DIExpression()), !dbg !4576
  %314 = lshr i24 %246, 20, !dbg !4814
  %315 = lshr i24 %246, 19, !dbg !4815
  %316 = or i24 %314, %315, !dbg !4816
  %317 = and i24 %316, 1, !dbg !4816
  %318 = icmp eq i24 %317, 0, !dbg !4816
  br i1 %318, label %323, label %319, !dbg !4817

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4818
  call void @llvm.dbg.value(metadata i32 %320, metadata !4557, metadata !DIExpression()), !dbg !4819
  %321 = icmp slt i32 %320, 0, !dbg !4820
  %322 = add i32 %313, 1, !dbg !4818
  call void @llvm.dbg.value(metadata i32 undef, metadata !4456, metadata !DIExpression()), !dbg !4576
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4580
  call void @llvm.dbg.value(metadata i32 %324, metadata !4456, metadata !DIExpression()), !dbg !4576
  %325 = and i24 %246, 1048576, !dbg !4822
  %326 = icmp eq i24 %325, 0, !dbg !4822
  br i1 %326, label %333, label %327, !dbg !4823

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4824
  %329 = zext i8 %328 to i32, !dbg !4824
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4824
  call void @llvm.dbg.value(metadata i32 %330, metadata !4563, metadata !DIExpression()), !dbg !4825
  %331 = icmp slt i32 %330, 0, !dbg !4826
  %332 = add i32 %324, 1, !dbg !4824
  call void @llvm.dbg.value(metadata i32 undef, metadata !4456, metadata !DIExpression()), !dbg !4576
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4580
  call void @llvm.dbg.value(metadata i32 %334, metadata !4456, metadata !DIExpression()), !dbg !4576
  %335 = load i32, i32* %16, align 4, !dbg !4828
  call void @llvm.dbg.value(metadata i32 %335, metadata !4538, metadata !DIExpression()), !dbg !4590
  br label %336, !dbg !4829

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4830
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4580
  call void @llvm.dbg.value(metadata i32 %338, metadata !4456, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.value(metadata i32 %337, metadata !4538, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4590
  %339 = icmp sgt i32 %337, 0, !dbg !4831
  br i1 %339, label %340, label %345, !dbg !4829

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4832
  call void @llvm.dbg.value(metadata i32 %341, metadata !4538, metadata !DIExpression()), !dbg !4590
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4833
  call void @llvm.dbg.value(metadata i32 %342, metadata !4567, metadata !DIExpression()), !dbg !4834
  %343 = icmp slt i32 %342, 0, !dbg !4835
  %344 = add i32 %338, 1, !dbg !4833
  call void @llvm.dbg.value(metadata i32 undef, metadata !4456, metadata !DIExpression()), !dbg !4576
  br i1 %343, label %361, label %336, !llvm.loop !4837

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !4839
  call void @llvm.dbg.value(metadata i32 %346, metadata !4570, metadata !DIExpression()), !dbg !4840
  %347 = icmp slt i32 %346, 0, !dbg !4841
  call void @llvm.dbg.value(metadata i32 undef, metadata !4456, metadata !DIExpression()), !dbg !4576
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4839
  call void @llvm.dbg.value(metadata i32 %349, metadata !4456, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.value(metadata i32 %304, metadata !4515, metadata !DIExpression()), !dbg !4590
  %350 = icmp sgt i32 %304, 0, !dbg !4843
  br i1 %350, label %351, label %363, !dbg !4844

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4844
  %353 = add i32 %352, %338, !dbg !4844
  br label %354, !dbg !4844

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4456, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.value(metadata i32 %355, metadata !4515, metadata !DIExpression()), !dbg !4590
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !4845
  call void @llvm.dbg.value(metadata i32 %356, metadata !4572, metadata !DIExpression()), !dbg !4846
  %357 = icmp slt i32 %356, 0, !dbg !4847
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4849
  call void @llvm.dbg.value(metadata i32 undef, metadata !4456, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4576
  call void @llvm.dbg.value(metadata i32 %359, metadata !4515, metadata !DIExpression()), !dbg !4590
  %360 = icmp sgt i32 %355, 1, !dbg !4843
  br i1 %360, label %354, label %363, !dbg !4844, !llvm.loop !4850

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4456, metadata !DIExpression()), !dbg !4576
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4587
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4580
  call void @llvm.dbg.value(metadata i32 %364, metadata !4456, metadata !DIExpression()), !dbg !4576
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4587
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4576
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4852
  ret i32 %366, !dbg !4852
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #12

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !4853 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4857, metadata !DIExpression()), !dbg !4859
  call void @llvm.dbg.value(metadata i8* %1, metadata !4858, metadata !DIExpression()), !dbg !4859
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4860
  store i24 0, i24* %3, align 4, !dbg !4860
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4860
  store i8 0, i8* %4, align 1, !dbg !4860
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4860
  store i32 0, i32* %5, align 4, !dbg !4860
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4860
  store i32 0, i32* %6, align 4, !dbg !4860
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4861
  call void @llvm.dbg.value(metadata i8* %7, metadata !4858, metadata !DIExpression()), !dbg !4859
  %8 = load i8, i8* %7, align 1, !dbg !4862
  %9 = icmp eq i8 %8, 37, !dbg !4864
  br i1 %9, label %10, label %12, !dbg !4865

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4866
  call void @llvm.dbg.value(metadata i8* %11, metadata !4858, metadata !DIExpression()), !dbg !4859
  store i8 37, i8* %4, align 1, !dbg !4868
  br label %18, !dbg !4869

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !4870
  call void @llvm.dbg.value(metadata i8* %13, metadata !4858, metadata !DIExpression()), !dbg !4859
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !4871
  call void @llvm.dbg.value(metadata i8* %14, metadata !4858, metadata !DIExpression()), !dbg !4859
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !4872
  call void @llvm.dbg.value(metadata i8* %15, metadata !4858, metadata !DIExpression()), !dbg !4859
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !4873
  call void @llvm.dbg.value(metadata i8* %16, metadata !4858, metadata !DIExpression()), !dbg !4859
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !4874
  call void @llvm.dbg.value(metadata i8* %17, metadata !4858, metadata !DIExpression()), !dbg !4859
  br label %18, !dbg !4875

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4859
  ret i8* %19, !dbg !4876
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4877 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4881, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.value(metadata i8* %1, metadata !4882, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.value(metadata i8* %2, metadata !4883, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.value(metadata i8* %3, metadata !4884, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.value(metadata i32 0, metadata !4885, metadata !DIExpression()), !dbg !4888
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4889

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4890
  call void @llvm.dbg.value(metadata i32 %9, metadata !4885, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.value(metadata i8* %8, metadata !4883, metadata !DIExpression()), !dbg !4888
  %10 = icmp ult i8* %8, %3, !dbg !4891
  br i1 %10, label %11, label %13, !dbg !4892

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4893
  br label %17, !dbg !4892

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4894

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4895
  %16 = icmp eq i8 %15, 0, !dbg !4894
  br i1 %16, label %24, label %17, !dbg !4889

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4893
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4896
  call void @llvm.dbg.value(metadata i8* %19, metadata !4883, metadata !DIExpression()), !dbg !4888
  %20 = zext i8 %18 to i32, !dbg !4897
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !4898
  call void @llvm.dbg.value(metadata i32 %21, metadata !4886, metadata !DIExpression()), !dbg !4899
  %22 = icmp slt i32 %21, 0, !dbg !4900
  %23 = add i32 %9, 1, !dbg !4902
  call void @llvm.dbg.value(metadata i32 undef, metadata !4885, metadata !DIExpression()), !dbg !4888
  br i1 %22, label %24, label %7, !llvm.loop !4903

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4888
  ret i32 %25, !dbg !4905
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !4906 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4910, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4911, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata i8* %2, metadata !4912, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata i8* %3, metadata !4913, metadata !DIExpression()), !dbg !4920
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4921
  %6 = load i8, i8* %5, align 1, !dbg !4921
  %7 = zext i8 %6 to i32, !dbg !4922
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !4923
  %9 = icmp eq i32 %8, 0, !dbg !4923
  call void @llvm.dbg.value(metadata i1 %9, metadata !4914, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4920
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !4924
  call void @llvm.dbg.value(metadata i32 %10, metadata !4915, metadata !DIExpression()), !dbg !4920
  %11 = ptrtoint i8* %3 to i32, !dbg !4925
  %12 = ptrtoint i8* %2 to i32, !dbg !4925
  %13 = sub i32 %11, %12, !dbg !4925
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4926
  call void @llvm.dbg.value(metadata i8* %14, metadata !4917, metadata !DIExpression()), !dbg !4920
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4927

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4920
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4910, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata i8* %18, metadata !4917, metadata !DIExpression()), !dbg !4920
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4928
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4929
  call void @llvm.dbg.value(metadata i32 %25, metadata !4918, metadata !DIExpression()), !dbg !4930
  %26 = icmp ult i32 %25, 10, !dbg !4931
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4932
  %28 = add i32 %27, %25, !dbg !4930
  %29 = trunc i32 %28 to i8, !dbg !4932
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4933
  call void @llvm.dbg.value(metadata i8* %30, metadata !4917, metadata !DIExpression()), !dbg !4920
  store i8 %29, i8* %30, align 1, !dbg !4934
  call void @llvm.dbg.value(metadata i64 %22, metadata !4910, metadata !DIExpression()), !dbg !4920
  %31 = icmp uge i64 %19, %15, !dbg !4935
  %32 = icmp ugt i8* %30, %2, !dbg !4936
  %33 = and i1 %31, %32, !dbg !4936
  br i1 %33, label %17, label %34, !dbg !4937, !llvm.loop !4938

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4940
  %36 = load i24, i24* %35, align 4, !dbg !4940
  %37 = and i24 %36, 32, !dbg !4940
  %38 = icmp eq i24 %37, 0, !dbg !4940
  br i1 %38, label %44, label %39, !dbg !4942

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4943

40:                                               ; preds = %39
  br label %41, !dbg !4945

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4949
  store i24 %43, i24* %35, align 4, !dbg !4949
  br label %44, !dbg !4950

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4950
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !4951 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4957, metadata !DIExpression()), !dbg !4960
  call void @llvm.dbg.value(metadata i8* %1, metadata !4958, metadata !DIExpression()), !dbg !4960
  call void @llvm.dbg.value(metadata i32 %2, metadata !4959, metadata !DIExpression()), !dbg !4960
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4961
  %5 = load i24, i24* %4, align 4, !dbg !4961
  %6 = lshr i24 %5, 11, !dbg !4961
  %7 = and i24 %6, 15, !dbg !4961
  %8 = zext i24 %7 to i32, !dbg !4961
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4962

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4963
  store i32 %2, i32* %10, align 4, !dbg !4965
  br label %28, !dbg !4966

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4967
  store i8 %12, i8* %1, align 1, !dbg !4968
  br label %28, !dbg !4969

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4970
  %15 = bitcast i8* %1 to i16*, !dbg !4971
  store i16 %14, i16* %15, align 2, !dbg !4972
  br label %28, !dbg !4973

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4974
  store i32 %2, i32* %17, align 4, !dbg !4975
  br label %28, !dbg !4976

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4977
  %20 = bitcast i8* %1 to i64*, !dbg !4978
  store i64 %19, i64* %20, align 8, !dbg !4979
  br label %28, !dbg !4980

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4981
  %23 = bitcast i8* %1 to i64*, !dbg !4982
  store i64 %22, i64* %23, align 8, !dbg !4983
  br label %28, !dbg !4984

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4985
  store i32 %2, i32* %25, align 4, !dbg !4986
  br label %28, !dbg !4987

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4988
  store i32 %2, i32* %27, align 4, !dbg !4989
  br label %28, !dbg !4990

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4991
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !4992 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4995, metadata !DIExpression()), !dbg !4996
  %2 = add i32 %0, -65, !dbg !4997
  %3 = icmp ult i32 %2, 26, !dbg !4998
  %4 = zext i1 %3 to i32, !dbg !4998
  ret i32 %4, !dbg !4999
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !5000 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5004, metadata !DIExpression()), !dbg !5005
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5006

2:                                                ; preds = %1
  br label %4, !dbg !5007

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5009

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5010
  ret i32 %5, !dbg !5011
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5012 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5014, metadata !DIExpression()), !dbg !5017
  call void @llvm.dbg.value(metadata i8* %1, metadata !5015, metadata !DIExpression()), !dbg !5017
  call void @llvm.dbg.value(metadata i8 1, metadata !5016, metadata !DIExpression()), !dbg !5017
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5018

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5016, metadata !DIExpression()), !dbg !5017
  call void @llvm.dbg.value(metadata i8* %5, metadata !5015, metadata !DIExpression()), !dbg !5017
  %6 = load i8, i8* %5, align 1, !dbg !5019
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5021

7:                                                ; preds = %4
  br label %11, !dbg !5022

8:                                                ; preds = %4
  br label %11, !dbg !5024

9:                                                ; preds = %4
  br label %11, !dbg !5025

10:                                               ; preds = %4
  br label %11, !dbg !5026

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5027
  %14 = or i24 %13, %12, !dbg !5027
  store i24 %14, i24* %3, align 4, !dbg !5027
  call void @llvm.dbg.value(metadata i8 poison, metadata !5016, metadata !DIExpression()), !dbg !5017
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5015, metadata !DIExpression()), !dbg !5017
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5016, metadata !DIExpression()), !dbg !5017
  call void @llvm.dbg.value(metadata i8* %15, metadata !5015, metadata !DIExpression()), !dbg !5017
  %17 = load i24, i24* %3, align 4, !dbg !5028
  %18 = and i24 %17, 68, !dbg !5030
  %19 = icmp eq i24 %18, 68, !dbg !5030
  br i1 %19, label %20, label %22, !dbg !5030

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5031
  store i24 %21, i24* %3, align 4, !dbg !5031
  br label %22, !dbg !5033

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5034
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5035 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5037, metadata !DIExpression()), !dbg !5041
  call void @llvm.dbg.value(metadata i8* %1, metadata !5038, metadata !DIExpression()), !dbg !5041
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5042
  %5 = load i24, i24* %4, align 4, !dbg !5043
  %6 = or i24 %5, 128, !dbg !5043
  store i24 %6, i24* %4, align 4, !dbg !5043
  call void @llvm.dbg.value(metadata i8* %1, metadata !5038, metadata !DIExpression()), !dbg !5041
  %7 = load i8, i8* %1, align 1, !dbg !5044
  %8 = icmp eq i8 %7, 42, !dbg !5046
  br i1 %8, label %9, label %12, !dbg !5047

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5048
  store i24 %10, i24* %4, align 4, !dbg !5048
  call void @llvm.dbg.value(metadata i8* %1, metadata !5038, metadata !DIExpression()), !dbg !5041
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5050
  call void @llvm.dbg.value(metadata i8* %11, metadata !5038, metadata !DIExpression()), !dbg !5041
  store i8* %11, i8** %3, align 4, !dbg !5050
  br label %29, !dbg !5051

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5039, metadata !DIExpression()), !dbg !5041
  call void @llvm.dbg.value(metadata i8** %3, metadata !5038, metadata !DIExpression(DW_OP_deref)), !dbg !5041
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5052
  call void @llvm.dbg.value(metadata i32 %13, metadata !5040, metadata !DIExpression()), !dbg !5041
  %14 = load i8*, i8** %3, align 4, !dbg !5053
  call void @llvm.dbg.value(metadata i8* %14, metadata !5038, metadata !DIExpression()), !dbg !5041
  %15 = icmp eq i8* %14, %1, !dbg !5055
  br i1 %15, label %29, label %16, !dbg !5056

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5057
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5059
  store i32 %13, i32* %18, align 4, !dbg !5060
  %19 = lshr i32 %13, 31, !dbg !5061
  %20 = lshr i24 %17, 1, !dbg !5062
  %21 = and i24 %20, 1, !dbg !5062
  %22 = zext i24 %21 to i32, !dbg !5062
  %23 = or i32 %19, %22, !dbg !5062
  %24 = trunc i32 %23 to i24, !dbg !5062
  %25 = shl nuw nsw i24 %24, 1, !dbg !5062
  %26 = and i24 %17, -131, !dbg !5062
  %27 = or i24 %26, 128, !dbg !5062
  %28 = or i24 %25, %27, !dbg !5062
  store i24 %28, i24* %4, align 4, !dbg !5062
  br label %29, !dbg !5063

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5041
  ret i8* %30, !dbg !5064
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5065 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5067, metadata !DIExpression()), !dbg !5070
  call void @llvm.dbg.value(metadata i8* %1, metadata !5068, metadata !DIExpression()), !dbg !5070
  %4 = load i8, i8* %1, align 1, !dbg !5071
  %5 = icmp eq i8 %4, 46, !dbg !5072
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5073
  %7 = load i24, i24* %6, align 4, !dbg !5074
  %8 = select i1 %5, i24 512, i24 0, !dbg !5074
  %9 = and i24 %7, -513, !dbg !5074
  %10 = or i24 %9, %8, !dbg !5074
  store i24 %10, i24* %6, align 4, !dbg !5074
  br i1 %5, label %11, label %32, !dbg !5075

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5068, metadata !DIExpression()), !dbg !5070
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5076
  call void @llvm.dbg.value(metadata i8* %12, metadata !5068, metadata !DIExpression()), !dbg !5070
  store i8* %12, i8** %3, align 4, !dbg !5076
  %13 = load i8, i8* %12, align 1, !dbg !5077
  %14 = icmp eq i8 %13, 42, !dbg !5079
  br i1 %14, label %15, label %18, !dbg !5080

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5081
  store i24 %16, i24* %6, align 4, !dbg !5081
  call void @llvm.dbg.value(metadata i8* %12, metadata !5068, metadata !DIExpression()), !dbg !5070
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5083
  call void @llvm.dbg.value(metadata i8* %17, metadata !5068, metadata !DIExpression()), !dbg !5070
  store i8* %17, i8** %3, align 4, !dbg !5083
  br label %32, !dbg !5084

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5068, metadata !DIExpression(DW_OP_deref)), !dbg !5070
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5085
  call void @llvm.dbg.value(metadata i32 %19, metadata !5069, metadata !DIExpression()), !dbg !5070
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5086
  store i32 %19, i32* %20, align 4, !dbg !5087
  %21 = lshr i32 %19, 31, !dbg !5088
  %22 = load i24, i24* %6, align 4, !dbg !5089
  %23 = lshr i24 %22, 1, !dbg !5089
  %24 = and i24 %23, 1, !dbg !5089
  %25 = zext i24 %24 to i32, !dbg !5089
  %26 = or i32 %21, %25, !dbg !5089
  %27 = trunc i32 %26 to i24, !dbg !5089
  %28 = shl nuw nsw i24 %27, 1, !dbg !5089
  %29 = and i24 %22, -3, !dbg !5089
  %30 = or i24 %28, %29, !dbg !5089
  store i24 %30, i24* %6, align 4, !dbg !5089
  %31 = load i8*, i8** %3, align 4, !dbg !5090
  call void @llvm.dbg.value(metadata i8* %31, metadata !5068, metadata !DIExpression()), !dbg !5070
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5070
  ret i8* %33, !dbg !5091
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5092 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5094, metadata !DIExpression()), !dbg !5096
  call void @llvm.dbg.value(metadata i8* %1, metadata !5095, metadata !DIExpression()), !dbg !5096
  %3 = load i8, i8* %1, align 1, !dbg !5097
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5098

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5099
  call void @llvm.dbg.value(metadata i8* %5, metadata !5095, metadata !DIExpression()), !dbg !5096
  %6 = load i8, i8* %5, align 1, !dbg !5102
  %7 = icmp eq i8 %6, 104, !dbg !5103
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5104
  %9 = load i24, i24* %8, align 4, !dbg !5104
  %10 = and i24 %9, -30721, !dbg !5104
  br i1 %7, label %11, label %14, !dbg !5105

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5106
  store i24 %12, i24* %8, align 4, !dbg !5106
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5108
  call void @llvm.dbg.value(metadata i8* %13, metadata !5095, metadata !DIExpression()), !dbg !5096
  br label %56, !dbg !5109

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5110
  store i24 %15, i24* %8, align 4, !dbg !5110
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5112
  call void @llvm.dbg.value(metadata i8* %17, metadata !5095, metadata !DIExpression()), !dbg !5096
  %18 = load i8, i8* %17, align 1, !dbg !5114
  %19 = icmp eq i8 %18, 108, !dbg !5115
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5116
  %21 = load i24, i24* %20, align 4, !dbg !5116
  %22 = and i24 %21, -30721, !dbg !5116
  br i1 %19, label %23, label %26, !dbg !5117

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5118
  store i24 %24, i24* %20, align 4, !dbg !5118
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5120
  call void @llvm.dbg.value(metadata i8* %25, metadata !5095, metadata !DIExpression()), !dbg !5096
  br label %56, !dbg !5121

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5122
  store i24 %27, i24* %20, align 4, !dbg !5122
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5124
  %30 = load i24, i24* %29, align 4, !dbg !5125
  %31 = and i24 %30, -30721, !dbg !5125
  %32 = or i24 %31, 10240, !dbg !5125
  store i24 %32, i24* %29, align 4, !dbg !5125
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5126
  call void @llvm.dbg.value(metadata i8* %33, metadata !5095, metadata !DIExpression()), !dbg !5096
  br label %56, !dbg !5127

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5128
  %36 = load i24, i24* %35, align 4, !dbg !5129
  %37 = and i24 %36, -30721, !dbg !5129
  %38 = or i24 %37, 12288, !dbg !5129
  store i24 %38, i24* %35, align 4, !dbg !5129
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5130
  call void @llvm.dbg.value(metadata i8* %39, metadata !5095, metadata !DIExpression()), !dbg !5096
  br label %56, !dbg !5131

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5132
  %42 = load i24, i24* %41, align 4, !dbg !5133
  %43 = and i24 %42, -30721, !dbg !5133
  %44 = or i24 %43, 14336, !dbg !5133
  store i24 %44, i24* %41, align 4, !dbg !5133
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5134
  call void @llvm.dbg.value(metadata i8* %45, metadata !5095, metadata !DIExpression()), !dbg !5096
  br label %56, !dbg !5135

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5136
  %48 = load i24, i24* %47, align 4, !dbg !5137
  %49 = and i24 %48, -30723, !dbg !5137
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5138
  call void @llvm.dbg.value(metadata i8* %50, metadata !5095, metadata !DIExpression()), !dbg !5096
  %51 = or i24 %49, 16386, !dbg !5139
  store i24 %51, i24* %47, align 4, !dbg !5139
  br label %56, !dbg !5140

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5141
  %54 = load i24, i24* %53, align 4, !dbg !5142
  %55 = and i24 %54, -30721, !dbg !5142
  store i24 %55, i24* %53, align 4, !dbg !5142
  br label %56, !dbg !5143

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5095, metadata !DIExpression()), !dbg !5096
  ret i8* %57, !dbg !5144
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5145 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5147, metadata !DIExpression()), !dbg !5152
  call void @llvm.dbg.value(metadata i8* %1, metadata !5148, metadata !DIExpression()), !dbg !5152
  call void @llvm.dbg.value(metadata i8 0, metadata !5149, metadata !DIExpression()), !dbg !5152
  call void @llvm.dbg.value(metadata i8* %1, metadata !5148, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5152
  %3 = load i8, i8* %1, align 1, !dbg !5153
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5154
  store i8 %3, i8* %4, align 1, !dbg !5155
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5156

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5157

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5158
  %9 = load i24, i24* %8, align 4, !dbg !5158
  %10 = and i24 %9, -458753, !dbg !5158
  %11 = or i24 %10, %7, !dbg !5158
  call void @llvm.dbg.label(metadata !5150), !dbg !5159
  %12 = and i24 %9, 30720, !dbg !5160
  %13 = icmp eq i24 %12, 16384, !dbg !5160
  %14 = zext i1 %13 to i24, !dbg !5162
  %15 = or i24 %11, %14, !dbg !5162
  %16 = icmp eq i8 %3, 99, !dbg !5163
  br i1 %16, label %17, label %43, !dbg !5165

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5166
  %19 = icmp ne i24 %18, 0, !dbg !5166
  call void @llvm.dbg.value(metadata i1 %19, metadata !5149, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5152
  br label %43, !dbg !5168

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5169
  %22 = load i24, i24* %21, align 4, !dbg !5170
  %23 = and i24 %22, -458753, !dbg !5170
  %24 = or i24 %23, 262144, !dbg !5170
  call void @llvm.dbg.value(metadata i8 1, metadata !5149, metadata !DIExpression()), !dbg !5152
  br label %43, !dbg !5171

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5174
  %27 = load i24, i24* %26, align 4, !dbg !5175
  %28 = and i24 %27, -458753, !dbg !5175
  %29 = or i24 %28, 196608, !dbg !5175
  %30 = and i24 %27, 30720, !dbg !5176
  %31 = icmp eq i24 %30, 16384, !dbg !5176
  br label %43, !dbg !5178

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5179
  %34 = load i24, i24* %33, align 4, !dbg !5180
  %35 = and i24 %34, -458753, !dbg !5180
  %36 = or i24 %35, 196608, !dbg !5180
  %37 = and i24 %34, 30720, !dbg !5181
  %38 = icmp ne i24 %37, 0, !dbg !5181
  br label %43, !dbg !5183

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5184
  %41 = load i24, i24* %40, align 4, !dbg !5185
  %42 = or i24 %41, 1, !dbg !5185
  br label %43, !dbg !5186

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5187
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5188
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5189
  call void @llvm.dbg.value(metadata i8* %48, metadata !5148, metadata !DIExpression()), !dbg !5152
  call void @llvm.dbg.value(metadata i8 poison, metadata !5149, metadata !DIExpression()), !dbg !5152
  %49 = lshr i24 %44, 1, !dbg !5187
  %50 = and i24 %49, 1, !dbg !5187
  %51 = zext i24 %50 to i32, !dbg !5187
  %52 = or i32 %51, %47, !dbg !5187
  %53 = trunc i32 %52 to i24, !dbg !5187
  %54 = shl nuw nsw i24 %53, 1, !dbg !5187
  %55 = and i24 %44, -3, !dbg !5187
  %56 = or i24 %54, %55, !dbg !5187
  store i24 %56, i24* %46, align 4, !dbg !5187
  ret i8* %48, !dbg !5190
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5191 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5195, metadata !DIExpression()), !dbg !5198
  %2 = load i8*, i8** %0, align 4, !dbg !5199
  call void @llvm.dbg.value(metadata i8* %2, metadata !5196, metadata !DIExpression()), !dbg !5198
  call void @llvm.dbg.value(metadata i32 0, metadata !5197, metadata !DIExpression()), !dbg !5198
  %3 = load i8, i8* %2, align 1, !dbg !5200
  %4 = zext i8 %3 to i32, !dbg !5201
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5202
  %6 = icmp eq i32 %5, 0, !dbg !5203
  br i1 %6, label %19, label %7, !dbg !5203

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5197, metadata !DIExpression()), !dbg !5198
  call void @llvm.dbg.value(metadata i8* %10, metadata !5196, metadata !DIExpression()), !dbg !5198
  %11 = mul i32 %9, 10, !dbg !5204
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5206
  call void @llvm.dbg.value(metadata i8* %12, metadata !5196, metadata !DIExpression()), !dbg !5198
  %13 = add i32 %11, -48, !dbg !5207
  %14 = add i32 %13, %8, !dbg !5208
  call void @llvm.dbg.value(metadata i32 %14, metadata !5197, metadata !DIExpression()), !dbg !5198
  %15 = load i8, i8* %12, align 1, !dbg !5200
  %16 = zext i8 %15 to i32, !dbg !5201
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5202
  %18 = icmp eq i32 %17, 0, !dbg !5203
  br i1 %18, label %19, label %7, !dbg !5203, !llvm.loop !5209

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5198
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5198
  store i8* %20, i8** %0, align 4, !dbg !5211
  ret i32 %21, !dbg !5212
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !5213 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5215, metadata !DIExpression()), !dbg !5216
  %2 = add i32 %0, -48, !dbg !5217
  %3 = icmp ult i32 %2, 10, !dbg !5218
  %4 = zext i1 %3 to i32, !dbg !5218
  ret i32 %4, !dbg !5219
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5220 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5225, metadata !DIExpression()), !dbg !5227
  call void @llvm.dbg.value(metadata i32 %1, metadata !5226, metadata !DIExpression()), !dbg !5227
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5228, !srcloc !5230
  ret void, !dbg !5231
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5232 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5234, metadata !DIExpression()), !dbg !5242
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5243
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5243
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5235, metadata !DIExpression()), !dbg !5244
  call void @llvm.va_start(i8* nonnull %3), !dbg !5245
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5246
  %5 = load i32, i32* %4, align 4, !dbg !5246
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5246
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5246
  call void @llvm.va_end(i8* nonnull %3), !dbg !5247
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5248
  ret void, !dbg !5248
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5249 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5251, !srcloc !5252
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5253, !srcloc !5254
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5255, !srcloc !5256
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5257, !srcloc !5258
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5259, !srcloc !5260
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,82\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5261, !srcloc !5262
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,168000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5263, !srcloc !5264
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5265, !srcloc !5266
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5267, !srcloc !5268
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5269, !srcloc !5270
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5271, !srcloc !5272
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5273, !srcloc !5274
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5275, !srcloc !5276
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5277, !srcloc !5278
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5279, !srcloc !5280
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5281, !srcloc !5282
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5283, !srcloc !5284
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5285, !srcloc !5286
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5287, !srcloc !5288
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5289, !srcloc !5290
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5291, !srcloc !5292
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5293, !srcloc !5294
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5295, !srcloc !5296
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5297, !srcloc !5298
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5299, !srcloc !5300
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5301, !srcloc !5302
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5303, !srcloc !5304
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,%object", ""() #23, !dbg !5305, !srcloc !5306
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5307, !srcloc !5308
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5309, !srcloc !5310
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5311, !srcloc !5312
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5313, !srcloc !5314
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5315, !srcloc !5316
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED\0A\09.equ\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,%object", ""() #23, !dbg !5317, !srcloc !5318
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5319, !srcloc !5320
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5321, !srcloc !5322
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,%object", ""() #23, !dbg !5323, !srcloc !5324
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5325, !srcloc !5326
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5327, !srcloc !5328
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5329, !srcloc !5330
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !5331, !srcloc !5332
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5333, !srcloc !5334
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5335, !srcloc !5336
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #23, !dbg !5337, !srcloc !5338
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5339, !srcloc !5340
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5341, !srcloc !5342
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5343, !srcloc !5344
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5345, !srcloc !5346
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5347, !srcloc !5348
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5349, !srcloc !5350
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5351, !srcloc !5352
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5353, !srcloc !5354
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5355, !srcloc !5356
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,%object", ""() #23, !dbg !5357, !srcloc !5358
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5359, !srcloc !5360
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5361, !srcloc !5362
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5363, !srcloc !5364
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5365, !srcloc !5366
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5367, !srcloc !5368
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5369, !srcloc !5370
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5371, !srcloc !5372
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5373, !srcloc !5374
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5375, !srcloc !5376
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5377, !srcloc !5378
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5379, !srcloc !5380
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5381, !srcloc !5382
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5383, !srcloc !5384
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5385, !srcloc !5386
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5387, !srcloc !5388
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5389, !srcloc !5390
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5391, !srcloc !5392
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5393, !srcloc !5394
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5395, !srcloc !5396
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5397, !srcloc !5398
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5399, !srcloc !5400
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5401, !srcloc !5402
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5403, !srcloc !5404
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5405, !srcloc !5406
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5407, !srcloc !5408
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5409, !srcloc !5410
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5411, !srcloc !5412
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5413, !srcloc !5414
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5415, !srcloc !5416
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5417, !srcloc !5418
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5419, !srcloc !5420
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5421, !srcloc !5422
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5423, !srcloc !5424
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5425, !srcloc !5426
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5427, !srcloc !5428
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405\0A\09.equ\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,1\0A\09.type\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,%object", ""() #23, !dbg !5429, !srcloc !5430
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5431, !srcloc !5432
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5433, !srcloc !5434
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5435, !srcloc !5436
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5437, !srcloc !5438
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5439, !srcloc !5440
  tail call void asm sideeffect ".globl\09CONFIG_STM32_CCM\0A\09.equ\09CONFIG_STM32_CCM,1\0A\09.type\09CONFIG_STM32_CCM,%object", ""() #23, !dbg !5441, !srcloc !5442
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F405XG\0A\09.equ\09CONFIG_SOC_STM32F405XG,1\0A\09.type\09CONFIG_SOC_STM32F405XG,%object", ""() #23, !dbg !5443, !srcloc !5444
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5445, !srcloc !5446
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5447, !srcloc !5448
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5449, !srcloc !5450
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5451, !srcloc !5452
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5453, !srcloc !5454
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5455, !srcloc !5456
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5457, !srcloc !5458
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5459, !srcloc !5460
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5461, !srcloc !5462
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5463, !srcloc !5464
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5465, !srcloc !5466
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5467, !srcloc !5468
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5469, !srcloc !5470
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5471, !srcloc !5472
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,4096\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,12000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE\0A\09.equ\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,1\0A\09.type\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,%object", ""() #23, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST\0A\09.equ\09CONFIG_ZTEST,1\0A\09.type\09CONFIG_ZTEST,%object", ""() #23, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_NEW_API\0A\09.equ\09CONFIG_ZTEST_NEW_API,1\0A\09.type\09CONFIG_ZTEST_NEW_API,%object", ""() #23, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_STACK_SIZE\0A\09.equ\09CONFIG_ZTEST_STACK_SIZE,1024\0A\09.type\09CONFIG_ZTEST_STACK_SIZE,%object", ""() #23, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_TEST_DELAY_MS\0A\09.equ\09CONFIG_ZTEST_TEST_DELAY_MS,0\0A\09.type\09CONFIG_ZTEST_TEST_DELAY_MS,%object", ""() #23, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_CPU_HOLD_TIME_MS\0A\09.equ\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,3000\0A\09.type\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,%object", ""() #23, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ZTEST_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ZTEST_ASSERT_VERBOSE,%object", ""() #23, !dbg !5847, !srcloc !5848
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_THREAD_PRIORITY\0A\09.equ\09CONFIG_ZTEST_THREAD_PRIORITY,-1\0A\09.type\09CONFIG_ZTEST_THREAD_PRIORITY,%object", ""() #23, !dbg !5849, !srcloc !5850
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERIFY_RUN_ALL\0A\09.equ\09CONFIG_ZTEST_VERIFY_RUN_ALL,1\0A\09.type\09CONFIG_ZTEST_VERIFY_RUN_ALL,%object", ""() #23, !dbg !5851, !srcloc !5852
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_OUTPUT\0A\09.equ\09CONFIG_ZTEST_VERBOSE_OUTPUT,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_OUTPUT,%object", ""() #23, !dbg !5853, !srcloc !5854
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_SUMMARY\0A\09.equ\09CONFIG_ZTEST_VERBOSE_SUMMARY,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_SUMMARY,%object", ""() #23, !dbg !5855, !srcloc !5856
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_FAIL_ON_ASSUME\0A\09.equ\09CONFIG_ZTEST_FAIL_ON_ASSUME,1\0A\09.type\09CONFIG_ZTEST_FAIL_ON_ASSUME,%object", ""() #23, !dbg !5857, !srcloc !5858
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST\0A\09.equ\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,1\0A\09.type\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,%object", ""() #23, !dbg !5859, !srcloc !5860
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !5861, !srcloc !5862
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5863, !srcloc !5864
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !5865, !srcloc !5866
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5867, !srcloc !5868
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !5869, !srcloc !5870
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5871, !srcloc !5872
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5873, !srcloc !5874
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5875, !srcloc !5876
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5877, !srcloc !5878
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5879, !srcloc !5880
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !5881, !srcloc !5882
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !5883, !srcloc !5884
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !5885, !srcloc !5886
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !5887, !srcloc !5888
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !5889, !srcloc !5890
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !5891, !srcloc !5892
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !5893, !srcloc !5894
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !5895, !srcloc !5896
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !5897, !srcloc !5898
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !5899, !srcloc !5900
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !5901, !srcloc !5902
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !5903, !srcloc !5904
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !5905, !srcloc !5906
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !5907, !srcloc !5908
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !5909, !srcloc !5910
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !5911, !srcloc !5912
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_SYMBOLS\0A\09.equ\09CONFIG_OUTPUT_SYMBOLS,1\0A\09.type\09CONFIG_OUTPUT_SYMBOLS,%object", ""() #23, !dbg !5913, !srcloc !5914
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !5915, !srcloc !5916
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !5917, !srcloc !5918
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !5919, !srcloc !5920
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !5921, !srcloc !5922
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !5923, !srcloc !5924
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !5925, !srcloc !5926
  ret void, !dbg !5927
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5928 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5930, metadata !DIExpression()), !dbg !5932
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !5933
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !5934
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !5935, !srcloc !5944
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5935
  call void @llvm.dbg.value(metadata i32 %3, metadata !5941, metadata !DIExpression()) #23, !dbg !5945
  call void @llvm.dbg.value(metadata i32 undef, metadata !5942, metadata !DIExpression()) #23, !dbg !5945
  call void @llvm.dbg.value(metadata i32 %3, metadata !5931, metadata !DIExpression()), !dbg !5932
  call void @llvm.dbg.value(metadata i32 %3, metadata !5946, metadata !DIExpression()) #23, !dbg !5951
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !5953, !srcloc !5954
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5955
  ret i32 0, !dbg !5956
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #14 !dbg !5957 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5959
  %2 = or i32 %1, 512, !dbg !5959
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5959
  ret void, !dbg !5960
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #14 !dbg !5961 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5962
  %2 = or i32 %1, 1024, !dbg !5962
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5962
  ret void, !dbg !5963
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !5964 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5966, metadata !DIExpression()), !dbg !5967
  ret i32 0, !dbg !5968
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5969 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5972, metadata !DIExpression()), !dbg !5980
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5981
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5981
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5973, metadata !DIExpression()), !dbg !5982
  call void @llvm.va_start(i8* nonnull %3), !dbg !5983
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5984
  %5 = load i32, i32* %4, align 4, !dbg !5984
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5984
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5984
  call void @llvm.va_end(i8* nonnull %3), !dbg !5985
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5986
  ret void, !dbg !5986
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !5987 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5992, metadata !DIExpression()), !dbg !5993
  call void @llvm.dbg.value(metadata i8* %0, metadata !5991, metadata !DIExpression()), !dbg !5993
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !5994
  ret void, !dbg !5995
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5996 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6000, metadata !DIExpression()), !dbg !6004
  call void @llvm.dbg.value(metadata i8* %1, metadata !6001, metadata !DIExpression()), !dbg !6004
  call void @llvm.dbg.value(metadata i32 %2, metadata !6002, metadata !DIExpression()), !dbg !6004
  call void @llvm.dbg.value(metadata i8* %1, metadata !6003, metadata !DIExpression()), !dbg !6004
  %4 = icmp eq i32 %2, 0, !dbg !6005
  br i1 %4, label %14, label %5, !dbg !6006

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #24, !dbg !6004
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6006

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6003, metadata !DIExpression()), !dbg !6004
  call void @llvm.dbg.value(metadata i32 %10, metadata !6002, metadata !DIExpression()), !dbg !6004
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i32 noundef %7) #25, !dbg !6007
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6009
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6010
  call void @llvm.dbg.value(metadata i32 %11, metadata !6002, metadata !DIExpression()), !dbg !6004
  call void @llvm.dbg.value(metadata i8* %12, metadata !6003, metadata !DIExpression()), !dbg !6004
  br i1 %13, label %14, label %8, !dbg !6010, !llvm.loop !6011

14:                                               ; preds = %8, %3
  ret void, !dbg !6013
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #4 !dbg !6014 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6019, metadata !DIExpression()), !dbg !6020
  %2 = add i32 %0, -1, !dbg !6021
  %3 = icmp ult i32 %2, 4, !dbg !6021
  %4 = shl i32 %2, 3, !dbg !6021
  %5 = lshr i32 1145657157, %4, !dbg !6021
  %6 = trunc i32 %5 to i8, !dbg !6021
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6021
  ret i8 %7, !dbg !6022
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6023 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6027, metadata !DIExpression()), !dbg !6038
  call void @llvm.dbg.value(metadata i32 %1, metadata !6028, metadata !DIExpression()), !dbg !6038
  call void @llvm.dbg.value(metadata i32 0, metadata !6029, metadata !DIExpression()), !dbg !6039
  br label %4, !dbg !6040

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.23, i32 0, i32 0)) #25, !dbg !6041
  call void @llvm.dbg.value(metadata i32 0, metadata !6031, metadata !DIExpression()), !dbg !6042
  br label %16, !dbg !6043

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6029, metadata !DIExpression()), !dbg !6039
  %6 = icmp ult i32 %5, %1, !dbg !6044
  br i1 %6, label %7, label %11, !dbg !6048

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6049
  %9 = load i8, i8* %8, align 1, !dbg !6049
  %10 = zext i8 %9 to i32, !dbg !6051
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.24, i32 0, i32 0), i32 noundef %10) #25, !dbg !6052
  br label %12, !dbg !6053

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.25, i32 0, i32 0)) #25, !dbg !6054
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6056
  call void @llvm.dbg.value(metadata i32 %13, metadata !6029, metadata !DIExpression()), !dbg !6039
  %14 = icmp eq i32 %13, 8, !dbg !6057
  br i1 %14, label %3, label %4, !dbg !6040, !llvm.loop !6058

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.26, i32 0, i32 0)) #25, !dbg !6060
  ret void, !dbg !6061

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6031, metadata !DIExpression()), !dbg !6042
  %18 = icmp ult i32 %17, %1, !dbg !6062
  br i1 %18, label %19, label %26, !dbg !6063

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6064
  %21 = load i8, i8* %20, align 1, !dbg !6064
  call void @llvm.dbg.value(metadata i8 %21, metadata !6033, metadata !DIExpression()), !dbg !6065
  %22 = zext i8 %21 to i32, !dbg !6066
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6067
  %24 = icmp eq i32 %23, 0, !dbg !6068
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6067
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.27, i32 0, i32 0), i32 noundef %25) #25, !dbg !6069
  br label %27, !dbg !6070

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.28, i32 0, i32 0)) #25, !dbg !6071
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6073
  call void @llvm.dbg.value(metadata i32 %28, metadata !6031, metadata !DIExpression()), !dbg !6042
  %29 = icmp eq i32 %28, 8, !dbg !6074
  br i1 %29, label %15, label %16, !dbg !6043, !llvm.loop !6075
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #4 !dbg !6077 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6079, metadata !DIExpression()), !dbg !6080
  %2 = add i32 %0, -32, !dbg !6081
  %3 = icmp ult i32 %2, 95, !dbg !6081
  %4 = zext i1 %3 to i32, !dbg !6081
  ret i32 %4, !dbg !6082
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6083 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6132, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6133, metadata !DIExpression()), !dbg !6134
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6135
  br i1 %3, label %5, label %4, !dbg !6137

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6138
  br label %5, !dbg !6140

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6141
  ret void, !dbg !6142
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6143 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6147, metadata !DIExpression()), !dbg !6148
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6149
  %3 = load i32, i32* %2, align 4, !dbg !6149
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6149
  %5 = load i32, i32* %4, align 4, !dbg !6149
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6149
  %7 = load i32, i32* %6, align 4, !dbg !6149
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6149
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6154
  %9 = load i32, i32* %8, align 4, !dbg !6154
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6154
  %11 = load i32, i32* %10, align 4, !dbg !6154
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6154
  %13 = load i32, i32* %12, align 4, !dbg !6154
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.30, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6154
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6159
  %15 = load i32, i32* %14, align 4, !dbg !6159
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.31, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6159
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6164
  %17 = load i32, i32* %16, align 4, !dbg !6164
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6164
  ret void, !dbg !6169
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6170 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6187, metadata !DIExpression()), !dbg !6190
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6188, metadata !DIExpression()), !dbg !6190
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6191
  %4 = load i32, i32* %3, align 4, !dbg !6191
  call void @llvm.dbg.value(metadata i32 %4, metadata !6189, metadata !DIExpression()), !dbg !6190
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6192
  ret void, !dbg !6193
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !6194 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6196, metadata !DIExpression()), !dbg !6199
  call void @llvm.dbg.value(metadata i8* %0, metadata !6197, metadata !DIExpression()), !dbg !6199
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6200
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6200
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6198, metadata !DIExpression()), !dbg !6201
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6201
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6202
  %5 = bitcast i8* %4 to i32*, !dbg !6202
  %6 = load i32, i32* %5, align 4, !dbg !6202
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6203
  store i32 %6, i32* %7, align 4, !dbg !6204
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6205
  unreachable, !dbg !6206
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6207 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6210, metadata !DIExpression()), !dbg !6211
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6212
  ret void, !dbg !6213
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6214 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6218, metadata !DIExpression()), !dbg !6219
  %2 = icmp sgt i32 %0, -1, !dbg !6220
  br i1 %2, label %3, label %8, !dbg !6222

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6223, !srcloc !6225
  %4 = and i32 %0, 31, !dbg !6226
  %5 = shl nuw i32 1, %4, !dbg !6227
  %6 = lshr i32 %0, 5, !dbg !6228
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6229
  store volatile i32 %5, i32* %7, align 4, !dbg !6230
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6231, !srcloc !6232
  br label %8, !dbg !6233

8:                                                ; preds = %3, %1
  ret void, !dbg !6234
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6235 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6237, metadata !DIExpression()), !dbg !6238
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6239
  ret void, !dbg !6240
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6241 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6243, metadata !DIExpression()), !dbg !6244
  %2 = icmp sgt i32 %0, -1, !dbg !6245
  br i1 %2, label %3, label %8, !dbg !6247

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6248
  %5 = shl nuw i32 1, %4, !dbg !6250
  %6 = lshr i32 %0, 5, !dbg !6251
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6252
  store volatile i32 %5, i32* %7, align 4, !dbg !6253
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6254, !srcloc !6258
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6259, !srcloc !6262
  br label %8, !dbg !6263

8:                                                ; preds = %3, %1
  ret void, !dbg !6264
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !6265 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6269, metadata !DIExpression()), !dbg !6270
  %2 = lshr i32 %0, 5, !dbg !6271
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6272
  %4 = load volatile i32, i32* %3, align 4, !dbg !6272
  %5 = and i32 %0, 31, !dbg !6273
  %6 = shl nuw i32 1, %5, !dbg !6273
  %7 = and i32 %4, %6, !dbg !6274
  ret i32 %7, !dbg !6275
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6276 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6280, metadata !DIExpression()), !dbg !6283
  call void @llvm.dbg.value(metadata i32 %1, metadata !6281, metadata !DIExpression()), !dbg !6283
  call void @llvm.dbg.value(metadata i32 %2, metadata !6282, metadata !DIExpression()), !dbg !6283
  %4 = add i32 %1, 1, !dbg !6284
  call void @llvm.dbg.value(metadata i32 %4, metadata !6281, metadata !DIExpression()), !dbg !6283
  %5 = icmp ult i32 %4, 16, !dbg !6287
  br i1 %5, label %7, label %6, !dbg !6290

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #25, !dbg !6291
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.36, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #25, !dbg !6291
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #25, !dbg !6291
  unreachable, !dbg !6291

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6293
  ret void, !dbg !6294
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6295 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6299, metadata !DIExpression()), !dbg !6301
  call void @llvm.dbg.value(metadata i32 %1, metadata !6300, metadata !DIExpression()), !dbg !6301
  %3 = trunc i32 %1 to i8, !dbg !6302
  %4 = shl i8 %3, 4, !dbg !6302
  %5 = and i32 %0, 15, !dbg !6304
  %6 = add nsw i32 %5, -4, !dbg !6304
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6304
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6304
  %9 = icmp slt i32 %0, 0, !dbg !6304
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6304
  store volatile i8 %4, i8* %10, align 1, !dbg !6302
  ret void, !dbg !6305
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6306 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6308, metadata !DIExpression()), !dbg !6309
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6310
  ret void, !dbg !6311
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6312 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6314
  tail call void @z_arm_int_exit() #25, !dbg !6315
  ret void, !dbg !6316
}

; Function Attrs: optsize
declare !dbg !6317 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6318 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !6320 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6322
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !6323
  tail call void @z_bss_zero() #25, !dbg !6324
  tail call void @z_data_copy() #25, !dbg !6325
  tail call void @z_arm_interrupt_init() #25, !dbg !6326
  tail call void @z_cstart() #27, !dbg !6327
  unreachable, !dbg !6327
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6328 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6329
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6330, !srcloc !6333
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6334, !srcloc !6337
  ret void, !dbg !6338
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6339 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6340
  %2 = and i32 %1, -15728641, !dbg !6340
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6340
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6341, !srcloc !6348
  call void @llvm.dbg.value(metadata i32 %3, metadata !6346, metadata !DIExpression()) #23, !dbg !6349
  %4 = and i32 %3, -5, !dbg !6350
  call void @llvm.dbg.value(metadata i32 %4, metadata !6351, metadata !DIExpression()) #23, !dbg !6356
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6358, !srcloc !6359
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6360, !srcloc !6337
  ret void, !dbg !6362
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6363 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6366, metadata !DIExpression()), !dbg !6367
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6368
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6369
  store i32 %0, i32* %3, align 4, !dbg !6370
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6371
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6372
  store i32 %4, i32* %5, align 4, !dbg !6373
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6374
  %7 = or i32 %6, 268435456, !dbg !6374
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6374
  call void @llvm.dbg.value(metadata i32 0, metadata !6375, metadata !DIExpression()) #23, !dbg !6378
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6380, !srcloc !6381
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6382
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6383
  %10 = load i32, i32* %9, align 4, !dbg !6383
  ret i32 %10, !dbg !6384
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6385 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6498, metadata !DIExpression()), !dbg !6506
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6499, metadata !DIExpression()), !dbg !6506
  call void @llvm.dbg.value(metadata i8* %2, metadata !6500, metadata !DIExpression()), !dbg !6506
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6501, metadata !DIExpression()), !dbg !6506
  call void @llvm.dbg.value(metadata i8* %4, metadata !6502, metadata !DIExpression()), !dbg !6506
  call void @llvm.dbg.value(metadata i8* %5, metadata !6503, metadata !DIExpression()), !dbg !6506
  call void @llvm.dbg.value(metadata i8* %6, metadata !6504, metadata !DIExpression()), !dbg !6506
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6507
  call void @llvm.dbg.value(metadata i8* %8, metadata !6505, metadata !DIExpression()), !dbg !6506
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6508
  %10 = bitcast i8* %9 to i32*, !dbg !6508
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6509
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6510
  %12 = bitcast i8* %8 to i32*, !dbg !6511
  store i32 %11, i32* %12, align 4, !dbg !6512
  %13 = ptrtoint i8* %4 to i32, !dbg !6513
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6514
  %15 = bitcast i8* %14 to i32*, !dbg !6514
  store i32 %13, i32* %15, align 4, !dbg !6515
  %16 = ptrtoint i8* %5 to i32, !dbg !6516
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6517
  %18 = bitcast i8* %17 to i32*, !dbg !6517
  store i32 %16, i32* %18, align 4, !dbg !6518
  %19 = ptrtoint i8* %6 to i32, !dbg !6519
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6520
  %21 = bitcast i8* %20 to i32*, !dbg !6520
  store i32 %19, i32* %21, align 4, !dbg !6521
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6522
  %23 = bitcast i8* %22 to i32*, !dbg !6522
  store i32 16777216, i32* %23, align 4, !dbg !6523
  %24 = ptrtoint i8* %8 to i32, !dbg !6524
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6525
  store i32 %24, i32* %25, align 8, !dbg !6526
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6527
  store i32 0, i32* %26, align 4, !dbg !6528
  ret void, !dbg !6529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6530 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6535, metadata !DIExpression()), !dbg !6541
  call void @llvm.dbg.value(metadata i32 %1, metadata !6536, metadata !DIExpression()), !dbg !6541
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6542
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6537, metadata !DIExpression()), !dbg !6541
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6543
  br i1 %4, label %19, label %5, !dbg !6545

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6540, metadata !DIExpression()), !dbg !6541
  %6 = icmp eq i32 %0, -22, !dbg !6546
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6546
  %8 = load i32, i32* %7, align 4, !dbg !6546
  br i1 %6, label %16, label %9, !dbg !6548

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6546
  %11 = icmp ule i32 %10, %0, !dbg !6546
  %12 = icmp ugt i32 %8, %0, !dbg !6546
  %13 = and i1 %12, %11, !dbg !6546
  %14 = icmp ugt i32 %8, %1, !dbg !6546
  %15 = and i1 %14, %13, !dbg !6546
  br i1 %15, label %18, label %19, !dbg !6546

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6546
  br i1 %17, label %18, label %19, !dbg !6548

18:                                               ; preds = %9, %16
  br label %19, !dbg !6549

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6541
  ret i32 %20, !dbg !6551
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !6552 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6556, metadata !DIExpression()), !dbg !6559
  call void @llvm.dbg.value(metadata i8* %1, metadata !6557, metadata !DIExpression()), !dbg !6559
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6558, metadata !DIExpression()), !dbg !6559
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6560
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6561
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6562, !srcloc !6563
  unreachable, !dbg !6564
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6565 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6583, metadata !DIExpression()), !dbg !6593
  call void @llvm.dbg.value(metadata i32 %1, metadata !6584, metadata !DIExpression()), !dbg !6593
  call void @llvm.dbg.value(metadata i32 %2, metadata !6585, metadata !DIExpression()), !dbg !6593
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6586, metadata !DIExpression()), !dbg !6593
  call void @llvm.dbg.value(metadata i32 0, metadata !6587, metadata !DIExpression()), !dbg !6593
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6594
  call void @llvm.dbg.value(metadata i32 %8, metadata !6588, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6593
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6595
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6595
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6596
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6596
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6592, metadata !DIExpression()), !dbg !6597
  call void @llvm.dbg.value(metadata i32 0, metadata !6598, metadata !DIExpression()) #23, !dbg !6601
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6603, !srcloc !6604
  call void @llvm.dbg.value(metadata i8* %6, metadata !6590, metadata !DIExpression(DW_OP_deref)), !dbg !6593
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6605
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6591, metadata !DIExpression()), !dbg !6593
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6606
  br i1 %11, label %12, label %13, !dbg !6609

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6610
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.42, i32 0, i32 0)) #25, !dbg !6610
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6610
  unreachable, !dbg !6610

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6612
  call void @llvm.dbg.value(metadata i32 %14, metadata !6588, metadata !DIExpression()), !dbg !6593
  call void @llvm.dbg.value(metadata i8* %5, metadata !6589, metadata !DIExpression(DW_OP_deref)), !dbg !6593
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6613
  call void @llvm.dbg.value(metadata i32 %15, metadata !6587, metadata !DIExpression()), !dbg !6593
  %16 = load i8, i8* %5, align 1, !dbg !6614, !range !6616
  call void @llvm.dbg.value(metadata i8 %16, metadata !6589, metadata !DIExpression()), !dbg !6593
  %17 = icmp eq i8 %16, 0, !dbg !6614
  br i1 %17, label %18, label %35, !dbg !6617

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6618
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #25, !dbg !6619
  %21 = load i8, i8* %6, align 1, !dbg !6620, !range !6616
  call void @llvm.dbg.value(metadata i8 %21, metadata !6590, metadata !DIExpression()), !dbg !6593
  %22 = icmp eq i8 %21, 0, !dbg !6620
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6622
  %24 = load i32, i32* %23, align 4, !dbg !6622
  br i1 %22, label %30, label %25, !dbg !6623

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6624
  %27 = icmp eq i32 %26, 0, !dbg !6627
  br i1 %27, label %28, label %34, !dbg !6628

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6629
  br label %32, !dbg !6631

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6632
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6622
  br label %34, !dbg !6634

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #25, !dbg !6634
  br label %35, !dbg !6635

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6635
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6635
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6635
  ret void, !dbg !6635
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6636 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6641, metadata !DIExpression()), !dbg !6647
  call void @llvm.dbg.value(metadata i32 %1, metadata !6642, metadata !DIExpression()), !dbg !6647
  call void @llvm.dbg.value(metadata i32 %2, metadata !6643, metadata !DIExpression()), !dbg !6647
  call void @llvm.dbg.value(metadata i8* %3, metadata !6644, metadata !DIExpression()), !dbg !6647
  call void @llvm.dbg.value(metadata i8 0, metadata !6645, metadata !DIExpression()), !dbg !6647
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6646, metadata !DIExpression()), !dbg !6647
  store i8 0, i8* %3, align 1, !dbg !6648
  %5 = icmp ugt i32 %2, -16777217, !dbg !6649
  br i1 %5, label %6, label %17, !dbg !6651

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6652
  %8 = icmp eq i32 %7, 8, !dbg !6652
  br i1 %8, label %9, label %10, !dbg !6652

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.55, i32 0, i32 0), i32 noundef 69) #25, !dbg !6654
  br label %17, !dbg !6660

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6661
  %12 = icmp eq i32 %11, 0, !dbg !6661
  br i1 %12, label %13, label %14, !dbg !6662

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6646, metadata !DIExpression()), !dbg !6647
  store i8 1, i8* %3, align 1, !dbg !6665
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6647
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6646, metadata !DIExpression()), !dbg !6647
  br label %17, !dbg !6668

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6647
  ret %struct.__esf* %18, !dbg !6669
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6670 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6674, metadata !DIExpression()), !dbg !6678
  call void @llvm.dbg.value(metadata i32 %1, metadata !6675, metadata !DIExpression()), !dbg !6678
  call void @llvm.dbg.value(metadata i8* %2, metadata !6676, metadata !DIExpression()), !dbg !6678
  call void @llvm.dbg.value(metadata i32 0, metadata !6677, metadata !DIExpression()), !dbg !6678
  store i8 0, i8* %2, align 1, !dbg !6679
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6680

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6681
  call void @llvm.dbg.value(metadata i32 %5, metadata !6677, metadata !DIExpression()), !dbg !6678
  br label %12, !dbg !6683

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6684
  call void @llvm.dbg.value(metadata i32 %7, metadata !6677, metadata !DIExpression()), !dbg !6678
  br label %12, !dbg !6685

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6686
  call void @llvm.dbg.value(metadata i32 0, metadata !6677, metadata !DIExpression()), !dbg !6678
  br label %12, !dbg !6687

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6688
  call void @llvm.dbg.value(metadata i32 0, metadata !6677, metadata !DIExpression()), !dbg !6678
  br label %12, !dbg !6689

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6690
  br label %12, !dbg !6691

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !6692
  br label %12, !dbg !6693

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6678
  call void @llvm.dbg.value(metadata i32 %13, metadata !6677, metadata !DIExpression()), !dbg !6678
  ret i32 %13, !dbg !6694
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6695 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6699, metadata !DIExpression()), !dbg !6702
  call void @llvm.dbg.value(metadata i8* %1, metadata !6700, metadata !DIExpression()), !dbg !6702
  call void @llvm.dbg.value(metadata i32 0, metadata !6701, metadata !DIExpression()), !dbg !6702
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.47, i32 0, i32 0), i32 noundef 69) #25, !dbg !6703
  store i8 0, i8* %1, align 1, !dbg !6708
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6709
  %4 = and i32 %3, 2, !dbg !6711
  %5 = icmp eq i32 %4, 0, !dbg !6712
  br i1 %5, label %7, label %6, !dbg !6713

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.48, i32 0, i32 0), i32 noundef 69) #25, !dbg !6714
  br label %38, !dbg !6720

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6721
  %9 = icmp sgt i32 %8, -1, !dbg !6723
  br i1 %9, label %11, label %10, !dbg !6724

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.49, i32 0, i32 0), i32 noundef 69) #25, !dbg !6725
  br label %38, !dbg !6731

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6732
  %13 = and i32 %12, 1073741824, !dbg !6734
  %14 = icmp eq i32 %13, 0, !dbg !6735
  br i1 %14, label %37, label %15, !dbg !6736

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.50, i32 0, i32 0), i32 noundef 69) #25, !dbg !6737
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6743
  br i1 %16, label %17, label %21, !dbg !6745

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6746
  %19 = load i32, i32* %18, align 4, !dbg !6746
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.51, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !6746
  %20 = load i32, i32* %18, align 4, !dbg !6752
  call void @llvm.dbg.value(metadata i32 %20, metadata !6701, metadata !DIExpression()), !dbg !6702
  br label %38, !dbg !6753

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6754
  %23 = and i32 %22, 255, !dbg !6756
  %24 = icmp eq i32 %23, 0, !dbg !6757
  br i1 %24, label %27, label %25, !dbg !6758

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6759
  call void @llvm.dbg.value(metadata i32 %26, metadata !6701, metadata !DIExpression()), !dbg !6702
  br label %38, !dbg !6761

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6762
  %29 = and i32 %28, 65280, !dbg !6764
  %30 = icmp eq i32 %29, 0, !dbg !6765
  br i1 %30, label %32, label %31, !dbg !6766

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6767
  call void @llvm.dbg.value(metadata i32 0, metadata !6701, metadata !DIExpression()), !dbg !6702
  br label %38, !dbg !6769

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6770
  %34 = icmp ult i32 %33, 65536, !dbg !6772
  br i1 %34, label %36, label %35, !dbg !6773

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !6774
  call void @llvm.dbg.value(metadata i32 0, metadata !6701, metadata !DIExpression()), !dbg !6702
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #25, !dbg !6776
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.53, i32 0, i32 0)) #25, !dbg !6776
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #25, !dbg !6776
  unreachable, !dbg !6776

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #25, !dbg !6781
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.54, i32 0, i32 0)) #25, !dbg !6781
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #25, !dbg !6781
  unreachable, !dbg !6781

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6702
  call void @llvm.dbg.value(metadata i32 %39, metadata !6701, metadata !DIExpression()), !dbg !6702
  ret i32 %39, !dbg !6786
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6787 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6789, metadata !DIExpression()), !dbg !6802
  call void @llvm.dbg.value(metadata i32 %1, metadata !6790, metadata !DIExpression()), !dbg !6802
  call void @llvm.dbg.value(metadata i8* %2, metadata !6791, metadata !DIExpression()), !dbg !6802
  call void @llvm.dbg.value(metadata i32 0, metadata !6792, metadata !DIExpression()), !dbg !6802
  call void @llvm.dbg.value(metadata i32 -22, metadata !6793, metadata !DIExpression()), !dbg !6802
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.46, i32 0, i32 0), i32 noundef 69) #25, !dbg !6803
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6808
  %5 = and i32 %4, 16, !dbg !6810
  %6 = icmp eq i32 %5, 0, !dbg !6811
  br i1 %6, label %8, label %7, !dbg !6812

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !6813
  br label %8, !dbg !6819

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6820
  %10 = and i32 %9, 8, !dbg !6822
  %11 = icmp eq i32 %10, 0, !dbg !6823
  br i1 %11, label %13, label %12, !dbg !6824

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6825
  br label %13, !dbg !6831

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6832
  %15 = and i32 %14, 2, !dbg !6833
  %16 = icmp eq i32 %15, 0, !dbg !6834
  br i1 %16, label %27, label %17, !dbg !6835

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #25, !dbg !6836
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6841
  call void @llvm.dbg.value(metadata i32 %18, metadata !6794, metadata !DIExpression()), !dbg !6842
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6843
  %20 = and i32 %19, 128, !dbg !6845
  %21 = icmp eq i32 %20, 0, !dbg !6846
  br i1 %21, label %27, label %22, !dbg !6847

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6793, metadata !DIExpression()), !dbg !6802
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !6848
  %23 = icmp eq i32 %1, 0, !dbg !6854
  br i1 %23, label %27, label %24, !dbg !6856

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6857
  %26 = and i32 %25, -129, !dbg !6857
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6857
  br label %27, !dbg !6859

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6802
  call void @llvm.dbg.value(metadata i32 %28, metadata !6793, metadata !DIExpression()), !dbg !6802
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6860
  %30 = and i32 %29, 1, !dbg !6862
  %31 = icmp eq i32 %30, 0, !dbg !6863
  br i1 %31, label %33, label %32, !dbg !6864

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #25, !dbg !6865
  br label %33, !dbg !6871

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6872
  %35 = and i32 %34, 32, !dbg !6874
  %36 = icmp eq i32 %35, 0, !dbg !6875
  br i1 %36, label %38, label %37, !dbg !6876

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !6877
  br label %38, !dbg !6883

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6884
  %40 = and i32 %39, 16, !dbg !6885
  %41 = icmp eq i32 %40, 0, !dbg !6885
  br i1 %41, label %42, label %46, !dbg !6886

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6887
  %44 = and i32 %43, 2, !dbg !6888
  %45 = icmp eq i32 %44, 0, !dbg !6888
  br i1 %45, label %60, label %46, !dbg !6889

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6890
  %48 = and i32 %47, 2048, !dbg !6891
  %49 = icmp eq i32 %48, 0, !dbg !6891
  br i1 %49, label %60, label %50, !dbg !6892

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !6893
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #25, !dbg !6894
  call void @llvm.dbg.value(metadata i32 %52, metadata !6797, metadata !DIExpression()), !dbg !6895
  %53 = icmp eq i32 %52, 0, !dbg !6896
  br i1 %53, label %55, label %54, !dbg !6898

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !6899, metadata !DIExpression()) #23, !dbg !6902
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !6905, !srcloc !6906
  call void @llvm.dbg.value(metadata i32 2, metadata !6792, metadata !DIExpression()), !dbg !6802
  br label %60, !dbg !6907

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6908
  %57 = and i32 %56, 16, !dbg !6908
  %58 = icmp eq i32 %57, 0, !dbg !6908
  br i1 %58, label %60, label %59, !dbg !6912

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #25, !dbg !6913
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #25, !dbg !6913
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #25, !dbg !6913
  unreachable, !dbg !6913

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !6802
  call void @llvm.dbg.value(metadata i32 %61, metadata !6792, metadata !DIExpression()), !dbg !6802
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6915
  %63 = and i32 %62, 32, !dbg !6917
  %64 = icmp eq i32 %63, 0, !dbg !6918
  br i1 %64, label %68, label %65, !dbg !6919

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6920
  %67 = and i32 %66, -8193, !dbg !6920
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6920
  br label %68, !dbg !6922

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6923
  %70 = or i32 %69, 255, !dbg !6923
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6923
  store i8 0, i8* %2, align 1, !dbg !6924
  ret i32 %61, !dbg !6925
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6926 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6930, metadata !DIExpression()), !dbg !6937
  call void @llvm.dbg.value(metadata i32 %0, metadata !6931, metadata !DIExpression()), !dbg !6937
  call void @llvm.dbg.value(metadata i8* %1, metadata !6932, metadata !DIExpression()), !dbg !6937
  call void @llvm.dbg.value(metadata i32 0, metadata !6933, metadata !DIExpression()), !dbg !6937
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22.45, i32 0, i32 0), i32 noundef 69) #25, !dbg !6938
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6943
  %4 = and i32 %3, 4096, !dbg !6945
  %5 = icmp eq i32 %4, 0, !dbg !6945
  br i1 %5, label %7, label %6, !dbg !6946

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #25, !dbg !6947
  br label %7, !dbg !6953

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6954
  %9 = and i32 %8, 2048, !dbg !6956
  %10 = icmp eq i32 %9, 0, !dbg !6956
  br i1 %10, label %12, label %11, !dbg !6957

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6958
  br label %12, !dbg !6964

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6965
  %14 = and i32 %13, 512, !dbg !6966
  %15 = icmp eq i32 %14, 0, !dbg !6966
  br i1 %15, label %26, label %16, !dbg !6967

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !6968
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6973
  call void @llvm.dbg.value(metadata i32 %17, metadata !6934, metadata !DIExpression()), !dbg !6974
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6975
  %19 = and i32 %18, 32768, !dbg !6977
  %20 = icmp eq i32 %19, 0, !dbg !6978
  br i1 %20, label %26, label %21, !dbg !6979

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6980
  %22 = icmp eq i32 %0, 0, !dbg !6986
  br i1 %22, label %26, label %23, !dbg !6988

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6989
  %25 = and i32 %24, -32769, !dbg !6989
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6989
  br label %26, !dbg !6991

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6992
  %28 = and i32 %27, 1024, !dbg !6994
  %29 = icmp eq i32 %28, 0, !dbg !6994
  br i1 %29, label %31, label %30, !dbg !6995

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #25, !dbg !6996
  br label %31, !dbg !7002

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7003
  %33 = and i32 %32, 256, !dbg !7005
  %34 = icmp eq i32 %33, 0, !dbg !7006
  br i1 %34, label %35, label %39, !dbg !7007

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7008
  %37 = and i32 %36, 8192, !dbg !7010
  %38 = icmp eq i32 %37, 0, !dbg !7010
  br i1 %38, label %41, label %39, !dbg !7011

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !7012
  br label %41, !dbg !7013

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7013
  %43 = or i32 %42, 65280, !dbg !7013
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7013
  store i8 0, i8* %1, align 1, !dbg !7014
  ret void, !dbg !7015
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7016 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7022, metadata !DIExpression()), !dbg !7024
  call void @llvm.dbg.value(metadata i32 0, metadata !7023, metadata !DIExpression()), !dbg !7024
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #25, !dbg !7025
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7030
  %2 = and i32 %1, 33554432, !dbg !7032
  %3 = icmp eq i32 %2, 0, !dbg !7033
  br i1 %3, label %5, label %4, !dbg !7034

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29.43, i32 0, i32 0), i32 noundef 69) #25, !dbg !7035
  br label %5, !dbg !7041

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7042
  %7 = and i32 %6, 16777216, !dbg !7044
  %8 = icmp eq i32 %7, 0, !dbg !7045
  br i1 %8, label %10, label %9, !dbg !7046

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #25, !dbg !7047
  br label %10, !dbg !7053

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7054
  %12 = and i32 %11, 524288, !dbg !7056
  %13 = icmp eq i32 %12, 0, !dbg !7057
  br i1 %13, label %15, label %14, !dbg !7058

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #25, !dbg !7059
  br label %15, !dbg !7065

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7066
  %17 = and i32 %16, 262144, !dbg !7068
  %18 = icmp eq i32 %17, 0, !dbg !7069
  br i1 %18, label %20, label %19, !dbg !7070

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #25, !dbg !7071
  br label %20, !dbg !7077

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7078
  %22 = and i32 %21, 131072, !dbg !7080
  %23 = icmp eq i32 %22, 0, !dbg !7081
  br i1 %23, label %25, label %24, !dbg !7082

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33.44, i32 0, i32 0), i32 noundef 69) #25, !dbg !7083
  br label %25, !dbg !7089

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7090
  %27 = and i32 %26, 65536, !dbg !7092
  %28 = icmp eq i32 %27, 0, !dbg !7093
  br i1 %28, label %30, label %29, !dbg !7094

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #25, !dbg !7095
  br label %30, !dbg !7101

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7102
  %32 = or i32 %31, -65536, !dbg !7102
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7102
  ret void, !dbg !7103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7104 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7108, metadata !DIExpression()), !dbg !7110
  call void @llvm.dbg.value(metadata i8* %0, metadata !7109, metadata !DIExpression()), !dbg !7110
  store i8 0, i8* %0, align 1, !dbg !7111
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #25, !dbg !7112
  ret void, !dbg !7117
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7118 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7122, metadata !DIExpression()), !dbg !7124
  call void @llvm.dbg.value(metadata i32 %0, metadata !7123, metadata !DIExpression()), !dbg !7124
  %2 = icmp slt i32 %0, 16, !dbg !7125
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !7125
  %4 = add nsw i32 %0, -16, !dbg !7125
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7125
  ret void, !dbg !7130
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7131 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7135, metadata !DIExpression()), !dbg !7138
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7139
  %3 = load i32, i32* %2, align 4, !dbg !7139
  %4 = inttoptr i32 %3 to i16*, !dbg !7140
  call void @llvm.dbg.value(metadata i16* %4, metadata !7136, metadata !DIExpression()), !dbg !7138
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7141
  %6 = or i32 %5, 256, !dbg !7141
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7141
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7142, !srcloc !7145
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7146, !srcloc !7149
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7150
  %8 = load i16, i16* %7, align 2, !dbg !7151
  call void @llvm.dbg.value(metadata i16 %8, metadata !7137, metadata !DIExpression()), !dbg !7138
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7152
  %10 = and i32 %9, -257, !dbg !7152
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7152
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7153, !srcloc !7145
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7155, !srcloc !7149
  %11 = icmp eq i16 %8, -8446, !dbg !7157
  ret i1 %11, !dbg !7159
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !7160 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7161
  %2 = or i32 %1, 16, !dbg !7161
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7161
  ret void, !dbg !7162
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !7163 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7166, metadata !DIExpression()), !dbg !7167
  br label %1, !dbg !7168

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7166, metadata !DIExpression()), !dbg !7167
  tail call fastcc void @__NVIC_SetPriority.58(i32 noundef %2) #24, !dbg !7170
  %3 = add nuw nsw i32 %2, 1, !dbg !7173
  call void @llvm.dbg.value(metadata i32 %3, metadata !7166, metadata !DIExpression()), !dbg !7167
  %4 = icmp eq i32 %3, 82, !dbg !7174
  br i1 %4, label %5, label %1, !dbg !7168, !llvm.loop !7175

5:                                                ; preds = %1
  ret void, !dbg !7177
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.58(i32 noundef %0) unnamed_addr #14 !dbg !7178 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7180, metadata !DIExpression()), !dbg !7182
  call void @llvm.dbg.value(metadata i32 1, metadata !7181, metadata !DIExpression()), !dbg !7182
  %2 = and i32 %0, 15, !dbg !7183
  %3 = add nsw i32 %2, -4, !dbg !7183
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7183
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7183
  %6 = icmp slt i32 %0, 0, !dbg !7183
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7183
  store volatile i8 16, i8* %7, align 1, !dbg !7184
  ret void, !dbg !7186
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7187 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7296, metadata !DIExpression()), !dbg !7297
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7298
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7300
  br i1 %3, label %4, label %12, !dbg !7301

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7302, !srcloc !7314
  call void @llvm.dbg.value(metadata i32 %5, metadata !7305, metadata !DIExpression()) #23, !dbg !7315
  %6 = icmp eq i32 %5, 0, !dbg !7316
  br i1 %6, label %12, label %7, !dbg !7317

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7318
  %9 = or i32 %8, 268435456, !dbg !7318
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7318
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7320
  %11 = and i32 %10, -32769, !dbg !7320
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7320
  br label %12, !dbg !7321

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7322
  ret void, !dbg !7323
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7324 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7325
  ret void, !dbg !7326
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !303 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !429, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.value(metadata i8 0, metadata !430, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.value(metadata i32 64, metadata !432, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.value(metadata i32 undef, metadata !431, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7327
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7328
  %3 = load i32, i32* %2, align 4, !dbg !7328
  call void @llvm.dbg.value(metadata i32 %3, metadata !431, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7327
  %4 = add i32 %3, -64, !dbg !7330
  call void @llvm.dbg.value(metadata i32 %4, metadata !431, metadata !DIExpression()), !dbg !7327
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7331
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7332
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7333
  call void @llvm.dbg.value(metadata i8 1, metadata !430, metadata !DIExpression()), !dbg !7327
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7334
  ret void, !dbg !7335
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7336 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7337
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7338, !srcloc !7341
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7342, !srcloc !7345
  ret void, !dbg !7346
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7347 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7348, !srcloc !7351
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7352
  ret void, !dbg !7353
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7354 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7369, metadata !DIExpression()), !dbg !7373
  call void @llvm.dbg.value(metadata i8 %1, metadata !7370, metadata !DIExpression()), !dbg !7373
  call void @llvm.dbg.value(metadata i32 %2, metadata !7371, metadata !DIExpression()), !dbg !7373
  call void @llvm.dbg.value(metadata i32 %3, metadata !7372, metadata !DIExpression()), !dbg !7373
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7374
  %6 = icmp eq i32 %5, -22, !dbg !7376
  br i1 %6, label %7, label %9, !dbg !7377

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #25, !dbg !7378
  %8 = zext i8 %1 to i32, !dbg !7378
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.70, i32 0, i32 0), i32 noundef %8) #25, !dbg !7378
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #25, !dbg !7378
  unreachable, !dbg !7378

9:                                                ; preds = %4
  ret void, !dbg !7383
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7384 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7389, metadata !DIExpression()), !dbg !7394
  call void @llvm.dbg.value(metadata i8 %1, metadata !7390, metadata !DIExpression()), !dbg !7394
  call void @llvm.dbg.value(metadata i32 undef, metadata !7391, metadata !DIExpression()), !dbg !7394
  call void @llvm.dbg.value(metadata i32 undef, metadata !7392, metadata !DIExpression()), !dbg !7394
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7395
  call void @llvm.dbg.value(metadata i8 %3, metadata !7393, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7394
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7396
  call void @llvm.dbg.value(metadata i32 %4, metadata !7393, metadata !DIExpression()), !dbg !7394
  %5 = trunc i32 %4 to i8, !dbg !7397
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7398
  ret i32 %4, !dbg !7399
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7400 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7404, metadata !DIExpression()), !dbg !7410
  call void @llvm.dbg.value(metadata i8 %1, metadata !7405, metadata !DIExpression()), !dbg !7410
  call void @llvm.dbg.value(metadata i8 %2, metadata !7406, metadata !DIExpression()), !dbg !7410
  call void @llvm.dbg.value(metadata i1 %3, metadata !7407, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7410
  %5 = zext i8 %2 to i32, !dbg !7411
  call void @llvm.dbg.value(metadata i32 %5, metadata !7409, metadata !DIExpression()), !dbg !7410
  call void @llvm.dbg.value(metadata i32 0, metadata !7408, metadata !DIExpression()), !dbg !7410
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7409, metadata !DIExpression()), !dbg !7410
  call void @llvm.dbg.value(metadata i32 0, metadata !7408, metadata !DIExpression()), !dbg !7410
  %7 = icmp eq i8 %1, 0, !dbg !7412
  br i1 %7, label %30, label %8, !dbg !7415

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7409, metadata !DIExpression()), !dbg !7410
  call void @llvm.dbg.value(metadata i32 %10, metadata !7408, metadata !DIExpression()), !dbg !7410
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7416
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7419
  %13 = load i32, i32* %12, align 4, !dbg !7419
  %14 = icmp eq i32 %13, 0, !dbg !7420
  br i1 %14, label %26, label %15, !dbg !7421

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7422

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7424
  %18 = icmp eq i32 %17, 0, !dbg !7424
  br i1 %18, label %19, label %20, !dbg !7425

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.71, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !7426
  br label %30, !dbg !7432

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7433
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7434
  call void @llvm.dbg.value(metadata i32 %22, metadata !7409, metadata !DIExpression()), !dbg !7410
  %23 = icmp eq i32 %22, -22, !dbg !7435
  br i1 %23, label %30, label %24, !dbg !7437

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7438
  call void @llvm.dbg.value(metadata i32 %25, metadata !7409, metadata !DIExpression()), !dbg !7410
  br label %26, !dbg !7439

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7410
  call void @llvm.dbg.value(metadata i32 %27, metadata !7409, metadata !DIExpression()), !dbg !7410
  %28 = add nuw nsw i32 %10, 1, !dbg !7440
  call void @llvm.dbg.value(metadata i32 %28, metadata !7408, metadata !DIExpression()), !dbg !7410
  %29 = icmp eq i32 %28, %6, !dbg !7412
  br i1 %29, label %30, label %8, !dbg !7415, !llvm.loop !7441

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7410
  ret i32 %31, !dbg !7443
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !7444 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7448, metadata !DIExpression()), !dbg !7450
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7451
  %3 = load i32, i32* %2, align 4, !dbg !7451
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7452, !range !7453
  %5 = icmp ult i32 %4, 2, !dbg !7452
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7454
  br i1 %7, label %8, label %15, !dbg !7454

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7455
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7456
  %11 = load i32, i32* %10, align 4, !dbg !7456
  %12 = and i32 %11, %9, !dbg !7457
  %13 = icmp eq i32 %12, 0, !dbg !7458
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7449, metadata !DIExpression()), !dbg !7450
  ret i32 %16, !dbg !7459
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7460 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7464, metadata !DIExpression()), !dbg !7467
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7465, metadata !DIExpression()), !dbg !7467
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7468
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7468
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7466, metadata !DIExpression()), !dbg !7469
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7470
  %6 = load i32, i32* %5, align 4, !dbg !7470
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7471
  store i32 %6, i32* %7, align 4, !dbg !7472
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7473
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7474
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7475
  %11 = load i32, i32* %10, align 4, !dbg !7475
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7476
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7477
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7478
  ret i32 %12, !dbg !7479
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !7480 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7487, metadata !DIExpression()), !dbg !7491
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7488, metadata !DIExpression()), !dbg !7491
  call void @llvm.dbg.value(metadata i32 undef, metadata !7489, metadata !DIExpression()), !dbg !7491
  call void @llvm.dbg.value(metadata i32 %2, metadata !7490, metadata !DIExpression()), !dbg !7491
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7492
  %5 = load i32, i32* %4, align 4, !dbg !7492
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7493
  %7 = or i32 %6, %5, !dbg !7494
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7495
  store i32 %7, i32* %8, align 4, !dbg !7496
  ret void, !dbg !7497
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7498 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7502, metadata !DIExpression()), !dbg !7504
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7503, metadata !DIExpression()), !dbg !7504
  %3 = zext i8 %0 to i32, !dbg !7505
  %4 = icmp ugt i8 %0, 7, !dbg !7507
  br i1 %4, label %5, label %6, !dbg !7508

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.72, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !7509
  br label %7, !dbg !7515

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7516
  br label %7, !dbg !7517

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7504
  ret i32 %8, !dbg !7518
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !7519 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7523, metadata !DIExpression()), !dbg !7525
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7524, metadata !DIExpression()), !dbg !7525
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7526
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7527
  %4 = load i32, i32* %3, align 4, !dbg !7527
  %5 = and i32 %4, -32, !dbg !7528
  %6 = or i32 %5, %0, !dbg !7529
  %7 = or i32 %6, 16, !dbg !7529
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7530
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7531
  %9 = load i32, i32* %8, align 4, !dbg !7531
  %10 = or i32 %9, 1, !dbg !7532
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7533
  ret void, !dbg !7534
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #14 !dbg !7535 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7538, metadata !DIExpression()), !dbg !7539
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7540
  ret void, !dbg !7541
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !7542 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7546, metadata !DIExpression()), !dbg !7547
  %2 = icmp ult i32 %0, 33, !dbg !7548
  br i1 %2, label %11, label %3, !dbg !7550

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7551
  br i1 %4, label %11, label %5, !dbg !7553

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7554
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7555, !range !7453
  %8 = mul nsw i32 %7, -2, !dbg !7556
  %9 = add nsw i32 %8, 62, !dbg !7556
  %10 = and i32 %9, 62, !dbg !7557
  br label %11, !dbg !7558

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7547
  ret i32 %12, !dbg !7559
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7560 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7564, metadata !DIExpression()), !dbg !7566
  call void @llvm.dbg.value(metadata i8 %1, metadata !7565, metadata !DIExpression()), !dbg !7566
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7567
  %4 = icmp eq i32 %3, -22, !dbg !7569
  br i1 %4, label %5, label %7, !dbg !7570

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #25, !dbg !7571
  %6 = zext i8 %1 to i32, !dbg !7571
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.75, i32 0, i32 0), i32 noundef %6) #25, !dbg !7571
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #25, !dbg !7571
  unreachable, !dbg !7571

7:                                                ; preds = %2
  ret void, !dbg !7576
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7577 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7581, metadata !DIExpression()), !dbg !7588
  call void @llvm.dbg.value(metadata i8 %1, metadata !7582, metadata !DIExpression()), !dbg !7588
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7589
  call void @llvm.dbg.value(metadata i8 %3, metadata !7583, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7588
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7590
  call void @llvm.dbg.value(metadata i32 %4, metadata !7583, metadata !DIExpression()), !dbg !7588
  %5 = icmp ne i32 %4, -22, !dbg !7591
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7592
  call void @llvm.dbg.value(metadata i32 %4, metadata !7584, metadata !DIExpression()), !dbg !7593
  br i1 %7, label %8, label %12, !dbg !7592

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7584, metadata !DIExpression()), !dbg !7593
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7594
  %10 = add i32 %9, 1, !dbg !7597
  call void @llvm.dbg.value(metadata i32 %10, metadata !7584, metadata !DIExpression()), !dbg !7593
  %11 = icmp eq i32 %10, 8, !dbg !7598
  br i1 %11, label %12, label %8, !dbg !7599, !llvm.loop !7600

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7602
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #14 !dbg !7603 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7606, metadata !DIExpression()), !dbg !7607
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7608
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7609
  ret void, !dbg !7610
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7611 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7616
  %2 = icmp ugt i32 %1, 8, !dbg !7618
  br i1 %2, label %3, label %4, !dbg !7619

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #25, !dbg !7620
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.76, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #25, !dbg !7620
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #25, !dbg !7620
  unreachable, !dbg !7620

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7625
  call void @llvm.dbg.value(metadata i32 0, metadata !7615, metadata !DIExpression()), !dbg !7626
  %5 = icmp eq i32 %1, 0, !dbg !7627
  br i1 %5, label %13, label %6, !dbg !7630

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7630

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7615, metadata !DIExpression()), !dbg !7626
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7631
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7633
  %11 = add nuw i32 %9, 1, !dbg !7634
  call void @llvm.dbg.value(metadata i32 %11, metadata !7615, metadata !DIExpression()), !dbg !7626
  %12 = icmp eq i32 %11, %1, !dbg !7627
  br i1 %12, label %13, label %8, !dbg !7630, !llvm.loop !7635

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7637
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7638
  tail call void @arm_core_mpu_enable() #24, !dbg !7639
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7640
  %16 = and i32 %15, 65280, !dbg !7640
  %17 = icmp eq i32 %16, 2048, !dbg !7640
  br i1 %17, label %19, label %18, !dbg !7643

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #25, !dbg !7644
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.78, i32 0, i32 0)) #25, !dbg !7644
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #25, !dbg !7644
  unreachable, !dbg !7644

19:                                               ; preds = %13
  ret i32 0, !dbg !7646
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7647 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7654, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata i8* %1, metadata !7655, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata i8* %0, metadata !7656, metadata !DIExpression()), !dbg !7657
  %3 = load i8, i8* %1, align 1, !dbg !7658
  %4 = icmp eq i8 %3, 0, !dbg !7659
  br i1 %4, label %13, label %5, !dbg !7660

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7654, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata i8* %8, metadata !7655, metadata !DIExpression()), !dbg !7657
  store i8 %6, i8* %7, align 1, !dbg !7661
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7663
  call void @llvm.dbg.value(metadata i8* %9, metadata !7654, metadata !DIExpression()), !dbg !7657
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7664
  call void @llvm.dbg.value(metadata i8* %10, metadata !7655, metadata !DIExpression()), !dbg !7657
  %11 = load i8, i8* %10, align 1, !dbg !7658
  %12 = icmp eq i8 %11, 0, !dbg !7659
  br i1 %12, label %13, label %5, !dbg !7660, !llvm.loop !7665

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7667
  ret i8* %0, !dbg !7668
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7669 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7673, metadata !DIExpression()), !dbg !7677
  call void @llvm.dbg.value(metadata i8* %1, metadata !7674, metadata !DIExpression()), !dbg !7677
  call void @llvm.dbg.value(metadata i32 %2, metadata !7675, metadata !DIExpression()), !dbg !7677
  call void @llvm.dbg.value(metadata i8* %0, metadata !7676, metadata !DIExpression()), !dbg !7677
  %4 = icmp eq i32 %2, 0, !dbg !7678
  br i1 %4, label %22, label %5, !dbg !7679

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7673, metadata !DIExpression()), !dbg !7677
  call void @llvm.dbg.value(metadata i32 %7, metadata !7675, metadata !DIExpression()), !dbg !7677
  call void @llvm.dbg.value(metadata i8* %8, metadata !7674, metadata !DIExpression()), !dbg !7677
  %9 = load i8, i8* %8, align 1, !dbg !7680
  %10 = icmp eq i8 %9, 0, !dbg !7681
  br i1 %10, label %16, label %11, !dbg !7682

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7683
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7685
  call void @llvm.dbg.value(metadata i8* %12, metadata !7674, metadata !DIExpression()), !dbg !7677
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7686
  call void @llvm.dbg.value(metadata i8* %13, metadata !7673, metadata !DIExpression()), !dbg !7677
  %14 = add i32 %7, -1, !dbg !7687
  call void @llvm.dbg.value(metadata i32 %14, metadata !7675, metadata !DIExpression()), !dbg !7677
  %15 = icmp eq i32 %14, 0, !dbg !7678
  br i1 %15, label %22, label %5, !dbg !7679, !llvm.loop !7688

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7673, metadata !DIExpression()), !dbg !7677
  call void @llvm.dbg.value(metadata i32 %18, metadata !7675, metadata !DIExpression()), !dbg !7677
  store i8 0, i8* %17, align 1, !dbg !7690
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7692
  call void @llvm.dbg.value(metadata i8* %19, metadata !7673, metadata !DIExpression()), !dbg !7677
  %20 = add i32 %18, -1, !dbg !7693
  call void @llvm.dbg.value(metadata i32 %20, metadata !7675, metadata !DIExpression()), !dbg !7677
  %21 = icmp eq i32 %20, 0, !dbg !7694
  br i1 %21, label %22, label %16, !dbg !7695, !llvm.loop !7696

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7698
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7699 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7703, metadata !DIExpression()), !dbg !7706
  call void @llvm.dbg.value(metadata i32 %1, metadata !7704, metadata !DIExpression()), !dbg !7706
  call void @llvm.dbg.value(metadata i32 %1, metadata !7705, metadata !DIExpression()), !dbg !7706
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7707

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7703, metadata !DIExpression()), !dbg !7706
  %6 = load i8, i8* %5, align 1, !dbg !7708
  %7 = icmp eq i8 %6, %3, !dbg !7709
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7710
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7711
  call void @llvm.dbg.value(metadata i8* %10, metadata !7703, metadata !DIExpression()), !dbg !7706
  br i1 %9, label %11, label %4, !dbg !7710, !llvm.loop !7713

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7715
  ret i8* %12, !dbg !7716
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7717 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7719, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i32 %1, metadata !7720, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i8* null, metadata !7721, metadata !DIExpression()), !dbg !7722
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7723

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7722
  call void @llvm.dbg.value(metadata i8* %6, metadata !7721, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i8* %5, metadata !7719, metadata !DIExpression()), !dbg !7722
  %7 = load i8, i8* %5, align 1, !dbg !7724
  %8 = icmp eq i8 %7, %3, !dbg !7727
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7728
  call void @llvm.dbg.value(metadata i8* %9, metadata !7721, metadata !DIExpression()), !dbg !7722
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7729
  call void @llvm.dbg.value(metadata i8* %10, metadata !7719, metadata !DIExpression()), !dbg !7722
  %11 = icmp eq i8 %7, 0, !dbg !7730
  br i1 %11, label %12, label %4, !dbg !7730, !llvm.loop !7731

12:                                               ; preds = %4
  ret i8* %9, !dbg !7733
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !7734 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7738, metadata !DIExpression()), !dbg !7740
  call void @llvm.dbg.value(metadata i32 0, metadata !7739, metadata !DIExpression()), !dbg !7740
  %2 = load i8, i8* %0, align 1, !dbg !7741
  %3 = icmp eq i8 %2, 0, !dbg !7742
  br i1 %3, label %11, label %4, !dbg !7743

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7739, metadata !DIExpression()), !dbg !7740
  call void @llvm.dbg.value(metadata i8* %6, metadata !7738, metadata !DIExpression()), !dbg !7740
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7744
  call void @llvm.dbg.value(metadata i8* %7, metadata !7738, metadata !DIExpression()), !dbg !7740
  %8 = add i32 %5, 1, !dbg !7746
  call void @llvm.dbg.value(metadata i32 %8, metadata !7739, metadata !DIExpression()), !dbg !7740
  %9 = load i8, i8* %7, align 1, !dbg !7741
  %10 = icmp eq i8 %9, 0, !dbg !7742
  br i1 %10, label %11, label %4, !dbg !7743, !llvm.loop !7747

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7740
  ret i32 %12, !dbg !7749
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7750 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7754, metadata !DIExpression()), !dbg !7757
  call void @llvm.dbg.value(metadata i32 %1, metadata !7755, metadata !DIExpression()), !dbg !7757
  call void @llvm.dbg.value(metadata i32 0, metadata !7756, metadata !DIExpression()), !dbg !7757
  %3 = load i8, i8* %0, align 1, !dbg !7758
  %4 = icmp ne i8 %3, 0, !dbg !7759
  %5 = icmp ne i32 %1, 0, !dbg !7760
  %6 = and i1 %4, %5, !dbg !7760
  br i1 %6, label %7, label %16, !dbg !7761

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7756, metadata !DIExpression()), !dbg !7757
  call void @llvm.dbg.value(metadata i8* %9, metadata !7754, metadata !DIExpression()), !dbg !7757
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7762
  call void @llvm.dbg.value(metadata i8* %10, metadata !7754, metadata !DIExpression()), !dbg !7757
  %11 = add nuw i32 %8, 1, !dbg !7764
  call void @llvm.dbg.value(metadata i32 %11, metadata !7756, metadata !DIExpression()), !dbg !7757
  %12 = load i8, i8* %10, align 1, !dbg !7758
  %13 = icmp ne i8 %12, 0, !dbg !7759
  %14 = icmp ult i32 %11, %1, !dbg !7760
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7760
  br i1 %15, label %7, label %16, !dbg !7761, !llvm.loop !7765

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7757
  ret i32 %17, !dbg !7767
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !7768 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7772, metadata !DIExpression()), !dbg !7774
  call void @llvm.dbg.value(metadata i8* %1, metadata !7773, metadata !DIExpression()), !dbg !7774
  %3 = load i8, i8* %0, align 1, !dbg !7775
  %4 = load i8, i8* %1, align 1, !dbg !7776
  %5 = icmp ne i8 %3, %4, !dbg !7777
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7778
  br i1 %7, label %18, label %8, !dbg !7778

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7773, metadata !DIExpression()), !dbg !7774
  call void @llvm.dbg.value(metadata i8* %10, metadata !7772, metadata !DIExpression()), !dbg !7774
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7779
  call void @llvm.dbg.value(metadata i8* %11, metadata !7772, metadata !DIExpression()), !dbg !7774
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7781
  call void @llvm.dbg.value(metadata i8* %12, metadata !7773, metadata !DIExpression()), !dbg !7774
  %13 = load i8, i8* %11, align 1, !dbg !7775
  %14 = load i8, i8* %12, align 1, !dbg !7776
  %15 = icmp ne i8 %13, %14, !dbg !7777
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7778
  br i1 %17, label %18, label %8, !dbg !7778, !llvm.loop !7782

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7775
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7776
  %21 = zext i8 %19 to i32, !dbg !7785
  %22 = zext i8 %20 to i32, !dbg !7786
  %23 = sub nsw i32 %21, %22, !dbg !7787
  ret i32 %23, !dbg !7788
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7789 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7793, metadata !DIExpression()), !dbg !7796
  call void @llvm.dbg.value(metadata i8* %1, metadata !7794, metadata !DIExpression()), !dbg !7796
  call void @llvm.dbg.value(metadata i32 %2, metadata !7795, metadata !DIExpression()), !dbg !7796
  %4 = icmp eq i32 %2, 0, !dbg !7797
  br i1 %4, label %23, label %5, !dbg !7797

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7795, metadata !DIExpression()), !dbg !7796
  call void @llvm.dbg.value(metadata i8* %7, metadata !7794, metadata !DIExpression()), !dbg !7796
  call void @llvm.dbg.value(metadata i8* %8, metadata !7793, metadata !DIExpression()), !dbg !7796
  %9 = load i8, i8* %8, align 1, !dbg !7798
  %10 = load i8, i8* %7, align 1, !dbg !7799
  %11 = icmp ne i8 %9, %10, !dbg !7800
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7801
  br i1 %13, label %19, label %14, !dbg !7801

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7802
  call void @llvm.dbg.value(metadata i8* %15, metadata !7793, metadata !DIExpression()), !dbg !7796
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7804
  call void @llvm.dbg.value(metadata i8* %16, metadata !7794, metadata !DIExpression()), !dbg !7796
  %17 = add i32 %6, -1, !dbg !7805
  call void @llvm.dbg.value(metadata i32 %17, metadata !7795, metadata !DIExpression()), !dbg !7796
  %18 = icmp eq i32 %17, 0, !dbg !7797
  br i1 %18, label %23, label %5, !dbg !7797, !llvm.loop !7806

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7809
  %21 = zext i8 %10 to i32, !dbg !7810
  %22 = sub nsw i32 %20, %21, !dbg !7811
  br label %23, !dbg !7812

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7812
  ret i32 %24, !dbg !7813
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7814 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7818, metadata !DIExpression()), !dbg !7823
  call void @llvm.dbg.value(metadata i8* %1, metadata !7819, metadata !DIExpression()), !dbg !7823
  call void @llvm.dbg.value(metadata i8** %2, metadata !7820, metadata !DIExpression()), !dbg !7823
  %4 = icmp eq i8* %0, null, !dbg !7824
  br i1 %4, label %5, label %7, !dbg !7824

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7825
  br label %7, !dbg !7824

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7824
  call void @llvm.dbg.value(metadata i8* %8, metadata !7821, metadata !DIExpression()), !dbg !7823
  %9 = load i8, i8* %8, align 1, !dbg !7826
  %10 = icmp eq i8 %9, 0, !dbg !7826
  br i1 %10, label %33, label %11, !dbg !7827

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7821, metadata !DIExpression()), !dbg !7823
  %14 = zext i8 %12 to i32, !dbg !7826
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7828
  %16 = icmp eq i8* %15, null, !dbg !7827
  br i1 %16, label %21, label %17, !dbg !7829

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7830
  call void @llvm.dbg.value(metadata i8* %18, metadata !7821, metadata !DIExpression()), !dbg !7823
  %19 = load i8, i8* %18, align 1, !dbg !7826
  %20 = icmp eq i8 %19, 0, !dbg !7826
  br i1 %20, label %33, label %11, !dbg !7827, !llvm.loop !7832

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7822, metadata !DIExpression()), !dbg !7823
  %24 = zext i8 %22 to i32, !dbg !7834
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !7835
  %26 = icmp eq i8* %25, null, !dbg !7836
  br i1 %26, label %27, label %31, !dbg !7837

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7838
  call void @llvm.dbg.value(metadata i8* %28, metadata !7822, metadata !DIExpression()), !dbg !7823
  %29 = load i8, i8* %28, align 1, !dbg !7834
  %30 = icmp eq i8 %29, 0, !dbg !7834
  br i1 %30, label %33, label %21, !dbg !7840, !llvm.loop !7841

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7843
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7846
  br label %33, !dbg !7847

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7823
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7823
  store i8* %34, i8** %2, align 4, !dbg !7823
  ret i8* %35, !dbg !7848
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7849 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7851, metadata !DIExpression()), !dbg !7853
  call void @llvm.dbg.value(metadata i8* %1, metadata !7852, metadata !DIExpression()), !dbg !7853
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7854
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7855
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !7856
  ret i8* %0, !dbg !7857
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7858 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7860, metadata !DIExpression()), !dbg !7865
  call void @llvm.dbg.value(metadata i8* %1, metadata !7861, metadata !DIExpression()), !dbg !7865
  call void @llvm.dbg.value(metadata i32 %2, metadata !7862, metadata !DIExpression()), !dbg !7865
  call void @llvm.dbg.value(metadata i8* %0, metadata !7863, metadata !DIExpression()), !dbg !7865
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7866
  call void @llvm.dbg.value(metadata i32 %4, metadata !7864, metadata !DIExpression()), !dbg !7865
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7867
  call void @llvm.dbg.value(metadata i8* %5, metadata !7860, metadata !DIExpression()), !dbg !7865
  call void @llvm.dbg.value(metadata i8* %1, metadata !7861, metadata !DIExpression()), !dbg !7865
  call void @llvm.dbg.value(metadata i32 %2, metadata !7862, metadata !DIExpression()), !dbg !7865
  call void @llvm.dbg.value(metadata i32 %2, metadata !7862, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7865
  %6 = icmp eq i32 %2, 0, !dbg !7868
  br i1 %6, label %18, label %7, !dbg !7869

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7870
  call void @llvm.dbg.value(metadata i8* %9, metadata !7860, metadata !DIExpression()), !dbg !7865
  call void @llvm.dbg.value(metadata i8* %10, metadata !7861, metadata !DIExpression()), !dbg !7865
  %12 = load i8, i8* %10, align 1, !dbg !7871
  %13 = icmp eq i8 %12, 0, !dbg !7872
  br i1 %13, label %18, label %14, !dbg !7873

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7874
  call void @llvm.dbg.value(metadata i8* %15, metadata !7861, metadata !DIExpression()), !dbg !7865
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7876
  call void @llvm.dbg.value(metadata i8* %16, metadata !7860, metadata !DIExpression()), !dbg !7865
  store i8 %12, i8* %9, align 1, !dbg !7877
  call void @llvm.dbg.value(metadata i32 %11, metadata !7862, metadata !DIExpression()), !dbg !7865
  call void @llvm.dbg.value(metadata i32 %11, metadata !7862, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7865
  %17 = icmp eq i32 %11, 0, !dbg !7868
  br i1 %17, label %18, label %7, !dbg !7869, !llvm.loop !7878

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7865
  store i8 0, i8* %19, align 1, !dbg !7880
  ret i8* %0, !dbg !7881
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7882 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7886, metadata !DIExpression()), !dbg !7891
  call void @llvm.dbg.value(metadata i8* %1, metadata !7887, metadata !DIExpression()), !dbg !7891
  call void @llvm.dbg.value(metadata i32 %2, metadata !7888, metadata !DIExpression()), !dbg !7891
  call void @llvm.dbg.value(metadata i8* %0, metadata !7889, metadata !DIExpression()), !dbg !7891
  call void @llvm.dbg.value(metadata i8* %1, metadata !7890, metadata !DIExpression()), !dbg !7891
  %4 = icmp eq i32 %2, 0, !dbg !7892
  br i1 %4, label %31, label %5, !dbg !7894

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7890, metadata !DIExpression()), !dbg !7891
  call void @llvm.dbg.value(metadata i8* %0, metadata !7889, metadata !DIExpression()), !dbg !7891
  call void @llvm.dbg.value(metadata i32 %2, metadata !7888, metadata !DIExpression()), !dbg !7891
  %6 = add i32 %2, -1, !dbg !7895
  call void @llvm.dbg.value(metadata i32 %6, metadata !7888, metadata !DIExpression()), !dbg !7891
  %7 = icmp eq i32 %6, 0, !dbg !7896
  br i1 %7, label %23, label %8, !dbg !7897

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7898
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7898
  br label %11, !dbg !7898

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7890, metadata !DIExpression()), !dbg !7891
  call void @llvm.dbg.value(metadata i8* %14, metadata !7889, metadata !DIExpression()), !dbg !7891
  %15 = load i8, i8* %14, align 1, !dbg !7899
  %16 = load i8, i8* %13, align 1, !dbg !7900
  %17 = icmp eq i8 %15, %16, !dbg !7901
  br i1 %17, label %18, label %23, !dbg !7898

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7902
  call void @llvm.dbg.value(metadata i8* %19, metadata !7889, metadata !DIExpression()), !dbg !7891
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7904
  call void @llvm.dbg.value(metadata i8* %20, metadata !7890, metadata !DIExpression()), !dbg !7891
  call void @llvm.dbg.value(metadata i32 %12, metadata !7888, metadata !DIExpression()), !dbg !7891
  %21 = add i32 %12, -1, !dbg !7895
  call void @llvm.dbg.value(metadata i32 %21, metadata !7888, metadata !DIExpression()), !dbg !7891
  %22 = icmp eq i32 %21, 0, !dbg !7896
  br i1 %22, label %23, label %11, !dbg !7897, !llvm.loop !7905

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7891
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7891
  %26 = load i8, i8* %24, align 1, !dbg !7907
  %27 = zext i8 %26 to i32, !dbg !7907
  %28 = load i8, i8* %25, align 1, !dbg !7908
  %29 = zext i8 %28 to i32, !dbg !7908
  %30 = sub nsw i32 %27, %29, !dbg !7909
  br label %31, !dbg !7910

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7891
  ret i32 %32, !dbg !7911
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7912 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7916, metadata !DIExpression()), !dbg !7921
  call void @llvm.dbg.value(metadata i8* %1, metadata !7917, metadata !DIExpression()), !dbg !7921
  call void @llvm.dbg.value(metadata i32 %2, metadata !7918, metadata !DIExpression()), !dbg !7921
  call void @llvm.dbg.value(metadata i8* %0, metadata !7919, metadata !DIExpression()), !dbg !7921
  call void @llvm.dbg.value(metadata i8* %1, metadata !7920, metadata !DIExpression()), !dbg !7921
  %4 = ptrtoint i8* %0 to i32, !dbg !7922
  %5 = ptrtoint i8* %1 to i32, !dbg !7922
  %6 = sub i32 %4, %5, !dbg !7922
  %7 = icmp ult i32 %6, %2, !dbg !7924
  br i1 %7, label %10, label %8, !dbg !7925

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7920, metadata !DIExpression()), !dbg !7921
  call void @llvm.dbg.value(metadata i8* %0, metadata !7919, metadata !DIExpression()), !dbg !7921
  call void @llvm.dbg.value(metadata i32 %2, metadata !7918, metadata !DIExpression()), !dbg !7921
  %9 = icmp eq i32 %2, 0, !dbg !7926
  br i1 %9, label %26, label %17, !dbg !7928

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7918, metadata !DIExpression()), !dbg !7921
  %12 = add i32 %11, -1, !dbg !7929
  call void @llvm.dbg.value(metadata i32 %12, metadata !7918, metadata !DIExpression()), !dbg !7921
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7932
  %14 = load i8, i8* %13, align 1, !dbg !7932
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7933
  store i8 %14, i8* %15, align 1, !dbg !7934
  %16 = icmp eq i32 %12, 0, !dbg !7935
  br i1 %16, label %26, label %10, !dbg !7936, !llvm.loop !7937

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7920, metadata !DIExpression()), !dbg !7921
  call void @llvm.dbg.value(metadata i8* %19, metadata !7919, metadata !DIExpression()), !dbg !7921
  call void @llvm.dbg.value(metadata i32 %20, metadata !7918, metadata !DIExpression()), !dbg !7921
  %21 = load i8, i8* %18, align 1, !dbg !7939
  store i8 %21, i8* %19, align 1, !dbg !7941
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7942
  call void @llvm.dbg.value(metadata i8* %22, metadata !7919, metadata !DIExpression()), !dbg !7921
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7943
  call void @llvm.dbg.value(metadata i8* %23, metadata !7920, metadata !DIExpression()), !dbg !7921
  %24 = add i32 %20, -1, !dbg !7944
  call void @llvm.dbg.value(metadata i32 %24, metadata !7918, metadata !DIExpression()), !dbg !7921
  %25 = icmp eq i32 %24, 0, !dbg !7926
  br i1 %25, label %26, label %17, !dbg !7928, !llvm.loop !7945

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7947
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7948 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7954, metadata !DIExpression()), !dbg !7959
  call void @llvm.dbg.value(metadata i8* %1, metadata !7955, metadata !DIExpression()), !dbg !7959
  call void @llvm.dbg.value(metadata i32 %2, metadata !7956, metadata !DIExpression()), !dbg !7959
  call void @llvm.dbg.value(metadata i8* %0, metadata !7957, metadata !DIExpression()), !dbg !7959
  call void @llvm.dbg.value(metadata i8* %1, metadata !7958, metadata !DIExpression()), !dbg !7959
  %4 = icmp eq i32 %2, 0, !dbg !7960
  br i1 %4, label %14, label %5, !dbg !7961

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7958, metadata !DIExpression()), !dbg !7959
  call void @llvm.dbg.value(metadata i8* %7, metadata !7957, metadata !DIExpression()), !dbg !7959
  call void @llvm.dbg.value(metadata i32 %8, metadata !7956, metadata !DIExpression()), !dbg !7959
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7962
  call void @llvm.dbg.value(metadata i8* %9, metadata !7958, metadata !DIExpression()), !dbg !7959
  %10 = load i8, i8* %6, align 1, !dbg !7964
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7965
  call void @llvm.dbg.value(metadata i8* %11, metadata !7957, metadata !DIExpression()), !dbg !7959
  store i8 %10, i8* %7, align 1, !dbg !7966
  %12 = add i32 %8, -1, !dbg !7967
  call void @llvm.dbg.value(metadata i32 %12, metadata !7956, metadata !DIExpression()), !dbg !7959
  %13 = icmp eq i32 %12, 0, !dbg !7960
  br i1 %13, label %14, label %5, !dbg !7961, !llvm.loop !7968

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7970
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !7971 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7975, metadata !DIExpression()), !dbg !7980
  call void @llvm.dbg.value(metadata i32 %1, metadata !7976, metadata !DIExpression()), !dbg !7980
  call void @llvm.dbg.value(metadata i32 %2, metadata !7977, metadata !DIExpression()), !dbg !7980
  call void @llvm.dbg.value(metadata i8* %0, metadata !7978, metadata !DIExpression()), !dbg !7980
  %4 = trunc i32 %1 to i8, !dbg !7981
  call void @llvm.dbg.value(metadata i8 %4, metadata !7979, metadata !DIExpression()), !dbg !7980
  call void @llvm.dbg.value(metadata i32 %2, metadata !7977, metadata !DIExpression()), !dbg !7980
  call void @llvm.dbg.value(metadata i8* %0, metadata !7978, metadata !DIExpression()), !dbg !7980
  %5 = icmp eq i32 %2, 0, !dbg !7982
  br i1 %5, label %12, label %6, !dbg !7983

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7977, metadata !DIExpression()), !dbg !7980
  call void @llvm.dbg.value(metadata i8* %8, metadata !7978, metadata !DIExpression()), !dbg !7980
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7984
  call void @llvm.dbg.value(metadata i8* %9, metadata !7978, metadata !DIExpression()), !dbg !7980
  store i8 %4, i8* %8, align 1, !dbg !7986
  %10 = add i32 %7, -1, !dbg !7987
  call void @llvm.dbg.value(metadata i32 %10, metadata !7977, metadata !DIExpression()), !dbg !7980
  %11 = icmp eq i32 %10, 0, !dbg !7982
  br i1 %11, label %12, label %6, !dbg !7983, !llvm.loop !7988

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7990
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7991 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7995, metadata !DIExpression()), !dbg !8001
  call void @llvm.dbg.value(metadata i32 %1, metadata !7996, metadata !DIExpression()), !dbg !8001
  call void @llvm.dbg.value(metadata i32 %2, metadata !7997, metadata !DIExpression()), !dbg !8001
  %4 = icmp eq i32 %2, 0, !dbg !8002
  br i1 %4, label %17, label %5, !dbg !8003

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8004

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8005
  call void @llvm.dbg.value(metadata i8* %9, metadata !7998, metadata !DIExpression()), !dbg !8005
  call void @llvm.dbg.value(metadata i32 %8, metadata !7997, metadata !DIExpression()), !dbg !8001
  call void @llvm.dbg.value(metadata i8* %9, metadata !7998, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8005
  %10 = load i8, i8* %9, align 1, !dbg !8006
  %11 = icmp eq i8 %10, %6, !dbg !8009
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8010
  call void @llvm.dbg.value(metadata i8* %12, metadata !7998, metadata !DIExpression()), !dbg !8005
  call void @llvm.dbg.value(metadata i32 %13, metadata !7997, metadata !DIExpression()), !dbg !8001
  br i1 %15, label %16, label %7, !dbg !8010, !llvm.loop !8011

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8013

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8001
  ret i8* %19, !dbg !8014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !8015 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8017, metadata !DIExpression()), !dbg !8018
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8019
  ret void, !dbg !8020
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !8021 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8023, metadata !DIExpression()), !dbg !8024
  ret i32 -1, !dbg !8025
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8026 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8030, metadata !DIExpression()), !dbg !8032
  call void @llvm.dbg.value(metadata i32* %1, metadata !8031, metadata !DIExpression()), !dbg !8032
  %3 = ptrtoint i32* %1 to i32, !dbg !8033
  %4 = and i32 %3, -2, !dbg !8033
  %5 = icmp eq i32 %4, 2, !dbg !8033
  br i1 %5, label %6, label %9, !dbg !8033

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8034
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8034
  br label %9, !dbg !8035

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8035
  ret i32 %10, !dbg !8036
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8037 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8039, metadata !DIExpression()), !dbg !8041
  call void @llvm.dbg.value(metadata i32* %1, metadata !8040, metadata !DIExpression()), !dbg !8041
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8042
  ret i32 %3, !dbg !8043
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8044 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8047, metadata !DIExpression()), !dbg !8049
  call void @llvm.dbg.value(metadata i32* %1, metadata !8048, metadata !DIExpression()), !dbg !8049
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8050, !srcloc !8052
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8053
  ret i32 %3, !dbg !8054
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8055 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8060, metadata !DIExpression()), !dbg !8064
  call void @llvm.dbg.value(metadata i32* %1, metadata !8061, metadata !DIExpression()), !dbg !8064
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8065
  call void @llvm.dbg.value(metadata i32 %3, metadata !8062, metadata !DIExpression()), !dbg !8064
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8066
  call void @llvm.dbg.value(metadata i32 %4, metadata !8063, metadata !DIExpression()), !dbg !8064
  %5 = icmp ne i32 %3, %4, !dbg !8067
  %6 = sext i1 %5 to i32, !dbg !8068
  ret i32 %6, !dbg !8069
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8070 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8074, metadata !DIExpression()), !dbg !8078
  call void @llvm.dbg.value(metadata i32 %1, metadata !8075, metadata !DIExpression()), !dbg !8078
  call void @llvm.dbg.value(metadata i32 %2, metadata !8076, metadata !DIExpression()), !dbg !8078
  call void @llvm.dbg.value(metadata i32* %3, metadata !8077, metadata !DIExpression()), !dbg !8078
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8079
  ret i32 %5, !dbg !8080
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8081 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8083, metadata !DIExpression()), !dbg !8087
  call void @llvm.dbg.value(metadata i32 %1, metadata !8084, metadata !DIExpression()), !dbg !8087
  call void @llvm.dbg.value(metadata i32 %2, metadata !8085, metadata !DIExpression()), !dbg !8087
  call void @llvm.dbg.value(metadata i32* %3, metadata !8086, metadata !DIExpression()), !dbg !8087
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8088, !srcloc !8090
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8091
  ret i32 %5, !dbg !8092
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8093 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8095, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.value(metadata i32 %1, metadata !8096, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.value(metadata i32 %2, metadata !8097, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.value(metadata i32* %3, metadata !8098, metadata !DIExpression()), !dbg !8103
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8104
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8106
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8106
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8106
  br i1 %11, label %33, label %12, !dbg !8106

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8103
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8103
  call void @llvm.dbg.value(metadata i8* %14, metadata !8101, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.value(metadata i32 %13, metadata !8099, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.value(metadata i32 %1, metadata !8100, metadata !DIExpression()), !dbg !8103
  br label %15, !dbg !8107

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8109
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8103
  call void @llvm.dbg.value(metadata i8* %17, metadata !8101, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.value(metadata i32 %16, metadata !8100, metadata !DIExpression()), !dbg !8103
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8110
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8113
  call void @llvm.dbg.value(metadata i8* %19, metadata !8101, metadata !DIExpression()), !dbg !8103
  %20 = load i8, i8* %17, align 1, !dbg !8114
  %21 = zext i8 %20 to i32, !dbg !8115
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8110
  %23 = icmp eq i32 %22, -1, !dbg !8116
  br i1 %23, label %30, label %24, !dbg !8117

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8118
  call void @llvm.dbg.value(metadata i32 %25, metadata !8100, metadata !DIExpression()), !dbg !8103
  %26 = icmp eq i32 %25, 0, !dbg !8119
  br i1 %26, label %27, label %15, !dbg !8120, !llvm.loop !8121

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8123
  call void @llvm.dbg.value(metadata i32 %28, metadata !8099, metadata !DIExpression()), !dbg !8103
  %29 = icmp eq i32 %28, 0, !dbg !8124
  br i1 %29, label %30, label %12, !dbg !8125, !llvm.loop !8126

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8103
  call void @llvm.dbg.value(metadata i32 %31, metadata !8099, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.label(metadata !8102), !dbg !8129
  %32 = sub i32 %2, %31, !dbg !8130
  br label %33, !dbg !8131

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8103
  ret i32 %34, !dbg !8132
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8133 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8137, metadata !DIExpression()), !dbg !8138
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8139
  %3 = icmp eq i32 %2, -1, !dbg !8141
  br i1 %3, label %8, label %4, !dbg !8142

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8143
  %6 = icmp eq i32 %5, -1, !dbg !8144
  %7 = sext i1 %6 to i32, !dbg !8143
  br label %8, !dbg !8145

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8138
  ret i32 %9, !dbg !8146
}

; Function Attrs: noinline nounwind optsize
define dso_local void @end_report() local_unnamed_addr #1 !dbg !8147 {
  %1 = load i32, i32* @test_status, align 4, !dbg !8148
  %2 = icmp eq i32 %1, 0, !dbg !8148
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8150
  %3 = select i1 %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.90, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2.91, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1.92, i32 0, i32 0), i8* noundef %3) #25, !dbg !8150
  ret void, !dbg !8151
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_start() local_unnamed_addr #4 !dbg !8152 {
  ret void, !dbg !8153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_stop() local_unnamed_addr #4 !dbg !8154 {
  ret void, !dbg !8155
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_skip_failed_assumption() local_unnamed_addr #1 !dbg !8156 {
  store i1 true, i1* @current_test_failed_assumption, align 1, !dbg !8157
  tail call void @ztest_test_skip() #24, !dbg !8160
  ret void, !dbg !8161
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_skip() local_unnamed_addr #1 !dbg !8162 {
  %1 = load i32, i32* @phase, align 4, !dbg !8163
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !8164

2:                                                ; preds = %0
  store i32 4, i32* @test_result, align 4, !dbg !8165
  br label %6, !dbg !8167

3:                                                ; preds = %0, %0
  store i32 3, i32* @test_result, align 4, !dbg !8168
  tail call fastcc void @test_finalize() #24, !dbg !8169
  br label %6, !dbg !8170

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8171
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6.93, i32 0, i32 0), i8* noundef %5) #25, !dbg !8172
  store i32 2, i32* @test_status, align 4, !dbg !8173
  br label %6, !dbg !8174

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !8175
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @test_finalize() unnamed_addr #1 !dbg !8176 {
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef nonnull @ztest_thread) #24, !dbg !8177
  %1 = tail call fastcc %struct.k_thread* @k_current_get.102() #26, !dbg !8180
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef %1) #24, !dbg !8181
  ret void, !dbg !8182
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @get_friendly_phase_name(i32 noundef %0) unnamed_addr #4 !dbg !8183 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8187, metadata !DIExpression()), !dbg !8188
  %2 = icmp ult i32 %0, 6, !dbg !8189
  br i1 %2, label %3, label %6, !dbg !8189

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table.get_friendly_phase_name, i32 0, i32 %0, !dbg !8189
  %5 = load i8*, i8** %4, align 4, !dbg !8189
  br label %6, !dbg !8189

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16.94, i32 0, i32 0), %1 ], !dbg !8190
  ret i8* %7, !dbg !8192
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.101(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !8193 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8199, metadata !DIExpression()), !dbg !8200
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8201, !srcloc !8203
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !8204
  ret void, !dbg !8205
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.102() unnamed_addr #11 !dbg !8206 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.103() #26, !dbg !8209
  ret %struct.k_thread* %1, !dbg !8210
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.103() unnamed_addr #11 !dbg !8211 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8212, !srcloc !8214
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !8215
  ret %struct.k_thread* %1, !dbg !8216
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_fail() local_unnamed_addr #1 !dbg !8217 {
  %1 = load i32, i32* @phase, align 4, !dbg !8218
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !8219

2:                                                ; preds = %0
  store i32 5, i32* @test_result, align 4, !dbg !8220
  br label %6, !dbg !8222

3:                                                ; preds = %0, %0
  store i32 2, i32* @test_result, align 4, !dbg !8223
  tail call fastcc void @test_finalize() #24, !dbg !8224
  br label %6, !dbg !8225

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8226
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.104, i32 0, i32 0), i8* noundef %5) #25, !dbg !8227
  store i32 2, i32* @test_status, align 4, !dbg !8228
  br label %6, !dbg !8229

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !8230
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_pass() local_unnamed_addr #1 !dbg !8231 {
  %1 = load i32, i32* @phase, align 4, !dbg !8232
  %2 = icmp eq i32 %1, 2, !dbg !8233
  br i1 %2, label %3, label %4, !dbg !8233

3:                                                ; preds = %0
  store i32 1, i32* @test_result, align 4, !dbg !8234
  br label %8, !dbg !8236

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8237
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.105, i32 0, i32 0), i8* noundef %5) #25, !dbg !8238
  store i32 2, i32* @test_status, align 4, !dbg !8239
  %6 = load i32, i32* @phase, align 4, !dbg !8240
  %7 = icmp eq i32 %6, 1, !dbg !8242
  br i1 %7, label %8, label %9, !dbg !8243

8:                                                ; preds = %4, %3
  tail call fastcc void @test_finalize() #24, !dbg !8244
  br label %9, !dbg !8245

9:                                                ; preds = %8, %4
  ret void, !dbg !8245
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_before(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8246 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8248, metadata !DIExpression()), !dbg !8249
  tail call fastcc void @z_test_1cpu_start() #24, !dbg !8250
  ret void, !dbg !8251
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_start() unnamed_addr #1 !dbg !8252 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8254, !srcloc !8256
  ret void, !dbg !8257
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_after(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8258 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8260, metadata !DIExpression()), !dbg !8261
  tail call fastcc void @z_test_1cpu_stop() #24, !dbg !8262
  ret void, !dbg !8263
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_stop() unnamed_addr #1 !dbg !8264 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8265, !srcloc !8267
  ret void, !dbg !8268
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %0, %struct.ztest_unit_test* noundef readonly %1) local_unnamed_addr #1 !dbg !8269 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8290, metadata !DIExpression()), !dbg !8293
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8291, metadata !DIExpression()), !dbg !8293
  %3 = icmp eq %struct.ztest_unit_test* %1, null, !dbg !8294
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 1, !dbg !8295
  %5 = select i1 %3, %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* %4, !dbg !8295
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %5, metadata !8292, metadata !DIExpression()), !dbg !8293
  %6 = icmp ult %struct.ztest_unit_test* %5, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8296
  br i1 %6, label %7, label %16, !dbg !8299

7:                                                ; preds = %2, %13
  %8 = phi %struct.ztest_unit_test* [ %14, %13 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %8, metadata !8292, metadata !DIExpression()), !dbg !8293
  %9 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 0, i32 0, !dbg !8300
  %10 = load i8*, i8** %9, align 4, !dbg !8300
  %11 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %10) #25, !dbg !8303
  %12 = icmp eq i32 %11, 0, !dbg !8304
  br i1 %12, label %16, label %13, !dbg !8305

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 1, !dbg !8306
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %14, metadata !8292, metadata !DIExpression()), !dbg !8293
  %15 = icmp ult %struct.ztest_unit_test* %14, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8296
  br i1 %15, label %7, label %16, !dbg !8299, !llvm.loop !8307

16:                                               ; preds = %7, %13, %2
  %17 = phi %struct.ztest_unit_test* [ null, %2 ], [ null, %13 ], [ %8, %7 ], !dbg !8293
  ret %struct.ztest_unit_test* %17, !dbg !8309
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_ztest_run_test_suite(i8* noundef %0) local_unnamed_addr #1 !dbg !8310 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8312, metadata !DIExpression()), !dbg !8313
  %2 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) #24, !dbg !8314
  %3 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %2) #24, !dbg !8315
  ret i32 %3, !dbg !8316
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) unnamed_addr #1 !dbg !8317 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8338, metadata !DIExpression()), !dbg !8340
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8339, metadata !DIExpression()), !dbg !8340
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %11, !dbg !8341

2:                                                ; preds = %1, %8
  %3 = phi %struct.ztest_suite_node* [ %9, %8 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8339, metadata !DIExpression()), !dbg !8340
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 0, i32 0, !dbg !8343
  %5 = load i8*, i8** %4, align 4, !dbg !8343
  %6 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %5) #25, !dbg !8347
  %7 = icmp eq i32 %6, 0, !dbg !8348
  br i1 %7, label %11, label %8, !dbg !8349

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !8350
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %9, metadata !8339, metadata !DIExpression()), !dbg !8340
  %10 = icmp ult %struct.ztest_suite_node* %9, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8351
  br i1 %10, label %2, label %11, !dbg !8341, !llvm.loop !8352

11:                                               ; preds = %2, %8, %1
  %12 = phi %struct.ztest_suite_node* [ null, %1 ], [ null, %8 ], [ %3, %2 ], !dbg !8340
  ret %struct.ztest_suite_node* %12, !dbg !8354
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %0) unnamed_addr #1 !dbg !8355 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8359, metadata !DIExpression()), !dbg !8366
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8360, metadata !DIExpression()), !dbg !8366
  call void @llvm.dbg.value(metadata i8* null, metadata !8361, metadata !DIExpression()), !dbg !8366
  call void @llvm.dbg.value(metadata i32 0, metadata !8362, metadata !DIExpression()), !dbg !8366
  call void @llvm.dbg.value(metadata i32 0, metadata !8363, metadata !DIExpression()), !dbg !8366
  %2 = icmp eq %struct.ztest_suite_node* %0, null, !dbg !8367
  br i1 %2, label %3, label %4, !dbg !8369

3:                                                ; preds = %1
  store i32 2, i32* @test_status, align 4, !dbg !8370
  br label %68, !dbg !8372

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0, !dbg !8373
  %6 = load i8*, i8** %5, align 4, !dbg !8373
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.106, i32 0, i32 0), i8* noundef %6) #25, !dbg !8373
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8373
  store i1 false, i1* @current_test_failed_assumption, align 1, !dbg !8375
  store i32 0, i32* @test_result, align 4, !dbg !8376
  store i32 0, i32* @phase, align 4, !dbg !8377
  %7 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 1, !dbg !8378
  %8 = load i8* ()*, i8* ()** %7, align 4, !dbg !8378
  %9 = icmp eq i8* ()* %8, null, !dbg !8380
  br i1 %9, label %12, label %10, !dbg !8381

10:                                               ; preds = %4
  %11 = tail call i8* %8() #25, !dbg !8382
  call void @llvm.dbg.value(metadata i8* %11, metadata !8361, metadata !DIExpression()), !dbg !8366
  br label %12, !dbg !8384

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ null, %4 ], !dbg !8366
  call void @llvm.dbg.value(metadata i8* %13, metadata !8361, metadata !DIExpression()), !dbg !8366
  call void @llvm.dbg.value(metadata i32 0, metadata !8364, metadata !DIExpression()), !dbg !8385
  call void @llvm.dbg.value(metadata i32 undef, metadata !8364, metadata !DIExpression()), !dbg !8385
  call void @llvm.dbg.value(metadata i32 0, metadata !8362, metadata !DIExpression()), !dbg !8366
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8360, metadata !DIExpression()), !dbg !8366
  %14 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 2), align 4
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8360, metadata !DIExpression()), !dbg !8366
  br label %15, !dbg !8386

15:                                               ; preds = %12, %49
  %16 = phi %struct.ztest_unit_test* [ %19, %49 ], [ null, %12 ], !dbg !8366
  %17 = phi i32 [ %50, %49 ], [ 0, %12 ], !dbg !8389
  call void @llvm.dbg.value(metadata i32 %17, metadata !8362, metadata !DIExpression()), !dbg !8366
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %16, metadata !8360, metadata !DIExpression()), !dbg !8366
  %18 = load i8*, i8** %5, align 4, !dbg !8390
  %19 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %18, %struct.ztest_unit_test* noundef %16) #24, !dbg !8391
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !8360, metadata !DIExpression()), !dbg !8366
  %20 = icmp eq %struct.ztest_unit_test* %19, null, !dbg !8392
  br i1 %20, label %53, label %21, !dbg !8386

21:                                               ; preds = %15
  %22 = load i8*, i8** %5, align 4, !dbg !8393
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !8396
  %24 = load i8*, i8** %23, align 4, !dbg !8396
  %25 = tail call zeroext i1 %14(i8* noundef %22, i8* noundef %24) #25, !dbg !8397
  br i1 %25, label %26, label %49, !dbg !8398

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 4, !dbg !8399
  %28 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8399
  %29 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %28, i32 0, i32 0, !dbg !8401
  %30 = load i32, i32* %29, align 4, !dbg !8402
  %31 = add i32 %30, 1, !dbg !8402
  store i32 %31, i32* %29, align 4, !dbg !8402
  %32 = tail call fastcc i32 @run_test(%struct.ztest_suite_node* noundef nonnull %0, %struct.ztest_unit_test* noundef nonnull %19, i8* noundef %13) #24, !dbg !8403
  call void @llvm.dbg.value(metadata i32 %32, metadata !8363, metadata !DIExpression()), !dbg !8366
  switch i32 %32, label %49 [
    i32 0, label %33
    i32 2, label %36
    i32 1, label %39
  ], !dbg !8404

33:                                               ; preds = %26
  %34 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8405
  %35 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %34, i32 0, i32 3, !dbg !8408
  br label %42, !dbg !8409

36:                                               ; preds = %26
  %37 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8410
  %38 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %37, i32 0, i32 1, !dbg !8413
  br label %42, !dbg !8414

39:                                               ; preds = %26
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8415
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !8418
  br label %42, !dbg !8419

42:                                               ; preds = %36, %39, %33
  %43 = phi i32* [ %38, %36 ], [ %41, %39 ], [ %35, %33 ]
  %44 = load i32, i32* %43, align 4, !dbg !8420
  %45 = add i32 %44, 1, !dbg !8420
  store i32 %45, i32* %43, align 4, !dbg !8420
  %46 = icmp eq i32 %32, 1, !dbg !8421
  %47 = zext i1 %46 to i32, !dbg !8423
  %48 = add nsw i32 %17, %47, !dbg !8423
  br label %49, !dbg !8423

49:                                               ; preds = %42, %26, %21
  %50 = phi i32 [ %17, %21 ], [ %17, %26 ], [ %48, %42 ], !dbg !8389
  call void @llvm.dbg.value(metadata i32 %50, metadata !8362, metadata !DIExpression()), !dbg !8366
  %51 = load i32, i32* @test_status, align 4, !dbg !8424
  %52 = icmp eq i32 %51, 2, !dbg !8426
  br i1 %52, label %59, label %15, !dbg !8427, !llvm.loop !8428

53:                                               ; preds = %15
  %54 = load i32, i32* @test_status, align 4, !dbg !8430
  %55 = icmp eq i32 %54, 0, !dbg !8386
  call void @llvm.dbg.value(metadata i32 %17, metadata !8362, metadata !DIExpression()), !dbg !8366
  %56 = icmp ne i32 %17, 0
  %57 = select i1 %55, i1 %56, i1 false, !dbg !8432
  br i1 %57, label %58, label %59, !dbg !8432

58:                                               ; preds = %53
  store i32 1, i32* @test_status, align 4, !dbg !8433
  br label %59, !dbg !8435

59:                                               ; preds = %49, %53, %58
  %60 = phi i32 [ %17, %53 ], [ %17, %58 ], [ %50, %49 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8364, metadata !DIExpression()), !dbg !8385
  call void @llvm.dbg.value(metadata i32 %17, metadata !8362, metadata !DIExpression()), !dbg !8366
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8360, metadata !DIExpression()), !dbg !8366
  %61 = icmp sgt i32 %60, 0, !dbg !8436
  %62 = load i8*, i8** %5, align 4, !dbg !8439
  %63 = select i1 %61, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19.107, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18.108, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef %63, i8* noundef %62) #25, !dbg !8439
  store i32 4, i32* @phase, align 4, !dbg !8440
  %64 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 4, !dbg !8441
  %65 = load void (i8*)*, void (i8*)** %64, align 4, !dbg !8441
  %66 = icmp eq void (i8*)* %65, null, !dbg !8443
  br i1 %66, label %68, label %67, !dbg !8444

67:                                               ; preds = %59
  tail call void %65(i8* noundef %13) #25, !dbg !8445
  br label %68, !dbg !8447

68:                                               ; preds = %59, %67, %3
  %69 = phi i32 [ -1, %3 ], [ %60, %67 ], [ %60, %59 ], !dbg !8366
  ret i32 %69, !dbg !8448
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @run_test(%struct.ztest_suite_node* noundef %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !8449 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8453, metadata !DIExpression()), !dbg !8457
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8454, metadata !DIExpression()), !dbg !8457
  call void @llvm.dbg.value(metadata i8* %2, metadata !8455, metadata !DIExpression()), !dbg !8457
  call void @llvm.dbg.value(metadata i32 0, metadata !8456, metadata !DIExpression()), !dbg !8457
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 1, !dbg !8458
  %5 = load i8*, i8** %4, align 4, !dbg !8458
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20.109, i32 0, i32 0), i8* noundef %5) #25, !dbg !8458
  store i32 1, i32* @phase, align 4, !dbg !8460
  tail call fastcc void @get_start_time_cyc() #24, !dbg !8461
  %6 = bitcast %struct.ztest_suite_node* %0 to i8*, !dbg !8464
  %7 = bitcast %struct.ztest_unit_test* %1 to i8*, !dbg !8465
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 3, !dbg !8466
  %9 = load i32, i32* %8, align 4, !dbg !8466
  %10 = or i32 %9, 8, !dbg !8467
  tail call fastcc void @k_thread_create(i8* noundef %6, i8* noundef %7, i8* noundef %2, i32 noundef %10) #24, !dbg !8468
  tail call fastcc void @k_object_access_grant() #24, !dbg !8469
  tail call fastcc void @k_object_access_grant() #24, !dbg !8469
  tail call fastcc void @k_object_access_grant() #24, !dbg !8469
  %11 = load i8*, i8** %4, align 4, !dbg !8470
  %12 = icmp eq i8* %11, null, !dbg !8472
  br i1 %12, label %14, label %13, !dbg !8473

13:                                               ; preds = %3
  tail call fastcc void @k_thread_name_set(i8* noundef nonnull %11) #24, !dbg !8474
  br label %14, !dbg !8476

14:                                               ; preds = %13, %3
  %15 = load i32, i32* @test_result, align 4, !dbg !8477
  %16 = and i32 %15, -2, !dbg !8479
  %17 = icmp eq i32 %16, 4, !dbg !8479
  br i1 %17, label %19, label %18, !dbg !8479

18:                                               ; preds = %14
  tail call fastcc void @k_thread_start() #24, !dbg !8480
  tail call fastcc void @k_thread_join() #24, !dbg !8482
  br label %19, !dbg !8483

19:                                               ; preds = %18, %14
  store i32 3, i32* @phase, align 4, !dbg !8484
  %20 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 3, !dbg !8485
  %21 = load void (i8*)*, void (i8*)** %20, align 4, !dbg !8485
  %22 = icmp eq void (i8*)* %21, null, !dbg !8487
  br i1 %22, label %24, label %23, !dbg !8488

23:                                               ; preds = %19
  tail call void %21(i8* noundef %2) #25, !dbg !8489
  br label %24, !dbg !8491

24:                                               ; preds = %23, %19
  tail call fastcc void @run_test_rules(i1 noundef zeroext false, %struct.ztest_unit_test* noundef nonnull %1, i8* noundef %2) #24, !dbg !8492
  tail call fastcc void @get_test_duration_ms() #24, !dbg !8493
  %25 = load i32, i32* @tc_spend_time, align 4, !dbg !8494
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 4, !dbg !8496
  %27 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %26, align 4, !dbg !8496
  %28 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %27, i32 0, i32 4, !dbg !8497
  %29 = load i32, i32* %28, align 4, !dbg !8497
  %30 = icmp ugt i32 %25, %29, !dbg !8498
  br i1 %30, label %31, label %32, !dbg !8499

31:                                               ; preds = %24
  store i32 %25, i32* %28, align 4, !dbg !8500
  br label %32, !dbg !8502

32:                                               ; preds = %31, %24
  store i32 5, i32* @phase, align 4, !dbg !8503
  %33 = load i32, i32* @test_result, align 4, !dbg !8504
  switch i32 %33, label %34 [
    i32 5, label %38
    i32 2, label %38
  ], !dbg !8506

34:                                               ; preds = %32
  %35 = add i32 %33, -3, !dbg !8507
  %36 = icmp ult i32 %35, 2, !dbg !8507
  %37 = select i1 %36, i32 2, i32 0, !dbg !8507
  br label %38, !dbg !8507

38:                                               ; preds = %34, %32, %32
  %39 = phi i32 [ 1, %32 ], [ 1, %32 ], [ %37, %34 ], !dbg !8457
  call void @llvm.dbg.value(metadata i32 %39, metadata !8456, metadata !DIExpression()), !dbg !8457
  tail call fastcc void @cleanup_test() #24, !dbg !8509
  call void @llvm.dbg.value(metadata i32 %39, metadata !8456, metadata !DIExpression()), !dbg !8457
  %40 = tail call fastcc i32 @get_final_test_result(%struct.ztest_unit_test* noundef nonnull %1, i32 noundef %39) #24, !dbg !8512
  call void @llvm.dbg.value(metadata i32 %40, metadata !8456, metadata !DIExpression()), !dbg !8457
  %41 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %40) #24, !dbg !8513
  %42 = load i8*, i8** %4, align 4, !dbg !8513
  %43 = load i32, i32* @tc_spend_time, align 4, !dbg !8513
  %44 = freeze i32 %43
  %45 = udiv i32 %44, 1000, !dbg !8513
  %46 = mul i32 %45, 1000
  %47 = sub i32 %44, %46
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21.110, i32 0, i32 0), i8* noundef %41, i8* noundef %42, i32 noundef %45, i32 noundef %47) #25, !dbg !8513
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8513
  %48 = icmp eq i32 %40, 2, !dbg !8515
  br i1 %48, label %49, label %52, !dbg !8517

49:                                               ; preds = %38
  %50 = load i1, i1* @current_test_failed_assumption, align 1, !dbg !8518
  br i1 %50, label %51, label %52, !dbg !8519

51:                                               ; preds = %49
  store i32 1, i32* @test_status, align 4, !dbg !8520
  br label %52, !dbg !8522

52:                                               ; preds = %51, %49, %38
  ret i32 %40, !dbg !8523
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_start_time_cyc() unnamed_addr #1 !dbg !8524 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !8525
  store i32 %1, i32* @tc_start_time, align 4, !dbg !8526
  ret void, !dbg !8527
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !8528 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8547, metadata !DIExpression()), !dbg !8548
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8538, metadata !DIExpression()), !dbg !8548
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), metadata !8539, metadata !DIExpression()), !dbg !8548
  call void @llvm.dbg.value(metadata i32 1024, metadata !8540, metadata !DIExpression()), !dbg !8548
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @test_cb, metadata !8541, metadata !DIExpression()), !dbg !8548
  call void @llvm.dbg.value(metadata i8* %0, metadata !8542, metadata !DIExpression()), !dbg !8548
  call void @llvm.dbg.value(metadata i8* %1, metadata !8543, metadata !DIExpression()), !dbg !8548
  call void @llvm.dbg.value(metadata i8* %2, metadata !8544, metadata !DIExpression()), !dbg !8548
  call void @llvm.dbg.value(metadata i32 -1, metadata !8545, metadata !DIExpression()), !dbg !8548
  call void @llvm.dbg.value(metadata i32 %3, metadata !8546, metadata !DIExpression()), !dbg !8548
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8549, !srcloc !8551
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef nonnull @ztest_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @test_cb, i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef -1, i32 noundef %3, [1 x i64] [i64 -1]) #25, !dbg !8552
  ret void, !dbg !8553
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_object_access_grant() unnamed_addr #1 !dbg !8554 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8559, metadata !DIExpression()), !dbg !8561
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8560, metadata !DIExpression()), !dbg !8561
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8562, !srcloc !8564
  ret void, !dbg !8565
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_name_set(i8* noundef %0) unnamed_addr #1 !dbg !8566 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8570, metadata !DIExpression()), !dbg !8572
  call void @llvm.dbg.value(metadata i8* %0, metadata !8571, metadata !DIExpression()), !dbg !8572
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8573, !srcloc !8575
  %2 = tail call i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef nonnull @ztest_thread, i8* noundef %0) #25, !dbg !8576
  ret void, !dbg !8577
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start() unnamed_addr #1 !dbg !8578 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8580, metadata !DIExpression()), !dbg !8581
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8582, !srcloc !8584
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef nonnull @ztest_thread) #25, !dbg !8585
  ret void, !dbg !8586
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_join() unnamed_addr #1 !dbg !8587 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8592, metadata !DIExpression()), !dbg !8593
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8591, metadata !DIExpression()), !dbg !8593
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8594, !srcloc !8596
  %1 = tail call i32 @z_impl_k_thread_join(%struct.k_thread* noundef nonnull @ztest_thread, [1 x i64] [i64 -1]) #25, !dbg !8597
  ret void, !dbg !8598
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_rules(i1 noundef zeroext %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !8599 {
  call void @llvm.dbg.value(metadata i1 %0, metadata !8603, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8619
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8604, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata i8* %2, metadata !8605, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), metadata !8606, metadata !DIExpression()), !dbg !8620
  br i1 icmp ult (%struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0)), label %5, label %4, !dbg !8621

4:                                                ; preds = %17, %3
  ret void, !dbg !8622

5:                                                ; preds = %3, %17
  %6 = phi %struct.ztest_test_rule* [ %18, %17 ], [ getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %6, metadata !8606, metadata !DIExpression()), !dbg !8620
  br i1 %0, label %7, label %11, !dbg !8623

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 0, !dbg !8627
  %9 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %8, align 4, !dbg !8627
  %10 = icmp eq void (%struct.ztest_unit_test*, i8*)* %9, null, !dbg !8628
  br i1 %10, label %17, label %15, !dbg !8629

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 1, !dbg !8630
  %13 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %12, align 4, !dbg !8630
  %14 = icmp eq void (%struct.ztest_unit_test*, i8*)* %13, null, !dbg !8632
  br i1 %14, label %17, label %15, !dbg !8633

15:                                               ; preds = %11, %7
  %16 = phi void (%struct.ztest_unit_test*, i8*)* [ %9, %7 ], [ %13, %11 ]
  tail call void %16(%struct.ztest_unit_test* noundef %1, i8* noundef %2) #25, !dbg !8634
  br label %17, !dbg !8635

17:                                               ; preds = %15, %7, %11
  %18 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 1, !dbg !8635
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %18, metadata !8606, metadata !DIExpression()), !dbg !8620
  %19 = icmp ult %struct.ztest_test_rule* %18, getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0), !dbg !8636
  br i1 %19, label %5, label %4, !dbg !8621, !llvm.loop !8637
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_test_duration_ms() unnamed_addr #1 !dbg !8639 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !8642
  %2 = load i32, i32* @tc_start_time, align 4, !dbg !8643
  %3 = sub i32 %1, %2, !dbg !8644
  call void @llvm.dbg.value(metadata i32 %3, metadata !8641, metadata !DIExpression()), !dbg !8645
  %4 = tail call fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %3) #24, !dbg !8646
  store i32 %4, i32* @tc_spend_time, align 4, !dbg !8647
  ret void, !dbg !8648
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cleanup_test() unnamed_addr #1 !dbg !8649 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8653, metadata !DIExpression()), !dbg !8656
  call void @llvm.dbg.value(metadata i32 0, metadata !8654, metadata !DIExpression()), !dbg !8656
  call void @llvm.dbg.value(metadata i32 0, metadata !8655, metadata !DIExpression()), !dbg !8656
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef nonnull @ztest_thread) #24, !dbg !8657
  call void @llvm.dbg.value(metadata i32 0, metadata !8654, metadata !DIExpression()), !dbg !8656
  ret void, !dbg !8660
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_final_test_result(%struct.ztest_unit_test* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8661 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8665, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata i32 %1, metadata !8666, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata i32 -1, metadata !8667, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), metadata !8668, metadata !DIExpression()), !dbg !8677
  br i1 icmp ult (%struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0)), label %3, label %31, !dbg !8678

3:                                                ; preds = %2
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 1
  %5 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 0
  br label %6, !dbg !8678

6:                                                ; preds = %3, %19
  %7 = phi %struct.ztest_expected_result_entry* [ getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %3 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %7, metadata !8668, metadata !DIExpression()), !dbg !8677
  %8 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 1, !dbg !8679
  %9 = load i8*, i8** %8, align 4, !dbg !8679
  %10 = load i8*, i8** %4, align 4, !dbg !8683
  %11 = tail call i32 @strcmp(i8* noundef %9, i8* noundef %10) #25, !dbg !8684
  %12 = icmp eq i32 %11, 0, !dbg !8685
  br i1 %12, label %13, label %19, !dbg !8686

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 0, !dbg !8687
  %15 = load i8*, i8** %14, align 4, !dbg !8687
  %16 = load i8*, i8** %5, align 4, !dbg !8688
  %17 = tail call i32 @strcmp(i8* noundef %15, i8* noundef %16) #25, !dbg !8689
  %18 = icmp eq i32 %17, 0, !dbg !8690
  br i1 %18, label %22, label %19, !dbg !8691

19:                                               ; preds = %6, %13
  %20 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 1, !dbg !8692
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %20, metadata !8668, metadata !DIExpression()), !dbg !8677
  %21 = icmp ult %struct.ztest_expected_result_entry* %20, getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0), !dbg !8693
  br i1 %21, label %6, label %31, !dbg !8678, !llvm.loop !8694

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 2, !dbg !8696
  %24 = load i32, i32* %23, align 4, !dbg !8696
  call void @llvm.dbg.value(metadata i32 %24, metadata !8667, metadata !DIExpression()), !dbg !8676
  switch i32 %24, label %31 [
    i32 0, label %25
    i32 1, label %28
  ], !dbg !8698

25:                                               ; preds = %22
  %26 = icmp ne i32 %1, 1, !dbg !8699
  %27 = zext i1 %26 to i32, !dbg !8702
  br label %31, !dbg !8703

28:                                               ; preds = %22
  %29 = icmp ne i32 %1, 2, !dbg !8704
  %30 = zext i1 %29 to i32, !dbg !8707
  br label %31, !dbg !8708

31:                                               ; preds = %19, %2, %22, %28, %25
  %32 = phi i32 [ %27, %25 ], [ %30, %28 ], [ %1, %22 ], [ %1, %2 ], [ %1, %19 ], !dbg !8676
  ret i32 %32, !dbg !8709
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @TC_RESULT_TO_STR(i32 noundef %0) unnamed_addr #4 !dbg !8710 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8714, metadata !DIExpression()), !dbg !8715
  %2 = icmp ult i32 %0, 3, !dbg !8716
  br i1 %2, label %3, label %6, !dbg !8716

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table.TC_RESULT_TO_STR, i32 0, i32 %0, !dbg !8716
  %5 = load i8*, i8** %4, align 4, !dbg !8716
  br label %6, !dbg !8716

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27.111, i32 0, i32 0), %1 ], !dbg !8717
  ret i8* %7, !dbg !8719
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !8720 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !8721
  ret i32 %1, !dbg !8722
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !8723 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8726, metadata !DIExpression()), !dbg !8727
  %2 = zext i32 %0 to i64, !dbg !8728
  call void @llvm.dbg.value(metadata i64 %2, metadata !8729, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata i32 168000000, metadata !8734, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata i32 1000, metadata !8735, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata i8 1, metadata !8736, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata i8 1, metadata !8737, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata i8 1, metadata !8738, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata i8 0, metadata !8739, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata i8 0, metadata !8740, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata i8 1, metadata !8741, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata i64 0, metadata !8742, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata i64 167999, metadata !8742, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata i64 167999, metadata !8742, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata i64 167999, metadata !8742, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata i64 167999, metadata !8742, metadata !DIExpression()), !dbg !8746
  %3 = add nuw nsw i64 %2, 167999, !dbg !8748
  call void @llvm.dbg.value(metadata i64 %3, metadata !8729, metadata !DIExpression()), !dbg !8746
  %4 = icmp ult i32 %0, -167999
  %5 = trunc i64 %3 to i32, !dbg !8751
  %6 = udiv i32 %5, 168000, !dbg !8751
  %7 = zext i32 %6 to i64, !dbg !8751
  %8 = udiv i64 %3, 168000, !dbg !8751
  %9 = select i1 %4, i64 %7, i64 %8, !dbg !8751
  %10 = trunc i64 %9 to i32, !dbg !8753
  ret i32 %10, !dbg !8754
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !8755 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !8757
  ret i32 %1, !dbg !8758
}

; Function Attrs: noinline nounwind optsize
define internal void @test_cb(i8* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2) #1 !dbg !8759 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8761, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i8* %1, metadata !8762, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i8* %2, metadata !8763, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i8* %0, metadata !8764, metadata !DIExpression()), !dbg !8766
  %4 = bitcast i8* %1 to %struct.ztest_unit_test*, !dbg !8767
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8765, metadata !DIExpression()), !dbg !8766
  store i32 0, i32* @test_result, align 4, !dbg !8768
  tail call fastcc void @run_test_rules(i1 noundef zeroext true, %struct.ztest_unit_test* noundef %4, i8* noundef %2) #24, !dbg !8769
  %5 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !8770
  %6 = bitcast i8* %5 to void (i8*)**, !dbg !8770
  %7 = load void (i8*)*, void (i8*)** %6, align 4, !dbg !8770
  %8 = icmp eq void (i8*)* %7, null, !dbg !8772
  br i1 %8, label %10, label %9, !dbg !8773

9:                                                ; preds = %3
  tail call void %7(i8* noundef %2) #25, !dbg !8774
  br label %10, !dbg !8776

10:                                               ; preds = %9, %3
  tail call fastcc void @run_test_functions(%struct.ztest_unit_test* noundef %4, i8* noundef %2) #24, !dbg !8777
  store i32 1, i32* @test_result, align 4, !dbg !8778
  ret void, !dbg !8779
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_functions(%struct.ztest_unit_test* nocapture noundef readonly %0, i8* noundef %1) unnamed_addr #1 !dbg !8780 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* undef, metadata !8784, metadata !DIExpression()), !dbg !8787
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8785, metadata !DIExpression()), !dbg !8787
  call void @llvm.dbg.value(metadata i8* %1, metadata !8786, metadata !DIExpression()), !dbg !8787
  store i32 2, i32* @phase, align 4, !dbg !8788
  %3 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 2, !dbg !8789
  %4 = load void (i8*)*, void (i8*)** %3, align 4, !dbg !8789
  tail call void %4(i8* noundef %1) #25, !dbg !8790
  ret void, !dbg !8791
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_ztest_run_test_suites(i8* noundef %0) local_unnamed_addr #1 !dbg !8792 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8796, metadata !DIExpression()), !dbg !8800
  call void @llvm.dbg.value(metadata i32 0, metadata !8797, metadata !DIExpression()), !dbg !8800
  %2 = load i32, i32* @test_status, align 4, !dbg !8801
  %3 = icmp eq i32 %2, 2, !dbg !8803
  br i1 %3, label %17, label %4, !dbg !8804

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8798, metadata !DIExpression()), !dbg !8805
  call void @llvm.dbg.value(metadata i32 0, metadata !8797, metadata !DIExpression()), !dbg !8800
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %5, label %15, !dbg !8806

5:                                                ; preds = %4, %5
  %6 = phi %struct.ztest_suite_node* [ %12, %5 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %4 ]
  %7 = phi i32 [ %9, %5 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %6, metadata !8798, metadata !DIExpression()), !dbg !8805
  call void @llvm.dbg.value(metadata i32 %7, metadata !8797, metadata !DIExpression()), !dbg !8800
  %8 = tail call fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef nonnull %6, i8* noundef %0) #24, !dbg !8807
  %9 = add nsw i32 %8, %7, !dbg !8810
  call void @llvm.dbg.value(metadata i32 %9, metadata !8797, metadata !DIExpression()), !dbg !8800
  %10 = load i32, i32* @test_status, align 4, !dbg !8811
  %11 = icmp ne i32 %10, 2, !dbg !8813
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %6, i32 1, !dbg !8814
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8798, metadata !DIExpression()), !dbg !8805
  %13 = icmp ult %struct.ztest_suite_node* %12, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)
  %14 = select i1 %11, i1 %13, i1 false, !dbg !8815
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8798, metadata !DIExpression()), !dbg !8805
  call void @llvm.dbg.value(metadata i32 %9, metadata !8797, metadata !DIExpression()), !dbg !8800
  br i1 %14, label %5, label %15, !dbg !8815, !llvm.loop !8816

15:                                               ; preds = %5, %4
  %16 = phi i32 [ 0, %4 ], [ %9, %5 ], !dbg !8800
  call void @llvm.dbg.value(metadata i32 %16, metadata !8797, metadata !DIExpression()), !dbg !8800
  tail call fastcc void @__ztest_show_suite_summary() #24, !dbg !8818
  br label %17, !dbg !8819

17:                                               ; preds = %1, %15
  %18 = phi i32 [ %16, %15 ], [ 0, %1 ], !dbg !8800
  ret i32 %18, !dbg !8820
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !8821 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8825, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata i8* %1, metadata !8826, metadata !DIExpression()), !dbg !8836
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 6, !dbg !8837
  %4 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %3, align 4, !dbg !8837
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %4, metadata !8827, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata i32 0, metadata !8828, metadata !DIExpression()), !dbg !8836
  tail call fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* noundef %0) #24, !dbg !8838
  call void @llvm.dbg.value(metadata i32 0, metadata !8829, metadata !DIExpression()), !dbg !8839
  call void @llvm.dbg.value(metadata i32 0, metadata !8828, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata i32 undef, metadata !8829, metadata !DIExpression()), !dbg !8839
  %5 = load i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, %struct.ztest_suite_node*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 1), align 4
  %6 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 1
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8828, metadata !DIExpression()), !dbg !8836
  %8 = tail call zeroext i1 %5(i8* noundef %1, %struct.ztest_suite_node* noundef %0) #25, !dbg !8840
  br i1 %8, label %9, label %16, !dbg !8841

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 2
  %11 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef nonnull %0) #24, !dbg !8842
  call void @llvm.dbg.value(metadata i32 %11, metadata !8831, metadata !DIExpression()), !dbg !8843
  call void @llvm.dbg.value(metadata i32 1, metadata !8828, metadata !DIExpression()), !dbg !8836
  %12 = load i32, i32* %7, align 4, !dbg !8844
  %13 = add i32 %12, 1, !dbg !8844
  store i32 %13, i32* %7, align 4, !dbg !8844
  %14 = icmp ne i32 %11, 0, !dbg !8845
  %15 = zext i1 %14 to i32, !dbg !8846
  br label %16, !dbg !8847

16:                                               ; preds = %2, %9
  %17 = phi i32* [ %10, %9 ], [ %6, %2 ]
  %18 = phi i32 [ %15, %9 ], [ 1, %2 ]
  %19 = phi i32 [ 1, %9 ], [ 0, %2 ], !dbg !8836
  %20 = load i32, i32* %17, align 4, !dbg !8848
  %21 = add i32 %20, %18, !dbg !8848
  store i32 %21, i32* %17, align 4, !dbg !8848
  call void @llvm.dbg.value(metadata i32 %19, metadata !8828, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata i32 undef, metadata !8829, metadata !DIExpression()), !dbg !8839
  ret i32 %19, !dbg !8849
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary() unnamed_addr #1 !dbg !8850 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.28.115, i32 0, i32 0)) #25, !dbg !8854
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8852, metadata !DIExpression()), !dbg !8855
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %1, !dbg !8856

1:                                                ; preds = %2, %0
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29.116, i32 0, i32 0)) #25, !dbg !8857
  ret void, !dbg !8858

2:                                                ; preds = %0, %2
  %3 = phi %struct.ztest_suite_node* [ %4, %2 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8852, metadata !DIExpression()), !dbg !8855
  tail call fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* noundef nonnull %3) #24, !dbg !8859
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !8862
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !8852, metadata !DIExpression()), !dbg !8855
  %5 = icmp ult %struct.ztest_suite_node* %4, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8863
  br i1 %5, label %2, label %1, !dbg !8856, !llvm.loop !8864
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8866 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8870, metadata !DIExpression()), !dbg !8874
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8871, metadata !DIExpression()), !dbg !8874
  call void @llvm.dbg.value(metadata i32 0, metadata !8872, metadata !DIExpression()), !dbg !8874
  call void @llvm.dbg.value(metadata i32 0, metadata !8873, metadata !DIExpression()), !dbg !8874
  tail call fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* noundef %0) #24, !dbg !8875
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 poison, metadata !8873, metadata !DIExpression()), !dbg !8874
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8871, metadata !DIExpression()), !dbg !8874
  %3 = load i8*, i8** %2, align 4, !dbg !8876
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8877
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8871, metadata !DIExpression()), !dbg !8874
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8878
  br i1 %5, label %36, label %6, !dbg !8879

6:                                                ; preds = %1, %20
  %7 = phi %struct.ztest_unit_test* [ %34, %20 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8880
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8880
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 1, !dbg !8883
  %11 = load i32, i32* %10, align 4, !dbg !8883
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !8884
  %13 = load i32, i32* %12, align 4, !dbg !8884
  %14 = icmp eq i32 %11, %13, !dbg !8885
  br i1 %14, label %20, label %15, !dbg !8886

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 3, !dbg !8887
  %17 = load i32, i32* %16, align 4, !dbg !8887
  %18 = icmp ne i32 %17, %13, !dbg !8889
  %19 = zext i1 %18 to i32
  br label %20

20:                                               ; preds = %15, %6
  %21 = phi i32 [ 2, %6 ], [ %19, %15 ], !dbg !8890
  call void @llvm.dbg.value(metadata i32 %21, metadata !8872, metadata !DIExpression()), !dbg !8874
  %22 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %21) #24, !dbg !8891
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 0, !dbg !8891
  %24 = load i8*, i8** %23, align 4, !dbg !8891
  %25 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 1, !dbg !8891
  %26 = load i8*, i8** %25, align 4, !dbg !8891
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 4, !dbg !8891
  %28 = load i32, i32* %27, align 4, !dbg !8891
  %29 = freeze i32 %28
  %30 = udiv i32 %29, 1000, !dbg !8891
  %31 = mul i32 %30, 1000
  %32 = sub i32 %29, %31
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.117, i32 0, i32 0), i8* noundef %22, i8* noundef %24, i8* noundef %26, i32 noundef %30, i32 noundef %32) #25, !dbg !8891
  call void @llvm.dbg.value(metadata i32 poison, metadata !8873, metadata !DIExpression()), !dbg !8874
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8871, metadata !DIExpression()), !dbg !8874
  %33 = load i8*, i8** %2, align 4, !dbg !8876
  %34 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %33, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8877
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %34, metadata !8871, metadata !DIExpression()), !dbg !8874
  %35 = icmp eq %struct.ztest_unit_test* %34, null, !dbg !8878
  br i1 %35, label %36, label %6, !dbg !8879, !llvm.loop !8892

36:                                               ; preds = %20, %1
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31.118, i32 0, i32 0)) #25, !dbg !8894
  ret void, !dbg !8895
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8896 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8898, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i32 0, metadata !8899, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i32 0, metadata !8900, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i32 0, metadata !8901, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i32 0, metadata !8902, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i32 0, metadata !8903, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i32 0, metadata !8904, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i32 0, metadata !8905, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i32 0, metadata !8906, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i32 0, metadata !8907, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i32 0, metadata !8908, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i32 0, metadata !8909, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8910, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i32 0, metadata !8911, metadata !DIExpression()), !dbg !8912
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8911, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8910, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i32 0, metadata !8902, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i32 0, metadata !8901, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i32 0, metadata !8900, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i32 0, metadata !8899, metadata !DIExpression()), !dbg !8912
  %3 = load i8*, i8** %2, align 4, !dbg !8913
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8914
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8910, metadata !DIExpression()), !dbg !8912
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8915
  br i1 %5, label %58, label %6, !dbg !8916

6:                                                ; preds = %1, %34
  %7 = phi %struct.ztest_unit_test* [ %39, %34 ], [ %4, %1 ]
  %8 = phi i32 [ %18, %34 ], [ 0, %1 ]
  %9 = phi i32 [ %13, %34 ], [ 0, %1 ]
  %10 = phi i32 [ %37, %34 ], [ 0, %1 ]
  %11 = phi i32 [ %36, %34 ], [ 0, %1 ]
  %12 = phi i32 [ %35, %34 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8911, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i32 %9, metadata !8902, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i32 %10, metadata !8901, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i32 %11, metadata !8900, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i32 %12, metadata !8899, metadata !DIExpression()), !dbg !8912
  %13 = add nuw nsw i32 %9, 1, !dbg !8917
  call void @llvm.dbg.value(metadata i32 %13, metadata !8902, metadata !DIExpression()), !dbg !8912
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8919
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %14, align 4, !dbg !8919
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 4, !dbg !8920
  %17 = load i32, i32* %16, align 4, !dbg !8920
  %18 = add i32 %17, %8, !dbg !8921
  call void @llvm.dbg.value(metadata i32 %18, metadata !8911, metadata !DIExpression()), !dbg !8912
  %19 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 1, !dbg !8922
  %20 = load i32, i32* %19, align 4, !dbg !8922
  %21 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 0, !dbg !8924
  %22 = load i32, i32* %21, align 4, !dbg !8924
  %23 = icmp eq i32 %20, %22, !dbg !8925
  br i1 %23, label %24, label %26, !dbg !8926

24:                                               ; preds = %6
  %25 = add nsw i32 %10, 1, !dbg !8927
  call void @llvm.dbg.value(metadata i32 %25, metadata !8901, metadata !DIExpression()), !dbg !8912
  br label %34, !dbg !8929

26:                                               ; preds = %6
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !8930
  %28 = load i32, i32* %27, align 4, !dbg !8930
  %29 = icmp eq i32 %28, %22, !dbg !8932
  br i1 %29, label %30, label %32, !dbg !8933

30:                                               ; preds = %26
  %31 = add nsw i32 %12, 1, !dbg !8934
  call void @llvm.dbg.value(metadata i32 %31, metadata !8899, metadata !DIExpression()), !dbg !8912
  br label %34, !dbg !8936

32:                                               ; preds = %26
  %33 = add nsw i32 %11, 1, !dbg !8937
  call void @llvm.dbg.value(metadata i32 %33, metadata !8900, metadata !DIExpression()), !dbg !8912
  br label %34

34:                                               ; preds = %30, %32, %24
  %35 = phi i32 [ %12, %24 ], [ %31, %30 ], [ %12, %32 ], !dbg !8912
  %36 = phi i32 [ %11, %24 ], [ %11, %30 ], [ %33, %32 ], !dbg !8912
  %37 = phi i32 [ %25, %24 ], [ %10, %30 ], [ %10, %32 ], !dbg !8912
  call void @llvm.dbg.value(metadata i32 %18, metadata !8911, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8910, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i32 %13, metadata !8902, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i32 %37, metadata !8901, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i32 %36, metadata !8900, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i32 %35, metadata !8899, metadata !DIExpression()), !dbg !8912
  %38 = load i8*, i8** %2, align 4, !dbg !8913
  %39 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %38, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8914
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %39, metadata !8910, metadata !DIExpression()), !dbg !8912
  %40 = icmp eq %struct.ztest_unit_test* %39, null, !dbg !8915
  br i1 %40, label %41, label %6, !dbg !8916, !llvm.loop !8939

41:                                               ; preds = %34
  %42 = icmp eq i32 %13, %37, !dbg !8941
  br i1 %42, label %58, label %43, !dbg !8943

43:                                               ; preds = %41
  %44 = icmp sgt i32 %36, 0, !dbg !8944
  %45 = zext i1 %44 to i32, !dbg !8946
  call void @llvm.dbg.value(metadata i32 %45, metadata !8909, metadata !DIExpression()), !dbg !8912
  %46 = sub nsw i32 %13, %37, !dbg !8947
  call void @llvm.dbg.value(metadata i32 %46, metadata !8903, metadata !DIExpression()), !dbg !8912
  %47 = mul nsw i32 %35, 100000, !dbg !8948
  call void @llvm.dbg.value(metadata i32 %47, metadata !8904, metadata !DIExpression()), !dbg !8912
  %48 = sdiv i32 %47, %46, !dbg !8949
  call void @llvm.dbg.value(metadata i32 %48, metadata !8905, metadata !DIExpression()), !dbg !8912
  %49 = sdiv i32 %48, 1000, !dbg !8950
  call void @llvm.dbg.value(metadata i32 %49, metadata !8906, metadata !DIExpression()), !dbg !8912
  %50 = mul nsw i32 %49, -1000, !dbg !8951
  %51 = add i32 %50, %48, !dbg !8952
  %52 = sdiv i32 %51, 10, !dbg !8953
  call void @llvm.dbg.value(metadata i32 %52, metadata !8907, metadata !DIExpression()), !dbg !8912
  %53 = mul nsw i32 %52, -10, !dbg !8954
  %54 = add i32 %53, %51, !dbg !8955
  call void @llvm.dbg.value(metadata i32 %54, metadata !8908, metadata !DIExpression()), !dbg !8912
  %55 = icmp sgt i32 %54, 4, !dbg !8956
  %56 = zext i1 %55 to i32, !dbg !8958
  %57 = add nsw i32 %52, %56, !dbg !8958
  br label %58, !dbg !8958

58:                                               ; preds = %1, %43, %41
  %59 = phi i32 [ %18, %41 ], [ %18, %43 ], [ 0, %1 ]
  %60 = phi i32 [ %13, %41 ], [ %13, %43 ], [ 0, %1 ]
  %61 = phi i32 [ %37, %41 ], [ %37, %43 ], [ 0, %1 ]
  %62 = phi i32 [ %36, %41 ], [ %36, %43 ], [ 0, %1 ]
  %63 = phi i32 [ %35, %41 ], [ %35, %43 ], [ 0, %1 ]
  %64 = phi i32 [ 0, %41 ], [ %49, %43 ], [ 0, %1 ], !dbg !8959
  %65 = phi i32 [ 0, %41 ], [ %57, %43 ], [ 0, %1 ], !dbg !8959
  %66 = phi i32 [ 2, %41 ], [ %45, %43 ], [ 2, %1 ], !dbg !8959
  call void @llvm.dbg.value(metadata i32 %66, metadata !8909, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i32 %65, metadata !8907, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i32 %64, metadata !8906, metadata !DIExpression()), !dbg !8912
  %67 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %66) #24, !dbg !8960
  %68 = load i8*, i8** %2, align 4, !dbg !8960
  %69 = freeze i32 %59
  %70 = udiv i32 %69, 1000, !dbg !8960
  %71 = mul i32 %70, 1000
  %72 = sub i32 %69, %71
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([100 x i8], [100 x i8]* @.str.32.119, i32 0, i32 0), i8* noundef %67, i32 noundef %64, i32 noundef %65, i8* noundef %68, i32 noundef %63, i32 noundef %62, i32 noundef %61, i32 noundef %60, i32 noundef %70, i32 noundef %72) #25, !dbg !8960
  ret void, !dbg !8961
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8962 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8964, metadata !DIExpression()), !dbg !8966
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8965, metadata !DIExpression()), !dbg !8966
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8965, metadata !DIExpression()), !dbg !8966
  %3 = load i8*, i8** %2, align 4, !dbg !8967
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8968
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8965, metadata !DIExpression()), !dbg !8966
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8969
  br i1 %5, label %22, label %6, !dbg !8970

6:                                                ; preds = %1, %6
  %7 = phi %struct.ztest_unit_test* [ %20, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8971
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8971
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !8973
  store i32 0, i32* %10, align 4, !dbg !8974
  %11 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8975
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %11, i32 0, i32 1, !dbg !8976
  store i32 0, i32* %12, align 4, !dbg !8977
  %13 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8978
  %14 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %13, i32 0, i32 2, !dbg !8979
  store i32 0, i32* %14, align 4, !dbg !8980
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8981
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !8982
  store i32 0, i32* %16, align 4, !dbg !8983
  %17 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8984
  %18 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %17, i32 0, i32 4, !dbg !8985
  store i32 0, i32* %18, align 4, !dbg !8986
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8965, metadata !DIExpression()), !dbg !8966
  %19 = load i8*, i8** %2, align 4, !dbg !8967
  %20 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %19, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8968
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %20, metadata !8965, metadata !DIExpression()), !dbg !8966
  %21 = icmp eq %struct.ztest_unit_test* %20, null, !dbg !8969
  br i1 %21, label %22, label %6, !dbg !8970, !llvm.loop !8987

22:                                               ; preds = %6, %1
  ret void, !dbg !8989
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_verify_all_test_suites_ran() local_unnamed_addr #1 !dbg !8990 {
  call void @llvm.dbg.value(metadata i8 1, metadata !8992, metadata !DIExpression()), !dbg !8995
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8993, metadata !DIExpression()), !dbg !8995
  call void @llvm.dbg.value(metadata i8 poison, metadata !8992, metadata !DIExpression()), !dbg !8995
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %3, label %1, !dbg !8996

1:                                                ; preds = %14, %0
  %2 = phi i1 [ true, %0 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !8994, metadata !DIExpression()), !dbg !8995
  call void @llvm.dbg.value(metadata i8 poison, metadata !8992, metadata !DIExpression()), !dbg !8995
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %18, label %33, !dbg !9000

3:                                                ; preds = %0, %14
  %4 = phi %struct.ztest_suite_node* [ %16, %14 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  %5 = phi i1 [ %15, %14 ], [ true, %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !8993, metadata !DIExpression()), !dbg !8995
  %6 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 6, !dbg !9002
  %7 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %6, align 4, !dbg !9002
  %8 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %7, i32 0, i32 0, !dbg !9006
  %9 = load i32, i32* %8, align 4, !dbg !9006
  %10 = icmp eq i32 %9, 0, !dbg !9007
  br i1 %10, label %11, label %14, !dbg !9008

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 0, !dbg !9009
  %13 = load i8*, i8** %12, align 4, !dbg !9009
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7.120, i32 0, i32 0), i8* noundef %13) #25, !dbg !9011
  call void @llvm.dbg.value(metadata i8 0, metadata !8992, metadata !DIExpression()), !dbg !8995
  br label %14, !dbg !9012

14:                                               ; preds = %3, %11
  %15 = phi i1 [ false, %11 ], [ %5, %3 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !8992, metadata !DIExpression()), !dbg !8995
  %16 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 1, !dbg !9013
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %16, metadata !8993, metadata !DIExpression()), !dbg !8995
  %17 = icmp ult %struct.ztest_suite_node* %16, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !9014
  br i1 %17, label %3, label %1, !dbg !8996, !llvm.loop !9015

18:                                               ; preds = %1, %29
  %19 = phi %struct.ztest_unit_test* [ %31, %29 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %1 ]
  %20 = phi i1 [ %30, %29 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !8994, metadata !DIExpression()), !dbg !8995
  %21 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 0, !dbg !9017
  %22 = load i8*, i8** %21, align 4, !dbg !9017
  %23 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %22) #24, !dbg !9020
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %23, metadata !8993, metadata !DIExpression()), !dbg !8995
  %24 = icmp eq %struct.ztest_suite_node* %23, null, !dbg !9021
  br i1 %24, label %25, label %29, !dbg !9023

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !9024
  %27 = load i8*, i8** %26, align 4, !dbg !9024
  %28 = load i8*, i8** %21, align 4, !dbg !9026
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.8.121, i32 0, i32 0), i8* noundef %27, i8* noundef %28) #25, !dbg !9027
  call void @llvm.dbg.value(metadata i8 0, metadata !8992, metadata !DIExpression()), !dbg !8995
  br label %29, !dbg !9028

29:                                               ; preds = %18, %25
  %30 = phi i1 [ false, %25 ], [ %20, %18 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !8992, metadata !DIExpression()), !dbg !8995
  %31 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 1, !dbg !9029
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %31, metadata !8994, metadata !DIExpression()), !dbg !8995
  %32 = icmp ult %struct.ztest_unit_test* %31, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !9030
  br i1 %32, label %18, label %33, !dbg !9000, !llvm.loop !9031

33:                                               ; preds = %29, %1
  %34 = phi i1 [ %2, %1 ], [ %30, %29 ]
  br i1 %34, label %36, label %35, !dbg !9033

35:                                               ; preds = %33
  store i32 1, i32* @test_status, align 4, !dbg !9034
  br label %36, !dbg !9037

36:                                               ; preds = %35, %33
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !8994, metadata !DIExpression()), !dbg !8995
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %37, label %60, !dbg !9038

37:                                               ; preds = %36, %57
  %38 = phi %struct.ztest_unit_test* [ %58, %57 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %36 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %38, metadata !8994, metadata !DIExpression()), !dbg !8995
  %39 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 4, !dbg !9040
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %39, align 4, !dbg !9040
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !9044
  %42 = load i32, i32* %41, align 4, !dbg !9044
  %43 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 3, !dbg !9045
  %44 = load i32, i32* %43, align 4, !dbg !9045
  %45 = add i32 %44, %42, !dbg !9046
  %46 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 1, !dbg !9047
  %47 = load i32, i32* %46, align 4, !dbg !9047
  %48 = add i32 %45, %47, !dbg !9048
  %49 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 0, !dbg !9049
  %50 = load i32, i32* %49, align 4, !dbg !9049
  %51 = icmp eq i32 %48, %50, !dbg !9050
  br i1 %51, label %57, label %52, !dbg !9051

52:                                               ; preds = %37
  %53 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 0, !dbg !9052
  %54 = load i8*, i8** %53, align 4, !dbg !9052
  %55 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 1, !dbg !9054
  %56 = load i8*, i8** %55, align 4, !dbg !9054
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.122, i32 0, i32 0), i8* noundef %54, i8* noundef %56) #25, !dbg !9055
  store i32 1, i32* @test_status, align 4, !dbg !9056
  br label %57, !dbg !9057

57:                                               ; preds = %37, %52
  %58 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 1, !dbg !9058
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %58, metadata !8994, metadata !DIExpression()), !dbg !8995
  %59 = icmp ult %struct.ztest_unit_test* %58, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !9059
  br i1 %59, label %37, label %60, !dbg !9038, !llvm.loop !9060

60:                                               ; preds = %57, %36
  ret void, !dbg !9062
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_run_all(i8* noundef %0) local_unnamed_addr #1 !dbg !9063 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9065, metadata !DIExpression()), !dbg !9066
  %2 = load void (i8*)*, void (i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 0), align 4, !dbg !9067
  tail call void %2(i8* noundef %0) #25, !dbg !9068
  ret void, !dbg !9069
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @test_main() local_unnamed_addr #1 !dbg !9070 {
  tail call void @ztest_run_all(i8* noundef null) #24, !dbg !9071
  tail call void @ztest_verify_all_test_suites_ran() #24, !dbg !9072
  ret void, !dbg !9073
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !9074 {
  tail call void @test_main() #24, !dbg !9075
  tail call void @end_report() #24, !dbg !9076
  ret void, !dbg !9077
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ztest_run_all(i8* noundef %0) #1 !dbg !9078 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9080, metadata !DIExpression()), !dbg !9081
  tail call fastcc void @ztest_run_test_suites(i8* noundef %0) #24, !dbg !9082
  ret void, !dbg !9083
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_ztest_should_suite_run(i8* noundef %0, %struct.ztest_suite_node* nocapture noundef readonly %1) #1 !dbg !9084 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9086, metadata !DIExpression()), !dbg !9089
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %1, metadata !9087, metadata !DIExpression()), !dbg !9089
  call void @llvm.dbg.value(metadata i8 1, metadata !9088, metadata !DIExpression()), !dbg !9089
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %1, i32 0, i32 5, !dbg !9090
  %4 = load i1 (i8*)*, i1 (i8*)** %3, align 4, !dbg !9090
  %5 = icmp eq i1 (i8*)* %4, null, !dbg !9092
  br i1 %5, label %8, label %6, !dbg !9093

6:                                                ; preds = %2
  %7 = tail call zeroext i1 %4(i8* noundef %0) #25, !dbg !9094
  call void @llvm.dbg.value(metadata i1 %7, metadata !9088, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9089
  br label %8, !dbg !9096

8:                                                ; preds = %6, %2
  %9 = phi i1 [ %7, %6 ], [ true, %2 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9088, metadata !DIExpression()), !dbg !9089
  ret i1 %9, !dbg !9097
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @z_ztest_should_test_run(i8* nocapture readnone %0, i8* nocapture readnone %1) #4 !dbg !9098 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !9100, metadata !DIExpression()), !dbg !9102
  call void @llvm.dbg.value(metadata i8* undef, metadata !9101, metadata !DIExpression()), !dbg !9102
  ret i1 true, !dbg !9103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ztest_run_test_suites(i8* noundef %0) unnamed_addr #1 !dbg !9104 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9107, metadata !DIExpression()), !dbg !9108
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9109, !srcloc !9111
  %2 = tail call i32 @z_impl_ztest_run_test_suites(i8* noundef %0) #25, !dbg !9112
  ret void, !dbg !9113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @ztest_relative_filename(i8* noundef readnone returned %0) local_unnamed_addr #4 !dbg !9114 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9118, metadata !DIExpression()), !dbg !9119
  ret i8* %0, !dbg !9120
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9121 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9123, metadata !DIExpression()), !dbg !9124
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !9125
  ret void, !dbg !9126
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9127 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9131, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.value(metadata i32 %1, metadata !9132, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9133, metadata !DIExpression()), !dbg !9137
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9138
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9138
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9138
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9134, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.value(metadata i32 %0, metadata !9136, metadata !DIExpression()), !dbg !9137
  %7 = icmp slt i32 %0, %1, !dbg !9139
  br i1 %7, label %8, label %22, !dbg !9142

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9136, metadata !DIExpression()), !dbg !9137
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !9143
  %11 = icmp eq i32 %10, 0, !dbg !9143
  br i1 %11, label %19, label %12, !dbg !9146

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !9147
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9149
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9149
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9151
  br i1 %15, label %19, label %16, !dbg !9152

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9153
  %18 = load i8*, i8** %17, align 4, !dbg !9153
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !9154
  br label %19, !dbg !9155

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9156
  call void @llvm.dbg.value(metadata i32 %20, metadata !9136, metadata !DIExpression()), !dbg !9137
  %21 = icmp eq i32 %20, %1, !dbg !9139
  br i1 %21, label %22, label %8, !dbg !9142, !llvm.loop !9157

22:                                               ; preds = %19, %3
  ret void, !dbg !9159
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #15 !dbg !9160 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9162, metadata !DIExpression()), !dbg !9163
  %2 = shl nuw i32 1, %0, !dbg !9164
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !9167
  ret i32 %3, !dbg !9168
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #14 !dbg !9169 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9173, metadata !DIExpression()), !dbg !9174
  %2 = shl nuw i32 1, %0, !dbg !9175
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !9178
  ret void, !dbg !9179
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9180 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9183, metadata !DIExpression()), !dbg !9184
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9185
  ret void, !dbg !9186
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9187 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9189, metadata !DIExpression()), !dbg !9190
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9191
  %3 = and i32 %2, %0, !dbg !9191
  %4 = icmp eq i32 %3, %0, !dbg !9192
  %5 = zext i1 %4 to i32, !dbg !9192
  ret i32 %5, !dbg !9193
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9194 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9196, metadata !DIExpression()), !dbg !9197
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !9198
  ret void, !dbg !9199
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9200 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9202, metadata !DIExpression()), !dbg !9203
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !9204
  ret void, !dbg !9205
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9206 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9208, metadata !DIExpression()), !dbg !9209
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !9210
  ret void, !dbg !9211
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9212 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9214, metadata !DIExpression()), !dbg !9215
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !9216
  ret void, !dbg !9217
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9218 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9220, metadata !DIExpression()), !dbg !9221
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !9222
  ret void, !dbg !9223
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9224 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9226, metadata !DIExpression()), !dbg !9227
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !9228
  ret void, !dbg !9229
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9230 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9232, metadata !DIExpression()), !dbg !9233
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !9234
  ret void, !dbg !9235
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9236 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9238, metadata !DIExpression()), !dbg !9239
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !9240
  ret void, !dbg !9241
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9242 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9244, metadata !DIExpression()), !dbg !9245
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !9246
  ret void, !dbg !9247
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9248 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9250, metadata !DIExpression()), !dbg !9251
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !9252
  ret void, !dbg !9253
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9254 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9256, metadata !DIExpression()), !dbg !9257
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !9258
  ret i32 0, !dbg !9259
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !888 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !892, metadata !DIExpression()), !dbg !9260
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !9261
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !9263
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !9265
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !9267
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !9269
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !9271
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !9273
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !9275
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !9277
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !9279
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !9281
  ret void, !dbg !9283
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9284 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9286, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.value(metadata i32 0, metadata !9287, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.value(metadata i32 undef, metadata !9287, metadata !DIExpression()), !dbg !9288
  %2 = lshr i32 6684671, %0, !dbg !9289
  %3 = and i32 %2, 1, !dbg !9289
  %4 = or i32 %3, %0, !dbg !9291
  %5 = icmp eq i32 %4, 0, !dbg !9291
  br i1 %5, label %6, label %7, !dbg !9291

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.127, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.128, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.129, i32 0, i32 0), i32 noundef 123) #25, !dbg !9292
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.129, i32 0, i32 0), i32 noundef 123) #25, !dbg !9292
  unreachable, !dbg !9292

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9297
  %9 = load i32, i32* %8, align 4, !dbg !9297
  call void @llvm.dbg.value(metadata i32 %9, metadata !9287, metadata !DIExpression()), !dbg !9288
  %10 = shl nuw i32 1, %0, !dbg !9298
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #24, !dbg !9299
  tail call void @arch_irq_enable(i32 noundef %9) #25, !dbg !9300
  ret void, !dbg !9301
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9302 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9304, metadata !DIExpression()), !dbg !9305
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9306
  %3 = or i32 %2, %0, !dbg !9306
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9306
  ret void, !dbg !9307
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #14 !dbg !9308 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9310, metadata !DIExpression()), !dbg !9311
  %2 = icmp slt i32 %0, 32, !dbg !9312
  br i1 %2, label %3, label %5, !dbg !9314

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9315
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !9317
  br label %5, !dbg !9318

5:                                                ; preds = %1, %3
  ret void, !dbg !9319
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9320 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9322, metadata !DIExpression()), !dbg !9323
  %2 = xor i32 %0, -1, !dbg !9324
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9324
  %4 = and i32 %3, %2, !dbg !9324
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9324
  ret void, !dbg !9325
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !9326 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9330, metadata !DIExpression()), !dbg !9332
  call void @llvm.dbg.value(metadata i32 %1, metadata !9331, metadata !DIExpression()), !dbg !9332
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9333

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9334
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !9336
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !9337
  br label %11, !dbg !9338

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9339
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !9340
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !9341
  br label %11, !dbg !9342

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9343
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !9344
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !9345
  br label %11, !dbg !9346

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9347
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !9348
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !9349
  br label %11, !dbg !9350

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9351
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9352 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9354, metadata !DIExpression()), !dbg !9355
  %2 = xor i32 %0, -1, !dbg !9356
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9356
  %4 = and i32 %3, %2, !dbg !9356
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9356
  ret void, !dbg !9357
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9358 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9360, metadata !DIExpression()), !dbg !9361
  %2 = xor i32 %0, -1, !dbg !9362
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9362
  %4 = and i32 %3, %2, !dbg !9362
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9362
  ret void, !dbg !9363
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9364 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9366, metadata !DIExpression()), !dbg !9367
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9368
  %3 = or i32 %2, %0, !dbg !9368
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9368
  ret void, !dbg !9369
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9370 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9372, metadata !DIExpression()), !dbg !9373
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9374
  %3 = or i32 %2, %0, !dbg !9374
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9374
  ret void, !dbg !9375
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !9376 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9380, metadata !DIExpression()), !dbg !9386
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9381, metadata !DIExpression()), !dbg !9386
  call void @llvm.dbg.value(metadata i8* %2, metadata !9382, metadata !DIExpression()), !dbg !9386
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !9383, metadata !DIExpression()), !dbg !9386
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9385, metadata !DIExpression()), !dbg !9386
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9387
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9387
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9389
  br i1 %6, label %7, label %9, !dbg !9390

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9391
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9392
  store i8* %2, i8** %8, align 4, !dbg !9393
  br label %9, !dbg !9394

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9386
  ret i32 %10, !dbg !9395
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !9396 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9398, metadata !DIExpression()), !dbg !9401
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !9399, metadata !DIExpression()), !dbg !9401
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9400, metadata !DIExpression()), !dbg !9401
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9402
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9403
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9404
  store i8* null, i8** %3, align 4, !dbg !9405
  ret void, !dbg !9406
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !9407 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9409, metadata !DIExpression()), !dbg !9414
  call void @llvm.dbg.value(metadata i8* %1, metadata !9410, metadata !DIExpression()), !dbg !9414
  call void @llvm.dbg.value(metadata i8* %1, metadata !9411, metadata !DIExpression()), !dbg !9414
  %3 = bitcast i8* %1 to i32*, !dbg !9415
  %4 = load i32, i32* %3, align 4, !dbg !9415
  %5 = add i32 %4, -169, !dbg !9415
  %6 = icmp ult i32 %5, -121, !dbg !9415
  br i1 %6, label %15, label %7, !dbg !9417

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9418
  %9 = inttoptr i32 %8 to i32*, !dbg !9419
  call void @llvm.dbg.value(metadata i32* %9, metadata !9412, metadata !DIExpression()), !dbg !9414
  %10 = load volatile i32, i32* %9, align 4, !dbg !9420
  call void @llvm.dbg.value(metadata i32 %10, metadata !9413, metadata !DIExpression()), !dbg !9414
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9421
  %12 = bitcast i8* %11 to i32*, !dbg !9421
  %13 = load i32, i32* %12, align 4, !dbg !9421
  %14 = or i32 %13, %10, !dbg !9422
  call void @llvm.dbg.value(metadata i32 %14, metadata !9413, metadata !DIExpression()), !dbg !9414
  store volatile i32 %14, i32* %9, align 4, !dbg !9423
  br label %15, !dbg !9424

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9414
  ret i32 %16, !dbg !9425
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !9426 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9428, metadata !DIExpression()), !dbg !9433
  call void @llvm.dbg.value(metadata i8* %1, metadata !9429, metadata !DIExpression()), !dbg !9433
  call void @llvm.dbg.value(metadata i8* %1, metadata !9430, metadata !DIExpression()), !dbg !9433
  %3 = bitcast i8* %1 to i32*, !dbg !9434
  %4 = load i32, i32* %3, align 4, !dbg !9434
  %5 = add i32 %4, -169, !dbg !9434
  %6 = icmp ult i32 %5, -121, !dbg !9434
  br i1 %6, label %16, label %7, !dbg !9436

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9437
  %9 = inttoptr i32 %8 to i32*, !dbg !9438
  call void @llvm.dbg.value(metadata i32* %9, metadata !9431, metadata !DIExpression()), !dbg !9433
  %10 = load volatile i32, i32* %9, align 4, !dbg !9439
  call void @llvm.dbg.value(metadata i32 %10, metadata !9432, metadata !DIExpression()), !dbg !9433
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9440
  %12 = bitcast i8* %11 to i32*, !dbg !9440
  %13 = load i32, i32* %12, align 4, !dbg !9440
  %14 = xor i32 %13, -1, !dbg !9441
  %15 = and i32 %10, %14, !dbg !9442
  call void @llvm.dbg.value(metadata i32 %15, metadata !9432, metadata !DIExpression()), !dbg !9433
  store volatile i32 %15, i32* %9, align 4, !dbg !9443
  br label %16, !dbg !9444

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9433
  ret i32 %17, !dbg !9445
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !9446 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9448, metadata !DIExpression()), !dbg !9456
  call void @llvm.dbg.value(metadata i8* %1, metadata !9449, metadata !DIExpression()), !dbg !9456
  call void @llvm.dbg.value(metadata i32* %2, metadata !9450, metadata !DIExpression()), !dbg !9456
  call void @llvm.dbg.value(metadata i8* %1, metadata !9451, metadata !DIExpression()), !dbg !9456
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !9457
  call void @llvm.dbg.value(metadata i32 %4, metadata !9452, metadata !DIExpression()), !dbg !9456
  call void @llvm.dbg.value(metadata i32 undef, metadata !9453, metadata !DIExpression()), !dbg !9456
  call void @llvm.dbg.value(metadata i32 undef, metadata !9454, metadata !DIExpression()), !dbg !9456
  call void @llvm.dbg.value(metadata i32 %4, metadata !9455, metadata !DIExpression()), !dbg !9456
  %5 = bitcast i8* %1 to i32*, !dbg !9458
  %6 = load i32, i32* %5, align 4, !dbg !9458
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !9459

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 4) #24, !dbg !9460
  call void @llvm.dbg.value(metadata i32 %8, metadata !9453, metadata !DIExpression()), !dbg !9456
  br label %19, !dbg !9461

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !9463
  call void @llvm.dbg.value(metadata i32 %10, metadata !9454, metadata !DIExpression()), !dbg !9456
  br label %19, !dbg !9464

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9465
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #24, !dbg !9466
  br label %19, !dbg !9467

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9468
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #24, !dbg !9469
  br label %19, !dbg !9470

17:                                               ; preds = %3
  br label %19, !dbg !9471

18:                                               ; preds = %3
  br label %19, !dbg !9472

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !9473
  br label %21, !dbg !9474

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !9456
  ret i32 %22, !dbg !9474
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #14 !dbg !9475 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9477, metadata !DIExpression()), !dbg !9485
  call void @llvm.dbg.value(metadata i8* %1, metadata !9478, metadata !DIExpression()), !dbg !9485
  call void @llvm.dbg.value(metadata i8* %2, metadata !9479, metadata !DIExpression()), !dbg !9485
  call void @llvm.dbg.value(metadata i8* %1, metadata !9480, metadata !DIExpression()), !dbg !9485
  %4 = bitcast i8* %1 to i32*, !dbg !9486
  %5 = load i32, i32* %4, align 4, !dbg !9486
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !9487
  call void @llvm.dbg.value(metadata i32 %6, metadata !9484, metadata !DIExpression()), !dbg !9485
  %7 = icmp slt i32 %6, 0, !dbg !9488
  br i1 %7, label %22, label %8, !dbg !9490

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9480, metadata !DIExpression()), !dbg !9485
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9491
  %10 = bitcast i8* %9 to i32*, !dbg !9491
  %11 = load i32, i32* %10, align 4, !dbg !9491
  %12 = lshr i32 %11, 16, !dbg !9491
  %13 = and i32 %12, 7, !dbg !9491
  %14 = lshr i32 %11, 8, !dbg !9492
  %15 = and i32 %14, 31, !dbg !9492
  %16 = shl i32 %13, %15, !dbg !9493
  call void @llvm.dbg.value(metadata i32 %16, metadata !9483, metadata !DIExpression()), !dbg !9485
  %17 = and i32 %11, 255, !dbg !9494
  %18 = or i32 %17, 1073887232, !dbg !9495
  %19 = inttoptr i32 %18 to i32*, !dbg !9496
  call void @llvm.dbg.value(metadata i32* %19, metadata !9481, metadata !DIExpression()), !dbg !9485
  %20 = load volatile i32, i32* %19, align 4, !dbg !9497
  call void @llvm.dbg.value(metadata i32 %20, metadata !9482, metadata !DIExpression()), !dbg !9485
  %21 = or i32 %16, %20, !dbg !9498
  call void @llvm.dbg.value(metadata i32 %21, metadata !9482, metadata !DIExpression()), !dbg !9485
  store volatile i32 %21, i32* %19, align 4, !dbg !9499
  br label %22, !dbg !9500

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !9485
  ret i32 %23, !dbg !9501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !9502 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9506, metadata !DIExpression()), !dbg !9508
  call void @llvm.dbg.value(metadata i32 0, metadata !9507, metadata !DIExpression()), !dbg !9508
  %2 = add i32 %0, -1, !dbg !9509
  %3 = icmp ult i32 %2, 6, !dbg !9509
  br i1 %3, label %4, label %7, !dbg !9509

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !9509
  %6 = load i32, i32* %5, align 4, !dbg !9509
  call void @llvm.dbg.value(metadata i32 %6, metadata !9507, metadata !DIExpression()), !dbg !9508
  br label %7, !dbg !9510

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !9508
  ret i32 %8, !dbg !9511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9512 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9516, metadata !DIExpression()), !dbg !9518
  call void @llvm.dbg.value(metadata i32 %1, metadata !9517, metadata !DIExpression()), !dbg !9518
  %3 = udiv i32 %0, %1, !dbg !9519
  ret i32 %3, !dbg !9520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9521 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9525, metadata !DIExpression()), !dbg !9529
  call void @llvm.dbg.value(metadata i32 12, metadata !9526, metadata !DIExpression()), !dbg !9529
  call void @llvm.dbg.value(metadata i32 336, metadata !9527, metadata !DIExpression()), !dbg !9529
  call void @llvm.dbg.value(metadata i32 %1, metadata !9528, metadata !DIExpression()), !dbg !9529
  %3 = mul i32 %0, 336, !dbg !9530
  %4 = mul nsw i32 %1, 12, !dbg !9531
  %5 = udiv i32 %3, %4, !dbg !9532
  ret i32 %5, !dbg !9533
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !9534 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !9536, metadata !DIExpression()), !dbg !9539
  tail call void @config_enable_default_clocks() #25, !dbg !9540
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !9541
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !9541
  %4 = lshr i32 %3, 4, !dbg !9541
  %5 = and i32 %4, 15, !dbg !9541
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !9541
  %7 = load i8, i8* %6, align 1, !dbg !9541
  %8 = zext i8 %7 to i32, !dbg !9541
  %9 = lshr i32 %2, %8, !dbg !9541
  call void @llvm.dbg.value(metadata i32 %9, metadata !9537, metadata !DIExpression()), !dbg !9539
  call void @llvm.dbg.value(metadata !DIArgList(i32 168000000, i8 undef), metadata !9538, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !9539
  %10 = icmp ult i32 %9, 168000000, !dbg !9542
  br i1 %10, label %11, label %13, !dbg !9544

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #25, !dbg !9545
  br label %13, !dbg !9547

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !9548
  tail call fastcc void @set_up_plls() #24, !dbg !9549
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9550
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !9553
  br label %14, !dbg !9554

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9555
  %16 = icmp eq i32 %15, 8, !dbg !9556
  br i1 %16, label %17, label %14, !dbg !9554, !llvm.loop !9557

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 167999999, !dbg !9559
  br i1 %18, label %19, label %21, !dbg !9561

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #25, !dbg !9562
  br label %21, !dbg !9564

21:                                               ; preds = %19, %17
  store i32 168000000, i32* @SystemCoreClock, align 4, !dbg !9565
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !9566
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !9567
  ret i32 0, !dbg !9568
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #15 !dbg !9569 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9571
  %2 = and i32 %1, 240, !dbg !9571
  ret i32 %2, !dbg !9572
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #14 !dbg !9573 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !9574
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !9579
  br label %1, !dbg !9580

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !9581
  %3 = icmp eq i32 %2, 1, !dbg !9582
  br i1 %3, label %4, label %1, !dbg !9580, !llvm.loop !9583

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !9585
  br label %5, !dbg !9588

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !9589
  %7 = icmp eq i32 %6, 1, !dbg !9590
  br i1 %7, label %8, label %5, !dbg !9588, !llvm.loop !9591

8:                                                ; preds = %5
  ret void, !dbg !9593
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !9594 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9595
  %2 = icmp eq i32 %1, 8, !dbg !9597
  br i1 %2, label %3, label %4, !dbg !9598

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9599
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !9601
  br label %4, !dbg !9602

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !9603
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9604
  %6 = and i32 %5, -196609, !dbg !9604
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9604
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9605
  %8 = and i32 %7, -251658241, !dbg !9605
  %9 = or i32 %8, 117440512, !dbg !9605
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9605
  tail call void @config_pll_sysclock() #25, !dbg !9606
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !9607
  br label %10, !dbg !9608

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !9609
  %12 = icmp eq i32 %11, 1, !dbg !9610
  br i1 %12, label %13, label %10, !dbg !9608, !llvm.loop !9611

13:                                               ; preds = %10
  ret void, !dbg !9613
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #14 !dbg !9614 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9616, metadata !DIExpression()), !dbg !9617
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9618
  %2 = and i32 %1, -241, !dbg !9618
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9618
  ret void, !dbg !9619
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #14 !dbg !9620 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9622, metadata !DIExpression()), !dbg !9623
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9624
  %3 = and i32 %2, -4, !dbg !9624
  %4 = or i32 %3, %0, !dbg !9624
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9624
  ret void, !dbg !9625
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #15 !dbg !9626 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9627
  %2 = and i32 %1, 12, !dbg !9627
  ret i32 %2, !dbg !9628
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #14 !dbg !9629 {
  call void @llvm.dbg.value(metadata i32 5120, metadata !9631, metadata !DIExpression()), !dbg !9632
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9633
  %2 = and i32 %1, -7169, !dbg !9633
  %3 = or i32 %2, 5120, !dbg !9633
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9633
  ret void, !dbg !9634
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #14 !dbg !9635 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !9637, metadata !DIExpression()), !dbg !9638
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9639
  %2 = and i32 %1, -57345, !dbg !9639
  %3 = or i32 %2, 32768, !dbg !9639
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9639
  ret void, !dbg !9640
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #14 !dbg !9641 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9642
  %2 = icmp eq i32 %1, 1, !dbg !9644
  br i1 %2, label %7, label %3, !dbg !9645

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !9646
  br label %4, !dbg !9648

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9649
  %6 = icmp eq i32 %5, 1, !dbg !9650
  br i1 %6, label %7, label %4, !dbg !9648, !llvm.loop !9651

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !9653
  br label %8, !dbg !9654

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9655
  %10 = icmp eq i32 %9, 0, !dbg !9656
  br i1 %10, label %11, label %8, !dbg !9654, !llvm.loop !9657

11:                                               ; preds = %8
  ret void, !dbg !9659
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #14 !dbg !9660 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9661
  %2 = and i32 %1, -16777217, !dbg !9661
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9661
  ret void, !dbg !9662
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #14 !dbg !9663 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9664
  %2 = or i32 %1, 16777216, !dbg !9664
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9664
  ret void, !dbg !9665
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #15 !dbg !9666 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9667
  %2 = lshr i32 %1, 25, !dbg !9668
  %3 = and i32 %2, 1, !dbg !9668
  ret i32 %3, !dbg !9669
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #15 !dbg !9670 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9671
  %2 = lshr i32 %1, 1, !dbg !9672
  %3 = and i32 %2, 1, !dbg !9672
  ret i32 %3, !dbg !9673
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #14 !dbg !9674 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9675
  %2 = or i32 %1, 1, !dbg !9675
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9675
  ret void, !dbg !9676
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #14 !dbg !9677 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9678
  %2 = and i32 %1, -262145, !dbg !9678
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9678
  ret void, !dbg !9679
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #14 !dbg !9680 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9681
  %2 = or i32 %1, 65536, !dbg !9681
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9681
  ret void, !dbg !9682
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #15 !dbg !9683 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9684
  %2 = lshr i32 %1, 17, !dbg !9685
  %3 = and i32 %2, 1, !dbg !9685
  ret i32 %3, !dbg !9686
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #14 !dbg !9687 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9688
  %2 = or i32 %1, 1, !dbg !9688
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9688
  ret void, !dbg !9689
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #15 !dbg !9690 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9691
  %2 = lshr i32 %1, 1, !dbg !9692
  %3 = and i32 %2, 1, !dbg !9692
  ret i32 %3, !dbg !9693
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !9694 {
  ret i32 12000000, !dbg !9696
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #14 !dbg !9700 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !9701
  ret void, !dbg !9702
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #14 !dbg !9703 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !9707, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.value(metadata i32 12, metadata !9708, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.value(metadata i32 336, metadata !9709, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.value(metadata i32 0, metadata !9710, metadata !DIExpression()), !dbg !9711
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9712
  %2 = and i32 %1, -4227072, !dbg !9712
  %3 = or i32 %2, 4215820, !dbg !9712
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9712
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9713
  %5 = and i32 %4, -196609, !dbg !9713
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9713
  ret void, !dbg !9714
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !9715 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !9716
  ret void, !dbg !9717
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !9718 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !9721, metadata !DIExpression()), !dbg !9723
  %2 = bitcast i32* %1 to i8*, !dbg !9724
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !9724
  call void @llvm.dbg.declare(metadata i32* %1, metadata !9722, metadata !DIExpression()), !dbg !9725
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9726
  %4 = or i32 %3, 268435456, !dbg !9726
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9726
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9727
  %6 = and i32 %5, 268435456, !dbg !9727
  store volatile i32 %6, i32* %1, align 4, !dbg !9728
  %7 = load volatile i32, i32* %1, align 4, !dbg !9729
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !9730
  ret void, !dbg !9730
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9731 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9733, metadata !DIExpression()), !dbg !9734
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !9735
  br i1 %2, label %3, label %4, !dbg !9737

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !9738
  br label %4, !dbg !9739

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9734
  ret i32 %5, !dbg !9740
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !9741 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9746, metadata !DIExpression()), !dbg !9747
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9748, !srcloc !9750
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !9751
  ret i1 %1, !dbg !9752
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9753 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9754
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9755
  ret void, !dbg !9756
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9757 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9759, metadata !DIExpression()), !dbg !9760
  %2 = icmp eq i32 %0, 10, !dbg !9761
  br i1 %2, label %3, label %4, !dbg !9763

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !9764
  br label %4, !dbg !9766

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !9767
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !9768
  ret i32 %0, !dbg !9769
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9770 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9773, metadata !DIExpression()), !dbg !9775
  call void @llvm.dbg.value(metadata i8 %0, metadata !9774, metadata !DIExpression()), !dbg !9775
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9776, !srcloc !9778
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !9779
  ret void, !dbg !9780
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9781 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9783, metadata !DIExpression()), !dbg !9786
  call void @llvm.dbg.value(metadata i8 %0, metadata !9784, metadata !DIExpression()), !dbg !9786
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9787
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9785, metadata !DIExpression()), !dbg !9786
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9788
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9788
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #25, !dbg !9789
  ret void, !dbg !9790
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !9791 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9793, metadata !DIExpression()), !dbg !9794
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9795
  ret i1 %1, !dbg !9796
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !9797 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9846, metadata !DIExpression()), !dbg !9849
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9847, metadata !DIExpression()), !dbg !9849
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9848, metadata !DIExpression()), !dbg !9849
  ret void, !dbg !9850
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9851 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9853, metadata !DIExpression()), !dbg !9858
  call void @llvm.dbg.value(metadata i8 %1, metadata !9854, metadata !DIExpression()), !dbg !9858
  call void @llvm.dbg.value(metadata i32 %2, metadata !9855, metadata !DIExpression()), !dbg !9858
  %5 = bitcast i32* %4 to i8*, !dbg !9859
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9859
  call void @llvm.dbg.value(metadata i32* %4, metadata !9857, metadata !DIExpression(DW_OP_deref)), !dbg !9858
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !9860
  call void @llvm.dbg.value(metadata i32 %6, metadata !9856, metadata !DIExpression()), !dbg !9858
  %7 = icmp eq i32 %6, 0, !dbg !9861
  br i1 %7, label %8, label %31, !dbg !9863

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9856, metadata !DIExpression()), !dbg !9858
  %9 = and i32 %2, 131072, !dbg !9864
  %10 = icmp eq i32 %9, 0, !dbg !9866
  br i1 %10, label %28, label %11, !dbg !9867

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9868
  %13 = icmp eq i32 %12, 0, !dbg !9871
  br i1 %13, label %18, label %14, !dbg !9872

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9873
  %16 = shl nuw i32 1, %15, !dbg !9873
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !9875
  br label %25, !dbg !9876

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9877
  %20 = icmp eq i32 %19, 0, !dbg !9879
  %21 = zext i8 %1 to i32, !dbg !9858
  br i1 %20, label %25, label %22, !dbg !9880

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9881
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !9883
  br label %25, !dbg !9884

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9885
  %27 = load i32, i32* %4, align 4, !dbg !9886
  call void @llvm.dbg.value(metadata i32 %30, metadata !9857, metadata !DIExpression()), !dbg !9858
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !9887
  br label %31, !dbg !9888

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9885
  %30 = load i32, i32* %4, align 4, !dbg !9886
  call void @llvm.dbg.value(metadata i32 %30, metadata !9857, metadata !DIExpression()), !dbg !9858
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !9887
  call void @llvm.dbg.value(metadata i32 0, metadata !9856, metadata !DIExpression()), !dbg !9858
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9889
  ret i32 %6, !dbg !9889
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !9890 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9894, metadata !DIExpression()), !dbg !9899
  call void @llvm.dbg.value(metadata i32* %1, metadata !9895, metadata !DIExpression()), !dbg !9899
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9900
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9900
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9900
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9896, metadata !DIExpression()), !dbg !9899
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9901
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9901
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9901
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9898, metadata !DIExpression()), !dbg !9899
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !9902
  store i32 %9, i32* %1, align 4, !dbg !9903
  ret i32 0, !dbg !9904
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !9905 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9907, metadata !DIExpression()), !dbg !9913
  call void @llvm.dbg.value(metadata i32 %1, metadata !9908, metadata !DIExpression()), !dbg !9913
  call void @llvm.dbg.value(metadata i32 %2, metadata !9909, metadata !DIExpression()), !dbg !9913
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9914
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9914
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9914
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9910, metadata !DIExpression()), !dbg !9913
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9915
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9915
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9915
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9911, metadata !DIExpression()), !dbg !9913
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !9916
  call void @llvm.dbg.value(metadata i32 %10, metadata !9912, metadata !DIExpression()), !dbg !9913
  %11 = xor i32 %1, -1, !dbg !9917
  %12 = and i32 %10, %11, !dbg !9918
  %13 = and i32 %2, %1, !dbg !9919
  %14 = or i32 %12, %13, !dbg !9920
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !9921
  ret i32 0, !dbg !9922
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9923 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9925, metadata !DIExpression()), !dbg !9929
  call void @llvm.dbg.value(metadata i32 %1, metadata !9926, metadata !DIExpression()), !dbg !9929
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9930
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9930
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9930
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9927, metadata !DIExpression()), !dbg !9929
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9931
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9931
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9931
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9928, metadata !DIExpression()), !dbg !9929
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9932
  store volatile i32 %1, i32* %9, align 4, !dbg !9932
  ret i32 0, !dbg !9933
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9934 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9936, metadata !DIExpression()), !dbg !9940
  call void @llvm.dbg.value(metadata i32 %1, metadata !9937, metadata !DIExpression()), !dbg !9940
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9941
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9941
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9941
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9938, metadata !DIExpression()), !dbg !9940
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9942
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9942
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9942
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9939, metadata !DIExpression()), !dbg !9940
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !9943
  ret i32 0, !dbg !9944
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9945 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9947, metadata !DIExpression()), !dbg !9951
  call void @llvm.dbg.value(metadata i32 %1, metadata !9948, metadata !DIExpression()), !dbg !9951
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9952
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9952
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9952
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9949, metadata !DIExpression()), !dbg !9951
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9953
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9953
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9953
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9950, metadata !DIExpression()), !dbg !9951
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9954
  %10 = load volatile i32, i32* %9, align 4, !dbg !9954
  %11 = xor i32 %10, %1, !dbg !9954
  store volatile i32 %11, i32* %9, align 4, !dbg !9954
  ret i32 0, !dbg !9955
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9956 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9958, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i8 %1, metadata !9959, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i32 %2, metadata !9960, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i32 %3, metadata !9961, metadata !DIExpression()), !dbg !9968
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9969
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9969
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9969
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9962, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i8* undef, metadata !9963, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i32 0, metadata !9965, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i32 0, metadata !9966, metadata !DIExpression()), !dbg !9968
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9970

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9971
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !9975
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9976
  %12 = load i32, i32* %11, align 4, !dbg !9976
  %13 = icmp eq i32 %10, %12, !dbg !9977
  br i1 %13, label %14, label %29, !dbg !9978

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9979
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9981
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9982
  br label %29, !dbg !9983

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9984
  %17 = load i8*, i8** %16, align 4, !dbg !9984
  call void @llvm.dbg.value(metadata i8* %17, metadata !9963, metadata !DIExpression()), !dbg !9968
  %18 = zext i8 %1 to i32, !dbg !9985
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9987
  %20 = icmp eq i32 %19, 0, !dbg !9988
  br i1 %20, label %21, label %29, !dbg !9989

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9990
  %23 = load i32, i32* %22, align 4, !dbg !9990
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !9991
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9992

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9965, metadata !DIExpression()), !dbg !9968
  br label %27, !dbg !9993

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9965, metadata !DIExpression()), !dbg !9968
  br label %27, !dbg !9995

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9965, metadata !DIExpression()), !dbg !9968
  br label %27, !dbg !9996

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9968
  call void @llvm.dbg.value(metadata i32 %28, metadata !9965, metadata !DIExpression()), !dbg !9968
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9997
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9998
  br label %29, !dbg !9998

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9968
  call void @llvm.dbg.value(metadata i32 %30, metadata !9966, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.label(metadata !9967), !dbg !9999
  ret i32 %30, !dbg !10000
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !10001 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10003, metadata !DIExpression()), !dbg !10007
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10004, metadata !DIExpression()), !dbg !10007
  call void @llvm.dbg.value(metadata i1 %2, metadata !10005, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10007
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10008
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10008
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10008
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10006, metadata !DIExpression()), !dbg !10007
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10009
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !10010
  ret i32 %8, !dbg !10011
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !10012 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10018, metadata !DIExpression()), !dbg !10021
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10019, metadata !DIExpression()), !dbg !10021
  call void @llvm.dbg.value(metadata i1 %2, metadata !10020, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10021
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !10022
  br i1 %4, label %5, label %6, !dbg !10025

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.142, i32 0, i32 0), i32 noundef 42) #25, !dbg !10026
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36.143, i32 0, i32 0)) #25, !dbg !10026
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.142, i32 0, i32 0), i32 noundef 42) #25, !dbg !10026
  unreachable, !dbg !10026

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !10028
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !10028
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !10028
  br i1 %9, label %10, label %11, !dbg !10031

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.37.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.142, i32 0, i32 0), i32 noundef 43) #25, !dbg !10032
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34.145, i32 0, i32 0)) #25, !dbg !10032
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.142, i32 0, i32 0), i32 noundef 43) #25, !dbg !10032
  unreachable, !dbg !10032

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !10034
  br i1 %12, label %18, label %13, !dbg !10036

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10037
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !10040
  %16 = or i1 %15, %2, !dbg !10041
  %17 = select i1 %16, i32 0, i32 -22, !dbg !10041
  br i1 %2, label %19, label %21, !dbg !10041

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !10042

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10043
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !10046
  br label %21, !dbg !10047

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !10021
  ret i32 %22, !dbg !10048
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10049 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10053, metadata !DIExpression()), !dbg !10054
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10055
  %3 = icmp eq %struct._snode* %2, null, !dbg !10055
  ret i1 %3, !dbg !10055
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !10056 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10060, metadata !DIExpression()), !dbg !10064
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10061, metadata !DIExpression()), !dbg !10064
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10062, metadata !DIExpression()), !dbg !10064
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10065
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10063, metadata !DIExpression()), !dbg !10064
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10062, metadata !DIExpression()), !dbg !10064
  %4 = icmp eq %struct._snode* %3, null, !dbg !10067
  br i1 %4, label %15, label %5, !dbg !10065

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10063, metadata !DIExpression()), !dbg !10064
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10062, metadata !DIExpression()), !dbg !10064
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10069
  br i1 %6, label %9, label %11, !dbg !10072

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10063, metadata !DIExpression()), !dbg !10064
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10062, metadata !DIExpression()), !dbg !10064
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10069
  br i1 %8, label %9, label %11, !dbg !10072, !llvm.loop !10073

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !10074
  br label %15, !dbg !10074

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10063, metadata !DIExpression()), !dbg !10064
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10062, metadata !DIExpression()), !dbg !10064
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !10067
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10063, metadata !DIExpression()), !dbg !10064
  %14 = icmp eq %struct._snode* %13, null, !dbg !10067
  br i1 %14, label %15, label %7, !dbg !10065, !llvm.loop !10073

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10077 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10081, metadata !DIExpression()), !dbg !10083
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10082, metadata !DIExpression()), !dbg !10083
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10084
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !10084
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !10084
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10085
  %5 = icmp eq %struct._snode* %4, null, !dbg !10085
  br i1 %5, label %6, label %8, !dbg !10084

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10087
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !10087
  br label %8, !dbg !10087

8:                                                ; preds = %6, %2
  ret void, !dbg !10084
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10089 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10093, metadata !DIExpression()), !dbg !10094
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10095
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10095
  ret %struct._snode* %3, !dbg !10096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10097 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10101, metadata !DIExpression()), !dbg !10103
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10102, metadata !DIExpression()), !dbg !10103
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10104
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10105
  ret void, !dbg !10106
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10107 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10109, metadata !DIExpression()), !dbg !10111
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10110, metadata !DIExpression()), !dbg !10111
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10112
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10113
  ret void, !dbg !10114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10115 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10117, metadata !DIExpression()), !dbg !10118
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10119
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10119
  ret %struct._snode* %3, !dbg !10120
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10121 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10123, metadata !DIExpression()), !dbg !10125
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10124, metadata !DIExpression()), !dbg !10125
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10126
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10127
  ret void, !dbg !10128
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !10129 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10133, metadata !DIExpression()), !dbg !10136
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10134, metadata !DIExpression()), !dbg !10136
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10135, metadata !DIExpression()), !dbg !10136
  %4 = icmp eq %struct._snode* %1, null, !dbg !10137
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !10139
  br i1 %4, label %6, label %11, !dbg !10140

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !10141
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10143
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10143
  br i1 %8, label %9, label %15, !dbg !10141

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10145
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !10145
  br label %15, !dbg !10145

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !10147
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10149
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10149
  br i1 %13, label %14, label %15, !dbg !10147

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !10151
  br label %15, !dbg !10151

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !10140
  ret void, !dbg !10140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !10153 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10157, metadata !DIExpression()), !dbg !10158
  %2 = icmp eq %struct._snode* %0, null, !dbg !10159
  br i1 %2, label %5, label %3, !dbg !10159

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !10159
  br label %5, !dbg !10159

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10159
  ret %struct._snode* %6, !dbg !10159
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10160 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10162, metadata !DIExpression()), !dbg !10163
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !10164
  ret %struct._snode* %2, !dbg !10164
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10165 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10167, metadata !DIExpression()), !dbg !10168
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10169
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10169
  ret %struct._snode* %3, !dbg !10170
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10171 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10173, metadata !DIExpression()), !dbg !10176
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !10177, !range !10178
  call void @llvm.dbg.value(metadata i32 %2, metadata !10174, metadata !DIExpression()), !dbg !10176
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !10179
  call void @llvm.dbg.value(metadata i32 %3, metadata !10175, metadata !DIExpression()), !dbg !10176
  ret i32 %3, !dbg !10180
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10181 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10183, metadata !DIExpression()), !dbg !10186
  call void @llvm.dbg.value(metadata i8* %1, metadata !10184, metadata !DIExpression()), !dbg !10186
  call void @llvm.dbg.value(metadata i8* %1, metadata !10185, metadata !DIExpression()), !dbg !10186
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10187
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10187
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10188
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10188
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10188
  %8 = shl nuw i32 1, %0, !dbg !10189
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !10190
  ret void, !dbg !10191
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10192 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10196, metadata !DIExpression()), !dbg !10202
  call void @llvm.dbg.value(metadata i32 %1, metadata !10197, metadata !DIExpression()), !dbg !10202
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10198, metadata !DIExpression()), !dbg !10202
  %4 = bitcast i64* %3 to i8*, !dbg !10203
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10203
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10200, metadata !DIExpression()), !dbg !10202
  store i64 70368744177732, i64* %3, align 8, !dbg !10204
  call void @llvm.dbg.value(metadata i64* %3, metadata !10200, metadata !DIExpression(DW_OP_deref)), !dbg !10202
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !10205
  call void @llvm.dbg.value(metadata i32 %5, metadata !10201, metadata !DIExpression()), !dbg !10202
  %6 = icmp eq i32 %5, 0, !dbg !10206
  br i1 %6, label %7, label %8, !dbg !10208

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !10209
  br label %8, !dbg !10210

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10211
  ret void, !dbg !10211
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10212 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10214, metadata !DIExpression()), !dbg !10217
  call void @llvm.dbg.value(metadata i8* %0, metadata !10215, metadata !DIExpression()), !dbg !10217
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10218
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10216, metadata !DIExpression()), !dbg !10217
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10219
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10219
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #25, !dbg !10220
  ret i32 %5, !dbg !10221
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10222 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10224, metadata !DIExpression()), !dbg !10227
  call void @llvm.dbg.value(metadata i32 %1, metadata !10225, metadata !DIExpression()), !dbg !10227
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !10228
  call void @llvm.dbg.value(metadata i32 %3, metadata !10226, metadata !DIExpression()), !dbg !10227
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !10229
  ret void, !dbg !10230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !10231 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10235, metadata !DIExpression()), !dbg !10236
  %2 = sdiv i32 %0, 4, !dbg !10237
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10238
  %6 = add nsw i32 %5, 16, !dbg !10239
  %7 = shl i32 15, %6, !dbg !10240
  %8 = or i32 %7, %2, !dbg !10241
  ret i32 %8, !dbg !10242
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10243 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10247, metadata !DIExpression()), !dbg !10249
  call void @llvm.dbg.value(metadata i32 %1, metadata !10248, metadata !DIExpression()), !dbg !10249
  %3 = and i32 %1, 255, !dbg !10250
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10250
  %5 = load volatile i32, i32* %4, align 4, !dbg !10250
  %6 = lshr i32 %1, 16, !dbg !10250
  %7 = xor i32 %6, -1, !dbg !10250
  %8 = and i32 %5, %7, !dbg !10250
  call void @llvm.dbg.value(metadata i32 %6, metadata !10251, metadata !DIExpression()) #23, !dbg !10255
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10257, !srcloc !10258
  call void @llvm.dbg.value(metadata i32 %9, metadata !10254, metadata !DIExpression()) #23, !dbg !10255
  call void @llvm.dbg.value(metadata i32 %9, metadata !10259, metadata !DIExpression()) #23, !dbg !10264
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !10266, !range !7453
  %11 = shl i32 %0, %10, !dbg !10250
  %12 = or i32 %11, %8, !dbg !10250
  store volatile i32 %12, i32* %4, align 4, !dbg !10250
  ret void, !dbg !10267
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10268 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10272, metadata !DIExpression()), !dbg !10277
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10273, metadata !DIExpression()), !dbg !10277
  call void @llvm.dbg.value(metadata i32 %2, metadata !10274, metadata !DIExpression()), !dbg !10277
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10278
  %5 = icmp eq %struct._snode* %4, null, !dbg !10278
  br i1 %5, label %24, label %6, !dbg !10278

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !10280
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10276, metadata !DIExpression()), !dbg !10277
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !10275, metadata !DIExpression()), !dbg !10277
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10281
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !10281
  %12 = load i32, i32* %11, align 4, !dbg !10281
  %13 = and i32 %12, %2, !dbg !10285
  %14 = icmp eq i32 %13, 0, !dbg !10285
  br i1 %14, label %22, label %15, !dbg !10286

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10287
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10287
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10287
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !10287
  br i1 %19, label %20, label %21, !dbg !10291

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.142, i32 0, i32 0), i32 noundef 77) #25, !dbg !10292
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34.145, i32 0, i32 0)) #25, !dbg !10292
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.142, i32 0, i32 0), i32 noundef 77) #25, !dbg !10292
  unreachable, !dbg !10292

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #25, !dbg !10294
  br label %22, !dbg !10295

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10275, metadata !DIExpression()), !dbg !10277
  %23 = icmp eq %struct._snode* %8, null, !dbg !10296
  br i1 %23, label %24, label %6, !dbg !10296

24:                                               ; preds = %22, %3
  ret void, !dbg !10297
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10300, metadata !DIExpression()), !dbg !10301
  %2 = and i32 %0, 255, !dbg !10302
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10302
  %4 = load volatile i32, i32* %3, align 4, !dbg !10302
  %5 = lshr i32 %0, 16, !dbg !10302
  %6 = and i32 %4, %5, !dbg !10302
  call void @llvm.dbg.value(metadata i32 %5, metadata !10251, metadata !DIExpression()) #23, !dbg !10303
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !10305, !srcloc !10258
  call void @llvm.dbg.value(metadata i32 %7, metadata !10254, metadata !DIExpression()) #23, !dbg !10303
  call void @llvm.dbg.value(metadata i32 %7, metadata !10259, metadata !DIExpression()) #23, !dbg !10306
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10308, !range !7453
  %9 = lshr i32 %6, %8, !dbg !10309
  ret i32 %9, !dbg !10310
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10311 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10316, metadata !DIExpression()), !dbg !10318
  call void @llvm.dbg.value(metadata i32 %1, metadata !10317, metadata !DIExpression()), !dbg !10318
  %3 = shl i32 %1, 16, !dbg !10319
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10319
  store volatile i32 %3, i32* %4, align 4, !dbg !10319
  ret void, !dbg !10320
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !10321 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10325, metadata !DIExpression()), !dbg !10326
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10327
  %3 = load volatile i32, i32* %2, align 4, !dbg !10327
  ret i32 %3, !dbg !10328
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10329 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10331, metadata !DIExpression()), !dbg !10333
  call void @llvm.dbg.value(metadata i32 %1, metadata !10332, metadata !DIExpression()), !dbg !10333
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10334
  store volatile i32 %1, i32* %3, align 4, !dbg !10334
  ret void, !dbg !10335
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !10336 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10338, metadata !DIExpression()), !dbg !10339
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10340
  %3 = load volatile i32, i32* %2, align 4, !dbg !10340
  ret i32 %3, !dbg !10341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !10342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10346, metadata !DIExpression()), !dbg !10348
  call void @llvm.dbg.value(metadata i32* %1, metadata !10347, metadata !DIExpression()), !dbg !10348
  %3 = and i32 %0, 131072, !dbg !10349
  %4 = icmp eq i32 %3, 0, !dbg !10351
  br i1 %4, label %22, label %5, !dbg !10352

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10353
  %6 = and i32 %0, 2, !dbg !10355
  %7 = icmp eq i32 %6, 0, !dbg !10357
  br i1 %7, label %11, label %8, !dbg !10358

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10359
  %10 = icmp eq i32 %9, 0, !dbg !10359
  br i1 %10, label %33, label %11, !dbg !10362

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10363
  store i32 %12, i32* %1, align 4, !dbg !10363
  %13 = and i32 %0, 16, !dbg !10364
  %14 = icmp eq i32 %13, 0, !dbg !10366
  br i1 %14, label %17, label %15, !dbg !10367

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10368
  br label %31, !dbg !10370

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10371
  %19 = icmp eq i32 %18, 0, !dbg !10373
  br i1 %19, label %33, label %20, !dbg !10374

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10375
  br label %31, !dbg !10377

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10378
  %24 = icmp eq i32 %23, 0, !dbg !10380
  br i1 %24, label %31, label %25, !dbg !10381

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10382
  %27 = icmp eq i32 %26, 0, !dbg !10385
  br i1 %27, label %28, label %31, !dbg !10386

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10387
  br label %33, !dbg !10388

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10348
  ret i32 %34, !dbg !10388
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10389 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10393, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata i32 %1, metadata !10394, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata i32 %2, metadata !10395, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata i32 %3, metadata !10396, metadata !DIExpression()), !dbg !10404
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10405
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10405
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10405
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10397, metadata !DIExpression()), !dbg !10404
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10406
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10406
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10406
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10398, metadata !DIExpression()), !dbg !10404
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !10407
  call void @llvm.dbg.value(metadata i32 %11, metadata !10399, metadata !DIExpression()), !dbg !10404
  %12 = and i32 %2, 48, !dbg !10408
  call void @llvm.dbg.value(metadata i32 %12, metadata !10400, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata i32 %2, metadata !10401, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10404
  call void @llvm.dbg.value(metadata i32 %2, metadata !10402, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10404
  call void @llvm.dbg.value(metadata i32 %2, metadata !10403, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10404
  %13 = lshr i32 %2, 6, !dbg !10409
  %14 = and i32 %13, 1, !dbg !10409
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !10410
  %15 = lshr i32 %2, 7, !dbg !10411
  %16 = and i32 %15, 3, !dbg !10411
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !10412
  %17 = lshr i32 %2, 9, !dbg !10413
  %18 = and i32 %17, 3, !dbg !10413
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !10414
  %19 = icmp eq i32 %12, 32, !dbg !10415
  br i1 %19, label %20, label %24, !dbg !10417

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10418
  br i1 %21, label %22, label %23, !dbg !10421

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10422
  br label %24, !dbg !10424

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10425
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10427
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !10428
  ret void, !dbg !10429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !10430 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10432, metadata !DIExpression()), !dbg !10434
  %2 = shl nuw i32 1, %0, !dbg !10435
  call void @llvm.dbg.value(metadata i32 %2, metadata !10433, metadata !DIExpression()), !dbg !10434
  ret i32 %2, !dbg !10436
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10437 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10441, metadata !DIExpression()), !dbg !10444
  call void @llvm.dbg.value(metadata i32 %1, metadata !10442, metadata !DIExpression()), !dbg !10444
  call void @llvm.dbg.value(metadata i32 %2, metadata !10443, metadata !DIExpression()), !dbg !10444
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10445
  %5 = load volatile i32, i32* %4, align 4, !dbg !10445
  %6 = xor i32 %1, -1, !dbg !10445
  %7 = and i32 %5, %6, !dbg !10445
  %8 = mul i32 %2, %1, !dbg !10445
  %9 = or i32 %7, %8, !dbg !10445
  store volatile i32 %9, i32* %4, align 4, !dbg !10445
  ret void, !dbg !10446
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10447 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10449, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata i32 %1, metadata !10450, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata i32 %2, metadata !10451, metadata !DIExpression()), !dbg !10452
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10453
  %5 = load volatile i32, i32* %4, align 4, !dbg !10453
  call void @llvm.dbg.value(metadata i32 %1, metadata !10251, metadata !DIExpression()) #23, !dbg !10454
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10456, !srcloc !10258
  call void @llvm.dbg.value(metadata i32 %6, metadata !10254, metadata !DIExpression()) #23, !dbg !10454
  call void @llvm.dbg.value(metadata i32 %6, metadata !10259, metadata !DIExpression()) #23, !dbg !10457
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10459, !range !7453
  %8 = shl nuw nsw i32 %7, 1, !dbg !10453
  %9 = shl i32 3, %8, !dbg !10453
  %10 = xor i32 %9, -1, !dbg !10453
  %11 = and i32 %5, %10, !dbg !10453
  call void @llvm.dbg.value(metadata i32 %1, metadata !10251, metadata !DIExpression()) #23, !dbg !10460
  call void @llvm.dbg.value(metadata i32 %6, metadata !10254, metadata !DIExpression()) #23, !dbg !10460
  call void @llvm.dbg.value(metadata i32 %6, metadata !10259, metadata !DIExpression()) #23, !dbg !10462
  %12 = shl i32 %2, %8, !dbg !10453
  %13 = or i32 %11, %12, !dbg !10453
  store volatile i32 %13, i32* %4, align 4, !dbg !10453
  ret void, !dbg !10464
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10465 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10467, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i32 %1, metadata !10468, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i32 %2, metadata !10469, metadata !DIExpression()), !dbg !10470
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10471
  %5 = load volatile i32, i32* %4, align 4, !dbg !10471
  call void @llvm.dbg.value(metadata i32 %1, metadata !10251, metadata !DIExpression()) #23, !dbg !10472
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10474, !srcloc !10258
  call void @llvm.dbg.value(metadata i32 %6, metadata !10254, metadata !DIExpression()) #23, !dbg !10472
  call void @llvm.dbg.value(metadata i32 %6, metadata !10259, metadata !DIExpression()) #23, !dbg !10475
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10477, !range !7453
  %8 = shl nuw nsw i32 %7, 1, !dbg !10471
  %9 = shl i32 3, %8, !dbg !10471
  %10 = xor i32 %9, -1, !dbg !10471
  %11 = and i32 %5, %10, !dbg !10471
  call void @llvm.dbg.value(metadata i32 %1, metadata !10251, metadata !DIExpression()) #23, !dbg !10478
  call void @llvm.dbg.value(metadata i32 %6, metadata !10254, metadata !DIExpression()) #23, !dbg !10478
  call void @llvm.dbg.value(metadata i32 %6, metadata !10259, metadata !DIExpression()) #23, !dbg !10480
  %12 = shl i32 %2, %8, !dbg !10471
  %13 = or i32 %11, %12, !dbg !10471
  store volatile i32 %13, i32* %4, align 4, !dbg !10471
  ret void, !dbg !10482
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10483 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10485, metadata !DIExpression()), !dbg !10488
  call void @llvm.dbg.value(metadata i32 %1, metadata !10486, metadata !DIExpression()), !dbg !10488
  call void @llvm.dbg.value(metadata i32 %2, metadata !10487, metadata !DIExpression()), !dbg !10488
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10489
  %5 = load volatile i32, i32* %4, align 4, !dbg !10489
  call void @llvm.dbg.value(metadata i32 %1, metadata !10251, metadata !DIExpression()) #23, !dbg !10490
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10492, !srcloc !10258
  call void @llvm.dbg.value(metadata i32 %6, metadata !10254, metadata !DIExpression()) #23, !dbg !10490
  call void @llvm.dbg.value(metadata i32 %6, metadata !10259, metadata !DIExpression()) #23, !dbg !10493
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10495, !range !7453
  %8 = shl nuw nsw i32 %7, 2, !dbg !10489
  %9 = shl i32 15, %8, !dbg !10489
  %10 = xor i32 %9, -1, !dbg !10489
  %11 = and i32 %5, %10, !dbg !10489
  call void @llvm.dbg.value(metadata i32 %1, metadata !10251, metadata !DIExpression()) #23, !dbg !10496
  call void @llvm.dbg.value(metadata i32 %6, metadata !10254, metadata !DIExpression()) #23, !dbg !10496
  call void @llvm.dbg.value(metadata i32 %6, metadata !10259, metadata !DIExpression()) #23, !dbg !10498
  %12 = shl i32 %2, %8, !dbg !10489
  %13 = or i32 %11, %12, !dbg !10489
  store volatile i32 %13, i32* %4, align 4, !dbg !10489
  ret void, !dbg !10500
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10501 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10503, metadata !DIExpression()), !dbg !10506
  call void @llvm.dbg.value(metadata i32 %1, metadata !10504, metadata !DIExpression()), !dbg !10506
  call void @llvm.dbg.value(metadata i32 %2, metadata !10505, metadata !DIExpression()), !dbg !10506
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10507
  %5 = load volatile i32, i32* %4, align 4, !dbg !10507
  %6 = lshr i32 %1, 8, !dbg !10507
  call void @llvm.dbg.value(metadata i32 %6, metadata !10251, metadata !DIExpression()) #23, !dbg !10508
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10510, !srcloc !10258
  call void @llvm.dbg.value(metadata i32 %7, metadata !10254, metadata !DIExpression()) #23, !dbg !10508
  call void @llvm.dbg.value(metadata i32 %7, metadata !10259, metadata !DIExpression()) #23, !dbg !10511
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10513, !range !7453
  %9 = shl nuw nsw i32 %8, 2, !dbg !10507
  %10 = shl i32 15, %9, !dbg !10507
  %11 = xor i32 %10, -1, !dbg !10507
  %12 = and i32 %5, %11, !dbg !10507
  call void @llvm.dbg.value(metadata i32 %6, metadata !10251, metadata !DIExpression()) #23, !dbg !10514
  call void @llvm.dbg.value(metadata i32 %7, metadata !10254, metadata !DIExpression()) #23, !dbg !10514
  call void @llvm.dbg.value(metadata i32 %7, metadata !10259, metadata !DIExpression()) #23, !dbg !10516
  %13 = shl i32 %2, %9, !dbg !10507
  %14 = or i32 %12, %13, !dbg !10507
  store volatile i32 %14, i32* %4, align 4, !dbg !10507
  ret void, !dbg !10518
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10519 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10521, metadata !DIExpression()), !dbg !10524
  call void @llvm.dbg.value(metadata i32 %1, metadata !10522, metadata !DIExpression()), !dbg !10524
  call void @llvm.dbg.value(metadata i32 %2, metadata !10523, metadata !DIExpression()), !dbg !10524
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10525
  %5 = load volatile i32, i32* %4, align 4, !dbg !10525
  call void @llvm.dbg.value(metadata i32 %1, metadata !10251, metadata !DIExpression()) #23, !dbg !10526
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10528, !srcloc !10258
  call void @llvm.dbg.value(metadata i32 %6, metadata !10254, metadata !DIExpression()) #23, !dbg !10526
  call void @llvm.dbg.value(metadata i32 %6, metadata !10259, metadata !DIExpression()) #23, !dbg !10529
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10531, !range !7453
  %8 = shl nuw nsw i32 %7, 1, !dbg !10525
  %9 = shl i32 3, %8, !dbg !10525
  %10 = xor i32 %9, -1, !dbg !10525
  %11 = and i32 %5, %10, !dbg !10525
  call void @llvm.dbg.value(metadata i32 %1, metadata !10251, metadata !DIExpression()) #23, !dbg !10532
  call void @llvm.dbg.value(metadata i32 %6, metadata !10254, metadata !DIExpression()) #23, !dbg !10532
  call void @llvm.dbg.value(metadata i32 %6, metadata !10259, metadata !DIExpression()) #23, !dbg !10534
  %12 = shl i32 %2, %8, !dbg !10525
  %13 = or i32 %11, %12, !dbg !10525
  store volatile i32 %13, i32* %4, align 4, !dbg !10525
  ret void, !dbg !10536
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10537 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10539, metadata !DIExpression()), !dbg !10542
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10543
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10543
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10543
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10540, metadata !DIExpression()), !dbg !10542
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10544
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10545
  %6 = tail call fastcc zeroext i1 @device_is_ready.156() #24, !dbg !10546
  br i1 %6, label %7, label %11, !dbg !10548

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !10549
  call void @llvm.dbg.value(metadata i32 %8, metadata !10541, metadata !DIExpression()), !dbg !10542
  %9 = icmp slt i32 %8, 0, !dbg !10550
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10552
  br label %11, !dbg !10552

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10542
  ret i32 %12, !dbg !10553
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.156() unnamed_addr #1 !dbg !10554 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10558, metadata !DIExpression()), !dbg !10559
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10560, !srcloc !10562
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.157() #24, !dbg !10563
  ret i1 %1, !dbg !10564
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !10565 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10569, metadata !DIExpression()), !dbg !10574
  call void @llvm.dbg.value(metadata i8 1, metadata !10570, metadata !DIExpression()), !dbg !10574
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10575
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10575
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10575
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10571, metadata !DIExpression()), !dbg !10574
  call void @llvm.dbg.value(metadata i32 0, metadata !10572, metadata !DIExpression()), !dbg !10574
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10573, metadata !DIExpression()), !dbg !10574
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10576
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10579
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !10580
  call void @llvm.dbg.value(metadata i32 %7, metadata !10572, metadata !DIExpression()), !dbg !10574
  ret i32 %7, !dbg !10581
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.157() unnamed_addr #1 !dbg !10582 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10584, metadata !DIExpression()), !dbg !10585
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #25, !dbg !10586
  ret i1 %1, !dbg !10587
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10588 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10592, metadata !DIExpression()), !dbg !10600
  call void @llvm.dbg.value(metadata i32 %1, metadata !10593, metadata !DIExpression()), !dbg !10600
  call void @llvm.dbg.value(metadata i32 %2, metadata !10594, metadata !DIExpression()), !dbg !10600
  call void @llvm.dbg.value(metadata i32 %3, metadata !10595, metadata !DIExpression()), !dbg !10600
  call void @llvm.dbg.value(metadata i32 0, metadata !10596, metadata !DIExpression()), !dbg !10600
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !10601
  %5 = icmp eq i32 %3, 17, !dbg !10602
  br i1 %5, label %6, label %14, !dbg !10603

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !10604
  call void @llvm.dbg.value(metadata i32 %7, metadata !10597, metadata !DIExpression()), !dbg !10605
  %8 = icmp eq i32 %7, 0, !dbg !10606
  %9 = shl nuw i32 1, %1, !dbg !10608
  br i1 %8, label %12, label %10, !dbg !10609

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !10610
  br label %14, !dbg !10612

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !10613
  br label %14, !dbg !10616

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !10617
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !10618 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10620, metadata !DIExpression()), !dbg !10624
  call void @llvm.dbg.value(metadata i8* %1, metadata !10621, metadata !DIExpression()), !dbg !10624
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10625
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10625
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10625
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10622, metadata !DIExpression()), !dbg !10624
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10626
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10626
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !10628
  %9 = icmp eq i32 %8, 0, !dbg !10628
  br i1 %9, label %12, label %10, !dbg !10629

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10630
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !10632
  br label %12, !dbg !10633

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10634
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !10636
  %15 = icmp eq i32 %14, 0, !dbg !10636
  br i1 %15, label %19, label %16, !dbg !10637

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10638
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !10639
  store i8 %18, i8* %1, align 1, !dbg !10640
  br label %19, !dbg !10641

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !10624
  ret i32 %20, !dbg !10642
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !10643 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10645, metadata !DIExpression()), !dbg !10649
  call void @llvm.dbg.value(metadata i8 %1, metadata !10646, metadata !DIExpression()), !dbg !10649
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10650
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10650
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10650
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10647, metadata !DIExpression()), !dbg !10649
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !10651

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10652
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !10655
  %10 = icmp eq i32 %9, 0, !dbg !10655
  br i1 %10, label %18, label %11, !dbg !10656

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10657, !srcloc !10664
  call void @llvm.dbg.value(metadata i32 undef, metadata !10660, metadata !DIExpression()) #23, !dbg !10665
  call void @llvm.dbg.value(metadata i32 undef, metadata !10661, metadata !DIExpression()) #23, !dbg !10665
  call void @llvm.dbg.value(metadata i32 undef, metadata !10648, metadata !DIExpression()), !dbg !10649
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10666
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !10668
  %15 = icmp eq i32 %14, 0, !dbg !10668
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !10657
  br i1 %15, label %17, label %19, !dbg !10669

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !10660, metadata !DIExpression()) #23, !dbg !10665
  call void @llvm.dbg.value(metadata i32 %16, metadata !10648, metadata !DIExpression()), !dbg !10649
  call void @llvm.dbg.value(metadata i32 undef, metadata !10670, metadata !DIExpression()) #23, !dbg !10673
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !10675, !srcloc !10676
  br label %18, !dbg !10677

18:                                               ; preds = %17, %7
  br label %7, !dbg !10652, !llvm.loop !10678

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !10657
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10680
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !10681
  call void @llvm.dbg.value(metadata i32 %20, metadata !10670, metadata !DIExpression()) #23, !dbg !10682
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !10684, !srcloc !10676
  ret void, !dbg !10685
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !10686 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10688, metadata !DIExpression()), !dbg !10691
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10692
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10692
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10692
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10689, metadata !DIExpression()), !dbg !10691
  call void @llvm.dbg.value(metadata i32 0, metadata !10690, metadata !DIExpression()), !dbg !10691
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10693
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10693
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !10695
  %8 = icmp ne i32 %7, 0, !dbg !10695
  %9 = zext i1 %8 to i32, !dbg !10696
  call void @llvm.dbg.value(metadata i32 %9, metadata !10690, metadata !DIExpression()), !dbg !10691
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10697
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !10699
  %12 = icmp eq i32 %11, 0, !dbg !10699
  %13 = or i32 %9, 2, !dbg !10700
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !10700
  call void @llvm.dbg.value(metadata i32 %14, metadata !10690, metadata !DIExpression()), !dbg !10691
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10701
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !10703
  %17 = icmp eq i32 %16, 0, !dbg !10703
  %18 = or i32 %14, 4, !dbg !10704
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !10704
  call void @llvm.dbg.value(metadata i32 %19, metadata !10690, metadata !DIExpression()), !dbg !10691
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10705
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !10707
  %22 = icmp eq i32 %21, 0, !dbg !10707
  %23 = or i32 %19, 8, !dbg !10708
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !10708
  call void @llvm.dbg.value(metadata i32 %24, metadata !10690, metadata !DIExpression()), !dbg !10691
  %25 = and i32 %24, 8, !dbg !10709
  %26 = icmp eq i32 %25, 0, !dbg !10709
  br i1 %26, label %29, label %27, !dbg !10711

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10712
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !10714
  br label %29, !dbg !10715

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !10716
  %31 = icmp eq i32 %30, 0, !dbg !10716
  br i1 %31, label %34, label %32, !dbg !10718

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10719
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !10721
  br label %34, !dbg !10722

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !10723
  %36 = icmp eq i32 %35, 0, !dbg !10723
  br i1 %36, label %39, label %37, !dbg !10725

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10726
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !10728
  br label %39, !dbg !10729

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !10730
  %41 = icmp eq i32 %40, 0, !dbg !10730
  br i1 %41, label %44, label %42, !dbg !10732

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10733
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !10735
  br label %44, !dbg !10736

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10737
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !10738
  ret i32 %24, !dbg !10739
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !10740 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10742, metadata !DIExpression()), !dbg !10751
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10743, metadata !DIExpression()), !dbg !10751
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10752
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10752
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10752
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10744, metadata !DIExpression()), !dbg !10751
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10753
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10753
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10753
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !10745, metadata !DIExpression()), !dbg !10751
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10754
  %10 = load i8, i8* %9, align 4, !dbg !10754
  %11 = zext i8 %10 to i32, !dbg !10755
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !10756
  call void @llvm.dbg.value(metadata i32 %12, metadata !10747, metadata !DIExpression()), !dbg !10751
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10757
  %14 = load i8, i8* %13, align 1, !dbg !10757
  %15 = zext i8 %14 to i32, !dbg !10758
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !10759
  call void @llvm.dbg.value(metadata i32 %16, metadata !10748, metadata !DIExpression()), !dbg !10751
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10760
  %18 = load i8, i8* %17, align 2, !dbg !10760
  %19 = zext i8 %18 to i32, !dbg !10761
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !10762
  call void @llvm.dbg.value(metadata i32 %20, metadata !10749, metadata !DIExpression()), !dbg !10751
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10763
  %22 = load i8, i8* %21, align 1, !dbg !10763
  %23 = zext i8 %22 to i32, !dbg !10764
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !10765
  call void @llvm.dbg.value(metadata i32 %24, metadata !10750, metadata !DIExpression()), !dbg !10751
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10766

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10768
  br i1 %26, label %69, label %27, !dbg !10770

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10771

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10772
  br i1 %29, label %65, label %30, !dbg !10772

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10774
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10751
  br i1 %31, label %38, label %34, !dbg !10776

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10777
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073812480, label %36
  ], !dbg !10777

36:                                               ; preds = %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10780
  br i1 %37, label %38, label %69, !dbg !10781

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10782
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !10783
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !10784
  %41 = icmp eq i32 %12, %40, !dbg !10786
  br i1 %41, label %43, label %42, !dbg !10787

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !10788
  br label %43, !dbg !10790

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !10791
  %45 = icmp eq i32 %16, %44, !dbg !10793
  br i1 %45, label %47, label %46, !dbg !10794

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !10795
  br label %47, !dbg !10797

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !10798
  %49 = icmp eq i32 %20, %48, !dbg !10800
  br i1 %49, label %51, label %50, !dbg !10801

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !10802
  br label %51, !dbg !10804

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !10805
  %53 = icmp eq i32 %24, %52, !dbg !10807
  br i1 %53, label %55, label %54, !dbg !10808

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !10809
  br label %55, !dbg !10811

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10812
  %57 = load i32, i32* %56, align 4, !dbg !10812
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10814
  %59 = load i32, i32* %58, align 4, !dbg !10814
  %60 = icmp eq i32 %57, %59, !dbg !10815
  br i1 %60, label %63, label %61, !dbg !10816

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !10817
  %62 = load i32, i32* %56, align 4, !dbg !10819
  store i32 %62, i32* %58, align 4, !dbg !10820
  br label %63, !dbg !10821

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10822
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !10823
  br label %69, !dbg !10824

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10772
  %67 = and i8 %66, 1, !dbg !10772
  %68 = icmp eq i8 %67, 0, !dbg !10772
  br i1 %68, label %30, label %69, !dbg !10772

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !10751
  ret i32 %70, !dbg !10825
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10826 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10828, metadata !DIExpression()), !dbg !10831
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10829, metadata !DIExpression()), !dbg !10831
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10832
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10832
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10832
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10830, metadata !DIExpression()), !dbg !10831
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10833
  %7 = load i32, i32* %6, align 4, !dbg !10833
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10834
  store i32 %7, i32* %8, align 4, !dbg !10835
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10836, !range !10837
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !10838
  %11 = trunc i32 %10 to i8, !dbg !10838
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10839
  store i8 %11, i8* %12, align 4, !dbg !10840
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !10841, !range !10842
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !10843
  %15 = trunc i32 %14 to i8, !dbg !10843
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10844
  store i8 %15, i8* %16, align 1, !dbg !10845
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !10846
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10847, !range !10837
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !10848
  %20 = trunc i32 %19 to i8, !dbg !10848
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10849
  store i8 %20, i8* %21, align 2, !dbg !10850
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !10851, !range !10852
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !10853
  %24 = trunc i32 %23 to i8, !dbg !10853
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10854
  store i8 %24, i8* %25, align 1, !dbg !10855
  ret i32 0, !dbg !10856
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10857 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10861, metadata !DIExpression()), !dbg !10863
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10864
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10864
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10864
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10862, metadata !DIExpression()), !dbg !10863
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10865
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10865
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !10866
  ret i32 %7, !dbg !10867
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !10868 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10872, metadata !DIExpression()), !dbg !10873
  %2 = icmp eq i32 %0, 1024, !dbg !10874
  %3 = select i1 %2, i32 2, i32 0, !dbg !10874
  %4 = icmp eq i32 %0, 1536, !dbg !10874
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10874
  ret i32 %5, !dbg !10875
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10876 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10878, metadata !DIExpression()), !dbg !10880
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10881
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10881
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10881
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10879, metadata !DIExpression()), !dbg !10880
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10882
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10882
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !10883
  ret i32 %7, !dbg !10884
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10885 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10889, metadata !DIExpression()), !dbg !10890
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10891
  %3 = icmp ult i32 %2, 4, !dbg !10891
  br i1 %3, label %4, label %7, !dbg !10891

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10891
  %6 = load i32, i32* %5, align 4, !dbg !10891
  br label %7, !dbg !10891

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10892
  ret i32 %8, !dbg !10894
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10895 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10897, metadata !DIExpression()), !dbg !10899
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10900
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10900
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10900
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10898, metadata !DIExpression()), !dbg !10899
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10901
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10901
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !10902
  ret i32 %7, !dbg !10903
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10904 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10908, metadata !DIExpression()), !dbg !10910
  call void @llvm.dbg.value(metadata i32 %1, metadata !10909, metadata !DIExpression()), !dbg !10910
  %3 = icmp eq i32 %0, 4096, !dbg !10911
  %4 = icmp eq i32 %1, 0, !dbg !10911
  %5 = select i1 %4, i32 4, i32 3, !dbg !10911
  %6 = select i1 %4, i32 3, i32 2, !dbg !10911
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10911
  ret i32 %7, !dbg !10912
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10913 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10915, metadata !DIExpression()), !dbg !10917
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10918
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10918
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10918
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10916, metadata !DIExpression()), !dbg !10917
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10919
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10919
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !10920
  ret i32 %7, !dbg !10921
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !10922 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10926, metadata !DIExpression()), !dbg !10927
  %2 = icmp eq i32 %0, 768, !dbg !10928
  %3 = zext i1 %2 to i32, !dbg !10927
  ret i32 %3, !dbg !10930
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10931 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10936, metadata !DIExpression()), !dbg !10937
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10938
  %3 = load volatile i32, i32* %2, align 4, !dbg !10938
  %4 = and i32 %3, 768, !dbg !10938
  ret i32 %4, !dbg !10939
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10940 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10942, metadata !DIExpression()), !dbg !10943
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10944
  %3 = load volatile i32, i32* %2, align 4, !dbg !10944
  %4 = and i32 %3, 4096, !dbg !10944
  ret i32 %4, !dbg !10945
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10946 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10948, metadata !DIExpression()), !dbg !10949
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10950
  %3 = load volatile i32, i32* %2, align 4, !dbg !10950
  %4 = and i32 %3, 12288, !dbg !10950
  ret i32 %4, !dbg !10951
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10952 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10954, metadata !DIExpression()), !dbg !10955
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10956
  %3 = load volatile i32, i32* %2, align 4, !dbg !10956
  %4 = and i32 %3, 1536, !dbg !10956
  ret i32 %4, !dbg !10957
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !10958 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10962, metadata !DIExpression()), !dbg !10963
  %2 = icmp eq i32 %0, 2, !dbg !10964
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10964
  %4 = icmp eq i32 %0, 1, !dbg !10964
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10964
  ret i32 %5, !dbg !10965
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !10966 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10970, metadata !DIExpression()), !dbg !10971
  %2 = icmp ult i32 %0, 3, !dbg !10972
  br i1 %2, label %3, label %6, !dbg !10972

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10972
  %5 = load i32, i32* %4, align 4, !dbg !10972
  br label %6, !dbg !10972

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10973
  ret i32 %7, !dbg !10975
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10976 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10980, metadata !DIExpression()), !dbg !10982
  call void @llvm.dbg.value(metadata i32 %1, metadata !10981, metadata !DIExpression()), !dbg !10982
  %3 = icmp eq i32 %0, 4, !dbg !10983
  %4 = icmp eq i32 %1, 0, !dbg !10983
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10983
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10983
  ret i32 %6, !dbg !10984
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !10985 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10989, metadata !DIExpression()), !dbg !10990
  %2 = icmp eq i32 %0, 1, !dbg !10991
  %3 = select i1 %2, i32 768, i32 0, !dbg !10990
  ret i32 %3, !dbg !10993
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10994 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10998, metadata !DIExpression()), !dbg !10999
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11000
  %3 = load volatile i32, i32* %2, align 4, !dbg !11000
  %4 = and i32 %3, -8193, !dbg !11000
  store volatile i32 %4, i32* %2, align 4, !dbg !11000
  ret void, !dbg !11001
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11002 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11006, metadata !DIExpression()), !dbg !11009
  call void @llvm.dbg.value(metadata i32 %1, metadata !11007, metadata !DIExpression()), !dbg !11009
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11010
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11010
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11010
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11008, metadata !DIExpression()), !dbg !11009
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11011
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11011
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11012
  ret void, !dbg !11013
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11014 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11016, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.value(metadata i32 %1, metadata !11017, metadata !DIExpression()), !dbg !11019
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11020
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11020
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11020
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11018, metadata !DIExpression()), !dbg !11019
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11021
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11021
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11022
  ret void, !dbg !11023
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11024 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11026, metadata !DIExpression()), !dbg !11029
  call void @llvm.dbg.value(metadata i32 %1, metadata !11027, metadata !DIExpression()), !dbg !11029
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11030
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11030
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11030
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11028, metadata !DIExpression()), !dbg !11029
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11031
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11031
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11032
  ret void, !dbg !11033
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11034 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11036, metadata !DIExpression()), !dbg !11039
  call void @llvm.dbg.value(metadata i32 %1, metadata !11037, metadata !DIExpression()), !dbg !11039
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11040
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11040
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11040
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11038, metadata !DIExpression()), !dbg !11039
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11041
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11041
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11042
  ret void, !dbg !11043
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11044 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11046, metadata !DIExpression()), !dbg !11051
  call void @llvm.dbg.value(metadata i32 %1, metadata !11047, metadata !DIExpression()), !dbg !11051
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11052
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11052
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11052
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11048, metadata !DIExpression()), !dbg !11051
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11053
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11053
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11053
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11049, metadata !DIExpression()), !dbg !11051
  %10 = bitcast i32* %3 to i8*, !dbg !11054
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11054
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11055
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11055
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11059
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11059
  %15 = load i8*, i8** %14, align 4, !dbg !11059
  call void @llvm.dbg.value(metadata i32* %3, metadata !11050, metadata !DIExpression(DW_OP_deref)), !dbg !11051
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !11060
  %17 = icmp slt i32 %16, 0, !dbg !11061
  br i1 %17, label %18, label %21, !dbg !11062

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.162(i32 noundef 1) #24, !dbg !11063
  %20 = zext i8 %19 to i32, !dbg !11063
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.163, i32 0, i32 0), i32 noundef %20) #25, !dbg !11063
  br label %31, !dbg !11069

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11070
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11070
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !11071
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11072
  %25 = load i32, i32* %3, align 4, !dbg !11073
  call void @llvm.dbg.value(metadata i32 %25, metadata !11050, metadata !DIExpression()), !dbg !11051
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !11074
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11075
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !11075
  %28 = load volatile i32, i32* %27, align 4, !dbg !11075
  %29 = icmp ugt i32 %28, 16, !dbg !11075
  br i1 %29, label %31, label %30, !dbg !11078

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.164, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4.165, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.166, i32 0, i32 0), i32 noundef 190) #25, !dbg !11079
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.167, i32 0, i32 0)) #25, !dbg !11079
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.166, i32 0, i32 0), i32 noundef 190) #25, !dbg !11079
  unreachable, !dbg !11079

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11081
  ret void, !dbg !11081
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11082 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11084, metadata !DIExpression()), !dbg !11085
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11086
  %3 = load volatile i32, i32* %2, align 4, !dbg !11086
  %4 = or i32 %3, 8192, !dbg !11086
  store volatile i32 %4, i32* %2, align 4, !dbg !11086
  ret void, !dbg !11087
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11088 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11090, metadata !DIExpression()), !dbg !11094
  call void @llvm.dbg.value(metadata i8* %1, metadata !11091, metadata !DIExpression()), !dbg !11094
  call void @llvm.dbg.value(metadata i32* %2, metadata !11092, metadata !DIExpression()), !dbg !11094
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11095
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11095
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11095
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11093, metadata !DIExpression()), !dbg !11094
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11096
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11096
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11098
  br i1 %9, label %12, label %10, !dbg !11099

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11100
  br label %12, !dbg !11101

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11094
  ret i32 %13, !dbg !11102
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.162(i32 noundef %0) unnamed_addr #4 !dbg !11103 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11105, metadata !DIExpression()), !dbg !11106
  %2 = icmp eq i32 %0, 2, !dbg !11107
  %3 = select i1 %2, i8 87, i8 63, !dbg !11107
  %4 = icmp eq i32 %0, 1, !dbg !11107
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11107
  ret i8 %5, !dbg !11108
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11109 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11113, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.value(metadata i32 0, metadata !11114, metadata !DIExpression()), !dbg !11115
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11116
  %3 = load volatile i32, i32* %2, align 4, !dbg !11116
  %4 = and i32 %3, -32769, !dbg !11116
  store volatile i32 %4, i32* %2, align 4, !dbg !11116
  ret void, !dbg !11117
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !11118 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11122, metadata !DIExpression()), !dbg !11126
  call void @llvm.dbg.value(metadata i32 %1, metadata !11123, metadata !DIExpression()), !dbg !11126
  call void @llvm.dbg.value(metadata i32 0, metadata !11124, metadata !DIExpression()), !dbg !11126
  call void @llvm.dbg.value(metadata i32 %2, metadata !11125, metadata !DIExpression()), !dbg !11126
  %4 = zext i32 %1 to i64, !dbg !11127
  %5 = mul nuw nsw i64 %4, 25, !dbg !11127
  %6 = zext i32 %2 to i64, !dbg !11127
  %7 = shl nuw nsw i64 %6, 2, !dbg !11127
  %8 = udiv i64 %5, %7, !dbg !11127
  %9 = trunc i64 %8 to i32, !dbg !11127
  %10 = udiv i32 %9, 100, !dbg !11127
  %11 = shl nuw nsw i32 %10, 4, !dbg !11127
  %12 = mul i32 %10, -100, !dbg !11127
  %13 = add i32 %12, %9, !dbg !11127
  %14 = shl i32 %13, 4, !dbg !11127
  %15 = add i32 %14, 50, !dbg !11127
  %16 = udiv i32 %15, 100, !dbg !11127
  %17 = and i32 %16, 240, !dbg !11127
  %18 = add nuw nsw i32 %17, %11, !dbg !11127
  %19 = and i32 %16, 15, !dbg !11127
  %20 = and i32 %18, 65520, !dbg !11130
  %21 = or i32 %20, %19, !dbg !11130
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11131
  store volatile i32 %21, i32* %22, align 4, !dbg !11132
  ret void, !dbg !11133
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11134 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11136, metadata !DIExpression()), !dbg !11138
  call void @llvm.dbg.value(metadata i32 %1, metadata !11137, metadata !DIExpression()), !dbg !11138
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11139
  %4 = load volatile i32, i32* %3, align 4, !dbg !11139
  %5 = and i32 %4, -769, !dbg !11139
  %6 = or i32 %5, %1, !dbg !11139
  store volatile i32 %6, i32* %3, align 4, !dbg !11139
  ret void, !dbg !11140
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11141 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11143, metadata !DIExpression()), !dbg !11145
  call void @llvm.dbg.value(metadata i32 %1, metadata !11144, metadata !DIExpression()), !dbg !11145
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11146
  %4 = load volatile i32, i32* %3, align 4, !dbg !11146
  %5 = and i32 %4, -4097, !dbg !11146
  %6 = or i32 %5, %1, !dbg !11146
  store volatile i32 %6, i32* %3, align 4, !dbg !11146
  ret void, !dbg !11147
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11148 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11150, metadata !DIExpression()), !dbg !11152
  call void @llvm.dbg.value(metadata i32 %1, metadata !11151, metadata !DIExpression()), !dbg !11152
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11153
  %4 = load volatile i32, i32* %3, align 4, !dbg !11153
  %5 = and i32 %4, -12289, !dbg !11153
  %6 = or i32 %5, %1, !dbg !11153
  store volatile i32 %6, i32* %3, align 4, !dbg !11153
  ret void, !dbg !11154
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11155 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11157, metadata !DIExpression()), !dbg !11159
  call void @llvm.dbg.value(metadata i32 %1, metadata !11158, metadata !DIExpression()), !dbg !11159
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11160
  %4 = load volatile i32, i32* %3, align 4, !dbg !11160
  %5 = and i32 %4, -1537, !dbg !11160
  %6 = or i32 %5, %1, !dbg !11160
  store volatile i32 %6, i32* %3, align 4, !dbg !11160
  ret void, !dbg !11161
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11162 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11164, metadata !DIExpression()), !dbg !11165
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11166
  %3 = load volatile i32, i32* %2, align 4, !dbg !11166
  %4 = lshr i32 %3, 3, !dbg !11167
  %5 = and i32 %4, 1, !dbg !11167
  ret i32 %5, !dbg !11168
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11169 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11171, metadata !DIExpression()), !dbg !11172
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11173
  %3 = load volatile i32, i32* %2, align 4, !dbg !11173
  %4 = and i32 %3, 1, !dbg !11173
  ret i32 %4, !dbg !11174
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11175 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11177, metadata !DIExpression()), !dbg !11178
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11179
  %3 = load volatile i32, i32* %2, align 4, !dbg !11179
  %4 = lshr i32 %3, 1, !dbg !11180
  %5 = and i32 %4, 1, !dbg !11180
  ret i32 %5, !dbg !11181
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11182 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11184, metadata !DIExpression()), !dbg !11185
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11186
  %3 = load volatile i32, i32* %2, align 4, !dbg !11186
  %4 = lshr i32 %3, 8, !dbg !11187
  %5 = and i32 %4, 1, !dbg !11187
  ret i32 %5, !dbg !11188
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11189 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11191, metadata !DIExpression()), !dbg !11192
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11193
  store volatile i32 -257, i32* %2, align 4, !dbg !11193
  ret void, !dbg !11194
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11195 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11197, metadata !DIExpression()), !dbg !11199
  %3 = bitcast i32* %2 to i8*, !dbg !11200
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11200
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11198, metadata !DIExpression()), !dbg !11201
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11202
  %5 = load volatile i32, i32* %4, align 4, !dbg !11202
  store volatile i32 %5, i32* %2, align 4, !dbg !11203
  %6 = load volatile i32, i32* %2, align 4, !dbg !11204
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11205
  %8 = load volatile i32, i32* %7, align 4, !dbg !11205
  store volatile i32 %8, i32* %2, align 4, !dbg !11206
  %9 = load volatile i32, i32* %2, align 4, !dbg !11207
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11208
  ret void, !dbg !11208
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11209 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11211, metadata !DIExpression()), !dbg !11213
  %3 = bitcast i32* %2 to i8*, !dbg !11214
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11214
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11212, metadata !DIExpression()), !dbg !11215
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11216
  %5 = load volatile i32, i32* %4, align 4, !dbg !11216
  store volatile i32 %5, i32* %2, align 4, !dbg !11217
  %6 = load volatile i32, i32* %2, align 4, !dbg !11218
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11219
  %8 = load volatile i32, i32* %7, align 4, !dbg !11219
  store volatile i32 %8, i32* %2, align 4, !dbg !11220
  %9 = load volatile i32, i32* %2, align 4, !dbg !11221
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11222
  ret void, !dbg !11222
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11223 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11225, metadata !DIExpression()), !dbg !11227
  %3 = bitcast i32* %2 to i8*, !dbg !11228
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11228
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11226, metadata !DIExpression()), !dbg !11229
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11230
  %5 = load volatile i32, i32* %4, align 4, !dbg !11230
  store volatile i32 %5, i32* %2, align 4, !dbg !11231
  %6 = load volatile i32, i32* %2, align 4, !dbg !11232
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11233
  %8 = load volatile i32, i32* %7, align 4, !dbg !11233
  store volatile i32 %8, i32* %2, align 4, !dbg !11234
  %9 = load volatile i32, i32* %2, align 4, !dbg !11235
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11236
  ret void, !dbg !11236
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11237 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11239, metadata !DIExpression()), !dbg !11241
  %3 = bitcast i32* %2 to i8*, !dbg !11242
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11242
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11240, metadata !DIExpression()), !dbg !11243
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11244
  %5 = load volatile i32, i32* %4, align 4, !dbg !11244
  store volatile i32 %5, i32* %2, align 4, !dbg !11245
  %6 = load volatile i32, i32* %2, align 4, !dbg !11246
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11247
  %8 = load volatile i32, i32* %7, align 4, !dbg !11247
  store volatile i32 %8, i32* %2, align 4, !dbg !11248
  %9 = load volatile i32, i32* %2, align 4, !dbg !11249
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11250
  ret void, !dbg !11250
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11251 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11253, metadata !DIExpression()), !dbg !11254
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11255
  %3 = load volatile i32, i32* %2, align 4, !dbg !11255
  %4 = lshr i32 %3, 7, !dbg !11256
  %5 = and i32 %4, 1, !dbg !11256
  ret i32 %5, !dbg !11257
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !11258 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11262, metadata !DIExpression()), !dbg !11264
  call void @llvm.dbg.value(metadata i8 %1, metadata !11263, metadata !DIExpression()), !dbg !11264
  %3 = zext i8 %1 to i32, !dbg !11265
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11266
  store volatile i32 %3, i32* %4, align 4, !dbg !11267
  ret void, !dbg !11268
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11269 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11271, metadata !DIExpression()), !dbg !11272
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11273
  %3 = load volatile i32, i32* %2, align 4, !dbg !11273
  %4 = lshr i32 %3, 5, !dbg !11274
  %5 = and i32 %4, 1, !dbg !11274
  ret i32 %5, !dbg !11275
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11276 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11280, metadata !DIExpression()), !dbg !11281
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11282
  %3 = load volatile i32, i32* %2, align 4, !dbg !11282
  %4 = trunc i32 %3 to i8, !dbg !11283
  ret i8 %4, !dbg !11284
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11285 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11287, metadata !DIExpression()), !dbg !11293
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11294
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11294
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11294
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11288, metadata !DIExpression()), !dbg !11293
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11295
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11295
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11295
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11289, metadata !DIExpression()), !dbg !11293
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !11296
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11297
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11297
  %10 = tail call fastcc zeroext i1 @device_is_ready.169(%struct.device* noundef %9) #24, !dbg !11299
  br i1 %10, label %14, label %11, !dbg !11300

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.162(i32 noundef 1) #24, !dbg !11301
  %13 = zext i8 %12 to i32, !dbg !11301
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.170, i32 0, i32 0), i32 noundef %13) #25, !dbg !11301
  br label %62, !dbg !11307

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11308
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11309
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !11309
  %18 = load i8*, i8** %17, align 4, !dbg !11309
  %19 = tail call fastcc i32 @clock_control_on.171(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !11310
  call void @llvm.dbg.value(metadata i32 %19, metadata !11292, metadata !DIExpression()), !dbg !11293
  %20 = icmp eq i32 %19, 0, !dbg !11311
  br i1 %20, label %24, label %21, !dbg !11313

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.162(i32 noundef 1) #24, !dbg !11314
  %23 = zext i8 %22 to i32, !dbg !11314
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8.172, i32 0, i32 0), i32 noundef %23) #25, !dbg !11314
  br label %62, !dbg !11320

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11321
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11321
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !11322
  call void @llvm.dbg.value(metadata i32 %27, metadata !11292, metadata !DIExpression()), !dbg !11293
  %28 = icmp slt i32 %27, 0, !dbg !11323
  br i1 %28, label %62, label %29, !dbg !11325

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11326
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11326
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !11327
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11328
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !11329
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11330
  %34 = load i32, i32* %33, align 4, !dbg !11330
  %35 = icmp ult i32 %34, 3, !dbg !11332
  br i1 %35, label %39, label %36, !dbg !11332

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.162(i32 noundef 2) #24, !dbg !11333
  %38 = zext i8 %37 to i32, !dbg !11333
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9.173, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !11333
  call void @llvm.dbg.value(metadata i32 0, metadata !11290, metadata !DIExpression()), !dbg !11293
  call void @llvm.dbg.value(metadata i32 0, metadata !11291, metadata !DIExpression()), !dbg !11293
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11332
  %41 = load i32, i32* %40, align 4, !dbg !11332
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.10, i32 0, i32 %34, !dbg !11332
  %43 = load i32, i32* %42, align 4, !dbg !11332
  br label %44, !dbg !11332

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11342
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11342
  call void @llvm.dbg.value(metadata i32 %46, metadata !11291, metadata !DIExpression()), !dbg !11293
  call void @llvm.dbg.value(metadata i32 %45, metadata !11290, metadata !DIExpression()), !dbg !11293
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11343
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !11344
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11345
  %49 = load i8, i8* %48, align 4, !dbg !11345, !range !6616
  %50 = icmp eq i8 %49, 0, !dbg !11345
  br i1 %50, label %52, label %51, !dbg !11347

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !11348
  br label %52, !dbg !11350

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11351
  %54 = load i32, i32* %53, align 4, !dbg !11351
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !11352
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11353
  %56 = load i8, i8* %55, align 4, !dbg !11353, !range !6616
  %57 = icmp eq i8 %56, 0, !dbg !11353
  br i1 %57, label %60, label %58, !dbg !11355

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11356
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !11358
  br label %60, !dbg !11359

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11360
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !11361
  br label %62, !dbg !11362

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11293
  ret i32 %63, !dbg !11363
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !11364 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11368, metadata !DIExpression()), !dbg !11372
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11373
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11373
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11373
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11369, metadata !DIExpression()), !dbg !11372
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11370, metadata !DIExpression()), !dbg !11372
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11374
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !11375
  ret void, !dbg !11376
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.169(%struct.device* noundef %0) unnamed_addr #1 !dbg !11377 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11381, metadata !DIExpression()), !dbg !11382
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11383, !srcloc !11385
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.174(%struct.device* noundef %0) #24, !dbg !11386
  ret i1 %2, !dbg !11387
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.171(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11388 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11390, metadata !DIExpression()), !dbg !11393
  call void @llvm.dbg.value(metadata i8* %1, metadata !11391, metadata !DIExpression()), !dbg !11393
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11394
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11394
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11394
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11392, metadata !DIExpression()), !dbg !11393
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11395
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11395
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11396
  ret i32 %8, !dbg !11397
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11398 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11402, metadata !DIExpression()), !dbg !11406
  call void @llvm.dbg.value(metadata i8 0, metadata !11403, metadata !DIExpression()), !dbg !11406
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11407
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11407
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11405, metadata !DIExpression(DW_OP_deref)), !dbg !11406
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11408
  call void @llvm.dbg.value(metadata i32 %4, metadata !11404, metadata !DIExpression()), !dbg !11406
  %5 = icmp slt i32 %4, 0, !dbg !11409
  br i1 %5, label %9, label %6, !dbg !11411

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11412
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11405, metadata !DIExpression()), !dbg !11406
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !11413
  br label %9, !dbg !11414

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11406
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11415
  ret i32 %10, !dbg !11415
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11416 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11418, metadata !DIExpression()), !dbg !11422
  call void @llvm.dbg.value(metadata i32 12, metadata !11419, metadata !DIExpression()), !dbg !11422
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11423

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11424, metadata !DIExpression()) #23, !dbg !11430
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !11433, !srcloc !11434
  call void @llvm.dbg.value(metadata i32 %4, metadata !11429, metadata !DIExpression()) #23, !dbg !11430
  %5 = or i32 %4, 12, !dbg !11435
  call void @llvm.dbg.value(metadata i32 %5, metadata !11420, metadata !DIExpression()), !dbg !11436
  call void @llvm.dbg.value(metadata i32 %5, metadata !11437, metadata !DIExpression()) #23, !dbg !11444
  call void @llvm.dbg.value(metadata i32* %2, metadata !11442, metadata !DIExpression()) #23, !dbg !11444
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !11446, !srcloc !11447
  call void @llvm.dbg.value(metadata i32 %6, metadata !11443, metadata !DIExpression()) #23, !dbg !11444
  %7 = icmp eq i32 %6, 0, !dbg !11423
  br i1 %7, label %8, label %3, !dbg !11435, !llvm.loop !11448

8:                                                ; preds = %3
  ret void, !dbg !11449
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !11450 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11452, metadata !DIExpression()), !dbg !11456
  call void @llvm.dbg.value(metadata i32 %1, metadata !11453, metadata !DIExpression()), !dbg !11456
  call void @llvm.dbg.value(metadata i32 %2, metadata !11454, metadata !DIExpression()), !dbg !11456
  call void @llvm.dbg.value(metadata i32 0, metadata !11455, metadata !DIExpression()), !dbg !11456
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11457
  %5 = load volatile i32, i32* %4, align 4, !dbg !11457
  %6 = and i32 %5, -5633, !dbg !11457
  %7 = or i32 %2, %1, !dbg !11457
  %8 = or i32 %7, %6, !dbg !11457
  store volatile i32 %8, i32* %4, align 4, !dbg !11457
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11458
  %10 = load volatile i32, i32* %9, align 4, !dbg !11458
  %11 = and i32 %10, -12289, !dbg !11458
  store volatile i32 %11, i32* %9, align 4, !dbg !11458
  ret void, !dbg !11459
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11460 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11462, metadata !DIExpression()), !dbg !11463
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11464
  %3 = load volatile i32, i32* %2, align 4, !dbg !11464
  %4 = or i32 %3, 8, !dbg !11464
  store volatile i32 %4, i32* %2, align 4, !dbg !11464
  ret void, !dbg !11465
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11466 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11470, metadata !DIExpression()), !dbg !11473
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11471, metadata !DIExpression()), !dbg !11473
  call void @llvm.dbg.value(metadata i32 0, metadata !11472, metadata !DIExpression()), !dbg !11473
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11474
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11474
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11475
  %5 = load i8, i8* %4, align 4, !dbg !11475
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11476
  ret i32 %6, !dbg !11477
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.174(%struct.device* noundef %0) unnamed_addr #1 !dbg !11478 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11480, metadata !DIExpression()), !dbg !11481
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11482
  ret i1 %2, !dbg !11483
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !11484 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11486, metadata !DIExpression()), !dbg !11487
  tail call fastcc void @__NVIC_SetPriority.176() #24, !dbg !11488
  store i32 16799, i32* @last_load, align 4, !dbg !11489
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11490
  store volatile i32 16799, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11491
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11492
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11493
  %3 = or i32 %2, 7, !dbg !11493
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11493
  ret i32 0, !dbg !11494
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.176() unnamed_addr #14 !dbg !11495 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11497, metadata !DIExpression()), !dbg !11499
  call void @llvm.dbg.value(metadata i32 1, metadata !11498, metadata !DIExpression()), !dbg !11499
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11500
  ret void, !dbg !11503
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11504 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11506, metadata !DIExpression()), !dbg !11508
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !11509
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11510
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11511
  %5 = add i32 %4, %3, !dbg !11511
  store i32 %5, i32* @cycle_count, align 4, !dbg !11511
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11512
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11513
  %7 = sub i32 %5, %6, !dbg !11516
  %8 = udiv i32 %7, 16800, !dbg !11517
  call void @llvm.dbg.value(metadata i32 %8, metadata !11507, metadata !DIExpression()), !dbg !11508
  %9 = mul nuw i32 %8, 16800, !dbg !11518
  %10 = add i32 %9, %6, !dbg !11519
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11519
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11520
  tail call void @z_arm_int_exit() #25, !dbg !11521
  ret void, !dbg !11522
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !11523 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11528
  call void @llvm.dbg.value(metadata i32 %1, metadata !11525, metadata !DIExpression()), !dbg !11529
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11530
  call void @llvm.dbg.value(metadata i32 %2, metadata !11526, metadata !DIExpression()), !dbg !11529
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11531
  call void @llvm.dbg.value(metadata i32 %3, metadata !11527, metadata !DIExpression()), !dbg !11529
  %4 = and i32 %2, 65536, !dbg !11532
  %5 = icmp ne i32 %4, 0, !dbg !11532
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11534
  %8 = load i32, i32* @last_load, align 4, !dbg !11529
  br i1 %7, label %9, label %13, !dbg !11534

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11535
  %11 = add i32 %10, %8, !dbg !11535
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11535
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11537
  br label %13, !dbg !11538

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11539
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11540
  %16 = add i32 %14, %15, !dbg !11541
  ret i32 %16, !dbg !11542
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11543 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11547, metadata !DIExpression()), !dbg !11560
  call void @llvm.dbg.value(metadata i1 %1, metadata !11548, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11560
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11561
  br i1 %4, label %5, label %8, !dbg !11561

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11563
  %7 = and i32 %6, -2, !dbg !11563
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11563
  store i32 -16777216, i32* @last_load, align 4, !dbg !11565
  br label %60, !dbg !11566

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11567
  call void @llvm.dbg.value(metadata i32 %9, metadata !11552, metadata !DIExpression()), !dbg !11560
  br i1 %3, label %18, label %10, !dbg !11568

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11568
  call void @llvm.dbg.value(metadata i32 undef, metadata !11547, metadata !DIExpression()), !dbg !11560
  %12 = icmp slt i32 %11, 1, !dbg !11569
  br i1 %12, label %18, label %13, !dbg !11569

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 997, !dbg !11569
  %15 = select i1 %14, i32 %11, i32 997, !dbg !11569
  %16 = mul nuw nsw i32 %15, 16800, !dbg !11569
  %17 = add nuw nsw i32 %16, 16799, !dbg !11569
  br label %18, !dbg !11569

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 16799, %10 ], [ 16749599, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11547, metadata !DIExpression()), !dbg !11560
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11570, metadata !DIExpression()) #23, !dbg !11577
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11579, !srcloc !11585
  call void @llvm.dbg.value(metadata i32 undef, metadata !11582, metadata !DIExpression()) #23, !dbg !11586
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #23, !dbg !11586
  call void @llvm.dbg.value(metadata i32 undef, metadata !11576, metadata !DIExpression()) #23, !dbg !11577
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11587
  br i1 %21, label %23, label %22, !dbg !11590

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.178, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i32 0, i32 0), i32 noundef 148) #25, !dbg !11591
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.180, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11591
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i32 0, i32 0), i32 noundef 148) #25, !dbg !11591
  unreachable, !dbg !11591

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !11579
  call void @llvm.dbg.value(metadata i32 %24, metadata !11582, metadata !DIExpression()) #23, !dbg !11586
  call void @llvm.dbg.value(metadata i32 %24, metadata !11576, metadata !DIExpression()) #23, !dbg !11577
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11593
  call void @llvm.dbg.value(metadata i32 %24, metadata !11553, metadata !DIExpression()), !dbg !11560
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !11594
  call void @llvm.dbg.value(metadata i32 %25, metadata !11558, metadata !DIExpression()), !dbg !11560
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11595
  call void @llvm.dbg.value(metadata i32 %26, metadata !11550, metadata !DIExpression()), !dbg !11560
  %27 = load i32, i32* @cycle_count, align 4, !dbg !11596
  %28 = add i32 %27, %25, !dbg !11596
  store i32 %28, i32* @cycle_count, align 4, !dbg !11596
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11597
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !11598
  %30 = sub i32 %28, %29, !dbg !11599
  call void @llvm.dbg.value(metadata i32 %30, metadata !11559, metadata !DIExpression()), !dbg !11560
  %31 = icmp slt i32 %30, 0, !dbg !11600
  br i1 %31, label %41, label %32, !dbg !11602

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !11549, metadata !DIExpression()), !dbg !11560
  call void @llvm.dbg.value(metadata i32 undef, metadata !11549, metadata !DIExpression()), !dbg !11560
  %33 = add nuw i32 %19, %30, !dbg !11603
  %34 = urem i32 %33, 16800, !dbg !11605
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !11549, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11560
  %35 = sub nuw nsw i32 %19, %34, !dbg !11606
  call void @llvm.dbg.value(metadata i32 %35, metadata !11549, metadata !DIExpression()), !dbg !11560
  %36 = icmp ugt i32 %35, 1050, !dbg !11607
  br i1 %36, label %37, label %39, !dbg !11607

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !11549, metadata !DIExpression()), !dbg !11560
  %38 = icmp ugt i32 %35, 16749600, !dbg !11608
  br i1 %38, label %41, label %39, !dbg !11610

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1050, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1050, %23 ], [ 16749600, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !11611
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11612
  call void @llvm.dbg.value(metadata i32 %43, metadata !11551, metadata !DIExpression()), !dbg !11560
  %44 = add nsw i32 %42, -1, !dbg !11613
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11614
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11615
  %45 = icmp ult i32 %26, %43, !dbg !11616
  br i1 %45, label %46, label %51, !dbg !11618

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !11619
  %48 = add i32 %26, %9, !dbg !11621
  %49 = sub i32 %48, %43, !dbg !11622
  %50 = add i32 %49, %47, !dbg !11619
  br label %55, !dbg !11623

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !11624
  %53 = load i32, i32* @cycle_count, align 4, !dbg !11626
  %54 = add i32 %52, %53, !dbg !11626
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !11627
  store i32 %56, i32* @cycle_count, align 4, !dbg !11627
  call void @llvm.dbg.value(metadata i32 undef, metadata !11628, metadata !DIExpression()) #23, !dbg !11634
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11633, metadata !DIExpression()) #23, !dbg !11634
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11636
  br i1 %57, label %59, label %58, !dbg !11639

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.181, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i32 0, i32 0), i32 noundef 194) #25, !dbg !11640
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.182, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11640
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i32 0, i32 0), i32 noundef 194) #25, !dbg !11640
  unreachable, !dbg !11640

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !11628, metadata !DIExpression()) #23, !dbg !11634
  call void @llvm.dbg.value(metadata i32 %24, metadata !11642, metadata !DIExpression()) #23, !dbg !11645
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !11647, !srcloc !11648
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !11649
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11650 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11570, metadata !DIExpression()) #23, !dbg !11654
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11656, !srcloc !11585
  call void @llvm.dbg.value(metadata i32 undef, metadata !11582, metadata !DIExpression()) #23, !dbg !11658
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #23, !dbg !11658
  call void @llvm.dbg.value(metadata i32 undef, metadata !11576, metadata !DIExpression()) #23, !dbg !11654
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11659
  br i1 %2, label %4, label %3, !dbg !11660

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.178, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i32 0, i32 0), i32 noundef 148) #25, !dbg !11661
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.180, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11661
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i32 0, i32 0), i32 noundef 148) #25, !dbg !11661
  unreachable, !dbg !11661

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11582, metadata !DIExpression()) #23, !dbg !11658
  call void @llvm.dbg.value(metadata i32 undef, metadata !11576, metadata !DIExpression()) #23, !dbg !11654
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11662
  call void @llvm.dbg.value(metadata i32 undef, metadata !11652, metadata !DIExpression()), !dbg !11663
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !11664
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11665
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !11666
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !11653, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11663
  call void @llvm.dbg.value(metadata i32 undef, metadata !11628, metadata !DIExpression()) #23, !dbg !11667
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11633, metadata !DIExpression()) #23, !dbg !11667
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11669
  br i1 %8, label %10, label %9, !dbg !11670

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.181, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i32 0, i32 0), i32 noundef 194) #25, !dbg !11671
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.182, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11671
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i32 0, i32 0), i32 noundef 194) #25, !dbg !11671
  unreachable, !dbg !11671

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !11672
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !11653, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11663
  %12 = sub i32 %11, %7, !dbg !11673
  call void @llvm.dbg.value(metadata i32 %12, metadata !11653, metadata !DIExpression()), !dbg !11663
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !11656
  call void @llvm.dbg.value(metadata i32 %13, metadata !11582, metadata !DIExpression()) #23, !dbg !11658
  call void @llvm.dbg.value(metadata i32 %13, metadata !11576, metadata !DIExpression()) #23, !dbg !11654
  call void @llvm.dbg.value(metadata i32 %13, metadata !11652, metadata !DIExpression()), !dbg !11663
  call void @llvm.dbg.value(metadata i32 undef, metadata !11628, metadata !DIExpression()) #23, !dbg !11667
  call void @llvm.dbg.value(metadata i32 undef, metadata !11642, metadata !DIExpression()) #23, !dbg !11674
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !11676, !srcloc !11648
  %14 = udiv i32 %12, 16800, !dbg !11677
  ret i32 %14, !dbg !11678
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11679 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11570, metadata !DIExpression()) #23, !dbg !11683
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11685, !srcloc !11585
  call void @llvm.dbg.value(metadata i32 undef, metadata !11582, metadata !DIExpression()) #23, !dbg !11687
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #23, !dbg !11687
  call void @llvm.dbg.value(metadata i32 undef, metadata !11576, metadata !DIExpression()) #23, !dbg !11683
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11688
  br i1 %2, label %4, label %3, !dbg !11689

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.178, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i32 0, i32 0), i32 noundef 148) #25, !dbg !11690
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.180, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11690
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i32 0, i32 0), i32 noundef 148) #25, !dbg !11690
  unreachable, !dbg !11690

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11582, metadata !DIExpression()) #23, !dbg !11687
  call void @llvm.dbg.value(metadata i32 undef, metadata !11576, metadata !DIExpression()) #23, !dbg !11683
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11691
  call void @llvm.dbg.value(metadata i32 undef, metadata !11681, metadata !DIExpression()), !dbg !11692
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !11693
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11694
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !11682, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !11692
  call void @llvm.dbg.value(metadata i32 undef, metadata !11628, metadata !DIExpression()) #23, !dbg !11695
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11633, metadata !DIExpression()) #23, !dbg !11695
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11697
  br i1 %7, label %9, label %8, !dbg !11698

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.181, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i32 0, i32 0), i32 noundef 194) #25, !dbg !11699
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.182, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11699
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i32 0, i32 0), i32 noundef 194) #25, !dbg !11699
  unreachable, !dbg !11699

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !11700
  call void @llvm.dbg.value(metadata i32 %10, metadata !11682, metadata !DIExpression()), !dbg !11692
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !11685
  call void @llvm.dbg.value(metadata i32 %11, metadata !11582, metadata !DIExpression()) #23, !dbg !11687
  call void @llvm.dbg.value(metadata i32 %11, metadata !11576, metadata !DIExpression()) #23, !dbg !11683
  call void @llvm.dbg.value(metadata i32 %11, metadata !11681, metadata !DIExpression()), !dbg !11692
  call void @llvm.dbg.value(metadata i32 undef, metadata !11628, metadata !DIExpression()) #23, !dbg !11695
  call void @llvm.dbg.value(metadata i32 undef, metadata !11642, metadata !DIExpression()) #23, !dbg !11701
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !11703, !srcloc !11648
  ret i32 %10, !dbg !11704
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !11705 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11706
  %2 = icmp eq i32 %1, -16777216, !dbg !11708
  br i1 %2, label %3, label %6, !dbg !11709

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11710
  %5 = or i32 %4, 1, !dbg !11710
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11710
  br label %6, !dbg !11712

6:                                                ; preds = %3, %0
  ret void, !dbg !11713
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !11714 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11715
  %2 = and i32 %1, -2, !dbg !11715
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11715
  ret void, !dbg !11716
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !11717 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11743, metadata !DIExpression()), !dbg !11746
  call void @llvm.dbg.value(metadata i8 %1, metadata !11744, metadata !DIExpression()), !dbg !11746
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11745, metadata !DIExpression()), !dbg !11746
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11747
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11747
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11746
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11748
  %8 = load i8, i8* %6, align 4, !dbg !11749
  %9 = zext i8 %8 to i32, !dbg !11750
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11750
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11751
  br i1 %11, label %18, label %24, !dbg !11752

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11746
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11748
  %14 = load i8, i8* %6, align 4, !dbg !11749
  %15 = zext i8 %14 to i32, !dbg !11750
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11750
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11751
  br i1 %17, label %18, label %24, !dbg !11752, !llvm.loop !11753

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11755
  %21 = load i8, i8* %20, align 1, !dbg !11755
  %22 = icmp eq i8 %21, %1, !dbg !11758
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11759
  br i1 %22, label %24, label %12, !dbg !11760

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11746
  ret i32 %25, !dbg !11761
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11762 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11773, metadata !DIExpression()), !dbg !11789
  call void @llvm.dbg.value(metadata i8 %1, metadata !11774, metadata !DIExpression()), !dbg !11789
  call void @llvm.dbg.value(metadata i32 %2, metadata !11775, metadata !DIExpression()), !dbg !11789
  call void @llvm.dbg.value(metadata i32 0, metadata !11778, metadata !DIExpression()), !dbg !11789
  call void @llvm.dbg.value(metadata i32 0, metadata !11779, metadata !DIExpression()), !dbg !11789
  call void @llvm.dbg.value(metadata i8 0, metadata !11780, metadata !DIExpression()), !dbg !11790
  %4 = icmp eq i8 %1, 0, !dbg !11791
  br i1 %4, label %35, label %5, !dbg !11792

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11791
  br label %9, !dbg !11792

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11780, metadata !DIExpression()), !dbg !11790
  call void @llvm.dbg.value(metadata i32 %29, metadata !11778, metadata !DIExpression()), !dbg !11789
  %8 = icmp eq i32 %34, %6, !dbg !11791
  br i1 %8, label %35, label %9, !dbg !11792, !llvm.loop !11793

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11780, metadata !DIExpression()), !dbg !11790
  call void @llvm.dbg.value(metadata i32 %11, metadata !11778, metadata !DIExpression()), !dbg !11789
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11795
  %13 = load i32, i32* %12, align 4, !dbg !11795
  call void @llvm.dbg.value(metadata i32 %13, metadata !11777, metadata !DIExpression()), !dbg !11789
  %14 = and i32 %13, 31, !dbg !11796
  %15 = icmp ult i32 %14, 16, !dbg !11797
  br i1 %15, label %16, label %20, !dbg !11798

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11799
  %18 = load i32, i32* %17, align 4, !dbg !11799
  %19 = or i32 %18, 32, !dbg !11801
  call void @llvm.dbg.value(metadata i32 %19, metadata !11778, metadata !DIExpression()), !dbg !11789
  br label %28, !dbg !11802

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11803

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11804
  %23 = load i32, i32* %22, align 4, !dbg !11804
  call void @llvm.dbg.value(metadata i32 %23, metadata !11782, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11805
  %24 = lshr i32 %23, 7, !dbg !11806
  %25 = and i32 %24, 16, !dbg !11806
  %26 = or i32 %25, %23, !dbg !11806
  call void @llvm.dbg.value(metadata i32 %26, metadata !11778, metadata !DIExpression()), !dbg !11789
  br label %28, !dbg !11807

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !11789
  call void @llvm.dbg.value(metadata i32 %29, metadata !11778, metadata !DIExpression()), !dbg !11789
  %30 = lshr i32 %13, 5, !dbg !11808
  %31 = and i32 %30, 255, !dbg !11808
  call void @llvm.dbg.value(metadata i32 %31, metadata !11776, metadata !DIExpression()), !dbg !11789
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !11809
  call void @llvm.dbg.value(metadata i32 %32, metadata !11779, metadata !DIExpression()), !dbg !11789
  %33 = icmp slt i32 %32, 0, !dbg !11810
  %34 = add nuw nsw i32 %10, 1, !dbg !11812
  call void @llvm.dbg.value(metadata i32 %34, metadata !11780, metadata !DIExpression()), !dbg !11790
  br i1 %33, label %35, label %7, !dbg !11813

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11814
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11815 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11819, metadata !DIExpression()), !dbg !11823
  call void @llvm.dbg.value(metadata i32 %1, metadata !11820, metadata !DIExpression()), !dbg !11823
  call void @llvm.dbg.value(metadata i32 %2, metadata !11821, metadata !DIExpression()), !dbg !11823
  %4 = icmp ugt i32 %0, 175, !dbg !11824
  br i1 %4, label %16, label %5, !dbg !11826

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11827
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11828
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11828
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11822, metadata !DIExpression()), !dbg !11823
  %9 = add nsw i32 %6, -9, !dbg !11829
  %10 = icmp ult i32 %9, 2, !dbg !11829
  br i1 %10, label %16, label %11, !dbg !11831

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.189(%struct.device* noundef %8) #24, !dbg !11832
  br i1 %12, label %13, label %16, !dbg !11833

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11834
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !11835
  br label %16, !dbg !11836

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11823
  ret i32 %17, !dbg !11837
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.189(%struct.device* noundef %0) unnamed_addr #1 !dbg !11838 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11842, metadata !DIExpression()), !dbg !11843
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11844, !srcloc !11846
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.190(%struct.device* noundef %0) #24, !dbg !11847
  ret i1 %2, !dbg !11848
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.190(%struct.device* noundef %0) unnamed_addr #1 !dbg !11849 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11851, metadata !DIExpression()), !dbg !11852
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11853
  ret i1 %2, !dbg !11854
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !11855 {
  ret void, !dbg !11856
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !11857 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11859, metadata !DIExpression()), !dbg !11864
  call void @llvm.dbg.value(metadata i32 0, metadata !11860, metadata !DIExpression()), !dbg !11864
  call void @llvm.dbg.value(metadata i32 2, metadata !11861, metadata !DIExpression()), !dbg !11864
  call void @llvm.dbg.value(metadata i32 0, metadata !11862, metadata !DIExpression()), !dbg !11864
  call void @llvm.dbg.value(metadata i32 2, metadata !11863, metadata !DIExpression()), !dbg !11864
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11865
  %2 = and i32 %1, 12, !dbg !11866
  call void @llvm.dbg.value(metadata i32 %2, metadata !11859, metadata !DIExpression()), !dbg !11864
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11867

3:                                                ; preds = %0
  br label %21, !dbg !11868

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11870
  call void @llvm.dbg.value(metadata i32 %5, metadata !11862, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11864
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11871
  %7 = and i32 %6, 63, !dbg !11872
  call void @llvm.dbg.value(metadata i32 %7, metadata !11863, metadata !DIExpression()), !dbg !11864
  %8 = and i32 %5, 4194304, !dbg !11873
  %9 = icmp eq i32 %8, 0, !dbg !11873
  %10 = select i1 %9, i32 16000000, i32 12000000
  %11 = udiv i32 %10, %7, !dbg !11875
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11875
  %13 = lshr i32 %12, 6, !dbg !11875
  %14 = and i32 %13, 511, !dbg !11875
  %15 = mul i32 %14, %11, !dbg !11875
  call void @llvm.dbg.value(metadata i32 %15, metadata !11860, metadata !DIExpression()), !dbg !11864
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11876
  %17 = lshr i32 %16, 15, !dbg !11877
  %18 = and i32 %17, 6, !dbg !11877
  %19 = add nuw nsw i32 %18, 2, !dbg !11877
  call void @llvm.dbg.value(metadata i32 %19, metadata !11861, metadata !DIExpression()), !dbg !11864
  %20 = udiv i32 %15, %19, !dbg !11878
  br label %21, !dbg !11879

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 12000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !11880
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11881
  %24 = lshr i32 %23, 4, !dbg !11882
  %25 = and i32 %24, 15, !dbg !11882
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !11883
  %27 = load i8, i8* %26, align 1, !dbg !11883
  %28 = zext i8 %27 to i32, !dbg !11883
  call void @llvm.dbg.value(metadata i32 %28, metadata !11859, metadata !DIExpression()), !dbg !11864
  %29 = lshr i32 %22, %28, !dbg !11884
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !11884
  ret void, !dbg !11885
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11886 {
  ret i32 0, !dbg !11891
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11892 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11918, metadata !DIExpression()), !dbg !11929
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11930
  br i1 %3, label %311, label %4, !dbg !11932

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11933
  %6 = load i32, i32* %5, align 4, !dbg !11933
  %7 = and i32 %6, 1, !dbg !11935
  %8 = icmp eq i32 %7, 0, !dbg !11936
  br i1 %8, label %66, label %9, !dbg !11937

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11938
  %11 = and i32 %10, 12, !dbg !11938
  %12 = icmp eq i32 %11, 4, !dbg !11941
  br i1 %12, label %21, label %13, !dbg !11942

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11943
  %15 = and i32 %14, 12, !dbg !11943
  %16 = icmp eq i32 %15, 8, !dbg !11944
  br i1 %16, label %17, label %29, !dbg !11945

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11946
  %19 = and i32 %18, 4194304, !dbg !11947
  %20 = icmp eq i32 %19, 0, !dbg !11948
  br i1 %20, label %29, label %21, !dbg !11949

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11950
  %23 = and i32 %22, 131072, !dbg !11950
  %24 = icmp eq i32 %23, 0, !dbg !11950
  br i1 %24, label %66, label %25, !dbg !11953

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11954
  %27 = load i32, i32* %26, align 4, !dbg !11954
  %28 = icmp eq i32 %27, 0, !dbg !11955
  br i1 %28, label %311, label %66, !dbg !11956

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11957
  %31 = load i32, i32* %30, align 4, !dbg !11957
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !11961

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11962
  %34 = or i32 %33, 65536, !dbg !11962
  br label %45, !dbg !11962

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11964
  %37 = or i32 %36, 262144, !dbg !11964
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11964
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11964
  %39 = or i32 %38, 65536, !dbg !11964
  br label %45, !dbg !11964

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11967
  %42 = and i32 %41, -65537, !dbg !11967
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11967
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11967
  %44 = and i32 %43, -262145, !dbg !11967
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11969
  %47 = load i32, i32* %30, align 4, !dbg !11970
  %48 = icmp eq i32 %47, 0, !dbg !11972
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !11973
  call void @llvm.dbg.value(metadata i32 %49, metadata !11919, metadata !DIExpression()), !dbg !11929
  call void @llvm.dbg.value(metadata i32 %49, metadata !11919, metadata !DIExpression()), !dbg !11929
  br i1 %48, label %58, label %50, !dbg !11974

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11975
  %52 = and i32 %51, 131072, !dbg !11977
  %53 = icmp eq i32 %52, 0, !dbg !11977
  br i1 %53, label %54, label %66, !dbg !11978

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !11979
  %56 = sub i32 %55, %49, !dbg !11982
  %57 = icmp ugt i32 %56, 100, !dbg !11983
  br i1 %57, label %311, label %50, !dbg !11984, !llvm.loop !11985

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11987
  %60 = and i32 %59, 131072, !dbg !11987
  %61 = icmp eq i32 %60, 0, !dbg !11987
  br i1 %61, label %66, label %62, !dbg !11989

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !11990
  %64 = sub i32 %63, %49, !dbg !11993
  %65 = icmp ugt i32 %64, 100, !dbg !11994
  br i1 %65, label %311, label %58, !dbg !11995, !llvm.loop !11996

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !11998
  %68 = and i32 %67, 2, !dbg !12000
  %69 = icmp eq i32 %68, 0, !dbg !12001
  br i1 %69, label %121, label %70, !dbg !12002

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12003
  %72 = and i32 %71, 12, !dbg !12003
  %73 = icmp eq i32 %72, 0, !dbg !12006
  br i1 %73, label %82, label %74, !dbg !12007

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12008
  %76 = and i32 %75, 12, !dbg !12008
  %77 = icmp eq i32 %76, 8, !dbg !12009
  br i1 %77, label %78, label %90, !dbg !12010

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12011
  %80 = and i32 %79, 4194304, !dbg !12012
  %81 = icmp eq i32 %80, 0, !dbg !12013
  br i1 %81, label %82, label %90, !dbg !12014

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12015
  %84 = and i32 %83, 2, !dbg !12015
  %85 = icmp eq i32 %84, 0, !dbg !12015
  br i1 %85, label %114, label %86, !dbg !12018

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12019
  %88 = load i32, i32* %87, align 4, !dbg !12019
  %89 = icmp eq i32 %88, 1, !dbg !12020
  br i1 %89, label %114, label %311, !dbg !12021

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12022
  %92 = load i32, i32* %91, align 4, !dbg !12022
  %93 = icmp eq i32 %92, 0, !dbg !12025
  br i1 %93, label %104, label %94, !dbg !12026

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12027
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !12029
  call void @llvm.dbg.value(metadata i32 %95, metadata !11919, metadata !DIExpression()), !dbg !11929
  br label %96, !dbg !12030

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12031
  %98 = and i32 %97, 2, !dbg !12032
  %99 = icmp eq i32 %98, 0, !dbg !12032
  br i1 %99, label %100, label %114, !dbg !12030

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !12033
  %102 = sub i32 %101, %95, !dbg !12036
  %103 = icmp ugt i32 %102, 2, !dbg !12037
  br i1 %103, label %311, label %96, !dbg !12038, !llvm.loop !12039

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12041
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !12043
  call void @llvm.dbg.value(metadata i32 %105, metadata !11919, metadata !DIExpression()), !dbg !11929
  br label %106, !dbg !12044

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12045
  %108 = and i32 %107, 2, !dbg !12045
  %109 = icmp eq i32 %108, 0, !dbg !12045
  br i1 %109, label %121, label %110, !dbg !12044

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !12046
  %112 = sub i32 %111, %105, !dbg !12049
  %113 = icmp ugt i32 %112, 2, !dbg !12050
  br i1 %113, label %311, label %106, !dbg !12051, !llvm.loop !12052

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12054
  %116 = and i32 %115, -249, !dbg !12054
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12054
  %118 = load i32, i32* %117, align 4, !dbg !12054
  %119 = shl i32 %118, 3, !dbg !12054
  %120 = or i32 %119, %116, !dbg !12054
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12054
  br label %121, !dbg !12055

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12055
  %123 = and i32 %122, 8, !dbg !12057
  %124 = icmp eq i32 %123, 0, !dbg !12058
  br i1 %124, label %149, label %125, !dbg !12059

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12060
  %127 = load i32, i32* %126, align 4, !dbg !12060
  %128 = icmp eq i32 %127, 0, !dbg !12063
  br i1 %128, label %139, label %129, !dbg !12064

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12065
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !12067
  call void @llvm.dbg.value(metadata i32 %130, metadata !11919, metadata !DIExpression()), !dbg !11929
  br label %131, !dbg !12068

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12069
  %133 = and i32 %132, 2, !dbg !12070
  %134 = icmp eq i32 %133, 0, !dbg !12070
  br i1 %134, label %135, label %149, !dbg !12068

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !12071
  %137 = sub i32 %136, %130, !dbg !12074
  %138 = icmp ugt i32 %137, 2, !dbg !12075
  br i1 %138, label %311, label %131, !dbg !12076, !llvm.loop !12077

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12079
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !12081
  call void @llvm.dbg.value(metadata i32 %140, metadata !11919, metadata !DIExpression()), !dbg !11929
  br label %141, !dbg !12082

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12083
  %143 = and i32 %142, 2, !dbg !12083
  %144 = icmp eq i32 %143, 0, !dbg !12083
  br i1 %144, label %149, label %145, !dbg !12082

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !12084
  %147 = sub i32 %146, %140, !dbg !12087
  %148 = icmp ugt i32 %147, 2, !dbg !12088
  br i1 %148, label %311, label %141, !dbg !12089, !llvm.loop !12090

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12092
  %151 = and i32 %150, 4, !dbg !12093
  %152 = icmp eq i32 %151, 0, !dbg !12094
  br i1 %152, label %221, label %153, !dbg !12095

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !11921, metadata !DIExpression()), !dbg !12096
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12097
  %155 = and i32 %154, 268435456, !dbg !12097
  %156 = icmp eq i32 %155, 0, !dbg !12097
  br i1 %156, label %157, label %164, !dbg !12098

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12099
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12099
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11925, metadata !DIExpression()), !dbg !12099
  store volatile i32 0, i32* %2, align 4, !dbg !12099
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12099
  %160 = or i32 %159, 268435456, !dbg !12099
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12099
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12099
  %162 = and i32 %161, 268435456, !dbg !12099
  store volatile i32 %162, i32* %2, align 4, !dbg !12099
  %163 = load volatile i32, i32* %2, align 4, !dbg !12099
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12100
  call void @llvm.dbg.value(metadata i32 1, metadata !11921, metadata !DIExpression()), !dbg !12096
  br label %164, !dbg !12101

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !11921, metadata !DIExpression()), !dbg !12096
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12102
  %166 = and i32 %165, 256, !dbg !12102
  %167 = icmp eq i32 %166, 0, !dbg !12102
  br i1 %167, label %168, label %180, !dbg !12104

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12105
  %170 = or i32 %169, 256, !dbg !12105
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12105
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !12107
  call void @llvm.dbg.value(metadata i32 %171, metadata !11919, metadata !DIExpression()), !dbg !11929
  br label %172, !dbg !12108

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12109
  %174 = and i32 %173, 256, !dbg !12109
  %175 = icmp eq i32 %174, 0, !dbg !12109
  br i1 %175, label %176, label %180, !dbg !12108

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !12110
  %178 = sub i32 %177, %171, !dbg !12113
  %179 = icmp ugt i32 %178, 2, !dbg !12114
  br i1 %179, label %311, label %172, !dbg !12115, !llvm.loop !12116

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12118
  %182 = load i32, i32* %181, align 4, !dbg !12118
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12121

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12122
  %185 = or i32 %184, 1, !dbg !12122
  br label %196, !dbg !12122

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12124
  %188 = or i32 %187, 4, !dbg !12124
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12124
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12124
  %190 = or i32 %189, 1, !dbg !12124
  br label %196, !dbg !12124

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12127
  %193 = and i32 %192, -2, !dbg !12127
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12127
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12127
  %195 = and i32 %194, -5, !dbg !12127
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12129
  %198 = load i32, i32* %181, align 4, !dbg !12130
  %199 = icmp eq i32 %198, 0, !dbg !12132
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !12133
  call void @llvm.dbg.value(metadata i32 %200, metadata !11919, metadata !DIExpression()), !dbg !11929
  call void @llvm.dbg.value(metadata i32 %200, metadata !11919, metadata !DIExpression()), !dbg !11929
  br i1 %199, label %209, label %201, !dbg !12134

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12135
  %203 = and i32 %202, 2, !dbg !12137
  %204 = icmp eq i32 %203, 0, !dbg !12137
  br i1 %204, label %205, label %217, !dbg !12138

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !12139
  %207 = sub i32 %206, %200, !dbg !12142
  %208 = icmp ugt i32 %207, 5000, !dbg !12143
  br i1 %208, label %311, label %201, !dbg !12144, !llvm.loop !12145

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12147
  %211 = and i32 %210, 2, !dbg !12147
  %212 = icmp eq i32 %211, 0, !dbg !12147
  br i1 %212, label %217, label %213, !dbg !12149

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !12150
  %215 = sub i32 %214, %200, !dbg !12153
  %216 = icmp ugt i32 %215, 5000, !dbg !12154
  br i1 %216, label %311, label %209, !dbg !12155, !llvm.loop !12156

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12158

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12159
  %220 = and i32 %219, -268435457, !dbg !12159
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12159
  br label %221, !dbg !12162

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12163
  %223 = load i32, i32* %222, align 4, !dbg !12163
  %224 = icmp eq i32 %223, 0, !dbg !12165
  br i1 %224, label %310, label %225, !dbg !12166

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12167
  %227 = and i32 %226, 12, !dbg !12167
  %228 = icmp eq i32 %227, 8, !dbg !12170
  br i1 %228, label %277, label %229, !dbg !12171

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12172
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12175
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !12175
  call void @llvm.dbg.value(metadata i32 %231, metadata !11919, metadata !DIExpression()), !dbg !11929
  call void @llvm.dbg.value(metadata i32 %231, metadata !11919, metadata !DIExpression()), !dbg !11929
  br i1 %230, label %232, label %269, !dbg !12176

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12177
  %234 = and i32 %233, 33554432, !dbg !12177
  %235 = icmp eq i32 %234, 0, !dbg !12177
  br i1 %235, label %240, label %236, !dbg !12179

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !12180
  %238 = sub i32 %237, %231, !dbg !12183
  %239 = icmp ugt i32 %238, 2, !dbg !12184
  br i1 %239, label %311, label %232, !dbg !12185, !llvm.loop !12186

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12188
  %242 = load i32, i32* %241, align 4, !dbg !12188
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12188
  %244 = load i32, i32* %243, align 4, !dbg !12188
  %245 = or i32 %244, %242, !dbg !12188
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12188
  %247 = load i32, i32* %246, align 4, !dbg !12188
  %248 = shl i32 %247, 6, !dbg !12188
  %249 = or i32 %245, %248, !dbg !12188
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12188
  %251 = load i32, i32* %250, align 4, !dbg !12188
  %252 = shl i32 %251, 15, !dbg !12188
  %253 = add i32 %252, -65536, !dbg !12188
  %254 = and i32 %253, -65536, !dbg !12188
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12188
  %256 = load i32, i32* %255, align 4, !dbg !12188
  %257 = shl i32 %256, 24, !dbg !12188
  %258 = or i32 %249, %257, !dbg !12188
  %259 = or i32 %258, %254, !dbg !12188
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12188
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12189
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !12190
  call void @llvm.dbg.value(metadata i32 %260, metadata !11919, metadata !DIExpression()), !dbg !11929
  br label %261, !dbg !12191

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12192
  %263 = and i32 %262, 33554432, !dbg !12193
  %264 = icmp eq i32 %263, 0, !dbg !12193
  br i1 %264, label %265, label %310, !dbg !12191

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !12194
  %267 = sub i32 %266, %260, !dbg !12197
  %268 = icmp ugt i32 %267, 2, !dbg !12198
  br i1 %268, label %311, label %261, !dbg !12199, !llvm.loop !12200

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12202
  %271 = and i32 %270, 33554432, !dbg !12202
  %272 = icmp eq i32 %271, 0, !dbg !12202
  br i1 %272, label %310, label %273, !dbg !12204

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !12205
  %275 = sub i32 %274, %231, !dbg !12208
  %276 = icmp ugt i32 %275, 2, !dbg !12209
  br i1 %276, label %311, label %269, !dbg !12210, !llvm.loop !12211

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12213
  br i1 %278, label %311, label %279, !dbg !12216

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12217
  call void @llvm.dbg.value(metadata i32 %280, metadata !11920, metadata !DIExpression()), !dbg !11929
  %281 = and i32 %280, 4194304, !dbg !12219
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12221
  %283 = load i32, i32* %282, align 4, !dbg !12221
  %284 = icmp eq i32 %281, %283, !dbg !12222
  br i1 %284, label %285, label %311, !dbg !12223

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12224
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12225
  %288 = load i32, i32* %287, align 4, !dbg !12225
  %289 = icmp eq i32 %286, %288, !dbg !12226
  br i1 %289, label %290, label %311, !dbg !12227

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12228
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12229
  %293 = load i32, i32* %292, align 4, !dbg !12229
  %294 = shl i32 %293, 6, !dbg !12230
  %295 = icmp eq i32 %291, %294, !dbg !12231
  br i1 %295, label %296, label %311, !dbg !12232

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12233
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12234
  %299 = load i32, i32* %298, align 4, !dbg !12234
  %300 = shl i32 %299, 15, !dbg !12235
  %301 = add i32 %300, -65536, !dbg !12235
  %302 = and i32 %301, -65536, !dbg !12235
  %303 = icmp eq i32 %297, %302, !dbg !12236
  br i1 %303, label %304, label %311, !dbg !12237

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12238
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12239
  %307 = load i32, i32* %306, align 4, !dbg !12239
  %308 = shl i32 %307, 24, !dbg !12240
  %309 = icmp eq i32 %305, %308, !dbg !12241
  br i1 %309, label %310, label %311, !dbg !12242

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !12243

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !11929
  ret i32 %312, !dbg !12244
}

; Function Attrs: optsize
declare !dbg !12245 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.ztest_unit_test_stats* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12247 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test_stats* %0, metadata !12260, metadata !DIExpression()), !dbg !12263
  call void @llvm.dbg.value(metadata i32 %1, metadata !12261, metadata !DIExpression()), !dbg !12263
  %3 = icmp eq %struct.ztest_unit_test_stats* %0, null, !dbg !12264
  br i1 %3, label %115, label %4, !dbg !12266

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12267
  %6 = and i32 %5, 7, !dbg !12267
  %7 = icmp ult i32 %6, %1, !dbg !12269
  br i1 %7, label %8, label %13, !dbg !12270

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12271
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12271
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12273
  %11 = and i32 %10, 7, !dbg !12273
  %12 = icmp eq i32 %11, %1, !dbg !12275
  br i1 %12, label %13, label %115, !dbg !12276

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 0, !dbg !12277
  %15 = load i32, i32* %14, align 4, !dbg !12277
  %16 = and i32 %15, 2, !dbg !12279
  %17 = icmp eq i32 %16, 0, !dbg !12280
  br i1 %17, label %39, label %18, !dbg !12281

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12282
  %20 = icmp eq i32 %19, 0, !dbg !12285
  br i1 %20, label %25, label %21, !dbg !12286

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12287
  %23 = or i32 %22, 7168, !dbg !12287
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12287
  %24 = load i32, i32* %14, align 4, !dbg !12289
  br label %25, !dbg !12291

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12289
  %27 = and i32 %26, 8, !dbg !12292
  %28 = icmp eq i32 %27, 0, !dbg !12293
  br i1 %28, label %32, label %29, !dbg !12294

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12295
  %31 = or i32 %30, 57344, !dbg !12295
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12295
  br label %32, !dbg !12297

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12298
  %34 = and i32 %33, -241, !dbg !12298
  %35 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 2, !dbg !12298
  %36 = load i32, i32* %35, align 4, !dbg !12298
  %37 = or i32 %34, %36, !dbg !12298
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12298
  %38 = load i32, i32* %14, align 4, !dbg !12299
  br label %39, !dbg !12301

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12299
  %41 = and i32 %40, 1, !dbg !12302
  %42 = icmp eq i32 %41, 0, !dbg !12303
  br i1 %42, label %73, label %43, !dbg !12304

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 1, !dbg !12305
  %45 = load i32, i32* %44, align 4, !dbg !12305
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12308

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12309
  %48 = and i32 %47, 131072, !dbg !12312
  %49 = icmp eq i32 %48, 0, !dbg !12312
  br i1 %49, label %115, label %58, !dbg !12313

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12314
  %52 = and i32 %51, 33554432, !dbg !12318
  %53 = icmp eq i32 %52, 0, !dbg !12318
  br i1 %53, label %115, label %58, !dbg !12319

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12320
  %56 = and i32 %55, 2, !dbg !12323
  %57 = icmp eq i32 %56, 0, !dbg !12323
  br i1 %57, label %115, label %58, !dbg !12324

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12325
  %60 = and i32 %59, -4, !dbg !12325
  %61 = or i32 %60, %45, !dbg !12325
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12325
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !12326
  call void @llvm.dbg.value(metadata i32 %62, metadata !12262, metadata !DIExpression()), !dbg !12263
  br label %63, !dbg !12327

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12328
  %65 = and i32 %64, 12, !dbg !12328
  %66 = load i32, i32* %44, align 4, !dbg !12329
  %67 = shl i32 %66, 2, !dbg !12330
  %68 = icmp eq i32 %65, %67, !dbg !12331
  br i1 %68, label %73, label %69, !dbg !12327

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !12332
  %71 = sub i32 %70, %62, !dbg !12335
  %72 = icmp ugt i32 %71, 5000, !dbg !12336
  br i1 %72, label %115, label %63, !dbg !12337, !llvm.loop !12338

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12340
  %75 = and i32 %74, 7, !dbg !12340
  %76 = icmp ugt i32 %75, %1, !dbg !12342
  br i1 %76, label %77, label %82, !dbg !12343

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12344
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12344
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12346
  %80 = and i32 %79, 7, !dbg !12346
  %81 = icmp eq i32 %80, %1, !dbg !12348
  br i1 %81, label %82, label %115, !dbg !12349

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12350
  %84 = and i32 %83, 4, !dbg !12352
  %85 = icmp eq i32 %84, 0, !dbg !12353
  br i1 %85, label %93, label %86, !dbg !12354

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12355
  %88 = and i32 %87, -7169, !dbg !12355
  %89 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 3, !dbg !12355
  %90 = load i32, i32* %89, align 4, !dbg !12355
  %91 = or i32 %88, %90, !dbg !12355
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12355
  %92 = load i32, i32* %14, align 4, !dbg !12357
  br label %93, !dbg !12359

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12357
  %95 = and i32 %94, 8, !dbg !12360
  %96 = icmp eq i32 %95, 0, !dbg !12361
  br i1 %96, label %104, label %97, !dbg !12362

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12363
  %99 = and i32 %98, -57345, !dbg !12363
  %100 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 4, !dbg !12363
  %101 = load i32, i32* %100, align 4, !dbg !12363
  %102 = shl i32 %101, 3, !dbg !12363
  %103 = or i32 %102, %99, !dbg !12363
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12363
  br label %104, !dbg !12365

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !12366
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12367
  %107 = lshr i32 %106, 4, !dbg !12368
  %108 = and i32 %107, 15, !dbg !12368
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12369
  %110 = load i8, i8* %109, align 1, !dbg !12369
  %111 = zext i8 %110 to i32, !dbg !12369
  %112 = lshr i32 %105, %111, !dbg !12370
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12371
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12372
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !12373
  br label %115, !dbg !12374

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12263
  ret i32 %116, !dbg !12375
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12376 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12378, metadata !DIExpression()), !dbg !12382
  call void @llvm.dbg.value(metadata i32 0, metadata !12379, metadata !DIExpression()), !dbg !12382
  call void @llvm.dbg.value(metadata i32 0, metadata !12380, metadata !DIExpression()), !dbg !12382
  call void @llvm.dbg.value(metadata i32 0, metadata !12381, metadata !DIExpression()), !dbg !12382
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12383
  %2 = and i32 %1, 12, !dbg !12384
  switch i32 %2, label %24 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12385

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 12000000, metadata !12381, metadata !DIExpression()), !dbg !12382
  br label %24, !dbg !12386

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12389
  %6 = and i32 %5, 63, !dbg !12391
  call void @llvm.dbg.value(metadata i32 %6, metadata !12378, metadata !DIExpression()), !dbg !12382
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12392
  %8 = and i32 %7, 4194304, !dbg !12392
  %9 = icmp eq i32 %8, 0, !dbg !12394
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12395
  %11 = lshr i32 %10, 6, !dbg !12395
  %12 = and i32 %11, 511, !dbg !12395
  %13 = zext i32 %12 to i64, !dbg !12395
  %14 = select i1 %9, i64 16000000, i64 12000000
  %15 = mul nuw nsw i64 %14, %13, !dbg !12395
  %16 = zext i32 %6 to i64, !dbg !12395
  %17 = udiv i64 %15, %16, !dbg !12395
  %18 = trunc i64 %17 to i32, !dbg !12395
  call void @llvm.dbg.value(metadata i32 %18, metadata !12379, metadata !DIExpression()), !dbg !12382
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12396
  %20 = lshr i32 %19, 15, !dbg !12397
  %21 = and i32 %20, 6, !dbg !12397
  %22 = add nuw nsw i32 %21, 2, !dbg !12397
  call void @llvm.dbg.value(metadata i32 %22, metadata !12380, metadata !DIExpression()), !dbg !12382
  %23 = udiv i32 %18, %22, !dbg !12398
  call void @llvm.dbg.value(metadata i32 %23, metadata !12381, metadata !DIExpression()), !dbg !12382
  br label %24, !dbg !12399

24:                                               ; preds = %0, %4, %3
  %25 = phi i32 [ %23, %4 ], [ 12000000, %3 ], [ 16000000, %0 ], !dbg !12400
  call void @llvm.dbg.value(metadata i32 %25, metadata !12381, metadata !DIExpression()), !dbg !12382
  ret i32 %25, !dbg !12401
}

; Function Attrs: optsize
declare !dbg !12402 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12405 {
  %4 = alloca %struct.ztest_unit_test_stats, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12409, metadata !DIExpression()), !dbg !12429
  call void @llvm.dbg.value(metadata i32 %1, metadata !12410, metadata !DIExpression()), !dbg !12429
  call void @llvm.dbg.value(metadata i32 %2, metadata !12411, metadata !DIExpression()), !dbg !12429
  %7 = bitcast %struct.ztest_unit_test_stats* %4 to i8*, !dbg !12430
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #23, !dbg !12430
  call void @llvm.dbg.declare(metadata %struct.ztest_unit_test_stats* %4, metadata !12412, metadata !DIExpression()), !dbg !12431
  %8 = icmp eq i32 %0, 0, !dbg !12432
  br i1 %8, label %9, label %23, !dbg !12433

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !12434
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !12434
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12422, metadata !DIExpression()), !dbg !12434
  store volatile i32 0, i32* %5, align 4, !dbg !12434
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12434
  %12 = or i32 %11, 1, !dbg !12434
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12434
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12434
  %14 = and i32 %13, 1, !dbg !12434
  store volatile i32 %14, i32* %5, align 4, !dbg !12434
  %15 = load volatile i32, i32* %5, align 4, !dbg !12434
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !12435
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 0, !dbg !12436
  store i32 256, i32* %16, align 4, !dbg !12437
  %17 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 1, !dbg !12438
  store i32 2, i32* %17, align 4, !dbg !12439
  %18 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 3, !dbg !12440
  store i32 3, i32* %18, align 4, !dbg !12441
  %19 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 2, !dbg !12442
  store i32 0, i32* %19, align 4, !dbg !12443
  %20 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 4, !dbg !12444
  store i32 0, i32* %20, align 4, !dbg !12445
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.ztest_unit_test_stats* noundef nonnull %4) #25, !dbg !12446
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12447
  %22 = and i32 %21, -123731969, !dbg !12447
  br label %38, !dbg !12448

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !12449
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !12449
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12426, metadata !DIExpression()), !dbg !12449
  store volatile i32 0, i32* %6, align 4, !dbg !12449
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12449
  %26 = or i32 %25, 4, !dbg !12449
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12449
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12449
  %28 = and i32 %27, 4, !dbg !12449
  store volatile i32 %28, i32* %6, align 4, !dbg !12449
  %29 = load volatile i32, i32* %6, align 4, !dbg !12449
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !12450
  %30 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 0, !dbg !12451
  store i32 512, i32* %30, align 4, !dbg !12452
  %31 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 1, !dbg !12453
  store i32 2, i32* %31, align 4, !dbg !12454
  %32 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 3, !dbg !12455
  store i32 3, i32* %32, align 4, !dbg !12456
  %33 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 2, !dbg !12457
  store i32 0, i32* %33, align 4, !dbg !12458
  %34 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 4, !dbg !12459
  store i32 0, i32* %34, align 4, !dbg !12460
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.ztest_unit_test_stats* noundef nonnull %4) #25, !dbg !12461
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12462
  %36 = and i32 %35, 134217727, !dbg !12462
  %37 = shl i32 %2, 3, !dbg !12462
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !12463
  %42 = or i32 %41, %40, !dbg !12463
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12463
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #23, !dbg !12464
  ret void, !dbg !12464
}

; Function Attrs: optsize
declare !dbg !12465 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.ztest_unit_test_stats* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #14 !dbg !12469 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12470
  ret void, !dbg !12471
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #14 !dbg !12472 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12473
  ret void, !dbg !12474
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #8 !dbg !12475 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12476
  ret i32 %1, !dbg !12477
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #15 !dbg !12478 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12479
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12480
  %3 = lshr i32 %2, 10, !dbg !12481
  %4 = and i32 %3, 7, !dbg !12481
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12482
  %6 = load i8, i8* %5, align 1, !dbg !12482
  %7 = zext i8 %6 to i32, !dbg !12482
  %8 = lshr i32 %1, %7, !dbg !12483
  ret i32 %8, !dbg !12484
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #15 !dbg !12485 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12486
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12487
  %3 = lshr i32 %2, 13, !dbg !12488
  %4 = and i32 %3, 7, !dbg !12488
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12489
  %6 = load i8, i8* %5, align 1, !dbg !12489
  %7 = zext i8 %6 to i32, !dbg !12489
  %8 = lshr i32 %1, %7, !dbg !12490
  ret i32 %8, !dbg !12491
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12492 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12496, metadata !DIExpression()), !dbg !12497
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12498
  store i32 15, i32* %2, align 4, !dbg !12499
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12500
  %4 = and i32 %3, 262144, !dbg !12502
  %5 = icmp eq i32 %4, 0, !dbg !12503
  br i1 %5, label %8, label %6, !dbg !12504

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12505
  store i32 327680, i32* %7, align 4, !dbg !12507
  br label %15, !dbg !12508

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12509
  %10 = and i32 %9, 65536, !dbg !12511
  %11 = icmp eq i32 %10, 0, !dbg !12512
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12513
  br i1 %11, label %14, label %13, !dbg !12514

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12515
  br label %15, !dbg !12517

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12518
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12520
  %17 = and i32 %16, 1, !dbg !12522
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12523
  store i32 %17, i32* %18, align 4, !dbg !12525
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12526
  %20 = lshr i32 %19, 3, !dbg !12527
  %21 = and i32 %20, 31, !dbg !12527
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12528
  store i32 %21, i32* %22, align 4, !dbg !12529
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12530
  %24 = and i32 %23, 4, !dbg !12532
  %25 = icmp eq i32 %24, 0, !dbg !12533
  br i1 %25, label %28, label %26, !dbg !12534

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12535
  store i32 5, i32* %27, align 4, !dbg !12537
  br label %35, !dbg !12538

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12539
  %30 = and i32 %29, 1, !dbg !12541
  %31 = icmp eq i32 %30, 0, !dbg !12542
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12543
  br i1 %31, label %34, label %33, !dbg !12544

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12545
  br label %35, !dbg !12547

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12548
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12550
  %37 = and i32 %36, 1, !dbg !12552
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12553
  store i32 %37, i32* %38, align 4, !dbg !12555
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12556
  %40 = and i32 %39, 16777216, !dbg !12558
  %41 = icmp eq i32 %40, 0, !dbg !12559
  %42 = select i1 %41, i32 1, i32 2, !dbg !12560
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12561
  store i32 %42, i32* %43, align 4, !dbg !12563
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12564
  %45 = and i32 %44, 4194304, !dbg !12565
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12566
  store i32 %45, i32* %46, align 4, !dbg !12567
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12568
  %48 = and i32 %47, 63, !dbg !12569
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12570
  store i32 %48, i32* %49, align 4, !dbg !12571
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12572
  %51 = lshr i32 %50, 6, !dbg !12573
  %52 = and i32 %51, 511, !dbg !12573
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12574
  store i32 %52, i32* %53, align 4, !dbg !12575
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12576
  %55 = shl i32 %54, 1, !dbg !12577
  %56 = and i32 %55, 393216, !dbg !12577
  %57 = add nuw nsw i32 %56, 131072, !dbg !12577
  %58 = lshr exact i32 %57, 16, !dbg !12578
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12579
  store i32 %58, i32* %59, align 4, !dbg !12580
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12581
  %61 = lshr i32 %60, 24, !dbg !12582
  %62 = and i32 %61, 15, !dbg !12582
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12583
  store i32 %62, i32* %63, align 4, !dbg !12584
  ret void, !dbg !12585
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.ztest_unit_test_stats* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #15 !dbg !12586 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test_stats* %0, metadata !12590, metadata !DIExpression()), !dbg !12592
  call void @llvm.dbg.value(metadata i32* %1, metadata !12591, metadata !DIExpression()), !dbg !12592
  %3 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 0, !dbg !12593
  store i32 15, i32* %3, align 4, !dbg !12594
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12595
  %5 = and i32 %4, 3, !dbg !12596
  %6 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 1, !dbg !12597
  store i32 %5, i32* %6, align 4, !dbg !12598
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12599
  %8 = and i32 %7, 240, !dbg !12600
  %9 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 2, !dbg !12601
  store i32 %8, i32* %9, align 4, !dbg !12602
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12603
  %11 = and i32 %10, 7168, !dbg !12604
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 3, !dbg !12605
  store i32 %11, i32* %12, align 4, !dbg !12606
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12607
  %14 = lshr i32 %13, 3, !dbg !12608
  %15 = and i32 %14, 7168, !dbg !12608
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 4, !dbg !12609
  store i32 %15, i32* %16, align 4, !dbg !12610
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12611
  %18 = and i32 %17, 7, !dbg !12612
  store i32 %18, i32* %1, align 4, !dbg !12613
  ret void, !dbg !12614
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !12615 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12616
  %2 = and i32 %1, 128, !dbg !12616
  %3 = icmp eq i32 %2, 0, !dbg !12616
  br i1 %3, label %5, label %4, !dbg !12618

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !12619
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !12621
  br label %5, !dbg !12622

5:                                                ; preds = %4, %0
  ret void, !dbg !12623
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !12624 {
  ret void, !dbg !12625
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #14 !dbg !12626 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12629, metadata !DIExpression()), !dbg !12630
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !12631
  ret void, !dbg !12632
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #14 !dbg !12633 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12636, metadata !DIExpression()), !dbg !12638
  call void @llvm.dbg.value(metadata i32 1000, metadata !12637, metadata !DIExpression()), !dbg !12638
  %2 = udiv i32 %0, 1000, !dbg !12639
  %3 = add nsw i32 %2, -1, !dbg !12640
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12641
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12642
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12643
  ret void, !dbg !12644
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !12645 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12647, metadata !DIExpression()), !dbg !12649
  %3 = bitcast i32* %2 to i8*, !dbg !12650
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12650
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12648, metadata !DIExpression()), !dbg !12651
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12652
  store volatile i32 %4, i32* %2, align 4, !dbg !12651
  %5 = load volatile i32, i32* %2, align 4, !dbg !12653
  %6 = icmp eq i32 %0, -1, !dbg !12654
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12647, metadata !DIExpression()), !dbg !12649
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12649
  call void @llvm.dbg.value(metadata i32 %8, metadata !12647, metadata !DIExpression()), !dbg !12649
  br label %9, !dbg !12656

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12647, metadata !DIExpression()), !dbg !12649
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12657
  call void @llvm.dbg.value(metadata i32 undef, metadata !12647, metadata !DIExpression()), !dbg !12649
  %12 = shl i32 %11, 15, !dbg !12649
  %13 = ashr i32 %12, 31, !dbg !12649
  %14 = add i32 %13, %10, !dbg !12649
  call void @llvm.dbg.value(metadata i32 %14, metadata !12647, metadata !DIExpression()), !dbg !12649
  %15 = icmp eq i32 %14, 0, !dbg !12656
  br i1 %15, label %16, label %9, !dbg !12656

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12660
  ret void, !dbg !12660
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !12661 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12663, metadata !DIExpression()), !dbg !12664
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12665
  ret void, !dbg !12666
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #14 !dbg !12667 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12672, metadata !DIExpression()), !dbg !12677
  call void @llvm.dbg.value(metadata i32 0, metadata !12675, metadata !DIExpression()), !dbg !12677
  call void @llvm.dbg.value(metadata i32 0, metadata !12676, metadata !DIExpression()), !dbg !12677
  %2 = icmp eq i32 %0, 0, !dbg !12678
  br i1 %2, label %52, label %3, !dbg !12680

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12681
  %5 = icmp eq i32 %4, 16384, !dbg !12684
  br i1 %5, label %6, label %21, !dbg !12685

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !12686
  %8 = select i1 %7, i32 0, i32 5, !dbg !12689
  call void @llvm.dbg.value(metadata i32 %8, metadata !12675, metadata !DIExpression()), !dbg !12677
  %9 = add i32 %0, -120000001, !dbg !12690
  %10 = icmp ult i32 %9, 30000000, !dbg !12690
  %11 = select i1 %10, i32 4, i32 %8, !dbg !12690
  call void @llvm.dbg.value(metadata i32 %11, metadata !12675, metadata !DIExpression()), !dbg !12677
  %12 = icmp ult i32 %9, -30000000, !dbg !12692
  %13 = select i1 %12, i32 %11, i32 3, !dbg !12692
  call void @llvm.dbg.value(metadata i32 %13, metadata !12675, metadata !DIExpression()), !dbg !12677
  %14 = icmp ugt i32 %0, 60000000, !dbg !12694
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !12696
  br i1 %16, label %21, label %17, !dbg !12696

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !12697
  %19 = and i1 %18, %15, !dbg !12700
  %20 = select i1 %19, i32 1, i32 %13, !dbg !12700
  br label %21, !dbg !12700

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !12677
  call void @llvm.dbg.value(metadata i32 %22, metadata !12675, metadata !DIExpression()), !dbg !12677
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12701
  %24 = icmp eq i32 %23, 0, !dbg !12703
  br i1 %24, label %25, label %41, !dbg !12704

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 12000000, !dbg !12705
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !12708
  %29 = select i1 %28, i32 4, i32 %22, !dbg !12708
  call void @llvm.dbg.value(metadata i32 %29, metadata !12675, metadata !DIExpression()), !dbg !12677
  %30 = icmp ugt i32 %0, 90000000, !dbg !12709
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !12711
  %33 = select i1 %32, i32 3, i32 %29, !dbg !12711
  call void @llvm.dbg.value(metadata i32 %33, metadata !12675, metadata !DIExpression()), !dbg !12677
  %34 = icmp ugt i32 %0, 60000000, !dbg !12712
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !12714
  br i1 %36, label %41, label %37, !dbg !12714

37:                                               ; preds = %25
  %38 = icmp ugt i32 %0, 30000000, !dbg !12715
  %39 = and i1 %38, %35, !dbg !12718
  %40 = select i1 %39, i32 1, i32 %33, !dbg !12718
  br label %41, !dbg !12718

41:                                               ; preds = %37, %25, %21
  %42 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %40, %37 ], !dbg !12719
  call void @llvm.dbg.value(metadata i32 %42, metadata !12675, metadata !DIExpression()), !dbg !12677
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %42) #24, !dbg !12720
  call void @llvm.dbg.value(metadata i32 2, metadata !12673, metadata !DIExpression()), !dbg !12677
  br label %43, !dbg !12721

43:                                               ; preds = %43, %41
  %44 = phi i32 [ 2, %41 ], [ %46, %43 ], !dbg !12719
  call void @llvm.dbg.value(metadata i32 %44, metadata !12673, metadata !DIExpression()), !dbg !12677
  %45 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !12722
  call void @llvm.dbg.value(metadata i32 %45, metadata !12674, metadata !DIExpression()), !dbg !12677
  %46 = add nsw i32 %44, -1, !dbg !12724
  call void @llvm.dbg.value(metadata i32 %46, metadata !12673, metadata !DIExpression()), !dbg !12677
  %47 = icmp ne i32 %45, %42, !dbg !12725
  %48 = icmp ne i32 %46, 0, !dbg !12726
  %49 = select i1 %47, i1 %48, i1 false, !dbg !12726
  br i1 %49, label %43, label %50, !dbg !12727, !llvm.loop !12728

50:                                               ; preds = %43
  %51 = zext i1 %47 to i32
  br label %52

52:                                               ; preds = %50, %1
  %53 = phi i32 [ 1, %1 ], [ %51, %50 ], !dbg !12730
  call void @llvm.dbg.value(metadata i32 %53, metadata !12676, metadata !DIExpression()), !dbg !12677
  ret i32 %53, !dbg !12731
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #15 !dbg !12732 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12734
  %2 = and i32 %1, 16384, !dbg !12734
  ret i32 %2, !dbg !12735
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #14 !dbg !12736 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12738, metadata !DIExpression()), !dbg !12739
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12740
  %3 = and i32 %2, -8, !dbg !12740
  %4 = or i32 %3, %0, !dbg !12740
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12740
  ret void, !dbg !12741
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #15 !dbg !12742 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12743
  %2 = and i32 %1, 7, !dbg !12743
  ret i32 %2, !dbg !12744
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct.ztest_suite_stats* nocapture noundef readonly %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !12745 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %0, metadata !12763, metadata !DIExpression()), !dbg !12767
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12764, metadata !DIExpression()), !dbg !12767
  call void @llvm.dbg.value(metadata i32 0, metadata !12765, metadata !DIExpression()), !dbg !12767
  call void @llvm.dbg.value(metadata i32 0, metadata !12766, metadata !DIExpression()), !dbg !12767
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12768
  %4 = icmp eq i32 %3, 0, !dbg !12770
  br i1 %4, label %5, label %21, !dbg !12771

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct.ztest_suite_stats* noundef %0) #24, !dbg !12772
  call void @llvm.dbg.value(metadata i32 %6, metadata !12766, metadata !DIExpression()), !dbg !12767
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.199() #24, !dbg !12774
  %8 = icmp eq i32 %7, 1, !dbg !12776
  br i1 %8, label %13, label %9, !dbg !12777

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.200() #24, !dbg !12778
  br label %10, !dbg !12780

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.199() #24, !dbg !12781
  %12 = icmp eq i32 %11, 1, !dbg !12782
  br i1 %12, label %13, label %10, !dbg !12780, !llvm.loop !12783

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 0, !dbg !12785
  %15 = load i32, i32* %14, align 4, !dbg !12785
  %16 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 1, !dbg !12786
  %17 = load i32, i32* %16, align 4, !dbg !12786
  %18 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 2, !dbg !12787
  %19 = load i32, i32* %18, align 4, !dbg !12787
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.201(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !12788
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct.ztest_suite_stats* noundef %1) #24, !dbg !12789
  call void @llvm.dbg.value(metadata i32 %20, metadata !12765, metadata !DIExpression()), !dbg !12767
  br label %21, !dbg !12790

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12791
  call void @llvm.dbg.value(metadata i32 %22, metadata !12765, metadata !DIExpression()), !dbg !12767
  ret i32 %22, !dbg !12792
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #15 !dbg !12793 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12797, metadata !DIExpression()), !dbg !12798
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.203() #24, !dbg !12799
  %2 = icmp ne i32 %1, 0, !dbg !12801
  call void @llvm.dbg.value(metadata i1 %2, metadata !12797, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12798
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !12802
  %4 = icmp ne i32 %3, 0, !dbg !12804
  %5 = select i1 %4, i1 true, i1 %2, !dbg !12805
  %6 = zext i1 %5 to i32, !dbg !12805
  call void @llvm.dbg.value(metadata i32 %6, metadata !12797, metadata !DIExpression()), !dbg !12798
  ret i32 %6, !dbg !12806
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) unnamed_addr #8 !dbg !12807 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12811, metadata !DIExpression()), !dbg !12814
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12812, metadata !DIExpression()), !dbg !12814
  call void @llvm.dbg.value(metadata i32 0, metadata !12813, metadata !DIExpression()), !dbg !12814
  %3 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 0, !dbg !12815
  %4 = load i32, i32* %3, align 4, !dbg !12815
  %5 = and i32 %4, 63, !dbg !12816
  %6 = udiv i32 %0, %5, !dbg !12817
  call void @llvm.dbg.value(metadata i32 %6, metadata !12813, metadata !DIExpression()), !dbg !12814
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 1, !dbg !12818
  %8 = load i32, i32* %7, align 4, !dbg !12818
  %9 = and i32 %8, 511, !dbg !12819
  %10 = mul i32 %9, %6, !dbg !12820
  call void @llvm.dbg.value(metadata i32 %10, metadata !12813, metadata !DIExpression()), !dbg !12814
  %11 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 2, !dbg !12821
  %12 = load i32, i32* %11, align 4, !dbg !12821
  %13 = lshr i32 %12, 15, !dbg !12822
  %14 = and i32 %13, 131070, !dbg !12822
  %15 = add nuw nsw i32 %14, 2, !dbg !12822
  %16 = udiv i32 %10, %15, !dbg !12823
  call void @llvm.dbg.value(metadata i32 %16, metadata !12813, metadata !DIExpression()), !dbg !12814
  ret i32 %16, !dbg !12824
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.199() unnamed_addr #15 !dbg !12825 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12826
  %2 = lshr i32 %1, 1, !dbg !12827
  %3 = and i32 %2, 1, !dbg !12827
  ret i32 %3, !dbg !12828
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.200() unnamed_addr #14 !dbg !12829 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12830
  %2 = or i32 %1, 1, !dbg !12830
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12830
  ret void, !dbg !12831
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.201(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #14 !dbg !12832 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12834, metadata !DIExpression()), !dbg !12838
  call void @llvm.dbg.value(metadata i32 %1, metadata !12835, metadata !DIExpression()), !dbg !12838
  call void @llvm.dbg.value(metadata i32 %2, metadata !12836, metadata !DIExpression()), !dbg !12838
  call void @llvm.dbg.value(metadata i32 %3, metadata !12837, metadata !DIExpression()), !dbg !12838
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12839
  %6 = and i32 %5, -4227072, !dbg !12839
  %7 = or i32 %1, %0, !dbg !12839
  %8 = shl i32 %2, 6, !dbg !12839
  %9 = or i32 %7, %8, !dbg !12839
  %10 = or i32 %9, %6, !dbg !12839
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12839
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12840
  %12 = and i32 %11, -196609, !dbg !12840
  %13 = or i32 %12, %3, !dbg !12840
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12840
  ret void, !dbg !12841
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) unnamed_addr #14 !dbg !12842 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12846, metadata !DIExpression()), !dbg !12850
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12847, metadata !DIExpression()), !dbg !12850
  call void @llvm.dbg.value(metadata i32 0, metadata !12848, metadata !DIExpression()), !dbg !12850
  call void @llvm.dbg.value(metadata i32 0, metadata !12849, metadata !DIExpression()), !dbg !12850
  %3 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 0, !dbg !12851
  %4 = load i32, i32* %3, align 4, !dbg !12851
  %5 = lshr i32 %4, 4, !dbg !12851
  %6 = and i32 %5, 15, !dbg !12851
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12851
  %8 = load i8, i8* %7, align 1, !dbg !12851
  %9 = zext i8 %8 to i32, !dbg !12851
  %10 = lshr i32 %0, %9, !dbg !12851
  call void @llvm.dbg.value(metadata i32 %10, metadata !12849, metadata !DIExpression()), !dbg !12850
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12852
  %12 = icmp ult i32 %11, %10, !dbg !12854
  br i1 %12, label %13, label %16, !dbg !12855

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12856
  call void @llvm.dbg.value(metadata i32 %14, metadata !12848, metadata !DIExpression()), !dbg !12850
  %15 = icmp eq i32 %14, 0, !dbg !12858
  br i1 %15, label %16, label %30, !dbg !12860

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.202() #24, !dbg !12861
  br label %17, !dbg !12863

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.203() #24, !dbg !12864
  %19 = icmp eq i32 %18, 1, !dbg !12865
  br i1 %19, label %20, label %17, !dbg !12863, !llvm.loop !12866

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12868
  tail call fastcc void @LL_RCC_SetAHBPrescaler.204(i32 noundef %21) #24, !dbg !12869
  tail call fastcc void @LL_RCC_SetSysClkSource.205() #24, !dbg !12870
  br label %22, !dbg !12871

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.206() #24, !dbg !12872
  %24 = icmp eq i32 %23, 8, !dbg !12873
  br i1 %24, label %25, label %22, !dbg !12871, !llvm.loop !12874

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 1, !dbg !12876
  %27 = load i32, i32* %26, align 4, !dbg !12876
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.207(i32 noundef %27) #24, !dbg !12877
  %28 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 2, !dbg !12878
  %29 = load i32, i32* %28, align 4, !dbg !12878
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.208(i32 noundef %29) #24, !dbg !12879
  br label %30, !dbg !12880

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12881
  %33 = icmp ugt i32 %32, %10, !dbg !12883
  br i1 %33, label %34, label %36, !dbg !12884

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12885
  call void @llvm.dbg.value(metadata i32 %35, metadata !12848, metadata !DIExpression()), !dbg !12850
  br label %36, !dbg !12887

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12850
  call void @llvm.dbg.value(metadata i32 %37, metadata !12848, metadata !DIExpression()), !dbg !12850
  %38 = icmp eq i32 %37, 0, !dbg !12888
  br i1 %38, label %39, label %40, !dbg !12890

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !12891
  br label %40, !dbg !12893

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12894
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.202() unnamed_addr #14 !dbg !12895 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12896
  %2 = or i32 %1, 16777216, !dbg !12896
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12896
  ret void, !dbg !12897
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.203() unnamed_addr #15 !dbg !12898 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12899
  %2 = lshr i32 %1, 25, !dbg !12900
  %3 = and i32 %2, 1, !dbg !12900
  ret i32 %3, !dbg !12901
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.204(i32 noundef %0) unnamed_addr #14 !dbg !12902 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12904, metadata !DIExpression()), !dbg !12905
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12906
  %3 = and i32 %2, -241, !dbg !12906
  %4 = or i32 %3, %0, !dbg !12906
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12906
  ret void, !dbg !12907
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.205() unnamed_addr #14 !dbg !12908 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12910, metadata !DIExpression()), !dbg !12911
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12912
  %2 = and i32 %1, -4, !dbg !12912
  %3 = or i32 %2, 2, !dbg !12912
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12912
  ret void, !dbg !12913
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.206() unnamed_addr #15 !dbg !12914 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12915
  %2 = and i32 %1, 12, !dbg !12915
  ret i32 %2, !dbg !12916
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.207(i32 noundef %0) unnamed_addr #14 !dbg !12917 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12919, metadata !DIExpression()), !dbg !12920
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12921
  %3 = and i32 %2, -7169, !dbg !12921
  %4 = or i32 %3, %0, !dbg !12921
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12921
  ret void, !dbg !12922
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.208(i32 noundef %0) unnamed_addr #14 !dbg !12923 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12925, metadata !DIExpression()), !dbg !12926
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12927
  %3 = and i32 %2, -57345, !dbg !12927
  %4 = or i32 %3, %0, !dbg !12927
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12927
  ret void, !dbg !12928
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #15 !dbg !12929 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12930
  %2 = lshr i32 %1, 27, !dbg !12931
  %3 = and i32 %2, 1, !dbg !12931
  ret i32 %3, !dbg !12932
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct.ztest_suite_stats* nocapture noundef readonly %2, %struct.ztest_suite_stats* nocapture noundef readonly %3) local_unnamed_addr #14 !dbg !12933 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12937, metadata !DIExpression()), !dbg !12943
  call void @llvm.dbg.value(metadata i32 %1, metadata !12938, metadata !DIExpression()), !dbg !12943
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %2, metadata !12939, metadata !DIExpression()), !dbg !12943
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %3, metadata !12940, metadata !DIExpression()), !dbg !12943
  call void @llvm.dbg.value(metadata i32 0, metadata !12941, metadata !DIExpression()), !dbg !12943
  call void @llvm.dbg.value(metadata i32 0, metadata !12942, metadata !DIExpression()), !dbg !12943
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12944
  %6 = icmp eq i32 %5, 0, !dbg !12946
  br i1 %6, label %7, label %27, !dbg !12947

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.ztest_suite_stats* noundef %2) #24, !dbg !12948
  call void @llvm.dbg.value(metadata i32 %8, metadata !12942, metadata !DIExpression()), !dbg !12943
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.209() #24, !dbg !12950
  %10 = icmp eq i32 %9, 1, !dbg !12952
  br i1 %10, label %19, label %11, !dbg !12953

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12954
  br i1 %12, label %13, label %14, !dbg !12957

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !12958
  br label %15, !dbg !12960

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.210() #24, !dbg !12961
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.211() #24, !dbg !12963
  br label %16, !dbg !12964

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.209() #24, !dbg !12965
  %18 = icmp eq i32 %17, 1, !dbg !12966
  br i1 %18, label %19, label %16, !dbg !12964, !llvm.loop !12967

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 0, !dbg !12969
  %21 = load i32, i32* %20, align 4, !dbg !12969
  %22 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 1, !dbg !12970
  %23 = load i32, i32* %22, align 4, !dbg !12970
  %24 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 2, !dbg !12971
  %25 = load i32, i32* %24, align 4, !dbg !12971
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.201(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !12972
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct.ztest_suite_stats* noundef %3) #24, !dbg !12973
  call void @llvm.dbg.value(metadata i32 %26, metadata !12941, metadata !DIExpression()), !dbg !12943
  br label %27, !dbg !12974

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12975
  call void @llvm.dbg.value(metadata i32 %28, metadata !12941, metadata !DIExpression()), !dbg !12943
  ret i32 %28, !dbg !12976
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.209() unnamed_addr #15 !dbg !12977 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12978
  %2 = lshr i32 %1, 17, !dbg !12979
  %3 = and i32 %2, 1, !dbg !12979
  ret i32 %3, !dbg !12980
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #14 !dbg !12981 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12982
  %2 = or i32 %1, 262144, !dbg !12982
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12982
  ret void, !dbg !12983
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.210() unnamed_addr #14 !dbg !12984 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12985
  %2 = and i32 %1, -262145, !dbg !12985
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12985
  ret void, !dbg !12986
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.211() unnamed_addr #14 !dbg !12987 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12988
  %2 = or i32 %1, 65536, !dbg !12988
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12988
  ret void, !dbg !12989
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !12990 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12993, metadata !DIExpression()), !dbg !13009
  call void @llvm.dbg.value(metadata i32 undef, metadata !12993, metadata !DIExpression()), !dbg !13009
  call void @llvm.dbg.value(metadata i32 undef, metadata !12993, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13009
  ret void, !dbg !13010
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13011 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13015, metadata !DIExpression()), !dbg !13017
  %2 = icmp eq i8* %0, null, !dbg !13018
  br i1 %2, label %29, label %3, !dbg !13020

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13021
  %5 = icmp eq i8 %4, 0, !dbg !13022
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13023
  br i1 %6, label %29, label %8, !dbg !13023

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13016, metadata !DIExpression()), !dbg !13017
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13024

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13016, metadata !DIExpression()), !dbg !13017
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !13026
  br i1 %10, label %11, label %15, !dbg !13031

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13032
  %13 = load i8*, i8** %12, align 4, !dbg !13032
  %14 = icmp eq i8* %13, %0, !dbg !13033
  br i1 %14, label %29, label %15, !dbg !13034

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13035
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13016, metadata !DIExpression()), !dbg !13017
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13036
  br i1 %17, label %7, label %8, !dbg !13037, !llvm.loop !13038

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13016, metadata !DIExpression()), !dbg !13017
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !13040
  br i1 %20, label %21, label %26, !dbg !13044

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13045
  %23 = load i8*, i8** %22, align 4, !dbg !13045
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13046
  %25 = icmp eq i32 %24, 0, !dbg !13047
  br i1 %25, label %29, label %26, !dbg !13048

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13049
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13016, metadata !DIExpression()), !dbg !13017
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13050
  br i1 %28, label %29, label %18, !dbg !13024, !llvm.loop !13051

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13017
  ret %struct.device* %30, !dbg !13053
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !13054 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13058, metadata !DIExpression()), !dbg !13059
  %2 = icmp eq %struct.device* %0, null, !dbg !13060
  br i1 %2, label %14, label %3, !dbg !13062

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13063
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13063
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13064
  %7 = load i8, i8* %6, align 1, !dbg !13064
  %8 = and i8 %7, 1, !dbg !13064
  %9 = icmp eq i8 %8, 0, !dbg !13064
  br i1 %9, label %14, label %10, !dbg !13065

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13066
  %12 = load i8, i8* %11, align 1, !dbg !13066
  %13 = icmp eq i8 %12, 0, !dbg !13067
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13059
  ret i1 %15, !dbg !13068
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !13069 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13074, metadata !DIExpression()), !dbg !13075
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13076
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13077
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13078 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13086, metadata !DIExpression()), !dbg !13091
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13087, metadata !DIExpression()), !dbg !13091
  call void @llvm.dbg.value(metadata i8* %2, metadata !13088, metadata !DIExpression()), !dbg !13091
  %5 = bitcast i32* %4 to i8*, !dbg !13092
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13092
  call void @llvm.dbg.value(metadata i32 0, metadata !13089, metadata !DIExpression()), !dbg !13091
  store i32 0, i32* %4, align 4, !dbg !13093
  call void @llvm.dbg.value(metadata i32* %4, metadata !13089, metadata !DIExpression(DW_OP_deref)), !dbg !13091
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13094
  call void @llvm.dbg.value(metadata i16* %6, metadata !13090, metadata !DIExpression()), !dbg !13091
  %7 = load i32, i32* %4, align 4, !dbg !13095
  call void @llvm.dbg.value(metadata i32 %7, metadata !13089, metadata !DIExpression()), !dbg !13091
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13096
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13097
  ret i32 %8, !dbg !13098
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13099 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13103, metadata !DIExpression()), !dbg !13109
  call void @llvm.dbg.value(metadata i32* %1, metadata !13104, metadata !DIExpression()), !dbg !13109
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13110
  %4 = load i16*, i16** %3, align 4, !dbg !13110
  call void @llvm.dbg.value(metadata i16* %4, metadata !13105, metadata !DIExpression()), !dbg !13109
  %5 = icmp eq i16* %4, null, !dbg !13111
  br i1 %5, label %14, label %6, !dbg !13112

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13113
  call void @llvm.dbg.value(metadata i32 %7, metadata !13106, metadata !DIExpression()), !dbg !13113
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13114
  %9 = load i16, i16* %8, align 2, !dbg !13114
  %10 = add i16 %9, -32767, !dbg !13115
  %11 = icmp ult i16 %10, 2, !dbg !13115
  %12 = add i32 %7, 1, !dbg !13116
  call void @llvm.dbg.value(metadata i32 %12, metadata !13106, metadata !DIExpression()), !dbg !13113
  br i1 %11, label %13, label %6, !dbg !13115, !llvm.loop !13118

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13121
  br label %14, !dbg !13122

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13123
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13124 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13128, metadata !DIExpression()), !dbg !13139
  call void @llvm.dbg.value(metadata i32 %1, metadata !13129, metadata !DIExpression()), !dbg !13139
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13130, metadata !DIExpression()), !dbg !13139
  call void @llvm.dbg.value(metadata i8* %3, metadata !13131, metadata !DIExpression()), !dbg !13139
  call void @llvm.dbg.value(metadata i32 0, metadata !13132, metadata !DIExpression()), !dbg !13140
  %5 = icmp eq i32 %1, 0, !dbg !13141
  br i1 %5, label %16, label %8, !dbg !13142

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13132, metadata !DIExpression()), !dbg !13140
  %7 = icmp eq i32 %15, %1, !dbg !13141
  br i1 %7, label %16, label %8, !dbg !13142, !llvm.loop !13143

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13132, metadata !DIExpression()), !dbg !13140
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13145
  %11 = load i16, i16* %10, align 2, !dbg !13145
  call void @llvm.dbg.value(metadata i16 %11, metadata !13134, metadata !DIExpression()), !dbg !13146
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !13147
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13137, metadata !DIExpression()), !dbg !13146
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !13148
  call void @llvm.dbg.value(metadata i32 %13, metadata !13138, metadata !DIExpression()), !dbg !13146
  %14 = icmp slt i32 %13, 0, !dbg !13149
  %15 = add nuw i32 %9, 1, !dbg !13151
  call void @llvm.dbg.value(metadata i32 %15, metadata !13132, metadata !DIExpression()), !dbg !13140
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !13153 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13157, metadata !DIExpression()), !dbg !13160
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13158, metadata !DIExpression()), !dbg !13160
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13159, metadata !DIExpression()), !dbg !13160
  %2 = sext i16 %0 to i32, !dbg !13161
  %3 = icmp slt i16 %0, 1, !dbg !13163
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13164
  %6 = add nsw i32 %2, -1, !dbg !13164
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13164
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13164
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13158, metadata !DIExpression()), !dbg !13160
  ret %struct.device* %8, !dbg !13165
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13166 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13168, metadata !DIExpression()), !dbg !13173
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13169, metadata !DIExpression()), !dbg !13173
  call void @llvm.dbg.value(metadata i8* %2, metadata !13170, metadata !DIExpression()), !dbg !13173
  %5 = bitcast i32* %4 to i8*, !dbg !13174
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13174
  call void @llvm.dbg.value(metadata i32 0, metadata !13171, metadata !DIExpression()), !dbg !13173
  store i32 0, i32* %4, align 4, !dbg !13175
  call void @llvm.dbg.value(metadata i32* %4, metadata !13171, metadata !DIExpression(DW_OP_deref)), !dbg !13173
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13176
  call void @llvm.dbg.value(metadata i16* %6, metadata !13172, metadata !DIExpression()), !dbg !13173
  %7 = load i32, i32* %4, align 4, !dbg !13177
  call void @llvm.dbg.value(metadata i32 %7, metadata !13171, metadata !DIExpression()), !dbg !13173
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13178
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13179
  ret i32 %8, !dbg !13180
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13181 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13183, metadata !DIExpression()), !dbg !13188
  call void @llvm.dbg.value(metadata i32* %1, metadata !13184, metadata !DIExpression()), !dbg !13188
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13189
  %4 = load i16*, i16** %3, align 4, !dbg !13189
  call void @llvm.dbg.value(metadata i16* %4, metadata !13185, metadata !DIExpression()), !dbg !13188
  call void @llvm.dbg.value(metadata i32 0, metadata !13186, metadata !DIExpression()), !dbg !13188
  call void @llvm.dbg.value(metadata i32 0, metadata !13187, metadata !DIExpression()), !dbg !13188
  %5 = icmp eq i16* %4, null, !dbg !13190
  br i1 %5, label %22, label %6, !dbg !13192

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13186, metadata !DIExpression()), !dbg !13188
  call void @llvm.dbg.value(metadata i16* %8, metadata !13185, metadata !DIExpression()), !dbg !13188
  %9 = load i16, i16* %8, align 2, !dbg !13193
  %10 = icmp eq i16 %9, -32768, !dbg !13197
  call void @llvm.dbg.value(metadata i32 undef, metadata !13186, metadata !DIExpression()), !dbg !13188
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13198
  call void @llvm.dbg.value(metadata i16* %11, metadata !13185, metadata !DIExpression()), !dbg !13188
  %12 = zext i1 %10 to i32, !dbg !13199
  %13 = add i32 %7, %12, !dbg !13199
  call void @llvm.dbg.value(metadata i32 %13, metadata !13186, metadata !DIExpression()), !dbg !13188
  %14 = icmp eq i32 %13, 2, !dbg !13200
  br i1 %14, label %15, label %6, !dbg !13201

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13188
  call void @llvm.dbg.value(metadata i32 %16, metadata !13187, metadata !DIExpression()), !dbg !13188
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13202
  %18 = load i16, i16* %17, align 2, !dbg !13202
  %19 = icmp eq i16 %18, 32767, !dbg !13203
  %20 = add i32 %16, 1, !dbg !13204
  call void @llvm.dbg.value(metadata i32 %20, metadata !13187, metadata !DIExpression()), !dbg !13188
  br i1 %19, label %21, label %15, !dbg !13206, !llvm.loop !13207

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13209
  br label %22, !dbg !13210

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13211
  call void @llvm.dbg.value(metadata i16* %23, metadata !13185, metadata !DIExpression()), !dbg !13188
  ret i16* %23, !dbg !13212
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !13213 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13216
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !13217
  ret i32* %2, !dbg !13218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !13219 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13370, metadata !DIExpression()), !dbg !13373
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13371, metadata !DIExpression()), !dbg !13373
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13372, metadata !DIExpression()), !dbg !13373
  ret void, !dbg !13374
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13375 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13379, metadata !DIExpression()), !dbg !13381
  call void @llvm.dbg.value(metadata i32 %1, metadata !13380, metadata !DIExpression()), !dbg !13381
  ret void, !dbg !13382
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13383 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13387, metadata !DIExpression()), !dbg !13389
  call void @llvm.dbg.value(metadata i32 %1, metadata !13388, metadata !DIExpression()), !dbg !13389
  ret void, !dbg !13390
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !13391 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13395, metadata !DIExpression()), !dbg !13397
  call void @llvm.dbg.value(metadata i8* %1, metadata !13396, metadata !DIExpression()), !dbg !13397
  ret i32 -134, !dbg !13398
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !13399 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13403, metadata !DIExpression()), !dbg !13405
  call void @llvm.dbg.value(metadata i8* %1, metadata !13404, metadata !DIExpression()), !dbg !13405
  ret i32 -134, !dbg !13406
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13407 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13410, metadata !DIExpression()), !dbg !13411
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13412, !srcloc !13418
  call void @llvm.dbg.value(metadata i32 undef, metadata !13415, metadata !DIExpression()) #23, !dbg !13419
  call void @llvm.dbg.value(metadata i32 undef, metadata !13416, metadata !DIExpression()) #23, !dbg !13419
  br label %3, !dbg !13420

3:                                                ; preds = %3, %1
  br label %3, !dbg !13421, !llvm.loop !13424
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13427 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13431, metadata !DIExpression()), !dbg !13433
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13432, metadata !DIExpression()), !dbg !13433
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.216, i32 0, i32 0), i32 noundef 69) #25, !dbg !13434
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13439
  unreachable, !dbg !13439
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13440 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13442, metadata !DIExpression()), !dbg !13443
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13444
  unreachable, !dbg !13444
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13445 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13447, metadata !DIExpression()), !dbg !13451
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13448, metadata !DIExpression()), !dbg !13451
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13452, !srcloc !13418
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13452
  call void @llvm.dbg.value(metadata i32 %4, metadata !13415, metadata !DIExpression()) #23, !dbg !13454
  call void @llvm.dbg.value(metadata i32 undef, metadata !13416, metadata !DIExpression()) #23, !dbg !13454
  call void @llvm.dbg.value(metadata i32 %4, metadata !13449, metadata !DIExpression()), !dbg !13451
  %5 = tail call fastcc %struct.k_thread* @k_current_get.219() #26, !dbg !13455
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13450, metadata !DIExpression()), !dbg !13451
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !13456
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.220, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #25, !dbg !13456
  %7 = icmp eq %struct.__esf* %1, null, !dbg !13461
  br i1 %7, label %20, label %8, !dbg !13463

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13464, metadata !DIExpression()), !dbg !13469
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !13471
  %10 = load i32, i32* %9, align 4, !dbg !13471
  %11 = and i32 %10, 511, !dbg !13472
  %12 = icmp eq i32 %11, 0, !dbg !13473
  br i1 %12, label %14, label %13, !dbg !13474

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.221, i32 0, i32 0), i32 noundef 69) #25, !dbg !13475
  br label %14, !dbg !13481

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !13482
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.222, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #25, !dbg !13482
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !13487
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13464, metadata !DIExpression()), !dbg !13488
  %16 = load i32, i32* %9, align 4, !dbg !13493
  %17 = and i32 %16, 511, !dbg !13494
  %18 = icmp eq i32 %17, 0, !dbg !13495
  br i1 %18, label %22, label %19, !dbg !13496

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !13497, metadata !DIExpression()) #23, !dbg !13500
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13503, !srcloc !13504
  br label %25, !dbg !13505

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !13482
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.222, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #25, !dbg !13482
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !13487
  br label %22, !dbg !13506

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !13507
  call void @llvm.dbg.value(metadata i32 %4, metadata !13497, metadata !DIExpression()) #23, !dbg !13510
  call void @llvm.dbg.value(metadata i32 %4, metadata !13497, metadata !DIExpression()) #23, !dbg !13513
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13451
  br i1 %23, label %25, label %24, !dbg !13515

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.223(%struct.k_thread* noundef %5) #24, !dbg !13516
  br label %25, !dbg !13519

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !13519
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.219() unnamed_addr #11 !dbg !13520 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.231() #26, !dbg !13524
  ret %struct.k_thread* %1, !dbg !13525
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #4 !dbg !13526 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13530, metadata !DIExpression()), !dbg !13531
  %2 = icmp ult i32 %0, 5, !dbg !13532
  br i1 %2, label %3, label %6, !dbg !13532

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !13532
  %5 = load i8*, i8** %4, align 4, !dbg !13532
  br label %6, !dbg !13532

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.225, i32 0, i32 0), %1 ], !dbg !13533
  ret i8* %7, !dbg !13535
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13536 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13540, metadata !DIExpression()), !dbg !13542
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !13543
  br i1 %2, label %9, label %3, !dbg !13544

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !13545
  call void @llvm.dbg.value(metadata i8* %4, metadata !13541, metadata !DIExpression()), !dbg !13542
  %5 = icmp eq i8* %4, null, !dbg !13546
  br i1 %5, label %9, label %6, !dbg !13548

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !13549
  %8 = icmp eq i8 %7, 0, !dbg !13550
  br i1 %8, label %9, label %10, !dbg !13551

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.224, i32 0, i32 0), metadata !13541, metadata !DIExpression()), !dbg !13542
  br label %10, !dbg !13552

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.224, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !13542
  call void @llvm.dbg.value(metadata i8* %11, metadata !13541, metadata !DIExpression()), !dbg !13542
  ret i8* %11, !dbg !13554
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.223(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13555 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13559, metadata !DIExpression()), !dbg !13560
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13561, !srcloc !13563
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !13564
  ret void, !dbg !13565
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.231() unnamed_addr #11 !dbg !13566 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13567, !srcloc !13569
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !13570
  ret %struct.k_thread* %1, !dbg !13571
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13572 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13576, metadata !DIExpression()), !dbg !13579
  call void @llvm.dbg.value(metadata i32 %1, metadata !13577, metadata !DIExpression()), !dbg !13579
  call void @llvm.dbg.value(metadata i32 %2, metadata !13578, metadata !DIExpression()), !dbg !13579
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !13580
  ret void, !dbg !13581
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13582 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13586, metadata !DIExpression()), !dbg !13589
  call void @llvm.dbg.value(metadata i8* %1, metadata !13587, metadata !DIExpression()), !dbg !13589
  call void @llvm.dbg.value(metadata i32 %2, metadata !13588, metadata !DIExpression()), !dbg !13589
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !13590
  ret void, !dbg !13591
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13592 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !13593
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_bss_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_bss_start to i32))) #24, !dbg !13594
  ret void, !dbg !13595
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13596 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13598, metadata !DIExpression()), !dbg !13599
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !13600
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13601
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13602
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13603
  %4 = trunc i32 %0 to i8, !dbg !13604
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13605
  store i8 %4, i8* %5, align 4, !dbg !13606
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13607
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !13608
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13609
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13610
  store i8* %8, i8** %9, align 4, !dbg !13611
  ret void, !dbg !13612
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13613 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13615, metadata !DIExpression()), !dbg !13621
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13622
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13616, metadata !DIExpression()), !dbg !13621
  %3 = getelementptr inbounds [1 x [4160 x %struct.z_thread_stack_element]], [1 x [4160 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13623
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13617, metadata !DIExpression()), !dbg !13621
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.238, i32 0, i32 0), metadata !13620, metadata !DIExpression()), !dbg !13621
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13624
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13625
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 4096, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.238, i32 0, i32 0)) #25, !dbg !13626
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !13627
  ret void, !dbg !13628
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !13629 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13633, metadata !DIExpression()), !dbg !13634
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13635
  ret i8* %2, !dbg !13636
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13637 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13642, metadata !DIExpression()), !dbg !13643
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13644
  %3 = load i8, i8* %2, align 1, !dbg !13645
  %4 = and i8 %3, -5, !dbg !13645
  store i8 %4, i8* %2, align 1, !dbg !13645
  ret void, !dbg !13646
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !13647 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !13650
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !13651
  %3 = ptrtoint i8* %2 to i32, !dbg !13660
  %4 = add i32 %3, 2048, !dbg !13661
  call void @llvm.dbg.value(metadata i32 %4, metadata !13655, metadata !DIExpression()) #23, !dbg !13662
  call void @llvm.dbg.value(metadata i32 %4, metadata !13663, metadata !DIExpression()) #23, !dbg !13666
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !13668, !srcloc !13669
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13670
  %6 = or i32 %5, 512, !dbg !13670
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13670
  tail call fastcc void @__NVIC_SetPriority.241(i32 noundef -2, i32 noundef 255) #25, !dbg !13671
  tail call fastcc void @__NVIC_SetPriority.241(i32 noundef -5, i32 noundef 0) #25, !dbg !13674
  tail call fastcc void @__NVIC_SetPriority.241(i32 noundef -12, i32 noundef 0) #25, !dbg !13675
  tail call fastcc void @__NVIC_SetPriority.241(i32 noundef -11, i32 noundef 0) #25, !dbg !13676
  tail call fastcc void @__NVIC_SetPriority.241(i32 noundef -10, i32 noundef 0) #25, !dbg !13677
  tail call fastcc void @__NVIC_SetPriority.241(i32 noundef -4, i32 noundef 0) #25, !dbg !13678
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13679
  %8 = or i32 %7, 458752, !dbg !13679
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13679
  tail call void @z_arm_fault_init() #25, !dbg !13680
  tail call void @z_arm_cpu_idle_init() #25, !dbg !13681
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13682
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13685
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !13686
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !13687
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13688
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !13688
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13649, metadata !DIExpression()), !dbg !13689
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !13690
  call void @z_device_state_init() #25, !dbg !13691
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !13692
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !13693
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !13694
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !13695
  unreachable, !dbg !13695
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2197 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2201, metadata !DIExpression()), !dbg !13696
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13697
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13697
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2202, metadata !DIExpression()), !dbg !13696
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2202, metadata !DIExpression()), !dbg !13696
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13698
  br i1 %7, label %8, label %35, !dbg !13699

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2202, metadata !DIExpression()), !dbg !13696
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13700
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13700
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2212, metadata !DIExpression()), !dbg !13701
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13702
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13702
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !13703
  call void @llvm.dbg.value(metadata i32 %14, metadata !2216, metadata !DIExpression()), !dbg !13701
  %15 = icmp eq %struct.device* %11, null, !dbg !13704
  br i1 %15, label %32, label %16, !dbg !13706

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13707
  br i1 %17, label %26, label %18, !dbg !13710

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13711
  call void @llvm.dbg.value(metadata i32 %19, metadata !2216, metadata !DIExpression()), !dbg !13701
  %20 = icmp ult i32 %19, 255, !dbg !13713
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13713
  call void @llvm.dbg.value(metadata i32 %21, metadata !2216, metadata !DIExpression()), !dbg !13701
  %22 = trunc i32 %21 to i8, !dbg !13714
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13715
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13715
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13716
  store i8 %22, i8* %25, align 1, !dbg !13717
  br label %26, !dbg !13718

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13719
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13719
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13720
  %30 = load i8, i8* %29, align 1, !dbg !13721
  %31 = or i8 %30, 1, !dbg !13721
  store i8 %31, i8* %29, align 1, !dbg !13721
  br label %32, !dbg !13722

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13723
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2202, metadata !DIExpression()), !dbg !13696
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13698
  br i1 %34, label %8, label %35, !dbg !13699, !llvm.loop !13724

35:                                               ; preds = %32, %1
  ret void, !dbg !13726
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.241(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !13727 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13729, metadata !DIExpression()), !dbg !13731
  call void @llvm.dbg.value(metadata i32 %1, metadata !13730, metadata !DIExpression()), !dbg !13731
  %3 = trunc i32 %1 to i8, !dbg !13732
  %4 = shl i8 %3, 4, !dbg !13732
  %5 = and i32 %0, 15, !dbg !13735
  %6 = add nsw i32 %5, -4, !dbg !13736
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13737
  store volatile i8 %4, i8* %7, align 1, !dbg !13738
  ret void, !dbg !13739
}

; Function Attrs: optsize
declare !dbg !13740 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !13741 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13744, metadata !DIExpression()), !dbg !13745
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13746
  store i8 1, i8* %2, align 1, !dbg !13747
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13748
  store i8 1, i8* %3, align 4, !dbg !13749
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13750
  store i32 0, i32* %4, align 4, !dbg !13751
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13752
  store i32 0, i32* %5, align 4, !dbg !13753
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13754
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13755
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13756
  ret void, !dbg !13757
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13758 {
  tail call void @z_sched_init() #25, !dbg !13763
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13764
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.242, i32 0, i32 0)) #25, !dbg !13765
  call void @llvm.dbg.value(metadata i8* %1, metadata !13762, metadata !DIExpression()), !dbg !13766
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !13767
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13768
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !13769
  ret i8* %1, !dbg !13770
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !13771 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13775, metadata !DIExpression()), !dbg !13776
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !13777
  unreachable, !dbg !13778
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13779 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13781, metadata !DIExpression()), !dbg !13784
  call void @llvm.dbg.value(metadata i8* %1, metadata !13782, metadata !DIExpression()), !dbg !13784
  call void @llvm.dbg.value(metadata i8* %2, metadata !13783, metadata !DIExpression()), !dbg !13784
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13785
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !13786
  tail call void @boot_banner() #25, !dbg !13787
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !13788
  tail call void @z_init_static_threads() #25, !dbg !13789
  tail call void @main() #25, !dbg !13790
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13791
  %5 = and i8 %4, -2, !dbg !13791
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13791
  ret void, !dbg !13792
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !13793 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13803, metadata !DIExpression()), !dbg !13805
  call void @llvm.dbg.value(metadata i8* %1, metadata !13804, metadata !DIExpression()), !dbg !13805
  ret void, !dbg !13806
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !13807 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13809, metadata !DIExpression()), !dbg !13811
  call void @llvm.dbg.value(metadata i8* %1, metadata !13810, metadata !DIExpression()), !dbg !13811
  ret void, !dbg !13812
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13813 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13814, !srcloc !13821
  call void @llvm.dbg.value(metadata i32 %1, metadata !13817, metadata !DIExpression()) #23, !dbg !13822
  %2 = icmp ne i32 %1, 0, !dbg !13823
  ret i1 %2, !dbg !13824
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !13825 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13826
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13827
  %3 = load i8, i8* %2, align 4, !dbg !13828
  %4 = or i8 %3, 1, !dbg !13828
  store i8 %4, i8* %2, align 4, !dbg !13828
  ret void, !dbg !13829
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !13830 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13831
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13832
  %3 = load i8, i8* %2, align 4, !dbg !13833
  %4 = and i8 %3, -2, !dbg !13833
  store i8 %4, i8* %2, align 4, !dbg !13833
  ret void, !dbg !13834
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !13835 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13836
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13837
  %3 = load i8, i8* %2, align 4, !dbg !13837
  %4 = and i8 %3, 1, !dbg !13838
  %5 = icmp ne i8 %4, 0, !dbg !13839
  ret i1 %5, !dbg !13840
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13841 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13845, metadata !DIExpression()), !dbg !13847
  call void @llvm.dbg.value(metadata i8* %1, metadata !13846, metadata !DIExpression()), !dbg !13847
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13848
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13850
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13845, metadata !DIExpression()), !dbg !13847
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13851
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #25, !dbg !13852
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13853
  store i8 0, i8* %8, align 1, !dbg !13854
  ret i32 0, !dbg !13855
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #4 !dbg !13856 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13860, metadata !DIExpression()), !dbg !13861
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13862
  ret i8* %2, !dbg !13863
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13864 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13868, metadata !DIExpression()), !dbg !13871
  call void @llvm.dbg.value(metadata i8* %1, metadata !13869, metadata !DIExpression()), !dbg !13871
  call void @llvm.dbg.value(metadata i32 %2, metadata !13870, metadata !DIExpression()), !dbg !13871
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13872
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #25, !dbg !13873
  ret i32 0, !dbg !13874
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2225 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2342, metadata !DIExpression()), !dbg !13875
  call void @llvm.dbg.value(metadata i8* %1, metadata !2343, metadata !DIExpression()), !dbg !13875
  call void @llvm.dbg.value(metadata i32 %2, metadata !2344, metadata !DIExpression()), !dbg !13875
  call void @llvm.dbg.value(metadata i32 0, metadata !2345, metadata !DIExpression()), !dbg !13875
  call void @llvm.dbg.value(metadata i8 undef, metadata !2347, metadata !DIExpression()), !dbg !13875
  %4 = icmp eq i8* %1, null, !dbg !13876
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13878
  br i1 %6, label %46, label %7, !dbg !13878

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13879
  %9 = load i8, i8* %8, align 1, !dbg !13879
  call void @llvm.dbg.value(metadata i8 %9, metadata !2347, metadata !DIExpression()), !dbg !13875
  %10 = add i32 %2, -1, !dbg !13880
  call void @llvm.dbg.value(metadata i32 %10, metadata !2344, metadata !DIExpression()), !dbg !13875
  call void @llvm.dbg.value(metadata i8 0, metadata !2348, metadata !DIExpression()), !dbg !13881
  call void @llvm.dbg.value(metadata i8 %9, metadata !2347, metadata !DIExpression()), !dbg !13875
  call void @llvm.dbg.value(metadata i32 0, metadata !2345, metadata !DIExpression()), !dbg !13875
  %11 = icmp eq i8 %9, 0, !dbg !13882
  br i1 %11, label %12, label %15, !dbg !13884

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13885
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13886
  store i8 0, i8* %14, align 1, !dbg !13887
  br label %46, !dbg !13888

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2348, metadata !DIExpression()), !dbg !13881
  call void @llvm.dbg.value(metadata i8 %17, metadata !2347, metadata !DIExpression()), !dbg !13875
  call void @llvm.dbg.value(metadata i32 %18, metadata !2345, metadata !DIExpression()), !dbg !13875
  %19 = zext i8 %17 to i32, !dbg !13889
  %20 = zext i8 %16 to i32, !dbg !13890
  %21 = shl nuw i32 1, %20, !dbg !13890
  call void @llvm.dbg.value(metadata i32 %21, metadata !2346, metadata !DIExpression()), !dbg !13875
  %22 = and i32 %21, %19, !dbg !13892
  %23 = icmp eq i32 %22, 0, !dbg !13894
  br i1 %23, label %42, label %24, !dbg !13895

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13896
  %26 = sub i32 %10, %18, !dbg !13897
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13898
  %28 = load i8*, i8** %27, align 4, !dbg !13898
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13899
  %30 = load i32, i32* %29, align 4, !dbg !13899
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !13900
  %32 = add i32 %31, %18, !dbg !13901
  call void @llvm.dbg.value(metadata i32 %32, metadata !2345, metadata !DIExpression()), !dbg !13875
  %33 = trunc i32 %21 to i8, !dbg !13902
  %34 = xor i8 %33, -1, !dbg !13902
  %35 = and i8 %17, %34, !dbg !13902
  call void @llvm.dbg.value(metadata i8 %35, metadata !2347, metadata !DIExpression()), !dbg !13875
  %36 = icmp eq i8 %35, 0, !dbg !13903
  br i1 %36, label %12, label %37, !dbg !13905

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13906
  %39 = sub i32 %10, %32, !dbg !13908
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.247, i32 0, i32 0), i32 noundef 1) #24, !dbg !13909
  %41 = add i32 %40, %32, !dbg !13910
  call void @llvm.dbg.value(metadata i32 %41, metadata !2345, metadata !DIExpression()), !dbg !13875
  br label %42, !dbg !13911

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13875
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13875
  call void @llvm.dbg.value(metadata i8 %44, metadata !2347, metadata !DIExpression()), !dbg !13875
  call void @llvm.dbg.value(metadata i32 %43, metadata !2345, metadata !DIExpression()), !dbg !13875
  %45 = add i8 %16, 1, !dbg !13912
  call void @llvm.dbg.value(metadata i8 %45, metadata !2348, metadata !DIExpression()), !dbg !13881
  br label %15, !dbg !13884

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.248, i32 0, i32 0), %3 ], !dbg !13875
  ret i8* %47, !dbg !13913
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13914 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13918, metadata !DIExpression()), !dbg !13923
  call void @llvm.dbg.value(metadata i32 %1, metadata !13919, metadata !DIExpression()), !dbg !13923
  call void @llvm.dbg.value(metadata i8* %2, metadata !13920, metadata !DIExpression()), !dbg !13923
  call void @llvm.dbg.value(metadata i32 %3, metadata !13921, metadata !DIExpression()), !dbg !13923
  %5 = icmp ult i32 %1, %3, !dbg !13924
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13924
  call void @llvm.dbg.value(metadata i32 %6, metadata !13922, metadata !DIExpression()), !dbg !13923
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !13925
  ret i32 %6, !dbg !13926
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13927 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13931, metadata !DIExpression()), !dbg !13932
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !13933
  ret void, !dbg !13934
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !13935 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13944, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13945, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.value(metadata i32 %2, metadata !13946, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13947, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.value(metadata i8* %4, metadata !13948, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.value(metadata i8* %5, metadata !13949, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.value(metadata i8* %6, metadata !13950, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.value(metadata i32 %7, metadata !13951, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.value(metadata i32 %8, metadata !13952, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.value(metadata i8* %9, metadata !13953, metadata !DIExpression()), !dbg !13955
  %11 = icmp eq i32 %7, 15, !dbg !13956
  br i1 %11, label %12, label %15, !dbg !13956

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13956
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !13956
  br i1 %14, label %19, label %18, !dbg !13956

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13956
  %17 = icmp ult i32 %16, 31, !dbg !13956
  br i1 %17, label %19, label %18, !dbg !13956

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.262, i32 0, i32 0), i32 noundef 536) #25, !dbg !13960
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.263, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #25, !dbg !13960
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.262, i32 0, i32 0), i32 noundef 536) #25, !dbg !13960
  unreachable, !dbg !13960

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13962
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #24, !dbg !13963
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13964
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !13965
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !13966
  call void @llvm.dbg.value(metadata i8* %22, metadata !13954, metadata !DIExpression()), !dbg !13955
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !13967
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13968
  store i8* null, i8** %23, align 4, !dbg !13969
  %24 = icmp eq i8* %9, null, !dbg !13970
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13972
  br i1 %24, label %29, label %26, !dbg !13973

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #25, !dbg !13974
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !13976
  store i8 0, i8* %28, align 1, !dbg !13977
  br label %30, !dbg !13978

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !13979
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13981
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !13981
  br i1 %32, label %36, label %33, !dbg !13983

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !13984
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !13984
  br label %36, !dbg !13985

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !13955
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13986
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !13988
  ret i8* %22, !dbg !13989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !13990 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13994, metadata !DIExpression()), !dbg !13995
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13996
  ret i1 %2, !dbg !13997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #7 !dbg !13998 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14003, metadata !DIExpression()), !dbg !14004
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14005
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !14006
  ret void, !dbg !14007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !14008 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14013, metadata !DIExpression()), !dbg !14017
  call void @llvm.dbg.value(metadata i32 %1, metadata !14014, metadata !DIExpression()), !dbg !14017
  call void @llvm.dbg.value(metadata i32 %2, metadata !14015, metadata !DIExpression()), !dbg !14017
  call void @llvm.dbg.value(metadata i32 %3, metadata !14016, metadata !DIExpression()), !dbg !14017
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14018
  store %union.anon* null, %union.anon** %5, align 8, !dbg !14019
  %6 = trunc i32 %3 to i8, !dbg !14020
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14021
  store i8 %6, i8* %7, align 4, !dbg !14022
  %8 = trunc i32 %2 to i8, !dbg !14023
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14024
  store i8 %8, i8* %9, align 1, !dbg !14025
  %10 = trunc i32 %1 to i8, !dbg !14026
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14027
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14027
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14027
  store i8 %10, i8* %13, align 2, !dbg !14028
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14029
  store i8 0, i8* %14, align 1, !dbg !14030
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !14031
  ret void, !dbg !14032
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !14033 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14037, metadata !DIExpression()), !dbg !14045
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14038, metadata !DIExpression()), !dbg !14045
  call void @llvm.dbg.value(metadata i32 %2, metadata !14039, metadata !DIExpression()), !dbg !14045
  call void @llvm.dbg.value(metadata i32 0, metadata !14044, metadata !DIExpression()), !dbg !14045
  %4 = add i32 %2, 7, !dbg !14046
  %5 = and i32 %4, -8, !dbg !14046
  %6 = add i32 %5, 64, !dbg !14046
  call void @llvm.dbg.value(metadata i32 %6, metadata !14040, metadata !DIExpression()), !dbg !14045
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.264(%struct.z_thread_stack_element* noundef %1) #24, !dbg !14048
  call void @llvm.dbg.value(metadata i8* %7, metadata !14043, metadata !DIExpression()), !dbg !14045
  call void @llvm.dbg.value(metadata i32 %5, metadata !14041, metadata !DIExpression()), !dbg !14045
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14049
  call void @llvm.dbg.value(metadata i8* %8, metadata !14042, metadata !DIExpression()), !dbg !14045
  call void @llvm.dbg.value(metadata i32 0, metadata !14044, metadata !DIExpression()), !dbg !14045
  %9 = ptrtoint i8* %7 to i32, !dbg !14050
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !14051
  store i32 %9, i32* %10, align 4, !dbg !14052
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !14053
  store i32 %5, i32* %11, align 4, !dbg !14054
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !14055
  store i32 0, i32* %12, align 4, !dbg !14056
  call void @llvm.dbg.value(metadata i8* %8, metadata !14042, metadata !DIExpression()), !dbg !14045
  ret i8* %8, !dbg !14057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.264(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !14058 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14062, metadata !DIExpression()), !dbg !14063
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14064
  ret i8* %2, !dbg !14065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14066 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14071, metadata !DIExpression()), !dbg !14072
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14073
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14074
  ret void, !dbg !14075
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14076 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14078, metadata !DIExpression()), !dbg !14079
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14080
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !14081
  ret void, !dbg !14082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14083 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14087, metadata !DIExpression()), !dbg !14088
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14089
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14090
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14091
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14092
  ret void, !dbg !14093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !14094 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14099, metadata !DIExpression()), !dbg !14100
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14101
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14102
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14103
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14104
  ret void, !dbg !14105
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14106 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14123, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14114, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14115, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata i32 %2, metadata !14116, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14117, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata i8* %4, metadata !14118, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata i8* %5, metadata !14119, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata i8* %6, metadata !14120, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata i32 %7, metadata !14121, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata i32 %8, metadata !14122, metadata !DIExpression()), !dbg !14124
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14125, !srcloc !13821
  call void @llvm.dbg.value(metadata i32 %11, metadata !13817, metadata !DIExpression()) #23, !dbg !14130
  %12 = icmp eq i32 %11, 0, !dbg !14131
  br i1 %12, label %14, label %13, !dbg !14132

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.262, i32 0, i32 0), i32 noundef 647) #25, !dbg !14133
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.268, i32 0, i32 0)) #25, !dbg !14133
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.262, i32 0, i32 0), i32 noundef 647) #25, !dbg !14133
  unreachable, !dbg !14133

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !14123, metadata !DIExpression()), !dbg !14124
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !14135
  %17 = icmp eq i64 %15, -1, !dbg !14136
  br i1 %17, label %19, label %18, !dbg !14138

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !14139
  br label %19, !dbg !14141

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !14142
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14143 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14148, metadata !DIExpression()), !dbg !14149
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14147, metadata !DIExpression()), !dbg !14149
  %4 = icmp eq i64 %3, 0, !dbg !14150
  br i1 %4, label %5, label %6, !dbg !14152

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start.269(%struct.k_thread* noundef %0) #24, !dbg !14153
  br label %7, !dbg !14155

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14156
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14158
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start.269(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14159 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14163, metadata !DIExpression()), !dbg !14164
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14165, !srcloc !14167
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14168
  ret void, !dbg !14169
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14170 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14173, metadata !DIExpression()), !dbg !14174
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14172, metadata !DIExpression()), !dbg !14174
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14175
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14176
  ret void, !dbg !14177
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14178 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14180, metadata !DIExpression()), !dbg !14200
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !14201

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.262, i32 0, i32 0), i32 noundef 750) #25, !dbg !14205
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.273, i32 0, i32 0)) #25, !dbg !14205
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.262, i32 0, i32 0), i32 noundef 750) #25, !dbg !14205
  unreachable, !dbg !14205

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14180, metadata !DIExpression()), !dbg !14200
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14208
  br i1 %4, label %6, label %5, !dbg !14209

5:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14210
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14198, metadata !DIExpression()), !dbg !14211
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !14212

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14216
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14216
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14218
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !14218
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14219
  %12 = load i32, i32* %11, align 4, !dbg !14219
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14220
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !14220
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14221
  %16 = load i8*, i8** %15, align 4, !dbg !14221
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14222
  %18 = load i8*, i8** %17, align 4, !dbg !14222
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14223
  %20 = load i8*, i8** %19, align 4, !dbg !14223
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14224
  %22 = load i32, i32* %21, align 4, !dbg !14224
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14225
  %24 = load i32, i32* %23, align 4, !dbg !14225
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !14226
  %26 = load i8*, i8** %25, align 4, !dbg !14226
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !14227
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14228
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !14229
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !14230
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !14230
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14231
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14180, metadata !DIExpression()), !dbg !14200
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14232
  br i1 %32, label %1, label %2, !dbg !14201, !llvm.loop !14233

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.262, i32 0, i32 0), i32 noundef 781) #25, !dbg !14235
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.273, i32 0, i32 0)) #25, !dbg !14235
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.262, i32 0, i32 0), i32 noundef 781) #25, !dbg !14235
  unreachable, !dbg !14235

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !14198, metadata !DIExpression()), !dbg !14211
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14238
  br i1 %36, label %38, label %37, !dbg !14239

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #25, !dbg !14240
  ret void, !dbg !14241

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !14242
  %40 = load i32, i32* %39, align 4, !dbg !14242
  %41 = icmp eq i32 %40, -1, !dbg !14245
  br i1 %41, label %50, label %42, !dbg !14246

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !14247
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !14247
  %45 = icmp sgt i32 %40, 0, !dbg !14249
  %46 = select i1 %45, i32 %40, i32 0, !dbg !14249
  %47 = zext i32 %46 to i64, !dbg !14249
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %47) #24, !dbg !14249
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !14250
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !14250
  br label %50, !dbg !14251

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !14252
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !14198, metadata !DIExpression()), !dbg !14211
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14253
  br i1 %52, label %33, label %34, !dbg !14212, !llvm.loop !14254
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !14256 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14260, metadata !DIExpression()), !dbg !14261
  call void @llvm.dbg.value(metadata i64 %0, metadata !14262, metadata !DIExpression()), !dbg !14277
  call void @llvm.dbg.value(metadata i32 1000, metadata !14265, metadata !DIExpression()), !dbg !14277
  call void @llvm.dbg.value(metadata i32 10000, metadata !14266, metadata !DIExpression()), !dbg !14277
  call void @llvm.dbg.value(metadata i8 1, metadata !14267, metadata !DIExpression()), !dbg !14277
  call void @llvm.dbg.value(metadata i8 0, metadata !14268, metadata !DIExpression()), !dbg !14277
  call void @llvm.dbg.value(metadata i8 1, metadata !14269, metadata !DIExpression()), !dbg !14277
  call void @llvm.dbg.value(metadata i8 0, metadata !14270, metadata !DIExpression()), !dbg !14277
  call void @llvm.dbg.value(metadata i8 1, metadata !14271, metadata !DIExpression()), !dbg !14277
  call void @llvm.dbg.value(metadata i8 0, metadata !14272, metadata !DIExpression()), !dbg !14277
  call void @llvm.dbg.value(metadata i64 0, metadata !14273, metadata !DIExpression()), !dbg !14277
  call void @llvm.dbg.value(metadata i64 0, metadata !14273, metadata !DIExpression()), !dbg !14277
  %2 = mul i64 %0, 10, !dbg !14279
  ret i64 %2, !dbg !14285
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !14286 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14288, metadata !DIExpression()), !dbg !14292
  call void @llvm.dbg.value(metadata i8* %1, metadata !14289, metadata !DIExpression()), !dbg !14292
  call void @llvm.dbg.value(metadata i8* %2, metadata !14290, metadata !DIExpression()), !dbg !14292
  call void @llvm.dbg.value(metadata i8* %3, metadata !14291, metadata !DIExpression()), !dbg !14292
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14293
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14294
  %7 = load i8, i8* %6, align 4, !dbg !14295
  %8 = or i8 %7, 4, !dbg !14295
  store i8 %8, i8* %6, align 4, !dbg !14295
  tail call void @z_thread_essential_clear() #24, !dbg !14296
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !14297
  unreachable, !dbg !14297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !14298 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14303, metadata !DIExpression()), !dbg !14305
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14306
  %3 = load i32, i32* %2, align 4, !dbg !14306
  call void @llvm.dbg.value(metadata i32 %3, metadata !14304, metadata !DIExpression()), !dbg !14305
  %4 = icmp eq i32 %3, 0, !dbg !14307
  br i1 %4, label %10, label %5, !dbg !14309

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !14310
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14313
  %8 = zext i8 %7 to i32, !dbg !14314
  %9 = icmp eq i32 %6, %8, !dbg !14315
  br i1 %9, label %11, label %10, !dbg !14316

10:                                               ; preds = %5, %1
  br label %11, !dbg !14317

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !14305
  ret i1 %12, !dbg !14318
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !14319 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14321, metadata !DIExpression()), !dbg !14322
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14323
  %3 = load i32, i32* %2, align 4, !dbg !14323
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14325
  %5 = zext i8 %4 to i32, !dbg !14326
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14327
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !14328
  %8 = or i32 %7, %5, !dbg !14329
  %9 = icmp eq i32 %3, %8, !dbg !14330
  br i1 %9, label %10, label %11, !dbg !14331

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !14332
  br label %11, !dbg !14333

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !14334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !14335 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14339, metadata !DIExpression()), !dbg !14340
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14341
  %3 = zext i8 %2 to i32, !dbg !14342
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14343
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !14344
  %6 = or i32 %5, %3, !dbg !14345
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14346
  store i32 %6, i32* %7, align 4, !dbg !14347
  ret void, !dbg !14348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !14349 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14353, metadata !DIExpression()), !dbg !14354
  ret i32 -134, !dbg !14355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !14356 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14360, metadata !DIExpression()), !dbg !14362
  call void @llvm.dbg.value(metadata i32 %1, metadata !14361, metadata !DIExpression()), !dbg !14362
  ret i32 -134, !dbg !14363
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !14364 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14371, metadata !DIExpression()), !dbg !14373
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !14372, metadata !DIExpression()), !dbg !14373
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14374
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !14376
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14373
  ret i32 %6, !dbg !14377
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !14378 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !14382, metadata !DIExpression()), !dbg !14383
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !14384
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14383
  ret i32 %3, !dbg !14386
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14387 {
  tail call void @sys_clock_idle_exit() #25, !dbg !14389
  ret void, !dbg !14390
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !14391 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14393, metadata !DIExpression()), !dbg !14396
  call void @llvm.dbg.value(metadata i8* %1, metadata !14394, metadata !DIExpression()), !dbg !14396
  call void @llvm.dbg.value(metadata i8* %2, metadata !14395, metadata !DIExpression()), !dbg !14396
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14397
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !14397
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !14397
  %7 = load i8, i8* %6, align 2, !dbg !14397
  %8 = icmp sgt i8 %7, -1, !dbg !14397
  br i1 %8, label %10, label %9, !dbg !14400

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.283, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 39) #25, !dbg !14401
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 39) #25, !dbg !14401
  unreachable, !dbg !14401

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14403, !srcloc !14410
  call void @llvm.dbg.value(metadata i32 undef, metadata !14406, metadata !DIExpression()) #23, !dbg !14411
  call void @llvm.dbg.value(metadata i32 undef, metadata !14407, metadata !DIExpression()) #23, !dbg !14411
  tail call fastcc void @k_cpu_idle() #24, !dbg !14412
  br label %10, !dbg !14413, !llvm.loop !14414
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14416 {
  tail call void @arch_cpu_idle() #25, !dbg !14417
  ret void, !dbg !14418
}

; Function Attrs: optsize
declare !dbg !14419 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !14420 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14424, metadata !DIExpression()), !dbg !14428
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14425, metadata !DIExpression()), !dbg !14428
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14429
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14429
  %5 = load i8, i8* %4, align 2, !dbg !14429
  call void @llvm.dbg.value(metadata i8 %5, metadata !14426, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14428
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14430
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14430
  %8 = load i8, i8* %7, align 2, !dbg !14430
  call void @llvm.dbg.value(metadata i8 %8, metadata !14427, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14428
  %9 = icmp eq i8 %8, %5, !dbg !14431
  %10 = sext i8 %5 to i32, !dbg !14433
  %11 = sext i8 %8 to i32, !dbg !14433
  %12 = sub nsw i32 %11, %10, !dbg !14433
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14433
  ret i32 %13, !dbg !14434
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14435 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14439, metadata !DIExpression()), !dbg !14440
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !14441
  %3 = icmp eq i32 %2, 0, !dbg !14443
  br i1 %3, label %8, label %4, !dbg !14444

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14445
  %6 = add i32 %5, %2, !dbg !14447
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14448
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !14449
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14450
  br label %8, !dbg !14451

8:                                                ; preds = %4, %1
  ret void, !dbg !14452
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !14453 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14457, metadata !DIExpression()), !dbg !14459
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14460
  call void @llvm.dbg.value(metadata i32 %1, metadata !14458, metadata !DIExpression()), !dbg !14459
  ret i32 %1, !dbg !14461
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14462 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14466, metadata !DIExpression()), !dbg !14475
  call void @llvm.dbg.value(metadata i32 %1, metadata !14467, metadata !DIExpression()), !dbg !14475
  call void @llvm.dbg.value(metadata i32 0, metadata !14468, metadata !DIExpression()), !dbg !14476
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !14484
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14486, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !14493
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !14493
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !14484
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14494
  br i1 %4, label %6, label %5, !dbg !14497

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !14498
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14498
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !14498
  unreachable, !dbg !14498

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !14493
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !14484
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14500
  call void @llvm.dbg.value(metadata i32 undef, metadata !14474, metadata !DIExpression()), !dbg !14476
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()), !dbg !14476
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14501
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14504
  %8 = icmp sgt i32 %0, 0, !dbg !14505
  %9 = icmp sgt i32 %7, 2, !dbg !14507
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14507
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14507
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14508
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14509
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14510
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !14517
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !14517
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14519
  br i1 %12, label %14, label %13, !dbg !14522

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !14523
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14523
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !14523
  unreachable, !dbg !14523

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14486
  call void @llvm.dbg.value(metadata i32 %15, metadata !14489, metadata !DIExpression()) #23, !dbg !14493
  call void @llvm.dbg.value(metadata i32 %15, metadata !14483, metadata !DIExpression()) #23, !dbg !14484
  call void @llvm.dbg.value(metadata i32 %15, metadata !14474, metadata !DIExpression()), !dbg !14476
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !14517
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !14528
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14530, !srcloc !14531
  call void @llvm.dbg.value(metadata i32 1, metadata !14468, metadata !DIExpression()), !dbg !14476
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()), !dbg !14476
  ret void, !dbg !14532
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !14533 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14535, metadata !DIExpression()), !dbg !14536
  call void @llvm.dbg.value(metadata i32 %0, metadata !14537, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14552
  call void @llvm.dbg.value(metadata i32 1000, metadata !14540, metadata !DIExpression()), !dbg !14552
  call void @llvm.dbg.value(metadata i32 10000, metadata !14541, metadata !DIExpression()), !dbg !14552
  call void @llvm.dbg.value(metadata i8 1, metadata !14542, metadata !DIExpression()), !dbg !14552
  call void @llvm.dbg.value(metadata i1 true, metadata !14543, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14552
  call void @llvm.dbg.value(metadata i1 true, metadata !14544, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14552
  call void @llvm.dbg.value(metadata i8 0, metadata !14545, metadata !DIExpression()), !dbg !14552
  call void @llvm.dbg.value(metadata i1 true, metadata !14546, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14552
  call void @llvm.dbg.value(metadata i1 false, metadata !14547, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14552
  call void @llvm.dbg.value(metadata i64 0, metadata !14548, metadata !DIExpression()), !dbg !14552
  call void @llvm.dbg.value(metadata i64 0, metadata !14548, metadata !DIExpression()), !dbg !14552
  %2 = mul i32 %0, 10, !dbg !14554
  ret i32 %2, !dbg !14560
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14561 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14563, metadata !DIExpression()), !dbg !14565
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !14566
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14568, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !14570
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !14570
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !14566
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14571
  br i1 %3, label %5, label %4, !dbg !14572

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !14573
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14573
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !14573
  unreachable, !dbg !14573

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14568
  call void @llvm.dbg.value(metadata i32 %6, metadata !14489, metadata !DIExpression()) #23, !dbg !14570
  call void @llvm.dbg.value(metadata i32 %6, metadata !14483, metadata !DIExpression()) #23, !dbg !14566
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14574
  call void @llvm.dbg.value(metadata i32 %6, metadata !14564, metadata !DIExpression()), !dbg !14565
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14575
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14577
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14578
  br i1 %9, label %10, label %14, !dbg !14579

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14580
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !14582
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !14582
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14584
  br i1 %11, label %13, label %12, !dbg !14585

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !14586
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14586
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !14586
  unreachable, !dbg !14586

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14511, metadata !DIExpression()) #23, !dbg !14582
  call void @llvm.dbg.value(metadata i32 %6, metadata !14525, metadata !DIExpression()) #23, !dbg !14587
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14589, !srcloc !14531
  br label %33, !dbg !14590

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14591
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !14592
  %16 = icmp eq i32 %15, 0, !dbg !14592
  br i1 %16, label %27, label %17, !dbg !14594

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !14595
  br i1 %18, label %19, label %27, !dbg !14596

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14597
  %21 = icmp sgt i32 %20, %0, !dbg !14600
  br i1 %21, label %25, label %22, !dbg !14601

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14602
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !14602
  call void @llvm.dbg.value(metadata i32 %24, metadata !14564, metadata !DIExpression()), !dbg !14565
  br label %28, !dbg !14604

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14605
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14605
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14607
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14565
  call void @llvm.dbg.value(metadata i32 %29, metadata !14564, metadata !DIExpression()), !dbg !14565
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !14609
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !14609
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14611
  br i1 %30, label %32, label %31, !dbg !14612

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !14613
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14613
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !14613
  unreachable, !dbg !14613

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14511, metadata !DIExpression()) #23, !dbg !14609
  call void @llvm.dbg.value(metadata i32 %29, metadata !14525, metadata !DIExpression()) #23, !dbg !14614
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !14616, !srcloc !14531
  br label %33, !dbg !14617

33:                                               ; preds = %32, %13
  ret void, !dbg !14617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !14618 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14622, metadata !DIExpression()), !dbg !14624
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14625
  %3 = icmp eq i32 %2, 0, !dbg !14625
  br i1 %3, label %16, label %4, !dbg !14626

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14627
  br i1 %5, label %16, label %6, !dbg !14628

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14629
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14629
  %9 = load i8, i8* %8, align 2, !dbg !14629
  %10 = sext i8 %9 to i32, !dbg !14630
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14631
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !14632
  br i1 %12, label %16, label %13, !dbg !14633

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14634
  %15 = xor i1 %14, true, !dbg !14635
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14624
  call void @llvm.dbg.value(metadata i1 %17, metadata !14623, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14624
  ret i1 %17, !dbg !14636
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14637 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14641, metadata !DIExpression()), !dbg !14643
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14644
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14642, metadata !DIExpression()), !dbg !14643
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !14645
  br i1 %3, label %5, label %4, !dbg !14647

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !14648
  br label %5, !dbg !14650

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14641, metadata !DIExpression()), !dbg !14643
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14651
  ret i32 %6, !dbg !14652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14653 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14655, metadata !DIExpression()), !dbg !14657
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14658
  %3 = load i8, i8* %2, align 1, !dbg !14658
  call void @llvm.dbg.value(metadata i8 %3, metadata !14656, metadata !DIExpression()), !dbg !14657
  %4 = and i8 %3, 31, !dbg !14659
  %5 = icmp ne i8 %4, 0, !dbg !14660
  ret i1 %5, !dbg !14661
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14662 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14664, metadata !DIExpression()), !dbg !14665
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14666
  br i1 %2, label %3, label %7, !dbg !14668

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14669, metadata !DIExpression()) #23, !dbg !14672
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14675
  %5 = load i8, i8* %4, align 1, !dbg !14676
  %6 = and i8 %5, 127, !dbg !14676
  store i8 %6, i8* %4, align 1, !dbg !14676
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14677, metadata !DIExpression()) #23, !dbg !14680
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14684
  br label %7, !dbg !14685

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14686, metadata !DIExpression()) #23, !dbg !14689
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14691
  %9 = load i8, i8* %8, align 1, !dbg !14692
  %10 = or i8 %9, -128, !dbg !14692
  store i8 %10, i8* %8, align 1, !dbg !14692
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14693, metadata !DIExpression()) #23, !dbg !14696
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14700, metadata !DIExpression()) #23, !dbg !14708
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14706, metadata !DIExpression()) #23, !dbg !14708
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14710
  br i1 %11, label %12, label %13, !dbg !14713

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 186) #25, !dbg !14714
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 186) #25, !dbg !14714
  unreachable, !dbg !14714

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14716
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14707, metadata !DIExpression()) #23, !dbg !14708
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14718
  br i1 %15, label %26, label %16, !dbg !14716

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14707, metadata !DIExpression()) #23, !dbg !14708
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14720
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14707, metadata !DIExpression()) #23, !dbg !14708
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #25, !dbg !14721
  %20 = icmp sgt i32 %19, 0, !dbg !14724
  br i1 %20, label %21, label %23, !dbg !14725

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14726
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #25, !dbg !14728
  br label %28, !dbg !14729

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #25, !dbg !14718
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14707, metadata !DIExpression()) #23, !dbg !14708
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14718
  br i1 %25, label %26, label %16, !dbg !14716, !llvm.loop !14730

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14732
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #25, !dbg !14733
  br label %28, !dbg !14734

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14735
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14736
  %31 = zext i1 %30 to i32, !dbg !14736
  tail call fastcc void @update_cache(i32 noundef %31) #24, !dbg !14737
  ret void, !dbg !14738
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14739 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14741, metadata !DIExpression()), !dbg !14742
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !14743
  ret i1 %2, !dbg !14744
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14745 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14747, metadata !DIExpression()), !dbg !14749
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14748, metadata !DIExpression()), !dbg !14749
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !14750
  br i1 %3, label %4, label %5, !dbg !14753

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14754
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14754
  unreachable, !dbg !14754

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14756
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !14757
  ret void, !dbg !14758
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !14759 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14761, metadata !DIExpression()), !dbg !14762
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14763
  ret i1 %2, !dbg !14764
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14765 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14769, metadata !DIExpression()), !dbg !14770
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !14771
  br i1 %2, label %6, label %3, !dbg !14771

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14772
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14772
  br label %6, !dbg !14771

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14771
  ret %struct._dnode* %7, !dbg !14773
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14774 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14778, metadata !DIExpression()), !dbg !14782
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14779, metadata !DIExpression()), !dbg !14782
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14783
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14783
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14780, metadata !DIExpression()), !dbg !14782
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14784
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14785
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14786
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14787
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14788
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14789
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14790
  ret void, !dbg !14791
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14792 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14796, metadata !DIExpression()), !dbg !14798
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14797, metadata !DIExpression()), !dbg !14798
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14799
  br i1 %3, label %6, label %4, !dbg !14800

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !14801
  br label %6, !dbg !14800

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14800
  ret %struct._dnode* %7, !dbg !14802
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14803 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14807, metadata !DIExpression()), !dbg !14810
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14808, metadata !DIExpression()), !dbg !14810
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14811
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14811
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14809, metadata !DIExpression()), !dbg !14810
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14812
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14813
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14814
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14815
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14816
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14817
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14818
  ret void, !dbg !14819
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14820 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14822, metadata !DIExpression()), !dbg !14824
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14825
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14832, metadata !DIExpression()) #23, !dbg !14834
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14835
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14836
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14836
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14823, metadata !DIExpression()), !dbg !14824
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14837, metadata !DIExpression()) #23, !dbg !14843
  call void @llvm.dbg.value(metadata i32 %0, metadata !14842, metadata !DIExpression()) #23, !dbg !14843
  %6 = icmp eq i32 %0, 0, !dbg !14846
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14848
  br i1 %6, label %8, label %18, !dbg !14849

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14850
  br i1 %9, label %10, label %11, !dbg !14853

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 137) #25, !dbg !14854
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !14854
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 137) #25, !dbg !14854
  unreachable, !dbg !14854

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #25, !dbg !14856
  br i1 %12, label %18, label %13, !dbg !14858

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !14859
  br i1 %14, label %18, label %15, !dbg !14861

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #25, !dbg !14862
  %17 = icmp eq i32 %16, 0, !dbg !14862
  br i1 %17, label %21, label %18, !dbg !14864

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14865
  br i1 %19, label %21, label %20, !dbg !14868

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14869
  br label %21, !dbg !14871

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14848
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14848
  ret void, !dbg !14872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !14873 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14877, metadata !DIExpression()), !dbg !14880
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14878, metadata !DIExpression()), !dbg !14880
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !14881
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14879, metadata !DIExpression()), !dbg !14880
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14878, metadata !DIExpression()), !dbg !14880
  ret %struct.k_thread* %3, !dbg !14882
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14883 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14885, metadata !DIExpression()), !dbg !14886
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14887
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14888
  %4 = xor i1 %3, true, !dbg !14889
  ret i1 %4, !dbg !14890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14891 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14893, metadata !DIExpression()), !dbg !14894
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14895
  %3 = load i16, i16* %2, align 2, !dbg !14895
  %4 = icmp ult i16 %3, 128, !dbg !14896
  %5 = zext i1 %4 to i32, !dbg !14896
  ret i32 %5, !dbg !14897
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14898 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14904, metadata !DIExpression()), !dbg !14905
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14906
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !14907
  %4 = xor i1 %3, true, !dbg !14908
  ret i1 %4, !dbg !14909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14910 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14916, metadata !DIExpression()), !dbg !14917
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14918
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14918
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14919
  ret i1 %4, !dbg !14920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14921 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14923, metadata !DIExpression()), !dbg !14925
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14924, metadata !DIExpression()), !dbg !14925
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14926
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14926
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14927
  br i1 %5, label %9, label %6, !dbg !14928

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14929
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14929
  br label %9, !dbg !14928

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14928
  ret %struct._dnode* %10, !dbg !14930
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14931 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14935, metadata !DIExpression()), !dbg !14936
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14937
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14937
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14938
  ret i1 %4, !dbg !14939
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !14940 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14944, metadata !DIExpression()), !dbg !14947
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14948
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14948
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14945, metadata !DIExpression()), !dbg !14947
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14949
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14949
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14946, metadata !DIExpression()), !dbg !14947
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14950
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14951
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14952
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14953
  tail call fastcc void @sys_dnode_init.295(%struct._dnode* noundef %0) #24, !dbg !14954
  ret void, !dbg !14955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.295(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14956 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14958, metadata !DIExpression()), !dbg !14959
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14960
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14961
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14962
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14963
  ret void, !dbg !14964
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !14965 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14969, metadata !DIExpression()), !dbg !14971
  call void @llvm.dbg.value(metadata i32 %1, metadata !14970, metadata !DIExpression()), !dbg !14971
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14972
  %4 = load i8, i8* %3, align 1, !dbg !14972
  %5 = zext i8 %4 to i32, !dbg !14973
  %6 = and i32 %5, %1, !dbg !14974
  %7 = icmp ne i32 %6, 0, !dbg !14975
  ret i1 %7, !dbg !14976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14977 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14981, metadata !DIExpression()), !dbg !14983
  call void @llvm.dbg.value(metadata i32 %1, metadata !14982, metadata !DIExpression()), !dbg !14983
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !14984
  ret i1 %3, !dbg !14985
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14986 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14988, metadata !DIExpression()), !dbg !14990
  call void @llvm.dbg.value(metadata i32 %1, metadata !14989, metadata !DIExpression()), !dbg !14990
  %3 = icmp slt i32 %0, %1, !dbg !14991
  ret i1 %3, !dbg !14992
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14993 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14995, metadata !DIExpression()), !dbg !14999
  call void @llvm.dbg.value(metadata i32 0, metadata !14996, metadata !DIExpression()), !dbg !15000
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15001
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15003, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15005
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15005
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15001
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15006
  br i1 %3, label %5, label %4, !dbg !15007

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15008
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15008
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15008
  unreachable, !dbg !15008

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15005
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15001
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15009
  call void @llvm.dbg.value(metadata i32 undef, metadata !14998, metadata !DIExpression()), !dbg !15000
  call void @llvm.dbg.value(metadata i32 undef, metadata !14996, metadata !DIExpression()), !dbg !15000
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15010
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15015
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15015
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15017
  br i1 %6, label %8, label %7, !dbg !15018

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15019
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15019
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15019
  unreachable, !dbg !15019

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15003
  call void @llvm.dbg.value(metadata i32 %9, metadata !14489, metadata !DIExpression()) #23, !dbg !15005
  call void @llvm.dbg.value(metadata i32 %9, metadata !14483, metadata !DIExpression()) #23, !dbg !15001
  call void @llvm.dbg.value(metadata i32 %9, metadata !14998, metadata !DIExpression()), !dbg !15000
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15015
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !15020
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15022, !srcloc !14531
  call void @llvm.dbg.value(metadata i32 1, metadata !14996, metadata !DIExpression()), !dbg !15000
  call void @llvm.dbg.value(metadata i32 undef, metadata !14996, metadata !DIExpression()), !dbg !15000
  ret void, !dbg !15023
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15024 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15026, metadata !DIExpression()), !dbg !15027
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15028
  br i1 %2, label %27, label %3, !dbg !15030

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15031
  br i1 %4, label %5, label %27, !dbg !15032

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14686, metadata !DIExpression()) #23, !dbg !15033
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15036
  %7 = load i8, i8* %6, align 1, !dbg !15037
  %8 = or i8 %7, -128, !dbg !15037
  store i8 %8, i8* %6, align 1, !dbg !15037
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14693, metadata !DIExpression()) #23, !dbg !15038
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14700, metadata !DIExpression()) #23, !dbg !15040
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14706, metadata !DIExpression()) #23, !dbg !15040
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15042
  br i1 %9, label %10, label %11, !dbg !15043

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 186) #25, !dbg !15044
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 186) #25, !dbg !15044
  unreachable, !dbg !15044

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15045
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14707, metadata !DIExpression()) #23, !dbg !15040
  %13 = icmp eq %struct._dnode* %12, null, !dbg !15046
  br i1 %13, label %24, label %14, !dbg !15045

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14707, metadata !DIExpression()) #23, !dbg !15040
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !15047
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14707, metadata !DIExpression()) #23, !dbg !15040
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #25, !dbg !15048
  %18 = icmp sgt i32 %17, 0, !dbg !15049
  br i1 %18, label %19, label %21, !dbg !15050

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15051
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #25, !dbg !15052
  br label %26, !dbg !15053

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #25, !dbg !15046
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14707, metadata !DIExpression()) #23, !dbg !15040
  %23 = icmp eq %struct._dnode* %22, null, !dbg !15046
  br i1 %23, label %24, label %14, !dbg !15045, !llvm.loop !15054

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15056
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #25, !dbg !15057
  br label %26, !dbg !15058

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15059
  br label %27, !dbg !15060

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !15061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15062 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15064, metadata !DIExpression()), !dbg !15065
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !15066
  br i1 %2, label %6, label %3, !dbg !15067

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !15068
  %5 = xor i1 %4, true, !dbg !15067
  br label %6, !dbg !15067

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15069
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15070 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15072, metadata !DIExpression()), !dbg !15076
  call void @llvm.dbg.value(metadata i32 0, metadata !15073, metadata !DIExpression()), !dbg !15077
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15078
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15080, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15082
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15082
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15078
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15083
  br i1 %3, label %5, label %4, !dbg !15084

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15085
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15085
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15085
  unreachable, !dbg !15085

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15082
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15078
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15086
  call void @llvm.dbg.value(metadata i32 undef, metadata !15075, metadata !DIExpression()), !dbg !15077
  call void @llvm.dbg.value(metadata i32 undef, metadata !15073, metadata !DIExpression()), !dbg !15077
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !15087
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15090
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15090
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15092
  br i1 %6, label %8, label %7, !dbg !15093

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15094
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15094
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15094
  unreachable, !dbg !15094

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15080
  call void @llvm.dbg.value(metadata i32 %9, metadata !14489, metadata !DIExpression()) #23, !dbg !15082
  call void @llvm.dbg.value(metadata i32 %9, metadata !14483, metadata !DIExpression()) #23, !dbg !15078
  call void @llvm.dbg.value(metadata i32 %9, metadata !15075, metadata !DIExpression()), !dbg !15077
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15090
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !15095
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15097, !srcloc !14531
  call void @llvm.dbg.value(metadata i32 1, metadata !15073, metadata !DIExpression()), !dbg !15077
  call void @llvm.dbg.value(metadata i32 undef, metadata !15073, metadata !DIExpression()), !dbg !15077
  ret void, !dbg !15098
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15099 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15101, metadata !DIExpression()), !dbg !15103
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15104
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15106, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15108
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15108
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15104
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15109
  br i1 %3, label %5, label %4, !dbg !15110

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15111
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15111
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15111
  unreachable, !dbg !15111

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15106
  call void @llvm.dbg.value(metadata i32 %6, metadata !14489, metadata !DIExpression()) #23, !dbg !15108
  call void @llvm.dbg.value(metadata i32 %6, metadata !14483, metadata !DIExpression()) #23, !dbg !15104
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15112
  call void @llvm.dbg.value(metadata i32 %6, metadata !15102, metadata !DIExpression()), !dbg !15103
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !15113
  br i1 %7, label %8, label %12, !dbg !15115

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15116
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15116
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15119
  br i1 %9, label %11, label %10, !dbg !15120

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15121
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15121
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15121
  unreachable, !dbg !15121

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14511, metadata !DIExpression()) #23, !dbg !15116
  call void @llvm.dbg.value(metadata i32 %6, metadata !14525, metadata !DIExpression()) #23, !dbg !15122
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15124, !srcloc !14531
  br label %14, !dbg !15125

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.300(%struct.k_thread* noundef %0) #24, !dbg !15126
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15127
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15128
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15128
  br label %14, !dbg !15129

14:                                               ; preds = %12, %11
  ret void, !dbg !15129
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15130 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15132, metadata !DIExpression()), !dbg !15133
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15134
  %3 = load i8, i8* %2, align 1, !dbg !15134
  %4 = and i8 %3, 4, !dbg !15135
  %5 = icmp eq i8 %4, 0, !dbg !15136
  ret i1 %5, !dbg !15137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.300(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15138 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15140, metadata !DIExpression()), !dbg !15141
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15142
  %3 = load i8, i8* %2, align 1, !dbg !15143
  %4 = and i8 %3, -5, !dbg !15143
  store i8 %4, i8* %2, align 1, !dbg !15143
  ret void, !dbg !15144
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15145 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15148, metadata !DIExpression()), !dbg !15149
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15147, metadata !DIExpression()), !dbg !15149
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !15150
  br i1 %4, label %5, label %12, !dbg !15152

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !15153
  br i1 %6, label %7, label %12, !dbg !15154

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15155, metadata !DIExpression()) #23, !dbg !15161
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15160, metadata !DIExpression()) #23, !dbg !15161
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15164, metadata !DIExpression()) #23, !dbg !15169
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15171
  br i1 %8, label %10, label %9, !dbg !15174

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !15175
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15175
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !15175
  unreachable, !dbg !15175

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !15155, metadata !DIExpression()) #23, !dbg !15161
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15177
  br label %16, !dbg !15178

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15179
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14516, metadata !DIExpression()) #23, !dbg !15179
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15182
  br i1 %13, label %15, label %14, !dbg !15183

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15184
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15184
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15184
  unreachable, !dbg !15184

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14511, metadata !DIExpression()) #23, !dbg !15179
  call void @llvm.dbg.value(metadata i32 %3, metadata !14525, metadata !DIExpression()) #23, !dbg !15185
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15187, !srcloc !14531
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !15188
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15189 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15193, metadata !DIExpression()), !dbg !15194
  call void @llvm.dbg.value(metadata i32 %0, metadata !15195, metadata !DIExpression()), !dbg !15200
  %2 = icmp eq i32 %0, 0, !dbg !15202
  br i1 %2, label %3, label %6, !dbg !15203

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15204, !srcloc !15211
  call void @llvm.dbg.value(metadata i32 %4, metadata !15207, metadata !DIExpression()) #23, !dbg !15212
  %5 = icmp eq i32 %4, 0, !dbg !15213
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15194
  ret i1 %7, !dbg !15214
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !15215 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15218
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15217, metadata !DIExpression()), !dbg !15219
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15220
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15221
  ret i1 %3, !dbg !15222
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15223 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15225, metadata !DIExpression()), !dbg !15227
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15228
  call void @llvm.dbg.value(metadata i32 %2, metadata !15226, metadata !DIExpression()), !dbg !15227
  ret i32 %2, !dbg !15229
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15230 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15232, metadata !DIExpression()), !dbg !15236
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15237
  call void @llvm.dbg.value(metadata i32 0, metadata !15233, metadata !DIExpression()), !dbg !15238
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15239
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15241, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15243
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15243
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15239
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15244
  br i1 %4, label %6, label %5, !dbg !15245

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15246
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15246
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15246
  unreachable, !dbg !15246

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !15241
  call void @llvm.dbg.value(metadata i32 %7, metadata !14489, metadata !DIExpression()) #23, !dbg !15243
  call void @llvm.dbg.value(metadata i32 %7, metadata !14483, metadata !DIExpression()) #23, !dbg !15239
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15247
  call void @llvm.dbg.value(metadata i32 %7, metadata !15235, metadata !DIExpression()), !dbg !15238
  call void @llvm.dbg.value(metadata i32 undef, metadata !15233, metadata !DIExpression()), !dbg !15238
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15248
  br i1 %8, label %9, label %13, !dbg !15252

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14669, metadata !DIExpression()) #23, !dbg !15253
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15256
  %11 = load i8, i8* %10, align 1, !dbg !15257
  %12 = and i8 %11, 127, !dbg !15257
  store i8 %12, i8* %10, align 1, !dbg !15257
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14677, metadata !DIExpression()) #23, !dbg !15258
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15260
  br label %13, !dbg !15261

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !15262
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15263
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15264
  %16 = zext i1 %15 to i32, !dbg !15264
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !15265
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15266
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15266
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15268
  br i1 %17, label %19, label %18, !dbg !15269

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15270
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15270
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15270
  unreachable, !dbg !15270

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14511, metadata !DIExpression()) #23, !dbg !15266
  call void @llvm.dbg.value(metadata i32 %7, metadata !14525, metadata !DIExpression()) #23, !dbg !15271
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !15273, !srcloc !14531
  call void @llvm.dbg.value(metadata i32 1, metadata !15233, metadata !DIExpression()), !dbg !15238
  call void @llvm.dbg.value(metadata i32 undef, metadata !15233, metadata !DIExpression()), !dbg !15238
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15274
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !15276
  br i1 %21, label %22, label %23, !dbg !15277

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15278
  br label %23, !dbg !15280

23:                                               ; preds = %22, %19
  ret void, !dbg !15281
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15282 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15284, metadata !DIExpression()), !dbg !15285
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15286
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15287
  ret i32 %3, !dbg !15288
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15289 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15291, metadata !DIExpression()), !dbg !15292
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15293
  %3 = load i8, i8* %2, align 1, !dbg !15294
  %4 = or i8 %3, 16, !dbg !15294
  store i8 %4, i8* %2, align 1, !dbg !15294
  ret void, !dbg !15295
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15296 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15297, !srcloc !14492
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15297
  call void @llvm.dbg.value(metadata i32 %2, metadata !14489, metadata !DIExpression()) #23, !dbg !15299
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15299
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !15300
  ret void, !dbg !15301
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15302 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15304, metadata !DIExpression()), !dbg !15305
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !15306
  br i1 %2, label %3, label %5, !dbg !15308

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15309
  br label %6, !dbg !15311

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14525, metadata !DIExpression()) #23, !dbg !15312
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !15315, !srcloc !14531
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15316
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15317 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15319, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15322
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15324, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15326
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15326
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15322
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15327
  br i1 %3, label %5, label %4, !dbg !15328

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15329
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15329
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15329
  unreachable, !dbg !15329

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15324
  call void @llvm.dbg.value(metadata i32 %6, metadata !14489, metadata !DIExpression()) #23, !dbg !15326
  call void @llvm.dbg.value(metadata i32 %6, metadata !14483, metadata !DIExpression()) #23, !dbg !15322
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15330
  call void @llvm.dbg.value(metadata i32 %6, metadata !15320, metadata !DIExpression()), !dbg !15321
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !15331
  br i1 %7, label %12, label %8, !dbg !15333

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15334
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15334
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15337
  br i1 %9, label %11, label %10, !dbg !15338

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15339
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15339
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15339
  unreachable, !dbg !15339

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14511, metadata !DIExpression()) #23, !dbg !15334
  call void @llvm.dbg.value(metadata i32 %6, metadata !14525, metadata !DIExpression()) #23, !dbg !15340
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15342, !srcloc !14531
  br label %14, !dbg !15343

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !15344
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15345
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15346
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15346
  br label %14, !dbg !15347

14:                                               ; preds = %12, %11
  ret void, !dbg !15347
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15348 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15350, metadata !DIExpression()), !dbg !15351
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15352
  %3 = load i8, i8* %2, align 1, !dbg !15352
  %4 = and i8 %3, 16, !dbg !15353
  %5 = icmp ne i8 %4, 0, !dbg !15354
  ret i1 %5, !dbg !15355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15356 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15358, metadata !DIExpression()), !dbg !15359
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15360
  %3 = load i8, i8* %2, align 1, !dbg !15361
  %4 = and i8 %3, -17, !dbg !15361
  store i8 %4, i8* %2, align 1, !dbg !15361
  ret void, !dbg !15362
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15363 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15373, metadata !DIExpression()), !dbg !15377
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15371, metadata !DIExpression()), !dbg !15377
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15372, metadata !DIExpression()), !dbg !15377
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15378
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !15378
  br i1 %5, label %9, label %6, !dbg !15378

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !15378
  br i1 %7, label %9, label %8, !dbg !15381

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 773) #25, !dbg !15382
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 773) #25, !dbg !15382
  unreachable, !dbg !15382

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !15374, metadata !DIExpression()), !dbg !15384
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15385
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15387, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15389
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15389
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15385
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15390
  br i1 %11, label %13, label %12, !dbg !15391

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15392
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15392
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15392
  unreachable, !dbg !15392

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15389
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15385
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15393
  call void @llvm.dbg.value(metadata i32 undef, metadata !15376, metadata !DIExpression()), !dbg !15384
  call void @llvm.dbg.value(metadata i32 undef, metadata !15374, metadata !DIExpression()), !dbg !15384
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !15394
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15397
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15397
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15399
  br i1 %14, label %16, label %15, !dbg !15400

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15401
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15401
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15401
  unreachable, !dbg !15401

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !15387
  call void @llvm.dbg.value(metadata i32 %17, metadata !14489, metadata !DIExpression()) #23, !dbg !15389
  call void @llvm.dbg.value(metadata i32 %17, metadata !14483, metadata !DIExpression()) #23, !dbg !15385
  call void @llvm.dbg.value(metadata i32 %17, metadata !15376, metadata !DIExpression()), !dbg !15384
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15397
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !15402
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !15404, !srcloc !14531
  call void @llvm.dbg.value(metadata i32 1, metadata !15374, metadata !DIExpression()), !dbg !15384
  call void @llvm.dbg.value(metadata i32 undef, metadata !15374, metadata !DIExpression()), !dbg !15384
  ret void, !dbg !15405
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15406 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15408, metadata !DIExpression()), !dbg !15409
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15410
  %3 = load i8, i8* %2, align 1, !dbg !15410
  %4 = and i8 %3, 1, !dbg !15411
  %5 = icmp ne i8 %4, 0, !dbg !15412
  ret i1 %5, !dbg !15413
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15414 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15418, metadata !DIExpression()), !dbg !15419
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15416, metadata !DIExpression()), !dbg !15419
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15417, metadata !DIExpression()), !dbg !15419
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #24, !dbg !15420
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !15421
  ret void, !dbg !15422
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15423 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15427, metadata !DIExpression()), !dbg !15429
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15428, metadata !DIExpression()), !dbg !15429
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !15430
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !15431
  %3 = icmp eq %union.anon* %1, null, !dbg !15432
  br i1 %3, label %24, label %4, !dbg !15434

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15435
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15437
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15438
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14700, metadata !DIExpression()) #23, !dbg !15439
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14706, metadata !DIExpression()) #23, !dbg !15439
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15441
  br i1 %7, label %8, label %9, !dbg !15442

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 186) #25, !dbg !15443
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 186) #25, !dbg !15443
  unreachable, !dbg !15443

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !15444
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14707, metadata !DIExpression()) #23, !dbg !15439
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15445
  br i1 %11, label %22, label %12, !dbg !15444

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14707, metadata !DIExpression()) #23, !dbg !15439
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15446
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14707, metadata !DIExpression()) #23, !dbg !15439
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #25, !dbg !15447
  %16 = icmp sgt i32 %15, 0, !dbg !15448
  br i1 %16, label %17, label %19, !dbg !15449

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15450
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !15451
  br label %24, !dbg !15452

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #25, !dbg !15445
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14707, metadata !DIExpression()) #23, !dbg !15439
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15445
  br i1 %21, label %22, label %12, !dbg !15444, !llvm.loop !15453

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15455
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #25, !dbg !15456
  br label %24, !dbg !15457

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !15458
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15459 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15464, metadata !DIExpression()), !dbg !15465
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15463, metadata !DIExpression()), !dbg !15465
  %4 = icmp eq i64 %3, -1, !dbg !15466
  br i1 %4, label %6, label %5, !dbg !15468

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.302(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15469
  br label %6, !dbg !15471

6:                                                ; preds = %5, %2
  ret void, !dbg !15472
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.302(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15473 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15476, metadata !DIExpression()), !dbg !15477
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15475, metadata !DIExpression()), !dbg !15477
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15478
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15479
  ret void, !dbg !15480
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15481 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15483, metadata !DIExpression()), !dbg !15491
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15492
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15492
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15484, metadata !DIExpression()), !dbg !15491
  call void @llvm.dbg.value(metadata i32 0, metadata !15485, metadata !DIExpression()), !dbg !15493
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15494
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15496, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15498
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15498
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15494
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15499
  br i1 %5, label %7, label %6, !dbg !15500

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15501
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15501
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15501
  unreachable, !dbg !15501

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15498
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15494
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15502
  call void @llvm.dbg.value(metadata i32 undef, metadata !15487, metadata !DIExpression()), !dbg !15493
  call void @llvm.dbg.value(metadata i32 undef, metadata !15485, metadata !DIExpression()), !dbg !15493
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15503
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15504
  %10 = load i8, i8* %9, align 1, !dbg !15504
  %11 = and i8 %10, 40, !dbg !15505
  %12 = icmp eq i8 %11, 0, !dbg !15505
  call void @llvm.dbg.value(metadata i1 %12, metadata !15488, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15506
  br i1 %12, label %13, label %20, !dbg !15507

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15508
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !15508
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !15508
  %17 = icmp eq %union.anon* %16, null, !dbg !15512
  br i1 %17, label %19, label %18, !dbg !15513

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15514
  br label %19, !dbg !15516

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.300(%struct.k_thread* noundef nonnull %3) #24, !dbg !15517
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15518
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15519
  br label %20, !dbg !15520

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15521
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15521
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15523
  br i1 %21, label %23, label %22, !dbg !15524

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15525
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15525
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15525
  unreachable, !dbg !15525

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15496
  call void @llvm.dbg.value(metadata i32 %24, metadata !14489, metadata !DIExpression()) #23, !dbg !15498
  call void @llvm.dbg.value(metadata i32 %24, metadata !14483, metadata !DIExpression()) #23, !dbg !15494
  call void @llvm.dbg.value(metadata i32 %24, metadata !15487, metadata !DIExpression()), !dbg !15493
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15521
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !15526
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !15528, !srcloc !14531
  call void @llvm.dbg.value(metadata i32 1, metadata !15485, metadata !DIExpression()), !dbg !15493
  call void @llvm.dbg.value(metadata i32 undef, metadata !15485, metadata !DIExpression()), !dbg !15493
  ret void, !dbg !15529
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15530 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15532, metadata !DIExpression()), !dbg !15533
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !15534
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15535
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15536
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15537
  store %union.anon* null, %union.anon** %3, align 8, !dbg !15538
  ret void, !dbg !15539
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15540 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15544, metadata !DIExpression()), !dbg !15545
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15546
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !15546
  %4 = icmp eq %union.anon* %3, null, !dbg !15546
  br i1 %4, label %5, label %6, !dbg !15549

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 726) #25, !dbg !15550
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 726) #25, !dbg !15550
  unreachable, !dbg !15550

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !15552
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15553 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15555, metadata !DIExpression()), !dbg !15556
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15557
  %3 = load i8, i8* %2, align 1, !dbg !15558
  %4 = and i8 %3, -3, !dbg !15558
  store i8 %4, i8* %2, align 1, !dbg !15558
  ret void, !dbg !15559
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15560 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15562, metadata !DIExpression()), !dbg !15563
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15564
  br i1 %2, label %3, label %7, !dbg !15566

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14669, metadata !DIExpression()) #23, !dbg !15567
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15570
  %5 = load i8, i8* %4, align 1, !dbg !15571
  %6 = and i8 %5, 127, !dbg !15571
  store i8 %6, i8* %4, align 1, !dbg !15571
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14677, metadata !DIExpression()) #23, !dbg !15572
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15574
  br label %7, !dbg !15575

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15576
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15577
  %10 = zext i1 %9 to i32, !dbg !15577
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15578
  ret void, !dbg !15579
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15580 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15582, metadata !DIExpression()), !dbg !15583
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15584
  %3 = load i8, i8* %2, align 1, !dbg !15585
  %4 = or i8 %3, 2, !dbg !15585
  store i8 %4, i8* %2, align 1, !dbg !15585
  ret void, !dbg !15586
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !15587 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15589, metadata !DIExpression()), !dbg !15593
  call void @llvm.dbg.value(metadata i32 0, metadata !15590, metadata !DIExpression()), !dbg !15594
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15595
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15597, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15599
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15599
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15595
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15600
  br i1 %3, label %5, label %4, !dbg !15601

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15602
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15602
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15602
  unreachable, !dbg !15602

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15599
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15595
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15603
  call void @llvm.dbg.value(metadata i32 undef, metadata !15592, metadata !DIExpression()), !dbg !15594
  call void @llvm.dbg.value(metadata i32 undef, metadata !15590, metadata !DIExpression()), !dbg !15594
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15604
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15607
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15607
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15609
  br i1 %6, label %8, label %7, !dbg !15610

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15611
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15611
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15611
  unreachable, !dbg !15611

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15597
  call void @llvm.dbg.value(metadata i32 %9, metadata !14489, metadata !DIExpression()) #23, !dbg !15599
  call void @llvm.dbg.value(metadata i32 %9, metadata !14483, metadata !DIExpression()) #23, !dbg !15595
  call void @llvm.dbg.value(metadata i32 %9, metadata !15592, metadata !DIExpression()), !dbg !15594
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15607
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !15612
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15614, !srcloc !14531
  call void @llvm.dbg.value(metadata i32 1, metadata !15590, metadata !DIExpression()), !dbg !15594
  call void @llvm.dbg.value(metadata i32 undef, metadata !15590, metadata !DIExpression()), !dbg !15594
  ret void, !dbg !15615
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15616 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15622, metadata !DIExpression()), !dbg !15627
  call void @llvm.dbg.value(metadata i32 %0, metadata !15620, metadata !DIExpression()), !dbg !15627
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15621, metadata !DIExpression()), !dbg !15627
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15628
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !15629
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15630
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15631
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15632
  call void @llvm.dbg.value(metadata i32 %6, metadata !15623, metadata !DIExpression()), !dbg !15627
  call void @llvm.dbg.value(metadata i32 0, metadata !15624, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15634
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15636, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15634
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15639
  br i1 %8, label %10, label %9, !dbg !15640

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15641
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15641
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15641
  unreachable, !dbg !15641

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15634
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15642
  call void @llvm.dbg.value(metadata i32 undef, metadata !15626, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.value(metadata i32 undef, metadata !15624, metadata !DIExpression()), !dbg !15633
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15643
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15647
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15648
  br i1 %13, label %14, label %15, !dbg !15649

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15650
  br label %15, !dbg !15652

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15653
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15653
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15655
  br i1 %16, label %18, label %17, !dbg !15656

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15657
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15657
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15657
  unreachable, !dbg !15657

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15636
  call void @llvm.dbg.value(metadata i32 %19, metadata !14489, metadata !DIExpression()) #23, !dbg !15638
  call void @llvm.dbg.value(metadata i32 %19, metadata !14483, metadata !DIExpression()) #23, !dbg !15634
  call void @llvm.dbg.value(metadata i32 %19, metadata !15626, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15653
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !15658
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !15660, !srcloc !14531
  call void @llvm.dbg.value(metadata i32 1, metadata !15624, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.value(metadata i32 undef, metadata !15624, metadata !DIExpression()), !dbg !15633
  ret i32 %6, !dbg !15661
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15662 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15667, metadata !DIExpression()), !dbg !15670
  call void @llvm.dbg.value(metadata i64 undef, metadata !15669, metadata !DIExpression()), !dbg !15670
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15666, metadata !DIExpression()), !dbg !15670
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15668, metadata !DIExpression()), !dbg !15670
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15671
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15672
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !15673
  br i1 %6, label %7, label %8, !dbg !15676

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 846) #25, !dbg !15677
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 846) #25, !dbg !15677
  unreachable, !dbg !15677

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15679
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15681, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15683
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15683
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15679
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15684
  br i1 %10, label %12, label %11, !dbg !15685

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15686
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15686
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15686
  unreachable, !dbg !15686

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15683
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15679
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15687
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15688
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !15689
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15164, metadata !DIExpression()) #23, !dbg !15690
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15692
  br i1 %14, label %16, label %15, !dbg !15693

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !15694
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15694
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !15694
  unreachable, !dbg !15694

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !15155, metadata !DIExpression()) #23, !dbg !15695
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15160, metadata !DIExpression()) #23, !dbg !15695
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15164, metadata !DIExpression()) #23, !dbg !15697
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15699
  br i1 %17, label %19, label %18, !dbg !15700

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !15701
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15701
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !15701
  unreachable, !dbg !15701

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !15155, metadata !DIExpression()) #23, !dbg !15695
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #25, !dbg !15702
  ret i32 %21, !dbg !15703
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15704 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15708, metadata !DIExpression()), !dbg !15713
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15709, metadata !DIExpression()), !dbg !15713
  call void @llvm.dbg.value(metadata i32 0, metadata !15710, metadata !DIExpression()), !dbg !15714
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15715
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15717, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15719
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15719
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15715
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15720
  br i1 %3, label %5, label %4, !dbg !15721

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15722
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15722
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15722
  unreachable, !dbg !15722

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15719
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15715
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15723
  call void @llvm.dbg.value(metadata i32 undef, metadata !15712, metadata !DIExpression()), !dbg !15714
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15709, metadata !DIExpression()), !dbg !15713
  call void @llvm.dbg.value(metadata i32 undef, metadata !15710, metadata !DIExpression()), !dbg !15714
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15724
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15709, metadata !DIExpression()), !dbg !15713
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15727
  br i1 %8, label %10, label %9, !dbg !15729

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15730
  br label %10, !dbg !15732

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15733
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15733
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15735
  br i1 %11, label %13, label %12, !dbg !15736

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15737
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15737
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15737
  unreachable, !dbg !15737

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15717
  call void @llvm.dbg.value(metadata i32 %14, metadata !14489, metadata !DIExpression()) #23, !dbg !15719
  call void @llvm.dbg.value(metadata i32 %14, metadata !14483, metadata !DIExpression()) #23, !dbg !15715
  call void @llvm.dbg.value(metadata i32 %14, metadata !15712, metadata !DIExpression()), !dbg !15714
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15733
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !15738
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15740, !srcloc !14531
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15709, metadata !DIExpression()), !dbg !15713
  call void @llvm.dbg.value(metadata i32 undef, metadata !15710, metadata !DIExpression()), !dbg !15714
  ret %struct.k_thread* %7, !dbg !15741
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15742 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15744, metadata !DIExpression()), !dbg !15749
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15745, metadata !DIExpression()), !dbg !15749
  call void @llvm.dbg.value(metadata i32 0, metadata !15746, metadata !DIExpression()), !dbg !15750
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15751
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15753, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15755
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15755
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15751
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15756
  br i1 %3, label %5, label %4, !dbg !15757

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15758
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15758
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15758
  unreachable, !dbg !15758

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15755
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15751
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15759
  call void @llvm.dbg.value(metadata i32 undef, metadata !15748, metadata !DIExpression()), !dbg !15750
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15745, metadata !DIExpression()), !dbg !15749
  call void @llvm.dbg.value(metadata i32 undef, metadata !15746, metadata !DIExpression()), !dbg !15750
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15760
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15745, metadata !DIExpression()), !dbg !15749
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15763
  br i1 %8, label %11, label %9, !dbg !15765

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15766
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15768
  br label %11, !dbg !15769

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15770
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15770
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15772
  br i1 %12, label %14, label %13, !dbg !15773

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15774
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15774
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15774
  unreachable, !dbg !15774

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15753
  call void @llvm.dbg.value(metadata i32 %15, metadata !14489, metadata !DIExpression()) #23, !dbg !15755
  call void @llvm.dbg.value(metadata i32 %15, metadata !14483, metadata !DIExpression()) #23, !dbg !15751
  call void @llvm.dbg.value(metadata i32 %15, metadata !15748, metadata !DIExpression()), !dbg !15750
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15770
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !15775
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15777, !srcloc !14531
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15745, metadata !DIExpression()), !dbg !15749
  call void @llvm.dbg.value(metadata i32 undef, metadata !15746, metadata !DIExpression()), !dbg !15750
  ret %struct.k_thread* %7, !dbg !15778
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15779 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15781, metadata !DIExpression()), !dbg !15782
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15589, metadata !DIExpression()) #23, !dbg !15783
  call void @llvm.dbg.value(metadata i32 0, metadata !15590, metadata !DIExpression()) #23, !dbg !15785
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15786
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15788, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15790
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15790
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15786
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15791
  br i1 %3, label %5, label %4, !dbg !15792

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15793
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15793
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15793
  unreachable, !dbg !15793

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15790
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15786
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15592, metadata !DIExpression()) #23, !dbg !15785
  call void @llvm.dbg.value(metadata i32 undef, metadata !15590, metadata !DIExpression()) #23, !dbg !15785
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15795
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15796
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15796
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15798
  br i1 %6, label %8, label %7, !dbg !15799

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15800
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15800
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15800
  unreachable, !dbg !15800

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15788
  call void @llvm.dbg.value(metadata i32 %9, metadata !14489, metadata !DIExpression()) #23, !dbg !15790
  call void @llvm.dbg.value(metadata i32 %9, metadata !14483, metadata !DIExpression()) #23, !dbg !15786
  call void @llvm.dbg.value(metadata i32 %9, metadata !15592, metadata !DIExpression()) #23, !dbg !15785
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15796
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !15801
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15803, !srcloc !14531
  call void @llvm.dbg.value(metadata i32 1, metadata !15590, metadata !DIExpression()) #23, !dbg !15785
  call void @llvm.dbg.value(metadata i32 undef, metadata !15590, metadata !DIExpression()) #23, !dbg !15785
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15804
  ret void, !dbg !15805
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15806 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15808, metadata !DIExpression()), !dbg !15814
  call void @llvm.dbg.value(metadata i32 %1, metadata !15809, metadata !DIExpression()), !dbg !15814
  call void @llvm.dbg.value(metadata i8 0, metadata !15810, metadata !DIExpression()), !dbg !15814
  call void @llvm.dbg.value(metadata i32 0, metadata !15811, metadata !DIExpression()), !dbg !15815
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15816
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15818, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15820
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15820
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15816
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15821
  br i1 %4, label %6, label %5, !dbg !15822

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15823
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15823
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15823
  unreachable, !dbg !15823

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15820
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15816
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15824
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()), !dbg !15815
  call void @llvm.dbg.value(metadata i8 poison, metadata !15810, metadata !DIExpression()), !dbg !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()), !dbg !15815
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15825
  call void @llvm.dbg.value(metadata i1 %9, metadata !15810, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15814
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15828

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14669, metadata !DIExpression()) #23, !dbg !15829
  %14 = load i8, i8* %7, align 1, !dbg !15835
  %15 = and i8 %14, 127, !dbg !15835
  store i8 %15, i8* %7, align 1, !dbg !15835
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14677, metadata !DIExpression()) #23, !dbg !15836
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15838
  store i8 %12, i8* %11, align 2, !dbg !15839
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14686, metadata !DIExpression()) #23, !dbg !15840
  %16 = load i8, i8* %7, align 1, !dbg !15842
  %17 = or i8 %16, -128, !dbg !15842
  store i8 %17, i8* %7, align 1, !dbg !15842
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14693, metadata !DIExpression()) #23, !dbg !15843
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14700, metadata !DIExpression()) #23, !dbg !15845
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14706, metadata !DIExpression()) #23, !dbg !15845
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15847
  br i1 %18, label %19, label %20, !dbg !15848

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 186) #25, !dbg !15849
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 186) #25, !dbg !15849
  unreachable, !dbg !15849

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15850
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14707, metadata !DIExpression()) #23, !dbg !15845
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15851
  br i1 %22, label %32, label %23, !dbg !15850

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14707, metadata !DIExpression()) #23, !dbg !15845
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15852
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14707, metadata !DIExpression()) #23, !dbg !15845
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #25, !dbg !15853
  %27 = icmp sgt i32 %26, 0, !dbg !15854
  br i1 %27, label %28, label %29, !dbg !15855

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #25, !dbg !15856
  br label %33, !dbg !15857

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #25, !dbg !15851
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14707, metadata !DIExpression()) #23, !dbg !15845
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15851
  br i1 %31, label %32, label %23, !dbg !15850, !llvm.loop !15858

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #25, !dbg !15860
  br label %33, !dbg !15861

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15862
  br label %35, !dbg !15863

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15864
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15866
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15866
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15868
  br i1 %36, label %38, label %37, !dbg !15869

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15870
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15870
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15870
  unreachable, !dbg !15870

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15818
  call void @llvm.dbg.value(metadata i32 %39, metadata !14489, metadata !DIExpression()) #23, !dbg !15820
  call void @llvm.dbg.value(metadata i32 %39, metadata !14483, metadata !DIExpression()) #23, !dbg !15816
  call void @llvm.dbg.value(metadata i32 %39, metadata !15813, metadata !DIExpression()), !dbg !15815
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15866
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !15871
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !15873, !srcloc !14531
  call void @llvm.dbg.value(metadata i8 poison, metadata !15810, metadata !DIExpression()), !dbg !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()), !dbg !15815
  ret i1 %9, !dbg !15874
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15875 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15879, metadata !DIExpression()), !dbg !15882
  call void @llvm.dbg.value(metadata i32 %1, metadata !15880, metadata !DIExpression()), !dbg !15882
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15883
  call void @llvm.dbg.value(metadata i1 %3, metadata !15881, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15882
  br i1 %3, label %4, label %12, !dbg !15884

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15886
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15887
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15887
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15887
  %9 = load i8, i8* %8, align 1, !dbg !15887
  %10 = icmp eq i8 %9, 0, !dbg !15888
  br i1 %10, label %11, label %12, !dbg !15889

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15890
  br label %12, !dbg !15892

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15893
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15894 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15896, metadata !DIExpression()), !dbg !15899
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15900
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15902, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15904
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15904
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15900
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15905
  br i1 %2, label %4, label %3, !dbg !15906

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15907
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15907
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15907
  unreachable, !dbg !15907

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15904
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15900
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15908
  call void @llvm.dbg.value(metadata i32 undef, metadata !15898, metadata !DIExpression()), !dbg !15899
  call void @llvm.dbg.value(metadata i32 undef, metadata !15896, metadata !DIExpression()), !dbg !15899
  tail call fastcc void @z_sched_lock() #24, !dbg !15909
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15912
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15912
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15914
  br i1 %5, label %7, label %6, !dbg !15915

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15916
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15916
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15916
  unreachable, !dbg !15916

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15902
  call void @llvm.dbg.value(metadata i32 %8, metadata !14489, metadata !DIExpression()) #23, !dbg !15904
  call void @llvm.dbg.value(metadata i32 %8, metadata !14483, metadata !DIExpression()) #23, !dbg !15900
  call void @llvm.dbg.value(metadata i32 %8, metadata !15898, metadata !DIExpression()), !dbg !15899
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15912
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !15917
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15919, !srcloc !14531
  call void @llvm.dbg.value(metadata i32 1, metadata !15896, metadata !DIExpression()), !dbg !15899
  call void @llvm.dbg.value(metadata i32 undef, metadata !15896, metadata !DIExpression()), !dbg !15899
  ret void, !dbg !15920
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15921 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15922, !srcloc !15211
  call void @llvm.dbg.value(metadata i32 %1, metadata !15207, metadata !DIExpression()) #23, !dbg !15927
  %2 = icmp eq i32 %1, 0, !dbg !15928
  br i1 %2, label %4, label %3, !dbg !15929

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.310, i32 0, i32 0), i32 noundef 253) #25, !dbg !15930
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !15930
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.310, i32 0, i32 0), i32 noundef 253) #25, !dbg !15930
  unreachable, !dbg !15930

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15932
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15932
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15932
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15932
  %9 = load i8, i8* %8, align 1, !dbg !15932
  %10 = icmp eq i8 %9, 1, !dbg !15932
  br i1 %10, label %11, label %12, !dbg !15935

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.310, i32 0, i32 0), i32 noundef 254) #25, !dbg !15936
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !15936
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.310, i32 0, i32 0), i32 noundef 254) #25, !dbg !15936
  unreachable, !dbg !15936

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15938
  store i8 %13, i8* %8, align 1, !dbg !15938
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15939, !srcloc !15941
  ret void, !dbg !15942
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15943 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15945, metadata !DIExpression()), !dbg !15948
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !15949
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15951, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15953
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15953
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15949
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15954
  br i1 %2, label %4, label %3, !dbg !15955

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15956
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15956
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15956
  unreachable, !dbg !15956

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !15953
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !15949
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15957
  call void @llvm.dbg.value(metadata i32 undef, metadata !15947, metadata !DIExpression()), !dbg !15948
  call void @llvm.dbg.value(metadata i32 undef, metadata !15945, metadata !DIExpression()), !dbg !15948
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15958
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15958
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15958
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15958
  %9 = load i8, i8* %8, align 1, !dbg !15958
  %10 = icmp eq i8 %9, 0, !dbg !15958
  br i1 %10, label %11, label %12, !dbg !15963

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 999) #25, !dbg !15964
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !15964
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 999) #25, !dbg !15964
  unreachable, !dbg !15964

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15966, !srcloc !15211
  call void @llvm.dbg.value(metadata i32 %13, metadata !15207, metadata !DIExpression()) #23, !dbg !15971
  %14 = icmp eq i32 %13, 0, !dbg !15972
  br i1 %14, label %16, label %15, !dbg !15973

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15974
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !15974
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15974
  unreachable, !dbg !15974

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15976
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15977
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15977
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15977
  %21 = load i8, i8* %20, align 1, !dbg !15978
  %22 = add i8 %21, 1, !dbg !15978
  store i8 %22, i8* %20, align 1, !dbg !15978
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15979
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15980
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !15980
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15982
  br i1 %23, label %25, label %24, !dbg !15983

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15984
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15984
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15984
  unreachable, !dbg !15984

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15951
  call void @llvm.dbg.value(metadata i32 %26, metadata !14489, metadata !DIExpression()) #23, !dbg !15953
  call void @llvm.dbg.value(metadata i32 %26, metadata !14483, metadata !DIExpression()) #23, !dbg !15949
  call void @llvm.dbg.value(metadata i32 %26, metadata !15947, metadata !DIExpression()), !dbg !15948
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !15980
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !15985
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15987, !srcloc !14531
  call void @llvm.dbg.value(metadata i32 1, metadata !15945, metadata !DIExpression()), !dbg !15948
  call void @llvm.dbg.value(metadata i32 undef, metadata !15945, metadata !DIExpression()), !dbg !15948
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15988
  ret void, !dbg !15989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !15990 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15991
  ret %struct.k_thread* %1, !dbg !15992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !15993 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15997, metadata !DIExpression()), !dbg !16002
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15998, metadata !DIExpression()), !dbg !16002
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16003
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15999, metadata !DIExpression()), !dbg !16002
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16004
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16000, metadata !DIExpression()), !dbg !16002
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !16005
  call void @llvm.dbg.value(metadata i32 %5, metadata !16001, metadata !DIExpression()), !dbg !16002
  %6 = icmp sgt i32 %5, 0, !dbg !16006
  br i1 %6, label %17, label %7, !dbg !16008

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16009
  br i1 %8, label %17, label %9, !dbg !16011

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16012
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16012
  %12 = load i32, i32* %11, align 8, !dbg !16012
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16014
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16014
  %15 = load i32, i32* %14, align 8, !dbg !16014
  %16 = icmp ult i32 %12, %15, !dbg !16015
  br label %17, !dbg !16016

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16017
  ret i1 %18, !dbg !16018
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16019 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16036, metadata !DIExpression()), !dbg !16051
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16037, metadata !DIExpression()), !dbg !16051
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16052
  br i1 %4, label %5, label %6, !dbg !16055

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16056
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16056
  unreachable, !dbg !16056

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16058
  %8 = load i32, i32* %7, align 4, !dbg !16059
  %9 = add nsw i32 %8, 1, !dbg !16059
  store i32 %9, i32* %7, align 4, !dbg !16059
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16060
  store i32 %8, i32* %10, align 8, !dbg !16061
  %11 = load i32, i32* %7, align 4, !dbg !16062
  %12 = icmp eq i32 %11, 0, !dbg !16063
  br i1 %12, label %13, label %35, !dbg !16064

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16065
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16065
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16039, metadata !DIExpression()), !dbg !16065
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16065
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16065
  %17 = load i32, i32* %16, align 4, !dbg !16065
  %18 = shl i32 %17, 2, !dbg !16065
  %19 = alloca i8, i32 %18, align 8, !dbg !16065
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16065
  store i8* %19, i8** %20, align 4, !dbg !16065
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16065
  %22 = alloca i8, i32 %17, align 8, !dbg !16065
  store i8* %22, i8** %21, align 4, !dbg !16065
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16065
  store i32 -1, i32* %23, align 4, !dbg !16065
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16066
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16048, metadata !DIExpression()), !dbg !16067
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16038, metadata !DIExpression()), !dbg !16051
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !16068
  br i1 %25, label %26, label %27, !dbg !16065

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16068
  br label %35, !dbg !16069

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !16038, metadata !DIExpression()), !dbg !16051
  %29 = load i32, i32* %7, align 4, !dbg !16070
  %30 = add nsw i32 %29, 1, !dbg !16070
  store i32 %30, i32* %7, align 4, !dbg !16070
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !16072
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !16072
  store i32 %29, i32* %32, align 8, !dbg !16073
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16066
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16048, metadata !DIExpression()), !dbg !16067
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16038, metadata !DIExpression()), !dbg !16051
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !16068
  br i1 %34, label %26, label %27, !dbg !16065, !llvm.loop !16074

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16076
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16077
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #25, !dbg !16078
  ret void, !dbg !16079
}

; Function Attrs: optsize
declare !dbg !16080 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16085 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16088 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16090, metadata !DIExpression()), !dbg !16092
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16091, metadata !DIExpression()), !dbg !16092
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16093
  br i1 %3, label %4, label %5, !dbg !16096

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16097
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16097
  unreachable, !dbg !16097

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16099
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16100
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #25, !dbg !16101
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16102
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !16102
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !16104
  br i1 %10, label %11, label %13, !dbg !16105

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16106
  store i32 0, i32* %12, align 4, !dbg !16108
  br label %13, !dbg !16109

13:                                               ; preds = %11, %5
  ret void, !dbg !16110
}

; Function Attrs: optsize
declare !dbg !16111 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16112 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16116, metadata !DIExpression()), !dbg !16119
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16117, metadata !DIExpression()), !dbg !16119
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16120
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !16121
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16118, metadata !DIExpression()), !dbg !16119
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16117, metadata !DIExpression()), !dbg !16119
  ret %struct.k_thread* %4, !dbg !16122
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16123 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16127, metadata !DIExpression()), !dbg !16128
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16129
  ret %struct.rbnode* %2, !dbg !16130
}

; Function Attrs: optsize
declare !dbg !16131 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !16134 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16144, metadata !DIExpression()), !dbg !16148
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16149
  %3 = load i32, i32* %2, align 4, !dbg !16149
  %4 = icmp eq i32 %3, 0, !dbg !16151
  br i1 %4, label %10, label %5, !dbg !16152

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16145, metadata !DIExpression()), !dbg !16148
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16153, !range !7453
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16154
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16146, metadata !DIExpression()), !dbg !16148
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !16155
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16147, metadata !DIExpression()), !dbg !16148
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16145, metadata !DIExpression()), !dbg !16148
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16148
  ret %struct.k_thread* %11, !dbg !16156
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16157 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16161, metadata !DIExpression()), !dbg !16164
  call void @llvm.dbg.value(metadata i32 0, metadata !16162, metadata !DIExpression()), !dbg !16164
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16165
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16163, metadata !DIExpression()), !dbg !16164
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16166
  br i1 %3, label %8, label %4, !dbg !16167

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16168
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16170
  call void @llvm.dbg.value(metadata i32 1, metadata !16162, metadata !DIExpression()), !dbg !16164
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16165
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16163, metadata !DIExpression()), !dbg !16164
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16166
  br i1 %7, label %8, label %4, !dbg !16167, !llvm.loop !16171

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16164
  ret i32 %9, !dbg !16173
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #8 !dbg !16174 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16176, metadata !DIExpression()), !dbg !16177
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16178
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !16179
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16180
  ret %struct.k_thread* %4, !dbg !16181
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !16182 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16191, metadata !DIExpression()), !dbg !16192
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16193
  tail call fastcc void @sys_dlist_init.315(%struct._dnode* noundef nonnull %2) #24, !dbg !16194
  ret void, !dbg !16195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.315(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16196 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16200, metadata !DIExpression()), !dbg !16201
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16202
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16203
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16204
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16205
  ret void, !dbg !16206
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16207 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !16208
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !16209
  ret void, !dbg !16210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !16211 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16216, metadata !DIExpression()), !dbg !16217
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16218
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16218
  %4 = load i8, i8* %3, align 2, !dbg !16218
  %5 = sext i8 %4 to i32, !dbg !16219
  ret i32 %5, !dbg !16220
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16221 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16225, metadata !DIExpression()), !dbg !16228
  call void @llvm.dbg.value(metadata i32 %1, metadata !16226, metadata !DIExpression()), !dbg !16228
  %3 = add i32 %1, 16, !dbg !16229
  %4 = icmp ult i32 %3, 31, !dbg !16229
  br i1 %4, label %6, label %5, !dbg !16229

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.318, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16233
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.319, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #25, !dbg !16233
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16233
  unreachable, !dbg !16233

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16235, !srcloc !15211
  call void @llvm.dbg.value(metadata i32 %7, metadata !15207, metadata !DIExpression()) #23, !dbg !16240
  %8 = icmp eq i32 %7, 0, !dbg !16241
  br i1 %8, label %10, label %9, !dbg !16242

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16243
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !16243
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16243
  unreachable, !dbg !16243

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16227, metadata !DIExpression()), !dbg !16228
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16245
  ret void, !dbg !16246
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16247 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !16248
  br i1 %1, label %8, label %2, !dbg !16249

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16250
  br i1 %3, label %8, label %4, !dbg !16251

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16252
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !16253
  %7 = xor i1 %6, true, !dbg !16251
  br label %8, !dbg !16251

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16254
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !16255 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16256, !range !6616
  %2 = icmp eq i8 %1, 0, !dbg !16256
  ret i1 %2, !dbg !16257
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16258 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16261, !srcloc !15211
  call void @llvm.dbg.value(metadata i32 %1, metadata !15207, metadata !DIExpression()) #23, !dbg !16266
  %2 = icmp eq i32 %1, 0, !dbg !16267
  br i1 %2, label %4, label %3, !dbg !16268

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16269
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !16269
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16269
  unreachable, !dbg !16269

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !16271
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16273, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !16275
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !16275
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !16271
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16276
  br i1 %6, label %8, label %7, !dbg !16277

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !16278
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16278
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !16278
  unreachable, !dbg !16278

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !16275
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !16271
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16279
  call void @llvm.dbg.value(metadata i32 undef, metadata !16260, metadata !DIExpression()), !dbg !16280
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16281
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14669, metadata !DIExpression()) #23, !dbg !16284
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !16286
  %11 = load i8, i8* %10, align 1, !dbg !16287
  %12 = and i8 %11, 127, !dbg !16287
  store i8 %12, i8* %10, align 1, !dbg !16287
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14677, metadata !DIExpression()) #23, !dbg !16288
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #25, !dbg !16290
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16291
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14686, metadata !DIExpression()) #23, !dbg !16292
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !16294
  %15 = load i8, i8* %14, align 1, !dbg !16295
  %16 = or i8 %15, -128, !dbg !16295
  store i8 %16, i8* %14, align 1, !dbg !16295
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14693, metadata !DIExpression()) #23, !dbg !16296
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14700, metadata !DIExpression()) #23, !dbg !16298
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14706, metadata !DIExpression()) #23, !dbg !16298
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #25, !dbg !16300
  br i1 %17, label %18, label %19, !dbg !16301

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 186) #25, !dbg !16302
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 186) #25, !dbg !16302
  unreachable, !dbg !16302

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16303
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14707, metadata !DIExpression()) #23, !dbg !16298
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16304
  br i1 %21, label %32, label %22, !dbg !16303

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14707, metadata !DIExpression()) #23, !dbg !16298
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !16305
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14707, metadata !DIExpression()) #23, !dbg !16298
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #25, !dbg !16306
  %26 = icmp sgt i32 %25, 0, !dbg !16307
  br i1 %26, label %27, label %29, !dbg !16308

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16309
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #25, !dbg !16310
  br label %34, !dbg !16311

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #25, !dbg !16304
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14707, metadata !DIExpression()) #23, !dbg !16298
  %31 = icmp eq %struct._dnode* %30, null, !dbg !16304
  br i1 %31, label %32, label %22, !dbg !16303, !llvm.loop !16312

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16314
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #25, !dbg !16315
  br label %34, !dbg !16316

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16317
  call void @llvm.dbg.value(metadata i32 undef, metadata !15155, metadata !DIExpression()) #23, !dbg !16318
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15160, metadata !DIExpression()) #23, !dbg !16318
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15164, metadata !DIExpression()) #23, !dbg !16320
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16322
  br i1 %35, label %37, label %36, !dbg !16323

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !16324
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16324
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !16324
  unreachable, !dbg !16324

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !16273
  call void @llvm.dbg.value(metadata i32 %38, metadata !14489, metadata !DIExpression()) #23, !dbg !16275
  call void @llvm.dbg.value(metadata i32 %38, metadata !14483, metadata !DIExpression()) #23, !dbg !16271
  call void @llvm.dbg.value(metadata i32 %38, metadata !16260, metadata !DIExpression()), !dbg !16280
  call void @llvm.dbg.value(metadata i32 undef, metadata !15155, metadata !DIExpression()) #23, !dbg !16318
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #25, !dbg !16325
  ret void, !dbg !16326
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16327 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16331, metadata !DIExpression()), !dbg !16334
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16335, !srcloc !15211
  call void @llvm.dbg.value(metadata i32 %3, metadata !15207, metadata !DIExpression()) #23, !dbg !16340
  %4 = icmp eq i32 %3, 0, !dbg !16341
  br i1 %4, label %6, label %5, !dbg !16342

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16343
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !16343
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16343
  unreachable, !dbg !16343

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !16345
  br i1 %7, label %8, label %10, !dbg !16347

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16348
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !16350
  br label %15, !dbg !16351

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !16332, metadata !DIExpression()), !dbg !16334
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !16352
  %12 = sext i32 %11 to i64, !dbg !16352
  call void @llvm.dbg.value(metadata i64 %12, metadata !16332, metadata !DIExpression()), !dbg !16334
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #24, !dbg !16353
  %14 = trunc i64 %13 to i32, !dbg !16353
  call void @llvm.dbg.value(metadata i32 %14, metadata !16333, metadata !DIExpression()), !dbg !16334
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !16334
  ret i32 %16, !dbg !16354
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16355 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16359, metadata !DIExpression()), !dbg !16360
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16361, !srcloc !16363
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !16364
  ret void, !dbg !16365
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16366 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16370, metadata !DIExpression()), !dbg !16374
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16375, !srcloc !15211
  call void @llvm.dbg.value(metadata i32 %2, metadata !15207, metadata !DIExpression()) #23, !dbg !16380
  %3 = icmp eq i32 %2, 0, !dbg !16381
  br i1 %3, label %5, label %4, !dbg !16382

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16383
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !16383
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16383
  unreachable, !dbg !16383

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !16385
  br i1 %6, label %7, label %8, !dbg !16387

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !16388
  br label %43, !dbg !16390

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !16372, metadata !DIExpression()), !dbg !16374
  %9 = icmp sgt i64 %0, -3, !dbg !16391
  br i1 %9, label %10, label %14, !dbg !16393

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16394
  %12 = trunc i64 %0 to i32, !dbg !16396
  %13 = add i32 %11, %12, !dbg !16396
  call void @llvm.dbg.value(metadata i32 %13, metadata !16371, metadata !DIExpression()), !dbg !16374
  br label %17, !dbg !16397

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !16398
  %16 = sub i32 -2, %15, !dbg !16398
  call void @llvm.dbg.value(metadata i32 %16, metadata !16371, metadata !DIExpression()), !dbg !16374
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !16400
  call void @llvm.dbg.value(metadata i32 %18, metadata !16371, metadata !DIExpression()), !dbg !16374
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !16401
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16403, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !16405
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !16405
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !16401
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16406
  br i1 %20, label %22, label %21, !dbg !16407

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !16408
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16408
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !16408
  unreachable, !dbg !16408

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !16405
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !16401
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16409
  call void @llvm.dbg.value(metadata i32 undef, metadata !16373, metadata !DIExpression()), !dbg !16374
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16410
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !16411
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !16412
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16413
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16414
  tail call fastcc void @z_add_thread_timeout.302(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !16414
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16415
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !15155, metadata !DIExpression()) #23, !dbg !16417
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15160, metadata !DIExpression()) #23, !dbg !16417
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15164, metadata !DIExpression()) #23, !dbg !16419
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16421
  br i1 %27, label %29, label %28, !dbg !16422

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !16423
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16423
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !16423
  unreachable, !dbg !16423

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !16403
  call void @llvm.dbg.value(metadata i32 %30, metadata !14489, metadata !DIExpression()) #23, !dbg !16405
  call void @llvm.dbg.value(metadata i32 %30, metadata !14483, metadata !DIExpression()) #23, !dbg !16401
  call void @llvm.dbg.value(metadata i32 %30, metadata !16373, metadata !DIExpression()), !dbg !16374
  call void @llvm.dbg.value(metadata i32 undef, metadata !15155, metadata !DIExpression()) #23, !dbg !16417
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #25, !dbg !16424
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16425
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !16425
  br i1 %33, label %34, label %35, !dbg !16428

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16429
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !16429
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16429
  unreachable, !dbg !16429

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !16431
  %37 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16432
  %38 = zext i32 %37 to i64, !dbg !16432
  %39 = sub nsw i64 %36, %38, !dbg !16433
  call void @llvm.dbg.value(metadata i64 %39, metadata !16370, metadata !DIExpression()), !dbg !16374
  %40 = icmp sgt i64 %39, 0, !dbg !16434
  %41 = select i1 %40, i64 %39, i64 0, !dbg !16434
  %42 = trunc i64 %41 to i32, !dbg !16434
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !16374
  ret i32 %44, !dbg !16435
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16436 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16438, metadata !DIExpression()), !dbg !16439
  call void @llvm.dbg.value(metadata i64 %0, metadata !14537, metadata !DIExpression()), !dbg !16440
  call void @llvm.dbg.value(metadata i32 10000, metadata !14540, metadata !DIExpression()), !dbg !16440
  call void @llvm.dbg.value(metadata i32 1000, metadata !14541, metadata !DIExpression()), !dbg !16440
  call void @llvm.dbg.value(metadata i8 1, metadata !14542, metadata !DIExpression()), !dbg !16440
  call void @llvm.dbg.value(metadata i1 false, metadata !14543, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16440
  call void @llvm.dbg.value(metadata i1 false, metadata !14544, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16440
  call void @llvm.dbg.value(metadata i8 0, metadata !14545, metadata !DIExpression()), !dbg !16440
  call void @llvm.dbg.value(metadata i1 false, metadata !14546, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16440
  call void @llvm.dbg.value(metadata i1 true, metadata !14547, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16440
  call void @llvm.dbg.value(metadata i64 0, metadata !14548, metadata !DIExpression()), !dbg !16440
  call void @llvm.dbg.value(metadata i64 0, metadata !14548, metadata !DIExpression()), !dbg !16440
  call void @llvm.dbg.value(metadata i64 %0, metadata !14537, metadata !DIExpression()), !dbg !16440
  %2 = udiv i64 %0, 10, !dbg !16442
  ret i64 %2, !dbg !16446
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16447 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16448, !srcloc !16450
  tail call void @z_impl_k_yield() #24, !dbg !16451
  ret void, !dbg !16452
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16453 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16457, metadata !DIExpression()), !dbg !16459
  %2 = sext i32 %0 to i64, !dbg !16460
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !16461
  call void @llvm.dbg.value(metadata i64 %3, metadata !16458, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16459
  %4 = shl i64 %3, 32, !dbg !16462
  %5 = ashr exact i64 %4, 32, !dbg !16462
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !16463
  call void @llvm.dbg.value(metadata i32 %6, metadata !16458, metadata !DIExpression()), !dbg !16459
  %7 = sext i32 %6 to i64, !dbg !16464
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !16465
  %9 = trunc i64 %8 to i32, !dbg !16465
  ret i32 %9, !dbg !16466
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !16467 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16469, metadata !DIExpression()), !dbg !16470
  call void @llvm.dbg.value(metadata i64 %0, metadata !14537, metadata !DIExpression()), !dbg !16471
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14540, metadata !DIExpression()), !dbg !16471
  call void @llvm.dbg.value(metadata i32 10000, metadata !14541, metadata !DIExpression()), !dbg !16471
  call void @llvm.dbg.value(metadata i8 1, metadata !14542, metadata !DIExpression()), !dbg !16471
  call void @llvm.dbg.value(metadata i1 false, metadata !14543, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16471
  call void @llvm.dbg.value(metadata i1 true, metadata !14544, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16471
  call void @llvm.dbg.value(metadata i8 0, metadata !14545, metadata !DIExpression()), !dbg !16471
  call void @llvm.dbg.value(metadata i1 false, metadata !14546, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16471
  call void @llvm.dbg.value(metadata i1 true, metadata !14547, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16471
  call void @llvm.dbg.value(metadata i64 0, metadata !14548, metadata !DIExpression()), !dbg !16471
  call void @llvm.dbg.value(metadata i64 0, metadata !14548, metadata !DIExpression()), !dbg !16471
  %2 = add i64 %0, 99, !dbg !16473
  call void @llvm.dbg.value(metadata i64 %2, metadata !14537, metadata !DIExpression()), !dbg !16471
  %3 = udiv i64 %2, 100, !dbg !16474
  ret i64 %3, !dbg !16475
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16476 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16478, metadata !DIExpression()), !dbg !16479
  call void @llvm.dbg.value(metadata i64 %0, metadata !14537, metadata !DIExpression()), !dbg !16480
  call void @llvm.dbg.value(metadata i32 10000, metadata !14540, metadata !DIExpression()), !dbg !16480
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14541, metadata !DIExpression()), !dbg !16480
  call void @llvm.dbg.value(metadata i8 1, metadata !14542, metadata !DIExpression()), !dbg !16480
  call void @llvm.dbg.value(metadata i1 false, metadata !14543, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16480
  call void @llvm.dbg.value(metadata i1 false, metadata !14544, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16480
  call void @llvm.dbg.value(metadata i8 0, metadata !14545, metadata !DIExpression()), !dbg !16480
  call void @llvm.dbg.value(metadata i1 true, metadata !14546, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16480
  call void @llvm.dbg.value(metadata i1 false, metadata !14547, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16480
  call void @llvm.dbg.value(metadata i64 0, metadata !14548, metadata !DIExpression()), !dbg !16480
  call void @llvm.dbg.value(metadata i64 0, metadata !14548, metadata !DIExpression()), !dbg !16480
  %2 = mul i64 %0, 100, !dbg !16482
  ret i64 %2, !dbg !16484
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16485 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16487, metadata !DIExpression()), !dbg !16488
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16489
  br i1 %2, label %14, label %3, !dbg !16491

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16492
  %5 = icmp slt i32 %4, 0, !dbg !16494
  br i1 %5, label %6, label %10, !dbg !16495

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16496
  %8 = load i8, i8* %7, align 1, !dbg !16496
  %9 = icmp eq i8 %8, 16, !dbg !16499
  br i1 %9, label %10, label %14, !dbg !16500

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16501
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16502
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16503, !srcloc !15211
  call void @llvm.dbg.value(metadata i32 %11, metadata !15207, metadata !DIExpression()) #23, !dbg !16507
  %12 = icmp eq i32 %11, 0, !dbg !16508
  br i1 %12, label %13, label %14, !dbg !16509

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16510
  br label %14, !dbg !16512

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16513
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16514 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16516, metadata !DIExpression()), !dbg !16517
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16518
  %3 = load i8, i8* %2, align 1, !dbg !16518
  %4 = and i8 %3, 2, !dbg !16519
  %5 = icmp ne i8 %4, 0, !dbg !16520
  ret i1 %5, !dbg !16521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !16522 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16527
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16526, metadata !DIExpression()), !dbg !16528
  ret %struct.k_thread* %1, !dbg !16529
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16530 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16531, !srcloc !15211
  call void @llvm.dbg.value(metadata i32 %1, metadata !15207, metadata !DIExpression()) #23, !dbg !16534
  %2 = icmp eq i32 %1, 0, !dbg !16535
  br i1 %2, label %3, label %8, !dbg !16536

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16537
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16538
  %6 = icmp ne i32 %5, 0, !dbg !16536
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16539
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16540 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16542, metadata !DIExpression()), !dbg !16544
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !16545
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16547, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !16549
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !16549
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !16545
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16550
  br i1 %3, label %5, label %4, !dbg !16551

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !16552
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16552
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !16552
  unreachable, !dbg !16552

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16547
  call void @llvm.dbg.value(metadata i32 %6, metadata !14489, metadata !DIExpression()) #23, !dbg !16549
  call void @llvm.dbg.value(metadata i32 %6, metadata !14483, metadata !DIExpression()) #23, !dbg !16545
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16553
  call void @llvm.dbg.value(metadata i32 %6, metadata !16543, metadata !DIExpression()), !dbg !16544
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16554
  %8 = load i8, i8* %7, align 4, !dbg !16554
  %9 = and i8 %8, 1, !dbg !16556
  %10 = icmp eq i8 %9, 0, !dbg !16557
  br i1 %10, label %15, label %11, !dbg !16558

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !16559
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !16559
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16562
  br i1 %12, label %14, label %13, !dbg !16563

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !16564
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16564
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !16564
  unreachable, !dbg !16564

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14511, metadata !DIExpression()) #23, !dbg !16559
  call void @llvm.dbg.value(metadata i32 %6, metadata !14525, metadata !DIExpression()) #23, !dbg !16565
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16567, !srcloc !14531
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16568
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.326, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #25, !dbg !16568
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16568
  unreachable, !dbg !16568

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16572
  %17 = load i8, i8* %16, align 1, !dbg !16572
  %18 = and i8 %17, 8, !dbg !16574
  %19 = icmp eq i8 %18, 0, !dbg !16575
  br i1 %19, label %24, label %20, !dbg !16576

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !16577
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !16577
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16580
  br i1 %21, label %23, label %22, !dbg !16581

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !16582
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16582
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !16582
  unreachable, !dbg !16582

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14511, metadata !DIExpression()) #23, !dbg !16577
  call void @llvm.dbg.value(metadata i32 %6, metadata !14525, metadata !DIExpression()) #23, !dbg !16583
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16585, !srcloc !14531
  br label %39, !dbg !16586

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16587
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16588
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16590
  br i1 %26, label %27, label %35, !dbg !16591

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16592, !srcloc !15211
  call void @llvm.dbg.value(metadata i32 %28, metadata !15207, metadata !DIExpression()) #23, !dbg !16595
  %29 = icmp eq i32 %28, 0, !dbg !16596
  br i1 %29, label %30, label %35, !dbg !16597

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !15155, metadata !DIExpression()) #23, !dbg !16598
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15160, metadata !DIExpression()) #23, !dbg !16598
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15164, metadata !DIExpression()) #23, !dbg !16601
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16603
  br i1 %31, label %33, label %32, !dbg !16604

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !16605
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16605
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !16605
  unreachable, !dbg !16605

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !15155, metadata !DIExpression()) #23, !dbg !16598
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #25, !dbg !16606
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16607
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.327, i32 0, i32 0)) #25, !dbg !16607
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16607
  unreachable, !dbg !16607

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !16611
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !16611
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16613
  br i1 %36, label %38, label %37, !dbg !16614

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !16615
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16615
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !16615
  unreachable, !dbg !16615

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14511, metadata !DIExpression()) #23, !dbg !16611
  call void @llvm.dbg.value(metadata i32 %6, metadata !14525, metadata !DIExpression()) #23, !dbg !16616
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16618, !srcloc !14531
  br label %39, !dbg !16619

39:                                               ; preds = %38, %23
  ret void, !dbg !16619
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16620 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16622, metadata !DIExpression()), !dbg !16623
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16624
  %3 = load i8, i8* %2, align 1, !dbg !16624
  %4 = and i8 %3, 8, !dbg !16626
  %5 = icmp eq i8 %4, 0, !dbg !16627
  br i1 %5, label %6, label %20, !dbg !16628

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16629
  %8 = or i8 %7, 8, !dbg !16629
  store i8 %8, i8* %2, align 1, !dbg !16629
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16631
  br i1 %9, label %10, label %12, !dbg !16633

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14669, metadata !DIExpression()) #23, !dbg !16634
  %11 = and i8 %8, 95, !dbg !16637
  store i8 %11, i8* %2, align 1, !dbg !16637
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14677, metadata !DIExpression()) #23, !dbg !16638
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16640
  br label %12, !dbg !16641

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16642
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16642
  %15 = icmp eq %union.anon* %14, null, !dbg !16644
  br i1 %15, label %17, label %16, !dbg !16645

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16646
  br label %17, !dbg !16648

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16649
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16650
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #24, !dbg !16651
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16652
  br label %20, !dbg !16653

20:                                               ; preds = %17, %1
  ret void, !dbg !16654
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16655 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16659, metadata !DIExpression()), !dbg !16661
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16662
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16660, metadata !DIExpression()), !dbg !16661
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16663
  br i1 %3, label %10, label %4, !dbg !16664

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16665
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16667
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16668, metadata !DIExpression()), !dbg !16674
  call void @llvm.dbg.value(metadata i32 0, metadata !16673, metadata !DIExpression()), !dbg !16674
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !16676
  store i32 0, i32* %7, align 4, !dbg !16677
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16678
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16662
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16660, metadata !DIExpression()), !dbg !16661
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16663
  br i1 %9, label %10, label %4, !dbg !16664, !llvm.loop !16679

10:                                               ; preds = %4, %1
  ret void, !dbg !16681
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16682 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16687, metadata !DIExpression()), !dbg !16690
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16686, metadata !DIExpression()), !dbg !16690
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !16691
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16693, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !16695
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !16695
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !16691
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16696
  br i1 %4, label %6, label %5, !dbg !16697

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !16698
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16698
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !16698
  unreachable, !dbg !16698

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16693
  call void @llvm.dbg.value(metadata i32 %7, metadata !14489, metadata !DIExpression()) #23, !dbg !16695
  call void @llvm.dbg.value(metadata i32 %7, metadata !14483, metadata !DIExpression()) #23, !dbg !16691
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16699
  call void @llvm.dbg.value(metadata i32 %7, metadata !16688, metadata !DIExpression()), !dbg !16690
  call void @llvm.dbg.value(metadata i32 0, metadata !16689, metadata !DIExpression()), !dbg !16690
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16700
  %9 = load i8, i8* %8, align 1, !dbg !16700
  %10 = and i8 %9, 8, !dbg !16702
  %11 = icmp eq i8 %10, 0, !dbg !16703
  br i1 %11, label %12, label %35, !dbg !16704

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16687, metadata !DIExpression()), !dbg !16690
  %14 = icmp eq i64 %13, 0, !dbg !16705
  br i1 %14, label %35, label %15, !dbg !16707

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16708
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16710
  br i1 %17, label %35, label %18, !dbg !16711

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16712
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !16712
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16713
  %22 = icmp eq %union.anon* %20, %21, !dbg !16714
  br i1 %22, label %35, label %23, !dbg !16715

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16716, !srcloc !15211
  call void @llvm.dbg.value(metadata i32 %24, metadata !15207, metadata !DIExpression()) #23, !dbg !16722
  %25 = icmp eq i32 %24, 0, !dbg !16723
  br i1 %25, label %27, label %26, !dbg !16724

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16725
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.330, i32 0, i32 0)) #25, !dbg !16725
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16725
  unreachable, !dbg !16725

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16727
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16728
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #24, !dbg !16729
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16730
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !16731
  call void @llvm.dbg.value(metadata i32 undef, metadata !15155, metadata !DIExpression()) #23, !dbg !16732
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15160, metadata !DIExpression()) #23, !dbg !16732
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15164, metadata !DIExpression()) #23, !dbg !16734
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16736
  br i1 %31, label %33, label %32, !dbg !16737

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !16738
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16738
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !16738
  unreachable, !dbg !16738

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !15155, metadata !DIExpression()) #23, !dbg !16732
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #25, !dbg !16739
  call void @llvm.dbg.value(metadata i32 %34, metadata !16689, metadata !DIExpression()), !dbg !16690
  br label %40, !dbg !16740

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16741
  call void @llvm.dbg.value(metadata i32 %36, metadata !16689, metadata !DIExpression()), !dbg !16690
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !16742
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !16742
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16744
  br i1 %37, label %39, label %38, !dbg !16745

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !16746
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16746
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !16746
  unreachable, !dbg !16746

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14511, metadata !DIExpression()) #23, !dbg !16742
  call void @llvm.dbg.value(metadata i32 %7, metadata !14525, metadata !DIExpression()) #23, !dbg !16747
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !16749, !srcloc !14531
  br label %40, !dbg !16750

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16690
  ret i32 %41, !dbg !16751
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16752 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16756, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.value(metadata i32 %1, metadata !16757, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.value(metadata i8* %2, metadata !16758, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.value(metadata i8 0, metadata !16760, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.value(metadata i32 0, metadata !16761, metadata !DIExpression()), !dbg !16765
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14477, metadata !DIExpression()) #23, !dbg !16766
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16768, !srcloc !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !16770
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !16770
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !16766
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16771
  br i1 %5, label %7, label %6, !dbg !16772

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !16773
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16773
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !16773
  unreachable, !dbg !16773

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14489, metadata !DIExpression()) #23, !dbg !16770
  call void @llvm.dbg.value(metadata i32 undef, metadata !14483, metadata !DIExpression()) #23, !dbg !16766
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16774
  call void @llvm.dbg.value(metadata i32 undef, metadata !16763, metadata !DIExpression()), !dbg !16765
  call void @llvm.dbg.value(metadata i8 poison, metadata !16760, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.value(metadata i32 undef, metadata !16761, metadata !DIExpression()), !dbg !16765
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !16775
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16759, metadata !DIExpression()), !dbg !16764
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16778
  br i1 %10, label %15, label %11, !dbg !16780

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16781, metadata !DIExpression()), !dbg !16789
  call void @llvm.dbg.value(metadata i32 %1, metadata !16787, metadata !DIExpression()), !dbg !16789
  call void @llvm.dbg.value(metadata i8* %2, metadata !16788, metadata !DIExpression()), !dbg !16789
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16668, metadata !DIExpression()), !dbg !16792
  call void @llvm.dbg.value(metadata i32 %1, metadata !16673, metadata !DIExpression()), !dbg !16792
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !16794
  store i32 %1, i32* %12, align 4, !dbg !16795
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16796
  store i8* %2, i8** %13, align 4, !dbg !16797
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16798
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16799
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !16800
  call void @llvm.dbg.value(metadata i8 1, metadata !16760, metadata !DIExpression()), !dbg !16764
  br label %15, !dbg !16801

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16760, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !16802
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14516, metadata !DIExpression()) #23, !dbg !16802
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16804
  br i1 %16, label %18, label %17, !dbg !16805

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !16806
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16806
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !16806
  unreachable, !dbg !16806

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16764
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16768
  call void @llvm.dbg.value(metadata i32 %20, metadata !14489, metadata !DIExpression()) #23, !dbg !16770
  call void @llvm.dbg.value(metadata i32 %20, metadata !14483, metadata !DIExpression()) #23, !dbg !16766
  call void @llvm.dbg.value(metadata i32 %20, metadata !16763, metadata !DIExpression()), !dbg !16765
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()) #23, !dbg !16802
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #23, !dbg !16807
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !16809, !srcloc !14531
  call void @llvm.dbg.value(metadata i8 poison, metadata !16760, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.value(metadata i32 undef, metadata !16761, metadata !DIExpression()), !dbg !16765
  ret i1 %19, !dbg !16810
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16811 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16817, metadata !DIExpression()), !dbg !16822
  call void @llvm.dbg.value(metadata i64 undef, metadata !16819, metadata !DIExpression()), !dbg !16822
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16816, metadata !DIExpression()), !dbg !16822
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16818, metadata !DIExpression()), !dbg !16822
  call void @llvm.dbg.value(metadata i8** %4, metadata !16820, metadata !DIExpression()), !dbg !16822
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !16823
  call void @llvm.dbg.value(metadata i32 %6, metadata !16821, metadata !DIExpression()), !dbg !16822
  %7 = icmp eq i8** %4, null, !dbg !16824
  br i1 %7, label %12, label %8, !dbg !16826

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16827
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16829
  %11 = load i8*, i8** %10, align 4, !dbg !16829
  store i8* %11, i8** %4, align 4, !dbg !16830
  br label %12, !dbg !16831

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16832
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16833 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16835
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16836
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_rom_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_data_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_data_start to i32))) #25, !dbg !16837
  ret void, !dbg !16838
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16839 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16849, metadata !DIExpression()), !dbg !16866
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16847, metadata !DIExpression()), !dbg !16866
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16848, metadata !DIExpression()), !dbg !16866
  %5 = icmp eq i64 %4, -1, !dbg !16867
  br i1 %5, label %63, label %6, !dbg !16869

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16870
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.335(%struct._dnode* noundef %7) #24, !dbg !16870
  br i1 %8, label %9, label %10, !dbg !16873

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.338, i32 0, i32 0), i32 noundef 99) #25, !dbg !16874
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.339, i32 0, i32 0)) #25, !dbg !16874
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.338, i32 0, i32 0), i32 noundef 99) #25, !dbg !16874
  unreachable, !dbg !16874

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16876
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16877
  call void @llvm.dbg.value(metadata i32 0, metadata !16850, metadata !DIExpression()), !dbg !16878
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16879, metadata !DIExpression()) #23, !dbg !16886
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16888, !srcloc !16894
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()) #23, !dbg !16895
  call void @llvm.dbg.value(metadata i32 undef, metadata !16892, metadata !DIExpression()) #23, !dbg !16895
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()) #23, !dbg !16886
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16896
  br i1 %13, label %15, label %14, !dbg !16899

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !16900
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.342, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16900
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !16900
  unreachable, !dbg !16900

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16888
  call void @llvm.dbg.value(metadata i32 %16, metadata !16891, metadata !DIExpression()) #23, !dbg !16895
  call void @llvm.dbg.value(metadata i32 %16, metadata !16885, metadata !DIExpression()) #23, !dbg !16886
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16902
  call void @llvm.dbg.value(metadata i32 %16, metadata !16856, metadata !DIExpression()), !dbg !16878
  call void @llvm.dbg.value(metadata i32 undef, metadata !16850, metadata !DIExpression()), !dbg !16878
  %17 = icmp slt i64 %4, -1, !dbg !16903
  br i1 %17, label %18, label %24, !dbg !16904

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16905
  %20 = add i64 %4, %19, !dbg !16906
  %21 = sub i64 -2, %20, !dbg !16906
  call void @llvm.dbg.value(metadata i64 %21, metadata !16860, metadata !DIExpression()), !dbg !16907
  %22 = icmp sgt i64 %21, 1, !dbg !16908
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16908
  br label %29, !dbg !16909

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16910
  %26 = tail call fastcc i32 @elapsed.343() #24, !dbg !16912
  %27 = sext i32 %26 to i64, !dbg !16912
  %28 = add nsw i64 %25, %27, !dbg !16913
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16914
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16915
  store i64 %30, i64* %31, align 8, !dbg !16916
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !16917
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16857, metadata !DIExpression()), !dbg !16919
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16920
  br i1 %33, label %48, label %34, !dbg !16920

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16921
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16857, metadata !DIExpression()), !dbg !16919
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16925
  %38 = load i64, i64* %37, align 8, !dbg !16925
  %39 = icmp slt i64 %35, %38, !dbg !16926
  br i1 %39, label %40, label %44, !dbg !16927

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16925
  %42 = sub nsw i64 %38, %35, !dbg !16928
  store i64 %42, i64* %41, align 8, !dbg !16928
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16930
  tail call fastcc void @sys_dlist_insert.344(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !16931
  br label %49, !dbg !16932

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16933
  store i64 %45, i64* %31, align 8, !dbg !16933
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !16934
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16857, metadata !DIExpression()), !dbg !16919
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16920
  br i1 %47, label %48, label %34, !dbg !16920, !llvm.loop !16935

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.345(%struct._dnode* noundef nonnull %7) #24, !dbg !16937
  br label %49, !dbg !16940

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !16941
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16942
  br i1 %51, label %52, label %59, !dbg !16943

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !16944
  call void @llvm.dbg.value(metadata i32 %53, metadata !16863, metadata !DIExpression()), !dbg !16945
  %54 = icmp ne i32 %53, 0, !dbg !16946
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16948
  br i1 %57, label %59, label %58, !dbg !16948

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #25, !dbg !16949
  br label %59, !dbg !16951

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16952, metadata !DIExpression()) #23, !dbg !16958
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16957, metadata !DIExpression()) #23, !dbg !16958
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16960
  br i1 %60, label %62, label %61, !dbg !16963

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !16964
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16964
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !16964
  unreachable, !dbg !16964

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16952, metadata !DIExpression()) #23, !dbg !16958
  call void @llvm.dbg.value(metadata i32 %16, metadata !16966, metadata !DIExpression()) #23, !dbg !16969
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16971, !srcloc !16972
  call void @llvm.dbg.value(metadata i32 undef, metadata !16850, metadata !DIExpression()), !dbg !16878
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.335(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16974 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16980, metadata !DIExpression()), !dbg !16981
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16982
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16982
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16983
  ret i1 %4, !dbg !16984
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.343() unnamed_addr #1 !dbg !16985 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16988
  %2 = icmp eq i32 %1, 0, !dbg !16989
  br i1 %2, label %3, label %5, !dbg !16988

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16990
  br label %5, !dbg !16988

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16988
  ret i32 %6, !dbg !16991
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !16992 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.350() #24, !dbg !16998
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16996, metadata !DIExpression()), !dbg !16999
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17000
  ret %struct._timeout* %2, !dbg !17001
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.344(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !17002 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17006, metadata !DIExpression()), !dbg !17010
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17007, metadata !DIExpression()), !dbg !17010
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17011
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17011
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17008, metadata !DIExpression()), !dbg !17010
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17012
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17013
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17014
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17015
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17016
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17017
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17018
  ret void, !dbg !17019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !17020 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17024, metadata !DIExpression()), !dbg !17026
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17027
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.348(%struct._dnode* noundef %2) #24, !dbg !17028
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17025, metadata !DIExpression()), !dbg !17026
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17029
  ret %struct._timeout* %4, !dbg !17030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.345(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17031 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17036, metadata !DIExpression()), !dbg !17039
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17037, metadata !DIExpression()), !dbg !17039
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17040
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17038, metadata !DIExpression()), !dbg !17039
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17041
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17042
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17043
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17044
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17045
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17046
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17047
  ret void, !dbg !17048
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17049 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !17054
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17051, metadata !DIExpression()), !dbg !17055
  %2 = tail call fastcc i32 @elapsed.343() #24, !dbg !17056
  call void @llvm.dbg.value(metadata i32 %2, metadata !17052, metadata !DIExpression()), !dbg !17055
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17057
  br i1 %3, label %14, label %4, !dbg !17059

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17060
  %6 = load i64, i64* %5, align 8, !dbg !17060
  %7 = sext i32 %2 to i64, !dbg !17061
  %8 = sub nsw i64 %6, %7, !dbg !17062
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17063
  br i1 %9, label %14, label %10, !dbg !17064

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17065
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17065
  %13 = trunc i64 %12 to i32, !dbg !17065
  call void @llvm.dbg.value(metadata i32 %13, metadata !17053, metadata !DIExpression()), !dbg !17055
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17067
  call void @llvm.dbg.value(metadata i32 %15, metadata !17053, metadata !DIExpression()), !dbg !17055
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17068
  %17 = icmp ne i32 %16, 0, !dbg !17070
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17071
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17071
  call void @llvm.dbg.value(metadata i32 %20, metadata !17053, metadata !DIExpression()), !dbg !17055
  ret i32 %20, !dbg !17072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.348(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17073 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17077, metadata !DIExpression()), !dbg !17079
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17078, metadata !DIExpression()), !dbg !17079
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17080
  br i1 %2, label %5, label %3, !dbg !17081

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.349(%struct._dnode* noundef nonnull %0) #24, !dbg !17082
  br label %5, !dbg !17081

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17081
  ret %struct._dnode* %6, !dbg !17083
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.349(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17084 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17086, metadata !DIExpression()), !dbg !17088
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17087, metadata !DIExpression()), !dbg !17088
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17089
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17090
  br i1 %3, label %7, label %4, !dbg !17091

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17092
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17092
  br label %7, !dbg !17091

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17091
  ret %struct._dnode* %8, !dbg !17093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.350() unnamed_addr #8 !dbg !17094 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17098, metadata !DIExpression()), !dbg !17099
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.351() #24, !dbg !17100
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17100
  ret %struct._dnode* %3, !dbg !17101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.351() unnamed_addr #8 !dbg !17102 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17106, metadata !DIExpression()), !dbg !17107
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17108
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17109
  ret i1 %2, !dbg !17110
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17111 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17115, metadata !DIExpression()), !dbg !17120
  call void @llvm.dbg.value(metadata i32 -22, metadata !17116, metadata !DIExpression()), !dbg !17120
  call void @llvm.dbg.value(metadata i32 0, metadata !17117, metadata !DIExpression()), !dbg !17121
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16879, metadata !DIExpression()) #23, !dbg !17122
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17124, !srcloc !16894
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()) #23, !dbg !17126
  call void @llvm.dbg.value(metadata i32 undef, metadata !16892, metadata !DIExpression()) #23, !dbg !17126
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()) #23, !dbg !17122
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17127
  br i1 %3, label %5, label %4, !dbg !17128

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17129
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.342, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17129
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17129
  unreachable, !dbg !17129

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()) #23, !dbg !17126
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()) #23, !dbg !17122
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17130
  call void @llvm.dbg.value(metadata i32 undef, metadata !17119, metadata !DIExpression()), !dbg !17121
  call void @llvm.dbg.value(metadata i32 -22, metadata !17116, metadata !DIExpression()), !dbg !17120
  call void @llvm.dbg.value(metadata i32 undef, metadata !17117, metadata !DIExpression()), !dbg !17121
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17116, metadata !DIExpression()), !dbg !17120
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.335(%struct._dnode* noundef %6) #24, !dbg !17131
  br i1 %7, label %8, label %9, !dbg !17135

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !17136
  call void @llvm.dbg.value(metadata i32 0, metadata !17116, metadata !DIExpression()), !dbg !17120
  br label %9, !dbg !17138

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !17120
  call void @llvm.dbg.value(metadata i32 %10, metadata !17116, metadata !DIExpression()), !dbg !17120
  call void @llvm.dbg.value(metadata i32 undef, metadata !16952, metadata !DIExpression()) #23, !dbg !17139
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16957, metadata !DIExpression()) #23, !dbg !17139
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17141
  br i1 %11, label %13, label %12, !dbg !17142

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17143
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17143
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17143
  unreachable, !dbg !17143

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17124
  call void @llvm.dbg.value(metadata i32 %14, metadata !16891, metadata !DIExpression()) #23, !dbg !17126
  call void @llvm.dbg.value(metadata i32 %14, metadata !16885, metadata !DIExpression()) #23, !dbg !17122
  call void @llvm.dbg.value(metadata i32 %14, metadata !17119, metadata !DIExpression()), !dbg !17121
  call void @llvm.dbg.value(metadata i32 undef, metadata !16952, metadata !DIExpression()) #23, !dbg !17139
  call void @llvm.dbg.value(metadata i32 undef, metadata !16966, metadata !DIExpression()) #23, !dbg !17144
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17146, !srcloc !16972
  call void @llvm.dbg.value(metadata i32 %10, metadata !17116, metadata !DIExpression()), !dbg !17120
  call void @llvm.dbg.value(metadata i32 undef, metadata !17117, metadata !DIExpression()), !dbg !17121
  ret i32 %10, !dbg !17147
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !17148 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17150, metadata !DIExpression()), !dbg !17151
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !17152
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17154
  br i1 %3, label %10, label %4, !dbg !17155

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17156
  %6 = load i64, i64* %5, align 8, !dbg !17156
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17158
  %8 = load i64, i64* %7, align 8, !dbg !17159
  %9 = add nsw i64 %8, %6, !dbg !17159
  store i64 %9, i64* %7, align 8, !dbg !17159
  br label %10, !dbg !17160

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17161
  tail call fastcc void @sys_dlist_remove.354(%struct._dnode* noundef %11) #24, !dbg !17162
  ret void, !dbg !17163
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.354(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17164 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17168, metadata !DIExpression()), !dbg !17171
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17172
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17172
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17169, metadata !DIExpression()), !dbg !17171
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17173
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17173
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17170, metadata !DIExpression()), !dbg !17171
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17174
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17175
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17176
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17177
  tail call fastcc void @sys_dnode_init.355(%struct._dnode* noundef %0) #24, !dbg !17178
  ret void, !dbg !17179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.355(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !17180 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17182, metadata !DIExpression()), !dbg !17183
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17184
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17185
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17186
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17187
  ret void, !dbg !17188
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17189 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17195, metadata !DIExpression()), !dbg !17200
  call void @llvm.dbg.value(metadata i64 0, metadata !17196, metadata !DIExpression()), !dbg !17200
  call void @llvm.dbg.value(metadata i32 0, metadata !17197, metadata !DIExpression()), !dbg !17201
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16879, metadata !DIExpression()) #23, !dbg !17202
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17204, !srcloc !16894
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()) #23, !dbg !17206
  call void @llvm.dbg.value(metadata i32 undef, metadata !16892, metadata !DIExpression()) #23, !dbg !17206
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()) #23, !dbg !17202
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17207
  br i1 %3, label %5, label %4, !dbg !17208

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17209
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.342, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17209
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17209
  unreachable, !dbg !17209

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()) #23, !dbg !17206
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()) #23, !dbg !17202
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17210
  call void @llvm.dbg.value(metadata i32 undef, metadata !17199, metadata !DIExpression()), !dbg !17201
  call void @llvm.dbg.value(metadata i64 0, metadata !17196, metadata !DIExpression()), !dbg !17200
  call void @llvm.dbg.value(metadata i32 undef, metadata !17197, metadata !DIExpression()), !dbg !17201
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17211
  call void @llvm.dbg.value(metadata i64 %6, metadata !17196, metadata !DIExpression()), !dbg !17200
  call void @llvm.dbg.value(metadata i32 undef, metadata !16952, metadata !DIExpression()) #23, !dbg !17214
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16957, metadata !DIExpression()) #23, !dbg !17214
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17216
  br i1 %7, label %9, label %8, !dbg !17217

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17218
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17218
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17218
  unreachable, !dbg !17218

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !17204
  call void @llvm.dbg.value(metadata i32 %10, metadata !16891, metadata !DIExpression()) #23, !dbg !17206
  call void @llvm.dbg.value(metadata i32 %10, metadata !16885, metadata !DIExpression()) #23, !dbg !17202
  call void @llvm.dbg.value(metadata i32 %10, metadata !17199, metadata !DIExpression()), !dbg !17201
  call void @llvm.dbg.value(metadata i32 undef, metadata !16952, metadata !DIExpression()) #23, !dbg !17214
  call void @llvm.dbg.value(metadata i32 undef, metadata !16966, metadata !DIExpression()) #23, !dbg !17219
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17221, !srcloc !16972
  call void @llvm.dbg.value(metadata i64 %6, metadata !17196, metadata !DIExpression()), !dbg !17200
  call void @llvm.dbg.value(metadata i32 undef, metadata !17197, metadata !DIExpression()), !dbg !17201
  ret i64 %6, !dbg !17222
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17223 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17225, metadata !DIExpression()), !dbg !17229
  call void @llvm.dbg.value(metadata i64 0, metadata !17226, metadata !DIExpression()), !dbg !17229
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.356(%struct._timeout* noundef %0) #24, !dbg !17230
  br i1 %2, label %21, label %3, !dbg !17232

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17233
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17227, metadata !DIExpression()), !dbg !17234
  call void @llvm.dbg.value(metadata i64 0, metadata !17226, metadata !DIExpression()), !dbg !17229
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17235
  br i1 %5, label %16, label %6, !dbg !17237

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17227, metadata !DIExpression()), !dbg !17234
  call void @llvm.dbg.value(metadata i64 %8, metadata !17226, metadata !DIExpression()), !dbg !17229
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17238
  %10 = load i64, i64* %9, align 8, !dbg !17238
  %11 = add nsw i64 %10, %8, !dbg !17240
  call void @llvm.dbg.value(metadata i64 %11, metadata !17226, metadata !DIExpression()), !dbg !17229
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17241
  br i1 %12, label %16, label %13, !dbg !17243

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17244
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17227, metadata !DIExpression()), !dbg !17234
  call void @llvm.dbg.value(metadata i64 %11, metadata !17226, metadata !DIExpression()), !dbg !17229
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17235
  br i1 %15, label %16, label %6, !dbg !17237, !llvm.loop !17245

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17229
  call void @llvm.dbg.value(metadata i64 %17, metadata !17226, metadata !DIExpression()), !dbg !17229
  %18 = tail call fastcc i32 @elapsed.343() #24, !dbg !17247
  %19 = sext i32 %18 to i64, !dbg !17247
  %20 = sub nsw i64 %17, %19, !dbg !17248
  br label %21, !dbg !17249

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17229
  ret i64 %22, !dbg !17250
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.356(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17251 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17255, metadata !DIExpression()), !dbg !17256
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17257
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.335(%struct._dnode* noundef %2) #24, !dbg !17258
  %4 = xor i1 %3, true, !dbg !17259
  ret i1 %4, !dbg !17260
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17261 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17263, metadata !DIExpression()), !dbg !17268
  call void @llvm.dbg.value(metadata i64 0, metadata !17264, metadata !DIExpression()), !dbg !17268
  call void @llvm.dbg.value(metadata i32 0, metadata !17265, metadata !DIExpression()), !dbg !17269
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16879, metadata !DIExpression()) #23, !dbg !17270
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17272, !srcloc !16894
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()) #23, !dbg !17274
  call void @llvm.dbg.value(metadata i32 undef, metadata !16892, metadata !DIExpression()) #23, !dbg !17274
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()) #23, !dbg !17270
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17275
  br i1 %3, label %5, label %4, !dbg !17276

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17277
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.342, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17277
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17277
  unreachable, !dbg !17277

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()) #23, !dbg !17274
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()) #23, !dbg !17270
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17278
  call void @llvm.dbg.value(metadata i32 undef, metadata !17267, metadata !DIExpression()), !dbg !17269
  call void @llvm.dbg.value(metadata i64 0, metadata !17264, metadata !DIExpression()), !dbg !17268
  call void @llvm.dbg.value(metadata i32 undef, metadata !17265, metadata !DIExpression()), !dbg !17269
  %6 = load i64, i64* @curr_tick, align 8, !dbg !17279
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17282
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !17264, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17268
  call void @llvm.dbg.value(metadata i32 undef, metadata !16952, metadata !DIExpression()) #23, !dbg !17283
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16957, metadata !DIExpression()) #23, !dbg !17283
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17285
  br i1 %8, label %10, label %9, !dbg !17286

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17287
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17287
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17287
  unreachable, !dbg !17287

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !17272
  call void @llvm.dbg.value(metadata i32 %11, metadata !16891, metadata !DIExpression()) #23, !dbg !17274
  call void @llvm.dbg.value(metadata i32 %11, metadata !16885, metadata !DIExpression()) #23, !dbg !17270
  call void @llvm.dbg.value(metadata i32 %11, metadata !17267, metadata !DIExpression()), !dbg !17269
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !17264, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17268
  call void @llvm.dbg.value(metadata i32 undef, metadata !16952, metadata !DIExpression()) #23, !dbg !17283
  call void @llvm.dbg.value(metadata i32 undef, metadata !16966, metadata !DIExpression()) #23, !dbg !17288
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !17290, !srcloc !16972
  call void @llvm.dbg.value(metadata i32 undef, metadata !17265, metadata !DIExpression()), !dbg !17269
  %12 = add i64 %7, %6, !dbg !17291
  ret i64 %12, !dbg !17292
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17293 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17295, metadata !DIExpression()), !dbg !17299
  call void @llvm.dbg.value(metadata i32 0, metadata !17296, metadata !DIExpression()), !dbg !17300
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16879, metadata !DIExpression()) #23, !dbg !17301
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17303, !srcloc !16894
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()) #23, !dbg !17305
  call void @llvm.dbg.value(metadata i32 undef, metadata !16892, metadata !DIExpression()) #23, !dbg !17305
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()) #23, !dbg !17301
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17306
  br i1 %2, label %4, label %3, !dbg !17307

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17308
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.342, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17308
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17308
  unreachable, !dbg !17308

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()) #23, !dbg !17305
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()) #23, !dbg !17301
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17309
  call void @llvm.dbg.value(metadata i32 undef, metadata !17298, metadata !DIExpression()), !dbg !17300
  call void @llvm.dbg.value(metadata i32 -1, metadata !17295, metadata !DIExpression()), !dbg !17299
  call void @llvm.dbg.value(metadata i32 undef, metadata !17296, metadata !DIExpression()), !dbg !17300
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !17310
  call void @llvm.dbg.value(metadata i32 %5, metadata !17295, metadata !DIExpression()), !dbg !17299
  call void @llvm.dbg.value(metadata i32 undef, metadata !16952, metadata !DIExpression()) #23, !dbg !17313
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16957, metadata !DIExpression()) #23, !dbg !17313
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17315
  br i1 %6, label %8, label %7, !dbg !17316

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17317
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17317
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17317
  unreachable, !dbg !17317

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !17303
  call void @llvm.dbg.value(metadata i32 %9, metadata !16891, metadata !DIExpression()) #23, !dbg !17305
  call void @llvm.dbg.value(metadata i32 %9, metadata !16885, metadata !DIExpression()) #23, !dbg !17301
  call void @llvm.dbg.value(metadata i32 %9, metadata !17298, metadata !DIExpression()), !dbg !17300
  call void @llvm.dbg.value(metadata i32 undef, metadata !16952, metadata !DIExpression()) #23, !dbg !17313
  call void @llvm.dbg.value(metadata i32 undef, metadata !16966, metadata !DIExpression()) #23, !dbg !17318
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17320, !srcloc !16972
  call void @llvm.dbg.value(metadata i32 %5, metadata !17295, metadata !DIExpression()), !dbg !17299
  call void @llvm.dbg.value(metadata i32 undef, metadata !17296, metadata !DIExpression()), !dbg !17300
  ret i32 %5, !dbg !17321
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17322 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17324, metadata !DIExpression()), !dbg !17334
  call void @llvm.dbg.value(metadata i1 %1, metadata !17325, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17334
  call void @llvm.dbg.value(metadata i32 0, metadata !17326, metadata !DIExpression()), !dbg !17335
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16879, metadata !DIExpression()) #23, !dbg !17336
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17338, !srcloc !16894
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()) #23, !dbg !17340
  call void @llvm.dbg.value(metadata i32 undef, metadata !16892, metadata !DIExpression()) #23, !dbg !17340
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()) #23, !dbg !17336
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17341
  br i1 %4, label %6, label %5, !dbg !17342

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17343
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.342, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17343
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17343
  unreachable, !dbg !17343

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()) #23, !dbg !17340
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()) #23, !dbg !17336
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17344
  call void @llvm.dbg.value(metadata i32 undef, metadata !17328, metadata !DIExpression()), !dbg !17335
  call void @llvm.dbg.value(metadata i32 undef, metadata !17326, metadata !DIExpression()), !dbg !17335
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !17345
  call void @llvm.dbg.value(metadata i32 %7, metadata !17329, metadata !DIExpression()), !dbg !17346
  call void @llvm.dbg.value(metadata i1 undef, metadata !17332, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17346
  %8 = icmp slt i32 %7, 2, !dbg !17347
  call void @llvm.dbg.value(metadata i1 %8, metadata !17333, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17346
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !17348
  call void @llvm.dbg.value(metadata i1 %9, metadata !17332, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17346
  br i1 %10, label %14, label %11, !dbg !17348

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !17350
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !17350
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #25, !dbg !17352
  br label %14, !dbg !17353

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16952, metadata !DIExpression()) #23, !dbg !17354
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16957, metadata !DIExpression()) #23, !dbg !17354
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17356
  br i1 %15, label %17, label %16, !dbg !17357

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17358
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17358
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17358
  unreachable, !dbg !17358

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !17338
  call void @llvm.dbg.value(metadata i32 %18, metadata !16891, metadata !DIExpression()) #23, !dbg !17340
  call void @llvm.dbg.value(metadata i32 %18, metadata !16885, metadata !DIExpression()) #23, !dbg !17336
  call void @llvm.dbg.value(metadata i32 %18, metadata !17328, metadata !DIExpression()), !dbg !17335
  call void @llvm.dbg.value(metadata i32 undef, metadata !16952, metadata !DIExpression()) #23, !dbg !17354
  call void @llvm.dbg.value(metadata i32 undef, metadata !16966, metadata !DIExpression()) #23, !dbg !17359
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !17361, !srcloc !16972
  call void @llvm.dbg.value(metadata i32 1, metadata !17326, metadata !DIExpression()), !dbg !17335
  call void @llvm.dbg.value(metadata i32 undef, metadata !17326, metadata !DIExpression()), !dbg !17335
  ret void, !dbg !17362
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17363 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17367, metadata !DIExpression()), !dbg !17372
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17373
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16879, metadata !DIExpression()) #23, !dbg !17374
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17376, !srcloc !16894
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()) #23, !dbg !17378
  call void @llvm.dbg.value(metadata i32 undef, metadata !16892, metadata !DIExpression()) #23, !dbg !17378
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()) #23, !dbg !17374
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17379
  br i1 %3, label %5, label %4, !dbg !17380

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17381
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.342, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17381
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17381
  unreachable, !dbg !17381

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()) #23, !dbg !17378
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()) #23, !dbg !17374
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17382
  call void @llvm.dbg.value(metadata i32 undef, metadata !17368, metadata !DIExpression()), !dbg !17372
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17372
  call void @llvm.dbg.value(metadata i32 undef, metadata !17368, metadata !DIExpression()), !dbg !17372
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !17383
  %7 = icmp eq %struct._timeout* %6, null, !dbg !17384
  br i1 %7, label %37, label %8, !dbg !17385

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !17372
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !17386
  %14 = load i64, i64* %13, align 8, !dbg !17386
  %15 = sext i32 %11 to i64, !dbg !17387
  %16 = icmp sgt i64 %14, %15, !dbg !17388
  br i1 %16, label %35, label %17, !dbg !17389

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !17369, metadata !DIExpression()), !dbg !17390
  %18 = trunc i64 %14 to i32, !dbg !17391
  call void @llvm.dbg.value(metadata i32 %18, metadata !17371, metadata !DIExpression()), !dbg !17390
  %19 = sext i32 %18 to i64, !dbg !17392
  %20 = load i64, i64* @curr_tick, align 8, !dbg !17393
  %21 = add i64 %20, %19, !dbg !17393
  store i64 %21, i64* @curr_tick, align 8, !dbg !17393
  store i64 0, i64* %13, align 8, !dbg !17394
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !17395
  call void @llvm.dbg.value(metadata i32 undef, metadata !16952, metadata !DIExpression()) #23, !dbg !17396
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16957, metadata !DIExpression()) #23, !dbg !17396
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17398
  br i1 %22, label %24, label %23, !dbg !17399

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17400
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17400
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17400
  unreachable, !dbg !17400

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16952, metadata !DIExpression()) #23, !dbg !17396
  call void @llvm.dbg.value(metadata i32 %12, metadata !16966, metadata !DIExpression()) #23, !dbg !17401
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17403, !srcloc !16972
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !17404
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !17404
  tail call void %26(%struct._timeout* noundef nonnull %9) #25, !dbg !17405
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16879, metadata !DIExpression()) #23, !dbg !17406
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17408, !srcloc !16894
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()) #23, !dbg !17410
  call void @llvm.dbg.value(metadata i32 undef, metadata !16892, metadata !DIExpression()) #23, !dbg !17410
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()) #23, !dbg !17406
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17411
  br i1 %28, label %30, label %29, !dbg !17412

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17413
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.342, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17413
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17413
  unreachable, !dbg !17413

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()) #23, !dbg !17410
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()) #23, !dbg !17406
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17414
  call void @llvm.dbg.value(metadata i32 undef, metadata !17368, metadata !DIExpression()), !dbg !17372
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !17415
  %32 = sub nsw i32 %31, %18, !dbg !17415
  store i32 %32, i32* @announce_remaining, align 4, !dbg !17372
  call void @llvm.dbg.value(metadata i32 undef, metadata !17368, metadata !DIExpression()), !dbg !17372
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !17383
  %34 = icmp eq %struct._timeout* %33, null, !dbg !17384
  br i1 %34, label %37, label %8, !dbg !17385, !llvm.loop !17416

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !17418
  store i64 %36, i64* %13, align 8, !dbg !17418
  br label %41, !dbg !17421

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !17372
  %40 = sext i32 %39 to i64, !dbg !17422
  br label %41, !dbg !17422

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !17422
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !17423
  %45 = add i64 %44, %42, !dbg !17423
  store i64 %45, i64* @curr_tick, align 8, !dbg !17423
  store i32 0, i32* @announce_remaining, align 4, !dbg !17424
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !17425
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #25, !dbg !17426
  call void @llvm.dbg.value(metadata i32 undef, metadata !16952, metadata !DIExpression()) #23, !dbg !17427
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16957, metadata !DIExpression()) #23, !dbg !17427
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17429
  br i1 %47, label %49, label %48, !dbg !17430

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17431
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17431
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17431
  unreachable, !dbg !17431

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !17372
  call void @llvm.dbg.value(metadata i32 %50, metadata !16952, metadata !DIExpression()) #23, !dbg !17427
  call void @llvm.dbg.value(metadata i32 %50, metadata !16966, metadata !DIExpression()) #23, !dbg !17432
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !17434, !srcloc !16972
  ret void, !dbg !17435
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17436 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17440, metadata !DIExpression()), !dbg !17444
  call void @llvm.dbg.value(metadata i32 0, metadata !17441, metadata !DIExpression()), !dbg !17445
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16879, metadata !DIExpression()) #23, !dbg !17446
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17448, !srcloc !16894
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()) #23, !dbg !17450
  call void @llvm.dbg.value(metadata i32 undef, metadata !16892, metadata !DIExpression()) #23, !dbg !17450
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()) #23, !dbg !17446
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17451
  br i1 %2, label %4, label %3, !dbg !17452

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17453
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.342, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17453
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17453
  unreachable, !dbg !17453

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()) #23, !dbg !17450
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()) #23, !dbg !17446
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17454
  call void @llvm.dbg.value(metadata i32 undef, metadata !17443, metadata !DIExpression()), !dbg !17445
  call void @llvm.dbg.value(metadata i64 0, metadata !17440, metadata !DIExpression()), !dbg !17444
  call void @llvm.dbg.value(metadata i32 undef, metadata !17441, metadata !DIExpression()), !dbg !17445
  %5 = load i64, i64* @curr_tick, align 8, !dbg !17455
  %6 = tail call fastcc i32 @elapsed.343() #24, !dbg !17458
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17440, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17444
  call void @llvm.dbg.value(metadata i32 undef, metadata !16952, metadata !DIExpression()) #23, !dbg !17459
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16957, metadata !DIExpression()) #23, !dbg !17459
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17461
  br i1 %7, label %9, label %8, !dbg !17462

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17463
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17463
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17463
  unreachable, !dbg !17463

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !17448
  call void @llvm.dbg.value(metadata i32 %10, metadata !16891, metadata !DIExpression()) #23, !dbg !17450
  call void @llvm.dbg.value(metadata i32 %10, metadata !16885, metadata !DIExpression()) #23, !dbg !17446
  call void @llvm.dbg.value(metadata i32 %10, metadata !17443, metadata !DIExpression()), !dbg !17445
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17440, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17444
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !17440, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17444
  call void @llvm.dbg.value(metadata i32 undef, metadata !16952, metadata !DIExpression()) #23, !dbg !17459
  call void @llvm.dbg.value(metadata i32 undef, metadata !16966, metadata !DIExpression()) #23, !dbg !17464
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17466, !srcloc !16972
  call void @llvm.dbg.value(metadata i32 undef, metadata !17441, metadata !DIExpression()), !dbg !17445
  %11 = sext i32 %6 to i64, !dbg !17458
  %12 = add i64 %5, %11, !dbg !17467
  ret i64 %12, !dbg !17468
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17469 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17470
  %2 = trunc i64 %1 to i32, !dbg !17471
  ret i32 %2, !dbg !17472
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17473 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17474
  ret i64 %1, !dbg !17475
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17478, metadata !DIExpression()), !dbg !17485
  %2 = icmp eq i32 %0, 0, !dbg !17486
  br i1 %2, label %10, label %3, !dbg !17488

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.363() #24, !dbg !17489
  call void @llvm.dbg.value(metadata i32 %4, metadata !17479, metadata !DIExpression()), !dbg !17485
  %5 = mul i32 %0, 168, !dbg !17490
  call void @llvm.dbg.value(metadata i32 %5, metadata !17480, metadata !DIExpression()), !dbg !17485
  br label %6, !dbg !17491

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.363() #24, !dbg !17492
  call void @llvm.dbg.value(metadata i32 %7, metadata !17481, metadata !DIExpression()), !dbg !17493
  %8 = sub i32 %7, %4, !dbg !17494
  %9 = icmp ult i32 %8, %5, !dbg !17496
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17497
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.363() unnamed_addr #1 !dbg !17498 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.364() #24, !dbg !17499
  ret i32 %1, !dbg !17500
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.364() unnamed_addr #1 !dbg !17501 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17502
  ret i32 %1, !dbg !17503
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17504 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17508, metadata !DIExpression()), !dbg !17510
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17511

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17512
  br label %14, !dbg !17516

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17509, metadata !DIExpression()), !dbg !17510
  %6 = icmp slt i64 %2, -1, !dbg !17517
  br i1 %6, label %7, label %9, !dbg !17520

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17521
  br label %14, !dbg !17522

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !17524
  %11 = icmp ugt i64 %2, 1, !dbg !17525
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17525
  %13 = add nsw i64 %10, %12, !dbg !17526
  br label %14, !dbg !17527

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17528
  ret i64 %15, !dbg !17529
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17530 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.367, i32 0, i32 0)) #25, !dbg !17532
  ret void, !dbg !17533
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!925, !2, !2510, !27, !177, !209, !2512, !2514, !2548, !2550, !218, !268, !2552, !2555, !2566, !2612, !2614, !2642, !2670, !2713, !2785, !2830, !297, !458, !2858, !494, !504, !529, !696, !731, !959, !2863, !1094, !1160, !1475, !1699, !2900, !1814, !1904, !2902, !2986, !3049, !1954, !3052, !1961, !2333, !3070, !2353, !3072, !2471, !3075}
!llvm.ident = !{!3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077}
!llvm.module.flags = !{!3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 94, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5248, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 82)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2624, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "z_ztest_suite_node_stats_test_pytest", scope: !27, file: !111, line: 8, type: !149, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !108, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/testsuite/pytest/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_NODE", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_STATS", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_ZTEST_UNIT_TEST", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_ZTEST_TEST_RULE", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 66)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 67)
!102 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 68)
!103 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 69)
!104 = !DIEnumerator(name: "K_OBJ_LAST", value: 70)
!105 = !{!106, !107}
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!107 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!108 = !{!109, !155, !25, !173}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "z_ztest_test_node_test_pytest", scope: !27, file: !111, line: 8, type: !112, isLocal: true, isDefinition: true, align: 32)
!111 = !DIFile(filename: "zephyr/samples/subsys/testsuite/pytest/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !115)
!114 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/include/zephyr/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !{!116, !121, !127, !133, !136, !139, !146}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !113, file: !114, line: 179, baseType: !117, size: 32)
!117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 32)
!119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!120 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !113, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !123)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_setup_t", file: !114, line: 141, baseType: !124)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!125 = !DISubroutineType(types: !126)
!126 = !{!106}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !113, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !129)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_before_t", file: !114, line: 148, baseType: !130)
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!131 = !DISubroutineType(types: !132)
!132 = !{null, !106}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !113, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !135)
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_after_t", file: !114, line: 155, baseType: !130)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !113, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !138)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_teardown_t", file: !114, line: 162, baseType: !130)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !113, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_predicate_t", file: !114, line: 171, baseType: !142)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!143 = !DISubroutineType(types: !144)
!144 = !{!145, !13}
!145 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !113, file: !114, line: 197, baseType: !147, size: 32, offset: 192)
!147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !148)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 32)
!149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !150)
!150 = !{!151, !153, !154}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !149, file: !114, line: 116, baseType: !152, size: 32)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !149, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !149, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!155 = !DIGlobalVariableExpression(var: !156, expr: !DIExpression())
!156 = distinct !DIGlobalVariable(name: "z_ztest_unit_test__test_pytest__test_pytest", scope: !27, file: !111, line: 10, type: !157, isLocal: true, isDefinition: true, align: 32)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !158)
!158 = !{!159, !160, !161, !162, !163}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !157, file: !114, line: 98, baseType: !118, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !157, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !157, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !157, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !157, file: !114, line: 104, baseType: !164, size: 32, offset: 128)
!164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !167)
!167 = !{!168, !169, !170, !171, !172}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !166, file: !114, line: 125, baseType: !152, size: 32)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !166, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !166, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !166, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !166, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!173 = !DIGlobalVariableExpression(var: !174, expr: !DIExpression())
!174 = distinct !DIGlobalVariable(name: "z_ztest_unit_test_stats_test_pytest_test_pytest", scope: !27, file: !111, line: 10, type: !166, isLocal: false, isDefinition: true)
!175 = !DIGlobalVariableExpression(var: !176, expr: !DIExpression())
!176 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !177, file: !200, line: 18, type: !201, isLocal: false, isDefinition: true)
!177 = distinct !DICompileUnit(language: DW_LANG_C99, file: !178, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !179, globals: !199, splitDebugInlining: false, nameTableKind: None)
!178 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!179 = !{!22, !106, !24, !180, !182, !184, !185, !107, !187, !188, !190, !192, !193, !194, !197, !118}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!181 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!183 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !186, line: 214, baseType: !32)
!186 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!189 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!191 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 32)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !196)
!196 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !198)
!198 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!199 = !{!175}
!200 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !204)
!203 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!204 = !{!205, !206}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !202, file: !203, line: 17, baseType: !118, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !202, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!207 = !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = distinct !DIGlobalVariable(name: "_char_out", scope: !209, file: !212, line: 54, type: !213, isLocal: false, isDefinition: true)
!209 = distinct !DICompileUnit(language: DW_LANG_C99, file: !210, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !211, splitDebugInlining: false, nameTableKind: None)
!210 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!211 = !{!207}
!212 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 32)
!214 = !DISubroutineType(types: !215)
!215 = !{!107, !107}
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !218, file: !235, line: 56, type: !236, isLocal: true, isDefinition: true, align: 32)
!218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !219, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !220, globals: !234, splitDebugInlining: false, nameTableKind: None)
!219 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!220 = !{!221}
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 369, baseType: !224)
!223 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f405xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 360, size: 224, elements: !225)
!225 = !{!226, !228, !229, !230, !231, !232, !233}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !224, file: !223, line: 362, baseType: !227, size: 32)
!227 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !152)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !224, file: !223, line: 363, baseType: !227, size: 32, offset: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !224, file: !223, line: 364, baseType: !227, size: 32, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !224, file: !223, line: 365, baseType: !227, size: 32, offset: 96)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !224, file: !223, line: 366, baseType: !227, size: 32, offset: 128)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !224, file: !223, line: 367, baseType: !227, size: 32, offset: 160)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !224, file: !223, line: 368, baseType: !227, size: 32, offset: 192)
!234 = !{!216}
!235 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !237)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !239)
!238 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!239 = !{!240, !265}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !237, file: !238, line: 60, baseType: !241, size: 32)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = !DISubroutineType(types: !243)
!243 = !{!107, !244}
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 32)
!245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !246)
!246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !248)
!247 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!248 = !{!249, !250, !251, !252, !258, !259}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !246, file: !247, line: 380, baseType: !118, size: 32)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !246, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !246, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !246, file: !247, line: 386, baseType: !253, size: 32, offset: 96)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 32)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !255)
!255 = !{!256, !257}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !254, file: !247, line: 359, baseType: !195, size: 8)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !254, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !246, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !246, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !247, line: 43, baseType: !263)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !264)
!264 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !237, file: !238, line: 65, baseType: !244, size: 32, offset: 32)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !268, file: !271, line: 71, type: !272, isLocal: true, isDefinition: true, align: 32)
!268 = distinct !DICompileUnit(language: DW_LANG_C99, file: !269, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !270, splitDebugInlining: false, nameTableKind: None)
!269 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!270 = !{!266}
!271 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !273)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !274)
!274 = !{!275, !294}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !273, file: !238, line: 60, baseType: !276, size: 32)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DISubroutineType(types: !278)
!278 = !{!107, !279}
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !281)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !282)
!282 = !{!283, !284, !285, !286, !292, !293}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !281, file: !247, line: 380, baseType: !118, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !281, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !281, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !281, file: !247, line: 386, baseType: !287, size: 32, offset: 96)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !289)
!289 = !{!290, !291}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !288, file: !247, line: 359, baseType: !195, size: 8)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !288, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !281, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !281, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !273, file: !238, line: 65, baseType: !279, size: 32, offset: 32)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !297, file: !304, line: 17, type: !451, isLocal: false, isDefinition: true)
!297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !298, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !300, splitDebugInlining: false, nameTableKind: None)
!298 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!299 = !{!185, !107, !152, !106}
!300 = !{!295, !301, !447}
!301 = !DIGlobalVariableExpression(var: !302, expr: !DIExpression())
!302 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !303, file: !304, line: 198, type: !433, isLocal: true, isDefinition: true)
!303 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !304, file: !304, line: 175, type: !305, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !428)
!304 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!305 = !DISubroutineType(types: !306)
!306 = !{null, !307}
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 32)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !310)
!309 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!310 = !{!311, !377, !390, !391, !392, !396, !397, !403, !423}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !308, file: !309, line: 247, baseType: !312, size: 384)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !313)
!313 = !{!314, !342, !350, !351, !352, !363, !364, !365}
!314 = !DIDerivedType(tag: DW_TAG_member, scope: !312, file: !309, line: 60, baseType: !315, size: 64)
!315 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !312, file: !309, line: 60, size: 64, elements: !316)
!316 = !{!317, !333}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !315, file: !309, line: 61, baseType: !318, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !320)
!319 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !321)
!321 = !{!322, !328}
!322 = !DIDerivedType(tag: DW_TAG_member, scope: !320, file: !319, line: 38, baseType: !323, size: 32)
!323 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !320, file: !319, line: 38, size: 32, elements: !324)
!324 = !{!325, !327}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !323, file: !319, line: 39, baseType: !326, size: 32)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !323, file: !319, line: 40, baseType: !326, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, scope: !320, file: !319, line: 42, baseType: !329, size: 32, offset: 32)
!329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !320, file: !319, line: 42, size: 32, elements: !330)
!330 = !{!331, !332}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !329, file: !319, line: 43, baseType: !326, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !329, file: !319, line: 44, baseType: !326, size: 32)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !315, file: !309, line: 62, baseType: !334, size: 64)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !336)
!335 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!336 = !{!337}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !334, file: !335, line: 50, baseType: !338, size: 64)
!338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 64, elements: !340)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!340 = !{!341}
!341 = !DISubrange(count: 2)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !312, file: !309, line: 68, baseType: !343, size: 32, offset: 64)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !346)
!345 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !347)
!347 = !{!348}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !346, file: !345, line: 232, baseType: !349, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !320)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !312, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !312, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!352 = !DIDerivedType(tag: DW_TAG_member, scope: !312, file: !309, line: 90, baseType: !353, size: 16, offset: 112)
!353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !312, file: !309, line: 90, size: 16, elements: !354)
!354 = !{!355, !362}
!355 = !DIDerivedType(tag: DW_TAG_member, scope: !353, file: !309, line: 91, baseType: !356, size: 16)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !353, file: !309, line: 91, size: 16, elements: !357)
!357 = !{!358, !361}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !356, file: !309, line: 96, baseType: !359, size: 8)
!359 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !360)
!360 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !356, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !353, file: !309, line: 100, baseType: !197, size: 16)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !312, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !312, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !312, file: !309, line: 131, baseType: !366, size: 192, offset: 192)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !367)
!367 = !{!368, !369, !375}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !366, file: !345, line: 245, baseType: !318, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !366, file: !345, line: 246, baseType: !370, size: 32, offset: 64)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !371)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DISubroutineType(types: !373)
!373 = !{null, !374}
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !366, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !191)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !308, file: !309, line: 250, baseType: !378, size: 288, offset: 384)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !380)
!379 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!380 = !{!381, !382, !383, !384, !385, !386, !387, !388, !389}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !378, file: !379, line: 26, baseType: !152, size: 32)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !378, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !378, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !378, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !378, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !378, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !378, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !378, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !378, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !308, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !308, file: !309, line: 256, baseType: !344, size: 64, offset: 704)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !308, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !394)
!394 = !{!395}
!395 = !DISubrange(count: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !308, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !308, file: !309, line: 300, baseType: !398, size: 96, offset: 1056)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !399)
!399 = !{!400, !401, !402}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !398, file: !309, line: 153, baseType: !22, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !398, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !398, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !308, file: !309, line: 325, baseType: !404, size: 32, offset: 1152)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 32)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !407)
!406 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!407 = !{!408, !417, !418}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !405, file: !406, line: 5074, baseType: !409, size: 96)
!409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !411)
!410 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!411 = !{!412, !415, !416}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !409, file: !410, line: 57, baseType: !413, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 32)
!414 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !410, line: 57, flags: DIFlagFwdDecl)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !409, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !409, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !405, file: !406, line: 5075, baseType: !344, size: 64, offset: 96)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !405, file: !406, line: 5076, baseType: !419, size: 32, offset: 160)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !421)
!420 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!421 = !{!422}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !419, file: !420, line: 52, baseType: !22, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !308, file: !309, line: 343, baseType: !424, size: 64, offset: 1184)
!424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !425)
!425 = !{!426, !427}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !424, file: !379, line: 63, baseType: !152, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !424, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!428 = !{!429, !430, !431, !432}
!429 = !DILocalVariable(name: "thread", arg: 1, scope: !303, file: !304, line: 175, type: !307)
!430 = !DILocalVariable(name: "region_num", scope: !303, file: !304, line: 200, type: !195)
!431 = !DILocalVariable(name: "guard_start", scope: !303, file: !304, line: 265, type: !22)
!432 = !DILocalVariable(name: "guard_size", scope: !303, file: !304, line: 266, type: !185)
!433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 96, elements: !445)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !435, line: 52, size: 96, elements: !436)
!435 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!436 = !{!437, !438, !439}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !434, file: !435, line: 53, baseType: !22, size: 32)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !434, file: !435, line: 54, baseType: !185, size: 32, offset: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !434, file: !435, line: 55, baseType: !440, size: 32, offset: 64)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !441, line: 151, baseType: !442)
!441 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 149, size: 32, elements: !443)
!443 = !{!444}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !442, file: !441, line: 150, baseType: !152, size: 32)
!445 = !{!446}
!446 = !DISubrange(count: 1)
!447 = !DIGlobalVariableExpression(var: !448, expr: !DIExpression())
!448 = distinct !DIGlobalVariable(name: "static_regions", scope: !297, file: !304, line: 62, type: !449, isLocal: true, isDefinition: true)
!449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !450, size: 96, elements: !445)
!450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !434)
!451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !452)
!452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !453)
!453 = !{!454, !455}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !452, file: !203, line: 17, baseType: !118, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !452, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!456 = !DIGlobalVariableExpression(var: !457, expr: !DIExpression())
!457 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !458, file: !491, line: 39, type: !195, isLocal: true, isDefinition: true)
!458 = distinct !DICompileUnit(language: DW_LANG_C99, file: !459, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !460, globals: !490, splitDebugInlining: false, nameTableKind: None)
!459 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!460 = !{!461, !106, !107, !478, !195}
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !463, line: 1226, baseType: !464)
!463 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 1213, size: 352, elements: !465)
!465 = !{!466, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !464, file: !463, line: 1215, baseType: !467, size: 32)
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !227)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !464, file: !463, line: 1216, baseType: !227, size: 32, offset: 32)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !464, file: !463, line: 1217, baseType: !227, size: 32, offset: 64)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !464, file: !463, line: 1218, baseType: !227, size: 32, offset: 96)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !464, file: !463, line: 1219, baseType: !227, size: 32, offset: 128)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !464, file: !463, line: 1220, baseType: !227, size: 32, offset: 160)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !464, file: !463, line: 1221, baseType: !227, size: 32, offset: 192)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !464, file: !463, line: 1222, baseType: !227, size: 32, offset: 224)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !464, file: !463, line: 1223, baseType: !227, size: 32, offset: 256)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !464, file: !463, line: 1224, baseType: !227, size: 32, offset: 288)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !464, file: !463, line: 1225, baseType: !227, size: 32, offset: 320)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !480)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !481, line: 27, size: 96, elements: !482)
!481 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!482 = !{!483, !484, !485}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !480, file: !481, line: 29, baseType: !152, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !480, file: !481, line: 31, baseType: !118, size: 32, offset: 32)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !480, file: !481, line: 37, baseType: !486, size: 32, offset: 64)
!486 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !441, line: 146, baseType: !487)
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !441, line: 141, size: 32, elements: !488)
!488 = !{!489}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !487, file: !441, line: 143, baseType: !152, size: 32)
!490 = !{!456}
!491 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!492 = !DIGlobalVariableExpression(var: !493, expr: !DIExpression())
!493 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !494, file: !501, line: 21, type: !213, isLocal: true, isDefinition: true)
!494 = distinct !DICompileUnit(language: DW_LANG_C99, file: !495, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !496, globals: !500, splitDebugInlining: false, nameTableKind: None)
!495 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!496 = !{!497, !107, !106}
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 32)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !499, line: 22, baseType: !107)
!499 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!500 = !{!492}
!501 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!502 = !DIGlobalVariableExpression(var: !503, expr: !DIExpression())
!503 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !504, file: !509, line: 13, type: !526, isLocal: true, isDefinition: true)
!504 = distinct !DICompileUnit(language: DW_LANG_C99, file: !505, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !506, splitDebugInlining: false, nameTableKind: None)
!505 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!506 = !{!507, !502}
!507 = !DIGlobalVariableExpression(var: !508, expr: !DIExpression())
!508 = distinct !DIGlobalVariable(name: "mpu_config", scope: !504, file: !509, line: 37, type: !510, isLocal: false, isDefinition: true)
!509 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !511)
!511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !481, line: 41, size: 64, elements: !512)
!512 = !{!513, !514}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !511, file: !481, line: 43, baseType: !152, size: 32)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !511, file: !481, line: 45, baseType: !515, size: 32, offset: 32)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !517)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !481, line: 27, size: 96, elements: !518)
!518 = !{!519, !520, !521}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !517, file: !481, line: 29, baseType: !152, size: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !517, file: !481, line: 31, baseType: !118, size: 32, offset: 32)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !517, file: !481, line: 37, baseType: !522, size: 32, offset: 64)
!522 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !441, line: 146, baseType: !523)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !441, line: 141, size: 32, elements: !524)
!524 = !{!525}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !523, file: !441, line: 143, baseType: !152, size: 32)
!526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 192, elements: !340)
!527 = !DIGlobalVariableExpression(var: !528, expr: !DIExpression())
!528 = distinct !DIGlobalVariable(name: "phase", scope: !529, file: !533, line: 61, type: !532, isLocal: false, isDefinition: true)
!529 = distinct !DICompileUnit(language: DW_LANG_C99, file: !530, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !531, retainedTypes: !558, globals: !568, splitDebugInlining: false, nameTableKind: None)
!530 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!531 = !{!532, !541, !549, !30, !554}
!532 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_phase", file: !533, line: 40, baseType: !32, size: 32, elements: !534)
!533 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !{!535, !536, !537, !538, !539, !540}
!535 = !DIEnumerator(name: "TEST_PHASE_SETUP", value: 0)
!536 = !DIEnumerator(name: "TEST_PHASE_BEFORE", value: 1)
!537 = !DIEnumerator(name: "TEST_PHASE_TEST", value: 2)
!538 = !DIEnumerator(name: "TEST_PHASE_AFTER", value: 3)
!539 = !DIEnumerator(name: "TEST_PHASE_TEARDOWN", value: 4)
!540 = !DIEnumerator(name: "TEST_PHASE_FRAMEWORK", value: 5)
!541 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_result", file: !533, line: 226, baseType: !32, size: 32, elements: !542)
!542 = !{!543, !544, !545, !546, !547, !548}
!543 = !DIEnumerator(name: "ZTEST_RESULT_PENDING", value: 0)
!544 = !DIEnumerator(name: "ZTEST_RESULT_PASS", value: 1)
!545 = !DIEnumerator(name: "ZTEST_RESULT_FAIL", value: 2)
!546 = !DIEnumerator(name: "ZTEST_RESULT_SKIP", value: 3)
!547 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_SKIP", value: 4)
!548 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_FAIL", value: 5)
!549 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_status", file: !533, line: 52, baseType: !32, size: 32, elements: !550)
!550 = !{!551, !552, !553}
!551 = !DIEnumerator(name: "ZTEST_STATUS_OK", value: 0)
!552 = !DIEnumerator(name: "ZTEST_STATUS_HAS_FAILURE", value: 1)
!553 = !DIEnumerator(name: "ZTEST_STATUS_CRITICAL_ERROR", value: 2)
!554 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_expected_result", file: !114, line: 36, baseType: !32, size: 32, elements: !555)
!555 = !{!556, !557}
!556 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_FAIL", value: 0)
!557 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_SKIP", value: 1)
!558 = !{!106, !107, !185, !559, !564, !152, !566}
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !560, line: 46, baseType: !561)
!560 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 32)
!562 = !DISubroutineType(types: !563)
!563 = !{null, !106, !106, !106}
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !565, line: 46, baseType: !376)
!565 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !567)
!567 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!568 = !{!527, !569, !571, !573, !582, !584, !688, !691}
!569 = !DIGlobalVariableExpression(var: !570, expr: !DIExpression())
!570 = distinct !DIGlobalVariable(name: "test_result", scope: !529, file: !533, line: 234, type: !541, isLocal: true, isDefinition: true)
!571 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression())
!572 = distinct !DIGlobalVariable(name: "current_test_failed_assumption", scope: !529, file: !533, line: 294, type: !145, isLocal: true, isDefinition: true)
!573 = !DIGlobalVariableExpression(var: !574, expr: !DIExpression())
!574 = distinct !DIGlobalVariable(name: "ztest_thread_stack", scope: !529, file: !533, line: 430, type: !575, isLocal: false, isDefinition: true, align: 512)
!575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !576, size: 8704, elements: !580)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !578)
!577 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!578 = !{!579}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !576, file: !577, line: 48, baseType: !120, size: 8)
!580 = !{!581}
!581 = !DISubrange(count: 1088)
!582 = !DIGlobalVariableExpression(var: !583, expr: !DIExpression())
!583 = distinct !DIGlobalVariable(name: "test_status", scope: !529, file: !533, line: 63, type: !549, isLocal: true, isDefinition: true)
!584 = !DIGlobalVariableExpression(var: !585, expr: !DIExpression())
!585 = distinct !DIGlobalVariable(name: "ztest_thread", scope: !529, file: !533, line: 17, type: !586, isLocal: true, isDefinition: true)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !587)
!587 = !{!588, !646, !658, !659, !660, !661, !662, !668, !683}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !586, file: !309, line: 247, baseType: !589, size: 384)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !590)
!590 = !{!591, !615, !622, !623, !624, !633, !634, !635}
!591 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !309, line: 60, baseType: !592, size: 64)
!592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !309, line: 60, size: 64, elements: !593)
!593 = !{!594, !609}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !592, file: !309, line: 61, baseType: !595, size: 64)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !596)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !597)
!597 = !{!598, !604}
!598 = !DIDerivedType(tag: DW_TAG_member, scope: !596, file: !319, line: 38, baseType: !599, size: 32)
!599 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !596, file: !319, line: 38, size: 32, elements: !600)
!600 = !{!601, !603}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !599, file: !319, line: 39, baseType: !602, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 32)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !599, file: !319, line: 40, baseType: !602, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, scope: !596, file: !319, line: 42, baseType: !605, size: 32, offset: 32)
!605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !596, file: !319, line: 42, size: 32, elements: !606)
!606 = !{!607, !608}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !605, file: !319, line: 43, baseType: !602, size: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !605, file: !319, line: 44, baseType: !602, size: 32)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !592, file: !309, line: 62, baseType: !610, size: 64)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !611)
!611 = !{!612}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !610, file: !335, line: 50, baseType: !613, size: 64)
!613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !614, size: 64, elements: !340)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !589, file: !309, line: 68, baseType: !616, size: 32, offset: 64)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 32)
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !618)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !619)
!619 = !{!620}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !618, file: !345, line: 232, baseType: !621, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !596)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !589, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !589, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!624 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !309, line: 90, baseType: !625, size: 16, offset: 112)
!625 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !309, line: 90, size: 16, elements: !626)
!626 = !{!627, !632}
!627 = !DIDerivedType(tag: DW_TAG_member, scope: !625, file: !309, line: 91, baseType: !628, size: 16)
!628 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !625, file: !309, line: 91, size: 16, elements: !629)
!629 = !{!630, !631}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !628, file: !309, line: 96, baseType: !359, size: 8)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !628, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !625, file: !309, line: 100, baseType: !197, size: 16)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !589, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !589, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !589, file: !309, line: 131, baseType: !636, size: 192, offset: 192)
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !637)
!637 = !{!638, !639, !645}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !636, file: !345, line: 245, baseType: !595, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !636, file: !345, line: 246, baseType: !640, size: 32, offset: 64)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !641)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 32)
!642 = !DISubroutineType(types: !643)
!643 = !{null, !644}
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !636, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !586, file: !309, line: 250, baseType: !647, size: 288, offset: 384)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !648)
!648 = !{!649, !650, !651, !652, !653, !654, !655, !656, !657}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !647, file: !379, line: 26, baseType: !152, size: 32)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !647, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !647, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !647, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !647, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !647, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !647, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !647, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !647, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !586, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !586, file: !309, line: 256, baseType: !617, size: 64, offset: 704)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !586, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !586, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !586, file: !309, line: 300, baseType: !663, size: 96, offset: 1056)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !664)
!664 = !{!665, !666, !667}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !663, file: !309, line: 153, baseType: !22, size: 32)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !663, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !663, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !586, file: !309, line: 325, baseType: !669, size: 32, offset: 1152)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 32)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !671)
!671 = !{!672, !678, !679}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !670, file: !406, line: 5074, baseType: !673, size: 96)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !674)
!674 = !{!675, !676, !677}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !673, file: !410, line: 57, baseType: !413, size: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !673, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !673, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !670, file: !406, line: 5075, baseType: !617, size: 64, offset: 96)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !670, file: !406, line: 5076, baseType: !680, size: 32, offset: 160)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !681)
!681 = !{!682}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !680, file: !420, line: 52, baseType: !22, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !586, file: !309, line: 343, baseType: !684, size: 64, offset: 1184)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !685)
!685 = !{!686, !687}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !684, file: !379, line: 63, baseType: !152, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !684, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!688 = !DIGlobalVariableExpression(var: !689, expr: !DIExpression())
!689 = distinct !DIGlobalVariable(name: "tc_start_time", scope: !529, file: !690, line: 95, type: !152, isLocal: true, isDefinition: true)
!690 = !DIFile(filename: "zephyr/subsys/testsuite/include/zephyr/tc_util.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!691 = !DIGlobalVariableExpression(var: !692, expr: !DIExpression())
!692 = distinct !DIGlobalVariable(name: "tc_spend_time", scope: !529, file: !690, line: 96, type: !152, isLocal: true, isDefinition: true)
!693 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!694 = !DIGlobalVariableExpression(var: !695, expr: !DIExpression())
!695 = distinct !DIGlobalVariable(name: "ztest_api", scope: !696, file: !699, line: 70, type: !700, isLocal: false, isDefinition: true)
!696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !697, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !698, splitDebugInlining: false, nameTableKind: None)
!697 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!698 = !{!694}
!699 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !701)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_arch_api", file: !114, line: 499, size: 96, elements: !702)
!702 = !{!703, !704, !725}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "run_all", scope: !701, file: !114, line: 500, baseType: !16, size: 32)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "should_suite_run", scope: !701, file: !114, line: 501, baseType: !705, size: 32, offset: 32)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 32)
!706 = !DISubroutineType(types: !707)
!707 = !{!145, !13, !708}
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 32)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !710)
!710 = !{!711, !712, !713, !714, !715, !716, !717}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !709, file: !114, line: 179, baseType: !117, size: 32)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !709, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !709, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !709, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !709, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !709, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !709, file: !114, line: 197, baseType: !718, size: 32, offset: 192)
!718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !719)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 32)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !721)
!721 = !{!722, !723, !724}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !720, file: !114, line: 116, baseType: !152, size: 32)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !720, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !720, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "should_test_run", scope: !701, file: !114, line: 502, baseType: !726, size: 32, offset: 64)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 32)
!727 = !DISubroutineType(types: !728)
!728 = !{!145, !118, !118}
!729 = !DIGlobalVariableExpression(var: !730, expr: !DIExpression())
!730 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !731, file: !836, line: 72, type: !920, isLocal: true, isDefinition: true)
!731 = distinct !DICompileUnit(language: DW_LANG_C99, file: !732, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !733, retainedTypes: !822, globals: !833, splitDebugInlining: false, nameTableKind: None)
!732 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!733 = !{!30, !734}
!734 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !223, line: 65, baseType: !107, size: 32, elements: !735)
!735 = !{!736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821}
!736 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!737 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!738 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!739 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!740 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!741 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!742 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!743 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!744 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!745 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!746 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!747 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!748 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!749 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!750 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!751 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!752 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!753 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!754 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!755 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!756 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!757 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!758 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!759 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!760 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!761 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!762 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!763 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!764 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!765 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!766 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!767 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!768 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!769 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!770 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!771 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!772 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!773 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!774 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!775 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!776 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!777 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!778 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!779 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!780 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!781 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!782 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!783 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!784 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!785 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!786 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!787 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!788 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!789 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!790 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!791 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!792 = !DIEnumerator(name: "FSMC_IRQn", value: 48)
!793 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!794 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!795 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!796 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!797 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!798 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!799 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!800 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!801 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!802 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!803 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!804 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!805 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!806 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!807 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!808 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!809 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!810 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!811 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!812 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!813 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!814 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!815 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!816 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!817 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!818 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!819 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!820 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!821 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!822 = !{!185, !107, !106, !823}
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 32)
!824 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !223, line: 354, baseType: !825)
!825 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 346, size: 192, elements: !826)
!826 = !{!827, !828, !829, !830, !831, !832}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !825, file: !223, line: 348, baseType: !227, size: 32)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !825, file: !223, line: 349, baseType: !227, size: 32, offset: 32)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !825, file: !223, line: 350, baseType: !227, size: 32, offset: 64)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !825, file: !223, line: 351, baseType: !227, size: 32, offset: 96)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !825, file: !223, line: 352, baseType: !227, size: 32, offset: 128)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !825, file: !223, line: 353, baseType: !227, size: 32, offset: 160)
!833 = !{!834, !840, !856, !867, !884, !729, !886, !900, !902, !904, !906, !908, !910, !912, !914, !916, !918}
!834 = !DIGlobalVariableExpression(var: !835, expr: !DIExpression())
!835 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !731, file: !836, line: 424, type: !837, isLocal: false, isDefinition: true, align: 16)
!836 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!837 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 64, elements: !838)
!838 = !{!839}
!839 = !DISubrange(count: 4)
!840 = !DIGlobalVariableExpression(var: !841, expr: !DIExpression())
!841 = distinct !DIGlobalVariable(name: "__device_dts_ord_37", scope: !731, file: !836, line: 424, type: !842, isLocal: false, isDefinition: true, align: 32)
!842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !843)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !844)
!844 = !{!845, !846, !847, !848, !854, !855}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !843, file: !247, line: 380, baseType: !118, size: 32)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !843, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !843, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !843, file: !247, line: 386, baseType: !849, size: 32, offset: 96)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 32)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !851)
!851 = !{!852, !853}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !850, file: !247, line: 359, baseType: !195, size: 8)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !850, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !843, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !843, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!856 = !DIGlobalVariableExpression(var: !857, expr: !DIExpression())
!857 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_37", scope: !731, file: !836, line: 424, type: !858, isLocal: true, isDefinition: true, align: 32)
!858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !859)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !860)
!860 = !{!861, !866}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !859, file: !238, line: 60, baseType: !862, size: 32)
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 32)
!863 = !DISubroutineType(types: !864)
!864 = !{!107, !865}
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 32)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !859, file: !238, line: 65, baseType: !865, size: 32, offset: 32)
!867 = !DIGlobalVariableExpression(var: !868, expr: !DIExpression())
!868 = distinct !DIGlobalVariable(name: "exti_data", scope: !731, file: !836, line: 423, type: !869, isLocal: true, isDefinition: true)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !836, line: 107, size: 1472, elements: !870)
!870 = !{!871}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !869, file: !836, line: 109, baseType: !872, size: 1472)
!872 = !DICompositeType(tag: DW_TAG_array_type, baseType: !873, size: 1472, elements: !882)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !836, line: 101, size: 64, elements: !874)
!874 = !{!875, !881}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !873, file: !836, line: 102, baseType: !876, size: 32)
!876 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !877, line: 63, baseType: !878)
!877 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 32)
!879 = !DISubroutineType(types: !880)
!880 = !{null, !107, !106}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !873, file: !836, line: 103, baseType: !106, size: 32, offset: 32)
!882 = !{!883}
!883 = !DISubrange(count: 23)
!884 = !DIGlobalVariableExpression(var: !885, expr: !DIExpression())
!885 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_37", scope: !731, file: !836, line: 424, type: !850, isLocal: true, isDefinition: true, align: 8)
!886 = !DIGlobalVariableExpression(var: !887, expr: !DIExpression())
!887 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !888, file: !836, line: 493, type: !893, isLocal: true, isDefinition: true, align: 32)
!888 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !836, file: !836, line: 460, type: !889, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !891)
!889 = !DISubroutineType(types: !890)
!890 = !{null, !865}
!891 = !{!892}
!892 = !DILocalVariable(name: "dev", arg: 1, scope: !888, file: !836, line: 460, type: !865)
!893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !894)
!894 = !{!895, !897, !898, !899}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !893, file: !10, line: 55, baseType: !896, size: 32)
!896 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !107)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !893, file: !10, line: 57, baseType: !896, size: 32, offset: 32)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !893, file: !10, line: 59, baseType: !106, size: 32, offset: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !893, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!900 = !DIGlobalVariableExpression(var: !901, expr: !DIExpression())
!901 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !888, file: !836, line: 497, type: !893, isLocal: true, isDefinition: true, align: 32)
!902 = !DIGlobalVariableExpression(var: !903, expr: !DIExpression())
!903 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !888, file: !836, line: 507, type: !893, isLocal: true, isDefinition: true, align: 32)
!904 = !DIGlobalVariableExpression(var: !905, expr: !DIExpression())
!905 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !888, file: !836, line: 512, type: !893, isLocal: true, isDefinition: true, align: 32)
!906 = !DIGlobalVariableExpression(var: !907, expr: !DIExpression())
!907 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !888, file: !836, line: 516, type: !893, isLocal: true, isDefinition: true, align: 32)
!908 = !DIGlobalVariableExpression(var: !909, expr: !DIExpression())
!909 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !888, file: !836, line: 523, type: !893, isLocal: true, isDefinition: true, align: 32)
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !888, file: !836, line: 527, type: !893, isLocal: true, isDefinition: true, align: 32)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !888, file: !836, line: 581, type: !893, isLocal: true, isDefinition: true, align: 32)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !888, file: !836, line: 586, type: !893, isLocal: true, isDefinition: true, align: 32)
!916 = !DIGlobalVariableExpression(var: !917, expr: !DIExpression())
!917 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !888, file: !836, line: 591, type: !893, isLocal: true, isDefinition: true, align: 32)
!918 = !DIGlobalVariableExpression(var: !919, expr: !DIExpression())
!919 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !888, file: !836, line: 595, type: !893, isLocal: true, isDefinition: true, align: 32)
!920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 736, elements: !882)
!921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !922)
!922 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !223, line: 155, baseType: !734)
!923 = !DIGlobalVariableExpression(var: !924, expr: !DIExpression())
!924 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !925, file: !930, line: 23, type: !954, isLocal: false, isDefinition: true, align: 16)
!925 = distinct !DICompileUnit(language: DW_LANG_C99, file: !926, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !927, splitDebugInlining: false, nameTableKind: None)
!926 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!927 = !{!928, !923, !934, !936, !938, !940, !942, !944, !946, !948, !950, !952}
!928 = !DIGlobalVariableExpression(var: !929, expr: !DIExpression())
!929 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !925, file: !930, line: 18, type: !931, isLocal: false, isDefinition: true, align: 16)
!930 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 208, elements: !932)
!932 = !{!933}
!933 = !DISubrange(count: 13)
!934 = !DIGlobalVariableExpression(var: !935, expr: !DIExpression())
!935 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !925, file: !930, line: 30, type: !837, isLocal: false, isDefinition: true, align: 16)
!936 = !DIGlobalVariableExpression(var: !937, expr: !DIExpression())
!937 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !925, file: !930, line: 37, type: !837, isLocal: false, isDefinition: true, align: 16)
!938 = !DIGlobalVariableExpression(var: !939, expr: !DIExpression())
!939 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !925, file: !930, line: 44, type: !837, isLocal: false, isDefinition: true, align: 16)
!940 = !DIGlobalVariableExpression(var: !941, expr: !DIExpression())
!941 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !925, file: !930, line: 51, type: !837, isLocal: false, isDefinition: true, align: 16)
!942 = !DIGlobalVariableExpression(var: !943, expr: !DIExpression())
!943 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !925, file: !930, line: 58, type: !837, isLocal: false, isDefinition: true, align: 16)
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !925, file: !930, line: 65, type: !837, isLocal: false, isDefinition: true, align: 16)
!946 = !DIGlobalVariableExpression(var: !947, expr: !DIExpression())
!947 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !925, file: !930, line: 72, type: !837, isLocal: false, isDefinition: true, align: 16)
!948 = !DIGlobalVariableExpression(var: !949, expr: !DIExpression())
!949 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !925, file: !930, line: 79, type: !837, isLocal: false, isDefinition: true, align: 16)
!950 = !DIGlobalVariableExpression(var: !951, expr: !DIExpression())
!951 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !925, file: !930, line: 86, type: !837, isLocal: false, isDefinition: true, align: 16)
!952 = !DIGlobalVariableExpression(var: !953, expr: !DIExpression())
!953 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !925, file: !930, line: 93, type: !837, isLocal: false, isDefinition: true, align: 16)
!954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 48, elements: !955)
!955 = !{!956}
!956 = !DISubrange(count: 3)
!957 = !DIGlobalVariableExpression(var: !958, expr: !DIExpression())
!958 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !959, file: !1020, line: 398, type: !1053, isLocal: true, isDefinition: true)
!959 = distinct !DICompileUnit(language: DW_LANG_C99, file: !960, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !961, retainedTypes: !974, globals: !1017, splitDebugInlining: false, nameTableKind: None)
!960 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!961 = !{!962, !30, !967}
!962 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !963, line: 197, baseType: !32, size: 32, elements: !964)
!963 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!964 = !{!965, !966}
!965 = !DIEnumerator(name: "SUCCESS", value: 0)
!966 = !DIEnumerator(name: "ERROR", value: 1)
!967 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !968, line: 44, baseType: !32, size: 32, elements: !969)
!968 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!969 = !{!970, !971, !972, !973}
!970 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!971 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!972 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!973 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!974 = !{!106, !107, !152, !975, !1010, !1016}
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 32)
!976 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 532, baseType: !977)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 500, size: 1088, elements: !978)
!978 = !{!979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !977, file: !223, line: 502, baseType: !227, size: 32)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !977, file: !223, line: 503, baseType: !227, size: 32, offset: 32)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !977, file: !223, line: 504, baseType: !227, size: 32, offset: 64)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !977, file: !223, line: 505, baseType: !227, size: 32, offset: 96)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !977, file: !223, line: 506, baseType: !227, size: 32, offset: 128)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !977, file: !223, line: 507, baseType: !227, size: 32, offset: 160)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !977, file: !223, line: 508, baseType: !227, size: 32, offset: 192)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !977, file: !223, line: 509, baseType: !152, size: 32, offset: 224)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !977, file: !223, line: 510, baseType: !227, size: 32, offset: 256)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !977, file: !223, line: 511, baseType: !227, size: 32, offset: 288)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !977, file: !223, line: 512, baseType: !990, size: 64, offset: 320)
!990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 64, elements: !340)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !977, file: !223, line: 513, baseType: !227, size: 32, offset: 384)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !977, file: !223, line: 514, baseType: !227, size: 32, offset: 416)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !977, file: !223, line: 515, baseType: !227, size: 32, offset: 448)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !977, file: !223, line: 516, baseType: !152, size: 32, offset: 480)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !977, file: !223, line: 517, baseType: !227, size: 32, offset: 512)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !977, file: !223, line: 518, baseType: !227, size: 32, offset: 544)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !977, file: !223, line: 519, baseType: !990, size: 64, offset: 576)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !977, file: !223, line: 520, baseType: !227, size: 32, offset: 640)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !977, file: !223, line: 521, baseType: !227, size: 32, offset: 672)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !977, file: !223, line: 522, baseType: !227, size: 32, offset: 704)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !977, file: !223, line: 523, baseType: !152, size: 32, offset: 736)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !977, file: !223, line: 524, baseType: !227, size: 32, offset: 768)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !977, file: !223, line: 525, baseType: !227, size: 32, offset: 800)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !977, file: !223, line: 526, baseType: !990, size: 64, offset: 832)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !977, file: !223, line: 527, baseType: !227, size: 32, offset: 896)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !977, file: !223, line: 528, baseType: !227, size: 32, offset: 928)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !977, file: !223, line: 529, baseType: !990, size: 64, offset: 960)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !977, file: !223, line: 530, baseType: !227, size: 32, offset: 1024)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !977, file: !223, line: 531, baseType: !227, size: 32, offset: 1056)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 32)
!1011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1012, line: 343, size: 64, elements: !1013)
!1012 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1013 = !{!1014, !1015}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1011, file: !1012, line: 344, baseType: !152, size: 32)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1011, file: !1012, line: 345, baseType: !152, size: 32, offset: 32)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!1017 = !{!1018, !1024, !1040, !1051, !957}
!1018 = !DIGlobalVariableExpression(var: !1019, expr: !DIExpression())
!1019 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !959, file: !1020, line: 752, type: !1021, isLocal: false, isDefinition: true, align: 16)
!1020 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 928, elements: !1022)
!1022 = !{!1023}
!1023 = !DISubrange(count: 58)
!1024 = !DIGlobalVariableExpression(var: !1025, expr: !DIExpression())
!1025 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !959, file: !1020, line: 752, type: !1026, isLocal: false, isDefinition: true, align: 32)
!1026 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1027)
!1027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1028)
!1028 = !{!1029, !1030, !1031, !1032, !1038, !1039}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1027, file: !247, line: 380, baseType: !118, size: 32)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1027, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1027, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1027, file: !247, line: 386, baseType: !1033, size: 32, offset: 96)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 32)
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1035)
!1035 = !{!1036, !1037}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1034, file: !247, line: 359, baseType: !195, size: 8)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1034, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1027, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1027, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1040 = !DIGlobalVariableExpression(var: !1041, expr: !DIExpression())
!1041 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !959, file: !1020, line: 752, type: !1042, isLocal: true, isDefinition: true, align: 32)
!1042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1043)
!1043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1044)
!1044 = !{!1045, !1050}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1043, file: !238, line: 60, baseType: !1046, size: 32)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 32)
!1047 = !DISubroutineType(types: !1048)
!1048 = !{!107, !1049}
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 32)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1043, file: !238, line: 65, baseType: !1049, size: 32, offset: 32)
!1051 = !DIGlobalVariableExpression(var: !1052, expr: !DIExpression())
!1052 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !959, file: !1020, line: 752, type: !1034, isLocal: true, isDefinition: true, align: 8)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !968, line: 100, size: 224, elements: !1054)
!1054 = !{!1055, !1061, !1062, !1071, !1076, !1081, !1087}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1053, file: !968, line: 101, baseType: !1056, size: 32)
!1056 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !968, line: 76, baseType: !1057)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 32)
!1058 = !DISubroutineType(types: !1059)
!1059 = !{!107, !1049, !1060}
!1060 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !968, line: 56, baseType: !106)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1053, file: !968, line: 102, baseType: !1056, size: 32, offset: 32)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1053, file: !968, line: 103, baseType: !1063, size: 32, offset: 64)
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !968, line: 83, baseType: !1064)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 32)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{!107, !1049, !1060, !1067, !106}
!1067 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !968, line: 72, baseType: !1068)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 32)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{null, !1049, !1060, !106}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1053, file: !968, line: 104, baseType: !1072, size: 32, offset: 96)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !968, line: 79, baseType: !1073)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 32)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!107, !1049, !1060, !1016}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1053, file: !968, line: 105, baseType: !1077, size: 32, offset: 128)
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !968, line: 88, baseType: !1078)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 32)
!1079 = !DISubroutineType(types: !1080)
!1080 = !{!967, !1049, !1060}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1053, file: !968, line: 106, baseType: !1082, size: 32, offset: 160)
!1082 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !968, line: 92, baseType: !1083)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 32)
!1084 = !DISubroutineType(types: !1085)
!1085 = !{!107, !1049, !1060, !1086}
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !968, line: 64, baseType: !106)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1053, file: !968, line: 107, baseType: !1088, size: 32, offset: 192)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !968, line: 96, baseType: !1089)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 32)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!107, !1049, !1060, !106}
!1092 = !DIGlobalVariableExpression(var: !1093, expr: !DIExpression())
!1093 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1094, file: !1151, line: 603, type: !1153, isLocal: true, isDefinition: true, align: 32)
!1094 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1095, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1096, globals: !1148, splitDebugInlining: false, nameTableKind: None)
!1095 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!1096 = !{!106, !107, !1097}
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 32)
!1098 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1099)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1100, line: 336, size: 160, elements: !1101)
!1100 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1101 = !{!1102, !1122, !1126, !1130, !1143}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1099, file: !1100, line: 365, baseType: !1103, size: 32)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 32)
!1104 = !DISubroutineType(types: !1105)
!1105 = !{!107, !1106, !1121}
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 32)
!1107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1108)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1109)
!1109 = !{!1110, !1111, !1112, !1113, !1119, !1120}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1108, file: !247, line: 380, baseType: !118, size: 32)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1108, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1108, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1108, file: !247, line: 386, baseType: !1114, size: 32, offset: 96)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1116)
!1116 = !{!1117, !1118}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1115, file: !247, line: 359, baseType: !195, size: 8)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1115, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1108, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1108, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1099, file: !1100, line: 366, baseType: !1123, size: 32, offset: 32)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 32)
!1124 = !DISubroutineType(types: !1125)
!1125 = !{null, !1106, !196}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1099, file: !1100, line: 374, baseType: !1127, size: 32, offset: 64)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 32)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{!107, !1106}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1099, file: !1100, line: 377, baseType: !1131, size: 32, offset: 96)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 32)
!1132 = !DISubroutineType(types: !1133)
!1133 = !{!107, !1106, !1134}
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 32)
!1135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1136)
!1136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1100, line: 122, size: 64, elements: !1137)
!1137 = !{!1138, !1139, !1140, !1141, !1142}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1136, file: !1100, line: 123, baseType: !152, size: 32)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1136, file: !1100, line: 124, baseType: !195, size: 8, offset: 32)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1136, file: !1100, line: 125, baseType: !195, size: 8, offset: 40)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1136, file: !1100, line: 126, baseType: !195, size: 8, offset: 48)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1136, file: !1100, line: 127, baseType: !195, size: 8, offset: 56)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1099, file: !1100, line: 379, baseType: !1144, size: 32, offset: 128)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 32)
!1145 = !DISubroutineType(types: !1146)
!1146 = !{!107, !1106, !1147}
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 32)
!1148 = !{!1092, !1149}
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1094, file: !1151, line: 38, type: !1152, isLocal: true, isDefinition: true)
!1151 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1106)
!1153 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1154)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1155)
!1155 = !{!1156, !1157}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1154, file: !238, line: 60, baseType: !1127, size: 32)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1154, file: !238, line: 65, baseType: !1106, size: 32, offset: 32)
!1158 = !DIGlobalVariableExpression(var: !1159, expr: !DIExpression())
!1159 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1160, file: !1329, line: 762, type: !1448, isLocal: true, isDefinition: true)
!1160 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1161, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1162, retainedTypes: !1180, globals: !1326, splitDebugInlining: false, nameTableKind: None)
!1161 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!1162 = !{!30, !1163, !1169, !1174, !967}
!1163 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1164, line: 506, baseType: !32, size: 32, elements: !1165)
!1164 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1165 = !{!1166, !1167, !1168}
!1166 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1167 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1168 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1169 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1164, line: 512, baseType: !32, size: 32, elements: !1170)
!1170 = !{!1171, !1172, !1173}
!1171 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1172 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1173 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1174 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !877, line: 43, baseType: !32, size: 32, elements: !1175)
!1175 = !{!1176, !1177, !1178, !1179}
!1176 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1177 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1178 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1179 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1180 = !{!106, !107, !1181, !1251, !1256, !1216, !1169, !1163, !1261, !1262, !152, !1276, !1231, !193, !1286, !1287}
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 32)
!1182 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1183)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1164, line: 523, size: 288, elements: !1184)
!1184 = !{!1185, !1206, !1212, !1217, !1221, !1222, !1223, !1227, !1247}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1183, file: !1164, line: 524, baseType: !1186, size: 32)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 32)
!1187 = !DISubroutineType(types: !1188)
!1188 = !{!107, !1189, !1204, !1205}
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 32)
!1190 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1191)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1192)
!1192 = !{!1193, !1194, !1195, !1196, !1202, !1203}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1191, file: !247, line: 380, baseType: !118, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1191, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1191, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1191, file: !247, line: 386, baseType: !1197, size: 32, offset: 96)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 32)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1199)
!1199 = !{!1200, !1201}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1198, file: !247, line: 359, baseType: !195, size: 8)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1198, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1191, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1191, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1164, line: 237, baseType: !195)
!1205 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1164, line: 257, baseType: !152)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1183, file: !1164, line: 530, baseType: !1207, size: 32, offset: 32)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 32)
!1208 = !DISubroutineType(types: !1209)
!1209 = !{!107, !1189, !1210}
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 32)
!1211 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1164, line: 229, baseType: !152)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1183, file: !1164, line: 532, baseType: !1213, size: 32, offset: 64)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 32)
!1214 = !DISubroutineType(types: !1215)
!1215 = !{!107, !1189, !1216, !1211}
!1216 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1164, line: 216, baseType: !152)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1183, file: !1164, line: 535, baseType: !1218, size: 32, offset: 96)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 32)
!1219 = !DISubroutineType(types: !1220)
!1220 = !{!107, !1189, !1216}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1183, file: !1164, line: 537, baseType: !1218, size: 32, offset: 128)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1183, file: !1164, line: 539, baseType: !1218, size: 32, offset: 160)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1183, file: !1164, line: 541, baseType: !1224, size: 32, offset: 192)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 32)
!1225 = !DISubroutineType(types: !1226)
!1226 = !{!107, !1189, !1204, !1163, !1169}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1183, file: !1164, line: 544, baseType: !1228, size: 32, offset: 224)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 32)
!1229 = !DISubroutineType(types: !1230)
!1230 = !{!107, !1189, !1231, !145}
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 32)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1164, line: 478, size: 96, elements: !1233)
!1233 = !{!1234, !1241, !1246}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1232, file: !1164, line: 482, baseType: !1235, size: 32)
!1235 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1236, line: 33, baseType: !1237)
!1236 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1236, line: 29, size: 32, elements: !1238)
!1238 = !{!1239}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1237, file: !1236, line: 30, baseType: !1240, size: 32)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 32)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1232, file: !1164, line: 485, baseType: !1242, size: 32, offset: 32)
!1242 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1164, line: 464, baseType: !1243)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 32)
!1244 = !DISubroutineType(types: !1245)
!1245 = !{null, !1189, !1231, !1216}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1232, file: !1164, line: 493, baseType: !1216, size: 32, offset: 64)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1183, file: !1164, line: 547, baseType: !1248, size: 32, offset: 256)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 32)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{!152, !1189}
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1253)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1164, line: 428, size: 32, elements: !1254)
!1254 = !{!1255}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1253, file: !1164, line: 434, baseType: !1216, size: 32)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 32)
!1257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1258)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1164, line: 441, size: 32, elements: !1259)
!1259 = !{!1260}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1258, file: !1164, line: 447, baseType: !1216, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 32)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!1263 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !223, line: 441, baseType: !1264)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 430, size: 320, elements: !1265)
!1265 = !{!1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1264, file: !223, line: 432, baseType: !227, size: 32)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1264, file: !223, line: 433, baseType: !227, size: 32, offset: 32)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1264, file: !223, line: 434, baseType: !227, size: 32, offset: 64)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1264, file: !223, line: 435, baseType: !227, size: 32, offset: 96)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1264, file: !223, line: 436, baseType: !227, size: 32, offset: 128)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1264, file: !223, line: 437, baseType: !227, size: 32, offset: 160)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1264, file: !223, line: 438, baseType: !227, size: 32, offset: 192)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1264, file: !223, line: 439, baseType: !227, size: 32, offset: 224)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1264, file: !223, line: 440, baseType: !1275, size: 64, offset: 256)
!1275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 64, elements: !340)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 32)
!1277 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !223, line: 454, baseType: !1278)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 447, size: 288, elements: !1279)
!1279 = !{!1280, !1281, !1282, !1284, !1285}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1278, file: !223, line: 449, baseType: !227, size: 32)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1278, file: !223, line: 450, baseType: !227, size: 32, offset: 32)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1278, file: !223, line: 451, baseType: !1283, size: 128, offset: 64)
!1283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 128, elements: !838)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1278, file: !223, line: 452, baseType: !990, size: 64, offset: 192)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1278, file: !223, line: 453, baseType: !227, size: 32, offset: 256)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 32)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 32)
!1288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1289)
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !968, line: 100, size: 224, elements: !1290)
!1290 = !{!1291, !1296, !1297, !1306, !1311, !1316, !1321}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1289, file: !968, line: 101, baseType: !1292, size: 32)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !968, line: 76, baseType: !1293)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 32)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!107, !1189, !1060}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1289, file: !968, line: 102, baseType: !1292, size: 32, offset: 32)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1289, file: !968, line: 103, baseType: !1298, size: 32, offset: 64)
!1298 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !968, line: 83, baseType: !1299)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 32)
!1300 = !DISubroutineType(types: !1301)
!1301 = !{!107, !1189, !1060, !1302, !106}
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !968, line: 72, baseType: !1303)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 32)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{null, !1189, !1060, !106}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1289, file: !968, line: 104, baseType: !1307, size: 32, offset: 96)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !968, line: 79, baseType: !1308)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 32)
!1309 = !DISubroutineType(types: !1310)
!1310 = !{!107, !1189, !1060, !1016}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1289, file: !968, line: 105, baseType: !1312, size: 32, offset: 128)
!1312 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !968, line: 88, baseType: !1313)
!1313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1314, size: 32)
!1314 = !DISubroutineType(types: !1315)
!1315 = !{!967, !1189, !1060}
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1289, file: !968, line: 106, baseType: !1317, size: 32, offset: 160)
!1317 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !968, line: 92, baseType: !1318)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 32)
!1319 = !DISubroutineType(types: !1320)
!1320 = !{!107, !1189, !1060, !1086}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1289, file: !968, line: 107, baseType: !1322, size: 32, offset: 192)
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !968, line: 96, baseType: !1323)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 32)
!1324 = !DISubroutineType(types: !1325)
!1325 = !{!107, !1189, !1060, !106}
!1326 = !{!1327, !1333, !1335, !1345, !1350, !1352, !1354, !1356, !1358, !1360, !1362, !1364, !1366, !1368, !1370, !1372, !1374, !1376, !1378, !1380, !1382, !1384, !1386, !1388, !1390, !1392, !1394, !1396, !1410, !1412, !1414, !1416, !1418, !1420, !1422, !1424, !1426, !1428, !1430, !1432, !1434, !1436, !1438, !1440, !1442, !1158, !1444, !1446, !1459, !1461, !1463, !1465, !1467, !1469, !1471}
!1327 = !DIGlobalVariableExpression(var: !1328, expr: !DIExpression())
!1328 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !1160, file: !1329, line: 762, type: !1330, isLocal: false, isDefinition: true, align: 16)
!1329 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 96, elements: !1331)
!1331 = !{!1332}
!1332 = !DISubrange(count: 6)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !1160, file: !1329, line: 762, type: !1190, isLocal: false, isDefinition: true, align: 32)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !1160, file: !1329, line: 762, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1338)
!1338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1339)
!1339 = !{!1340, !1344}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1338, file: !238, line: 60, baseType: !1341, size: 32)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 32)
!1342 = !DISubroutineType(types: !1343)
!1343 = !{!107, !1189}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1338, file: !238, line: 65, baseType: !1189, size: 32, offset: 32)
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1160, file: !1329, line: 766, type: !1347, isLocal: false, isDefinition: true, align: 16)
!1347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 80, elements: !1348)
!1348 = !{!1349}
!1349 = !DISubrange(count: 5)
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1160, file: !1329, line: 766, type: !1190, isLocal: false, isDefinition: true, align: 32)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1160, file: !1329, line: 766, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !1160, file: !1329, line: 770, type: !1330, isLocal: false, isDefinition: true, align: 16)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "__device_dts_ord_21", scope: !1160, file: !1329, line: 770, type: !1190, isLocal: false, isDefinition: true, align: 32)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_21", scope: !1160, file: !1329, line: 770, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1160, file: !1329, line: 774, type: !1347, isLocal: false, isDefinition: true, align: 16)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1160, file: !1329, line: 774, type: !1190, isLocal: false, isDefinition: true, align: 32)
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1160, file: !1329, line: 774, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1366 = !DIGlobalVariableExpression(var: !1367, expr: !DIExpression())
!1367 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1160, file: !1329, line: 778, type: !1347, isLocal: false, isDefinition: true, align: 16)
!1368 = !DIGlobalVariableExpression(var: !1369, expr: !DIExpression())
!1369 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1160, file: !1329, line: 778, type: !1190, isLocal: false, isDefinition: true, align: 32)
!1370 = !DIGlobalVariableExpression(var: !1371, expr: !DIExpression())
!1371 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1160, file: !1329, line: 778, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1372 = !DIGlobalVariableExpression(var: !1373, expr: !DIExpression())
!1373 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1160, file: !1329, line: 782, type: !1347, isLocal: false, isDefinition: true, align: 16)
!1374 = !DIGlobalVariableExpression(var: !1375, expr: !DIExpression())
!1375 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1160, file: !1329, line: 782, type: !1190, isLocal: false, isDefinition: true, align: 32)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1160, file: !1329, line: 782, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1378 = !DIGlobalVariableExpression(var: !1379, expr: !DIExpression())
!1379 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1160, file: !1329, line: 786, type: !1347, isLocal: false, isDefinition: true, align: 16)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1160, file: !1329, line: 786, type: !1190, isLocal: false, isDefinition: true, align: 32)
!1382 = !DIGlobalVariableExpression(var: !1383, expr: !DIExpression())
!1383 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1160, file: !1329, line: 786, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1160, file: !1329, line: 790, type: !1347, isLocal: false, isDefinition: true, align: 16)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1160, file: !1329, line: 790, type: !1190, isLocal: false, isDefinition: true, align: 32)
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1160, file: !1329, line: 790, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1160, file: !1329, line: 794, type: !1347, isLocal: false, isDefinition: true, align: 16)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1160, file: !1329, line: 794, type: !1190, isLocal: false, isDefinition: true, align: 32)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1160, file: !1329, line: 794, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1396 = !DIGlobalVariableExpression(var: !1397, expr: !DIExpression())
!1397 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1160, file: !1329, line: 762, type: !1398, isLocal: true, isDefinition: true)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1399, line: 237, size: 128, elements: !1400)
!1399 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1400 = !{!1401, !1402, !1403}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1398, file: !1399, line: 239, baseType: !1258, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1398, file: !1399, line: 241, baseType: !1189, size: 32, offset: 32)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1398, file: !1399, line: 243, baseType: !1404, size: 64, offset: 64)
!1404 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1236, line: 40, baseType: !1405)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1236, line: 35, size: 64, elements: !1406)
!1406 = !{!1407, !1409}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1405, file: !1236, line: 36, baseType: !1408, size: 32)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 32)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1405, file: !1236, line: 37, baseType: !1408, size: 32, offset: 32)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !1160, file: !1329, line: 762, type: !1198, isLocal: true, isDefinition: true, align: 8)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1160, file: !1329, line: 766, type: !1398, isLocal: true, isDefinition: true)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1160, file: !1329, line: 766, type: !1198, isLocal: true, isDefinition: true, align: 8)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1160, file: !1329, line: 770, type: !1398, isLocal: true, isDefinition: true)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_21", scope: !1160, file: !1329, line: 770, type: !1198, isLocal: true, isDefinition: true, align: 8)
!1420 = !DIGlobalVariableExpression(var: !1421, expr: !DIExpression())
!1421 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1160, file: !1329, line: 774, type: !1398, isLocal: true, isDefinition: true)
!1422 = !DIGlobalVariableExpression(var: !1423, expr: !DIExpression())
!1423 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1160, file: !1329, line: 774, type: !1198, isLocal: true, isDefinition: true, align: 8)
!1424 = !DIGlobalVariableExpression(var: !1425, expr: !DIExpression())
!1425 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1160, file: !1329, line: 778, type: !1398, isLocal: true, isDefinition: true)
!1426 = !DIGlobalVariableExpression(var: !1427, expr: !DIExpression())
!1427 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1160, file: !1329, line: 778, type: !1198, isLocal: true, isDefinition: true, align: 8)
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1160, file: !1329, line: 782, type: !1398, isLocal: true, isDefinition: true)
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1160, file: !1329, line: 782, type: !1198, isLocal: true, isDefinition: true, align: 8)
!1432 = !DIGlobalVariableExpression(var: !1433, expr: !DIExpression())
!1433 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1160, file: !1329, line: 786, type: !1398, isLocal: true, isDefinition: true)
!1434 = !DIGlobalVariableExpression(var: !1435, expr: !DIExpression())
!1435 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1160, file: !1329, line: 786, type: !1198, isLocal: true, isDefinition: true, align: 8)
!1436 = !DIGlobalVariableExpression(var: !1437, expr: !DIExpression())
!1437 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1160, file: !1329, line: 790, type: !1398, isLocal: true, isDefinition: true)
!1438 = !DIGlobalVariableExpression(var: !1439, expr: !DIExpression())
!1439 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1160, file: !1329, line: 790, type: !1198, isLocal: true, isDefinition: true, align: 8)
!1440 = !DIGlobalVariableExpression(var: !1441, expr: !DIExpression())
!1441 = distinct !DIGlobalVariable(name: "gpio_stm32_data_i", scope: !1160, file: !1329, line: 794, type: !1398, isLocal: true, isDefinition: true)
!1442 = !DIGlobalVariableExpression(var: !1443, expr: !DIExpression())
!1443 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1160, file: !1329, line: 794, type: !1198, isLocal: true, isDefinition: true, align: 8)
!1444 = !DIGlobalVariableExpression(var: !1445, expr: !DIExpression())
!1445 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1160, file: !1329, line: 656, type: !1182, isLocal: true, isDefinition: true)
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1160, file: !1329, line: 766, type: !1448, isLocal: true, isDefinition: true)
!1448 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1449)
!1449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1399, line: 224, size: 160, elements: !1450)
!1450 = !{!1451, !1452, !1453, !1454}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1449, file: !1399, line: 226, baseType: !1253, size: 32)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1449, file: !1399, line: 228, baseType: !1016, size: 32, offset: 32)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1449, file: !1399, line: 230, baseType: !107, size: 32, offset: 64)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1449, file: !1399, line: 231, baseType: !1455, size: 64, offset: 96)
!1455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1012, line: 343, size: 64, elements: !1456)
!1456 = !{!1457, !1458}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1455, file: !1012, line: 344, baseType: !152, size: 32)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1455, file: !1012, line: 345, baseType: !152, size: 32, offset: 32)
!1459 = !DIGlobalVariableExpression(var: !1460, expr: !DIExpression())
!1460 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1160, file: !1329, line: 770, type: !1448, isLocal: true, isDefinition: true)
!1461 = !DIGlobalVariableExpression(var: !1462, expr: !DIExpression())
!1462 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1160, file: !1329, line: 774, type: !1448, isLocal: true, isDefinition: true)
!1463 = !DIGlobalVariableExpression(var: !1464, expr: !DIExpression())
!1464 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1160, file: !1329, line: 778, type: !1448, isLocal: true, isDefinition: true)
!1465 = !DIGlobalVariableExpression(var: !1466, expr: !DIExpression())
!1466 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1160, file: !1329, line: 782, type: !1448, isLocal: true, isDefinition: true)
!1467 = !DIGlobalVariableExpression(var: !1468, expr: !DIExpression())
!1468 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1160, file: !1329, line: 786, type: !1448, isLocal: true, isDefinition: true)
!1469 = !DIGlobalVariableExpression(var: !1470, expr: !DIExpression())
!1470 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1160, file: !1329, line: 790, type: !1448, isLocal: true, isDefinition: true)
!1471 = !DIGlobalVariableExpression(var: !1472, expr: !DIExpression())
!1472 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_i", scope: !1160, file: !1329, line: 794, type: !1448, isLocal: true, isDefinition: true)
!1473 = !DIGlobalVariableExpression(var: !1474, expr: !DIExpression())
!1474 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1475, file: !1614, line: 44, type: !1692, isLocal: false, isDefinition: true)
!1475 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1476, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1477, retainedTypes: !1510, globals: !1611, splitDebugInlining: false, nameTableKind: None)
!1476 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!1477 = !{!30, !1478, !1485, !1492, !1499, !1505, !967}
!1478 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1100, line: 47, baseType: !32, size: 32, elements: !1479)
!1479 = !{!1480, !1481, !1482, !1483, !1484}
!1480 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1481 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1482 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1483 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1484 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1485 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1100, line: 75, baseType: !32, size: 32, elements: !1486)
!1486 = !{!1487, !1488, !1489, !1490, !1491}
!1487 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1488 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1489 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1490 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1491 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1492 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1100, line: 92, baseType: !32, size: 32, elements: !1493)
!1493 = !{!1494, !1495, !1496, !1497, !1498}
!1494 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1495 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1496 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1497 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1498 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1499 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1100, line: 84, baseType: !32, size: 32, elements: !1500)
!1500 = !{!1501, !1502, !1503, !1504}
!1501 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1502 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1503 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1504 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1505 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1100, line: 107, baseType: !32, size: 32, elements: !1506)
!1506 = !{!1507, !1508, !1509}
!1507 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1508 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1509 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1510 = !{!106, !107, !1511, !196, !195, !1560, !152, !1060, !1571, !197, !566, !1610}
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 32)
!1512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1513)
!1513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1100, line: 336, size: 160, elements: !1514)
!1514 = !{!1515, !1534, !1538, !1542, !1555}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1513, file: !1100, line: 365, baseType: !1516, size: 32)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 32)
!1517 = !DISubroutineType(types: !1518)
!1518 = !{!107, !1519, !1121}
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 32)
!1520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1521)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1522)
!1522 = !{!1523, !1524, !1525, !1526, !1532, !1533}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1521, file: !247, line: 380, baseType: !118, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1521, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1521, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1521, file: !247, line: 386, baseType: !1527, size: 32, offset: 96)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 32)
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1529)
!1529 = !{!1530, !1531}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1528, file: !247, line: 359, baseType: !195, size: 8)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1528, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1521, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1521, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1513, file: !1100, line: 366, baseType: !1535, size: 32, offset: 32)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 32)
!1536 = !DISubroutineType(types: !1537)
!1537 = !{null, !1519, !196}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1513, file: !1100, line: 374, baseType: !1539, size: 32, offset: 64)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 32)
!1540 = !DISubroutineType(types: !1541)
!1541 = !{!107, !1519}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1513, file: !1100, line: 377, baseType: !1543, size: 32, offset: 96)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 32)
!1544 = !DISubroutineType(types: !1545)
!1545 = !{!107, !1519, !1546}
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 32)
!1547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1548)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1100, line: 122, size: 64, elements: !1549)
!1549 = !{!1550, !1551, !1552, !1553, !1554}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1548, file: !1100, line: 123, baseType: !152, size: 32)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1548, file: !1100, line: 124, baseType: !195, size: 8, offset: 32)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1548, file: !1100, line: 125, baseType: !195, size: 8, offset: 40)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1548, file: !1100, line: 126, baseType: !195, size: 8, offset: 48)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1548, file: !1100, line: 127, baseType: !195, size: 8, offset: 56)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1513, file: !1100, line: 379, baseType: !1556, size: 32, offset: 128)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 32)
!1557 = !DISubroutineType(types: !1558)
!1558 = !{!107, !1519, !1559}
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 32)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 32)
!1561 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !223, line: 670, baseType: !1562)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 661, size: 224, elements: !1563)
!1563 = !{!1564, !1565, !1566, !1567, !1568, !1569, !1570}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1562, file: !223, line: 663, baseType: !227, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1562, file: !223, line: 664, baseType: !227, size: 32, offset: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1562, file: !223, line: 665, baseType: !227, size: 32, offset: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1562, file: !223, line: 666, baseType: !227, size: 32, offset: 96)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1562, file: !223, line: 667, baseType: !227, size: 32, offset: 128)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1562, file: !223, line: 668, baseType: !227, size: 32, offset: 160)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1562, file: !223, line: 669, baseType: !227, size: 32, offset: 192)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!1572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1573)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !968, line: 100, size: 224, elements: !1574)
!1574 = !{!1575, !1580, !1581, !1590, !1595, !1600, !1605}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1573, file: !968, line: 101, baseType: !1576, size: 32)
!1576 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !968, line: 76, baseType: !1577)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 32)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{!107, !1519, !1060}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1573, file: !968, line: 102, baseType: !1576, size: 32, offset: 32)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1573, file: !968, line: 103, baseType: !1582, size: 32, offset: 64)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !968, line: 83, baseType: !1583)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 32)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{!107, !1519, !1060, !1586, !106}
!1586 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !968, line: 72, baseType: !1587)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 32)
!1588 = !DISubroutineType(types: !1589)
!1589 = !{null, !1519, !1060, !106}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1573, file: !968, line: 104, baseType: !1591, size: 32, offset: 96)
!1591 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !968, line: 79, baseType: !1592)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 32)
!1593 = !DISubroutineType(types: !1594)
!1594 = !{!107, !1519, !1060, !1016}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1573, file: !968, line: 105, baseType: !1596, size: 32, offset: 128)
!1596 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !968, line: 88, baseType: !1597)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 32)
!1598 = !DISubroutineType(types: !1599)
!1599 = !{!967, !1519, !1060}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1573, file: !968, line: 106, baseType: !1601, size: 32, offset: 160)
!1601 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !968, line: 92, baseType: !1602)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 32)
!1603 = !DISubroutineType(types: !1604)
!1604 = !{!107, !1519, !1060, !1086}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1573, file: !968, line: 107, baseType: !1606, size: 32, offset: 192)
!1606 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !968, line: 96, baseType: !1607)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 32)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{!107, !1519, !1060, !106}
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!1611 = !{!1473, !1612, !1618, !1620, !1627, !1629, !1673, !1676, !1678, !1681, !1684, !1686}
!1612 = !DIGlobalVariableExpression(var: !1613, expr: !DIExpression())
!1613 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1475, file: !1614, line: 1914, type: !1615, isLocal: false, isDefinition: true, align: 16)
!1614 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 128, elements: !1616)
!1616 = !{!1617}
!1617 = !DISubrange(count: 8)
!1618 = !DIGlobalVariableExpression(var: !1619, expr: !DIExpression())
!1619 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1475, file: !1614, line: 1914, type: !1520, isLocal: false, isDefinition: true, align: 32)
!1620 = !DIGlobalVariableExpression(var: !1621, expr: !DIExpression())
!1621 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1475, file: !1614, line: 1914, type: !1622, isLocal: true, isDefinition: true, align: 32)
!1622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1623)
!1623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1624)
!1624 = !{!1625, !1626}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1623, file: !238, line: 60, baseType: !1539, size: 32)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1623, file: !238, line: 65, baseType: !1519, size: 32, offset: 32)
!1627 = !DIGlobalVariableExpression(var: !1628, expr: !DIExpression())
!1628 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1475, file: !1614, line: 1914, type: !1528, isLocal: true, isDefinition: true, align: 8)
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1475, file: !1614, line: 1914, type: !1631, isLocal: true, isDefinition: true)
!1631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1632)
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1633, line: 22, size: 224, elements: !1634)
!1633 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1634 = !{!1635, !1636, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1632, file: !1633, line: 24, baseType: !1560, size: 32)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1632, file: !1633, line: 26, baseType: !1637, size: 32, offset: 32)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 32)
!1638 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1639)
!1639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1012, line: 343, size: 64, elements: !1640)
!1640 = !{!1641, !1642}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1639, file: !1012, line: 344, baseType: !152, size: 32)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1639, file: !1012, line: 345, baseType: !152, size: 32, offset: 32)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1632, file: !1633, line: 28, baseType: !185, size: 32, offset: 64)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1632, file: !1633, line: 30, baseType: !145, size: 8, offset: 96)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1632, file: !1633, line: 32, baseType: !107, size: 32, offset: 128)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1632, file: !1633, line: 34, baseType: !145, size: 8, offset: 160)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1632, file: !1633, line: 36, baseType: !145, size: 8, offset: 168)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1632, file: !1633, line: 38, baseType: !145, size: 8, offset: 176)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1632, file: !1633, line: 40, baseType: !145, size: 8, offset: 184)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1632, file: !1633, line: 41, baseType: !1651, size: 32, offset: 192)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 32)
!1652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1653)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1654, line: 60, size: 64, elements: !1655)
!1654 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1655 = !{!1656, !1672}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1653, file: !1654, line: 69, baseType: !1657, size: 32)
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 32)
!1658 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1659)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1654, line: 50, size: 64, elements: !1660)
!1660 = !{!1661, !1670, !1671}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1659, file: !1654, line: 52, baseType: !1662, size: 32)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 32)
!1663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1664)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1665, line: 37, baseType: !1666)
!1665 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1665, line: 32, size: 64, elements: !1667)
!1667 = !{!1668, !1669}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1666, file: !1665, line: 34, baseType: !152, size: 32)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1666, file: !1665, line: 36, baseType: !152, size: 32, offset: 32)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1659, file: !1654, line: 54, baseType: !195, size: 8, offset: 32)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1659, file: !1654, line: 56, baseType: !195, size: 8, offset: 40)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1653, file: !1654, line: 71, baseType: !195, size: 8, offset: 32)
!1673 = !DIGlobalVariableExpression(var: !1674, expr: !DIExpression())
!1674 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1475, file: !1614, line: 1914, type: !1675, isLocal: true, isDefinition: true)
!1675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1638, size: 64, elements: !445)
!1676 = !DIGlobalVariableExpression(var: !1677, expr: !DIExpression())
!1677 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1475, file: !1614, line: 1914, type: !1652, isLocal: true, isDefinition: true)
!1678 = !DIGlobalVariableExpression(var: !1679, expr: !DIExpression())
!1679 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1475, file: !1614, line: 1914, type: !1680, isLocal: true, isDefinition: true)
!1680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1658, size: 64, elements: !445)
!1681 = !DIGlobalVariableExpression(var: !1682, expr: !DIExpression())
!1682 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1475, file: !1614, line: 1914, type: !1683, isLocal: true, isDefinition: true)
!1683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1663, size: 128, elements: !340)
!1684 = !DIGlobalVariableExpression(var: !1685, expr: !DIExpression())
!1685 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1475, file: !1614, line: 1539, type: !1512, isLocal: true, isDefinition: true)
!1686 = !DIGlobalVariableExpression(var: !1687, expr: !DIExpression())
!1687 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1475, file: !1614, line: 1914, type: !1688, isLocal: true, isDefinition: true)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1633, line: 74, size: 64, elements: !1689)
!1689 = !{!1690, !1691}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1688, file: !1633, line: 76, baseType: !152, size: 32)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1688, file: !1633, line: 78, baseType: !1519, size: 32, offset: 32)
!1692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1693)
!1693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !1694)
!1694 = !{!1695, !1696}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1693, file: !203, line: 17, baseType: !118, size: 32)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1693, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!1697 = !DIGlobalVariableExpression(var: !1698, expr: !DIExpression())
!1698 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1699, file: !1777, line: 65, type: !227, isLocal: true, isDefinition: true)
!1699 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1700, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1701, retainedTypes: !1702, globals: !1774, splitDebugInlining: false, nameTableKind: None)
!1700 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!1701 = !{!734}
!1702 = !{!564, !1703, !896, !195, !152, !1711, !1742}
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 32)
!1704 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !463, line: 770, baseType: !1705)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 764, size: 128, elements: !1706)
!1706 = !{!1707, !1708, !1709, !1710}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1705, file: !463, line: 766, baseType: !227, size: 32)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1705, file: !463, line: 767, baseType: !227, size: 32, offset: 32)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1705, file: !463, line: 768, baseType: !227, size: 32, offset: 64)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1705, file: !463, line: 769, baseType: !467, size: 32, offset: 96)
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 32)
!1712 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !1713)
!1713 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !1714)
!1714 = !{!1715, !1717, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1732, !1737, !1741}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1713, file: !463, line: 413, baseType: !1716, size: 256)
!1716 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 256, elements: !1616)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1713, file: !463, line: 414, baseType: !1718, size: 768, offset: 256)
!1718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 768, elements: !1719)
!1719 = !{!1720}
!1720 = !DISubrange(count: 24)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1713, file: !463, line: 415, baseType: !1716, size: 256, offset: 1024)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1713, file: !463, line: 416, baseType: !1718, size: 768, offset: 1280)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1713, file: !463, line: 417, baseType: !1716, size: 256, offset: 2048)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1713, file: !463, line: 418, baseType: !1718, size: 768, offset: 2304)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1713, file: !463, line: 419, baseType: !1716, size: 256, offset: 3072)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1713, file: !463, line: 420, baseType: !1718, size: 768, offset: 3328)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1713, file: !463, line: 421, baseType: !1716, size: 256, offset: 4096)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1713, file: !463, line: 422, baseType: !1729, size: 1792, offset: 4352)
!1729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 1792, elements: !1730)
!1730 = !{!1731}
!1731 = !DISubrange(count: 56)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1713, file: !463, line: 423, baseType: !1733, size: 1920, offset: 6144)
!1733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1734, size: 1920, elements: !1735)
!1734 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !195)
!1735 = !{!1736}
!1736 = !DISubrange(count: 240)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1713, file: !463, line: 424, baseType: !1738, size: 20608, offset: 8064)
!1738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 20608, elements: !1739)
!1739 = !{!1740}
!1740 = !DISubrange(count: 644)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1713, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 32)
!1743 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !1744)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !1745)
!1745 = !{!1746, !1747, !1748, !1749, !1750, !1751, !1752, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1765, !1766, !1767, !1769, !1771, !1773}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1744, file: !463, line: 447, baseType: !467, size: 32)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1744, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1744, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1744, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1744, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1744, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1744, file: !463, line: 453, baseType: !1753, size: 96, offset: 192)
!1753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1734, size: 96, elements: !1754)
!1754 = !{!1755}
!1755 = !DISubrange(count: 12)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1744, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1744, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1744, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1744, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1744, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1744, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1744, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1744, file: !463, line: 461, baseType: !1764, size: 64, offset: 512)
!1764 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 64, elements: !340)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1744, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1744, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1744, file: !463, line: 464, baseType: !1768, size: 128, offset: 640)
!1768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 128, elements: !838)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1744, file: !463, line: 465, baseType: !1770, size: 160, offset: 768)
!1770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 160, elements: !1348)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1744, file: !463, line: 466, baseType: !1772, size: 160, offset: 928)
!1772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 160, elements: !1348)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1744, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!1774 = !{!1775, !1801, !1806, !1808, !1810, !1697}
!1775 = !DIGlobalVariableExpression(var: !1776, expr: !DIExpression())
!1776 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1699, file: !1777, line: 285, type: !1778, isLocal: true, isDefinition: true, align: 32)
!1777 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1779)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1780)
!1780 = !{!1781, !1800}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1779, file: !238, line: 60, baseType: !1782, size: 32)
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 32)
!1783 = !DISubroutineType(types: !1784)
!1784 = !{!107, !1785}
!1785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1786, size: 32)
!1786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1787)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1788)
!1788 = !{!1789, !1790, !1791, !1792, !1798, !1799}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1787, file: !247, line: 380, baseType: !118, size: 32)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1787, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1787, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1787, file: !247, line: 386, baseType: !1793, size: 32, offset: 96)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 32)
!1794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1795)
!1795 = !{!1796, !1797}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1794, file: !247, line: 359, baseType: !195, size: 8)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1794, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1787, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1787, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1779, file: !238, line: 65, baseType: !1785, size: 32, offset: 32)
!1801 = !DIGlobalVariableExpression(var: !1802, expr: !DIExpression())
!1802 = distinct !DIGlobalVariable(name: "lock", scope: !1699, file: !1777, line: 34, type: !1803, isLocal: true, isDefinition: true)
!1803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !1804)
!1804 = !{!1805}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1803, file: !420, line: 52, baseType: !22, size: 32)
!1806 = !DIGlobalVariableExpression(var: !1807, expr: !DIExpression())
!1807 = distinct !DIGlobalVariable(name: "last_load", scope: !1699, file: !1777, line: 36, type: !152, isLocal: true, isDefinition: true)
!1808 = !DIGlobalVariableExpression(var: !1809, expr: !DIExpression())
!1809 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1699, file: !1777, line: 48, type: !152, isLocal: true, isDefinition: true)
!1810 = !DIGlobalVariableExpression(var: !1811, expr: !DIExpression())
!1811 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1699, file: !1777, line: 54, type: !152, isLocal: true, isDefinition: true)
!1812 = !DIGlobalVariableExpression(var: !1813, expr: !DIExpression())
!1813 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1814, file: !1896, line: 22, type: !1898, isLocal: true, isDefinition: true)
!1814 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1815, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1816, retainedTypes: !1817, globals: !1893, splitDebugInlining: false, nameTableKind: None)
!1815 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!1816 = !{!1163, !1169}
!1817 = !{!1818, !1882, !1887, !1216, !1169, !1163, !1892, !106}
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 32)
!1819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1820)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1164, line: 523, size: 288, elements: !1821)
!1821 = !{!1822, !1841, !1845, !1849, !1853, !1854, !1855, !1859, !1878}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1820, file: !1164, line: 524, baseType: !1823, size: 32)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 32)
!1824 = !DISubroutineType(types: !1825)
!1825 = !{!107, !1826, !1204, !1205}
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 32)
!1827 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1828)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1829)
!1829 = !{!1830, !1831, !1832, !1833, !1839, !1840}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1828, file: !247, line: 380, baseType: !118, size: 32)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1828, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1828, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1828, file: !247, line: 386, baseType: !1834, size: 32, offset: 96)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 32)
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1836)
!1836 = !{!1837, !1838}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1835, file: !247, line: 359, baseType: !195, size: 8)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1835, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1828, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1828, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1820, file: !1164, line: 530, baseType: !1842, size: 32, offset: 32)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 32)
!1843 = !DISubroutineType(types: !1844)
!1844 = !{!107, !1826, !1210}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1820, file: !1164, line: 532, baseType: !1846, size: 32, offset: 64)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 32)
!1847 = !DISubroutineType(types: !1848)
!1848 = !{!107, !1826, !1216, !1211}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1820, file: !1164, line: 535, baseType: !1850, size: 32, offset: 96)
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 32)
!1851 = !DISubroutineType(types: !1852)
!1852 = !{!107, !1826, !1216}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1820, file: !1164, line: 537, baseType: !1850, size: 32, offset: 128)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1820, file: !1164, line: 539, baseType: !1850, size: 32, offset: 160)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1820, file: !1164, line: 541, baseType: !1856, size: 32, offset: 192)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 32)
!1857 = !DISubroutineType(types: !1858)
!1858 = !{!107, !1826, !1204, !1163, !1169}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1820, file: !1164, line: 544, baseType: !1860, size: 32, offset: 224)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 32)
!1861 = !DISubroutineType(types: !1862)
!1862 = !{!107, !1826, !1863, !145}
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 32)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1164, line: 478, size: 96, elements: !1865)
!1865 = !{!1866, !1872, !1877}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1864, file: !1164, line: 482, baseType: !1867, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1236, line: 33, baseType: !1868)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1236, line: 29, size: 32, elements: !1869)
!1869 = !{!1870}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1868, file: !1236, line: 30, baseType: !1871, size: 32)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1864, file: !1164, line: 485, baseType: !1873, size: 32, offset: 32)
!1873 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1164, line: 464, baseType: !1874)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 32)
!1875 = !DISubroutineType(types: !1876)
!1876 = !{null, !1826, !1863, !1216}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1864, file: !1164, line: 493, baseType: !1216, size: 32, offset: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1820, file: !1164, line: 547, baseType: !1879, size: 32, offset: 256)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 32)
!1880 = !DISubroutineType(types: !1881)
!1881 = !{!152, !1826}
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 32)
!1883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1884)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1164, line: 428, size: 32, elements: !1885)
!1885 = !{!1886}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1884, file: !1164, line: 434, baseType: !1216, size: 32)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 32)
!1888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1889)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1164, line: 441, size: 32, elements: !1890)
!1890 = !{!1891}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1889, file: !1164, line: 447, baseType: !1216, size: 32)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 32)
!1893 = !{!1894, !1812}
!1894 = !DIGlobalVariableExpression(var: !1895, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1895 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1814, file: !1896, line: 37, type: !1897, isLocal: true, isDefinition: true)
!1896 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1897 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!1898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1899, size: 352, elements: !1900)
!1899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1826)
!1900 = !{!1901}
!1901 = !DISubrange(count: 11)
!1902 = !DIGlobalVariableExpression(var: !1903, expr: !DIExpression())
!1903 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1904, file: !1944, line: 139, type: !1951, isLocal: false, isDefinition: true)
!1904 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1905, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1906, globals: !1941, splitDebugInlining: false, nameTableKind: None)
!1905 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!1906 = !{!1907}
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 32)
!1908 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 532, baseType: !1909)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 500, size: 1088, elements: !1910)
!1910 = !{!1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1909, file: !223, line: 502, baseType: !227, size: 32)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1909, file: !223, line: 503, baseType: !227, size: 32, offset: 32)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1909, file: !223, line: 504, baseType: !227, size: 32, offset: 64)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1909, file: !223, line: 505, baseType: !227, size: 32, offset: 96)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1909, file: !223, line: 506, baseType: !227, size: 32, offset: 128)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1909, file: !223, line: 507, baseType: !227, size: 32, offset: 160)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1909, file: !223, line: 508, baseType: !227, size: 32, offset: 192)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1909, file: !223, line: 509, baseType: !152, size: 32, offset: 224)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1909, file: !223, line: 510, baseType: !227, size: 32, offset: 256)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1909, file: !223, line: 511, baseType: !227, size: 32, offset: 288)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1909, file: !223, line: 512, baseType: !990, size: 64, offset: 320)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1909, file: !223, line: 513, baseType: !227, size: 32, offset: 384)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1909, file: !223, line: 514, baseType: !227, size: 32, offset: 416)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1909, file: !223, line: 515, baseType: !227, size: 32, offset: 448)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1909, file: !223, line: 516, baseType: !152, size: 32, offset: 480)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1909, file: !223, line: 517, baseType: !227, size: 32, offset: 512)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1909, file: !223, line: 518, baseType: !227, size: 32, offset: 544)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1909, file: !223, line: 519, baseType: !990, size: 64, offset: 576)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1909, file: !223, line: 520, baseType: !227, size: 32, offset: 640)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1909, file: !223, line: 521, baseType: !227, size: 32, offset: 672)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1909, file: !223, line: 522, baseType: !227, size: 32, offset: 704)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1909, file: !223, line: 523, baseType: !152, size: 32, offset: 736)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1909, file: !223, line: 524, baseType: !227, size: 32, offset: 768)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1909, file: !223, line: 525, baseType: !227, size: 32, offset: 800)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1909, file: !223, line: 526, baseType: !990, size: 64, offset: 832)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1909, file: !223, line: 527, baseType: !227, size: 32, offset: 896)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1909, file: !223, line: 528, baseType: !227, size: 32, offset: 928)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1909, file: !223, line: 529, baseType: !990, size: 64, offset: 960)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1909, file: !223, line: 530, baseType: !227, size: 32, offset: 1024)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1909, file: !223, line: 531, baseType: !227, size: 32, offset: 1056)
!1941 = !{!1942, !1945, !1902}
!1942 = !DIGlobalVariableExpression(var: !1943, expr: !DIExpression())
!1943 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1904, file: !1944, line: 137, type: !152, isLocal: false, isDefinition: true)
!1944 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1945 = !DIGlobalVariableExpression(var: !1946, expr: !DIExpression())
!1946 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1904, file: !1944, line: 138, type: !1947, isLocal: false, isDefinition: true)
!1947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1948, size: 128, elements: !1949)
!1948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!1949 = !{!1950}
!1950 = !DISubrange(count: 16)
!1951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1948, size: 64, elements: !1616)
!1952 = !DIGlobalVariableExpression(var: !1953, expr: !DIExpression())
!1953 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1954, file: !1957, line: 23, type: !1958, isLocal: false, isDefinition: true)
!1954 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1955, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !1956, splitDebugInlining: false, nameTableKind: None)
!1955 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!1956 = !{!1952}
!1957 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!1959 = !DIGlobalVariableExpression(var: !1960, expr: !DIExpression())
!1960 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1961, file: !1965, line: 37, type: !2218, isLocal: false, isDefinition: true)
!1961 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1962, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1963, retainedTypes: !1972, globals: !2045, splitDebugInlining: false, nameTableKind: None)
!1962 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!1963 = !{!1964, !30, !734}
!1964 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1965, line: 63, baseType: !32, size: 32, elements: !1966)
!1965 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1966 = !{!1967, !1968, !1969, !1970, !1971}
!1967 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1968 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1969 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1970 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1971 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1972 = !{!22, !185, !106, !107, !1973, !193, !152, !2003, !896, !195, !2028}
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 32)
!1974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1975)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1976, line: 51, size: 64, elements: !1977)
!1976 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1977 = !{!1978, !1998}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1975, file: !1976, line: 52, baseType: !1979, size: 32)
!1979 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1976, line: 38, baseType: !1980)
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1981, size: 32)
!1981 = !DISubroutineType(types: !1982)
!1982 = !{!107, !1983, !194, !197}
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 32)
!1984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1985)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1986)
!1986 = !{!1987, !1988, !1989, !1990, !1996, !1997}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1985, file: !247, line: 380, baseType: !118, size: 32)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1985, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1985, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1985, file: !247, line: 386, baseType: !1991, size: 32, offset: 96)
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 32)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1993)
!1993 = !{!1994, !1995}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1992, file: !247, line: 359, baseType: !195, size: 8)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1992, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1985, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1985, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1975, file: !1976, line: 53, baseType: !1999, size: 32, offset: 32)
!1999 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1976, line: 47, baseType: !2000)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 32)
!2001 = !DISubroutineType(types: !2002)
!2002 = !{!107, !1983, !194, !197, !152}
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 32)
!2004 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2005)
!2005 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2006)
!2006 = !{!2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2005, file: !463, line: 447, baseType: !467, size: 32)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2005, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2005, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2005, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2005, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2005, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2005, file: !463, line: 453, baseType: !1753, size: 96, offset: 192)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2005, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2005, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2005, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2005, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2005, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2005, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2005, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2005, file: !463, line: 461, baseType: !1764, size: 64, offset: 512)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2005, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2005, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2005, file: !463, line: 464, baseType: !1768, size: 128, offset: 640)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2005, file: !463, line: 465, baseType: !1770, size: 160, offset: 768)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2005, file: !463, line: 466, baseType: !1772, size: 160, offset: 928)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2005, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 32)
!2029 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2030)
!2030 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2031)
!2031 = !{!2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2030, file: !463, line: 413, baseType: !1716, size: 256)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2030, file: !463, line: 414, baseType: !1718, size: 768, offset: 256)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2030, file: !463, line: 415, baseType: !1716, size: 256, offset: 1024)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2030, file: !463, line: 416, baseType: !1718, size: 768, offset: 1280)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2030, file: !463, line: 417, baseType: !1716, size: 256, offset: 2048)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2030, file: !463, line: 418, baseType: !1718, size: 768, offset: 2304)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2030, file: !463, line: 419, baseType: !1716, size: 256, offset: 3072)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2030, file: !463, line: 420, baseType: !1718, size: 768, offset: 3328)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2030, file: !463, line: 421, baseType: !1716, size: 256, offset: 4096)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2030, file: !463, line: 422, baseType: !1729, size: 1792, offset: 4352)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2030, file: !463, line: 423, baseType: !1733, size: 1920, offset: 6144)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2030, file: !463, line: 424, baseType: !1738, size: 20608, offset: 8064)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2030, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2045 = !{!1959, !2046, !2172, !2178, !2180, !2183, !2188, !2190, !2195}
!2046 = !DIGlobalVariableExpression(var: !2047, expr: !DIExpression())
!2047 = distinct !DIGlobalVariable(name: "_kernel", scope: !1961, file: !1965, line: 40, type: !2048, isLocal: false, isDefinition: true)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !345, line: 158, size: 288, elements: !2049)
!2049 = !{!2050, !2167}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2048, file: !345, line: 159, baseType: !2051, size: 192)
!2051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2052, size: 192, elements: !445)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !345, line: 100, size: 192, elements: !2053)
!2053 = !{!2054, !2055, !2056, !2160, !2161, !2162, !2163}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2052, file: !345, line: 102, baseType: !152, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2052, file: !345, line: 105, baseType: !193, size: 32, offset: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2052, file: !345, line: 108, baseType: !2057, size: 32, offset: 64)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 32)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2059)
!2059 = !{!2060, !2118, !2130, !2131, !2132, !2133, !2134, !2140, !2155}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2058, file: !309, line: 247, baseType: !2061, size: 384)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2062)
!2062 = !{!2063, !2087, !2094, !2095, !2096, !2105, !2106, !2107}
!2063 = !DIDerivedType(tag: DW_TAG_member, scope: !2061, file: !309, line: 60, baseType: !2064, size: 64)
!2064 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2061, file: !309, line: 60, size: 64, elements: !2065)
!2065 = !{!2066, !2081}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2064, file: !309, line: 61, baseType: !2067, size: 64)
!2067 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2068)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2069)
!2069 = !{!2070, !2076}
!2070 = !DIDerivedType(tag: DW_TAG_member, scope: !2068, file: !319, line: 38, baseType: !2071, size: 32)
!2071 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2068, file: !319, line: 38, size: 32, elements: !2072)
!2072 = !{!2073, !2075}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2071, file: !319, line: 39, baseType: !2074, size: 32)
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 32)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2071, file: !319, line: 40, baseType: !2074, size: 32)
!2076 = !DIDerivedType(tag: DW_TAG_member, scope: !2068, file: !319, line: 42, baseType: !2077, size: 32, offset: 32)
!2077 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2068, file: !319, line: 42, size: 32, elements: !2078)
!2078 = !{!2079, !2080}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2077, file: !319, line: 43, baseType: !2074, size: 32)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2077, file: !319, line: 44, baseType: !2074, size: 32)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2064, file: !309, line: 62, baseType: !2082, size: 64)
!2082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2083)
!2083 = !{!2084}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2082, file: !335, line: 50, baseType: !2085, size: 64)
!2085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2086, size: 64, elements: !340)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 32)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2061, file: !309, line: 68, baseType: !2088, size: 32, offset: 64)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 32)
!2089 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2090)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2091)
!2091 = !{!2092}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2090, file: !345, line: 232, baseType: !2093, size: 64)
!2093 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2068)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2061, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2061, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2096 = !DIDerivedType(tag: DW_TAG_member, scope: !2061, file: !309, line: 90, baseType: !2097, size: 16, offset: 112)
!2097 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2061, file: !309, line: 90, size: 16, elements: !2098)
!2098 = !{!2099, !2104}
!2099 = !DIDerivedType(tag: DW_TAG_member, scope: !2097, file: !309, line: 91, baseType: !2100, size: 16)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2097, file: !309, line: 91, size: 16, elements: !2101)
!2101 = !{!2102, !2103}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2100, file: !309, line: 96, baseType: !359, size: 8)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2100, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2097, file: !309, line: 100, baseType: !197, size: 16)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2061, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2061, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2061, file: !309, line: 131, baseType: !2108, size: 192, offset: 192)
!2108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2109)
!2109 = !{!2110, !2111, !2117}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2108, file: !345, line: 245, baseType: !2067, size: 64)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2108, file: !345, line: 246, baseType: !2112, size: 32, offset: 64)
!2112 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2113)
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 32)
!2114 = !DISubroutineType(types: !2115)
!2115 = !{null, !2116}
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 32)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2108, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2058, file: !309, line: 250, baseType: !2119, size: 288, offset: 384)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2120)
!2120 = !{!2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2119, file: !379, line: 26, baseType: !152, size: 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2119, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2119, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2119, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2119, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2119, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2119, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2119, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2119, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2058, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2058, file: !309, line: 256, baseType: !2089, size: 64, offset: 704)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2058, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2058, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2058, file: !309, line: 300, baseType: !2135, size: 96, offset: 1056)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2136)
!2136 = !{!2137, !2138, !2139}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2135, file: !309, line: 153, baseType: !22, size: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2135, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2135, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2058, file: !309, line: 325, baseType: !2141, size: 32, offset: 1152)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 32)
!2142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2143)
!2143 = !{!2144, !2150, !2151}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2142, file: !406, line: 5074, baseType: !2145, size: 96)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2146)
!2146 = !{!2147, !2148, !2149}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2145, file: !410, line: 57, baseType: !413, size: 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2145, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2145, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2142, file: !406, line: 5075, baseType: !2089, size: 64, offset: 96)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2142, file: !406, line: 5076, baseType: !2152, size: 32, offset: 160)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2153)
!2153 = !{!2154}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2152, file: !420, line: 52, baseType: !22, size: 32)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2058, file: !309, line: 343, baseType: !2156, size: 64, offset: 1184)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2157)
!2157 = !{!2158, !2159}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2156, file: !379, line: 63, baseType: !152, size: 32)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2156, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2052, file: !345, line: 111, baseType: !2057, size: 32, offset: 96)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2052, file: !345, line: 124, baseType: !107, size: 32, offset: 128)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2052, file: !345, line: 127, baseType: !195, size: 8, offset: 160)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2052, file: !345, line: 153, baseType: !2164, offset: 168)
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2165, line: 33, elements: !2166)
!2165 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2166 = !{}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2048, file: !345, line: 170, baseType: !2168, size: 96, offset: 192)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !345, line: 83, size: 96, elements: !2169)
!2169 = !{!2170, !2171}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2168, file: !345, line: 86, baseType: !2057, size: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2168, file: !345, line: 90, baseType: !2093, size: 64, offset: 32)
!2172 = !DIGlobalVariableExpression(var: !2173, expr: !DIExpression())
!2173 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1961, file: !1965, line: 43, type: !2174, isLocal: false, isDefinition: true, align: 512)
!2174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2175, size: 8704, elements: !580)
!2175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !2176)
!2176 = !{!2177}
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2175, file: !577, line: 48, baseType: !120, size: 8)
!2178 = !DIGlobalVariableExpression(var: !2179, expr: !DIExpression())
!2179 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1961, file: !1965, line: 44, type: !2058, isLocal: false, isDefinition: true)
!2180 = !DIGlobalVariableExpression(var: !2181, expr: !DIExpression())
!2181 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1961, file: !1965, line: 48, type: !2182, isLocal: false, isDefinition: true)
!2182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2058, size: 1280, elements: !445)
!2183 = !DIGlobalVariableExpression(var: !2184, expr: !DIExpression())
!2184 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1961, file: !1965, line: 86, type: !2185, isLocal: false, isDefinition: true, align: 512)
!2185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2175, size: 16896, elements: !2186)
!2186 = !{!446, !2187}
!2187 = !DISubrange(count: 2112)
!2188 = !DIGlobalVariableExpression(var: !2189, expr: !DIExpression())
!2189 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1961, file: !1965, line: 217, type: !145, isLocal: false, isDefinition: true)
!2190 = !DIGlobalVariableExpression(var: !2191, expr: !DIExpression())
!2191 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1961, file: !1965, line: 50, type: !2192, isLocal: true, isDefinition: true, align: 512)
!2192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2175, size: 33280, elements: !2193)
!2193 = !{!446, !2194}
!2194 = !DISubrange(count: 4160)
!2195 = !DIGlobalVariableExpression(var: !2196, expr: !DIExpression())
!2196 = distinct !DIGlobalVariable(name: "levels", scope: !2197, file: !1965, line: 232, type: !2217, isLocal: true, isDefinition: true)
!2197 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1965, file: !1965, line: 230, type: !2198, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !2200)
!2198 = !DISubroutineType(types: !2199)
!2199 = !{null, !1964}
!2200 = !{!2201, !2202, !2212, !2216}
!2201 = !DILocalVariable(name: "level", arg: 1, scope: !2197, file: !1965, line: 230, type: !1964)
!2202 = !DILocalVariable(name: "entry", scope: !2197, file: !1965, line: 244, type: !2203)
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 32)
!2204 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2205)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !2206)
!2206 = !{!2207, !2211}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2205, file: !238, line: 60, baseType: !2208, size: 32)
!2208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2209, size: 32)
!2209 = !DISubroutineType(types: !2210)
!2210 = !{!107, !1983}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2205, file: !238, line: 65, baseType: !1983, size: 32, offset: 32)
!2212 = !DILocalVariable(name: "dev", scope: !2213, file: !1965, line: 247, type: !1983)
!2213 = distinct !DILexicalBlock(scope: !2214, file: !1965, line: 246, column: 64)
!2214 = distinct !DILexicalBlock(scope: !2215, file: !1965, line: 246, column: 2)
!2215 = distinct !DILexicalBlock(scope: !2197, file: !1965, line: 246, column: 2)
!2216 = !DILocalVariable(name: "rc", scope: !2213, file: !1965, line: 248, type: !107)
!2217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2203, size: 192, elements: !1331)
!2218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2219)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !2220)
!2220 = !{!2221, !2222}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2219, file: !203, line: 17, baseType: !118, size: 32)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2219, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!2223 = !DIGlobalVariableExpression(var: !2224, expr: !DIExpression())
!2224 = distinct !DIGlobalVariable(name: "states_str", scope: !2225, file: !2226, line: 276, type: !2350, isLocal: true, isDefinition: true)
!2225 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2226, file: !2226, line: 271, type: !2227, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2341)
!2226 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2227 = !DISubroutineType(types: !2228)
!2228 = !{!118, !2229, !193, !185}
!2229 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !2230)
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 32)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2232)
!2232 = !{!2233, !2291, !2303, !2304, !2305, !2306, !2307, !2313, !2328}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2231, file: !309, line: 247, baseType: !2234, size: 384)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2235)
!2235 = !{!2236, !2260, !2267, !2268, !2269, !2278, !2279, !2280}
!2236 = !DIDerivedType(tag: DW_TAG_member, scope: !2234, file: !309, line: 60, baseType: !2237, size: 64)
!2237 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2234, file: !309, line: 60, size: 64, elements: !2238)
!2238 = !{!2239, !2254}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2237, file: !309, line: 61, baseType: !2240, size: 64)
!2240 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2241)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2242)
!2242 = !{!2243, !2249}
!2243 = !DIDerivedType(tag: DW_TAG_member, scope: !2241, file: !319, line: 38, baseType: !2244, size: 32)
!2244 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2241, file: !319, line: 38, size: 32, elements: !2245)
!2245 = !{!2246, !2248}
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2244, file: !319, line: 39, baseType: !2247, size: 32)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 32)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2244, file: !319, line: 40, baseType: !2247, size: 32)
!2249 = !DIDerivedType(tag: DW_TAG_member, scope: !2241, file: !319, line: 42, baseType: !2250, size: 32, offset: 32)
!2250 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2241, file: !319, line: 42, size: 32, elements: !2251)
!2251 = !{!2252, !2253}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2250, file: !319, line: 43, baseType: !2247, size: 32)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2250, file: !319, line: 44, baseType: !2247, size: 32)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2237, file: !309, line: 62, baseType: !2255, size: 64)
!2255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2256)
!2256 = !{!2257}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2255, file: !335, line: 50, baseType: !2258, size: 64)
!2258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2259, size: 64, elements: !340)
!2259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2255, size: 32)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2234, file: !309, line: 68, baseType: !2261, size: 32, offset: 64)
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 32)
!2262 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2263)
!2263 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2264)
!2264 = !{!2265}
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2263, file: !345, line: 232, baseType: !2266, size: 64)
!2266 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2241)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2234, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2234, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2269 = !DIDerivedType(tag: DW_TAG_member, scope: !2234, file: !309, line: 90, baseType: !2270, size: 16, offset: 112)
!2270 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2234, file: !309, line: 90, size: 16, elements: !2271)
!2271 = !{!2272, !2277}
!2272 = !DIDerivedType(tag: DW_TAG_member, scope: !2270, file: !309, line: 91, baseType: !2273, size: 16)
!2273 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2270, file: !309, line: 91, size: 16, elements: !2274)
!2274 = !{!2275, !2276}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2273, file: !309, line: 96, baseType: !359, size: 8)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2273, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2270, file: !309, line: 100, baseType: !197, size: 16)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2234, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2234, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2234, file: !309, line: 131, baseType: !2281, size: 192, offset: 192)
!2281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2282)
!2282 = !{!2283, !2284, !2290}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2281, file: !345, line: 245, baseType: !2240, size: 64)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2281, file: !345, line: 246, baseType: !2285, size: 32, offset: 64)
!2285 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2286)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 32)
!2287 = !DISubroutineType(types: !2288)
!2288 = !{null, !2289}
!2289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2281, size: 32)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2281, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2231, file: !309, line: 250, baseType: !2292, size: 288, offset: 384)
!2292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2293)
!2293 = !{!2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2292, file: !379, line: 26, baseType: !152, size: 32)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2292, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2292, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2292, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2292, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2292, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2292, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2292, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2292, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2231, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2231, file: !309, line: 256, baseType: !2262, size: 64, offset: 704)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2231, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2231, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2231, file: !309, line: 300, baseType: !2308, size: 96, offset: 1056)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2309)
!2309 = !{!2310, !2311, !2312}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2308, file: !309, line: 153, baseType: !22, size: 32)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2308, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2308, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2231, file: !309, line: 325, baseType: !2314, size: 32, offset: 1152)
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 32)
!2315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2316)
!2316 = !{!2317, !2323, !2324}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2315, file: !406, line: 5074, baseType: !2318, size: 96)
!2318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2319)
!2319 = !{!2320, !2321, !2322}
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2318, file: !410, line: 57, baseType: !413, size: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2318, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2318, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2315, file: !406, line: 5075, baseType: !2262, size: 64, offset: 96)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2315, file: !406, line: 5076, baseType: !2325, size: 32, offset: 160)
!2325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2326)
!2326 = !{!2327}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2325, file: !420, line: 52, baseType: !22, size: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2231, file: !309, line: 343, baseType: !2329, size: 64, offset: 1184)
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2330)
!2330 = !{!2331, !2332}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2329, file: !379, line: 63, baseType: !152, size: 32)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2329, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2333 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2334, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2335, globals: !2337, splitDebugInlining: false, nameTableKind: None)
!2334 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!2335 = !{!106, !118, !564, !195, !22, !107, !2336, !24, !185, !193, !152, !566}
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 32)
!2337 = !{!2223, !2338}
!2338 = !DIGlobalVariableExpression(var: !2339, expr: !DIExpression())
!2339 = distinct !DIGlobalVariable(name: "states_sz", scope: !2225, file: !2226, line: 279, type: !2340, isLocal: true, isDefinition: true)
!2340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1897, size: 256, elements: !1616)
!2341 = !{!2342, !2343, !2344, !2345, !2346, !2347, !2348}
!2342 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2225, file: !2226, line: 271, type: !2229)
!2343 = !DILocalVariable(name: "buf", arg: 2, scope: !2225, file: !2226, line: 271, type: !193)
!2344 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2225, file: !2226, line: 271, type: !185)
!2345 = !DILocalVariable(name: "off", scope: !2225, file: !2226, line: 273, type: !185)
!2346 = !DILocalVariable(name: "bit", scope: !2225, file: !2226, line: 274, type: !195)
!2347 = !DILocalVariable(name: "thread_state", scope: !2225, file: !2226, line: 275, type: !195)
!2348 = !DILocalVariable(name: "index", scope: !2349, file: !2226, line: 293, type: !195)
!2349 = distinct !DILexicalBlock(scope: !2225, file: !2226, line: 293, column: 2)
!2350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 256, elements: !1616)
!2351 = !DIGlobalVariableExpression(var: !2352, expr: !DIExpression())
!2352 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2353, file: !2464, line: 56, type: !2451, isLocal: false, isDefinition: true)
!2353 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2354, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2355, globals: !2461, splitDebugInlining: false, nameTableKind: None)
!2354 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!2355 = !{!2356, !193, !106, !2459, !194, !564, !896, !107, !152, !566, !2460}
!2356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 32)
!2357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2358)
!2358 = !{!2359, !2417, !2429, !2430, !2431, !2432, !2433, !2439, !2454}
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2357, file: !309, line: 247, baseType: !2360, size: 384)
!2360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2361)
!2361 = !{!2362, !2386, !2393, !2394, !2395, !2404, !2405, !2406}
!2362 = !DIDerivedType(tag: DW_TAG_member, scope: !2360, file: !309, line: 60, baseType: !2363, size: 64)
!2363 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2360, file: !309, line: 60, size: 64, elements: !2364)
!2364 = !{!2365, !2380}
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2363, file: !309, line: 61, baseType: !2366, size: 64)
!2366 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2367)
!2367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2368)
!2368 = !{!2369, !2375}
!2369 = !DIDerivedType(tag: DW_TAG_member, scope: !2367, file: !319, line: 38, baseType: !2370, size: 32)
!2370 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2367, file: !319, line: 38, size: 32, elements: !2371)
!2371 = !{!2372, !2374}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2370, file: !319, line: 39, baseType: !2373, size: 32)
!2373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 32)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2370, file: !319, line: 40, baseType: !2373, size: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, scope: !2367, file: !319, line: 42, baseType: !2376, size: 32, offset: 32)
!2376 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2367, file: !319, line: 42, size: 32, elements: !2377)
!2377 = !{!2378, !2379}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2376, file: !319, line: 43, baseType: !2373, size: 32)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2376, file: !319, line: 44, baseType: !2373, size: 32)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2363, file: !309, line: 62, baseType: !2381, size: 64)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2382)
!2382 = !{!2383}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2381, file: !335, line: 50, baseType: !2384, size: 64)
!2384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2385, size: 64, elements: !340)
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 32)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2360, file: !309, line: 68, baseType: !2387, size: 32, offset: 64)
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 32)
!2388 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2389)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2390)
!2390 = !{!2391}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2389, file: !345, line: 232, baseType: !2392, size: 64)
!2392 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2367)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2360, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2360, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2395 = !DIDerivedType(tag: DW_TAG_member, scope: !2360, file: !309, line: 90, baseType: !2396, size: 16, offset: 112)
!2396 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2360, file: !309, line: 90, size: 16, elements: !2397)
!2397 = !{!2398, !2403}
!2398 = !DIDerivedType(tag: DW_TAG_member, scope: !2396, file: !309, line: 91, baseType: !2399, size: 16)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2396, file: !309, line: 91, size: 16, elements: !2400)
!2400 = !{!2401, !2402}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2399, file: !309, line: 96, baseType: !359, size: 8)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2399, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2396, file: !309, line: 100, baseType: !197, size: 16)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2360, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2360, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2360, file: !309, line: 131, baseType: !2407, size: 192, offset: 192)
!2407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2408)
!2408 = !{!2409, !2410, !2416}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2407, file: !345, line: 245, baseType: !2366, size: 64)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2407, file: !345, line: 246, baseType: !2411, size: 32, offset: 64)
!2411 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2412)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 32)
!2413 = !DISubroutineType(types: !2414)
!2414 = !{null, !2415}
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 32)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2407, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2357, file: !309, line: 250, baseType: !2418, size: 288, offset: 384)
!2418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2419)
!2419 = !{!2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2418, file: !379, line: 26, baseType: !152, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2418, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2418, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2418, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2418, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2418, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2418, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2418, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2418, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2357, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2357, file: !309, line: 256, baseType: !2388, size: 64, offset: 704)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2357, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2357, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2357, file: !309, line: 300, baseType: !2434, size: 96, offset: 1056)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2435)
!2435 = !{!2436, !2437, !2438}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2434, file: !309, line: 153, baseType: !22, size: 32)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2434, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2434, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2357, file: !309, line: 325, baseType: !2440, size: 32, offset: 1152)
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 32)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2442)
!2442 = !{!2443, !2449, !2450}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2441, file: !406, line: 5074, baseType: !2444, size: 96)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2445)
!2445 = !{!2446, !2447, !2448}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2444, file: !410, line: 57, baseType: !413, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2444, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2444, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2441, file: !406, line: 5075, baseType: !2388, size: 64, offset: 96)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2441, file: !406, line: 5076, baseType: !2451, size: 32, offset: 160)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2452)
!2452 = !{!2453}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2451, file: !420, line: 52, baseType: !22, size: 32)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2357, file: !309, line: 343, baseType: !2455, size: 64, offset: 1184)
!2455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2456)
!2456 = !{!2457, !2458}
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2455, file: !379, line: 63, baseType: !152, size: 32)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2455, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 32)
!2461 = !{!2351, !2462, !2465, !2467}
!2462 = !DIGlobalVariableExpression(var: !2463, expr: !DIExpression())
!2463 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2353, file: !2464, line: 404, type: !107, isLocal: true, isDefinition: true)
!2464 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2465 = !DIGlobalVariableExpression(var: !2466, expr: !DIExpression())
!2466 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2353, file: !2464, line: 405, type: !107, isLocal: true, isDefinition: true)
!2467 = !DIGlobalVariableExpression(var: !2468, expr: !DIExpression())
!2468 = distinct !DIGlobalVariable(name: "pending_current", scope: !2353, file: !2464, line: 425, type: !2356, isLocal: true, isDefinition: true)
!2469 = !DIGlobalVariableExpression(var: !2470, expr: !DIExpression())
!2470 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2471, file: !2501, line: 19, type: !2507, isLocal: true, isDefinition: true)
!2471 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2472, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2473, globals: !2498, splitDebugInlining: false, nameTableKind: None)
!2472 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!2473 = !{!564, !106, !896, !152, !566, !107, !2474, !193, !376}
!2474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2475, size: 32)
!2475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2476)
!2476 = !{!2477, !2492, !2497}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2475, file: !345, line: 245, baseType: !2478, size: 64)
!2478 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2479)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2480)
!2480 = !{!2481, !2487}
!2481 = !DIDerivedType(tag: DW_TAG_member, scope: !2479, file: !319, line: 38, baseType: !2482, size: 32)
!2482 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2479, file: !319, line: 38, size: 32, elements: !2483)
!2483 = !{!2484, !2486}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2482, file: !319, line: 39, baseType: !2485, size: 32)
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 32)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2482, file: !319, line: 40, baseType: !2485, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_member, scope: !2479, file: !319, line: 42, baseType: !2488, size: 32, offset: 32)
!2488 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2479, file: !319, line: 42, size: 32, elements: !2489)
!2489 = !{!2490, !2491}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2488, file: !319, line: 43, baseType: !2485, size: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2488, file: !319, line: 44, baseType: !2485, size: 32)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2475, file: !345, line: 246, baseType: !2493, size: 32, offset: 64)
!2493 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2494)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 32)
!2495 = !DISubroutineType(types: !2496)
!2496 = !{null, !2474}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2475, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2498 = !{!2499, !2469, !2502, !2504}
!2499 = !DIGlobalVariableExpression(var: !2500, expr: !DIExpression())
!2500 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2471, file: !2501, line: 15, type: !566, isLocal: true, isDefinition: true)
!2501 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2502 = !DIGlobalVariableExpression(var: !2503, expr: !DIExpression())
!2503 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2471, file: !2501, line: 25, type: !107, isLocal: true, isDefinition: true)
!2504 = !DIGlobalVariableExpression(var: !2505, expr: !DIExpression())
!2505 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2471, file: !2501, line: 17, type: !2506, isLocal: true, isDefinition: true)
!2506 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2479)
!2507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2508)
!2508 = !{!2509}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2507, file: !420, line: 52, baseType: !22, size: 32)
!2510 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2511, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2511 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!2512 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2513, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2513 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!2514 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2515, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2516, retainedTypes: !2536, splitDebugInlining: false, nameTableKind: None)
!2515 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!2516 = !{!2517, !2525}
!2517 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2518, line: 69, baseType: !32, size: 32, elements: !2519)
!2518 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2519 = !{!2520, !2521, !2522, !2523, !2524}
!2520 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2521 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2522 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2523 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2524 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2525 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2518, line: 56, baseType: !32, size: 32, elements: !2526)
!2526 = !{!2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535}
!2527 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2528 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2529 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2530 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2531 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2532 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2533 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2534 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2535 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2536 = !{!107, !2517, !2525, !2537, !360, !264, !2539, !2540, !196, !198, !118, !185, !106, !22, !32, !187, !2542, !2543, !189, !188, !191, !190, !2538, !2544, !2545, !2546, !2547}
!2537 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2518, line: 31, baseType: !2538)
!2538 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !191)
!2539 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !186, line: 329, baseType: !32)
!2540 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2518, line: 32, baseType: !2541)
!2541 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !567)
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 32)
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 32)
!2544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 32)
!2545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!2546 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !186, line: 145, baseType: !107)
!2547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2546, size: 32)
!2548 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2549, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2549 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!2550 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2551, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2551 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!2552 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2553, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2554, splitDebugInlining: false, nameTableKind: None)
!2553 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!2554 = !{!118, !196, !107, !32}
!2555 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2556, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2557, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2556 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!2557 = !{!2558, !30}
!2558 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2559, line: 27, baseType: !32, size: 32, elements: !2560)
!2559 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2560 = !{!2561, !2562, !2563, !2564, !2565}
!2561 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2562 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2563 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2564 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2565 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2566 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2567, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2568, retainedTypes: !2569, splitDebugInlining: false, nameTableKind: None)
!2567 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!2568 = !{!734, !2558, !30}
!2569 = !{!922, !2570, !106, !107, !896, !152, !195, !2587}
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2572)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2573)
!2573 = !{!2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2572, file: !463, line: 413, baseType: !1716, size: 256)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2572, file: !463, line: 414, baseType: !1718, size: 768, offset: 256)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2572, file: !463, line: 415, baseType: !1716, size: 256, offset: 1024)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2572, file: !463, line: 416, baseType: !1718, size: 768, offset: 1280)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2572, file: !463, line: 417, baseType: !1716, size: 256, offset: 2048)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2572, file: !463, line: 418, baseType: !1718, size: 768, offset: 2304)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2572, file: !463, line: 419, baseType: !1716, size: 256, offset: 3072)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2572, file: !463, line: 420, baseType: !1718, size: 768, offset: 3328)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2572, file: !463, line: 421, baseType: !1716, size: 256, offset: 4096)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2572, file: !463, line: 422, baseType: !1729, size: 1792, offset: 4352)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2572, file: !463, line: 423, baseType: !1733, size: 1920, offset: 6144)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2572, file: !463, line: 424, baseType: !1738, size: 20608, offset: 8064)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2572, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2588, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2589)
!2589 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2590)
!2590 = !{!2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2589, file: !463, line: 447, baseType: !467, size: 32)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2589, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2589, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2589, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2589, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2589, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2589, file: !463, line: 453, baseType: !1753, size: 96, offset: 192)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2589, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2589, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2589, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2589, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2589, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2589, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2589, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2589, file: !463, line: 461, baseType: !1764, size: 64, offset: 512)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2589, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2589, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2589, file: !463, line: 464, baseType: !1768, size: 128, offset: 640)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2589, file: !463, line: 465, baseType: !1770, size: 160, offset: 768)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2589, file: !463, line: 466, baseType: !1772, size: 160, offset: 928)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2589, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2612 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2613, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2613 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!2614 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2615, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2616, splitDebugInlining: false, nameTableKind: None)
!2615 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!2616 = !{!106, !107, !22, !2617}
!2617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2618, size: 32)
!2618 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2619)
!2619 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2620)
!2620 = !{!2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2619, file: !463, line: 447, baseType: !467, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2619, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2619, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2619, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2619, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2619, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2619, file: !463, line: 453, baseType: !1753, size: 96, offset: 192)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2619, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2619, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2619, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2619, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2619, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2619, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2619, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2619, file: !463, line: 461, baseType: !1764, size: 64, offset: 512)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2619, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2619, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2619, file: !463, line: 464, baseType: !1768, size: 128, offset: 640)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2619, file: !463, line: 465, baseType: !1770, size: 160, offset: 768)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2619, file: !463, line: 466, baseType: !1772, size: 160, offset: 928)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2619, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2642 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2643, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2644, splitDebugInlining: false, nameTableKind: None)
!2643 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!2644 = !{!2645, !106, !107}
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 32)
!2646 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2647)
!2647 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2648)
!2648 = !{!2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2647, file: !463, line: 447, baseType: !467, size: 32)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2647, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2647, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2647, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2647, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2647, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2647, file: !463, line: 453, baseType: !1753, size: 96, offset: 192)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2647, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2647, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2647, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2647, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2647, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2647, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2647, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2647, file: !463, line: 461, baseType: !1764, size: 64, offset: 512)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2647, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2647, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2647, file: !463, line: 464, baseType: !1768, size: 128, offset: 640)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2647, file: !463, line: 465, baseType: !1770, size: 160, offset: 768)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2647, file: !463, line: 466, baseType: !1772, size: 160, offset: 928)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2647, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2670 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2671, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2672, splitDebugInlining: false, nameTableKind: None)
!2671 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!2672 = !{!2673, !152, !106, !107}
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 32)
!2674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2675, line: 98, size: 256, elements: !2676)
!2675 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2676 = !{!2677, !2682, !2687, !2692, !2697, !2702, !2707, !2712}
!2677 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 99, baseType: !2678, size: 32)
!2678 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 99, size: 32, elements: !2679)
!2679 = !{!2680, !2681}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2678, file: !2675, line: 99, baseType: !152, size: 32)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2678, file: !2675, line: 99, baseType: !152, size: 32)
!2682 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 100, baseType: !2683, size: 32, offset: 32)
!2683 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 100, size: 32, elements: !2684)
!2684 = !{!2685, !2686}
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2683, file: !2675, line: 100, baseType: !152, size: 32)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2683, file: !2675, line: 100, baseType: !152, size: 32)
!2687 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 101, baseType: !2688, size: 32, offset: 64)
!2688 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 101, size: 32, elements: !2689)
!2689 = !{!2690, !2691}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2688, file: !2675, line: 101, baseType: !152, size: 32)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2688, file: !2675, line: 101, baseType: !152, size: 32)
!2692 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 102, baseType: !2693, size: 32, offset: 96)
!2693 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 102, size: 32, elements: !2694)
!2694 = !{!2695, !2696}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2693, file: !2675, line: 102, baseType: !152, size: 32)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2693, file: !2675, line: 102, baseType: !152, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 103, baseType: !2698, size: 32, offset: 128)
!2698 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 103, size: 32, elements: !2699)
!2699 = !{!2700, !2701}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2698, file: !2675, line: 103, baseType: !152, size: 32)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2698, file: !2675, line: 103, baseType: !152, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 104, baseType: !2703, size: 32, offset: 160)
!2703 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 104, size: 32, elements: !2704)
!2704 = !{!2705, !2706}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2703, file: !2675, line: 104, baseType: !152, size: 32)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2703, file: !2675, line: 104, baseType: !152, size: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 105, baseType: !2708, size: 32, offset: 192)
!2708 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 105, size: 32, elements: !2709)
!2709 = !{!2710, !2711}
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2708, file: !2675, line: 105, baseType: !152, size: 32)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2708, file: !2675, line: 105, baseType: !152, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2674, file: !2675, line: 106, baseType: !152, size: 32, offset: 224)
!2713 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2714, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2557, retainedTypes: !2715, splitDebugInlining: false, nameTableKind: None)
!2714 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!2715 = !{!2716, !106, !107, !2741, !2784, !152}
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2717, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2718)
!2718 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2719)
!2719 = !{!2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740}
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2718, file: !463, line: 447, baseType: !467, size: 32)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2718, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2718, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2718, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2718, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2718, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2718, file: !463, line: 453, baseType: !1753, size: 96, offset: 192)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2718, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2718, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2718, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2718, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2718, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2718, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2718, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2718, file: !463, line: 461, baseType: !1764, size: 64, offset: 512)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2718, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2718, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2718, file: !463, line: 464, baseType: !1768, size: 128, offset: 640)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2718, file: !463, line: 465, baseType: !1770, size: 160, offset: 768)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2718, file: !463, line: 466, baseType: !1772, size: 160, offset: 928)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2718, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 32)
!2742 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2675, line: 141, baseType: !2743)
!2743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2675, line: 97, size: 256, elements: !2744)
!2744 = !{!2745}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2743, file: !2675, line: 107, baseType: !2746, size: 256)
!2746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2675, line: 98, size: 256, elements: !2747)
!2747 = !{!2748, !2753, !2758, !2763, !2768, !2773, !2778, !2783}
!2748 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 99, baseType: !2749, size: 32)
!2749 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 99, size: 32, elements: !2750)
!2750 = !{!2751, !2752}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2749, file: !2675, line: 99, baseType: !152, size: 32)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2749, file: !2675, line: 99, baseType: !152, size: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 100, baseType: !2754, size: 32, offset: 32)
!2754 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 100, size: 32, elements: !2755)
!2755 = !{!2756, !2757}
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2754, file: !2675, line: 100, baseType: !152, size: 32)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2754, file: !2675, line: 100, baseType: !152, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 101, baseType: !2759, size: 32, offset: 64)
!2759 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 101, size: 32, elements: !2760)
!2760 = !{!2761, !2762}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2759, file: !2675, line: 101, baseType: !152, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2759, file: !2675, line: 101, baseType: !152, size: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 102, baseType: !2764, size: 32, offset: 96)
!2764 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 102, size: 32, elements: !2765)
!2765 = !{!2766, !2767}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2764, file: !2675, line: 102, baseType: !152, size: 32)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2764, file: !2675, line: 102, baseType: !152, size: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 103, baseType: !2769, size: 32, offset: 128)
!2769 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 103, size: 32, elements: !2770)
!2770 = !{!2771, !2772}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2769, file: !2675, line: 103, baseType: !152, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2769, file: !2675, line: 103, baseType: !152, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 104, baseType: !2774, size: 32, offset: 160)
!2774 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 104, size: 32, elements: !2775)
!2775 = !{!2776, !2777}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2774, file: !2675, line: 104, baseType: !152, size: 32)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2774, file: !2675, line: 104, baseType: !152, size: 32)
!2778 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 105, baseType: !2779, size: 32, offset: 192)
!2779 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 105, size: 32, elements: !2780)
!2780 = !{!2781, !2782}
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2779, file: !2675, line: 105, baseType: !152, size: 32)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2779, file: !2675, line: 105, baseType: !152, size: 32)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2746, file: !2675, line: 106, baseType: !152, size: 32, offset: 224)
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!2785 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2786, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1701, retainedTypes: !2787, splitDebugInlining: false, nameTableKind: None)
!2786 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!2787 = !{!922, !896, !195, !152, !2788, !2805}
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2789, size: 32)
!2789 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2790)
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2791)
!2791 = !{!2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2790, file: !463, line: 413, baseType: !1716, size: 256)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2790, file: !463, line: 414, baseType: !1718, size: 768, offset: 256)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2790, file: !463, line: 415, baseType: !1716, size: 256, offset: 1024)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2790, file: !463, line: 416, baseType: !1718, size: 768, offset: 1280)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2790, file: !463, line: 417, baseType: !1716, size: 256, offset: 2048)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2790, file: !463, line: 418, baseType: !1718, size: 768, offset: 2304)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2790, file: !463, line: 419, baseType: !1716, size: 256, offset: 3072)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2790, file: !463, line: 420, baseType: !1718, size: 768, offset: 3328)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2790, file: !463, line: 421, baseType: !1716, size: 256, offset: 4096)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2790, file: !463, line: 422, baseType: !1729, size: 1792, offset: 4352)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2790, file: !463, line: 423, baseType: !1733, size: 1920, offset: 6144)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2790, file: !463, line: 424, baseType: !1738, size: 20608, offset: 8064)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2790, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2806, size: 32)
!2806 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2807)
!2807 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2808)
!2808 = !{!2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829}
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2807, file: !463, line: 447, baseType: !467, size: 32)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2807, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2807, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2807, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2807, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2807, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2807, file: !463, line: 453, baseType: !1753, size: 96, offset: 192)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2807, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2807, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2807, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2807, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2807, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2807, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2807, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2807, file: !463, line: 461, baseType: !1764, size: 64, offset: 512)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2807, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2807, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2807, file: !463, line: 464, baseType: !1768, size: 128, offset: 640)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2807, file: !463, line: 465, baseType: !1770, size: 160, offset: 768)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2807, file: !463, line: 466, baseType: !1772, size: 160, offset: 928)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2807, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2830 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2831, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2832, splitDebugInlining: false, nameTableKind: None)
!2831 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!2832 = !{!2833, !106, !107}
!2833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2834, size: 32)
!2834 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2835)
!2835 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2836)
!2836 = !{!2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857}
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2835, file: !463, line: 447, baseType: !467, size: 32)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2835, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2835, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2835, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2835, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2835, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2835, file: !463, line: 453, baseType: !1753, size: 96, offset: 192)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2835, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2835, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2835, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2835, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2835, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2835, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2835, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2835, file: !463, line: 461, baseType: !1764, size: 64, offset: 512)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2835, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2835, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2835, file: !463, line: 464, baseType: !1768, size: 128, offset: 640)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2835, file: !463, line: 465, baseType: !1770, size: 160, offset: 768)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2835, file: !463, line: 466, baseType: !1772, size: 160, offset: 928)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2835, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2858 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2859, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2860, splitDebugInlining: false, nameTableKind: None)
!2859 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!2860 = !{!120, !193, !185, !1121, !2861, !196, !106}
!2861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2862, size: 32)
!2862 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !196)
!2863 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2864, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2865, splitDebugInlining: false, nameTableKind: None)
!2864 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!2865 = !{!2866}
!2866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2867, size: 32)
!2867 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 532, baseType: !2868)
!2868 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 500, size: 1088, elements: !2869)
!2869 = !{!2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899}
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2868, file: !223, line: 502, baseType: !227, size: 32)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2868, file: !223, line: 503, baseType: !227, size: 32, offset: 32)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2868, file: !223, line: 504, baseType: !227, size: 32, offset: 64)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2868, file: !223, line: 505, baseType: !227, size: 32, offset: 96)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2868, file: !223, line: 506, baseType: !227, size: 32, offset: 128)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2868, file: !223, line: 507, baseType: !227, size: 32, offset: 160)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2868, file: !223, line: 508, baseType: !227, size: 32, offset: 192)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2868, file: !223, line: 509, baseType: !152, size: 32, offset: 224)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2868, file: !223, line: 510, baseType: !227, size: 32, offset: 256)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2868, file: !223, line: 511, baseType: !227, size: 32, offset: 288)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2868, file: !223, line: 512, baseType: !990, size: 64, offset: 320)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2868, file: !223, line: 513, baseType: !227, size: 32, offset: 384)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2868, file: !223, line: 514, baseType: !227, size: 32, offset: 416)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2868, file: !223, line: 515, baseType: !227, size: 32, offset: 448)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2868, file: !223, line: 516, baseType: !152, size: 32, offset: 480)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2868, file: !223, line: 517, baseType: !227, size: 32, offset: 512)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2868, file: !223, line: 518, baseType: !227, size: 32, offset: 544)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2868, file: !223, line: 519, baseType: !990, size: 64, offset: 576)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2868, file: !223, line: 520, baseType: !227, size: 32, offset: 640)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2868, file: !223, line: 521, baseType: !227, size: 32, offset: 672)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2868, file: !223, line: 522, baseType: !227, size: 32, offset: 704)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2868, file: !223, line: 523, baseType: !152, size: 32, offset: 736)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2868, file: !223, line: 524, baseType: !227, size: 32, offset: 768)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2868, file: !223, line: 525, baseType: !227, size: 32, offset: 800)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2868, file: !223, line: 526, baseType: !990, size: 64, offset: 832)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2868, file: !223, line: 527, baseType: !227, size: 32, offset: 896)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2868, file: !223, line: 528, baseType: !227, size: 32, offset: 928)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2868, file: !223, line: 529, baseType: !990, size: 64, offset: 960)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2868, file: !223, line: 530, baseType: !227, size: 32, offset: 1024)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2868, file: !223, line: 531, baseType: !227, size: 32, offset: 1056)
!2900 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2901, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2901 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!2902 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2903, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2904, retainedTypes: !2920, splitDebugInlining: false, nameTableKind: None)
!2903 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!2904 = !{!2905, !2912, !2916}
!2905 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2906, line: 38, baseType: !32, size: 32, elements: !2907)
!2906 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2907 = !{!2908, !2909, !2910, !2911}
!2908 = !DIEnumerator(name: "HAL_OK", value: 0)
!2909 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2910 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2911 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2912 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !963, line: 184, baseType: !32, size: 32, elements: !2913)
!2913 = !{!2914, !2915}
!2914 = !DIEnumerator(name: "RESET", value: 0)
!2915 = !DIEnumerator(name: "SET", value: 1)
!2916 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !963, line: 190, baseType: !32, size: 32, elements: !2917)
!2917 = !{!2918, !2919}
!2918 = !DIEnumerator(name: "DISABLE", value: 0)
!2919 = !DIEnumerator(name: "ENABLE", value: 1)
!2920 = !{!106, !2921, !195, !152, !1610, !2955, !2961, !2972, !197, !2973, !566}
!2921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2922, size: 32)
!2922 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 532, baseType: !2923)
!2923 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 500, size: 1088, elements: !2924)
!2924 = !{!2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954}
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2923, file: !223, line: 502, baseType: !227, size: 32)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2923, file: !223, line: 503, baseType: !227, size: 32, offset: 32)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2923, file: !223, line: 504, baseType: !227, size: 32, offset: 64)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2923, file: !223, line: 505, baseType: !227, size: 32, offset: 96)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2923, file: !223, line: 506, baseType: !227, size: 32, offset: 128)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2923, file: !223, line: 507, baseType: !227, size: 32, offset: 160)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2923, file: !223, line: 508, baseType: !227, size: 32, offset: 192)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2923, file: !223, line: 509, baseType: !152, size: 32, offset: 224)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2923, file: !223, line: 510, baseType: !227, size: 32, offset: 256)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2923, file: !223, line: 511, baseType: !227, size: 32, offset: 288)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2923, file: !223, line: 512, baseType: !990, size: 64, offset: 320)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2923, file: !223, line: 513, baseType: !227, size: 32, offset: 384)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2923, file: !223, line: 514, baseType: !227, size: 32, offset: 416)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2923, file: !223, line: 515, baseType: !227, size: 32, offset: 448)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2923, file: !223, line: 516, baseType: !152, size: 32, offset: 480)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2923, file: !223, line: 517, baseType: !227, size: 32, offset: 512)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2923, file: !223, line: 518, baseType: !227, size: 32, offset: 544)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2923, file: !223, line: 519, baseType: !990, size: 64, offset: 576)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2923, file: !223, line: 520, baseType: !227, size: 32, offset: 640)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2923, file: !223, line: 521, baseType: !227, size: 32, offset: 672)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2923, file: !223, line: 522, baseType: !227, size: 32, offset: 704)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2923, file: !223, line: 523, baseType: !152, size: 32, offset: 736)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2923, file: !223, line: 524, baseType: !227, size: 32, offset: 768)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2923, file: !223, line: 525, baseType: !227, size: 32, offset: 800)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2923, file: !223, line: 526, baseType: !990, size: 64, offset: 832)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2923, file: !223, line: 527, baseType: !227, size: 32, offset: 896)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2923, file: !223, line: 528, baseType: !227, size: 32, offset: 928)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2923, file: !223, line: 529, baseType: !990, size: 64, offset: 960)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2923, file: !223, line: 530, baseType: !227, size: 32, offset: 1024)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2923, file: !223, line: 531, baseType: !227, size: 32, offset: 1056)
!2955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2956, size: 32)
!2956 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 494, baseType: !2957)
!2957 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 490, size: 64, elements: !2958)
!2958 = !{!2959, !2960}
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2957, file: !223, line: 492, baseType: !227, size: 32)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2957, file: !223, line: 493, baseType: !227, size: 32, offset: 32)
!2961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2962, size: 32)
!2962 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 369, baseType: !2963)
!2963 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 360, size: 224, elements: !2964)
!2964 = !{!2965, !2966, !2967, !2968, !2969, !2970, !2971}
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2963, file: !223, line: 362, baseType: !227, size: 32)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2963, file: !223, line: 363, baseType: !227, size: 32, offset: 32)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2963, file: !223, line: 364, baseType: !227, size: 32, offset: 64)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2963, file: !223, line: 365, baseType: !227, size: 32, offset: 96)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2963, file: !223, line: 366, baseType: !227, size: 32, offset: 128)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2963, file: !223, line: 367, baseType: !227, size: 32, offset: 160)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2963, file: !223, line: 368, baseType: !227, size: 32, offset: 192)
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2974, size: 32)
!2974 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !223, line: 441, baseType: !2975)
!2975 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 430, size: 320, elements: !2976)
!2976 = !{!2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985}
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2975, file: !223, line: 432, baseType: !227, size: 32)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2975, file: !223, line: 433, baseType: !227, size: 32, offset: 32)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2975, file: !223, line: 434, baseType: !227, size: 32, offset: 64)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2975, file: !223, line: 435, baseType: !227, size: 32, offset: 96)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2975, file: !223, line: 436, baseType: !227, size: 32, offset: 128)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2975, file: !223, line: 437, baseType: !227, size: 32, offset: 160)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2975, file: !223, line: 438, baseType: !227, size: 32, offset: 192)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2975, file: !223, line: 439, baseType: !227, size: 32, offset: 224)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2975, file: !223, line: 440, baseType: !1275, size: 64, offset: 256)
!2986 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2987, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2988, retainedTypes: !2989, splitDebugInlining: false, nameTableKind: None)
!2987 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!2988 = !{!962}
!2989 = !{!2990, !152, !2998, !3004, !3015}
!2990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2991, size: 32)
!2991 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !463, line: 770, baseType: !2992)
!2992 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 764, size: 128, elements: !2993)
!2993 = !{!2994, !2995, !2996, !2997}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2992, file: !463, line: 766, baseType: !227, size: 32)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2992, file: !463, line: 767, baseType: !227, size: 32, offset: 32)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2992, file: !463, line: 768, baseType: !227, size: 32, offset: 64)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2992, file: !463, line: 769, baseType: !467, size: 32, offset: 96)
!2998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2999, size: 32)
!2999 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 494, baseType: !3000)
!3000 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 490, size: 64, elements: !3001)
!3001 = !{!3002, !3003}
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3000, file: !223, line: 492, baseType: !227, size: 32)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3000, file: !223, line: 493, baseType: !227, size: 32, offset: 32)
!3004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3005, size: 32)
!3005 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 369, baseType: !3006)
!3006 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 360, size: 224, elements: !3007)
!3007 = !{!3008, !3009, !3010, !3011, !3012, !3013, !3014}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3006, file: !223, line: 362, baseType: !227, size: 32)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3006, file: !223, line: 363, baseType: !227, size: 32, offset: 32)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3006, file: !223, line: 364, baseType: !227, size: 32, offset: 64)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3006, file: !223, line: 365, baseType: !227, size: 32, offset: 96)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3006, file: !223, line: 366, baseType: !227, size: 32, offset: 128)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3006, file: !223, line: 367, baseType: !227, size: 32, offset: 160)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3006, file: !223, line: 368, baseType: !227, size: 32, offset: 192)
!3015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3016, size: 32)
!3016 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 532, baseType: !3017)
!3017 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 500, size: 1088, elements: !3018)
!3018 = !{!3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048}
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3017, file: !223, line: 502, baseType: !227, size: 32)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3017, file: !223, line: 503, baseType: !227, size: 32, offset: 32)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3017, file: !223, line: 504, baseType: !227, size: 32, offset: 64)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3017, file: !223, line: 505, baseType: !227, size: 32, offset: 96)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3017, file: !223, line: 506, baseType: !227, size: 32, offset: 128)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3017, file: !223, line: 507, baseType: !227, size: 32, offset: 160)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3017, file: !223, line: 508, baseType: !227, size: 32, offset: 192)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3017, file: !223, line: 509, baseType: !152, size: 32, offset: 224)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3017, file: !223, line: 510, baseType: !227, size: 32, offset: 256)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3017, file: !223, line: 511, baseType: !227, size: 32, offset: 288)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3017, file: !223, line: 512, baseType: !990, size: 64, offset: 320)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3017, file: !223, line: 513, baseType: !227, size: 32, offset: 384)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3017, file: !223, line: 514, baseType: !227, size: 32, offset: 416)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3017, file: !223, line: 515, baseType: !227, size: 32, offset: 448)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3017, file: !223, line: 516, baseType: !152, size: 32, offset: 480)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3017, file: !223, line: 517, baseType: !227, size: 32, offset: 512)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3017, file: !223, line: 518, baseType: !227, size: 32, offset: 544)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3017, file: !223, line: 519, baseType: !990, size: 64, offset: 576)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3017, file: !223, line: 520, baseType: !227, size: 32, offset: 640)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3017, file: !223, line: 521, baseType: !227, size: 32, offset: 672)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3017, file: !223, line: 522, baseType: !227, size: 32, offset: 704)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3017, file: !223, line: 523, baseType: !152, size: 32, offset: 736)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3017, file: !223, line: 524, baseType: !227, size: 32, offset: 768)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3017, file: !223, line: 525, baseType: !227, size: 32, offset: 800)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3017, file: !223, line: 526, baseType: !990, size: 64, offset: 832)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3017, file: !223, line: 527, baseType: !227, size: 32, offset: 896)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3017, file: !223, line: 528, baseType: !227, size: 32, offset: 928)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3017, file: !223, line: 529, baseType: !990, size: 64, offset: 960)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3017, file: !223, line: 530, baseType: !227, size: 32, offset: 1024)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3017, file: !223, line: 531, baseType: !227, size: 32, offset: 1056)
!3049 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3050, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3051, splitDebugInlining: false, nameTableKind: None)
!3050 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!3051 = !{!106, !185}
!3052 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3053, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3054, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3053 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!3054 = !{!3055, !3062, !2558, !30}
!3055 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3056, line: 14, baseType: !32, size: 32, elements: !3057)
!3056 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3057 = !{!3058, !3059, !3060, !3061}
!3058 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3059 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3060 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3061 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3062 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3056, line: 42, baseType: !32, size: 32, elements: !3063)
!3063 = !{!3064, !3065, !3066, !3067, !3068, !3069}
!3064 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3065 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3066 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3067 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3068 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3069 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3070 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3071, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3071 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!3072 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3073, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3074, splitDebugInlining: false, nameTableKind: None)
!3073 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!3074 = !{!22, !106, !107}
!3075 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3076, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3076 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!3077 = !{!"Ubuntu clang version 14.0.6"}
!3078 = !{i32 7, !"Dwarf Version", i32 4}
!3079 = !{i32 2, !"Debug Info Version", i32 3}
!3080 = !{i32 1, !"wchar_size", i32 4}
!3081 = !{i32 1, !"min_enum_size", i32 4}
!3082 = !{i32 1, !"branch-target-enforcement", i32 0}
!3083 = !{i32 1, !"sign-return-address", i32 0}
!3084 = !{i32 1, !"sign-return-address-all", i32 0}
!3085 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3086 = !{i32 7, !"frame-pointer", i32 2}
!3087 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3088, file: !3088, line: 26, type: !3089, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2510, retainedNodes: !2166)
!3088 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3089 = !DISubroutineType(types: !3090)
!3090 = !{null}
!3091 = !DILocation(line: 28, column: 1, scope: !3087)
!3092 = !{i64 2155129756, i64 2155129776, i64 2155129839}
!3093 = !DILocation(line: 29, column: 1, scope: !3087)
!3094 = !{i64 2155130171, i64 2155130191, i64 2155130254}
!3095 = !DILocation(line: 30, column: 1, scope: !3087)
!3096 = !{i64 2155130590, i64 2155130610, i64 2155130673}
!3097 = !DILocation(line: 31, column: 1, scope: !3087)
!3098 = !{i64 2155131009, i64 2155131029, i64 2155131092}
!3099 = !DILocation(line: 33, column: 1, scope: !3087)
!3100 = !{i64 2155131301, i64 2155131321, i64 2155131384}
!3101 = !DILocation(line: 35, column: 1, scope: !3087)
!3102 = !{i64 2155131626, i64 2155131646, i64 2155131709}
!3103 = !DILocation(line: 50, column: 1, scope: !3087)
!3104 = !{i64 2155132053, i64 2155132073, i64 2155132136}
!3105 = !DILocation(line: 54, column: 1, scope: !3087)
!3106 = !{i64 2155132492, i64 2155132512, i64 2155132575}
!3107 = !DILocation(line: 61, column: 1, scope: !3087)
!3108 = !{i64 2155132809, i64 2155132829, i64 2155132892}
!3109 = !DILocation(line: 63, column: 1, scope: !3087)
!3110 = !{i64 2155133189, i64 2155133209, i64 2155133272}
!3111 = !DILocation(line: 64, column: 1, scope: !3087)
!3112 = !{i64 2155133711, i64 2155133731, i64 2155133794}
!3113 = !DILocation(line: 65, column: 1, scope: !3087)
!3114 = !{i64 2155134209, i64 2155134229, i64 2155134292}
!3115 = !DILocation(line: 66, column: 1, scope: !3087)
!3116 = !{i64 2155134691, i64 2155134711, i64 2155134774}
!3117 = !DILocation(line: 67, column: 1, scope: !3087)
!3118 = !{i64 2155135198, i64 2155135218, i64 2155135281}
!3119 = !DILocation(line: 68, column: 1, scope: !3087)
!3120 = !{i64 2155135686, i64 2155135706, i64 2155135769}
!3121 = !DILocation(line: 70, column: 1, scope: !3087)
!3122 = !{i64 2155140215, i64 2155140235, i64 2155140298}
!3123 = !DILocation(line: 71, column: 1, scope: !3087)
!3124 = !{i64 2155140657, i64 2155140677, i64 2155140740}
!3125 = !DILocation(line: 72, column: 1, scope: !3087)
!3126 = !{i64 2155141115, i64 2155141135, i64 2155141198}
!3127 = !DILocation(line: 79, column: 1, scope: !3087)
!3128 = !{i64 2155141569, i64 2155141589, i64 2155141652}
!3129 = !DILocation(line: 80, column: 1, scope: !3087)
!3130 = !{i64 2155142080, i64 2155142100, i64 2155142163}
!3131 = !DILocation(line: 82, column: 1, scope: !3087)
!3132 = !{i64 2155142571, i64 2155142591, i64 2155142654}
!3133 = !DILocation(line: 97, column: 1, scope: !3087)
!3134 = !{i64 2155142908, i64 2155142928, i64 2155142991}
!3135 = !DILocation(line: 99, column: 1, scope: !3087)
!3136 = !{i64 2155143126, i64 2155143146, i64 2155143209}
!3137 = !DILocation(line: 102, column: 1, scope: !3087)
!3138 = !{i64 2155143383, i64 2155143403, i64 2155143466}
!3139 = !DILocation(line: 105, column: 1, scope: !3087)
!3140 = !{i64 2155143623, i64 2155143643, i64 2155143706}
!3141 = !DILocation(line: 115, column: 1, scope: !3087)
!3142 = !{i64 2155143962, i64 2155143982, i64 2155144045}
!3143 = !DILocation(line: 118, column: 1, scope: !3087)
!3144 = !{i64 2155144306, i64 2155144326, i64 2155144389}
!3145 = !DILocation(line: 32, column: 1, scope: !3146)
!3146 = !DILexicalBlockFile(scope: !3087, file: !3147, discriminator: 0)
!3147 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3148 = !{i64 2155144662, i64 2155144682, i64 2155144745}
!3149 = !DILocation(line: 33, column: 1, scope: !3146)
!3150 = !{i64 2155145174, i64 2155145194, i64 2155145257}
!3151 = !DILocation(line: 53, column: 1, scope: !3146)
!3152 = !{i64 2155145682, i64 2155145702, i64 2155145765}
!3153 = !DILocation(line: 54, column: 1, scope: !3146)
!3154 = !{i64 2155146100, i64 2155146120, i64 2155146183}
!3155 = !DILocation(line: 55, column: 1, scope: !3146)
!3156 = !{i64 2155146518, i64 2155146538, i64 2155146601}
!3157 = !DILocation(line: 56, column: 1, scope: !3146)
!3158 = !{i64 2155146936, i64 2155146956, i64 2155147019}
!3159 = !DILocation(line: 57, column: 1, scope: !3146)
!3160 = !{i64 2155147354, i64 2155147374, i64 2155147437}
!3161 = !DILocation(line: 58, column: 1, scope: !3146)
!3162 = !{i64 2155147772, i64 2155147792, i64 2155147855}
!3163 = !DILocation(line: 59, column: 1, scope: !3146)
!3164 = !{i64 2155148190, i64 2155148210, i64 2155148273}
!3165 = !DILocation(line: 60, column: 1, scope: !3146)
!3166 = !{i64 2155148614, i64 2155148634, i64 2155148697}
!3167 = !DILocation(line: 61, column: 1, scope: !3146)
!3168 = !{i64 2155148931, i64 2155148951, i64 2155149014}
!3169 = !DILocation(line: 70, column: 1, scope: !3146)
!3170 = !{i64 2155149160, i64 2155149180, i64 2155149243}
!3171 = !DILocation(line: 72, column: 1, scope: !3146)
!3172 = !{i64 2155149492, i64 2155149512, i64 2155149575}
!3173 = !DILocation(line: 73, column: 1, scope: !3146)
!3174 = !{i64 2155154003, i64 2155154023, i64 2155154086}
!3175 = !DILocation(line: 74, column: 1, scope: !3146)
!3176 = !{i64 2155154453, i64 2155154473, i64 2155154536}
!3177 = !DILocation(line: 75, column: 1, scope: !3146)
!3178 = !{i64 2155154903, i64 2155154923, i64 2155154986}
!3179 = !DILocation(line: 76, column: 1, scope: !3146)
!3180 = !{i64 2155155353, i64 2155155373, i64 2155155436}
!3181 = !DILocation(line: 77, column: 1, scope: !3146)
!3182 = !{i64 2155155803, i64 2155155823, i64 2155155886}
!3183 = !DILocation(line: 78, column: 1, scope: !3146)
!3184 = !{i64 2155156253, i64 2155156273, i64 2155156336}
!3185 = !DILocation(line: 79, column: 1, scope: !3146)
!3186 = !{i64 2155156703, i64 2155156723, i64 2155156786}
!3187 = !DILocation(line: 80, column: 1, scope: !3146)
!3188 = !{i64 2155157156, i64 2155157176, i64 2155157239}
!3189 = !DILocation(line: 84, column: 1, scope: !3146)
!3190 = !{i64 2155157488, i64 2155157508, i64 2155157571}
!3191 = !DILocation(line: 91, column: 1, scope: !3146)
!3192 = !{i64 2155157885, i64 2155157905, i64 2155157968}
!3193 = !DILocation(line: 93, column: 1, scope: !3146)
!3194 = !{i64 2155158252, i64 2155158272, i64 2155158335}
!3195 = !DILocation(line: 106, column: 1, scope: !3146)
!3196 = !{i64 2155158522, i64 2155158542, i64 2155158605}
!3197 = !DILocation(line: 11, column: 1, scope: !3198)
!3198 = !DILexicalBlockFile(scope: !3087, file: !3199, discriminator: 0)
!3199 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3200 = distinct !DISubprogram(name: "_test_pytest_test_pytest_wrapper", scope: !111, file: !111, line: 10, type: !131, scopeLine: 10, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3201)
!3201 = !{!3202}
!3202 = !DILocalVariable(name: "data", arg: 1, scope: !3200, file: !111, line: 10, type: !106)
!3203 = !DILocation(line: 0, scope: !3200)
!3204 = !DILocation(line: 10, column: 1, scope: !3200)
!3205 = distinct !DISubprogram(name: "test_pytest_test_pytest", scope: !111, file: !111, line: 10, type: !3089, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2166)
!3206 = !DILocation(line: 12, column: 2, scope: !3205)
!3207 = !DILocation(line: 13, column: 1, scope: !3205)
!3208 = distinct !DISubprogram(name: "cbvprintf_package", scope: !200, file: !200, line: 233, type: !3209, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3218)
!3209 = !DISubroutineType(types: !3210)
!3210 = !{!107, !106, !185, !152, !118, !3211}
!3211 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3212, line: 99, baseType: !3213)
!3212 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3213 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3212, line: 40, baseType: !3214)
!3214 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !200, baseType: !3215)
!3215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3216)
!3216 = !{!3217}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3215, file: !200, line: 18, baseType: !106, size: 32)
!3218 = !{!3219, !3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3254, !3263, !3266, !3267, !3270, !3273, !3276, !3279, !3285}
!3219 = !DILocalVariable(name: "packaged", arg: 1, scope: !3208, file: !200, line: 233, type: !106)
!3220 = !DILocalVariable(name: "len", arg: 2, scope: !3208, file: !200, line: 233, type: !185)
!3221 = !DILocalVariable(name: "flags", arg: 3, scope: !3208, file: !200, line: 233, type: !152)
!3222 = !DILocalVariable(name: "fmt", arg: 4, scope: !3208, file: !200, line: 234, type: !118)
!3223 = !DILocalVariable(name: "ap", arg: 5, scope: !3208, file: !200, line: 234, type: !3211)
!3224 = !DILocalVariable(name: "buf0", scope: !3208, file: !200, line: 247, type: !194)
!3225 = !DILocalVariable(name: "buf", scope: !3208, file: !200, line: 248, type: !194)
!3226 = !DILocalVariable(name: "size", scope: !3208, file: !200, line: 249, type: !32)
!3227 = !DILocalVariable(name: "align", scope: !3208, file: !200, line: 250, type: !32)
!3228 = !DILocalVariable(name: "str_ptr_pos", scope: !3208, file: !200, line: 251, type: !3229)
!3229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 128, elements: !1949)
!3230 = !DILocalVariable(name: "str_ptr_arg", scope: !3208, file: !200, line: 252, type: !3229)
!3231 = !DILocalVariable(name: "s_idx", scope: !3208, file: !200, line: 253, type: !32)
!3232 = !DILocalVariable(name: "s_rw_cnt", scope: !3208, file: !200, line: 254, type: !32)
!3233 = !DILocalVariable(name: "s_ro_cnt", scope: !3208, file: !200, line: 255, type: !32)
!3234 = !DILocalVariable(name: "arg_idx", scope: !3208, file: !200, line: 256, type: !107)
!3235 = !DILocalVariable(name: "i", scope: !3208, file: !200, line: 257, type: !32)
!3236 = !DILocalVariable(name: "s", scope: !3208, file: !200, line: 258, type: !118)
!3237 = !DILocalVariable(name: "parsing", scope: !3208, file: !200, line: 259, type: !145)
!3238 = !DILocalVariable(name: "rws_pos_en", scope: !3208, file: !200, line: 263, type: !145)
!3239 = !DILocalVariable(name: "fros_cnt", scope: !3208, file: !200, line: 268, type: !107)
!3240 = !DILocalVariable(name: "is_str_arg", scope: !3208, file: !200, line: 269, type: !145)
!3241 = !DILocalVariable(name: "pkg_hdr", scope: !3208, file: !200, line: 270, type: !3242)
!3242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3243, size: 32)
!3243 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3244, line: 78, size: 32, elements: !3245)
!3244 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3245 = !{!3246, !3253}
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3243, file: !3244, line: 80, baseType: !3247, size: 32)
!3247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3244, line: 45, size: 32, elements: !3248)
!3248 = !{!3249, !3250, !3251, !3252}
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3247, file: !3244, line: 47, baseType: !195, size: 8)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3247, file: !3244, line: 50, baseType: !195, size: 8, offset: 8)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3247, file: !3244, line: 53, baseType: !195, size: 8, offset: 16)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3247, file: !3244, line: 56, baseType: !195, size: 8, offset: 24)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3243, file: !3244, line: 82, baseType: !106, size: 32)
!3254 = !DILocalVariable(name: "v", scope: !3255, file: !200, line: 567, type: !3259)
!3255 = distinct !DILexicalBlock(scope: !3256, file: !200, line: 562, column: 14)
!3256 = distinct !DILexicalBlock(scope: !3257, file: !200, line: 481, column: 18)
!3257 = distinct !DILexicalBlock(scope: !3258, file: !200, line: 466, column: 3)
!3258 = distinct !DILexicalBlock(scope: !3208, file: !200, line: 343, column: 15)
!3259 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3208, file: !200, line: 567, size: 64, elements: !3260)
!3260 = !{!3261, !3262}
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3259, file: !200, line: 567, baseType: !183, size: 64)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3259, file: !200, line: 567, baseType: !181, size: 64)
!3263 = !DILocalVariable(name: "is_ro", scope: !3264, file: !200, line: 620, type: !145)
!3264 = distinct !DILexicalBlock(scope: !3265, file: !200, line: 613, column: 19)
!3265 = distinct !DILexicalBlock(scope: !3258, file: !200, line: 613, column: 7)
!3266 = !DILocalVariable(name: "do_ro", scope: !3264, file: !200, line: 621, type: !145)
!3267 = !DILocalVariable(name: "s_ptr_idx", scope: !3268, file: !200, line: 626, type: !152)
!3268 = distinct !DILexicalBlock(scope: !3269, file: !200, line: 625, column: 11)
!3269 = distinct !DILexicalBlock(scope: !3264, file: !200, line: 623, column: 8)
!3270 = !DILocalVariable(name: "v", scope: !3271, file: !200, line: 684, type: !107)
!3271 = distinct !DILexicalBlock(scope: !3272, file: !200, line: 683, column: 35)
!3272 = distinct !DILexicalBlock(scope: !3265, file: !200, line: 683, column: 14)
!3273 = !DILocalVariable(name: "v", scope: !3274, file: !200, line: 691, type: !189)
!3274 = distinct !DILexicalBlock(scope: !3275, file: !200, line: 690, column: 36)
!3275 = distinct !DILexicalBlock(scope: !3272, file: !200, line: 690, column: 14)
!3276 = !DILocalVariable(name: "v", scope: !3277, file: !200, line: 698, type: !191)
!3277 = distinct !DILexicalBlock(scope: !3278, file: !200, line: 697, column: 41)
!3278 = distinct !DILexicalBlock(scope: !3275, file: !200, line: 697, column: 14)
!3279 = !DILocalVariable(name: "pos", scope: !3280, file: !200, line: 762, type: !195)
!3280 = distinct !DILexicalBlock(scope: !3281, file: !200, line: 757, column: 31)
!3281 = distinct !DILexicalBlock(scope: !3282, file: !200, line: 757, column: 3)
!3282 = distinct !DILexicalBlock(scope: !3283, file: !200, line: 757, column: 3)
!3283 = distinct !DILexicalBlock(scope: !3284, file: !200, line: 756, column: 16)
!3284 = distinct !DILexicalBlock(scope: !3208, file: !200, line: 756, column: 6)
!3285 = !DILabel(scope: !3264, name: "process_string", file: !200, line: 615)
!3286 = !DILocation(line: 0, scope: !3208)
!3287 = !DILocation(line: 251, column: 2, scope: !3208)
!3288 = !DILocation(line: 251, column: 10, scope: !3208)
!3289 = !DILocation(line: 252, column: 2, scope: !3208)
!3290 = !DILocation(line: 252, column: 10, scope: !3208)
!3291 = !DILocation(line: 263, column: 29, scope: !3208)
!3292 = !DILocation(line: 263, column: 21, scope: !3208)
!3293 = !DILocation(line: 268, column: 21, scope: !3208)
!3294 = !DILocation(line: 268, column: 19, scope: !3208)
!3295 = !DILocation(line: 273, column: 6, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !3208, file: !200, line: 273, column: 6)
!3297 = !DILocation(line: 273, column: 26, scope: !3296)
!3298 = !DILocation(line: 273, column: 6, scope: !3208)
!3299 = !DILocation(line: 297, column: 6, scope: !3208)
!3300 = !DILocation(line: 305, column: 11, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3208, file: !200, line: 305, column: 6)
!3302 = !DILocation(line: 305, column: 6, scope: !3208)
!3303 = !DILocation(line: 327, column: 19, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3208, file: !200, line: 327, column: 6)
!3305 = !DILocation(line: 327, column: 22, scope: !3304)
!3306 = !DILocation(line: 327, column: 33, scope: !3304)
!3307 = !DILocation(line: 327, column: 50, scope: !3304)
!3308 = !DILocation(line: 327, column: 6, scope: !3208)
!3309 = !DILocation(line: 338, column: 9, scope: !3208)
!3310 = !DILocation(line: 341, column: 2, scope: !3208)
!3311 = !DILocation(line: 472, column: 8, scope: !3257)
!3312 = !DILocation(line: 473, column: 14, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3314, file: !200, line: 473, column: 9)
!3314 = distinct !DILexicalBlock(scope: !3315, file: !200, line: 472, column: 18)
!3315 = distinct !DILexicalBlock(scope: !3257, file: !200, line: 472, column: 8)
!3316 = !DILocation(line: 473, column: 9, scope: !3314)
!3317 = !DILocation(line: 479, column: 5, scope: !3314)
!3318 = !DILocation(line: 468, column: 9, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3257, file: !200, line: 468, column: 8)
!3320 = !DILocation(line: 468, column: 8, scope: !3319)
!3321 = !DILocation(line: 468, column: 15, scope: !3319)
!3322 = !DILocation(line: 468, column: 8, scope: !3257)
!3323 = distinct !{!3323, !3324, !3325}
!3324 = !DILocation(line: 343, column: 2, scope: !3208)
!3325 = !DILocation(line: 712, column: 2, scope: !3208)
!3326 = !DILocation(line: 481, column: 4, scope: !3257)
!3327 = !DILocation(line: 484, column: 12, scope: !3256)
!3328 = !DILocation(line: 485, column: 5, scope: !3256)
!3329 = !DILocation(line: 505, column: 5, scope: !3256)
!3330 = !DILocation(line: 518, column: 5, scope: !3256)
!3331 = !DILocation(line: 523, column: 5, scope: !3256)
!3332 = !DILocation(line: 532, column: 9, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !3256, file: !200, line: 532, column: 9)
!3334 = !DILocation(line: 532, column: 17, scope: !3333)
!3335 = !DILocation(line: 532, column: 9, scope: !3256)
!3336 = !DILocation(line: 533, column: 10, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3338, file: !200, line: 533, column: 10)
!3338 = distinct !DILexicalBlock(scope: !3333, file: !200, line: 532, column: 25)
!3339 = !DILocation(line: 533, column: 18, scope: !3337)
!3340 = !DILocation(line: 0, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3255, file: !200, line: 569, column: 9)
!3342 = !DILocation(line: 0, scope: !3255)
!3343 = !DILocation(line: 579, column: 20, scope: !3255)
!3344 = !DILocation(line: 579, column: 11, scope: !3255)
!3345 = !DILocation(line: 580, column: 9, scope: !3255)
!3346 = !DILocation(line: 582, column: 21, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !3348, file: !200, line: 582, column: 10)
!3348 = distinct !DILexicalBlock(scope: !3349, file: !200, line: 580, column: 23)
!3349 = distinct !DILexicalBlock(scope: !3255, file: !200, line: 580, column: 9)
!3350 = !DILocation(line: 582, column: 28, scope: !3347)
!3351 = !DILocation(line: 582, column: 10, scope: !3348)
!3352 = !DILocation(line: 0, scope: !3353)
!3353 = distinct !DILexicalBlock(scope: !3354, file: !200, line: 587, column: 17)
!3354 = distinct !DILexicalBlock(scope: !3348, file: !200, line: 585, column: 10)
!3355 = !DILocation(line: 593, column: 9, scope: !3255)
!3356 = !DILocation(line: 600, column: 5, scope: !3256)
!3357 = !DILocation(line: 605, column: 18, scope: !3258)
!3358 = !DILocation(line: 605, column: 9, scope: !3258)
!3359 = !DILocation(line: 608, column: 20, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3258, file: !200, line: 608, column: 7)
!3361 = !DILocation(line: 608, column: 23, scope: !3360)
!3362 = !DILocation(line: 608, column: 34, scope: !3360)
!3363 = !DILocation(line: 608, column: 41, scope: !3360)
!3364 = !DILocation(line: 608, column: 7, scope: !3258)
!3365 = !DILocation(line: 613, column: 7, scope: !3258)
!3366 = !DILocation(line: 614, column: 8, scope: !3264)
!3367 = !DILocation(line: 614, column: 4, scope: !3264)
!3368 = !DILocation(line: 256, column: 6, scope: !3208)
!3369 = !DILocation(line: 254, column: 15, scope: !3208)
!3370 = !DILocation(line: 320, column: 7, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3301, file: !200, line: 305, column: 20)
!3372 = !DILocation(line: 615, column: 1, scope: !3264)
!3373 = !DILocation(line: 616, column: 8, scope: !3264)
!3374 = !DILocation(line: 617, column: 5, scope: !3375)
!3375 = distinct !DILexicalBlock(scope: !3376, file: !200, line: 616, column: 22)
!3376 = distinct !DILexicalBlock(scope: !3264, file: !200, line: 616, column: 8)
!3377 = !DILocation(line: 617, column: 25, scope: !3375)
!3378 = !DILocation(line: 618, column: 4, scope: !3375)
!3379 = !DILocation(line: 620, column: 26, scope: !3264)
!3380 = !DILocation(line: 620, column: 29, scope: !3264)
!3381 = !DILocation(line: 620, column: 17, scope: !3264)
!3382 = !DILocation(line: 620, column: 43, scope: !3264)
!3383 = !DILocation(line: 0, scope: !3264)
!3384 = !DILocation(line: 623, column: 14, scope: !3269)
!3385 = !DILocation(line: 626, column: 26, scope: !3268)
!3386 = !DILocation(line: 626, column: 37, scope: !3268)
!3387 = !DILocation(line: 0, scope: !3268)
!3388 = !DILocation(line: 634, column: 15, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3268, file: !200, line: 634, column: 9)
!3390 = !DILocation(line: 635, column: 6, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !3392, file: !200, line: 635, column: 6)
!3392 = distinct !DILexicalBlock(scope: !3393, file: !200, line: 635, column: 6)
!3393 = distinct !DILexicalBlock(scope: !3394, file: !200, line: 635, column: 6)
!3394 = distinct !DILexicalBlock(scope: !3389, file: !200, line: 634, column: 44)
!3395 = !DILocation(line: 639, column: 15, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3268, file: !200, line: 639, column: 9)
!3397 = !DILocation(line: 639, column: 9, scope: !3268)
!3398 = !DILocation(line: 640, column: 6, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3400, file: !200, line: 640, column: 6)
!3400 = distinct !DILexicalBlock(scope: !3401, file: !200, line: 640, column: 6)
!3401 = distinct !DILexicalBlock(scope: !3402, file: !200, line: 640, column: 6)
!3402 = distinct !DILexicalBlock(scope: !3396, file: !200, line: 639, column: 43)
!3403 = !DILocation(line: 644, column: 9, scope: !3268)
!3404 = !DILocation(line: 649, column: 27, scope: !3405)
!3405 = distinct !DILexicalBlock(scope: !3406, file: !200, line: 644, column: 23)
!3406 = distinct !DILexicalBlock(scope: !3268, file: !200, line: 644, column: 9)
!3407 = !DILocation(line: 649, column: 6, scope: !3405)
!3408 = !DILocation(line: 649, column: 25, scope: !3405)
!3409 = !DILocation(line: 650, column: 27, scope: !3405)
!3410 = !DILocation(line: 650, column: 6, scope: !3405)
!3411 = !DILocation(line: 650, column: 25, scope: !3405)
!3412 = !DILocation(line: 651, column: 10, scope: !3405)
!3413 = !DILocation(line: 653, column: 26, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3415, file: !200, line: 651, column: 17)
!3415 = distinct !DILexicalBlock(scope: !3405, file: !200, line: 651, column: 10)
!3416 = !DILocation(line: 654, column: 15, scope: !3414)
!3417 = !DILocation(line: 655, column: 6, scope: !3414)
!3418 = !DILocation(line: 656, column: 15, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3415, file: !200, line: 655, column: 13)
!3420 = !DILocation(line: 658, column: 16, scope: !3406)
!3421 = !DILocation(line: 663, column: 10, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3423, file: !200, line: 658, column: 23)
!3423 = distinct !DILexicalBlock(scope: !3406, file: !200, line: 658, column: 16)
!3424 = !DILocation(line: 664, column: 5, scope: !3422)
!3425 = !DILocation(line: 664, column: 16, scope: !3423)
!3426 = !DILocation(line: 669, column: 10, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3428, file: !200, line: 664, column: 28)
!3428 = distinct !DILexicalBlock(scope: !3423, file: !200, line: 664, column: 16)
!3429 = !DILocation(line: 670, column: 5, scope: !3427)
!3430 = !DILocation(line: 675, column: 13, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3428, file: !200, line: 670, column: 12)
!3432 = !DILocation(line: 675, column: 27, scope: !3431)
!3433 = !DILocation(line: 675, column: 10, scope: !3431)
!3434 = !DILocation(line: 678, column: 10, scope: !3268)
!3435 = !DILocation(line: 680, column: 8, scope: !3264)
!3436 = !DILocation(line: 683, column: 14, scope: !3265)
!3437 = !DILocation(line: 684, column: 12, scope: !3271)
!3438 = !DILocation(line: 0, scope: !3271)
!3439 = !DILocation(line: 686, column: 8, scope: !3271)
!3440 = !DILocation(line: 687, column: 5, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3442, file: !200, line: 686, column: 22)
!3442 = distinct !DILexicalBlock(scope: !3271, file: !200, line: 686, column: 8)
!3443 = !DILocation(line: 687, column: 17, scope: !3441)
!3444 = !DILocation(line: 688, column: 4, scope: !3441)
!3445 = !DILocation(line: 698, column: 18, scope: !3277)
!3446 = !DILocation(line: 0, scope: !3277)
!3447 = !DILocation(line: 700, column: 8, scope: !3277)
!3448 = !DILocation(line: 704, column: 6, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3450, file: !200, line: 703, column: 12)
!3450 = distinct !DILexicalBlock(scope: !3451, file: !200, line: 701, column: 9)
!3451 = distinct !DILexicalBlock(scope: !3452, file: !200, line: 700, column: 22)
!3452 = distinct !DILexicalBlock(scope: !3277, file: !200, line: 700, column: 8)
!3453 = !DILocation(line: 704, column: 24, scope: !3449)
!3454 = !DILocation(line: 706, column: 4, scope: !3451)
!3455 = !DILocation(line: 709, column: 4, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3457, file: !200, line: 709, column: 4)
!3457 = distinct !DILexicalBlock(scope: !3458, file: !200, line: 709, column: 4)
!3458 = distinct !DILexicalBlock(scope: !3459, file: !200, line: 709, column: 4)
!3459 = distinct !DILexicalBlock(scope: !3278, file: !200, line: 708, column: 10)
!3460 = !DILocation(line: 0, scope: !3272)
!3461 = !DILocation(line: 0, scope: !3258)
!3462 = !DILocation(line: 720, column: 6, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3208, file: !200, line: 720, column: 6)
!3464 = !DILocation(line: 720, column: 17, scope: !3463)
!3465 = !DILocation(line: 720, column: 31, scope: !3463)
!3466 = !DILocation(line: 720, column: 6, scope: !3208)
!3467 = !DILocation(line: 721, column: 3, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3469, file: !200, line: 721, column: 3)
!3469 = distinct !DILexicalBlock(scope: !3470, file: !200, line: 721, column: 3)
!3470 = distinct !DILexicalBlock(scope: !3471, file: !200, line: 721, column: 3)
!3471 = distinct !DILexicalBlock(scope: !3463, file: !200, line: 720, column: 38)
!3472 = !DILocation(line: 729, column: 6, scope: !3208)
!3473 = !DILocation(line: 730, column: 21, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3475, file: !200, line: 729, column: 20)
!3475 = distinct !DILexicalBlock(scope: !3208, file: !200, line: 729, column: 6)
!3476 = !DILocation(line: 730, column: 27, scope: !3474)
!3477 = !DILocation(line: 730, column: 3, scope: !3474)
!3478 = !DILocation(line: 737, column: 22, scope: !3208)
!3479 = !DILocation(line: 737, column: 20, scope: !3208)
!3480 = !DILocation(line: 0, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3208, file: !200, line: 739, column: 6)
!3482 = !DILocation(line: 745, column: 17, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3481, file: !200, line: 743, column: 9)
!3484 = !DILocation(line: 745, column: 25, scope: !3483)
!3485 = !DILocation(line: 746, column: 17, scope: !3483)
!3486 = !DILocation(line: 746, column: 28, scope: !3483)
!3487 = !DILocation(line: 749, column: 29, scope: !3208)
!3488 = !DILocation(line: 749, column: 16, scope: !3208)
!3489 = !DILocation(line: 749, column: 27, scope: !3208)
!3490 = !DILocation(line: 756, column: 6, scope: !3284)
!3491 = !DILocation(line: 756, column: 6, scope: !3208)
!3492 = !DILocation(line: 757, column: 3, scope: !3282)
!3493 = !DILocation(line: 758, column: 10, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !3280, file: !200, line: 758, column: 8)
!3495 = !DILocation(line: 758, column: 25, scope: !3494)
!3496 = !DILocation(line: 758, column: 8, scope: !3280)
!3497 = !DILocation(line: 0, scope: !3280)
!3498 = !DILocation(line: 765, column: 8, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3280, file: !200, line: 765, column: 8)
!3500 = !DILocation(line: 765, column: 19, scope: !3499)
!3501 = !DILocation(line: 765, column: 23, scope: !3499)
!3502 = !DILocation(line: 765, column: 8, scope: !3280)
!3503 = !DILocation(line: 762, column: 33, scope: !3280)
!3504 = !DILocation(line: 769, column: 8, scope: !3280)
!3505 = !DILocation(line: 769, column: 11, scope: !3280)
!3506 = !DILocation(line: 757, column: 27, scope: !3281)
!3507 = !DILocation(line: 757, column: 17, scope: !3281)
!3508 = distinct !{!3508, !3492, !3509}
!3509 = !DILocation(line: 770, column: 3, scope: !3282)
!3510 = !DILocation(line: 774, column: 16, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3512, file: !200, line: 774, column: 2)
!3512 = distinct !DILexicalBlock(scope: !3208, file: !200, line: 774, column: 2)
!3513 = !DILocation(line: 774, column: 2, scope: !3512)
!3514 = !DILocation(line: 776, column: 16, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3516, file: !200, line: 776, column: 7)
!3516 = distinct !DILexicalBlock(scope: !3511, file: !200, line: 774, column: 30)
!3517 = !DILocation(line: 776, column: 19, scope: !3515)
!3518 = !DILocation(line: 776, column: 34, scope: !3515)
!3519 = !DILocation(line: 776, column: 7, scope: !3516)
!3520 = !DILocation(line: 780, column: 7, scope: !3516)
!3521 = !DILocation(line: 782, column: 13, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3523, file: !200, line: 780, column: 19)
!3523 = distinct !DILexicalBlock(scope: !3516, file: !200, line: 780, column: 7)
!3524 = !DILocation(line: 782, column: 8, scope: !3522)
!3525 = !DILocation(line: 782, column: 11, scope: !3522)
!3526 = !DILocation(line: 783, column: 3, scope: !3522)
!3527 = !DILocation(line: 785, column: 26, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3523, file: !200, line: 783, column: 10)
!3529 = !DILocation(line: 785, column: 41, scope: !3528)
!3530 = !DILocation(line: 785, column: 24, scope: !3528)
!3531 = !DILocation(line: 785, column: 8, scope: !3528)
!3532 = !DILocation(line: 787, column: 52, scope: !3528)
!3533 = !DILocation(line: 789, column: 11, scope: !3528)
!3534 = !DILocation(line: 789, column: 21, scope: !3528)
!3535 = !DILocation(line: 0, scope: !3523)
!3536 = !DILocation(line: 793, column: 7, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3516, file: !200, line: 793, column: 7)
!3538 = !DILocation(line: 793, column: 18, scope: !3537)
!3539 = !DILocation(line: 793, column: 22, scope: !3537)
!3540 = !DILocation(line: 793, column: 29, scope: !3537)
!3541 = !DILocation(line: 793, column: 7, scope: !3516)
!3542 = !DILocation(line: 797, column: 12, scope: !3516)
!3543 = !DILocation(line: 797, column: 7, scope: !3516)
!3544 = !DILocation(line: 797, column: 10, scope: !3516)
!3545 = !DILocation(line: 799, column: 3, scope: !3516)
!3546 = !DILocation(line: 800, column: 7, scope: !3516)
!3547 = !DILocation(line: 801, column: 2, scope: !3516)
!3548 = !DILocation(line: 338, column: 4, scope: !3208)
!3549 = !DILocation(line: 774, column: 26, scope: !3511)
!3550 = distinct !{!3550, !3513, !3551}
!3551 = !DILocation(line: 801, column: 2, scope: !3512)
!3552 = !DILocation(line: 808, column: 9, scope: !3208)
!3553 = !DILocation(line: 808, column: 2, scope: !3208)
!3554 = !DILocation(line: 813, column: 1, scope: !3208)
!3555 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !200, file: !200, line: 33, type: !3556, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3558)
!3556 = !DISubroutineType(types: !3557)
!3557 = !{!145, !118}
!3558 = !{!3559}
!3559 = !DILocalVariable(name: "addr", arg: 1, scope: !3555, file: !200, line: 33, type: !118)
!3560 = !DILocation(line: 0, scope: !3555)
!3561 = !DILocation(line: 41, column: 9, scope: !3555)
!3562 = !DILocation(line: 41, column: 2, scope: !3555)
!3563 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3564, file: !3564, line: 24, type: !143, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3565)
!3564 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3565 = !{!3566}
!3566 = !DILocalVariable(name: "addr", arg: 1, scope: !3563, file: !3564, line: 24, type: !13)
!3567 = !DILocation(line: 0, scope: !3563)
!3568 = !DILocation(line: 49, column: 30, scope: !3563)
!3569 = !DILocation(line: 49, column: 57, scope: !3563)
!3570 = !DILocation(line: 49, column: 2, scope: !3563)
!3571 = distinct !DISubprogram(name: "cbprintf_package", scope: !200, file: !200, line: 815, type: !3572, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3574)
!3572 = !DISubroutineType(types: !3573)
!3573 = !{!107, !106, !185, !152, !118, null}
!3574 = !{!3575, !3576, !3577, !3578, !3579, !3580}
!3575 = !DILocalVariable(name: "packaged", arg: 1, scope: !3571, file: !200, line: 815, type: !106)
!3576 = !DILocalVariable(name: "len", arg: 2, scope: !3571, file: !200, line: 815, type: !185)
!3577 = !DILocalVariable(name: "flags", arg: 3, scope: !3571, file: !200, line: 815, type: !152)
!3578 = !DILocalVariable(name: "format", arg: 4, scope: !3571, file: !200, line: 816, type: !118)
!3579 = !DILocalVariable(name: "ap", scope: !3571, file: !200, line: 818, type: !3211)
!3580 = !DILocalVariable(name: "ret", scope: !3571, file: !200, line: 819, type: !107)
!3581 = !DILocation(line: 0, scope: !3571)
!3582 = !DILocation(line: 818, column: 2, scope: !3571)
!3583 = !DILocation(line: 818, column: 10, scope: !3571)
!3584 = !DILocation(line: 821, column: 2, scope: !3571)
!3585 = !DILocation(line: 822, column: 8, scope: !3571)
!3586 = !DILocation(line: 823, column: 2, scope: !3571)
!3587 = !DILocation(line: 825, column: 1, scope: !3571)
!3588 = !DILocation(line: 824, column: 2, scope: !3571)
!3589 = distinct !DISubprogram(name: "cbpprintf_external", scope: !200, file: !200, line: 827, type: !3590, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3600)
!3590 = !DISubroutineType(types: !3591)
!3591 = !{!107, !3592, !3596, !106, !106}
!3592 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3244, line: 297, baseType: !3593)
!3593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3594, size: 32)
!3594 = !DISubroutineType(types: !3595)
!3595 = !{!107, null}
!3596 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3244, line: 328, baseType: !3597)
!3597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3598, size: 32)
!3598 = !DISubroutineType(types: !3599)
!3599 = !{!107, !3592, !106, !118, !3211}
!3600 = !{!3601, !3602, !3603, !3604, !3605, !3606, !3612, !3613, !3614, !3615, !3616, !3617, !3618, !3619}
!3601 = !DILocalVariable(name: "out", arg: 1, scope: !3589, file: !200, line: 827, type: !3592)
!3602 = !DILocalVariable(name: "formatter", arg: 2, scope: !3589, file: !200, line: 828, type: !3596)
!3603 = !DILocalVariable(name: "ctx", arg: 3, scope: !3589, file: !200, line: 829, type: !106)
!3604 = !DILocalVariable(name: "packaged", arg: 4, scope: !3589, file: !200, line: 829, type: !106)
!3605 = !DILocalVariable(name: "buf", scope: !3589, file: !200, line: 831, type: !194)
!3606 = !DILocalVariable(name: "hdr", scope: !3589, file: !200, line: 832, type: !3607)
!3607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3608, size: 32)
!3608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3244, line: 96, size: 64, elements: !3609)
!3609 = !{!3610, !3611}
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3608, file: !3244, line: 98, baseType: !3243, size: 32)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3608, file: !3244, line: 101, baseType: !193, size: 32, offset: 32)
!3612 = !DILocalVariable(name: "s", scope: !3589, file: !200, line: 833, type: !193)
!3613 = !DILocalVariable(name: "ps", scope: !3589, file: !200, line: 833, type: !192)
!3614 = !DILocalVariable(name: "i", scope: !3589, file: !200, line: 834, type: !32)
!3615 = !DILocalVariable(name: "args_size", scope: !3589, file: !200, line: 834, type: !32)
!3616 = !DILocalVariable(name: "s_nbr", scope: !3589, file: !200, line: 834, type: !32)
!3617 = !DILocalVariable(name: "ros_nbr", scope: !3589, file: !200, line: 834, type: !32)
!3618 = !DILocalVariable(name: "rws_nbr", scope: !3589, file: !200, line: 834, type: !32)
!3619 = !DILocalVariable(name: "s_idx", scope: !3589, file: !200, line: 834, type: !32)
!3620 = !DILocation(line: 0, scope: !3589)
!3621 = !DILocation(line: 836, column: 10, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3589, file: !200, line: 836, column: 6)
!3623 = !DILocation(line: 836, column: 6, scope: !3589)
!3624 = !DILocation(line: 842, column: 28, scope: !3589)
!3625 = !DILocation(line: 842, column: 14, scope: !3589)
!3626 = !DILocation(line: 852, column: 16, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3628, file: !200, line: 852, column: 2)
!3628 = distinct !DILexicalBlock(scope: !3589, file: !200, line: 852, column: 2)
!3629 = !DILocation(line: 852, column: 2, scope: !3628)
!3630 = !DILocation(line: 841, column: 28, scope: !3589)
!3631 = !DILocation(line: 841, column: 14, scope: !3589)
!3632 = !DILocation(line: 841, column: 32, scope: !3589)
!3633 = !DILocation(line: 847, column: 19, scope: !3589)
!3634 = !DILocation(line: 843, column: 28, scope: !3589)
!3635 = !DILocation(line: 843, column: 14, scope: !3589)
!3636 = !DILocation(line: 847, column: 31, scope: !3589)
!3637 = !DILocation(line: 844, column: 28, scope: !3589)
!3638 = !DILocation(line: 844, column: 14, scope: !3589)
!3639 = !DILocation(line: 847, column: 45, scope: !3589)
!3640 = !DILocation(line: 847, column: 41, scope: !3589)
!3641 = !DILocation(line: 854, column: 24, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3627, file: !200, line: 852, column: 30)
!3643 = !DILocation(line: 854, column: 11, scope: !3642)
!3644 = !DILocation(line: 855, column: 30, scope: !3642)
!3645 = !DILocation(line: 855, column: 22, scope: !3642)
!3646 = !DILocation(line: 855, column: 8, scope: !3642)
!3647 = !DILocation(line: 857, column: 7, scope: !3642)
!3648 = !DILocation(line: 859, column: 8, scope: !3642)
!3649 = !DILocation(line: 859, column: 18, scope: !3642)
!3650 = !DILocation(line: 859, column: 5, scope: !3642)
!3651 = !DILocation(line: 852, column: 26, scope: !3627)
!3652 = distinct !{!3652, !3629, !3653}
!3653 = !DILocation(line: 860, column: 2, scope: !3628)
!3654 = !DILocation(line: 863, column: 6, scope: !3589)
!3655 = !DILocation(line: 866, column: 56, scope: !3589)
!3656 = !DILocation(line: 866, column: 9, scope: !3589)
!3657 = !DILocation(line: 866, column: 2, scope: !3589)
!3658 = !DILocation(line: 867, column: 1, scope: !3589)
!3659 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !200, file: !200, line: 179, type: !3660, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3662)
!3660 = !DISubroutineType(types: !3661)
!3661 = !{!107, !3592, !3596, !106, !118, !106}
!3662 = !{!3663, !3664, !3665, !3666, !3667, !3668}
!3663 = !DILocalVariable(name: "out", arg: 1, scope: !3659, file: !200, line: 179, type: !3592)
!3664 = !DILocalVariable(name: "formatter", arg: 2, scope: !3659, file: !200, line: 180, type: !3596)
!3665 = !DILocalVariable(name: "ctx", arg: 3, scope: !3659, file: !200, line: 181, type: !106)
!3666 = !DILocalVariable(name: "fmt", arg: 4, scope: !3659, file: !200, line: 182, type: !118)
!3667 = !DILocalVariable(name: "buf", arg: 5, scope: !3659, file: !200, line: 182, type: !106)
!3668 = !DILocalVariable(name: "u", scope: !3659, file: !200, line: 187, type: !3669)
!3669 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3659, file: !200, line: 184, size: 32, elements: !3670)
!3670 = !{!3671, !3672}
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3669, file: !200, line: 185, baseType: !3211, size: 32)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3669, file: !200, line: 186, baseType: !106, size: 32)
!3673 = !DILocation(line: 0, scope: !3659)
!3674 = !DILocation(line: 191, column: 9, scope: !3659)
!3675 = !DILocation(line: 191, column: 2, scope: !3659)
!3676 = distinct !DISubprogram(name: "is_ptr", scope: !200, file: !200, line: 881, type: !3677, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3679)
!3677 = !DISubroutineType(types: !3678)
!3678 = !{!145, !118, !107}
!3679 = !{!3680, !3681, !3682, !3683, !3684}
!3680 = !DILocalVariable(name: "fmt", arg: 1, scope: !3676, file: !200, line: 881, type: !118)
!3681 = !DILocalVariable(name: "n", arg: 2, scope: !3676, file: !200, line: 881, type: !107)
!3682 = !DILocalVariable(name: "c", scope: !3676, file: !200, line: 883, type: !120)
!3683 = !DILocalVariable(name: "mod", scope: !3676, file: !200, line: 884, type: !145)
!3684 = !DILocalVariable(name: "cnt", scope: !3676, file: !200, line: 885, type: !107)
!3685 = !DILocation(line: 0, scope: !3676)
!3686 = !DILocation(line: 887, column: 14, scope: !3676)
!3687 = !DILocation(line: 887, column: 22, scope: !3676)
!3688 = !DILocation(line: 887, column: 2, scope: !3676)
!3689 = !DILocation(line: 887, column: 18, scope: !3676)
!3690 = !DILocation(line: 888, column: 7, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3676, file: !200, line: 887, column: 31)
!3692 = !DILocation(line: 889, column: 12, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3694, file: !200, line: 889, column: 8)
!3694 = distinct !DILexicalBlock(scope: !3695, file: !200, line: 888, column: 12)
!3695 = distinct !DILexicalBlock(scope: !3691, file: !200, line: 888, column: 7)
!3696 = !DILocation(line: 889, column: 8, scope: !3694)
!3697 = !DILocation(line: 890, column: 11, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3699, file: !200, line: 890, column: 9)
!3699 = distinct !DILexicalBlock(scope: !3693, file: !200, line: 889, column: 18)
!3700 = !DILocation(line: 890, column: 9, scope: !3699)
!3701 = !DILocation(line: 892, column: 16, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3698, file: !200, line: 892, column: 16)
!3703 = !DILocation(line: 892, column: 16, scope: !3698)
!3704 = !DILocation(line: 895, column: 15, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3693, file: !200, line: 895, column: 15)
!3706 = !DILocation(line: 895, column: 15, scope: !3693)
!3707 = !DILocation(line: 900, column: 9, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3691, file: !200, line: 900, column: 7)
!3709 = !DILocation(line: 900, column: 7, scope: !3691)
!3710 = distinct !{!3710, !3688, !3711}
!3711 = !DILocation(line: 903, column: 2, scope: !3676)
!3712 = !DILocation(line: 906, column: 1, scope: !3676)
!3713 = distinct !DISubprogram(name: "is_fmt_spec", scope: !200, file: !200, line: 873, type: !3714, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3716)
!3714 = !DISubroutineType(types: !3715)
!3715 = !{!145, !120}
!3716 = !{!3717}
!3717 = !DILocalVariable(name: "c", arg: 1, scope: !3713, file: !200, line: 873, type: !120)
!3718 = !DILocation(line: 0, scope: !3713)
!3719 = !DILocation(line: 875, column: 19, scope: !3713)
!3720 = !DILocation(line: 875, column: 2, scope: !3713)
!3721 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !200, file: !200, line: 908, type: !3722, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3728)
!3722 = !DISubroutineType(types: !3723)
!3723 = !{!107, !106, !185, !3724, !106, !152, !2784, !185}
!3724 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3244, line: 308, baseType: !3725)
!3725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3726, size: 32)
!3726 = !DISubroutineType(types: !3727)
!3727 = !{!107, !13, !185, !106}
!3728 = !{!3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736, !3737, !3738, !3739, !3740, !3741, !3742, !3743, !3744, !3746, !3747, !3748, !3749, !3750, !3756, !3759, !3760, !3761, !3763, !3766, !3767, !3768, !3769, !3770, !3771, !3772, !3773, !3774, !3775, !3776, !3777, !3779, !3782, !3783, !3784, !3785, !3786, !3787, !3789, !3792, !3793, !3794}
!3729 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3721, file: !200, line: 908, type: !106)
!3730 = !DILocalVariable(name: "in_len", arg: 2, scope: !3721, file: !200, line: 909, type: !185)
!3731 = !DILocalVariable(name: "cb", arg: 3, scope: !3721, file: !200, line: 910, type: !3724)
!3732 = !DILocalVariable(name: "ctx", arg: 4, scope: !3721, file: !200, line: 911, type: !106)
!3733 = !DILocalVariable(name: "flags", arg: 5, scope: !3721, file: !200, line: 912, type: !152)
!3734 = !DILocalVariable(name: "strl", arg: 6, scope: !3721, file: !200, line: 913, type: !2784)
!3735 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3721, file: !200, line: 914, type: !185)
!3736 = !DILocalVariable(name: "buf", scope: !3721, file: !200, line: 918, type: !194)
!3737 = !DILocalVariable(name: "buf32", scope: !3721, file: !200, line: 919, type: !1016)
!3738 = !DILocalVariable(name: "args_size", scope: !3721, file: !200, line: 920, type: !32)
!3739 = !DILocalVariable(name: "ros_nbr", scope: !3721, file: !200, line: 920, type: !32)
!3740 = !DILocalVariable(name: "rws_nbr", scope: !3721, file: !200, line: 920, type: !32)
!3741 = !DILocalVariable(name: "fmt_present", scope: !3721, file: !200, line: 921, type: !145)
!3742 = !DILocalVariable(name: "rw_cpy", scope: !3721, file: !200, line: 922, type: !145)
!3743 = !DILocalVariable(name: "ro_cpy", scope: !3721, file: !200, line: 923, type: !145)
!3744 = !DILocalVariable(name: "in_desc", scope: !3721, file: !200, line: 924, type: !3745)
!3745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3247, size: 32)
!3746 = !DILocalVariable(name: "out_len", scope: !3721, file: !200, line: 960, type: !107)
!3747 = !DILocalVariable(name: "fmt", scope: !3721, file: !200, line: 965, type: !118)
!3748 = !DILocalVariable(name: "str_pos", scope: !3721, file: !200, line: 966, type: !194)
!3749 = !DILocalVariable(name: "strl_cnt", scope: !3721, file: !200, line: 967, type: !185)
!3750 = !DILocalVariable(name: "i", scope: !3751, file: !200, line: 973, type: !107)
!3751 = distinct !DILexicalBlock(scope: !3752, file: !200, line: 973, column: 4)
!3752 = distinct !DILexicalBlock(scope: !3753, file: !200, line: 972, column: 15)
!3753 = distinct !DILexicalBlock(scope: !3754, file: !200, line: 972, column: 7)
!3754 = distinct !DILexicalBlock(scope: !3755, file: !200, line: 970, column: 18)
!3755 = distinct !DILexicalBlock(scope: !3721, file: !200, line: 970, column: 6)
!3756 = !DILocalVariable(name: "str", scope: !3757, file: !200, line: 974, type: !118)
!3757 = distinct !DILexicalBlock(scope: !3758, file: !200, line: 973, column: 38)
!3758 = distinct !DILexicalBlock(scope: !3751, file: !200, line: 973, column: 4)
!3759 = !DILocalVariable(name: "len", scope: !3757, file: !200, line: 975, type: !107)
!3760 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3754, file: !200, line: 990, type: !145)
!3761 = !DILocalVariable(name: "i", scope: !3762, file: !200, line: 995, type: !107)
!3762 = distinct !DILexicalBlock(scope: !3754, file: !200, line: 995, column: 3)
!3763 = !DILocalVariable(name: "arg_idx", scope: !3764, file: !200, line: 996, type: !195)
!3764 = distinct !DILexicalBlock(scope: !3765, file: !200, line: 995, column: 37)
!3765 = distinct !DILexicalBlock(scope: !3762, file: !200, line: 995, column: 3)
!3766 = !DILocalVariable(name: "arg_pos", scope: !3764, file: !200, line: 997, type: !195)
!3767 = !DILocalVariable(name: "str", scope: !3764, file: !200, line: 998, type: !118)
!3768 = !DILocalVariable(name: "is_ro", scope: !3764, file: !200, line: 999, type: !145)
!3769 = !DILocalVariable(name: "len", scope: !3764, file: !200, line: 1000, type: !107)
!3770 = !DILocalVariable(name: "out_desc", scope: !3721, file: !200, line: 1038, type: !3247)
!3771 = !DILocalVariable(name: "cpy_str_pos", scope: !3721, file: !200, line: 1040, type: !3229)
!3772 = !DILocalVariable(name: "keep_str_pos", scope: !3721, file: !200, line: 1042, type: !3229)
!3773 = !DILocalVariable(name: "scpy_cnt", scope: !3721, file: !200, line: 1043, type: !195)
!3774 = !DILocalVariable(name: "keep_cnt", scope: !3721, file: !200, line: 1044, type: !195)
!3775 = !DILocalVariable(name: "dst", scope: !3721, file: !200, line: 1045, type: !194)
!3776 = !DILocalVariable(name: "rv", scope: !3721, file: !200, line: 1046, type: !107)
!3777 = !DILocalVariable(name: "i", scope: !3778, file: !200, line: 1074, type: !107)
!3778 = distinct !DILexicalBlock(scope: !3721, file: !200, line: 1074, column: 2)
!3779 = !DILocalVariable(name: "arg_idx", scope: !3780, file: !200, line: 1075, type: !195)
!3780 = distinct !DILexicalBlock(scope: !3781, file: !200, line: 1074, column: 36)
!3781 = distinct !DILexicalBlock(scope: !3778, file: !200, line: 1074, column: 2)
!3782 = !DILocalVariable(name: "arg_pos", scope: !3780, file: !200, line: 1076, type: !195)
!3783 = !DILocalVariable(name: "str", scope: !3780, file: !200, line: 1077, type: !118)
!3784 = !DILocalVariable(name: "is_ro", scope: !3780, file: !200, line: 1078, type: !145)
!3785 = !DILocalVariable(name: "in_desc_backup", scope: !3721, file: !200, line: 1114, type: !3247)
!3786 = !DILocalVariable(name: "strs_len", scope: !3721, file: !200, line: 1134, type: !185)
!3787 = !DILocalVariable(name: "i", scope: !3788, file: !200, line: 1143, type: !107)
!3788 = distinct !DILexicalBlock(scope: !3721, file: !200, line: 1143, column: 2)
!3789 = !DILocalVariable(name: "loc", scope: !3790, file: !200, line: 1144, type: !195)
!3790 = distinct !DILexicalBlock(scope: !3791, file: !200, line: 1143, column: 37)
!3791 = distinct !DILexicalBlock(scope: !3788, file: !200, line: 1143, column: 2)
!3792 = !DILocalVariable(name: "str", scope: !3790, file: !200, line: 1145, type: !118)
!3793 = !DILocalVariable(name: "str_len", scope: !3790, file: !200, line: 1146, type: !197)
!3794 = !DILabel(scope: !3795, name: "calculate_string_length", file: !200, line: 1021)
!3795 = distinct !DILexicalBlock(scope: !3796, file: !200, line: 1020, column: 56)
!3796 = distinct !DILexicalBlock(scope: !3797, file: !200, line: 1020, column: 15)
!3797 = distinct !DILexicalBlock(scope: !3764, file: !200, line: 1014, column: 8)
!3798 = !DILocation(line: 0, scope: !3721)
!3799 = !DILocation(line: 916, column: 2, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3801, file: !200, line: 916, column: 2)
!3801 = distinct !DILexicalBlock(scope: !3721, file: !200, line: 916, column: 2)
!3802 = !DILocation(line: 916, column: 2, scope: !3801)
!3803 = !DILocation(line: 916, column: 2, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3800, file: !200, line: 916, column: 2)
!3805 = !DILocation(line: 919, column: 20, scope: !3721)
!3806 = !DILocation(line: 921, column: 27, scope: !3721)
!3807 = !DILocation(line: 921, column: 21, scope: !3721)
!3808 = !DILocation(line: 926, column: 18, scope: !3721)
!3809 = !DILocation(line: 926, column: 11, scope: !3721)
!3810 = !DILocation(line: 926, column: 34, scope: !3721)
!3811 = !DILocation(line: 931, column: 21, scope: !3721)
!3812 = !DILocation(line: 931, column: 12, scope: !3721)
!3813 = !DILocation(line: 932, column: 11, scope: !3721)
!3814 = !DILocation(line: 932, column: 19, scope: !3721)
!3815 = !DILocation(line: 938, column: 21, scope: !3721)
!3816 = !DILocation(line: 938, column: 12, scope: !3721)
!3817 = !DILocation(line: 939, column: 19, scope: !3721)
!3818 = !DILocation(line: 939, column: 23, scope: !3721)
!3819 = !DILocation(line: 946, column: 14, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3721, file: !200, line: 946, column: 6)
!3821 = !DILocation(line: 947, column: 7, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3823, file: !200, line: 947, column: 7)
!3823 = distinct !DILexicalBlock(scope: !3820, file: !200, line: 946, column: 26)
!3824 = !DILocation(line: 947, column: 7, scope: !3823)
!3825 = !DILocation(line: 948, column: 4, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3822, file: !200, line: 947, column: 11)
!3827 = !DILocation(line: 949, column: 3, scope: !3826)
!3828 = !DILocation(line: 958, column: 23, scope: !3721)
!3829 = !DILocation(line: 958, column: 14, scope: !3721)
!3830 = !DILocation(line: 958, column: 27, scope: !3721)
!3831 = !DILocation(line: 965, column: 41, scope: !3721)
!3832 = !DILocation(line: 965, column: 20, scope: !3721)
!3833 = !DILocation(line: 966, column: 22, scope: !3721)
!3834 = !DILocation(line: 970, column: 9, scope: !3755)
!3835 = !DILocation(line: 970, column: 6, scope: !3721)
!3836 = !DILocation(line: 972, column: 7, scope: !3754)
!3837 = !DILocation(line: 0, scope: !3751)
!3838 = !DILocation(line: 973, column: 4, scope: !3751)
!3839 = !DILocation(line: 974, column: 46, scope: !3757)
!3840 = !DILocation(line: 974, column: 40, scope: !3757)
!3841 = !DILocation(line: 974, column: 23, scope: !3757)
!3842 = !DILocation(line: 0, scope: !3757)
!3843 = !DILocation(line: 975, column: 15, scope: !3757)
!3844 = !DILocation(line: 978, column: 14, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3757, file: !200, line: 978, column: 9)
!3846 = !DILocation(line: 979, column: 25, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !3845, file: !200, line: 978, column: 38)
!3848 = !DILocation(line: 979, column: 19, scope: !3847)
!3849 = !DILocation(line: 979, column: 6, scope: !3847)
!3850 = !DILocation(line: 979, column: 23, scope: !3847)
!3851 = !DILocation(line: 980, column: 5, scope: !3847)
!3852 = !DILocation(line: 981, column: 13, scope: !3757)
!3853 = !DILocation(line: 982, column: 12, scope: !3757)
!3854 = !DILocation(line: 973, column: 34, scope: !3758)
!3855 = !DILocation(line: 973, column: 22, scope: !3758)
!3856 = distinct !{!3856, !3838, !3857}
!3857 = !DILocation(line: 983, column: 4, scope: !3751)
!3858 = !DILocation(line: 985, column: 16, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3860, file: !200, line: 985, column: 8)
!3860 = distinct !DILexicalBlock(scope: !3753, file: !200, line: 984, column: 10)
!3861 = !DILocation(line: 967, column: 9, scope: !3721)
!3862 = !DILocation(line: 971, column: 11, scope: !3754)
!3863 = !DILocation(line: 0, scope: !3754)
!3864 = !DILocation(line: 0, scope: !3762)
!3865 = !DILocation(line: 995, column: 21, scope: !3765)
!3866 = !DILocation(line: 995, column: 3, scope: !3762)
!3867 = !DILocation(line: 990, column: 34, scope: !3754)
!3868 = !DILocation(line: 990, column: 26, scope: !3754)
!3869 = !DILocation(line: 996, column: 30, scope: !3764)
!3870 = !DILocation(line: 0, scope: !3764)
!3871 = !DILocation(line: 997, column: 30, scope: !3764)
!3872 = !DILocation(line: 997, column: 22, scope: !3764)
!3873 = !DILocation(line: 998, column: 39, scope: !3764)
!3874 = !DILocation(line: 998, column: 22, scope: !3764)
!3875 = !DILocation(line: 999, column: 17, scope: !3764)
!3876 = !DILocation(line: 1002, column: 20, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3764, file: !200, line: 1002, column: 8)
!3878 = !DILocation(line: 996, column: 22, scope: !3764)
!3879 = !DILocation(line: 1002, column: 35, scope: !3877)
!3880 = !DILocation(line: 1002, column: 23, scope: !3877)
!3881 = !DILocation(line: 1002, column: 8, scope: !3764)
!3882 = !DILocation(line: 1003, column: 5, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3884, file: !200, line: 1003, column: 5)
!3884 = distinct !DILexicalBlock(scope: !3885, file: !200, line: 1003, column: 5)
!3885 = distinct !DILexicalBlock(scope: !3886, file: !200, line: 1003, column: 5)
!3886 = distinct !DILexicalBlock(scope: !3887, file: !200, line: 1003, column: 5)
!3887 = distinct !DILexicalBlock(scope: !3877, file: !200, line: 1002, column: 45)
!3888 = !DILocation(line: 1010, column: 13, scope: !3887)
!3889 = !DILocation(line: 1011, column: 5, scope: !3887)
!3890 = !DILocation(line: 1014, column: 8, scope: !3764)
!3891 = !DILocation(line: 1015, column: 9, scope: !3892)
!3892 = distinct !DILexicalBlock(scope: !3797, file: !200, line: 1014, column: 15)
!3893 = !DILocation(line: 1018, column: 14, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3895, file: !200, line: 1017, column: 12)
!3895 = distinct !DILexicalBlock(scope: !3892, file: !200, line: 1015, column: 9)
!3896 = !DILocation(line: 1020, column: 4, scope: !3892)
!3897 = !DILocation(line: 1020, column: 15, scope: !3797)
!3898 = !DILocation(line: 1021, column: 1, scope: !3795)
!3899 = !DILocation(line: 1022, column: 11, scope: !3795)
!3900 = !DILocation(line: 1025, column: 14, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3795, file: !200, line: 1025, column: 9)
!3902 = !DILocation(line: 1026, column: 25, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3901, file: !200, line: 1025, column: 38)
!3904 = !DILocation(line: 1026, column: 19, scope: !3903)
!3905 = !DILocation(line: 1026, column: 6, scope: !3903)
!3906 = !DILocation(line: 1026, column: 23, scope: !3903)
!3907 = !DILocation(line: 1027, column: 5, scope: !3903)
!3908 = !DILocation(line: 1031, column: 21, scope: !3795)
!3909 = !DILocation(line: 1031, column: 13, scope: !3795)
!3910 = !DILocation(line: 1032, column: 4, scope: !3795)
!3911 = !DILocation(line: 995, column: 33, scope: !3765)
!3912 = distinct !{!3912, !3866, !3913}
!3913 = !DILocation(line: 1033, column: 3, scope: !3762)
!3914 = !DILocation(line: 1040, column: 10, scope: !3721)
!3915 = !DILocation(line: 1042, column: 10, scope: !3721)
!3916 = !DILocation(line: 1052, column: 6, scope: !3721)
!3917 = !DILocation(line: 1055, column: 9, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3919, file: !200, line: 1052, column: 14)
!3919 = distinct !DILexicalBlock(scope: !3721, file: !200, line: 1052, column: 6)
!3920 = !DILocation(line: 1056, column: 2, scope: !3918)
!3921 = !DILocation(line: 1056, column: 21, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3919, file: !200, line: 1056, column: 13)
!3923 = !DILocation(line: 1066, column: 3, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3925, file: !200, line: 1065, column: 11)
!3925 = distinct !DILexicalBlock(scope: !3721, file: !200, line: 1065, column: 6)
!3926 = !DILocation(line: 1067, column: 2, scope: !3924)
!3927 = !DILocation(line: 1068, column: 10, scope: !3721)
!3928 = !DILocation(line: 0, scope: !3778)
!3929 = !DILocation(line: 1074, column: 20, scope: !3781)
!3930 = !DILocation(line: 1074, column: 2, scope: !3778)
!3931 = !DILocation(line: 1110, column: 24, scope: !3721)
!3932 = !DILocation(line: 1053, column: 12, scope: !3918)
!3933 = !DILocation(line: 1054, column: 12, scope: !3918)
!3934 = !DILocation(line: 1108, column: 30, scope: !3721)
!3935 = !DILocation(line: 1108, column: 40, scope: !3721)
!3936 = !DILocation(line: 1108, column: 38, scope: !3721)
!3937 = !DILocation(line: 1109, column: 31, scope: !3721)
!3938 = !DILocation(line: 1109, column: 24, scope: !3721)
!3939 = !DILocation(line: 1110, column: 31, scope: !3721)
!3940 = !DILocation(line: 1114, column: 31, scope: !3721)
!3941 = !DILocation(line: 1114, column: 48, scope: !3721)
!3942 = !DILocation(line: 1115, column: 13, scope: !3721)
!3943 = !DILocation(line: 1118, column: 7, scope: !3721)
!3944 = !DILocation(line: 1119, column: 9, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3721, file: !200, line: 1119, column: 6)
!3946 = !DILocation(line: 1119, column: 6, scope: !3721)
!3947 = !DILocation(line: 1075, column: 29, scope: !3780)
!3948 = !DILocation(line: 1075, column: 21, scope: !3780)
!3949 = !DILocation(line: 0, scope: !3780)
!3950 = !DILocation(line: 1076, column: 29, scope: !3780)
!3951 = !DILocation(line: 1076, column: 21, scope: !3780)
!3952 = !DILocation(line: 1077, column: 38, scope: !3780)
!3953 = !DILocation(line: 1077, column: 21, scope: !3780)
!3954 = !DILocation(line: 1078, column: 16, scope: !3780)
!3955 = !DILocation(line: 1080, column: 19, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3780, file: !200, line: 1080, column: 7)
!3957 = !DILocation(line: 1080, column: 34, scope: !3956)
!3958 = !DILocation(line: 1080, column: 22, scope: !3956)
!3959 = !DILocation(line: 1080, column: 7, scope: !3780)
!3960 = !DILocation(line: 1084, column: 7, scope: !3780)
!3961 = !DILocation(line: 1085, column: 8, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3963, file: !200, line: 1084, column: 14)
!3963 = distinct !DILexicalBlock(scope: !3780, file: !200, line: 1084, column: 7)
!3964 = !DILocation(line: 1086, column: 5, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3966, file: !200, line: 1086, column: 5)
!3966 = distinct !DILexicalBlock(scope: !3967, file: !200, line: 1086, column: 5)
!3967 = distinct !DILexicalBlock(scope: !3968, file: !200, line: 1085, column: 49)
!3968 = distinct !DILexicalBlock(scope: !3962, file: !200, line: 1085, column: 8)
!3969 = !DILocation(line: 1086, column: 5, scope: !3966)
!3970 = !DILocation(line: 1086, column: 5, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3965, file: !200, line: 1086, column: 5)
!3972 = !DILocation(line: 1087, column: 25, scope: !3967)
!3973 = !DILocation(line: 1087, column: 5, scope: !3967)
!3974 = !DILocation(line: 1088, column: 4, scope: !3967)
!3975 = !DILocation(line: 1088, column: 15, scope: !3968)
!3976 = !DILocation(line: 1089, column: 5, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3978, file: !200, line: 1089, column: 5)
!3978 = distinct !DILexicalBlock(scope: !3979, file: !200, line: 1089, column: 5)
!3979 = distinct !DILexicalBlock(scope: !3980, file: !200, line: 1088, column: 61)
!3980 = distinct !DILexicalBlock(scope: !3968, file: !200, line: 1088, column: 15)
!3981 = !DILocation(line: 1089, column: 5, scope: !3978)
!3982 = !DILocation(line: 1089, column: 5, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3977, file: !200, line: 1089, column: 5)
!3984 = !DILocation(line: 1090, column: 26, scope: !3979)
!3985 = !DILocation(line: 1090, column: 5, scope: !3979)
!3986 = !DILocation(line: 1091, column: 4, scope: !3979)
!3987 = !DILocation(line: 1095, column: 8, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3963, file: !200, line: 1094, column: 10)
!3989 = !DILocation(line: 1096, column: 5, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3991, file: !200, line: 1096, column: 5)
!3991 = distinct !DILexicalBlock(scope: !3992, file: !200, line: 1096, column: 5)
!3992 = distinct !DILexicalBlock(scope: !3993, file: !200, line: 1095, column: 49)
!3993 = distinct !DILexicalBlock(scope: !3988, file: !200, line: 1095, column: 8)
!3994 = !DILocation(line: 1096, column: 5, scope: !3991)
!3995 = !DILocation(line: 1096, column: 5, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3990, file: !200, line: 1096, column: 5)
!3997 = !DILocation(line: 1097, column: 25, scope: !3992)
!3998 = !DILocation(line: 1097, column: 5, scope: !3992)
!3999 = !DILocation(line: 1098, column: 4, scope: !3992)
!4000 = !DILocation(line: 1099, column: 5, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !4002, file: !200, line: 1099, column: 5)
!4002 = distinct !DILexicalBlock(scope: !4003, file: !200, line: 1099, column: 5)
!4003 = distinct !DILexicalBlock(scope: !3993, file: !200, line: 1098, column: 11)
!4004 = !DILocation(line: 1099, column: 5, scope: !4002)
!4005 = !DILocation(line: 1099, column: 5, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !4001, file: !200, line: 1099, column: 5)
!4007 = !DILocation(line: 1100, column: 26, scope: !4003)
!4008 = !DILocation(line: 1100, column: 5, scope: !4003)
!4009 = !DILocation(line: 1100, column: 30, scope: !4003)
!4010 = !DILocation(line: 1101, column: 26, scope: !4003)
!4011 = !DILocation(line: 1101, column: 5, scope: !4003)
!4012 = !DILocation(line: 0, scope: !3963)
!4013 = !DILocation(line: 1074, column: 32, scope: !3781)
!4014 = distinct !{!4014, !3930, !4015}
!4015 = !DILocation(line: 1104, column: 2, scope: !3778)
!4016 = !DILocation(line: 1124, column: 13, scope: !3721)
!4017 = !DILocation(line: 1127, column: 10, scope: !3721)
!4018 = !DILocation(line: 1127, column: 7, scope: !3721)
!4019 = !DILocation(line: 1128, column: 9, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !3721, file: !200, line: 1128, column: 6)
!4021 = !DILocation(line: 1128, column: 6, scope: !3721)
!4022 = !DILocation(line: 1134, column: 27, scope: !3721)
!4023 = !DILocation(line: 1136, column: 7, scope: !3721)
!4024 = !DILocation(line: 1137, column: 9, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !3721, file: !200, line: 1137, column: 6)
!4026 = !DILocation(line: 1137, column: 6, scope: !3721)
!4027 = !DILocation(line: 1131, column: 10, scope: !3721)
!4028 = !DILocation(line: 1140, column: 10, scope: !3721)
!4029 = !DILocation(line: 0, scope: !3788)
!4030 = !DILocation(line: 1143, column: 20, scope: !3791)
!4031 = !DILocation(line: 1143, column: 2, scope: !3788)
!4032 = !DILocation(line: 1144, column: 3, scope: !3790)
!4033 = !DILocation(line: 1144, column: 17, scope: !3790)
!4034 = !DILocation(line: 0, scope: !3790)
!4035 = !DILocation(line: 1144, column: 11, scope: !3790)
!4036 = !DILocation(line: 1145, column: 38, scope: !3790)
!4037 = !DILocation(line: 1145, column: 21, scope: !3790)
!4038 = !DILocation(line: 1146, column: 22, scope: !3790)
!4039 = !DILocation(line: 1146, column: 29, scope: !3790)
!4040 = !DILocation(line: 1148, column: 8, scope: !3790)
!4041 = !DILocation(line: 1149, column: 10, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !3790, file: !200, line: 1149, column: 7)
!4043 = !DILocation(line: 1149, column: 7, scope: !3790)
!4044 = !DILocation(line: 1154, column: 8, scope: !3790)
!4045 = !DILocation(line: 1155, column: 10, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !3790, file: !200, line: 1155, column: 7)
!4047 = !DILocation(line: 1155, column: 7, scope: !3790)
!4048 = !DILocation(line: 1159, column: 2, scope: !3791)
!4049 = !DILocation(line: 1152, column: 11, scope: !3790)
!4050 = !DILocation(line: 1158, column: 11, scope: !3790)
!4051 = !DILocation(line: 1143, column: 33, scope: !3791)
!4052 = distinct !{!4052, !4031, !4053}
!4053 = !DILocation(line: 1159, column: 2, scope: !3788)
!4054 = !DILocation(line: 1162, column: 8, scope: !3721)
!4055 = !DILocation(line: 1164, column: 2, scope: !3721)
!4056 = !DILocation(line: 1165, column: 1, scope: !3721)
!4057 = distinct !DISubprogram(name: "get_package_len", scope: !200, file: !200, line: 196, type: !4058, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !4060)
!4058 = !DISubroutineType(types: !4059)
!4059 = !{!185, !106}
!4060 = !{!4061, !4062, !4063, !4064, !4065, !4066, !4067}
!4061 = !DILocalVariable(name: "packaged", arg: 1, scope: !4057, file: !200, line: 196, type: !106)
!4062 = !DILocalVariable(name: "buf", scope: !4057, file: !200, line: 200, type: !194)
!4063 = !DILocalVariable(name: "start", scope: !4057, file: !200, line: 201, type: !194)
!4064 = !DILocalVariable(name: "args_size", scope: !4057, file: !200, line: 202, type: !32)
!4065 = !DILocalVariable(name: "s_nbr", scope: !4057, file: !200, line: 202, type: !32)
!4066 = !DILocalVariable(name: "ros_nbr", scope: !4057, file: !200, line: 202, type: !32)
!4067 = !DILocalVariable(name: "i", scope: !4068, file: !200, line: 215, type: !107)
!4068 = distinct !DILexicalBlock(scope: !4057, file: !200, line: 215, column: 2)
!4069 = !DILocation(line: 0, scope: !4057)
!4070 = !DILocation(line: 198, column: 2, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4072, file: !200, line: 198, column: 2)
!4072 = distinct !DILexicalBlock(scope: !4057, file: !200, line: 198, column: 2)
!4073 = !DILocation(line: 198, column: 2, scope: !4072)
!4074 = !DILocation(line: 198, column: 2, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !4071, file: !200, line: 198, column: 2)
!4076 = !DILocation(line: 204, column: 14, scope: !4057)
!4077 = !DILocation(line: 204, column: 21, scope: !4057)
!4078 = !DILocation(line: 205, column: 14, scope: !4057)
!4079 = !DILocation(line: 206, column: 14, scope: !4057)
!4080 = !DILocation(line: 209, column: 6, scope: !4057)
!4081 = !DILocation(line: 212, column: 6, scope: !4057)
!4082 = !DILocation(line: 0, scope: !4068)
!4083 = !DILocation(line: 215, column: 20, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4068, file: !200, line: 215, column: 2)
!4085 = !DILocation(line: 215, column: 2, scope: !4068)
!4086 = !DILocation(line: 220, column: 33, scope: !4057)
!4087 = !DILocation(line: 220, column: 2, scope: !4057)
!4088 = !DILocation(line: 216, column: 6, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4084, file: !200, line: 215, column: 34)
!4090 = !DILocation(line: 217, column: 10, scope: !4089)
!4091 = !DILocation(line: 217, column: 36, scope: !4089)
!4092 = !DILocation(line: 217, column: 7, scope: !4089)
!4093 = !DILocation(line: 215, column: 30, scope: !4084)
!4094 = distinct !{!4094, !4085, !4095}
!4095 = !DILocation(line: 218, column: 2, scope: !4068)
!4096 = distinct !DISubprogram(name: "append_string", scope: !200, file: !200, line: 223, type: !4097, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !4099)
!4097 = !DISubroutineType(types: !4098)
!4098 = !{!107, !3724, !106, !118, !197}
!4099 = !{!4100, !4101, !4102, !4103}
!4100 = !DILocalVariable(name: "cb", arg: 1, scope: !4096, file: !200, line: 223, type: !3724)
!4101 = !DILocalVariable(name: "ctx", arg: 2, scope: !4096, file: !200, line: 223, type: !106)
!4102 = !DILocalVariable(name: "str", arg: 3, scope: !4096, file: !200, line: 223, type: !118)
!4103 = !DILocalVariable(name: "strl", arg: 4, scope: !4096, file: !200, line: 223, type: !197)
!4104 = !DILocation(line: 0, scope: !4096)
!4105 = !DILocation(line: 225, column: 9, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4096, file: !200, line: 225, column: 6)
!4107 = !DILocation(line: 225, column: 6, scope: !4096)
!4108 = !DILocation(line: 226, column: 14, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4106, file: !200, line: 225, column: 18)
!4110 = !DILocation(line: 226, column: 12, scope: !4109)
!4111 = !DILocation(line: 226, column: 3, scope: !4109)
!4112 = !DILocation(line: 229, column: 14, scope: !4096)
!4113 = !DILocation(line: 229, column: 9, scope: !4096)
!4114 = !DILocation(line: 229, column: 27, scope: !4096)
!4115 = !DILocation(line: 229, column: 39, scope: !4096)
!4116 = !DILocation(line: 230, column: 17, scope: !4096)
!4117 = !DILocation(line: 230, column: 9, scope: !4096)
!4118 = !DILocation(line: 230, column: 2, scope: !4096)
!4119 = !DILocation(line: 231, column: 1, scope: !4096)
!4120 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !212, file: !212, line: 45, type: !214, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4121)
!4121 = !{!4122}
!4122 = !DILocalVariable(name: "c", arg: 1, scope: !4120, file: !212, line: 45, type: !107)
!4123 = !DILocation(line: 0, scope: !4120)
!4124 = !DILocation(line: 50, column: 2, scope: !4120)
!4125 = distinct !DISubprogram(name: "__printk_hook_install", scope: !212, file: !212, line: 63, type: !4126, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4128)
!4126 = !DISubroutineType(types: !4127)
!4127 = !{null, !213}
!4128 = !{!4129}
!4129 = !DILocalVariable(name: "fn", arg: 1, scope: !4125, file: !212, line: 63, type: !213)
!4130 = !DILocation(line: 0, scope: !4125)
!4131 = !DILocation(line: 65, column: 12, scope: !4125)
!4132 = !DILocation(line: 66, column: 1, scope: !4125)
!4133 = distinct !DISubprogram(name: "__printk_get_hook", scope: !212, file: !212, line: 76, type: !125, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !2166)
!4134 = !DILocation(line: 78, column: 9, scope: !4133)
!4135 = !DILocation(line: 78, column: 2, scope: !4133)
!4136 = distinct !DISubprogram(name: "vprintk", scope: !212, file: !212, line: 113, type: !4137, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4145)
!4137 = !DISubroutineType(types: !4138)
!4138 = !{null, !118, !4139}
!4139 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3212, line: 99, baseType: !4140)
!4140 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3212, line: 40, baseType: !4141)
!4141 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !212, baseType: !4142)
!4142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4143)
!4143 = !{!4144}
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4142, file: !212, line: 79, baseType: !106, size: 32)
!4145 = !{!4146, !4147, !4148}
!4146 = !DILocalVariable(name: "fmt", arg: 1, scope: !4136, file: !212, line: 113, type: !118)
!4147 = !DILocalVariable(name: "ap", arg: 2, scope: !4136, file: !212, line: 113, type: !4139)
!4148 = !DILocalVariable(name: "ctx", scope: !4149, file: !212, line: 121, type: !4151)
!4149 = distinct !DILexicalBlock(scope: !4150, file: !212, line: 120, column: 27)
!4150 = distinct !DILexicalBlock(scope: !4136, file: !212, line: 120, column: 6)
!4151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !212, line: 81, size: 32, elements: !4152)
!4152 = !{!4153, !4154}
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4151, file: !212, line: 85, baseType: !32, size: 32)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4151, file: !212, line: 86, baseType: !4155, offset: 32)
!4155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, elements: !4156)
!4156 = !{!4157}
!4157 = !DISubrange(count: 0)
!4158 = !DILocation(line: 0, scope: !4136)
!4159 = !DILocation(line: 148, column: 3, scope: !4160)
!4160 = distinct !DILexicalBlock(scope: !4150, file: !212, line: 138, column: 9)
!4161 = !DILocation(line: 155, column: 1, scope: !4136)
!4162 = distinct !DISubprogram(name: "char_out", scope: !212, file: !212, line: 107, type: !4163, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4165)
!4163 = !DISubroutineType(types: !4164)
!4164 = !{!107, !107, !106}
!4165 = !{!4166, !4167}
!4166 = !DILocalVariable(name: "c", arg: 1, scope: !4162, file: !212, line: 107, type: !107)
!4167 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4162, file: !212, line: 107, type: !106)
!4168 = !DILocation(line: 0, scope: !4162)
!4169 = !DILocation(line: 110, column: 9, scope: !4162)
!4170 = !DILocation(line: 110, column: 2, scope: !4162)
!4171 = distinct !DISubprogram(name: "cbvprintf", scope: !3244, file: !3244, line: 739, type: !4172, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4174)
!4172 = !DISubroutineType(types: !4173)
!4173 = !{!107, !3592, !106, !118, !4139}
!4174 = !{!4175, !4176, !4177, !4178}
!4175 = !DILocalVariable(name: "out", arg: 1, scope: !4171, file: !3244, line: 739, type: !3592)
!4176 = !DILocalVariable(name: "ctx", arg: 2, scope: !4171, file: !3244, line: 739, type: !106)
!4177 = !DILocalVariable(name: "format", arg: 3, scope: !4171, file: !3244, line: 739, type: !118)
!4178 = !DILocalVariable(name: "ap", arg: 4, scope: !4171, file: !3244, line: 739, type: !4139)
!4179 = !DILocation(line: 0, scope: !4171)
!4180 = !DILocation(line: 741, column: 9, scope: !4171)
!4181 = !DILocation(line: 741, column: 2, scope: !4171)
!4182 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !212, file: !212, line: 157, type: !4183, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4185)
!4183 = !DISubroutineType(types: !4184)
!4184 = !{null, !193, !185}
!4185 = !{!4186, !4187, !4188}
!4186 = !DILocalVariable(name: "c", arg: 1, scope: !4182, file: !212, line: 157, type: !193)
!4187 = !DILocalVariable(name: "n", arg: 2, scope: !4182, file: !212, line: 157, type: !185)
!4188 = !DILocalVariable(name: "i", scope: !4182, file: !212, line: 159, type: !185)
!4189 = !DILocation(line: 0, scope: !4182)
!4190 = !DILocation(line: 164, column: 16, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4192, file: !212, line: 164, column: 2)
!4192 = distinct !DILexicalBlock(scope: !4182, file: !212, line: 164, column: 2)
!4193 = !DILocation(line: 164, column: 2, scope: !4192)
!4194 = !DILocation(line: 165, column: 3, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4191, file: !212, line: 164, column: 26)
!4196 = !DILocation(line: 165, column: 13, scope: !4195)
!4197 = !DILocation(line: 164, column: 22, scope: !4191)
!4198 = distinct !{!4198, !4193, !4199}
!4199 = !DILocation(line: 166, column: 2, scope: !4192)
!4200 = !DILocation(line: 171, column: 1, scope: !4182)
!4201 = distinct !DISubprogram(name: "printk", scope: !212, file: !212, line: 203, type: !4202, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4204)
!4202 = !DISubroutineType(types: !4203)
!4203 = !{null, !118, null}
!4204 = !{!4205, !4206}
!4205 = !DILocalVariable(name: "fmt", arg: 1, scope: !4201, file: !212, line: 203, type: !118)
!4206 = !DILocalVariable(name: "ap", scope: !4201, file: !212, line: 205, type: !4139)
!4207 = !DILocation(line: 0, scope: !4201)
!4208 = !DILocation(line: 205, column: 2, scope: !4201)
!4209 = !DILocation(line: 205, column: 10, scope: !4201)
!4210 = !DILocation(line: 207, column: 2, scope: !4201)
!4211 = !DILocation(line: 209, column: 2, scope: !4201)
!4212 = !DILocation(line: 211, column: 2, scope: !4201)
!4213 = !DILocation(line: 212, column: 1, scope: !4201)
!4214 = distinct !DISubprogram(name: "snprintk", scope: !212, file: !212, line: 239, type: !4215, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4217)
!4215 = !DISubroutineType(types: !4216)
!4216 = !{!107, !193, !185, !118, null}
!4217 = !{!4218, !4219, !4220, !4221, !4222}
!4218 = !DILocalVariable(name: "str", arg: 1, scope: !4214, file: !212, line: 239, type: !193)
!4219 = !DILocalVariable(name: "size", arg: 2, scope: !4214, file: !212, line: 239, type: !185)
!4220 = !DILocalVariable(name: "fmt", arg: 3, scope: !4214, file: !212, line: 239, type: !118)
!4221 = !DILocalVariable(name: "ap", scope: !4214, file: !212, line: 241, type: !4139)
!4222 = !DILocalVariable(name: "ret", scope: !4214, file: !212, line: 242, type: !107)
!4223 = !DILocation(line: 0, scope: !4214)
!4224 = !DILocation(line: 241, column: 2, scope: !4214)
!4225 = !DILocation(line: 241, column: 10, scope: !4214)
!4226 = !DILocation(line: 244, column: 2, scope: !4214)
!4227 = !DILocation(line: 245, column: 8, scope: !4214)
!4228 = !DILocation(line: 246, column: 2, scope: !4214)
!4229 = !DILocation(line: 249, column: 1, scope: !4214)
!4230 = !DILocation(line: 248, column: 2, scope: !4214)
!4231 = distinct !DISubprogram(name: "vsnprintk", scope: !212, file: !212, line: 251, type: !4232, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4234)
!4232 = !DISubroutineType(types: !4233)
!4233 = !{!107, !193, !185, !118, !4139}
!4234 = !{!4235, !4236, !4237, !4238, !4239}
!4235 = !DILocalVariable(name: "str", arg: 1, scope: !4231, file: !212, line: 251, type: !193)
!4236 = !DILocalVariable(name: "size", arg: 2, scope: !4231, file: !212, line: 251, type: !185)
!4237 = !DILocalVariable(name: "fmt", arg: 3, scope: !4231, file: !212, line: 251, type: !118)
!4238 = !DILocalVariable(name: "ap", arg: 4, scope: !4231, file: !212, line: 251, type: !4139)
!4239 = !DILocalVariable(name: "ctx", scope: !4231, file: !212, line: 253, type: !4240)
!4240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !212, line: 217, size: 96, elements: !4241)
!4241 = !{!4242, !4243, !4244}
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4240, file: !212, line: 218, baseType: !193, size: 32)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4240, file: !212, line: 219, baseType: !107, size: 32, offset: 32)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4240, file: !212, line: 220, baseType: !107, size: 32, offset: 64)
!4245 = !DILocation(line: 0, scope: !4231)
!4246 = !DILocation(line: 253, column: 2, scope: !4231)
!4247 = !DILocation(line: 253, column: 21, scope: !4231)
!4248 = !DILocation(line: 253, column: 27, scope: !4231)
!4249 = !DILocation(line: 255, column: 2, scope: !4231)
!4250 = !DILocation(line: 257, column: 10, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4231, file: !212, line: 257, column: 6)
!4252 = !DILocation(line: 257, column: 22, scope: !4251)
!4253 = !DILocation(line: 257, column: 16, scope: !4251)
!4254 = !DILocation(line: 257, column: 6, scope: !4231)
!4255 = !DILocation(line: 258, column: 3, scope: !4256)
!4256 = distinct !DILexicalBlock(scope: !4251, file: !212, line: 257, column: 27)
!4257 = !DILocation(line: 258, column: 18, scope: !4256)
!4258 = !DILocation(line: 259, column: 2, scope: !4256)
!4259 = !DILocation(line: 262, column: 1, scope: !4231)
!4260 = !DILocation(line: 261, column: 2, scope: !4231)
!4261 = distinct !DISubprogram(name: "str_out", scope: !212, file: !212, line: 223, type: !4262, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4265)
!4262 = !DISubroutineType(types: !4263)
!4263 = !{!107, !107, !4264}
!4264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4240, size: 32)
!4265 = !{!4266, !4267}
!4266 = !DILocalVariable(name: "c", arg: 1, scope: !4261, file: !212, line: 223, type: !107)
!4267 = !DILocalVariable(name: "ctx", arg: 2, scope: !4261, file: !212, line: 223, type: !4264)
!4268 = !DILocation(line: 0, scope: !4261)
!4269 = !DILocation(line: 225, column: 11, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4261, file: !212, line: 225, column: 6)
!4271 = !DILocation(line: 225, column: 15, scope: !4270)
!4272 = !DILocation(line: 0, scope: !4270)
!4273 = !DILocation(line: 225, column: 23, scope: !4270)
!4274 = !DILocation(line: 225, column: 45, scope: !4270)
!4275 = !DILocation(line: 225, column: 37, scope: !4270)
!4276 = !DILocation(line: 225, column: 6, scope: !4261)
!4277 = !DILocation(line: 226, column: 8, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4270, file: !212, line: 225, column: 50)
!4279 = !DILocation(line: 226, column: 13, scope: !4278)
!4280 = !DILocation(line: 227, column: 3, scope: !4278)
!4281 = !DILocation(line: 230, column: 29, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4261, file: !212, line: 230, column: 6)
!4283 = !DILocation(line: 230, column: 17, scope: !4282)
!4284 = !DILocation(line: 230, column: 6, scope: !4261)
!4285 = !DILocation(line: 231, column: 22, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4282, file: !212, line: 230, column: 34)
!4287 = !DILocation(line: 231, column: 3, scope: !4286)
!4288 = !DILocation(line: 231, column: 26, scope: !4286)
!4289 = !DILocation(line: 232, column: 2, scope: !4286)
!4290 = !DILocation(line: 233, column: 28, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4282, file: !212, line: 232, column: 9)
!4292 = !DILocation(line: 233, column: 22, scope: !4291)
!4293 = !DILocation(line: 233, column: 3, scope: !4291)
!4294 = !DILocation(line: 233, column: 26, scope: !4291)
!4295 = !DILocation(line: 237, column: 1, scope: !4261)
!4296 = distinct !DISubprogram(name: "z_thread_entry", scope: !4297, file: !4297, line: 30, type: !4298, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !4300)
!4297 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4298 = !DISubroutineType(types: !4299)
!4299 = !{null, !559, !106, !106, !106}
!4300 = !{!4301, !4302, !4303, !4304}
!4301 = !DILocalVariable(name: "entry", arg: 1, scope: !4296, file: !4297, line: 30, type: !559)
!4302 = !DILocalVariable(name: "p1", arg: 2, scope: !4296, file: !4297, line: 31, type: !106)
!4303 = !DILocalVariable(name: "p2", arg: 3, scope: !4296, file: !4297, line: 31, type: !106)
!4304 = !DILocalVariable(name: "p3", arg: 4, scope: !4296, file: !4297, line: 31, type: !106)
!4305 = !DILocation(line: 0, scope: !4296)
!4306 = !DILocation(line: 36, column: 2, scope: !4296)
!4307 = !DILocation(line: 38, column: 17, scope: !4296)
!4308 = !DILocation(line: 38, column: 2, scope: !4296)
!4309 = !DILocation(line: 45, column: 2, scope: !4296)
!4310 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !4311, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !2166)
!4311 = !DISubroutineType(types: !4312)
!4312 = !{!4313}
!4313 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !4314)
!4314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4315, size: 32)
!4315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !4316)
!4316 = !{!4317, !4375, !4387, !4388, !4389, !4390, !4391, !4397, !4412}
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4315, file: !309, line: 247, baseType: !4318, size: 384)
!4318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !4319)
!4319 = !{!4320, !4344, !4351, !4352, !4353, !4362, !4363, !4364}
!4320 = !DIDerivedType(tag: DW_TAG_member, scope: !4318, file: !309, line: 60, baseType: !4321, size: 64)
!4321 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4318, file: !309, line: 60, size: 64, elements: !4322)
!4322 = !{!4323, !4338}
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4321, file: !309, line: 61, baseType: !4324, size: 64)
!4324 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !4325)
!4325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !4326)
!4326 = !{!4327, !4333}
!4327 = !DIDerivedType(tag: DW_TAG_member, scope: !4325, file: !319, line: 38, baseType: !4328, size: 32)
!4328 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4325, file: !319, line: 38, size: 32, elements: !4329)
!4329 = !{!4330, !4332}
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4328, file: !319, line: 39, baseType: !4331, size: 32)
!4331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4325, size: 32)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4328, file: !319, line: 40, baseType: !4331, size: 32)
!4333 = !DIDerivedType(tag: DW_TAG_member, scope: !4325, file: !319, line: 42, baseType: !4334, size: 32, offset: 32)
!4334 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4325, file: !319, line: 42, size: 32, elements: !4335)
!4335 = !{!4336, !4337}
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4334, file: !319, line: 43, baseType: !4331, size: 32)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4334, file: !319, line: 44, baseType: !4331, size: 32)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4321, file: !309, line: 62, baseType: !4339, size: 64)
!4339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !4340)
!4340 = !{!4341}
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4339, file: !335, line: 50, baseType: !4342, size: 64)
!4342 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4343, size: 64, elements: !340)
!4343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4339, size: 32)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4318, file: !309, line: 68, baseType: !4345, size: 32, offset: 64)
!4345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4346, size: 32)
!4346 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !4347)
!4347 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !4348)
!4348 = !{!4349}
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4347, file: !345, line: 232, baseType: !4350, size: 64)
!4350 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !4325)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4318, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4318, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!4353 = !DIDerivedType(tag: DW_TAG_member, scope: !4318, file: !309, line: 90, baseType: !4354, size: 16, offset: 112)
!4354 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4318, file: !309, line: 90, size: 16, elements: !4355)
!4355 = !{!4356, !4361}
!4356 = !DIDerivedType(tag: DW_TAG_member, scope: !4354, file: !309, line: 91, baseType: !4357, size: 16)
!4357 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4354, file: !309, line: 91, size: 16, elements: !4358)
!4358 = !{!4359, !4360}
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4357, file: !309, line: 96, baseType: !359, size: 8)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4357, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4354, file: !309, line: 100, baseType: !197, size: 16)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4318, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4318, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4318, file: !309, line: 131, baseType: !4365, size: 192, offset: 192)
!4365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !4366)
!4366 = !{!4367, !4368, !4374}
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4365, file: !345, line: 245, baseType: !4324, size: 64)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4365, file: !345, line: 246, baseType: !4369, size: 32, offset: 64)
!4369 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !4370)
!4370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4371, size: 32)
!4371 = !DISubroutineType(types: !4372)
!4372 = !{null, !4373}
!4373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4365, size: 32)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4365, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4315, file: !309, line: 250, baseType: !4376, size: 288, offset: 384)
!4376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !4377)
!4377 = !{!4378, !4379, !4380, !4381, !4382, !4383, !4384, !4385, !4386}
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4376, file: !379, line: 26, baseType: !152, size: 32)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4376, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4376, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4376, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4376, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4376, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4376, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4376, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4376, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4315, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4315, file: !309, line: 256, baseType: !4346, size: 64, offset: 704)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4315, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4315, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4315, file: !309, line: 300, baseType: !4392, size: 96, offset: 1056)
!4392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !4393)
!4393 = !{!4394, !4395, !4396}
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4392, file: !309, line: 153, baseType: !22, size: 32)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4392, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4392, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4315, file: !309, line: 325, baseType: !4398, size: 32, offset: 1152)
!4398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4399, size: 32)
!4399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !4400)
!4400 = !{!4401, !4407, !4408}
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4399, file: !406, line: 5074, baseType: !4402, size: 96)
!4402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !4403)
!4403 = !{!4404, !4405, !4406}
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4402, file: !410, line: 57, baseType: !413, size: 32)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4402, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4402, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4399, file: !406, line: 5075, baseType: !4346, size: 64, offset: 96)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4399, file: !406, line: 5076, baseType: !4409, size: 32, offset: 160)
!4409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !4410)
!4410 = !{!4411}
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4409, file: !420, line: 52, baseType: !22, size: 32)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4315, file: !309, line: 343, baseType: !4413, size: 64, offset: 1184)
!4413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !4414)
!4414 = !{!4415, !4416}
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4413, file: !379, line: 63, baseType: !152, size: 32)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4413, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!4417 = !DILocation(line: 535, column: 9, scope: !4310)
!4418 = !DILocation(line: 535, column: 2, scope: !4310)
!4419 = distinct !DISubprogram(name: "k_thread_abort", scope: !4420, file: !4420, line: 188, type: !4421, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !4423)
!4420 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!4421 = !DISubroutineType(types: !4422)
!4422 = !{null, !4313}
!4423 = !{!4424}
!4424 = !DILocalVariable(name: "thread", arg: 1, scope: !4419, file: !4420, line: 188, type: !4313)
!4425 = !DILocation(line: 0, scope: !4419)
!4426 = !DILocation(line: 197, column: 2, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4419, file: !4420, line: 197, column: 2)
!4428 = !{i64 2154847196}
!4429 = !DILocation(line: 198, column: 2, scope: !4419)
!4430 = !DILocation(line: 199, column: 1, scope: !4419)
!4431 = distinct !DISubprogram(name: "z_current_get", scope: !4420, file: !4420, line: 173, type: !4311, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !2166)
!4432 = !DILocation(line: 180, column: 2, scope: !4433)
!4433 = distinct !DILexicalBlock(scope: !4431, file: !4420, line: 180, column: 2)
!4434 = !{i64 2154847128}
!4435 = !DILocation(line: 181, column: 9, scope: !4431)
!4436 = !DILocation(line: 181, column: 2, scope: !4431)
!4437 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2518, file: !2518, line: 1338, type: !4438, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4446)
!4438 = !DISubroutineType(types: !4439)
!4439 = !{!107, !3592, !106, !118, !4440, !152}
!4440 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3212, line: 99, baseType: !4441)
!4441 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3212, line: 40, baseType: !4442)
!4442 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2518, baseType: !4443)
!4443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4444)
!4444 = !{!4445}
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4443, file: !2518, baseType: !106, size: 32)
!4446 = !{!4447, !4448, !4449, !4450, !4451, !4452, !4456, !4457, !4458, !4460, !4465, !4508, !4511, !4514, !4515, !4516, !4517, !4518, !4519, !4520, !4523, !4524, !4525, !4529, !4532, !4534, !4537, !4538, !4539, !4544, !4550, !4553, !4557, !4563, !4567, !4570, !4572, !4575}
!4447 = !DILocalVariable(name: "out", arg: 1, scope: !4437, file: !2518, line: 1338, type: !3592)
!4448 = !DILocalVariable(name: "ctx", arg: 2, scope: !4437, file: !2518, line: 1338, type: !106)
!4449 = !DILocalVariable(name: "fp", arg: 3, scope: !4437, file: !2518, line: 1338, type: !118)
!4450 = !DILocalVariable(name: "ap", arg: 4, scope: !4437, file: !2518, line: 1339, type: !4440)
!4451 = !DILocalVariable(name: "flags", arg: 5, scope: !4437, file: !2518, line: 1339, type: !152)
!4452 = !DILocalVariable(name: "buf", scope: !4437, file: !2518, line: 1341, type: !4453)
!4453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 176, elements: !4454)
!4454 = !{!4455}
!4455 = !DISubrange(count: 22)
!4456 = !DILocalVariable(name: "count", scope: !4437, file: !2518, line: 1342, type: !185)
!4457 = !DILocalVariable(name: "sint", scope: !4437, file: !2518, line: 1343, type: !2537)
!4458 = !DILocalVariable(name: "tagged_ap", scope: !4437, file: !2518, line: 1345, type: !4459)
!4459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !145)
!4460 = !DILocalVariable(name: "rc", scope: !4461, file: !2518, line: 1377, type: !107)
!4461 = distinct !DILexicalBlock(scope: !4462, file: !2518, line: 1377, column: 4)
!4462 = distinct !DILexicalBlock(scope: !4463, file: !2518, line: 1376, column: 19)
!4463 = distinct !DILexicalBlock(scope: !4464, file: !2518, line: 1376, column: 7)
!4464 = distinct !DILexicalBlock(scope: !4437, file: !2518, line: 1375, column: 19)
!4465 = !DILocalVariable(name: "state", scope: !4464, file: !2518, line: 1395, type: !4466)
!4466 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4437, file: !2518, line: 1392, size: 192, elements: !4467)
!4467 = !{!4468, !4476}
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4466, file: !2518, line: 1393, baseType: !4469, size: 64)
!4469 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2518, line: 166, size: 64, elements: !4470)
!4470 = !{!4471, !4472, !4473, !4474, !4475}
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4469, file: !2518, line: 168, baseType: !2537, size: 64)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4469, file: !2518, line: 171, baseType: !2540, size: 64)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4469, file: !2518, line: 174, baseType: !183, size: 64)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4469, file: !2518, line: 177, baseType: !181, size: 64)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4469, file: !2518, line: 180, baseType: !106, size: 32)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4466, file: !2518, line: 1394, baseType: !4477, size: 96, offset: 64)
!4477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2518, line: 189, size: 96, elements: !4478)
!4478 = !{!4479, !4480, !4481, !4482, !4483, !4484, !4485, !4486, !4487, !4488, !4489, !4490, !4491, !4492, !4493, !4494, !4495, !4496, !4497, !4498, !4503}
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4477, file: !2518, line: 191, baseType: !145, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4477, file: !2518, line: 194, baseType: !145, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4477, file: !2518, line: 197, baseType: !145, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4477, file: !2518, line: 200, baseType: !145, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4477, file: !2518, line: 203, baseType: !145, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4477, file: !2518, line: 206, baseType: !145, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4477, file: !2518, line: 209, baseType: !145, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4477, file: !2518, line: 212, baseType: !145, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4477, file: !2518, line: 219, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4477, file: !2518, line: 222, baseType: !145, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4477, file: !2518, line: 229, baseType: !145, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4477, file: !2518, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4477, file: !2518, line: 238, baseType: !145, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4477, file: !2518, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4477, file: !2518, line: 244, baseType: !145, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4477, file: !2518, line: 247, baseType: !145, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4477, file: !2518, line: 252, baseType: !145, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4477, file: !2518, line: 257, baseType: !145, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4477, file: !2518, line: 260, baseType: !196, size: 8, offset: 24)
!4498 = !DIDerivedType(tag: DW_TAG_member, scope: !4477, file: !2518, line: 262, baseType: !4499, size: 32, offset: 32)
!4499 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4477, file: !2518, line: 262, size: 32, elements: !4500)
!4500 = !{!4501, !4502}
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4499, file: !2518, line: 267, baseType: !107, size: 32)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4499, file: !2518, line: 289, baseType: !107, size: 32)
!4503 = !DIDerivedType(tag: DW_TAG_member, scope: !4477, file: !2518, line: 292, baseType: !4504, size: 32, offset: 64)
!4504 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4477, file: !2518, line: 292, size: 32, elements: !4505)
!4505 = !{!4506, !4507}
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4504, file: !2518, line: 297, baseType: !107, size: 32)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4504, file: !2518, line: 306, baseType: !107, size: 32)
!4508 = !DILocalVariable(name: "conv", scope: !4464, file: !2518, line: 1400, type: !4509)
!4509 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4510)
!4510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4477, size: 32)
!4511 = !DILocalVariable(name: "value", scope: !4464, file: !2518, line: 1401, type: !4512)
!4512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4513)
!4513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4469, size: 32)
!4514 = !DILocalVariable(name: "sp", scope: !4464, file: !2518, line: 1402, type: !118)
!4515 = !DILocalVariable(name: "width", scope: !4464, file: !2518, line: 1403, type: !107)
!4516 = !DILocalVariable(name: "precision", scope: !4464, file: !2518, line: 1404, type: !107)
!4517 = !DILocalVariable(name: "bps", scope: !4464, file: !2518, line: 1405, type: !118)
!4518 = !DILocalVariable(name: "bpe", scope: !4464, file: !2518, line: 1406, type: !118)
!4519 = !DILocalVariable(name: "sign", scope: !4464, file: !2518, line: 1407, type: !120)
!4520 = !DILocalVariable(name: "arg", scope: !4521, file: !2518, line: 1432, type: !107)
!4521 = distinct !DILexicalBlock(scope: !4522, file: !2518, line: 1431, column: 24)
!4522 = distinct !DILexicalBlock(scope: !4464, file: !2518, line: 1431, column: 7)
!4523 = !DILocalVariable(name: "specifier_cat", scope: !4464, file: !2518, line: 1468, type: !2517)
!4524 = !DILocalVariable(name: "length_mod", scope: !4464, file: !2518, line: 1470, type: !2525)
!4525 = !DILocalVariable(name: "rc", scope: !4526, file: !2518, line: 1575, type: !107)
!4526 = distinct !DILexicalBlock(scope: !4527, file: !2518, line: 1575, column: 4)
!4527 = distinct !DILexicalBlock(scope: !4528, file: !2518, line: 1574, column: 43)
!4528 = distinct !DILexicalBlock(scope: !4464, file: !2518, line: 1574, column: 7)
!4529 = !DILocalVariable(name: "rc", scope: !4530, file: !2518, line: 1584, type: !107)
!4530 = distinct !DILexicalBlock(scope: !4531, file: !2518, line: 1584, column: 4)
!4531 = distinct !DILexicalBlock(scope: !4464, file: !2518, line: 1582, column: 28)
!4532 = !DILocalVariable(name: "len", scope: !4533, file: !2518, line: 1589, type: !185)
!4533 = distinct !DILexicalBlock(scope: !4531, file: !2518, line: 1586, column: 13)
!4534 = !DILocalVariable(name: "len", scope: !4535, file: !2518, line: 1641, type: !185)
!4535 = distinct !DILexicalBlock(scope: !4536, file: !2518, line: 1640, column: 24)
!4536 = distinct !DILexicalBlock(scope: !4531, file: !2518, line: 1640, column: 8)
!4537 = !DILocalVariable(name: "nj_len", scope: !4464, file: !2518, line: 1722, type: !185)
!4538 = !DILocalVariable(name: "pad_len", scope: !4464, file: !2518, line: 1723, type: !107)
!4539 = !DILocalVariable(name: "pad", scope: !4540, file: !2518, line: 1751, type: !120)
!4540 = distinct !DILexicalBlock(scope: !4541, file: !2518, line: 1750, column: 26)
!4541 = distinct !DILexicalBlock(scope: !4542, file: !2518, line: 1750, column: 8)
!4542 = distinct !DILexicalBlock(scope: !4543, file: !2518, line: 1747, column: 18)
!4543 = distinct !DILexicalBlock(scope: !4464, file: !2518, line: 1747, column: 7)
!4544 = !DILocalVariable(name: "rc", scope: !4545, file: !2518, line: 1758, type: !107)
!4545 = distinct !DILexicalBlock(scope: !4546, file: !2518, line: 1758, column: 7)
!4546 = distinct !DILexicalBlock(scope: !4547, file: !2518, line: 1757, column: 21)
!4547 = distinct !DILexicalBlock(scope: !4548, file: !2518, line: 1757, column: 10)
!4548 = distinct !DILexicalBlock(scope: !4549, file: !2518, line: 1756, column: 26)
!4549 = distinct !DILexicalBlock(scope: !4540, file: !2518, line: 1756, column: 9)
!4550 = !DILocalVariable(name: "rc", scope: !4551, file: !2518, line: 1765, type: !107)
!4551 = distinct !DILexicalBlock(scope: !4552, file: !2518, line: 1765, column: 6)
!4552 = distinct !DILexicalBlock(scope: !4540, file: !2518, line: 1764, column: 25)
!4553 = !DILocalVariable(name: "rc", scope: !4554, file: !2518, line: 1774, type: !107)
!4554 = distinct !DILexicalBlock(scope: !4555, file: !2518, line: 1774, column: 4)
!4555 = distinct !DILexicalBlock(scope: !4556, file: !2518, line: 1773, column: 18)
!4556 = distinct !DILexicalBlock(scope: !4464, file: !2518, line: 1773, column: 7)
!4557 = !DILocalVariable(name: "rc", scope: !4558, file: !2518, line: 1819, type: !107)
!4558 = distinct !DILexicalBlock(scope: !4559, file: !2518, line: 1819, column: 5)
!4559 = distinct !DILexicalBlock(scope: !4560, file: !2518, line: 1818, column: 44)
!4560 = distinct !DILexicalBlock(scope: !4561, file: !2518, line: 1818, column: 8)
!4561 = distinct !DILexicalBlock(scope: !4562, file: !2518, line: 1817, column: 10)
!4562 = distinct !DILexicalBlock(scope: !4464, file: !2518, line: 1777, column: 7)
!4563 = !DILocalVariable(name: "rc", scope: !4564, file: !2518, line: 1823, type: !107)
!4564 = distinct !DILexicalBlock(scope: !4565, file: !2518, line: 1823, column: 5)
!4565 = distinct !DILexicalBlock(scope: !4566, file: !2518, line: 1822, column: 26)
!4566 = distinct !DILexicalBlock(scope: !4561, file: !2518, line: 1822, column: 8)
!4567 = !DILocalVariable(name: "rc", scope: !4568, file: !2518, line: 1828, type: !107)
!4568 = distinct !DILexicalBlock(scope: !4569, file: !2518, line: 1828, column: 5)
!4569 = distinct !DILexicalBlock(scope: !4561, file: !2518, line: 1827, column: 26)
!4570 = !DILocalVariable(name: "rc", scope: !4571, file: !2518, line: 1831, type: !107)
!4571 = distinct !DILexicalBlock(scope: !4561, file: !2518, line: 1831, column: 4)
!4572 = !DILocalVariable(name: "rc", scope: !4573, file: !2518, line: 1836, type: !107)
!4573 = distinct !DILexicalBlock(scope: !4574, file: !2518, line: 1836, column: 4)
!4574 = distinct !DILexicalBlock(scope: !4464, file: !2518, line: 1835, column: 21)
!4575 = !DILabel(scope: !4531, name: "prec_int_pad0", file: !2518, line: 1634)
!4576 = !DILocation(line: 0, scope: !4437)
!4577 = !DILocation(line: 1341, column: 2, scope: !4437)
!4578 = !DILocation(line: 1341, column: 7, scope: !4437)
!4579 = !DILocation(line: 1375, column: 2, scope: !4437)
!4580 = !DILocation(line: 1342, column: 9, scope: !4437)
!4581 = !DILocation(line: 1375, column: 9, scope: !4437)
!4582 = !DILocation(line: 1377, column: 4, scope: !4461)
!4583 = !DILocation(line: 0, scope: !4461)
!4584 = !DILocation(line: 1377, column: 4, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4461, file: !2518, line: 1377, column: 4)
!4586 = distinct !{!4586, !4579, !4587}
!4587 = !DILocation(line: 1839, column: 2, scope: !4437)
!4588 = !DILocation(line: 1392, column: 3, scope: !4464)
!4589 = !DILocation(line: 1395, column: 5, scope: !4464)
!4590 = !DILocation(line: 0, scope: !4464)
!4591 = !DILocation(line: 1409, column: 8, scope: !4464)
!4592 = !DILocation(line: 1414, column: 13, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4464, file: !2518, line: 1414, column: 7)
!4594 = !DILocation(line: 1414, column: 7, scope: !4464)
!4595 = !DILocation(line: 1415, column: 12, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4593, file: !2518, line: 1414, column: 25)
!4597 = !DILocation(line: 1417, column: 14, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4596, file: !2518, line: 1417, column: 8)
!4599 = !DILocation(line: 1417, column: 8, scope: !4596)
!4600 = !DILocation(line: 1418, column: 21, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4598, file: !2518, line: 1417, column: 19)
!4602 = !DILocation(line: 1419, column: 13, scope: !4601)
!4603 = !DILocation(line: 1420, column: 4, scope: !4601)
!4604 = !DILocation(line: 1421, column: 20, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4593, file: !2518, line: 1421, column: 14)
!4606 = !DILocation(line: 1421, column: 14, scope: !4593)
!4607 = !DILocation(line: 1431, column: 13, scope: !4522)
!4608 = !DILocation(line: 1431, column: 7, scope: !4464)
!4609 = !DILocation(line: 1432, column: 14, scope: !4521)
!4610 = !DILocation(line: 0, scope: !4521)
!4611 = !DILocation(line: 1434, column: 12, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4521, file: !2518, line: 1434, column: 8)
!4613 = !DILocation(line: 1434, column: 8, scope: !4521)
!4614 = !DILocation(line: 1435, column: 24, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4612, file: !2518, line: 1434, column: 17)
!4616 = !DILocation(line: 1436, column: 4, scope: !4615)
!4617 = !DILocation(line: 1439, column: 20, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4522, file: !2518, line: 1439, column: 14)
!4619 = !DILocation(line: 1439, column: 14, scope: !4522)
!4620 = !DILocation(line: 1469, column: 37, scope: !4464)
!4621 = !DILocation(line: 1448, column: 20, scope: !4464)
!4622 = !DILocation(line: 1449, column: 22, scope: !4464)
!4623 = !DILocation(line: 1471, column: 34, scope: !4464)
!4624 = !DILocation(line: 1478, column: 7, scope: !4464)
!4625 = !DILocation(line: 1479, column: 4, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4627, file: !2518, line: 1478, column: 40)
!4627 = distinct !DILexicalBlock(scope: !4464, file: !2518, line: 1478, column: 7)
!4628 = !DILocation(line: 1484, column: 19, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4626, file: !2518, line: 1479, column: 24)
!4630 = !DILocation(line: 1484, column: 17, scope: !4629)
!4631 = !DILocation(line: 1485, column: 5, scope: !4629)
!4632 = !DILocation(line: 1492, column: 20, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4634, file: !2518, line: 1491, column: 12)
!4634 = distinct !DILexicalBlock(scope: !4629, file: !2518, line: 1487, column: 9)
!4635 = !DILocation(line: 1492, column: 18, scope: !4633)
!4636 = !DILocation(line: 1494, column: 5, scope: !4629)
!4637 = !DILocation(line: 1497, column: 23, scope: !4629)
!4638 = !DILocation(line: 1496, column: 17, scope: !4629)
!4639 = !DILocation(line: 1498, column: 5, scope: !4629)
!4640 = !DILocation(line: 1501, column: 23, scope: !4629)
!4641 = !DILocation(line: 1500, column: 17, scope: !4629)
!4642 = !DILocation(line: 1502, column: 5, scope: !4629)
!4643 = !DILocation(line: 1513, column: 23, scope: !4629)
!4644 = !DILocation(line: 1513, column: 6, scope: !4629)
!4645 = !DILocation(line: 1512, column: 17, scope: !4629)
!4646 = !DILocation(line: 1514, column: 5, scope: !4629)
!4647 = !DILocation(line: 0, scope: !4629)
!4648 = !DILocation(line: 1516, column: 8, scope: !4626)
!4649 = !DILocation(line: 1517, column: 19, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4651, file: !2518, line: 1516, column: 33)
!4651 = distinct !DILexicalBlock(scope: !4626, file: !2518, line: 1516, column: 8)
!4652 = !DILocation(line: 1517, column: 17, scope: !4650)
!4653 = !DILocation(line: 1518, column: 4, scope: !4650)
!4654 = !DILocation(line: 1519, column: 19, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4656, file: !2518, line: 1518, column: 39)
!4656 = distinct !DILexicalBlock(scope: !4651, file: !2518, line: 1518, column: 15)
!4657 = !DILocation(line: 1519, column: 17, scope: !4655)
!4658 = !DILocation(line: 1520, column: 4, scope: !4655)
!4659 = !DILocation(line: 1522, column: 4, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4661, file: !2518, line: 1521, column: 47)
!4661 = distinct !DILexicalBlock(scope: !4627, file: !2518, line: 1521, column: 14)
!4662 = !DILocation(line: 1527, column: 19, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4660, file: !2518, line: 1522, column: 24)
!4664 = !DILocation(line: 1527, column: 17, scope: !4663)
!4665 = !DILocation(line: 1528, column: 5, scope: !4663)
!4666 = !DILocation(line: 0, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4663, file: !2518, line: 1530, column: 9)
!4668 = !DILocation(line: 1540, column: 23, scope: !4663)
!4669 = !DILocation(line: 1539, column: 17, scope: !4663)
!4670 = !DILocation(line: 1542, column: 5, scope: !4663)
!4671 = !DILocation(line: 1545, column: 23, scope: !4663)
!4672 = !DILocation(line: 1544, column: 17, scope: !4663)
!4673 = !DILocation(line: 1547, column: 5, scope: !4663)
!4674 = !DILocation(line: 1551, column: 23, scope: !4663)
!4675 = !DILocation(line: 1551, column: 6, scope: !4663)
!4676 = !DILocation(line: 1550, column: 17, scope: !4663)
!4677 = !DILocation(line: 1552, column: 5, scope: !4663)
!4678 = !DILocation(line: 0, scope: !4663)
!4679 = !DILocation(line: 1554, column: 8, scope: !4660)
!4680 = !DILocation(line: 1555, column: 19, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4682, file: !2518, line: 1554, column: 33)
!4682 = distinct !DILexicalBlock(scope: !4660, file: !2518, line: 1554, column: 8)
!4683 = !DILocation(line: 1555, column: 17, scope: !4681)
!4684 = !DILocation(line: 1556, column: 4, scope: !4681)
!4685 = !DILocation(line: 1557, column: 19, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4687, file: !2518, line: 1556, column: 39)
!4687 = distinct !DILexicalBlock(scope: !4682, file: !2518, line: 1556, column: 15)
!4688 = !DILocation(line: 1557, column: 17, scope: !4686)
!4689 = !DILocation(line: 1558, column: 4, scope: !4686)
!4690 = !DILocation(line: 0, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4692, file: !2518, line: 1560, column: 8)
!4692 = distinct !DILexicalBlock(scope: !4693, file: !2518, line: 1559, column: 45)
!4693 = distinct !DILexicalBlock(scope: !4661, file: !2518, line: 1559, column: 14)
!4694 = !DILocation(line: 1566, column: 17, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4696, file: !2518, line: 1565, column: 46)
!4696 = distinct !DILexicalBlock(scope: !4693, file: !2518, line: 1565, column: 14)
!4697 = !DILocation(line: 1566, column: 15, scope: !4695)
!4698 = !DILocation(line: 1567, column: 3, scope: !4695)
!4699 = !DILocation(line: 1574, column: 21, scope: !4528)
!4700 = !DILocation(line: 1575, column: 4, scope: !4526)
!4701 = !DILocation(line: 0, scope: !4526)
!4702 = !DILocation(line: 1575, column: 4, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4526, file: !2518, line: 1575, column: 4)
!4704 = !DILocation(line: 1582, column: 17, scope: !4464)
!4705 = !DILocation(line: 1582, column: 3, scope: !4464)
!4706 = !DILocation(line: 1584, column: 4, scope: !4530)
!4707 = !DILocation(line: 0, scope: !4530)
!4708 = !DILocation(line: 1584, column: 4, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4530, file: !2518, line: 1584, column: 4)
!4710 = !DILocation(line: 1587, column: 31, scope: !4533)
!4711 = !DILocation(line: 1591, column: 18, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4533, file: !2518, line: 1591, column: 8)
!4713 = !DILocation(line: 1591, column: 8, scope: !4533)
!4714 = !DILocation(line: 1592, column: 11, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4712, file: !2518, line: 1591, column: 24)
!4716 = !DILocation(line: 0, scope: !4533)
!4717 = !DILocation(line: 1593, column: 4, scope: !4715)
!4718 = !DILocation(line: 1594, column: 11, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4712, file: !2518, line: 1593, column: 11)
!4720 = !DILocation(line: 1604, column: 51, scope: !4531)
!4721 = !DILocation(line: 1604, column: 13, scope: !4531)
!4722 = !DILocation(line: 1604, column: 11, scope: !4531)
!4723 = !DILocation(line: 1606, column: 4, scope: !4531)
!4724 = !DILocation(line: 1609, column: 14, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4531, file: !2518, line: 1609, column: 8)
!4726 = !DILocation(line: 1609, column: 8, scope: !4531)
!4727 = !DILocation(line: 1619, column: 18, scope: !4531)
!4728 = !DILocation(line: 1620, column: 13, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4531, file: !2518, line: 1620, column: 8)
!4730 = !DILocation(line: 1620, column: 8, scope: !4531)
!4731 = !DILocation(line: 1622, column: 36, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4729, file: !2518, line: 1620, column: 18)
!4733 = !DILocation(line: 1622, column: 17, scope: !4732)
!4734 = !DILocation(line: 1623, column: 4, scope: !4732)
!4735 = !DILocation(line: 1632, column: 29, scope: !4531)
!4736 = !DILocation(line: 1632, column: 10, scope: !4531)
!4737 = !DILocation(line: 1632, column: 4, scope: !4531)
!4738 = !DILocation(line: 1407, column: 8, scope: !4464)
!4739 = !DILocation(line: 0, scope: !4531)
!4740 = !DILocation(line: 1634, column: 3, scope: !4531)
!4741 = !DILocation(line: 1640, column: 18, scope: !4536)
!4742 = !DILocation(line: 1640, column: 8, scope: !4531)
!4743 = !DILocation(line: 1729, column: 13, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4464, file: !2518, line: 1729, column: 7)
!4745 = !DILocation(line: 1641, column: 22, scope: !4535)
!4746 = !DILocation(line: 0, scope: !4535)
!4747 = !DILocation(line: 1646, column: 21, scope: !4535)
!4748 = !DILocation(line: 1649, column: 13, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4535, file: !2518, line: 1649, column: 9)
!4750 = !DILocation(line: 1649, column: 9, scope: !4535)
!4751 = !DILocation(line: 1650, column: 35, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4749, file: !2518, line: 1649, column: 34)
!4753 = !DILocation(line: 1650, column: 23, scope: !4752)
!4754 = !DILocation(line: 1651, column: 5, scope: !4752)
!4755 = !DILocation(line: 1660, column: 15, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4531, file: !2518, line: 1660, column: 8)
!4757 = !DILocation(line: 1660, column: 19, scope: !4756)
!4758 = !DILocation(line: 1660, column: 8, scope: !4531)
!4759 = !DILocation(line: 1661, column: 23, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4756, file: !2518, line: 1660, column: 28)
!4761 = !DILocation(line: 1661, column: 11, scope: !4760)
!4762 = !DILocation(line: 1665, column: 22, scope: !4760)
!4763 = !DILocation(line: 1666, column: 21, scope: !4760)
!4764 = !DILocation(line: 1668, column: 5, scope: !4760)
!4765 = !DILocation(line: 1677, column: 30, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4767, file: !2518, line: 1676, column: 49)
!4767 = distinct !DILexicalBlock(scope: !4531, file: !2518, line: 1676, column: 8)
!4768 = !DILocation(line: 1677, column: 5, scope: !4766)
!4769 = !DILocation(line: 1680, column: 4, scope: !4531)
!4770 = !DILocation(line: 0, scope: !4712)
!4771 = !DILocation(line: 1597, column: 14, scope: !4533)
!4772 = !DILocation(line: 1699, column: 11, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4464, file: !2518, line: 1699, column: 7)
!4774 = !DILocation(line: 1699, column: 7, scope: !4464)
!4775 = !DILocation(line: 1725, column: 7, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4464, file: !2518, line: 1725, column: 7)
!4777 = !DILocation(line: 1725, column: 12, scope: !4776)
!4778 = !DILocation(line: 1747, column: 13, scope: !4543)
!4779 = !DILocation(line: 1747, column: 7, scope: !4464)
!4780 = !DILocation(line: 1722, column: 24, scope: !4464)
!4781 = !DILocation(line: 1725, column: 7, scope: !4464)
!4782 = !DILocation(line: 1729, column: 7, scope: !4464)
!4783 = !DILocation(line: 1736, column: 13, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4464, file: !2518, line: 1736, column: 7)
!4785 = !DILocation(line: 1735, column: 19, scope: !4464)
!4786 = !DILocation(line: 1736, column: 7, scope: !4464)
!4787 = !DILocation(line: 1748, column: 10, scope: !4542)
!4788 = !DILocation(line: 1750, column: 15, scope: !4541)
!4789 = !DILocation(line: 1750, column: 8, scope: !4542)
!4790 = !DILocation(line: 0, scope: !4540)
!4791 = !DILocation(line: 1756, column: 15, scope: !4549)
!4792 = !DILocation(line: 1756, column: 9, scope: !4540)
!4793 = !DILocation(line: 1758, column: 7, scope: !4545)
!4794 = !DILocation(line: 0, scope: !4545)
!4795 = !DILocation(line: 1758, column: 7, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4545, file: !2518, line: 1758, column: 7)
!4797 = !DILocation(line: 1764, column: 5, scope: !4540)
!4798 = !DILocation(line: 0, scope: !4542)
!4799 = !DILocation(line: 1764, column: 20, scope: !4540)
!4800 = !DILocation(line: 1764, column: 17, scope: !4540)
!4801 = !DILocation(line: 1765, column: 6, scope: !4551)
!4802 = !DILocation(line: 0, scope: !4551)
!4803 = !DILocation(line: 1765, column: 6, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4551, file: !2518, line: 1765, column: 6)
!4805 = distinct !{!4805, !4797, !4806}
!4806 = !DILocation(line: 1766, column: 5, scope: !4540)
!4807 = !DILocation(line: 1773, column: 12, scope: !4556)
!4808 = !DILocation(line: 1773, column: 7, scope: !4464)
!4809 = !DILocation(line: 1773, column: 7, scope: !4556)
!4810 = !DILocation(line: 1774, column: 4, scope: !4554)
!4811 = !DILocation(line: 0, scope: !4554)
!4812 = !DILocation(line: 1774, column: 4, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4554, file: !2518, line: 1774, column: 4)
!4814 = !DILocation(line: 1818, column: 8, scope: !4560)
!4815 = !DILocation(line: 1818, column: 27, scope: !4560)
!4816 = !DILocation(line: 1818, column: 25, scope: !4560)
!4817 = !DILocation(line: 1818, column: 8, scope: !4561)
!4818 = !DILocation(line: 1819, column: 5, scope: !4558)
!4819 = !DILocation(line: 0, scope: !4558)
!4820 = !DILocation(line: 1819, column: 5, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4558, file: !2518, line: 1819, column: 5)
!4822 = !DILocation(line: 1822, column: 14, scope: !4566)
!4823 = !DILocation(line: 1822, column: 8, scope: !4561)
!4824 = !DILocation(line: 1823, column: 5, scope: !4564)
!4825 = !DILocation(line: 0, scope: !4564)
!4826 = !DILocation(line: 1823, column: 5, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4564, file: !2518, line: 1823, column: 5)
!4828 = !DILocation(line: 1826, column: 20, scope: !4561)
!4829 = !DILocation(line: 1827, column: 4, scope: !4561)
!4830 = !DILocation(line: 0, scope: !4561)
!4831 = !DILocation(line: 1827, column: 21, scope: !4561)
!4832 = !DILocation(line: 1827, column: 18, scope: !4561)
!4833 = !DILocation(line: 1828, column: 5, scope: !4568)
!4834 = !DILocation(line: 0, scope: !4568)
!4835 = !DILocation(line: 1828, column: 5, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4568, file: !2518, line: 1828, column: 5)
!4837 = distinct !{!4837, !4829, !4838}
!4838 = !DILocation(line: 1829, column: 4, scope: !4561)
!4839 = !DILocation(line: 1831, column: 4, scope: !4571)
!4840 = !DILocation(line: 0, scope: !4571)
!4841 = !DILocation(line: 1831, column: 4, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4571, file: !2518, line: 1831, column: 4)
!4843 = !DILocation(line: 1835, column: 16, scope: !4464)
!4844 = !DILocation(line: 1835, column: 3, scope: !4464)
!4845 = !DILocation(line: 1836, column: 4, scope: !4573)
!4846 = !DILocation(line: 0, scope: !4573)
!4847 = !DILocation(line: 1836, column: 4, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4573, file: !2518, line: 1836, column: 4)
!4849 = !DILocation(line: 1837, column: 4, scope: !4574)
!4850 = distinct !{!4850, !4844, !4851}
!4851 = !DILocation(line: 1838, column: 3, scope: !4464)
!4852 = !DILocation(line: 1844, column: 1, scope: !4437)
!4853 = distinct !DISubprogram(name: "extract_conversion", scope: !2518, file: !2518, line: 642, type: !4854, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4856)
!4854 = !DISubroutineType(types: !4855)
!4855 = !{!118, !4510, !118}
!4856 = !{!4857, !4858}
!4857 = !DILocalVariable(name: "conv", arg: 1, scope: !4853, file: !2518, line: 642, type: !4510)
!4858 = !DILocalVariable(name: "sp", arg: 2, scope: !4853, file: !2518, line: 643, type: !118)
!4859 = !DILocation(line: 0, scope: !4853)
!4860 = !DILocation(line: 645, column: 10, scope: !4853)
!4861 = !DILocation(line: 653, column: 2, scope: !4853)
!4862 = !DILocation(line: 654, column: 6, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4853, file: !2518, line: 654, column: 6)
!4864 = !DILocation(line: 654, column: 10, scope: !4863)
!4865 = !DILocation(line: 654, column: 6, scope: !4853)
!4866 = !DILocation(line: 655, column: 24, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4863, file: !2518, line: 654, column: 18)
!4868 = !DILocation(line: 655, column: 19, scope: !4867)
!4869 = !DILocation(line: 656, column: 3, scope: !4867)
!4870 = !DILocation(line: 659, column: 7, scope: !4853)
!4871 = !DILocation(line: 660, column: 7, scope: !4853)
!4872 = !DILocation(line: 661, column: 7, scope: !4853)
!4873 = !DILocation(line: 662, column: 7, scope: !4853)
!4874 = !DILocation(line: 663, column: 7, scope: !4853)
!4875 = !DILocation(line: 665, column: 2, scope: !4853)
!4876 = !DILocation(line: 666, column: 1, scope: !4853)
!4877 = distinct !DISubprogram(name: "outs", scope: !2518, file: !2518, line: 1319, type: !4878, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4880)
!4878 = !DISubroutineType(types: !4879)
!4879 = !{!107, !3592, !106, !118, !118}
!4880 = !{!4881, !4882, !4883, !4884, !4885, !4886}
!4881 = !DILocalVariable(name: "out", arg: 1, scope: !4877, file: !2518, line: 1319, type: !3592)
!4882 = !DILocalVariable(name: "ctx", arg: 2, scope: !4877, file: !2518, line: 1320, type: !106)
!4883 = !DILocalVariable(name: "sp", arg: 3, scope: !4877, file: !2518, line: 1321, type: !118)
!4884 = !DILocalVariable(name: "ep", arg: 4, scope: !4877, file: !2518, line: 1322, type: !118)
!4885 = !DILocalVariable(name: "count", scope: !4877, file: !2518, line: 1324, type: !185)
!4886 = !DILocalVariable(name: "rc", scope: !4887, file: !2518, line: 1327, type: !107)
!4887 = distinct !DILexicalBlock(scope: !4877, file: !2518, line: 1326, column: 45)
!4888 = !DILocation(line: 0, scope: !4877)
!4889 = !DILocation(line: 1326, column: 2, scope: !4877)
!4890 = !DILocation(line: 1324, column: 9, scope: !4877)
!4891 = !DILocation(line: 1326, column: 13, scope: !4877)
!4892 = !DILocation(line: 1326, column: 19, scope: !4877)
!4893 = !DILocation(line: 1327, column: 21, scope: !4887)
!4894 = !DILocation(line: 1326, column: 36, scope: !4877)
!4895 = !DILocation(line: 1326, column: 39, scope: !4877)
!4896 = !DILocation(line: 1327, column: 24, scope: !4887)
!4897 = !DILocation(line: 1327, column: 16, scope: !4887)
!4898 = !DILocation(line: 1327, column: 12, scope: !4887)
!4899 = !DILocation(line: 0, scope: !4887)
!4900 = !DILocation(line: 1329, column: 10, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4887, file: !2518, line: 1329, column: 7)
!4902 = !DILocation(line: 1329, column: 7, scope: !4887)
!4903 = distinct !{!4903, !4889, !4904}
!4904 = !DILocation(line: 1333, column: 2, scope: !4877)
!4905 = !DILocation(line: 1336, column: 1, scope: !4877)
!4906 = distinct !DISubprogram(name: "encode_uint", scope: !2518, file: !2518, line: 788, type: !4907, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4909)
!4907 = !DISubroutineType(types: !4908)
!4908 = !{!193, !2540, !4510, !193, !118}
!4909 = !{!4910, !4911, !4912, !4913, !4914, !4915, !4917, !4918}
!4910 = !DILocalVariable(name: "value", arg: 1, scope: !4906, file: !2518, line: 788, type: !2540)
!4911 = !DILocalVariable(name: "conv", arg: 2, scope: !4906, file: !2518, line: 789, type: !4510)
!4912 = !DILocalVariable(name: "bps", arg: 3, scope: !4906, file: !2518, line: 790, type: !193)
!4913 = !DILocalVariable(name: "bpe", arg: 4, scope: !4906, file: !2518, line: 791, type: !118)
!4914 = !DILocalVariable(name: "upcase", scope: !4906, file: !2518, line: 793, type: !145)
!4915 = !DILocalVariable(name: "radix", scope: !4906, file: !2518, line: 794, type: !4916)
!4916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4917 = !DILocalVariable(name: "bp", scope: !4906, file: !2518, line: 795, type: !193)
!4918 = !DILocalVariable(name: "lsv", scope: !4919, file: !2518, line: 798, type: !32)
!4919 = distinct !DILexicalBlock(scope: !4906, file: !2518, line: 797, column: 5)
!4920 = !DILocation(line: 0, scope: !4906)
!4921 = !DILocation(line: 793, column: 35, scope: !4906)
!4922 = !DILocation(line: 793, column: 24, scope: !4906)
!4923 = !DILocation(line: 793, column: 16, scope: !4906)
!4924 = !DILocation(line: 794, column: 29, scope: !4906)
!4925 = !DILocation(line: 795, column: 24, scope: !4906)
!4926 = !DILocation(line: 795, column: 17, scope: !4906)
!4927 = !DILocation(line: 797, column: 2, scope: !4906)
!4928 = !DILocation(line: 802, column: 9, scope: !4919)
!4929 = !DILocation(line: 798, column: 22, scope: !4919)
!4930 = !DILocation(line: 0, scope: !4919)
!4931 = !DILocation(line: 800, column: 16, scope: !4919)
!4932 = !DILocation(line: 800, column: 11, scope: !4919)
!4933 = !DILocation(line: 800, column: 4, scope: !4919)
!4934 = !DILocation(line: 800, column: 9, scope: !4919)
!4935 = !DILocation(line: 803, column: 18, scope: !4906)
!4936 = !DILocation(line: 803, column: 24, scope: !4906)
!4937 = !DILocation(line: 803, column: 2, scope: !4919)
!4938 = distinct !{!4938, !4927, !4939}
!4939 = !DILocation(line: 803, column: 37, scope: !4906)
!4940 = !DILocation(line: 808, column: 12, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4906, file: !2518, line: 808, column: 6)
!4942 = !DILocation(line: 808, column: 6, scope: !4906)
!4943 = !DILocation(line: 809, column: 7, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4941, file: !2518, line: 808, column: 23)
!4945 = !DILocation(line: 813, column: 3, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4947, file: !2518, line: 811, column: 27)
!4947 = distinct !DILexicalBlock(scope: !4948, file: !2518, line: 811, column: 14)
!4948 = distinct !DILexicalBlock(scope: !4944, file: !2518, line: 809, column: 7)
!4949 = !DILocation(line: 0, scope: !4948)
!4950 = !DILocation(line: 818, column: 2, scope: !4906)
!4951 = distinct !DISubprogram(name: "store_count", scope: !2518, file: !2518, line: 1280, type: !4952, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4956)
!4952 = !DISubroutineType(types: !4953)
!4953 = !{null, !4954, !106, !107}
!4954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4955, size: 32)
!4955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4477)
!4956 = !{!4957, !4958, !4959}
!4957 = !DILocalVariable(name: "conv", arg: 1, scope: !4951, file: !2518, line: 1280, type: !4954)
!4958 = !DILocalVariable(name: "dp", arg: 2, scope: !4951, file: !2518, line: 1281, type: !106)
!4959 = !DILocalVariable(name: "count", arg: 3, scope: !4951, file: !2518, line: 1282, type: !107)
!4960 = !DILocation(line: 0, scope: !4951)
!4961 = !DILocation(line: 1284, column: 38, scope: !4951)
!4962 = !DILocation(line: 1284, column: 2, scope: !4951)
!4963 = !DILocation(line: 1286, column: 4, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4951, file: !2518, line: 1284, column: 50)
!4965 = !DILocation(line: 1286, column: 14, scope: !4964)
!4966 = !DILocation(line: 1287, column: 3, scope: !4964)
!4967 = !DILocation(line: 1289, column: 24, scope: !4964)
!4968 = !DILocation(line: 1289, column: 22, scope: !4964)
!4969 = !DILocation(line: 1290, column: 3, scope: !4964)
!4970 = !DILocation(line: 1292, column: 18, scope: !4964)
!4971 = !DILocation(line: 1292, column: 4, scope: !4964)
!4972 = !DILocation(line: 1292, column: 16, scope: !4964)
!4973 = !DILocation(line: 1293, column: 3, scope: !4964)
!4974 = !DILocation(line: 1295, column: 4, scope: !4964)
!4975 = !DILocation(line: 1295, column: 15, scope: !4964)
!4976 = !DILocation(line: 1296, column: 3, scope: !4964)
!4977 = !DILocation(line: 1298, column: 22, scope: !4964)
!4978 = !DILocation(line: 1298, column: 4, scope: !4964)
!4979 = !DILocation(line: 1298, column: 20, scope: !4964)
!4980 = !DILocation(line: 1299, column: 3, scope: !4964)
!4981 = !DILocation(line: 1301, column: 21, scope: !4964)
!4982 = !DILocation(line: 1301, column: 4, scope: !4964)
!4983 = !DILocation(line: 1301, column: 19, scope: !4964)
!4984 = !DILocation(line: 1302, column: 3, scope: !4964)
!4985 = !DILocation(line: 1304, column: 4, scope: !4964)
!4986 = !DILocation(line: 1304, column: 17, scope: !4964)
!4987 = !DILocation(line: 1305, column: 3, scope: !4964)
!4988 = !DILocation(line: 1307, column: 4, scope: !4964)
!4989 = !DILocation(line: 1307, column: 20, scope: !4964)
!4990 = !DILocation(line: 1308, column: 3, scope: !4964)
!4991 = !DILocation(line: 1316, column: 1, scope: !4951)
!4992 = distinct !DISubprogram(name: "isupper", scope: !4993, file: !4993, line: 16, type: !214, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4994)
!4993 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4994 = !{!4995}
!4995 = !DILocalVariable(name: "a", arg: 1, scope: !4992, file: !4993, line: 16, type: !107)
!4996 = !DILocation(line: 0, scope: !4992)
!4997 = !DILocation(line: 18, column: 29, scope: !4992)
!4998 = !DILocation(line: 18, column: 45, scope: !4992)
!4999 = !DILocation(line: 18, column: 2, scope: !4992)
!5000 = distinct !DISubprogram(name: "conversion_radix", scope: !2518, file: !2518, line: 761, type: !5001, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5003)
!5001 = !DISubroutineType(types: !5002)
!5002 = !{!185, !120}
!5003 = !{!5004}
!5004 = !DILocalVariable(name: "specifier", arg: 1, scope: !5000, file: !2518, line: 761, type: !120)
!5005 = !DILocation(line: 0, scope: !5000)
!5006 = !DILocation(line: 763, column: 2, scope: !5000)
!5007 = !DILocation(line: 770, column: 3, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !5000, file: !2518, line: 763, column: 21)
!5009 = !DILocation(line: 774, column: 3, scope: !5008)
!5010 = !DILocation(line: 0, scope: !5008)
!5011 = !DILocation(line: 776, column: 1, scope: !5000)
!5012 = distinct !DISubprogram(name: "extract_flags", scope: !2518, file: !2518, line: 339, type: !4854, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5013)
!5013 = !{!5014, !5015, !5016}
!5014 = !DILocalVariable(name: "conv", arg: 1, scope: !5012, file: !2518, line: 339, type: !4510)
!5015 = !DILocalVariable(name: "sp", arg: 2, scope: !5012, file: !2518, line: 340, type: !118)
!5016 = !DILocalVariable(name: "loop", scope: !5012, file: !2518, line: 342, type: !145)
!5017 = !DILocation(line: 0, scope: !5012)
!5018 = !DILocation(line: 344, column: 2, scope: !5012)
!5019 = !DILocation(line: 345, column: 11, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5012, file: !2518, line: 344, column: 5)
!5021 = !DILocation(line: 345, column: 3, scope: !5020)
!5022 = !DILocation(line: 351, column: 4, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5020, file: !2518, line: 345, column: 16)
!5024 = !DILocation(line: 354, column: 4, scope: !5023)
!5025 = !DILocation(line: 357, column: 4, scope: !5023)
!5026 = !DILocation(line: 360, column: 4, scope: !5023)
!5027 = !DILocation(line: 0, scope: !5023)
!5028 = !DILocation(line: 370, column: 12, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5012, file: !2518, line: 370, column: 6)
!5030 = !DILocation(line: 370, column: 22, scope: !5029)
!5031 = !DILocation(line: 371, column: 19, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5029, file: !2518, line: 370, column: 42)
!5033 = !DILocation(line: 372, column: 2, scope: !5032)
!5034 = !DILocation(line: 376, column: 2, scope: !5012)
!5035 = distinct !DISubprogram(name: "extract_width", scope: !2518, file: !2518, line: 388, type: !4854, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5036)
!5036 = !{!5037, !5038, !5039, !5040}
!5037 = !DILocalVariable(name: "conv", arg: 1, scope: !5035, file: !2518, line: 388, type: !4510)
!5038 = !DILocalVariable(name: "sp", arg: 2, scope: !5035, file: !2518, line: 389, type: !118)
!5039 = !DILocalVariable(name: "wp", scope: !5035, file: !2518, line: 398, type: !118)
!5040 = !DILocalVariable(name: "width", scope: !5035, file: !2518, line: 399, type: !185)
!5041 = !DILocation(line: 0, scope: !5035)
!5042 = !DILocation(line: 391, column: 8, scope: !5035)
!5043 = !DILocation(line: 391, column: 22, scope: !5035)
!5044 = !DILocation(line: 393, column: 6, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5035, file: !2518, line: 393, column: 6)
!5046 = !DILocation(line: 393, column: 10, scope: !5045)
!5047 = !DILocation(line: 393, column: 6, scope: !5035)
!5048 = !DILocation(line: 394, column: 20, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5045, file: !2518, line: 393, column: 18)
!5050 = !DILocation(line: 395, column: 10, scope: !5049)
!5051 = !DILocation(line: 395, column: 3, scope: !5049)
!5052 = !DILocation(line: 399, column: 17, scope: !5035)
!5053 = !DILocation(line: 401, column: 6, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5035, file: !2518, line: 401, column: 6)
!5055 = !DILocation(line: 401, column: 9, scope: !5054)
!5056 = !DILocation(line: 401, column: 6, scope: !5035)
!5057 = !DILocation(line: 402, column: 23, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5054, file: !2518, line: 401, column: 16)
!5059 = !DILocation(line: 403, column: 9, scope: !5058)
!5060 = !DILocation(line: 403, column: 21, scope: !5058)
!5061 = !DILocation(line: 405, column: 11, scope: !5058)
!5062 = !DILocation(line: 404, column: 21, scope: !5058)
!5063 = !DILocation(line: 406, column: 2, scope: !5058)
!5064 = !DILocation(line: 409, column: 1, scope: !5035)
!5065 = distinct !DISubprogram(name: "extract_prec", scope: !2518, file: !2518, line: 420, type: !4854, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5066)
!5066 = !{!5067, !5068, !5069}
!5067 = !DILocalVariable(name: "conv", arg: 1, scope: !5065, file: !2518, line: 420, type: !4510)
!5068 = !DILocalVariable(name: "sp", arg: 2, scope: !5065, file: !2518, line: 421, type: !118)
!5069 = !DILocalVariable(name: "prec", scope: !5065, file: !2518, line: 435, type: !185)
!5070 = !DILocation(line: 0, scope: !5065)
!5071 = !DILocation(line: 423, column: 24, scope: !5065)
!5072 = !DILocation(line: 423, column: 28, scope: !5065)
!5073 = !DILocation(line: 423, column: 8, scope: !5065)
!5074 = !DILocation(line: 423, column: 21, scope: !5065)
!5075 = !DILocation(line: 425, column: 6, scope: !5065)
!5076 = !DILocation(line: 428, column: 2, scope: !5065)
!5077 = !DILocation(line: 430, column: 6, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5065, file: !2518, line: 430, column: 6)
!5079 = !DILocation(line: 430, column: 10, scope: !5078)
!5080 = !DILocation(line: 430, column: 6, scope: !5065)
!5081 = !DILocation(line: 431, column: 19, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5078, file: !2518, line: 430, column: 18)
!5083 = !DILocation(line: 432, column: 10, scope: !5082)
!5084 = !DILocation(line: 432, column: 3, scope: !5082)
!5085 = !DILocation(line: 435, column: 16, scope: !5065)
!5086 = !DILocation(line: 437, column: 8, scope: !5065)
!5087 = !DILocation(line: 437, column: 19, scope: !5065)
!5088 = !DILocation(line: 439, column: 10, scope: !5065)
!5089 = !DILocation(line: 438, column: 20, scope: !5065)
!5090 = !DILocation(line: 441, column: 9, scope: !5065)
!5091 = !DILocation(line: 442, column: 1, scope: !5065)
!5092 = distinct !DISubprogram(name: "extract_length", scope: !2518, file: !2518, line: 453, type: !4854, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5093)
!5093 = !{!5094, !5095}
!5094 = !DILocalVariable(name: "conv", arg: 1, scope: !5092, file: !2518, line: 453, type: !4510)
!5095 = !DILocalVariable(name: "sp", arg: 2, scope: !5092, file: !2518, line: 454, type: !118)
!5096 = !DILocation(line: 0, scope: !5092)
!5097 = !DILocation(line: 456, column: 10, scope: !5092)
!5098 = !DILocation(line: 456, column: 2, scope: !5092)
!5099 = !DILocation(line: 458, column: 8, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5101, file: !2518, line: 458, column: 7)
!5101 = distinct !DILexicalBlock(scope: !5092, file: !2518, line: 456, column: 15)
!5102 = !DILocation(line: 458, column: 7, scope: !5100)
!5103 = !DILocation(line: 458, column: 13, scope: !5100)
!5104 = !DILocation(line: 0, scope: !5100)
!5105 = !DILocation(line: 458, column: 7, scope: !5101)
!5106 = !DILocation(line: 459, column: 21, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5100, file: !2518, line: 458, column: 21)
!5108 = !DILocation(line: 460, column: 4, scope: !5107)
!5109 = !DILocation(line: 461, column: 3, scope: !5107)
!5110 = !DILocation(line: 462, column: 21, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5100, file: !2518, line: 461, column: 10)
!5112 = !DILocation(line: 466, column: 8, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5101, file: !2518, line: 466, column: 7)
!5114 = !DILocation(line: 466, column: 7, scope: !5113)
!5115 = !DILocation(line: 466, column: 13, scope: !5113)
!5116 = !DILocation(line: 0, scope: !5113)
!5117 = !DILocation(line: 466, column: 7, scope: !5101)
!5118 = !DILocation(line: 467, column: 21, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5113, file: !2518, line: 466, column: 21)
!5120 = !DILocation(line: 468, column: 4, scope: !5119)
!5121 = !DILocation(line: 469, column: 3, scope: !5119)
!5122 = !DILocation(line: 470, column: 21, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5113, file: !2518, line: 469, column: 10)
!5124 = !DILocation(line: 474, column: 9, scope: !5101)
!5125 = !DILocation(line: 474, column: 20, scope: !5101)
!5126 = !DILocation(line: 475, column: 3, scope: !5101)
!5127 = !DILocation(line: 476, column: 3, scope: !5101)
!5128 = !DILocation(line: 478, column: 9, scope: !5101)
!5129 = !DILocation(line: 478, column: 20, scope: !5101)
!5130 = !DILocation(line: 479, column: 3, scope: !5101)
!5131 = !DILocation(line: 480, column: 3, scope: !5101)
!5132 = !DILocation(line: 482, column: 9, scope: !5101)
!5133 = !DILocation(line: 482, column: 20, scope: !5101)
!5134 = !DILocation(line: 483, column: 3, scope: !5101)
!5135 = !DILocation(line: 484, column: 3, scope: !5101)
!5136 = !DILocation(line: 486, column: 9, scope: !5101)
!5137 = !DILocation(line: 486, column: 20, scope: !5101)
!5138 = !DILocation(line: 487, column: 3, scope: !5101)
!5139 = !DILocation(line: 492, column: 21, scope: !5101)
!5140 = !DILocation(line: 493, column: 3, scope: !5101)
!5141 = !DILocation(line: 495, column: 9, scope: !5101)
!5142 = !DILocation(line: 495, column: 20, scope: !5101)
!5143 = !DILocation(line: 496, column: 3, scope: !5101)
!5144 = !DILocation(line: 498, column: 2, scope: !5092)
!5145 = distinct !DISubprogram(name: "extract_specifier", scope: !2518, file: !2518, line: 513, type: !4854, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5146)
!5146 = !{!5147, !5148, !5149, !5150}
!5147 = !DILocalVariable(name: "conv", arg: 1, scope: !5145, file: !2518, line: 513, type: !4510)
!5148 = !DILocalVariable(name: "sp", arg: 2, scope: !5145, file: !2518, line: 514, type: !118)
!5149 = !DILocalVariable(name: "unsupported", scope: !5145, file: !2518, line: 516, type: !145)
!5150 = !DILabel(scope: !5151, name: "int_conv", file: !2518, line: 526)
!5151 = distinct !DILexicalBlock(scope: !5145, file: !2518, line: 520, column: 27)
!5152 = !DILocation(line: 0, scope: !5145)
!5153 = !DILocation(line: 518, column: 20, scope: !5145)
!5154 = !DILocation(line: 518, column: 8, scope: !5145)
!5155 = !DILocation(line: 518, column: 18, scope: !5145)
!5156 = !DILocation(line: 520, column: 2, scope: !5145)
!5157 = !DILocation(line: 525, column: 3, scope: !5151)
!5158 = !DILocation(line: 0, scope: !5151)
!5159 = !DILocation(line: 526, column: 1, scope: !5151)
!5160 = !DILocation(line: 528, column: 24, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5151, file: !2518, line: 528, column: 7)
!5162 = !DILocation(line: 528, column: 7, scope: !5151)
!5163 = !DILocation(line: 535, column: 23, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5151, file: !2518, line: 535, column: 7)
!5165 = !DILocation(line: 535, column: 7, scope: !5151)
!5166 = !DILocation(line: 536, column: 36, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5164, file: !2518, line: 535, column: 31)
!5168 = !DILocation(line: 537, column: 3, scope: !5167)
!5169 = !DILocation(line: 570, column: 9, scope: !5151)
!5170 = !DILocation(line: 570, column: 23, scope: !5151)
!5171 = !DILocation(line: 575, column: 4, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5173, file: !2518, line: 573, column: 48)
!5173 = distinct !DILexicalBlock(scope: !5151, file: !2518, line: 573, column: 7)
!5174 = !DILocation(line: 603, column: 9, scope: !5151)
!5175 = !DILocation(line: 603, column: 23, scope: !5151)
!5176 = !DILocation(line: 605, column: 24, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5151, file: !2518, line: 605, column: 7)
!5178 = !DILocation(line: 605, column: 7, scope: !5151)
!5179 = !DILocation(line: 612, column: 9, scope: !5151)
!5180 = !DILocation(line: 612, column: 23, scope: !5151)
!5181 = !DILocation(line: 619, column: 24, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5151, file: !2518, line: 619, column: 7)
!5183 = !DILocation(line: 619, column: 7, scope: !5151)
!5184 = !DILocation(line: 625, column: 9, scope: !5151)
!5185 = !DILocation(line: 625, column: 17, scope: !5151)
!5186 = !DILocation(line: 626, column: 3, scope: !5151)
!5187 = !DILocation(line: 629, column: 20, scope: !5145)
!5188 = !DILocation(line: 629, column: 8, scope: !5145)
!5189 = !DILocation(line: 518, column: 23, scope: !5145)
!5190 = !DILocation(line: 631, column: 2, scope: !5145)
!5191 = distinct !DISubprogram(name: "extract_decimal", scope: !2518, file: !2518, line: 318, type: !5192, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5194)
!5192 = !DISubroutineType(types: !5193)
!5193 = !{!185, !184}
!5194 = !{!5195, !5196, !5197}
!5195 = !DILocalVariable(name: "str", arg: 1, scope: !5191, file: !2518, line: 318, type: !184)
!5196 = !DILocalVariable(name: "sp", scope: !5191, file: !2518, line: 320, type: !118)
!5197 = !DILocalVariable(name: "val", scope: !5191, file: !2518, line: 321, type: !185)
!5198 = !DILocation(line: 0, scope: !5191)
!5199 = !DILocation(line: 320, column: 19, scope: !5191)
!5200 = !DILocation(line: 323, column: 37, scope: !5191)
!5201 = !DILocation(line: 323, column: 17, scope: !5191)
!5202 = !DILocation(line: 323, column: 9, scope: !5191)
!5203 = !DILocation(line: 323, column: 2, scope: !5191)
!5204 = !DILocation(line: 324, column: 13, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5191, file: !2518, line: 323, column: 43)
!5206 = !DILocation(line: 324, column: 24, scope: !5205)
!5207 = !DILocation(line: 324, column: 19, scope: !5205)
!5208 = !DILocation(line: 324, column: 27, scope: !5205)
!5209 = distinct !{!5209, !5203, !5210}
!5210 = !DILocation(line: 325, column: 2, scope: !5191)
!5211 = !DILocation(line: 326, column: 7, scope: !5191)
!5212 = !DILocation(line: 327, column: 2, scope: !5191)
!5213 = distinct !DISubprogram(name: "isdigit", scope: !4993, file: !4993, line: 43, type: !214, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5214)
!5214 = !{!5215}
!5215 = !DILocalVariable(name: "a", arg: 1, scope: !5213, file: !4993, line: 43, type: !107)
!5216 = !DILocation(line: 0, scope: !5213)
!5217 = !DILocation(line: 45, column: 29, scope: !5213)
!5218 = !DILocation(line: 45, column: 45, scope: !5213)
!5219 = !DILocation(line: 45, column: 2, scope: !5213)
!5220 = distinct !DISubprogram(name: "assert_post_action", scope: !5221, file: !5221, line: 26, type: !5222, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !5224)
!5221 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5222 = !DISubroutineType(types: !5223)
!5223 = !{null, !118, !32}
!5224 = !{!5225, !5226}
!5225 = !DILocalVariable(name: "file", arg: 1, scope: !5220, file: !5221, line: 26, type: !118)
!5226 = !DILocalVariable(name: "line", arg: 2, scope: !5220, file: !5221, line: 26, type: !32)
!5227 = !DILocation(line: 0, scope: !5220)
!5228 = !DILocation(line: 43, column: 2, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5220, file: !5221, line: 43, column: 2)
!5230 = !{i64 2154852540, i64 2154852556, i64 2154852582, i64 2154852610, i64 2154852630}
!5231 = !DILocation(line: 44, column: 1, scope: !5220)
!5232 = distinct !DISubprogram(name: "assert_print", scope: !5221, file: !5221, line: 46, type: !4202, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !5233)
!5233 = !{!5234, !5235}
!5234 = !DILocalVariable(name: "fmt", arg: 1, scope: !5232, file: !5221, line: 46, type: !118)
!5235 = !DILocalVariable(name: "ap", scope: !5232, file: !5221, line: 48, type: !5236)
!5236 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3212, line: 99, baseType: !5237)
!5237 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3212, line: 40, baseType: !5238)
!5238 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5221, baseType: !5239)
!5239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5240)
!5240 = !{!5241}
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5239, file: !5221, line: 48, baseType: !106, size: 32)
!5242 = !DILocation(line: 0, scope: !5232)
!5243 = !DILocation(line: 48, column: 2, scope: !5232)
!5244 = !DILocation(line: 48, column: 10, scope: !5232)
!5245 = !DILocation(line: 50, column: 2, scope: !5232)
!5246 = !DILocation(line: 52, column: 2, scope: !5232)
!5247 = !DILocation(line: 54, column: 2, scope: !5232)
!5248 = !DILocation(line: 55, column: 1, scope: !5232)
!5249 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5250, file: !5250, line: 9, type: !3089, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !2166)
!5250 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!5251 = !DILocation(line: 11, column: 1, scope: !5249)
!5252 = !{i64 2147566800, i64 2147566843, i64 2147566883}
!5253 = !DILocation(line: 12, column: 1, scope: !5249)
!5254 = !{i64 2147571027, i64 2147571070, i64 2147571110}
!5255 = !DILocation(line: 13, column: 1, scope: !5249)
!5256 = !{i64 2147571236, i64 2147571279, i64 2147571319}
!5257 = !DILocation(line: 14, column: 1, scope: !5249)
!5258 = !{i64 2147571405, i64 2147571448, i64 2147571488}
!5259 = !DILocation(line: 15, column: 1, scope: !5249)
!5260 = !{i64 2147571568, i64 2147571611, i64 2147571651}
!5261 = !DILocation(line: 16, column: 1, scope: !5249)
!5262 = !{i64 2147571752, i64 2147571795, i64 2147571835}
!5263 = !DILocation(line: 17, column: 1, scope: !5249)
!5264 = !{i64 2147571931, i64 2147571974, i64 2147572014}
!5265 = !DILocation(line: 18, column: 1, scope: !5249)
!5266 = !{i64 2147572174, i64 2147572217, i64 2147572257}
!5267 = !DILocation(line: 19, column: 1, scope: !5249)
!5268 = !{i64 2147572409, i64 2147572452, i64 2147572492}
!5269 = !DILocation(line: 20, column: 1, scope: !5249)
!5270 = !{i64 2147572596, i64 2147572639, i64 2147572679}
!5271 = !DILocation(line: 21, column: 1, scope: !5249)
!5272 = !{i64 2147572812, i64 2147572855, i64 2147572895}
!5273 = !DILocation(line: 22, column: 1, scope: !5249)
!5274 = !{i64 2147573015, i64 2147573058, i64 2147573098}
!5275 = !DILocation(line: 23, column: 1, scope: !5249)
!5276 = !{i64 2147573218, i64 2147573261, i64 2147573301}
!5277 = !DILocation(line: 24, column: 1, scope: !5249)
!5278 = !{i64 2147573393, i64 2147573436, i64 2147573476}
!5279 = !DILocation(line: 25, column: 1, scope: !5249)
!5280 = !{i64 2147573601, i64 2147573644, i64 2147573684}
!5281 = !DILocation(line: 26, column: 1, scope: !5249)
!5282 = !{i64 2147573805, i64 2147573848, i64 2147573888}
!5283 = !DILocation(line: 27, column: 1, scope: !5249)
!5284 = !{i64 2147573998, i64 2147574041, i64 2147574081}
!5285 = !DILocation(line: 28, column: 1, scope: !5249)
!5286 = !{i64 2147574200, i64 2147574243, i64 2147574283}
!5287 = !DILocation(line: 29, column: 1, scope: !5249)
!5288 = !{i64 2147574399, i64 2147574442, i64 2147574482}
!5289 = !DILocation(line: 30, column: 1, scope: !5249)
!5290 = !{i64 2147574626, i64 2147574669, i64 2147574709}
!5291 = !DILocation(line: 31, column: 1, scope: !5249)
!5292 = !{i64 2147574828, i64 2147574871, i64 2147574911}
!5293 = !DILocation(line: 32, column: 1, scope: !5249)
!5294 = !{i64 2147575043, i64 2147575086, i64 2147575126}
!5295 = !DILocation(line: 33, column: 1, scope: !5249)
!5296 = !{i64 2147575260, i64 2147575303, i64 2147575343}
!5297 = !DILocation(line: 34, column: 1, scope: !5249)
!5298 = !{i64 2147575432, i64 2147575475, i64 2147575515}
!5299 = !DILocation(line: 35, column: 1, scope: !5249)
!5300 = !{i64 2147575634, i64 2147575677, i64 2147575717}
!5301 = !DILocation(line: 36, column: 1, scope: !5249)
!5302 = !{i64 2147575860, i64 2147575903, i64 2147575943}
!5303 = !DILocation(line: 37, column: 1, scope: !5249)
!5304 = !{i64 2147576059, i64 2147576102, i64 2147576142}
!5305 = !DILocation(line: 38, column: 1, scope: !5249)
!5306 = !{i64 2147576234, i64 2147576277, i64 2147576317}
!5307 = !DILocation(line: 39, column: 1, scope: !5249)
!5308 = !{i64 2147576502, i64 2147576545, i64 2147576585}
!5309 = !DILocation(line: 40, column: 1, scope: !5249)
!5310 = !{i64 2147576755, i64 2147576798, i64 2147576838}
!5311 = !DILocation(line: 41, column: 1, scope: !5249)
!5312 = !{i64 2147576996, i64 2147577039, i64 2147577079}
!5313 = !DILocation(line: 42, column: 1, scope: !5249)
!5314 = !{i64 2147577231, i64 2147577274, i64 2147577314}
!5315 = !DILocation(line: 43, column: 1, scope: !5249)
!5316 = !{i64 2147577463, i64 2147577506, i64 2147577546}
!5317 = !DILocation(line: 44, column: 1, scope: !5249)
!5318 = !{i64 2147577689, i64 2147577732, i64 2147577772}
!5319 = !DILocation(line: 45, column: 1, scope: !5249)
!5320 = !{i64 2147577927, i64 2147577970, i64 2147578010}
!5321 = !DILocation(line: 46, column: 1, scope: !5249)
!5322 = !{i64 2147578153, i64 2147578196, i64 2147578236}
!5323 = !DILocation(line: 47, column: 1, scope: !5249)
!5324 = !{i64 2147578388, i64 2147578431, i64 2147578471}
!5325 = !DILocation(line: 48, column: 1, scope: !5249)
!5326 = !{i64 2147578623, i64 2147578666, i64 2147578706}
!5327 = !DILocation(line: 49, column: 1, scope: !5249)
!5328 = !{i64 2147578861, i64 2147578904, i64 2147578944}
!5329 = !DILocation(line: 50, column: 1, scope: !5249)
!5330 = !{i64 2147579135, i64 2147579178, i64 2147579218}
!5331 = !DILocation(line: 51, column: 1, scope: !5249)
!5332 = !{i64 2147579373, i64 2147579416, i64 2147579456}
!5333 = !DILocation(line: 52, column: 1, scope: !5249)
!5334 = !{i64 2147579626, i64 2147579669, i64 2147579709}
!5335 = !DILocation(line: 53, column: 1, scope: !5249)
!5336 = !{i64 2147583931, i64 2147583974, i64 2147584014}
!5337 = !DILocation(line: 54, column: 1, scope: !5249)
!5338 = !{i64 2147584181, i64 2147584224, i64 2147584264}
!5339 = !DILocation(line: 55, column: 1, scope: !5249)
!5340 = !{i64 2147584422, i64 2147584465, i64 2147584505}
!5341 = !DILocation(line: 56, column: 1, scope: !5249)
!5342 = !{i64 2147584669, i64 2147584712, i64 2147584752}
!5343 = !DILocation(line: 57, column: 1, scope: !5249)
!5344 = !{i64 2147584904, i64 2147584947, i64 2147584987}
!5345 = !DILocation(line: 58, column: 1, scope: !5249)
!5346 = !{i64 2147585139, i64 2147585182, i64 2147585222}
!5347 = !DILocation(line: 59, column: 1, scope: !5249)
!5348 = !{i64 2147585374, i64 2147585417, i64 2147585457}
!5349 = !DILocation(line: 60, column: 1, scope: !5249)
!5350 = !{i64 2147585612, i64 2147585655, i64 2147585695}
!5351 = !DILocation(line: 61, column: 1, scope: !5249)
!5352 = !{i64 2147585853, i64 2147585896, i64 2147585936}
!5353 = !DILocation(line: 62, column: 1, scope: !5249)
!5354 = !{i64 2147586133, i64 2147586176, i64 2147586216}
!5355 = !DILocation(line: 63, column: 1, scope: !5249)
!5356 = !{i64 2147586392, i64 2147586435, i64 2147586475}
!5357 = !DILocation(line: 64, column: 1, scope: !5249)
!5358 = !{i64 2147586630, i64 2147586673, i64 2147586713}
!5359 = !DILocation(line: 65, column: 1, scope: !5249)
!5360 = !{i64 2147586889, i64 2147586932, i64 2147586972}
!5361 = !DILocation(line: 66, column: 1, scope: !5249)
!5362 = !{i64 2147587118, i64 2147587161, i64 2147587201}
!5363 = !DILocation(line: 67, column: 1, scope: !5249)
!5364 = !{i64 2147587326, i64 2147587369, i64 2147587409}
!5365 = !DILocation(line: 68, column: 1, scope: !5249)
!5366 = !{i64 2147587537, i64 2147587580, i64 2147587620}
!5367 = !DILocation(line: 69, column: 1, scope: !5249)
!5368 = !{i64 2147587772, i64 2147587815, i64 2147587855}
!5369 = !DILocation(line: 70, column: 1, scope: !5249)
!5370 = !{i64 2147588001, i64 2147588044, i64 2147588084}
!5371 = !DILocation(line: 71, column: 1, scope: !5249)
!5372 = !{i64 2147588218, i64 2147588261, i64 2147588301}
!5373 = !DILocation(line: 72, column: 1, scope: !5249)
!5374 = !{i64 2147588447, i64 2147588490, i64 2147588530}
!5375 = !DILocation(line: 73, column: 1, scope: !5249)
!5376 = !{i64 2147588685, i64 2147588728, i64 2147588768}
!5377 = !DILocation(line: 74, column: 1, scope: !5249)
!5378 = !{i64 2147588917, i64 2147588960, i64 2147589000}
!5379 = !DILocation(line: 75, column: 1, scope: !5249)
!5380 = !{i64 2147589143, i64 2147589186, i64 2147589226}
!5381 = !DILocation(line: 76, column: 1, scope: !5249)
!5382 = !{i64 2147589360, i64 2147589403, i64 2147589443}
!5383 = !DILocation(line: 77, column: 1, scope: !5249)
!5384 = !{i64 2147589592, i64 2147589635, i64 2147589675}
!5385 = !DILocation(line: 78, column: 1, scope: !5249)
!5386 = !{i64 2147589818, i64 2147589861, i64 2147589901}
!5387 = !DILocation(line: 79, column: 1, scope: !5249)
!5388 = !{i64 2147590032, i64 2147590075, i64 2147590115}
!5389 = !DILocation(line: 80, column: 1, scope: !5249)
!5390 = !{i64 2147590252, i64 2147590295, i64 2147590335}
!5391 = !DILocation(line: 81, column: 1, scope: !5249)
!5392 = !{i64 2147590484, i64 2147590527, i64 2147590567}
!5393 = !DILocation(line: 82, column: 1, scope: !5249)
!5394 = !{i64 2147590692, i64 2147590735, i64 2147590775}
!5395 = !DILocation(line: 83, column: 1, scope: !5249)
!5396 = !{i64 2147590897, i64 2147590940, i64 2147590980}
!5397 = !DILocation(line: 84, column: 1, scope: !5249)
!5398 = !{i64 2147591114, i64 2147591157, i64 2147591197}
!5399 = !DILocation(line: 85, column: 1, scope: !5249)
!5400 = !{i64 2147591328, i64 2147591371, i64 2147591411}
!5401 = !DILocation(line: 86, column: 1, scope: !5249)
!5402 = !{i64 2147591554, i64 2147591597, i64 2147591637}
!5403 = !DILocation(line: 87, column: 1, scope: !5249)
!5404 = !{i64 2147591774, i64 2147591817, i64 2147591857}
!5405 = !DILocation(line: 88, column: 1, scope: !5249)
!5406 = !{i64 2147596040, i64 2147596083, i64 2147596123}
!5407 = !DILocation(line: 89, column: 1, scope: !5249)
!5408 = !{i64 2147596272, i64 2147596315, i64 2147596355}
!5409 = !DILocation(line: 90, column: 1, scope: !5249)
!5410 = !{i64 2147596507, i64 2147596550, i64 2147596590}
!5411 = !DILocation(line: 91, column: 1, scope: !5249)
!5412 = !{i64 2147596757, i64 2147596800, i64 2147596840}
!5413 = !DILocation(line: 92, column: 1, scope: !5249)
!5414 = !{i64 2147597007, i64 2147597050, i64 2147597090}
!5415 = !DILocation(line: 93, column: 1, scope: !5249)
!5416 = !{i64 2147597245, i64 2147597288, i64 2147597328}
!5417 = !DILocation(line: 94, column: 1, scope: !5249)
!5418 = !{i64 2147597456, i64 2147597499, i64 2147597539}
!5419 = !DILocation(line: 95, column: 1, scope: !5249)
!5420 = !{i64 2147597673, i64 2147597716, i64 2147597756}
!5421 = !DILocation(line: 96, column: 1, scope: !5249)
!5422 = !{i64 2147597869, i64 2147597912, i64 2147597952}
!5423 = !DILocation(line: 97, column: 1, scope: !5249)
!5424 = !{i64 2147598071, i64 2147598114, i64 2147598154}
!5425 = !DILocation(line: 98, column: 1, scope: !5249)
!5426 = !{i64 2147598264, i64 2147598307, i64 2147598347}
!5427 = !DILocation(line: 99, column: 1, scope: !5249)
!5428 = !{i64 2147598472, i64 2147598515, i64 2147598555}
!5429 = !DILocation(line: 100, column: 1, scope: !5249)
!5430 = !{i64 2147598668, i64 2147598711, i64 2147598751}
!5431 = !DILocation(line: 101, column: 1, scope: !5249)
!5432 = !{i64 2147598918, i64 2147598961, i64 2147599001}
!5433 = !DILocation(line: 102, column: 1, scope: !5249)
!5434 = !{i64 2147599129, i64 2147599172, i64 2147599212}
!5435 = !DILocation(line: 103, column: 1, scope: !5249)
!5436 = !{i64 2147599328, i64 2147599371, i64 2147599411}
!5437 = !DILocation(line: 104, column: 1, scope: !5249)
!5438 = !{i64 2147599503, i64 2147599546, i64 2147599586}
!5439 = !DILocation(line: 105, column: 1, scope: !5249)
!5440 = !{i64 2147599687, i64 2147599730, i64 2147599770}
!5441 = !DILocation(line: 106, column: 1, scope: !5249)
!5442 = !{i64 2147599889, i64 2147599932, i64 2147599972}
!5443 = !DILocation(line: 107, column: 1, scope: !5249)
!5444 = !{i64 2147600070, i64 2147600113, i64 2147600153}
!5445 = !DILocation(line: 108, column: 1, scope: !5249)
!5446 = !{i64 2147600269, i64 2147600312, i64 2147600352}
!5447 = !DILocation(line: 109, column: 1, scope: !5249)
!5448 = !{i64 2147600474, i64 2147600517, i64 2147600557}
!5449 = !DILocation(line: 110, column: 1, scope: !5249)
!5450 = !{i64 2147600667, i64 2147600710, i64 2147600750}
!5451 = !DILocation(line: 111, column: 1, scope: !5249)
!5452 = !{i64 2147600833, i64 2147600876, i64 2147600916}
!5453 = !DILocation(line: 112, column: 1, scope: !5249)
!5454 = !{i64 2147601017, i64 2147601060, i64 2147601100}
!5455 = !DILocation(line: 113, column: 1, scope: !5249)
!5456 = !{i64 2147601207, i64 2147601250, i64 2147601290}
!5457 = !DILocation(line: 114, column: 1, scope: !5249)
!5458 = !{i64 2147601391, i64 2147601434, i64 2147601474}
!5459 = !DILocation(line: 115, column: 1, scope: !5249)
!5460 = !{i64 2147601605, i64 2147601648, i64 2147601688}
!5461 = !DILocation(line: 116, column: 1, scope: !5249)
!5462 = !{i64 2147601816, i64 2147601859, i64 2147601899}
!5463 = !DILocation(line: 117, column: 1, scope: !5249)
!5464 = !{i64 2147602039, i64 2147602082, i64 2147602122}
!5465 = !DILocation(line: 118, column: 1, scope: !5249)
!5466 = !{i64 2147602223, i64 2147602266, i64 2147602306}
!5467 = !DILocation(line: 119, column: 1, scope: !5249)
!5468 = !{i64 2147602437, i64 2147602480, i64 2147602520}
!5469 = !DILocation(line: 120, column: 1, scope: !5249)
!5470 = !{i64 2147602603, i64 2147602646, i64 2147602686}
!5471 = !DILocation(line: 121, column: 1, scope: !5249)
!5472 = !{i64 2147602784, i64 2147602827, i64 2147602867}
!5473 = !DILocation(line: 122, column: 1, scope: !5249)
!5474 = !{i64 2147602977, i64 2147603020, i64 2147603060}
!5475 = !DILocation(line: 123, column: 1, scope: !5249)
!5476 = !{i64 2147603203, i64 2147603246, i64 2147603286}
!5477 = !DILocation(line: 124, column: 1, scope: !5249)
!5478 = !{i64 2147603417, i64 2147603460, i64 2147603500}
!5479 = !DILocation(line: 125, column: 1, scope: !5249)
!5480 = !{i64 2147603643, i64 2147603686, i64 2147603726}
!5481 = !DILocation(line: 126, column: 1, scope: !5249)
!5482 = !{i64 2147603860, i64 2147603903, i64 2147603943}
!5483 = !DILocation(line: 127, column: 1, scope: !5249)
!5484 = !{i64 2147604137, i64 2147604180, i64 2147604220}
!5485 = !DILocation(line: 128, column: 1, scope: !5249)
!5486 = !{i64 2147604363, i64 2147604406, i64 2147604446}
!5487 = !DILocation(line: 129, column: 1, scope: !5249)
!5488 = !{i64 2147604571, i64 2147604614, i64 2147604654}
!5489 = !DILocation(line: 130, column: 1, scope: !5249)
!5490 = !{i64 2147604767, i64 2147604810, i64 2147604850}
!5491 = !DILocation(line: 131, column: 1, scope: !5249)
!5492 = !{i64 2147605032, i64 2147605075, i64 2147605115}
!5493 = !DILocation(line: 132, column: 1, scope: !5249)
!5494 = !{i64 2147609307, i64 2147609350, i64 2147609390}
!5495 = !DILocation(line: 133, column: 1, scope: !5249)
!5496 = !{i64 2147609482, i64 2147609525, i64 2147609565}
!5497 = !DILocation(line: 134, column: 1, scope: !5249)
!5498 = !{i64 2147609736, i64 2147609779, i64 2147609819}
!5499 = !DILocation(line: 135, column: 1, scope: !5249)
!5500 = !{i64 2147609935, i64 2147609978, i64 2147610018}
!5501 = !DILocation(line: 136, column: 1, scope: !5249)
!5502 = !{i64 2147610177, i64 2147610220, i64 2147610260}
!5503 = !DILocation(line: 137, column: 1, scope: !5249)
!5504 = !{i64 2147610340, i64 2147610383, i64 2147610423}
!5505 = !DILocation(line: 138, column: 1, scope: !5249)
!5506 = !{i64 2147610527, i64 2147610570, i64 2147610610}
!5507 = !DILocation(line: 139, column: 1, scope: !5249)
!5508 = !{i64 2147610735, i64 2147610778, i64 2147610818}
!5509 = !DILocation(line: 140, column: 1, scope: !5249)
!5510 = !{i64 2147610931, i64 2147610974, i64 2147611014}
!5511 = !DILocation(line: 141, column: 1, scope: !5249)
!5512 = !{i64 2147611124, i64 2147611167, i64 2147611207}
!5513 = !DILocation(line: 142, column: 1, scope: !5249)
!5514 = !{i64 2147611307, i64 2147611350, i64 2147611390}
!5515 = !DILocation(line: 143, column: 1, scope: !5249)
!5516 = !{i64 2147611521, i64 2147611564, i64 2147611604}
!5517 = !DILocation(line: 144, column: 1, scope: !5249)
!5518 = !{i64 2147611732, i64 2147611775, i64 2147611815}
!5519 = !DILocation(line: 145, column: 1, scope: !5249)
!5520 = !{i64 2147611952, i64 2147611995, i64 2147612035}
!5521 = !DILocation(line: 146, column: 1, scope: !5249)
!5522 = !{i64 2147612159, i64 2147612202, i64 2147612242}
!5523 = !DILocation(line: 147, column: 1, scope: !5249)
!5524 = !{i64 2147612432, i64 2147612475, i64 2147612515}
!5525 = !DILocation(line: 148, column: 1, scope: !5249)
!5526 = !{i64 2147612680, i64 2147612723, i64 2147612763}
!5527 = !DILocation(line: 149, column: 1, scope: !5249)
!5528 = !{i64 2147612879, i64 2147612922, i64 2147612962}
!5529 = !DILocation(line: 150, column: 1, scope: !5249)
!5530 = !{i64 2147613114, i64 2147613157, i64 2147613197}
!5531 = !DILocation(line: 151, column: 1, scope: !5249)
!5532 = !{i64 2147613364, i64 2147613407, i64 2147613447}
!5533 = !DILocation(line: 152, column: 1, scope: !5249)
!5534 = !{i64 2147613566, i64 2147613609, i64 2147613649}
!5535 = !DILocation(line: 153, column: 1, scope: !5249)
!5536 = !{i64 2147613789, i64 2147613832, i64 2147613872}
!5537 = !DILocation(line: 154, column: 1, scope: !5249)
!5538 = !{i64 2147614003, i64 2147614046, i64 2147614086}
!5539 = !DILocation(line: 155, column: 1, scope: !5249)
!5540 = !{i64 2147614247, i64 2147614290, i64 2147614330}
!5541 = !DILocation(line: 156, column: 1, scope: !5249)
!5542 = !{i64 2147614476, i64 2147614519, i64 2147614559}
!5543 = !DILocation(line: 157, column: 1, scope: !5249)
!5544 = !{i64 2147614705, i64 2147614748, i64 2147614788}
!5545 = !DILocation(line: 158, column: 1, scope: !5249)
!5546 = !{i64 2147614913, i64 2147614956, i64 2147614996}
!5547 = !DILocation(line: 159, column: 1, scope: !5249)
!5548 = !{i64 2147615151, i64 2147615194, i64 2147615234}
!5549 = !DILocation(line: 160, column: 1, scope: !5249)
!5550 = !{i64 2147615377, i64 2147615420, i64 2147615460}
!5551 = !DILocation(line: 161, column: 1, scope: !5249)
!5552 = !{i64 2147615636, i64 2147615679, i64 2147615719}
!5553 = !DILocation(line: 162, column: 1, scope: !5249)
!5554 = !{i64 2147615856, i64 2147615899, i64 2147615939}
!5555 = !DILocation(line: 163, column: 1, scope: !5249)
!5556 = !{i64 2147616088, i64 2147616131, i64 2147616171}
!5557 = !DILocation(line: 164, column: 1, scope: !5249)
!5558 = !{i64 2147616329, i64 2147616372, i64 2147616412}
!5559 = !DILocation(line: 165, column: 1, scope: !5249)
!5560 = !{i64 2147616570, i64 2147616613, i64 2147616653}
!5561 = !DILocation(line: 166, column: 1, scope: !5249)
!5562 = !{i64 2147616793, i64 2147616836, i64 2147616876}
!5563 = !DILocation(line: 167, column: 1, scope: !5249)
!5564 = !{i64 2147617010, i64 2147617053, i64 2147617093}
!5565 = !DILocation(line: 168, column: 1, scope: !5249)
!5566 = !{i64 2147617251, i64 2147617294, i64 2147617334}
!5567 = !DILocation(line: 169, column: 1, scope: !5249)
!5568 = !{i64 2147617438, i64 2147617481, i64 2147617521}
!5569 = !DILocation(line: 170, column: 1, scope: !5249)
!5570 = !{i64 2147617625, i64 2147617668, i64 2147617708}
!5571 = !DILocation(line: 171, column: 1, scope: !5249)
!5572 = !{i64 2147617788, i64 2147617831, i64 2147617871}
!5573 = !DILocation(line: 172, column: 1, scope: !5249)
!5574 = !{i64 2147622054, i64 2147622097, i64 2147622137}
!5575 = !DILocation(line: 173, column: 1, scope: !5249)
!5576 = !{i64 2147622247, i64 2147622290, i64 2147622330}
!5577 = !DILocation(line: 174, column: 1, scope: !5249)
!5578 = !{i64 2147622506, i64 2147622549, i64 2147622589}
!5579 = !DILocation(line: 175, column: 1, scope: !5249)
!5580 = !{i64 2147622729, i64 2147622772, i64 2147622812}
!5581 = !DILocation(line: 176, column: 1, scope: !5249)
!5582 = !{i64 2147622958, i64 2147623001, i64 2147623041}
!5583 = !DILocation(line: 177, column: 1, scope: !5249)
!5584 = !{i64 2147623172, i64 2147623215, i64 2147623255}
!5585 = !DILocation(line: 178, column: 1, scope: !5249)
!5586 = !{i64 2147623374, i64 2147623417, i64 2147623457}
!5587 = !DILocation(line: 179, column: 1, scope: !5249)
!5588 = !{i64 2147623570, i64 2147623613, i64 2147623653}
!5589 = !DILocation(line: 180, column: 1, scope: !5249)
!5590 = !{i64 2147623782, i64 2147623825, i64 2147623865}
!5591 = !DILocation(line: 181, column: 1, scope: !5249)
!5592 = !{i64 2147624003, i64 2147624046, i64 2147624086}
!5593 = !DILocation(line: 182, column: 1, scope: !5249)
!5594 = !{i64 2147624217, i64 2147624260, i64 2147624300}
!5595 = !DILocation(line: 183, column: 1, scope: !5249)
!5596 = !{i64 2147624407, i64 2147624450, i64 2147624490}
!5597 = !DILocation(line: 184, column: 1, scope: !5249)
!5598 = !{i64 2147624606, i64 2147624649, i64 2147624689}
!5599 = !DILocation(line: 185, column: 1, scope: !5249)
!5600 = !{i64 2147624811, i64 2147624854, i64 2147624894}
!5601 = !DILocation(line: 186, column: 1, scope: !5249)
!5602 = !{i64 2147625031, i64 2147625074, i64 2147625114}
!5603 = !DILocation(line: 187, column: 1, scope: !5249)
!5604 = !{i64 2147625233, i64 2147625276, i64 2147625316}
!5605 = !DILocation(line: 188, column: 1, scope: !5249)
!5606 = !{i64 2147625432, i64 2147625475, i64 2147625515}
!5607 = !DILocation(line: 189, column: 1, scope: !5249)
!5608 = !{i64 2147625637, i64 2147625680, i64 2147625720}
!5609 = !DILocation(line: 190, column: 1, scope: !5249)
!5610 = !{i64 2147625806, i64 2147625849, i64 2147625889}
!5611 = !DILocation(line: 191, column: 1, scope: !5249)
!5612 = !{i64 2147625990, i64 2147626033, i64 2147626073}
!5613 = !DILocation(line: 192, column: 1, scope: !5249)
!5614 = !{i64 2147626174, i64 2147626217, i64 2147626257}
!5615 = !DILocation(line: 193, column: 1, scope: !5249)
!5616 = !{i64 2147626361, i64 2147626404, i64 2147626444}
!5617 = !DILocation(line: 194, column: 1, scope: !5249)
!5618 = !{i64 2147626545, i64 2147626588, i64 2147626628}
!5619 = !DILocation(line: 195, column: 1, scope: !5249)
!5620 = !{i64 2147626732, i64 2147626775, i64 2147626815}
!5621 = !DILocation(line: 196, column: 1, scope: !5249)
!5622 = !{i64 2147626944, i64 2147626987, i64 2147627027}
!5623 = !DILocation(line: 197, column: 1, scope: !5249)
!5624 = !{i64 2147627182, i64 2147627225, i64 2147627265}
!5625 = !DILocation(line: 198, column: 1, scope: !5249)
!5626 = !{i64 2147627412, i64 2147627455, i64 2147627495}
!5627 = !DILocation(line: 199, column: 1, scope: !5249)
!5628 = !{i64 2147627641, i64 2147627684, i64 2147627724}
!5629 = !DILocation(line: 200, column: 1, scope: !5249)
!5630 = !{i64 2147627828, i64 2147627871, i64 2147627911}
!5631 = !DILocation(line: 201, column: 1, scope: !5249)
!5632 = !{i64 2147628024, i64 2147628067, i64 2147628107}
!5633 = !DILocation(line: 202, column: 1, scope: !5249)
!5634 = !{i64 2147628232, i64 2147628275, i64 2147628315}
!5635 = !DILocation(line: 203, column: 1, scope: !5249)
!5636 = !{i64 2147628444, i64 2147628487, i64 2147628527}
!5637 = !DILocation(line: 204, column: 1, scope: !5249)
!5638 = !{i64 2147628643, i64 2147628686, i64 2147628726}
!5639 = !DILocation(line: 205, column: 1, scope: !5249)
!5640 = !{i64 2147628881, i64 2147628924, i64 2147628964}
!5641 = !DILocation(line: 206, column: 1, scope: !5249)
!5642 = !{i64 2147629077, i64 2147629120, i64 2147629160}
!5643 = !DILocation(line: 207, column: 1, scope: !5249)
!5644 = !{i64 2147629279, i64 2147629322, i64 2147629362}
!5645 = !DILocation(line: 208, column: 1, scope: !5249)
!5646 = !{i64 2147629472, i64 2147629515, i64 2147629555}
!5647 = !DILocation(line: 209, column: 1, scope: !5249)
!5648 = !{i64 2147629706, i64 2147629749, i64 2147629789}
!5649 = !DILocation(line: 210, column: 1, scope: !5249)
!5650 = !{i64 2147629869, i64 2147629912, i64 2147629952}
!5651 = !DILocation(line: 211, column: 1, scope: !5249)
!5652 = !{i64 2147630108, i64 2147630151, i64 2147630191}
!5653 = !DILocation(line: 212, column: 1, scope: !5249)
!5654 = !{i64 2147630347, i64 2147630390, i64 2147630430}
!5655 = !DILocation(line: 213, column: 1, scope: !5249)
!5656 = !{i64 2147630583, i64 2147630626, i64 2147630666}
!5657 = !DILocation(line: 214, column: 1, scope: !5249)
!5658 = !{i64 2147630813, i64 2147630856, i64 2147630896}
!5659 = !DILocation(line: 215, column: 1, scope: !5249)
!5660 = !{i64 2147631000, i64 2147631043, i64 2147631083}
!5661 = !DILocation(line: 216, column: 1, scope: !5249)
!5662 = !{i64 2147635260, i64 2147635303, i64 2147635343}
!5663 = !DILocation(line: 217, column: 1, scope: !5249)
!5664 = !{i64 2147635531, i64 2147635574, i64 2147635614}
!5665 = !DILocation(line: 218, column: 1, scope: !5249)
!5666 = !{i64 2147635706, i64 2147635749, i64 2147635789}
!5667 = !DILocation(line: 219, column: 1, scope: !5249)
!5668 = !{i64 2147635940, i64 2147635983, i64 2147636023}
!5669 = !DILocation(line: 220, column: 1, scope: !5249)
!5670 = !{i64 2147636148, i64 2147636191, i64 2147636231}
!5671 = !DILocation(line: 221, column: 1, scope: !5249)
!5672 = !{i64 2147636366, i64 2147636409, i64 2147636449}
!5673 = !DILocation(line: 222, column: 1, scope: !5249)
!5674 = !{i64 2147636556, i64 2147636599, i64 2147636639}
!5675 = !DILocation(line: 223, column: 1, scope: !5249)
!5676 = !{i64 2147636788, i64 2147636831, i64 2147636871}
!5677 = !DILocation(line: 224, column: 1, scope: !5249)
!5678 = !{i64 2147637008, i64 2147637051, i64 2147637091}
!5679 = !DILocation(line: 225, column: 1, scope: !5249)
!5680 = !{i64 2147637204, i64 2147637247, i64 2147637287}
!5681 = !DILocation(line: 226, column: 1, scope: !5249)
!5682 = !{i64 2147637410, i64 2147637453, i64 2147637493}
!5683 = !DILocation(line: 227, column: 1, scope: !5249)
!5684 = !{i64 2147637615, i64 2147637658, i64 2147637698}
!5685 = !DILocation(line: 228, column: 1, scope: !5249)
!5686 = !{i64 2147637841, i64 2147637884, i64 2147637924}
!5687 = !DILocation(line: 229, column: 1, scope: !5249)
!5688 = !{i64 2147638049, i64 2147638092, i64 2147638132}
!5689 = !DILocation(line: 230, column: 1, scope: !5249)
!5690 = !{i64 2147638245, i64 2147638288, i64 2147638328}
!5691 = !DILocation(line: 231, column: 1, scope: !5249)
!5692 = !{i64 2147638477, i64 2147638520, i64 2147638560}
!5693 = !DILocation(line: 232, column: 1, scope: !5249)
!5694 = !{i64 2147638661, i64 2147638704, i64 2147638744}
!5695 = !DILocation(line: 233, column: 1, scope: !5249)
!5696 = !{i64 2147638870, i64 2147638913, i64 2147638953}
!5697 = !DILocation(line: 234, column: 1, scope: !5249)
!5698 = !{i64 2147639078, i64 2147639121, i64 2147639161}
!5699 = !DILocation(line: 235, column: 1, scope: !5249)
!5700 = !{i64 2147639274, i64 2147639317, i64 2147639357}
!5701 = !DILocation(line: 236, column: 1, scope: !5249)
!5702 = !{i64 2147639458, i64 2147639501, i64 2147639541}
!5703 = !DILocation(line: 237, column: 1, scope: !5249)
!5704 = !{i64 2147639684, i64 2147639727, i64 2147639767}
!5705 = !DILocation(line: 238, column: 1, scope: !5249)
!5706 = !{i64 2147639910, i64 2147639953, i64 2147639993}
!5707 = !DILocation(line: 239, column: 1, scope: !5249)
!5708 = !{i64 2147640136, i64 2147640179, i64 2147640219}
!5709 = !DILocation(line: 240, column: 1, scope: !5249)
!5710 = !{i64 2147640362, i64 2147640405, i64 2147640445}
!5711 = !DILocation(line: 241, column: 1, scope: !5249)
!5712 = !{i64 2147640588, i64 2147640631, i64 2147640671}
!5713 = !DILocation(line: 242, column: 1, scope: !5249)
!5714 = !{i64 2147640820, i64 2147640863, i64 2147640903}
!5715 = !DILocation(line: 243, column: 1, scope: !5249)
!5716 = !{i64 2147641058, i64 2147641101, i64 2147641141}
!5717 = !DILocation(line: 244, column: 1, scope: !5249)
!5718 = !{i64 2147641278, i64 2147641321, i64 2147641361}
!5719 = !DILocation(line: 245, column: 1, scope: !5249)
!5720 = !{i64 2147641522, i64 2147641565, i64 2147641605}
!5721 = !DILocation(line: 246, column: 1, scope: !5249)
!5722 = !{i64 2147641763, i64 2147641806, i64 2147641846}
!5723 = !DILocation(line: 247, column: 1, scope: !5249)
!5724 = !{i64 2147641998, i64 2147642041, i64 2147642081}
!5725 = !DILocation(line: 248, column: 1, scope: !5249)
!5726 = !{i64 2147642230, i64 2147642273, i64 2147642313}
!5727 = !DILocation(line: 249, column: 1, scope: !5249)
!5728 = !{i64 2147642432, i64 2147642475, i64 2147642515}
!5729 = !DILocation(line: 250, column: 1, scope: !5249)
!5730 = !{i64 2147642682, i64 2147642725, i64 2147642765}
!5731 = !DILocation(line: 251, column: 1, scope: !5249)
!5732 = !{i64 2147642920, i64 2147642963, i64 2147643003}
!5733 = !DILocation(line: 252, column: 1, scope: !5249)
!5734 = !{i64 2147643128, i64 2147643171, i64 2147643211}
!5735 = !DILocation(line: 253, column: 1, scope: !5249)
!5736 = !{i64 2147643324, i64 2147643367, i64 2147643407}
!5737 = !DILocation(line: 254, column: 1, scope: !5249)
!5738 = !{i64 2147643508, i64 2147643551, i64 2147643591}
!5739 = !DILocation(line: 255, column: 1, scope: !5249)
!5740 = !{i64 2147643725, i64 2147643768, i64 2147643808}
!5741 = !DILocation(line: 256, column: 1, scope: !5249)
!5742 = !{i64 2147647991, i64 2147648034, i64 2147648074}
!5743 = !DILocation(line: 257, column: 1, scope: !5249)
!5744 = !{i64 2147648226, i64 2147648269, i64 2147648309}
!5745 = !DILocation(line: 258, column: 1, scope: !5249)
!5746 = !{i64 2147648449, i64 2147648492, i64 2147648532}
!5747 = !DILocation(line: 259, column: 1, scope: !5249)
!5748 = !{i64 2147648673, i64 2147648716, i64 2147648756}
!5749 = !DILocation(line: 260, column: 1, scope: !5249)
!5750 = !{i64 2147648911, i64 2147648954, i64 2147648994}
!5751 = !DILocation(line: 261, column: 1, scope: !5249)
!5752 = !{i64 2147649149, i64 2147649192, i64 2147649232}
!5753 = !DILocation(line: 262, column: 1, scope: !5249)
!5754 = !{i64 2147649366, i64 2147649409, i64 2147649449}
!5755 = !DILocation(line: 263, column: 1, scope: !5249)
!5756 = !{i64 2147649571, i64 2147649614, i64 2147649654}
!5757 = !DILocation(line: 264, column: 1, scope: !5249)
!5758 = !{i64 2147649764, i64 2147649807, i64 2147649847}
!5759 = !DILocation(line: 265, column: 1, scope: !5249)
!5760 = !{i64 2147650017, i64 2147650060, i64 2147650100}
!5761 = !DILocation(line: 266, column: 1, scope: !5249)
!5762 = !{i64 2147650225, i64 2147650268, i64 2147650308}
!5763 = !DILocation(line: 267, column: 1, scope: !5249)
!5764 = !{i64 2147650421, i64 2147650464, i64 2147650504}
!5765 = !DILocation(line: 268, column: 1, scope: !5249)
!5766 = !{i64 2147650635, i64 2147650678, i64 2147650718}
!5767 = !DILocation(line: 269, column: 1, scope: !5249)
!5768 = !{i64 2147650843, i64 2147650886, i64 2147650926}
!5769 = !DILocation(line: 270, column: 1, scope: !5249)
!5770 = !{i64 2147651033, i64 2147651076, i64 2147651116}
!5771 = !DILocation(line: 271, column: 1, scope: !5249)
!5772 = !{i64 2147651247, i64 2147651290, i64 2147651330}
!5773 = !DILocation(line: 272, column: 1, scope: !5249)
!5774 = !{i64 2147651509, i64 2147651552, i64 2147651592}
!5775 = !DILocation(line: 273, column: 1, scope: !5249)
!5776 = !{i64 2147651720, i64 2147651763, i64 2147651803}
!5777 = !DILocation(line: 274, column: 1, scope: !5249)
!5778 = !{i64 2147651964, i64 2147652007, i64 2147652047}
!5779 = !DILocation(line: 275, column: 1, scope: !5249)
!5780 = !{i64 2147652175, i64 2147652218, i64 2147652258}
!5781 = !DILocation(line: 276, column: 1, scope: !5249)
!5782 = !{i64 2147652404, i64 2147652447, i64 2147652487}
!5783 = !DILocation(line: 277, column: 1, scope: !5249)
!5784 = !{i64 2147652669, i64 2147652712, i64 2147652752}
!5785 = !DILocation(line: 278, column: 1, scope: !5249)
!5786 = !{i64 2147652874, i64 2147652917, i64 2147652957}
!5787 = !DILocation(line: 279, column: 1, scope: !5249)
!5788 = !{i64 2147653070, i64 2147653113, i64 2147653153}
!5789 = !DILocation(line: 280, column: 1, scope: !5249)
!5790 = !{i64 2147653293, i64 2147653336, i64 2147653376}
!5791 = !DILocation(line: 281, column: 1, scope: !5249)
!5792 = !{i64 2147653456, i64 2147653499, i64 2147653539}
!5793 = !DILocation(line: 282, column: 1, scope: !5249)
!5794 = !{i64 2147653661, i64 2147653704, i64 2147653744}
!5795 = !DILocation(line: 283, column: 1, scope: !5249)
!5796 = !{i64 2147653881, i64 2147653924, i64 2147653964}
!5797 = !DILocation(line: 284, column: 1, scope: !5249)
!5798 = !{i64 2147654095, i64 2147654138, i64 2147654178}
!5799 = !DILocation(line: 285, column: 1, scope: !5249)
!5800 = !{i64 2147654339, i64 2147654382, i64 2147654422}
!5801 = !DILocation(line: 286, column: 1, scope: !5249)
!5802 = !{i64 2147654571, i64 2147654614, i64 2147654654}
!5803 = !DILocation(line: 287, column: 1, scope: !5249)
!5804 = !{i64 2147654785, i64 2147654828, i64 2147654868}
!5805 = !DILocation(line: 288, column: 1, scope: !5249)
!5806 = !{i64 2147654996, i64 2147655039, i64 2147655079}
!5807 = !DILocation(line: 289, column: 1, scope: !5249)
!5808 = !{i64 2147655189, i64 2147655232, i64 2147655272}
!5809 = !DILocation(line: 290, column: 1, scope: !5249)
!5810 = !{i64 2147655388, i64 2147655431, i64 2147655471}
!5811 = !DILocation(line: 291, column: 1, scope: !5249)
!5812 = !{i64 2147655560, i64 2147655603, i64 2147655643}
!5813 = !DILocation(line: 292, column: 1, scope: !5249)
!5814 = !{i64 2147655753, i64 2147655796, i64 2147655836}
!5815 = !DILocation(line: 293, column: 1, scope: !5249)
!5816 = !{i64 2147655925, i64 2147655968, i64 2147656008}
!5817 = !DILocation(line: 294, column: 1, scope: !5249)
!5818 = !{i64 2147656115, i64 2147656158, i64 2147656198}
!5819 = !DILocation(line: 295, column: 1, scope: !5249)
!5820 = !{i64 2147656308, i64 2147656351, i64 2147656391}
!5821 = !DILocation(line: 296, column: 1, scope: !5249)
!5822 = !{i64 2147656504, i64 2147656547, i64 2147656587}
!5823 = !DILocation(line: 297, column: 1, scope: !5249)
!5824 = !{i64 2147656667, i64 2147656710, i64 2147656750}
!5825 = !DILocation(line: 298, column: 1, scope: !5249)
!5826 = !{i64 2147660930, i64 2147660973, i64 2147661013}
!5827 = !DILocation(line: 299, column: 1, scope: !5249)
!5828 = !{i64 2147661141, i64 2147661184, i64 2147661224}
!5829 = !DILocation(line: 300, column: 1, scope: !5249)
!5830 = !{i64 2147661346, i64 2147661389, i64 2147661429}
!5831 = !DILocation(line: 301, column: 1, scope: !5249)
!5832 = !{i64 2147661554, i64 2147661597, i64 2147661637}
!5833 = !DILocation(line: 302, column: 1, scope: !5249)
!5834 = !{i64 2147661747, i64 2147661790, i64 2147661830}
!5835 = !DILocation(line: 303, column: 1, scope: !5249)
!5836 = !{i64 2147661985, i64 2147662028, i64 2147662068}
!5837 = !DILocation(line: 304, column: 1, scope: !5249)
!5838 = !{i64 2147662172, i64 2147662215, i64 2147662255}
!5839 = !DILocation(line: 305, column: 1, scope: !5249)
!5840 = !{i64 2147662341, i64 2147662384, i64 2147662424}
!5841 = !DILocation(line: 306, column: 1, scope: !5249)
!5842 = !{i64 2147662534, i64 2147662577, i64 2147662617}
!5843 = !DILocation(line: 307, column: 1, scope: !5249)
!5844 = !{i64 2147662739, i64 2147662782, i64 2147662822}
!5845 = !DILocation(line: 308, column: 1, scope: !5249)
!5846 = !{i64 2147662950, i64 2147662993, i64 2147663033}
!5847 = !DILocation(line: 309, column: 1, scope: !5249)
!5848 = !{i64 2147663173, i64 2147663216, i64 2147663256}
!5849 = !DILocation(line: 310, column: 1, scope: !5249)
!5850 = !{i64 2147663387, i64 2147663430, i64 2147663470}
!5851 = !DILocation(line: 311, column: 1, scope: !5249)
!5852 = !{i64 2147663605, i64 2147663648, i64 2147663688}
!5853 = !DILocation(line: 312, column: 1, scope: !5249)
!5854 = !{i64 2147663819, i64 2147663862, i64 2147663902}
!5855 = !DILocation(line: 313, column: 1, scope: !5249)
!5856 = !{i64 2147664033, i64 2147664076, i64 2147664116}
!5857 = !DILocation(line: 314, column: 1, scope: !5249)
!5858 = !{i64 2147664250, i64 2147664293, i64 2147664333}
!5859 = !DILocation(line: 315, column: 1, scope: !5249)
!5860 = !{i64 2147664464, i64 2147664507, i64 2147664547}
!5861 = !DILocation(line: 316, column: 1, scope: !5249)
!5862 = !{i64 2147664705, i64 2147664748, i64 2147664788}
!5863 = !DILocation(line: 317, column: 1, scope: !5249)
!5864 = !{i64 2147664871, i64 2147664914, i64 2147664954}
!5865 = !DILocation(line: 318, column: 1, scope: !5249)
!5866 = !{i64 2147665098, i64 2147665141, i64 2147665181}
!5867 = !DILocation(line: 319, column: 1, scope: !5249)
!5868 = !{i64 2147665315, i64 2147665358, i64 2147665398}
!5869 = !DILocation(line: 320, column: 1, scope: !5249)
!5870 = !{i64 2147665541, i64 2147665584, i64 2147665624}
!5871 = !DILocation(line: 321, column: 1, scope: !5249)
!5872 = !{i64 2147665746, i64 2147665789, i64 2147665829}
!5873 = !DILocation(line: 322, column: 1, scope: !5249)
!5874 = !{i64 2147665963, i64 2147666006, i64 2147666046}
!5875 = !DILocation(line: 323, column: 1, scope: !5249)
!5876 = !{i64 2147666255, i64 2147666298, i64 2147666338}
!5877 = !DILocation(line: 324, column: 1, scope: !5249)
!5878 = !{i64 2147666487, i64 2147666530, i64 2147666570}
!5879 = !DILocation(line: 325, column: 1, scope: !5249)
!5880 = !{i64 2147666704, i64 2147666747, i64 2147666787}
!5881 = !DILocation(line: 326, column: 1, scope: !5249)
!5882 = !{i64 2147666911, i64 2147666954, i64 2147666994}
!5883 = !DILocation(line: 327, column: 1, scope: !5249)
!5884 = !{i64 2147667112, i64 2147667155, i64 2147667195}
!5885 = !DILocation(line: 328, column: 1, scope: !5249)
!5886 = !{i64 2147667344, i64 2147667387, i64 2147667427}
!5887 = !DILocation(line: 329, column: 1, scope: !5249)
!5888 = !{i64 2147667552, i64 2147667595, i64 2147667635}
!5889 = !DILocation(line: 330, column: 1, scope: !5249)
!5890 = !{i64 2147667742, i64 2147667785, i64 2147667825}
!5891 = !DILocation(line: 331, column: 1, scope: !5249)
!5892 = !{i64 2147667968, i64 2147668011, i64 2147668051}
!5893 = !DILocation(line: 332, column: 1, scope: !5249)
!5894 = !{i64 2147668157, i64 2147668200, i64 2147668240}
!5895 = !DILocation(line: 333, column: 1, scope: !5249)
!5896 = !{i64 2147668428, i64 2147668471, i64 2147668511}
!5897 = !DILocation(line: 334, column: 1, scope: !5249)
!5898 = !{i64 2147668648, i64 2147668691, i64 2147668731}
!5899 = !DILocation(line: 335, column: 1, scope: !5249)
!5900 = !{i64 2147668901, i64 2147668944, i64 2147668984}
!5901 = !DILocation(line: 336, column: 1, scope: !5249)
!5902 = !{i64 2147669109, i64 2147669152, i64 2147669192}
!5903 = !DILocation(line: 337, column: 1, scope: !5249)
!5904 = !{i64 2147669341, i64 2147669384, i64 2147669424}
!5905 = !DILocation(line: 338, column: 1, scope: !5249)
!5906 = !{i64 2147669552, i64 2147669595, i64 2147669635}
!5907 = !DILocation(line: 339, column: 1, scope: !5249)
!5908 = !{i64 2147673803, i64 2147673846, i64 2147673886}
!5909 = !DILocation(line: 340, column: 1, scope: !5249)
!5910 = !{i64 2147674017, i64 2147674060, i64 2147674100}
!5911 = !DILocation(line: 341, column: 1, scope: !5249)
!5912 = !{i64 2147674216, i64 2147674259, i64 2147674299}
!5913 = !DILocation(line: 342, column: 1, scope: !5249)
!5914 = !{i64 2147674403, i64 2147674446, i64 2147674486}
!5915 = !DILocation(line: 343, column: 1, scope: !5249)
!5916 = !{i64 2147674599, i64 2147674642, i64 2147674682}
!5917 = !DILocation(line: 344, column: 1, scope: !5249)
!5918 = !{i64 2147674807, i64 2147674850, i64 2147674890}
!5919 = !DILocation(line: 345, column: 1, scope: !5249)
!5920 = !{i64 2147675036, i64 2147675079, i64 2147675119}
!5921 = !DILocation(line: 346, column: 1, scope: !5249)
!5922 = !{i64 2147675238, i64 2147675281, i64 2147675321}
!5923 = !DILocation(line: 347, column: 1, scope: !5249)
!5924 = !{i64 2147675437, i64 2147675480, i64 2147675520}
!5925 = !DILocation(line: 348, column: 1, scope: !5249)
!5926 = !{i64 2147675654, i64 2147675697, i64 2147675737}
!5927 = !DILocation(line: 350, column: 1, scope: !5249)
!5928 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !235, file: !235, line: 30, type: !242, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5929)
!5929 = !{!5930, !5931}
!5930 = !DILocalVariable(name: "arg", arg: 1, scope: !5928, file: !235, line: 30, type: !244)
!5931 = !DILocalVariable(name: "key", scope: !5928, file: !235, line: 32, type: !152)
!5932 = !DILocation(line: 0, scope: !5928)
!5933 = !DILocation(line: 37, column: 2, scope: !5928)
!5934 = !DILocation(line: 38, column: 2, scope: !5928)
!5935 = !DILocation(line: 55, column: 2, scope: !5936, inlinedAt: !5943)
!5936 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5937, file: !5937, line: 42, type: !5938, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5940)
!5937 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5938 = !DISubroutineType(types: !5939)
!5939 = !{!32}
!5940 = !{!5941, !5942}
!5941 = !DILocalVariable(name: "key", scope: !5936, file: !5937, line: 44, type: !32)
!5942 = !DILocalVariable(name: "tmp", scope: !5936, file: !5937, line: 53, type: !32)
!5943 = distinct !DILocation(line: 40, column: 8, scope: !5928)
!5944 = !{i64 2110891}
!5945 = !DILocation(line: 0, scope: !5936, inlinedAt: !5943)
!5946 = !DILocalVariable(name: "key", arg: 1, scope: !5947, file: !5937, line: 84, type: !32)
!5947 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5937, file: !5937, line: 84, type: !5948, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5950)
!5948 = !DISubroutineType(types: !5949)
!5949 = !{null, !32}
!5950 = !{!5946}
!5951 = !DILocation(line: 0, scope: !5947, inlinedAt: !5952)
!5952 = distinct !DILocation(line: 47, column: 2, scope: !5928)
!5953 = !DILocation(line: 95, column: 2, scope: !5947, inlinedAt: !5952)
!5954 = !{i64 2111708}
!5955 = !DILocation(line: 51, column: 18, scope: !5928)
!5956 = !DILocation(line: 53, column: 2, scope: !5928)
!5957 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5958, file: !5958, line: 1609, type: !3089, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !2166)
!5958 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5959 = !DILocation(line: 1611, column: 3, scope: !5957)
!5960 = !DILocation(line: 1612, column: 1, scope: !5957)
!5961 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5958, file: !5958, line: 1629, type: !3089, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !2166)
!5962 = !DILocation(line: 1631, column: 3, scope: !5961)
!5963 = !DILocation(line: 1632, column: 1, scope: !5961)
!5964 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !271, file: !271, line: 26, type: !277, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !268, retainedNodes: !5965)
!5965 = !{!5966}
!5966 = !DILocalVariable(name: "dev", arg: 1, scope: !5964, file: !271, line: 26, type: !279)
!5967 = !DILocation(line: 0, scope: !5964)
!5968 = !DILocation(line: 68, column: 2, scope: !5964)
!5969 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !5970, file: !5970, line: 14, type: !4202, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2552, retainedNodes: !5971)
!5970 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5971 = !{!5972, !5973}
!5972 = !DILocalVariable(name: "fmt", arg: 1, scope: !5969, file: !5970, line: 14, type: !118)
!5973 = !DILocalVariable(name: "ap", scope: !5969, file: !5970, line: 16, type: !5974)
!5974 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3212, line: 99, baseType: !5975)
!5975 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3212, line: 40, baseType: !5976)
!5976 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5970, baseType: !5977)
!5977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5978)
!5978 = !{!5979}
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5977, file: !5970, line: 16, baseType: !106, size: 32)
!5980 = !DILocation(line: 0, scope: !5969)
!5981 = !DILocation(line: 16, column: 2, scope: !5969)
!5982 = !DILocation(line: 16, column: 10, scope: !5969)
!5983 = !DILocation(line: 18, column: 2, scope: !5969)
!5984 = !DILocation(line: 19, column: 2, scope: !5969)
!5985 = !DILocation(line: 20, column: 2, scope: !5969)
!5986 = !DILocation(line: 21, column: 1, scope: !5969)
!5987 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !5970, file: !5970, line: 23, type: !5988, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2552, retainedNodes: !5990)
!5988 = !DISubroutineType(types: !5989)
!5989 = !{null, !118, !5974}
!5990 = !{!5991, !5992}
!5991 = !DILocalVariable(name: "fmt", arg: 1, scope: !5987, file: !5970, line: 23, type: !118)
!5992 = !DILocalVariable(name: "ap", arg: 2, scope: !5987, file: !5970, line: 23, type: !5974)
!5993 = !DILocation(line: 0, scope: !5987)
!5994 = !DILocation(line: 25, column: 2, scope: !5987)
!5995 = !DILocation(line: 26, column: 1, scope: !5987)
!5996 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !5970, file: !5970, line: 52, type: !5997, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2552, retainedNodes: !5999)
!5997 = !DISubroutineType(types: !5998)
!5998 = !{null, !107, !13, !185}
!5999 = !{!6000, !6001, !6002, !6003}
!6000 = !DILocalVariable(name: "level", arg: 1, scope: !5996, file: !5970, line: 52, type: !107)
!6001 = !DILocalVariable(name: "data", arg: 2, scope: !5996, file: !5970, line: 52, type: !13)
!6002 = !DILocalVariable(name: "size", arg: 3, scope: !5996, file: !5970, line: 52, type: !185)
!6003 = !DILocalVariable(name: "data_buffer", scope: !5996, file: !5970, line: 54, type: !118)
!6004 = !DILocation(line: 0, scope: !5996)
!6005 = !DILocation(line: 55, column: 14, scope: !5996)
!6006 = !DILocation(line: 55, column: 2, scope: !5996)
!6007 = !DILocation(line: 56, column: 3, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !5996, file: !5970, line: 55, column: 20)
!6009 = !DILocation(line: 57, column: 3, scope: !6008)
!6010 = !DILocation(line: 59, column: 7, scope: !6008)
!6011 = distinct !{!6011, !6006, !6012}
!6012 = !DILocation(line: 65, column: 2, scope: !5996)
!6013 = !DILocation(line: 66, column: 1, scope: !5996)
!6014 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6015, file: !6015, line: 175, type: !6016, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2552, retainedNodes: !6018)
!6015 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6016 = !DISubroutineType(types: !6017)
!6017 = !{!120, !107}
!6018 = !{!6019}
!6019 = !DILocalVariable(name: "level", arg: 1, scope: !6014, file: !6015, line: 175, type: !107)
!6020 = !DILocation(line: 0, scope: !6014)
!6021 = !DILocation(line: 177, column: 2, scope: !6014)
!6022 = !DILocation(line: 189, column: 1, scope: !6014)
!6023 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !5970, file: !5970, line: 28, type: !6024, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2552, retainedNodes: !6026)
!6024 = !DISubroutineType(types: !6025)
!6025 = !{null, !118, !185}
!6026 = !{!6027, !6028, !6029, !6031, !6033}
!6027 = !DILocalVariable(name: "data", arg: 1, scope: !6023, file: !5970, line: 28, type: !118)
!6028 = !DILocalVariable(name: "length", arg: 2, scope: !6023, file: !5970, line: 28, type: !185)
!6029 = !DILocalVariable(name: "i", scope: !6030, file: !5970, line: 30, type: !185)
!6030 = distinct !DILexicalBlock(scope: !6023, file: !5970, line: 30, column: 2)
!6031 = !DILocalVariable(name: "i", scope: !6032, file: !5970, line: 40, type: !185)
!6032 = distinct !DILexicalBlock(scope: !6023, file: !5970, line: 40, column: 2)
!6033 = !DILocalVariable(name: "c", scope: !6034, file: !5970, line: 42, type: !196)
!6034 = distinct !DILexicalBlock(scope: !6035, file: !5970, line: 41, column: 19)
!6035 = distinct !DILexicalBlock(scope: !6036, file: !5970, line: 41, column: 7)
!6036 = distinct !DILexicalBlock(scope: !6037, file: !5970, line: 40, column: 54)
!6037 = distinct !DILexicalBlock(scope: !6032, file: !5970, line: 40, column: 2)
!6038 = !DILocation(line: 0, scope: !6023)
!6039 = !DILocation(line: 0, scope: !6030)
!6040 = !DILocation(line: 30, column: 2, scope: !6030)
!6041 = !DILocation(line: 38, column: 2, scope: !6023)
!6042 = !DILocation(line: 0, scope: !6032)
!6043 = !DILocation(line: 40, column: 2, scope: !6032)
!6044 = !DILocation(line: 31, column: 9, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6046, file: !5970, line: 31, column: 7)
!6046 = distinct !DILexicalBlock(scope: !6047, file: !5970, line: 30, column: 54)
!6047 = distinct !DILexicalBlock(scope: !6030, file: !5970, line: 30, column: 2)
!6048 = !DILocation(line: 31, column: 7, scope: !6046)
!6049 = !DILocation(line: 32, column: 35, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6045, file: !5970, line: 31, column: 19)
!6051 = !DILocation(line: 32, column: 20, scope: !6050)
!6052 = !DILocation(line: 32, column: 4, scope: !6050)
!6053 = !DILocation(line: 33, column: 3, scope: !6050)
!6054 = !DILocation(line: 34, column: 4, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6045, file: !5970, line: 33, column: 10)
!6056 = !DILocation(line: 30, column: 50, scope: !6047)
!6057 = !DILocation(line: 30, column: 24, scope: !6047)
!6058 = distinct !{!6058, !6040, !6059}
!6059 = !DILocation(line: 36, column: 2, scope: !6030)
!6060 = !DILocation(line: 49, column: 2, scope: !6023)
!6061 = !DILocation(line: 50, column: 1, scope: !6023)
!6062 = !DILocation(line: 41, column: 9, scope: !6035)
!6063 = !DILocation(line: 41, column: 7, scope: !6036)
!6064 = !DILocation(line: 42, column: 22, scope: !6034)
!6065 = !DILocation(line: 0, scope: !6034)
!6066 = !DILocation(line: 44, column: 25, scope: !6034)
!6067 = !DILocation(line: 44, column: 17, scope: !6034)
!6068 = !DILocation(line: 44, column: 33, scope: !6034)
!6069 = !DILocation(line: 44, column: 4, scope: !6034)
!6070 = !DILocation(line: 45, column: 3, scope: !6034)
!6071 = !DILocation(line: 46, column: 4, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6035, file: !5970, line: 45, column: 10)
!6073 = !DILocation(line: 40, column: 50, scope: !6037)
!6074 = !DILocation(line: 40, column: 24, scope: !6037)
!6075 = distinct !{!6075, !6043, !6076}
!6076 = !DILocation(line: 48, column: 2, scope: !6032)
!6077 = distinct !DISubprogram(name: "isprint", scope: !4993, file: !4993, line: 37, type: !214, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2552, retainedNodes: !6078)
!6078 = !{!6079}
!6079 = !DILocalVariable(name: "c", arg: 1, scope: !6077, file: !4993, line: 37, type: !107)
!6080 = !DILocation(line: 0, scope: !6077)
!6081 = !DILocation(line: 39, column: 38, scope: !6077)
!6082 = !DILocation(line: 39, column: 2, scope: !6077)
!6083 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6084, file: !6084, line: 57, type: !6085, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !6131)
!6084 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6085 = !DISubroutineType(types: !6086)
!6086 = !{null, !32, !6087}
!6087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6088, size: 32)
!6088 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6089)
!6089 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2675, line: 141, baseType: !6090)
!6090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2675, line: 97, size: 256, elements: !6091)
!6091 = !{!6092}
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6090, file: !2675, line: 107, baseType: !6093, size: 256)
!6093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2675, line: 98, size: 256, elements: !6094)
!6094 = !{!6095, !6100, !6105, !6110, !6115, !6120, !6125, !6130}
!6095 = !DIDerivedType(tag: DW_TAG_member, scope: !6093, file: !2675, line: 99, baseType: !6096, size: 32)
!6096 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6093, file: !2675, line: 99, size: 32, elements: !6097)
!6097 = !{!6098, !6099}
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6096, file: !2675, line: 99, baseType: !152, size: 32)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6096, file: !2675, line: 99, baseType: !152, size: 32)
!6100 = !DIDerivedType(tag: DW_TAG_member, scope: !6093, file: !2675, line: 100, baseType: !6101, size: 32, offset: 32)
!6101 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6093, file: !2675, line: 100, size: 32, elements: !6102)
!6102 = !{!6103, !6104}
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6101, file: !2675, line: 100, baseType: !152, size: 32)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6101, file: !2675, line: 100, baseType: !152, size: 32)
!6105 = !DIDerivedType(tag: DW_TAG_member, scope: !6093, file: !2675, line: 101, baseType: !6106, size: 32, offset: 64)
!6106 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6093, file: !2675, line: 101, size: 32, elements: !6107)
!6107 = !{!6108, !6109}
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6106, file: !2675, line: 101, baseType: !152, size: 32)
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6106, file: !2675, line: 101, baseType: !152, size: 32)
!6110 = !DIDerivedType(tag: DW_TAG_member, scope: !6093, file: !2675, line: 102, baseType: !6111, size: 32, offset: 96)
!6111 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6093, file: !2675, line: 102, size: 32, elements: !6112)
!6112 = !{!6113, !6114}
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6111, file: !2675, line: 102, baseType: !152, size: 32)
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6111, file: !2675, line: 102, baseType: !152, size: 32)
!6115 = !DIDerivedType(tag: DW_TAG_member, scope: !6093, file: !2675, line: 103, baseType: !6116, size: 32, offset: 128)
!6116 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6093, file: !2675, line: 103, size: 32, elements: !6117)
!6117 = !{!6118, !6119}
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6116, file: !2675, line: 103, baseType: !152, size: 32)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6116, file: !2675, line: 103, baseType: !152, size: 32)
!6120 = !DIDerivedType(tag: DW_TAG_member, scope: !6093, file: !2675, line: 104, baseType: !6121, size: 32, offset: 160)
!6121 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6093, file: !2675, line: 104, size: 32, elements: !6122)
!6122 = !{!6123, !6124}
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6121, file: !2675, line: 104, baseType: !152, size: 32)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6121, file: !2675, line: 104, baseType: !152, size: 32)
!6125 = !DIDerivedType(tag: DW_TAG_member, scope: !6093, file: !2675, line: 105, baseType: !6126, size: 32, offset: 192)
!6126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6093, file: !2675, line: 105, size: 32, elements: !6127)
!6127 = !{!6128, !6129}
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6126, file: !2675, line: 105, baseType: !152, size: 32)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6126, file: !2675, line: 105, baseType: !152, size: 32)
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6093, file: !2675, line: 106, baseType: !152, size: 32, offset: 224)
!6131 = !{!6132, !6133}
!6132 = !DILocalVariable(name: "reason", arg: 1, scope: !6083, file: !6084, line: 57, type: !32)
!6133 = !DILocalVariable(name: "esf", arg: 2, scope: !6083, file: !6084, line: 57, type: !6087)
!6134 = !DILocation(line: 0, scope: !6083)
!6135 = !DILocation(line: 60, column: 10, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6083, file: !6084, line: 60, column: 6)
!6137 = !DILocation(line: 60, column: 6, scope: !6083)
!6138 = !DILocation(line: 61, column: 3, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6136, file: !6084, line: 60, column: 19)
!6140 = !DILocation(line: 62, column: 2, scope: !6139)
!6141 = !DILocation(line: 63, column: 2, scope: !6083)
!6142 = !DILocation(line: 64, column: 1, scope: !6083)
!6143 = distinct !DISubprogram(name: "esf_dump", scope: !6084, file: !6084, line: 20, type: !6144, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !6146)
!6144 = !DISubroutineType(types: !6145)
!6145 = !{null, !6087}
!6146 = !{!6147}
!6147 = !DILocalVariable(name: "esf", arg: 1, scope: !6143, file: !6084, line: 20, type: !6087)
!6148 = !DILocation(line: 0, scope: !6143)
!6149 = !DILocation(line: 22, column: 2, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6151, file: !6084, line: 22, column: 2)
!6151 = distinct !DILexicalBlock(scope: !6152, file: !6084, line: 22, column: 2)
!6152 = distinct !DILexicalBlock(scope: !6153, file: !6084, line: 22, column: 2)
!6153 = distinct !DILexicalBlock(scope: !6143, file: !6084, line: 22, column: 2)
!6154 = !DILocation(line: 24, column: 2, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6156, file: !6084, line: 24, column: 2)
!6156 = distinct !DILexicalBlock(scope: !6157, file: !6084, line: 24, column: 2)
!6157 = distinct !DILexicalBlock(scope: !6158, file: !6084, line: 24, column: 2)
!6158 = distinct !DILexicalBlock(scope: !6143, file: !6084, line: 24, column: 2)
!6159 = !DILocation(line: 26, column: 2, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !6161, file: !6084, line: 26, column: 2)
!6161 = distinct !DILexicalBlock(scope: !6162, file: !6084, line: 26, column: 2)
!6162 = distinct !DILexicalBlock(scope: !6163, file: !6084, line: 26, column: 2)
!6163 = distinct !DILexicalBlock(scope: !6143, file: !6084, line: 26, column: 2)
!6164 = !DILocation(line: 53, column: 2, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6166, file: !6084, line: 53, column: 2)
!6166 = distinct !DILexicalBlock(scope: !6167, file: !6084, line: 53, column: 2)
!6167 = distinct !DILexicalBlock(scope: !6168, file: !6084, line: 53, column: 2)
!6168 = distinct !DILexicalBlock(scope: !6143, file: !6084, line: 53, column: 2)
!6169 = !DILocation(line: 55, column: 1, scope: !6143)
!6170 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6084, file: !6084, line: 82, type: !6171, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !6186)
!6171 = !DISubroutineType(types: !6172)
!6172 = !{null, !6087, !6173}
!6173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6174, size: 32)
!6174 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !379, line: 37, baseType: !6175)
!6175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6176)
!6176 = !{!6177, !6178, !6179, !6180, !6181, !6182, !6183, !6184, !6185}
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6175, file: !379, line: 26, baseType: !152, size: 32)
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6175, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6175, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6175, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6175, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6175, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6175, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6175, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6175, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6186 = !{!6187, !6188, !6189}
!6187 = !DILocalVariable(name: "esf", arg: 1, scope: !6170, file: !6084, line: 82, type: !6087)
!6188 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6170, file: !6084, line: 82, type: !6173)
!6189 = !DILocalVariable(name: "reason", scope: !6170, file: !6084, line: 88, type: !32)
!6190 = !DILocation(line: 0, scope: !6170)
!6191 = !DILocation(line: 88, column: 35, scope: !6170)
!6192 = !DILocation(line: 108, column: 2, scope: !6170)
!6193 = !DILocation(line: 131, column: 1, scope: !6170)
!6194 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6084, file: !6084, line: 133, type: !131, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !6195)
!6195 = !{!6196, !6197, !6198}
!6196 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6194, file: !6084, line: 133, type: !106)
!6197 = !DILocalVariable(name: "ssf_contents", scope: !6194, file: !6084, line: 135, type: !1016)
!6198 = !DILocalVariable(name: "oops_esf", scope: !6194, file: !6084, line: 136, type: !6089)
!6199 = !DILocation(line: 0, scope: !6194)
!6200 = !DILocation(line: 136, column: 2, scope: !6194)
!6201 = !DILocation(line: 136, column: 15, scope: !6194)
!6202 = !DILocation(line: 139, column: 22, scope: !6194)
!6203 = !DILocation(line: 139, column: 17, scope: !6194)
!6204 = !DILocation(line: 139, column: 20, scope: !6194)
!6205 = !DILocation(line: 141, column: 2, scope: !6194)
!6206 = !DILocation(line: 142, column: 2, scope: !6194)
!6207 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6208, file: !6208, line: 40, type: !5948, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6209)
!6208 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6209 = !{!6210}
!6210 = !DILocalVariable(name: "irq", arg: 1, scope: !6207, file: !6208, line: 40, type: !32)
!6211 = !DILocation(line: 0, scope: !6207)
!6212 = !DILocation(line: 42, column: 2, scope: !6207)
!6213 = !DILocation(line: 43, column: 1, scope: !6207)
!6214 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !463, file: !463, line: 1684, type: !6215, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6217)
!6215 = !DISubroutineType(types: !6216)
!6216 = !{null, !922}
!6217 = !{!6218}
!6218 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6214, file: !463, line: 1684, type: !922)
!6219 = !DILocation(line: 0, scope: !6214)
!6220 = !DILocation(line: 1686, column: 23, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6214, file: !463, line: 1686, column: 7)
!6222 = !DILocation(line: 1686, column: 7, scope: !6214)
!6223 = !DILocation(line: 1688, column: 5, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6221, file: !463, line: 1687, column: 3)
!6225 = !{i64 2151074009}
!6226 = !DILocation(line: 1689, column: 81, scope: !6224)
!6227 = !DILocation(line: 1689, column: 60, scope: !6224)
!6228 = !DILocation(line: 1689, column: 34, scope: !6224)
!6229 = !DILocation(line: 1689, column: 5, scope: !6224)
!6230 = !DILocation(line: 1689, column: 43, scope: !6224)
!6231 = !DILocation(line: 1690, column: 5, scope: !6224)
!6232 = !{i64 2151074123}
!6233 = !DILocation(line: 1691, column: 3, scope: !6224)
!6234 = !DILocation(line: 1692, column: 1, scope: !6214)
!6235 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6208, file: !6208, line: 45, type: !5948, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6236)
!6236 = !{!6237}
!6237 = !DILocalVariable(name: "irq", arg: 1, scope: !6235, file: !6208, line: 45, type: !32)
!6238 = !DILocation(line: 0, scope: !6235)
!6239 = !DILocation(line: 47, column: 2, scope: !6235)
!6240 = !DILocation(line: 48, column: 1, scope: !6235)
!6241 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !463, file: !463, line: 1722, type: !6215, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6242)
!6242 = !{!6243}
!6243 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6241, file: !463, line: 1722, type: !922)
!6244 = !DILocation(line: 0, scope: !6241)
!6245 = !DILocation(line: 1724, column: 23, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6241, file: !463, line: 1724, column: 7)
!6247 = !DILocation(line: 1724, column: 7, scope: !6241)
!6248 = !DILocation(line: 1726, column: 81, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6246, file: !463, line: 1725, column: 3)
!6250 = !DILocation(line: 1726, column: 60, scope: !6249)
!6251 = !DILocation(line: 1726, column: 34, scope: !6249)
!6252 = !DILocation(line: 1726, column: 5, scope: !6249)
!6253 = !DILocation(line: 1726, column: 43, scope: !6249)
!6254 = !DILocation(line: 271, column: 3, scope: !6255, inlinedAt: !6257)
!6255 = distinct !DISubprogram(name: "__DSB", scope: !6256, file: !6256, line: 269, type: !3089, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !2166)
!6256 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6257 = distinct !DILocation(line: 1727, column: 5, scope: !6249)
!6258 = !{i64 3528392}
!6259 = !DILocation(line: 260, column: 3, scope: !6260, inlinedAt: !6261)
!6260 = distinct !DISubprogram(name: "__ISB", scope: !6256, file: !6256, line: 258, type: !3089, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !2166)
!6261 = distinct !DILocation(line: 1728, column: 5, scope: !6249)
!6262 = !{i64 3528109}
!6263 = !DILocation(line: 1729, column: 3, scope: !6249)
!6264 = !DILocation(line: 1730, column: 1, scope: !6241)
!6265 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6208, file: !6208, line: 50, type: !6266, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6268)
!6266 = !DISubroutineType(types: !6267)
!6267 = !{!107, !32}
!6268 = !{!6269}
!6269 = !DILocalVariable(name: "irq", arg: 1, scope: !6265, file: !6208, line: 50, type: !32)
!6270 = !DILocation(line: 0, scope: !6265)
!6271 = !DILocation(line: 52, column: 20, scope: !6265)
!6272 = !DILocation(line: 52, column: 9, scope: !6265)
!6273 = !DILocation(line: 52, column: 41, scope: !6265)
!6274 = !DILocation(line: 52, column: 39, scope: !6265)
!6275 = !DILocation(line: 52, column: 2, scope: !6265)
!6276 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6208, file: !6208, line: 64, type: !6277, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6279)
!6277 = !DISubroutineType(types: !6278)
!6278 = !{null, !32, !32, !152}
!6279 = !{!6280, !6281, !6282}
!6280 = !DILocalVariable(name: "irq", arg: 1, scope: !6276, file: !6208, line: 64, type: !32)
!6281 = !DILocalVariable(name: "prio", arg: 2, scope: !6276, file: !6208, line: 64, type: !32)
!6282 = !DILocalVariable(name: "flags", arg: 3, scope: !6276, file: !6208, line: 64, type: !152)
!6283 = !DILocation(line: 0, scope: !6276)
!6284 = !DILocation(line: 83, column: 8, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6286, file: !6208, line: 82, column: 9)
!6286 = distinct !DILexicalBlock(scope: !6276, file: !6208, line: 76, column: 6)
!6287 = !DILocation(line: 91, column: 2, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6289, file: !6208, line: 91, column: 2)
!6289 = distinct !DILexicalBlock(scope: !6276, file: !6208, line: 91, column: 2)
!6290 = !DILocation(line: 91, column: 2, scope: !6289)
!6291 = !DILocation(line: 91, column: 2, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6288, file: !6208, line: 91, column: 2)
!6293 = !DILocation(line: 95, column: 2, scope: !6276)
!6294 = !DILocation(line: 96, column: 1, scope: !6276)
!6295 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6296, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6298)
!6296 = !DISubroutineType(types: !6297)
!6297 = !{null, !922, !152}
!6298 = !{!6299, !6300}
!6299 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6295, file: !463, line: 1814, type: !922)
!6300 = !DILocalVariable(name: "priority", arg: 2, scope: !6295, file: !463, line: 1814, type: !152)
!6301 = !DILocation(line: 0, scope: !6295)
!6302 = !DILocation(line: 0, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6295, file: !463, line: 1816, column: 7)
!6304 = !DILocation(line: 1816, column: 7, scope: !6295)
!6305 = !DILocation(line: 1824, column: 1, scope: !6295)
!6306 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6208, file: !6208, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6307)
!6307 = !{!6308}
!6308 = !DILocalVariable(name: "unused", arg: 1, scope: !6306, file: !6208, line: 155, type: !13)
!6309 = !DILocation(line: 0, scope: !6306)
!6310 = !DILocation(line: 159, column: 2, scope: !6306)
!6311 = !DILocation(line: 160, column: 1, scope: !6306)
!6312 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6313, file: !6313, line: 87, type: !3089, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !2166)
!6313 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6314 = !DILocation(line: 89, column: 2, scope: !6312)
!6315 = !DILocation(line: 90, column: 2, scope: !6312)
!6316 = !DILocation(line: 91, column: 1, scope: !6312)
!6317 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6313, file: !6313, line: 23, type: !3089, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2166)
!6318 = !DISubprogram(name: "z_arm_int_exit", scope: !6319, file: !6319, line: 153, type: !3089, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2166)
!6319 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6320 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6321, file: !6321, line: 256, type: !3089, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !2166)
!6321 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6322 = !DILocation(line: 258, column: 2, scope: !6320)
!6323 = !DILocation(line: 260, column: 2, scope: !6320)
!6324 = !DILocation(line: 262, column: 2, scope: !6320)
!6325 = !DILocation(line: 263, column: 2, scope: !6320)
!6326 = !DILocation(line: 267, column: 2, scope: !6320)
!6327 = !DILocation(line: 268, column: 2, scope: !6320)
!6328 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6321, file: !6321, line: 53, type: !3089, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !2166)
!6329 = !DILocation(line: 55, column: 12, scope: !6328)
!6330 = !DILocation(line: 271, column: 3, scope: !6331, inlinedAt: !6332)
!6331 = distinct !DISubprogram(name: "__DSB", scope: !6256, file: !6256, line: 269, type: !3089, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !2166)
!6332 = distinct !DILocation(line: 56, column: 2, scope: !6328)
!6333 = !{i64 3527063}
!6334 = !DILocation(line: 260, column: 3, scope: !6335, inlinedAt: !6336)
!6335 = distinct !DISubprogram(name: "__ISB", scope: !6256, file: !6256, line: 258, type: !3089, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !2166)
!6336 = distinct !DILocation(line: 57, column: 2, scope: !6328)
!6337 = !{i64 3526780}
!6338 = !DILocation(line: 58, column: 1, scope: !6328)
!6339 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6321, file: !6321, line: 96, type: !3089, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !2166)
!6340 = !DILocation(line: 103, column: 13, scope: !6339)
!6341 = !DILocation(line: 975, column: 3, scope: !6342, inlinedAt: !6347)
!6342 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6256, file: !6256, line: 971, type: !6343, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !6345)
!6343 = !DISubroutineType(types: !6344)
!6344 = !{!152}
!6345 = !{!6346}
!6346 = !DILocalVariable(name: "result", scope: !6342, file: !6256, line: 973, type: !152)
!6347 = distinct !DILocation(line: 189, column: 16, scope: !6339)
!6348 = !{i64 3547893}
!6349 = !DILocation(line: 0, scope: !6342, inlinedAt: !6347)
!6350 = !DILocation(line: 189, column: 32, scope: !6339)
!6351 = !DILocalVariable(name: "control", arg: 1, scope: !6352, file: !6256, line: 1001, type: !152)
!6352 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6256, file: !6256, line: 1001, type: !6353, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !6355)
!6353 = !DISubroutineType(types: !6354)
!6354 = !{null, !152}
!6355 = !{!6351}
!6356 = !DILocation(line: 0, scope: !6352, inlinedAt: !6357)
!6357 = distinct !DILocation(line: 189, column: 2, scope: !6339)
!6358 = !DILocation(line: 1003, column: 3, scope: !6352, inlinedAt: !6357)
!6359 = !{i64 3548613}
!6360 = !DILocation(line: 260, column: 3, scope: !6335, inlinedAt: !6361)
!6361 = distinct !DILocation(line: 1004, column: 3, scope: !6352, inlinedAt: !6357)
!6362 = !DILocation(line: 191, column: 1, scope: !6339)
!6363 = distinct !DISubprogram(name: "arch_swap", scope: !6364, file: !6364, line: 33, type: !6266, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !6365)
!6364 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6365 = !{!6366}
!6366 = !DILocalVariable(name: "key", arg: 1, scope: !6363, file: !6364, line: 33, type: !32)
!6367 = !DILocation(line: 0, scope: !6363)
!6368 = !DILocation(line: 36, column: 2, scope: !6363)
!6369 = !DILocation(line: 36, column: 17, scope: !6363)
!6370 = !DILocation(line: 36, column: 25, scope: !6363)
!6371 = !DILocation(line: 37, column: 37, scope: !6363)
!6372 = !DILocation(line: 37, column: 17, scope: !6363)
!6373 = !DILocation(line: 37, column: 35, scope: !6363)
!6374 = !DILocation(line: 41, column: 12, scope: !6363)
!6375 = !DILocalVariable(name: "key", arg: 1, scope: !6376, file: !5937, line: 84, type: !32)
!6376 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5937, file: !5937, line: 84, type: !5948, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !6377)
!6377 = !{!6375}
!6378 = !DILocation(line: 0, scope: !6376, inlinedAt: !6379)
!6379 = distinct !DILocation(line: 44, column: 2, scope: !6363)
!6380 = !DILocation(line: 95, column: 2, scope: !6376, inlinedAt: !6379)
!6381 = !{i64 2226385}
!6382 = !DILocation(line: 53, column: 9, scope: !6363)
!6383 = !DILocation(line: 53, column: 24, scope: !6363)
!6384 = !DILocation(line: 53, column: 2, scope: !6363)
!6385 = distinct !DISubprogram(name: "arch_new_thread", scope: !6386, file: !6386, line: 56, type: !6387, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2670, retainedNodes: !6497)
!6386 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6387 = !DISubroutineType(types: !6388)
!6388 = !{null, !6389, !6492, !193, !559, !106, !106, !106}
!6389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6390, size: 32)
!6390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !6391)
!6391 = !{!6392, !6450, !6462, !6463, !6464, !6465, !6466, !6472, !6487}
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6390, file: !309, line: 247, baseType: !6393, size: 384)
!6393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !6394)
!6394 = !{!6395, !6419, !6426, !6427, !6428, !6437, !6438, !6439}
!6395 = !DIDerivedType(tag: DW_TAG_member, scope: !6393, file: !309, line: 60, baseType: !6396, size: 64)
!6396 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6393, file: !309, line: 60, size: 64, elements: !6397)
!6397 = !{!6398, !6413}
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6396, file: !309, line: 61, baseType: !6399, size: 64)
!6399 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !6400)
!6400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !6401)
!6401 = !{!6402, !6408}
!6402 = !DIDerivedType(tag: DW_TAG_member, scope: !6400, file: !319, line: 38, baseType: !6403, size: 32)
!6403 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6400, file: !319, line: 38, size: 32, elements: !6404)
!6404 = !{!6405, !6407}
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6403, file: !319, line: 39, baseType: !6406, size: 32)
!6406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6400, size: 32)
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6403, file: !319, line: 40, baseType: !6406, size: 32)
!6408 = !DIDerivedType(tag: DW_TAG_member, scope: !6400, file: !319, line: 42, baseType: !6409, size: 32, offset: 32)
!6409 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6400, file: !319, line: 42, size: 32, elements: !6410)
!6410 = !{!6411, !6412}
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6409, file: !319, line: 43, baseType: !6406, size: 32)
!6412 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6409, file: !319, line: 44, baseType: !6406, size: 32)
!6413 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6396, file: !309, line: 62, baseType: !6414, size: 64)
!6414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !6415)
!6415 = !{!6416}
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6414, file: !335, line: 50, baseType: !6417, size: 64)
!6417 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6418, size: 64, elements: !340)
!6418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6414, size: 32)
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6393, file: !309, line: 68, baseType: !6420, size: 32, offset: 64)
!6420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6421, size: 32)
!6421 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !6422)
!6422 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !6423)
!6423 = !{!6424}
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6422, file: !345, line: 232, baseType: !6425, size: 64)
!6425 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !6400)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6393, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6393, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!6428 = !DIDerivedType(tag: DW_TAG_member, scope: !6393, file: !309, line: 90, baseType: !6429, size: 16, offset: 112)
!6429 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6393, file: !309, line: 90, size: 16, elements: !6430)
!6430 = !{!6431, !6436}
!6431 = !DIDerivedType(tag: DW_TAG_member, scope: !6429, file: !309, line: 91, baseType: !6432, size: 16)
!6432 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6429, file: !309, line: 91, size: 16, elements: !6433)
!6433 = !{!6434, !6435}
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6432, file: !309, line: 96, baseType: !359, size: 8)
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6432, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6429, file: !309, line: 100, baseType: !197, size: 16)
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6393, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!6438 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6393, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6393, file: !309, line: 131, baseType: !6440, size: 192, offset: 192)
!6440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !6441)
!6441 = !{!6442, !6443, !6449}
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6440, file: !345, line: 245, baseType: !6399, size: 64)
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6440, file: !345, line: 246, baseType: !6444, size: 32, offset: 64)
!6444 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !6445)
!6445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6446, size: 32)
!6446 = !DISubroutineType(types: !6447)
!6447 = !{null, !6448}
!6448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6440, size: 32)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6440, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6390, file: !309, line: 250, baseType: !6451, size: 288, offset: 384)
!6451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6452)
!6452 = !{!6453, !6454, !6455, !6456, !6457, !6458, !6459, !6460, !6461}
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6451, file: !379, line: 26, baseType: !152, size: 32)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6451, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6451, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6451, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6451, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6451, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6451, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6451, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6451, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6390, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6390, file: !309, line: 256, baseType: !6421, size: 64, offset: 704)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6390, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6390, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6390, file: !309, line: 300, baseType: !6467, size: 96, offset: 1056)
!6467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !6468)
!6468 = !{!6469, !6470, !6471}
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6467, file: !309, line: 153, baseType: !22, size: 32)
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6467, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6467, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6390, file: !309, line: 325, baseType: !6473, size: 32, offset: 1152)
!6473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6474, size: 32)
!6474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !6475)
!6475 = !{!6476, !6482, !6483}
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6474, file: !406, line: 5074, baseType: !6477, size: 96)
!6477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !6478)
!6478 = !{!6479, !6480, !6481}
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6477, file: !410, line: 57, baseType: !413, size: 32)
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6477, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6477, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6474, file: !406, line: 5075, baseType: !6421, size: 64, offset: 96)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6474, file: !406, line: 5076, baseType: !6484, size: 32, offset: 160)
!6484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !6485)
!6485 = !{!6486}
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6484, file: !420, line: 52, baseType: !22, size: 32)
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6390, file: !309, line: 343, baseType: !6488, size: 64, offset: 1184)
!6488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !6489)
!6489 = !{!6490, !6491}
!6490 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6488, file: !379, line: 63, baseType: !152, size: 32)
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6488, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!6492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6493, size: 32)
!6493 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !6494)
!6494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !6495)
!6495 = !{!6496}
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6494, file: !577, line: 48, baseType: !120, size: 8)
!6497 = !{!6498, !6499, !6500, !6501, !6502, !6503, !6504, !6505}
!6498 = !DILocalVariable(name: "thread", arg: 1, scope: !6385, file: !6386, line: 56, type: !6389)
!6499 = !DILocalVariable(name: "stack", arg: 2, scope: !6385, file: !6386, line: 56, type: !6492)
!6500 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6385, file: !6386, line: 57, type: !193)
!6501 = !DILocalVariable(name: "entry", arg: 4, scope: !6385, file: !6386, line: 57, type: !559)
!6502 = !DILocalVariable(name: "p1", arg: 5, scope: !6385, file: !6386, line: 58, type: !106)
!6503 = !DILocalVariable(name: "p2", arg: 6, scope: !6385, file: !6386, line: 58, type: !106)
!6504 = !DILocalVariable(name: "p3", arg: 7, scope: !6385, file: !6386, line: 58, type: !106)
!6505 = !DILocalVariable(name: "iframe", scope: !6385, file: !6386, line: 60, type: !2673)
!6506 = !DILocation(line: 0, scope: !6385)
!6507 = !DILocation(line: 85, column: 11, scope: !6385)
!6508 = !DILocation(line: 93, column: 10, scope: !6385)
!6509 = !DILocation(line: 98, column: 13, scope: !6385)
!6510 = !DILocation(line: 100, column: 15, scope: !6385)
!6511 = !DILocation(line: 100, column: 10, scope: !6385)
!6512 = !DILocation(line: 100, column: 13, scope: !6385)
!6513 = !DILocation(line: 101, column: 15, scope: !6385)
!6514 = !DILocation(line: 101, column: 10, scope: !6385)
!6515 = !DILocation(line: 101, column: 13, scope: !6385)
!6516 = !DILocation(line: 102, column: 15, scope: !6385)
!6517 = !DILocation(line: 102, column: 10, scope: !6385)
!6518 = !DILocation(line: 102, column: 13, scope: !6385)
!6519 = !DILocation(line: 103, column: 15, scope: !6385)
!6520 = !DILocation(line: 103, column: 10, scope: !6385)
!6521 = !DILocation(line: 103, column: 13, scope: !6385)
!6522 = !DILocation(line: 106, column: 10, scope: !6385)
!6523 = !DILocation(line: 106, column: 15, scope: !6385)
!6524 = !DILocation(line: 122, column: 29, scope: !6385)
!6525 = !DILocation(line: 122, column: 23, scope: !6385)
!6526 = !DILocation(line: 122, column: 27, scope: !6385)
!6527 = !DILocation(line: 123, column: 15, scope: !6385)
!6528 = !DILocation(line: 123, column: 23, scope: !6385)
!6529 = !DILocation(line: 143, column: 1, scope: !6385)
!6530 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6386, file: !6386, line: 385, type: !6531, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2670, retainedNodes: !6534)
!6531 = !DISubroutineType(types: !6532)
!6532 = !{!152, !6533, !6533}
!6533 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !152)
!6534 = !{!6535, !6536, !6537, !6540}
!6535 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6530, file: !6386, line: 385, type: !6533)
!6536 = !DILocalVariable(name: "psp", arg: 2, scope: !6530, file: !6386, line: 385, type: !6533)
!6537 = !DILocalVariable(name: "thread", scope: !6530, file: !6386, line: 388, type: !6538)
!6538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6539, size: 32)
!6539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6390)
!6540 = !DILocalVariable(name: "guard_len", scope: !6530, file: !6386, line: 405, type: !152)
!6541 = !DILocation(line: 0, scope: !6530)
!6542 = !DILocation(line: 388, column: 34, scope: !6530)
!6543 = !DILocation(line: 390, column: 13, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6530, file: !6386, line: 390, column: 6)
!6545 = !DILocation(line: 390, column: 6, scope: !6530)
!6546 = !DILocation(line: 438, column: 6, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6530, file: !6386, line: 438, column: 6)
!6548 = !DILocation(line: 438, column: 6, scope: !6530)
!6549 = !DILocation(line: 442, column: 3, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6547, file: !6386, line: 440, column: 22)
!6551 = !DILocation(line: 455, column: 1, scope: !6530)
!6552 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6386, file: !6386, line: 530, type: !6553, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2670, retainedNodes: !6555)
!6553 = !DISubroutineType(types: !6554)
!6554 = !{null, !6389, !193, !559}
!6555 = !{!6556, !6557, !6558}
!6556 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6552, file: !6386, line: 530, type: !6389)
!6557 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6552, file: !6386, line: 530, type: !193)
!6558 = !DILocalVariable(name: "_main", arg: 3, scope: !6552, file: !6386, line: 531, type: !559)
!6559 = !DILocation(line: 0, scope: !6552)
!6560 = !DILocation(line: 535, column: 11, scope: !6552)
!6561 = !DILocation(line: 560, column: 2, scope: !6552)
!6562 = !DILocation(line: 576, column: 2, scope: !6552)
!6563 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6564 = !DILocation(line: 603, column: 2, scope: !6552)
!6565 = distinct !DISubprogram(name: "z_arm_fault", scope: !6566, file: !6566, line: 1036, type: !6567, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6582)
!6566 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6567 = !DISubroutineType(types: !6568)
!6568 = !{null, !152, !152, !152, !6569}
!6569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6570, size: 32)
!6570 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !379, line: 37, baseType: !6571)
!6571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6572)
!6572 = !{!6573, !6574, !6575, !6576, !6577, !6578, !6579, !6580, !6581}
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6571, file: !379, line: 26, baseType: !152, size: 32)
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6571, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6575 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6571, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6571, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6571, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6571, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6571, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6571, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6571, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6582 = !{!6583, !6584, !6585, !6586, !6587, !6588, !6589, !6590, !6591, !6592}
!6583 = !DILocalVariable(name: "msp", arg: 1, scope: !6565, file: !6566, line: 1036, type: !152)
!6584 = !DILocalVariable(name: "psp", arg: 2, scope: !6565, file: !6566, line: 1036, type: !152)
!6585 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6565, file: !6566, line: 1036, type: !152)
!6586 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6565, file: !6566, line: 1037, type: !6569)
!6587 = !DILocalVariable(name: "reason", scope: !6565, file: !6566, line: 1039, type: !152)
!6588 = !DILocalVariable(name: "fault", scope: !6565, file: !6566, line: 1040, type: !107)
!6589 = !DILocalVariable(name: "recoverable", scope: !6565, file: !6566, line: 1041, type: !145)
!6590 = !DILocalVariable(name: "nested_exc", scope: !6565, file: !6566, line: 1041, type: !145)
!6591 = !DILocalVariable(name: "esf", scope: !6565, file: !6566, line: 1042, type: !2741)
!6592 = !DILocalVariable(name: "esf_copy", scope: !6565, file: !6566, line: 1047, type: !2742)
!6593 = !DILocation(line: 0, scope: !6565)
!6594 = !DILocation(line: 1040, column: 19, scope: !6565)
!6595 = !DILocation(line: 1041, column: 2, scope: !6565)
!6596 = !DILocation(line: 1047, column: 2, scope: !6565)
!6597 = !DILocation(line: 1047, column: 15, scope: !6565)
!6598 = !DILocalVariable(name: "key", arg: 1, scope: !6599, file: !5937, line: 84, type: !32)
!6599 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5937, file: !5937, line: 84, type: !5948, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6600)
!6600 = !{!6598}
!6601 = !DILocation(line: 0, scope: !6599, inlinedAt: !6602)
!6602 = distinct !DILocation(line: 1050, column: 2, scope: !6565)
!6603 = !DILocation(line: 95, column: 2, scope: !6599, inlinedAt: !6602)
!6604 = !{i64 2259629}
!6605 = !DILocation(line: 1055, column: 9, scope: !6565)
!6606 = !DILocation(line: 1056, column: 2, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6608, file: !6566, line: 1056, column: 2)
!6608 = distinct !DILexicalBlock(scope: !6565, file: !6566, line: 1056, column: 2)
!6609 = !DILocation(line: 1056, column: 2, scope: !6608)
!6610 = !DILocation(line: 1056, column: 2, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6607, file: !6566, line: 1056, column: 2)
!6612 = !DILocation(line: 1040, column: 24, scope: !6565)
!6613 = !DILocation(line: 1063, column: 11, scope: !6565)
!6614 = !DILocation(line: 1064, column: 6, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6565, file: !6566, line: 1064, column: 6)
!6616 = !{i8 0, i8 2}
!6617 = !DILocation(line: 1064, column: 6, scope: !6565)
!6618 = !DILocation(line: 1070, column: 20, scope: !6565)
!6619 = !DILocation(line: 1070, column: 2, scope: !6565)
!6620 = !DILocation(line: 1089, column: 6, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6565, file: !6566, line: 1089, column: 6)
!6622 = !DILocation(line: 0, scope: !6621)
!6623 = !DILocation(line: 1089, column: 6, scope: !6565)
!6624 = !DILocation(line: 1090, column: 28, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6626, file: !6566, line: 1090, column: 7)
!6626 = distinct !DILexicalBlock(scope: !6621, file: !6566, line: 1089, column: 18)
!6627 = !DILocation(line: 1090, column: 44, scope: !6625)
!6628 = !DILocation(line: 1090, column: 7, scope: !6626)
!6629 = !DILocation(line: 1091, column: 24, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6625, file: !6566, line: 1090, column: 50)
!6631 = !DILocation(line: 1092, column: 3, scope: !6630)
!6632 = !DILocation(line: 1094, column: 23, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6621, file: !6566, line: 1093, column: 9)
!6634 = !DILocation(line: 1097, column: 2, scope: !6565)
!6635 = !DILocation(line: 1098, column: 1, scope: !6565)
!6636 = distinct !DISubprogram(name: "get_esf", scope: !6566, file: !6566, line: 894, type: !6637, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6640)
!6637 = !DISubroutineType(types: !6638)
!6638 = !{!2741, !152, !152, !152, !6639}
!6639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!6640 = !{!6641, !6642, !6643, !6644, !6645, !6646}
!6641 = !DILocalVariable(name: "msp", arg: 1, scope: !6636, file: !6566, line: 894, type: !152)
!6642 = !DILocalVariable(name: "psp", arg: 2, scope: !6636, file: !6566, line: 894, type: !152)
!6643 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6636, file: !6566, line: 894, type: !152)
!6644 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6636, file: !6566, line: 895, type: !6639)
!6645 = !DILocalVariable(name: "alternative_state_exc", scope: !6636, file: !6566, line: 897, type: !145)
!6646 = !DILocalVariable(name: "ptr_esf", scope: !6636, file: !6566, line: 898, type: !2741)
!6647 = !DILocation(line: 0, scope: !6636)
!6648 = !DILocation(line: 900, column: 14, scope: !6636)
!6649 = !DILocation(line: 902, column: 49, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6636, file: !6566, line: 902, column: 6)
!6651 = !DILocation(line: 902, column: 6, scope: !6636)
!6652 = !DILocation(line: 983, column: 44, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6636, file: !6566, line: 983, column: 6)
!6654 = !DILocation(line: 985, column: 3, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6656, file: !6566, line: 985, column: 3)
!6656 = distinct !DILexicalBlock(scope: !6657, file: !6566, line: 985, column: 3)
!6657 = distinct !DILexicalBlock(scope: !6658, file: !6566, line: 985, column: 3)
!6658 = distinct !DILexicalBlock(scope: !6659, file: !6566, line: 985, column: 3)
!6659 = distinct !DILexicalBlock(scope: !6653, file: !6566, line: 984, column: 47)
!6660 = !DILocation(line: 986, column: 3, scope: !6659)
!6661 = !DILocation(line: 983, column: 18, scope: !6653)
!6662 = !DILocation(line: 991, column: 7, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6664, file: !6566, line: 990, column: 30)
!6664 = distinct !DILexicalBlock(scope: !6636, file: !6566, line: 990, column: 6)
!6665 = !DILocation(line: 998, column: 16, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6667, file: !6566, line: 995, column: 10)
!6667 = distinct !DILexicalBlock(scope: !6663, file: !6566, line: 991, column: 7)
!6668 = !DILocation(line: 1002, column: 2, scope: !6636)
!6669 = !DILocation(line: 1003, column: 1, scope: !6636)
!6670 = distinct !DISubprogram(name: "fault_handle", scope: !6566, file: !6566, line: 786, type: !6671, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6673)
!6671 = !DISubroutineType(types: !6672)
!6672 = !{!152, !2741, !107, !6639}
!6673 = !{!6674, !6675, !6676, !6677}
!6674 = !DILocalVariable(name: "esf", arg: 1, scope: !6670, file: !6566, line: 786, type: !2741)
!6675 = !DILocalVariable(name: "fault", arg: 2, scope: !6670, file: !6566, line: 786, type: !107)
!6676 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6670, file: !6566, line: 786, type: !6639)
!6677 = !DILocalVariable(name: "reason", scope: !6670, file: !6566, line: 788, type: !152)
!6678 = !DILocation(line: 0, scope: !6670)
!6679 = !DILocation(line: 790, column: 15, scope: !6670)
!6680 = !DILocation(line: 792, column: 2, scope: !6670)
!6681 = !DILocation(line: 794, column: 12, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6670, file: !6566, line: 792, column: 17)
!6683 = !DILocation(line: 795, column: 3, scope: !6682)
!6684 = !DILocation(line: 800, column: 12, scope: !6682)
!6685 = !DILocation(line: 801, column: 3, scope: !6682)
!6686 = !DILocation(line: 803, column: 12, scope: !6682)
!6687 = !DILocation(line: 804, column: 3, scope: !6682)
!6688 = !DILocation(line: 806, column: 12, scope: !6682)
!6689 = !DILocation(line: 807, column: 3, scope: !6682)
!6690 = !DILocation(line: 814, column: 3, scope: !6682)
!6691 = !DILocation(line: 815, column: 3, scope: !6682)
!6692 = !DILocation(line: 820, column: 3, scope: !6682)
!6693 = !DILocation(line: 821, column: 3, scope: !6682)
!6694 = !DILocation(line: 829, column: 2, scope: !6670)
!6695 = distinct !DISubprogram(name: "hard_fault", scope: !6566, file: !6566, line: 709, type: !6696, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6698)
!6696 = !DISubroutineType(types: !6697)
!6697 = !{!152, !2741, !6639}
!6698 = !{!6699, !6700, !6701}
!6699 = !DILocalVariable(name: "esf", arg: 1, scope: !6695, file: !6566, line: 709, type: !2741)
!6700 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6695, file: !6566, line: 709, type: !6639)
!6701 = !DILocalVariable(name: "reason", scope: !6695, file: !6566, line: 711, type: !152)
!6702 = !DILocation(line: 0, scope: !6695)
!6703 = !DILocation(line: 713, column: 2, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6705, file: !6566, line: 713, column: 2)
!6705 = distinct !DILexicalBlock(scope: !6706, file: !6566, line: 713, column: 2)
!6706 = distinct !DILexicalBlock(scope: !6707, file: !6566, line: 713, column: 2)
!6707 = distinct !DILexicalBlock(scope: !6695, file: !6566, line: 713, column: 2)
!6708 = !DILocation(line: 732, column: 15, scope: !6695)
!6709 = !DILocation(line: 734, column: 12, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6695, file: !6566, line: 734, column: 6)
!6711 = !DILocation(line: 734, column: 17, scope: !6710)
!6712 = !DILocation(line: 734, column: 41, scope: !6710)
!6713 = !DILocation(line: 734, column: 6, scope: !6695)
!6714 = !DILocation(line: 735, column: 3, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6716, file: !6566, line: 735, column: 3)
!6716 = distinct !DILexicalBlock(scope: !6717, file: !6566, line: 735, column: 3)
!6717 = distinct !DILexicalBlock(scope: !6718, file: !6566, line: 735, column: 3)
!6718 = distinct !DILexicalBlock(scope: !6719, file: !6566, line: 735, column: 3)
!6719 = distinct !DILexicalBlock(scope: !6710, file: !6566, line: 734, column: 47)
!6720 = !DILocation(line: 736, column: 2, scope: !6719)
!6721 = !DILocation(line: 736, column: 19, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6710, file: !6566, line: 736, column: 13)
!6723 = !DILocation(line: 736, column: 49, scope: !6722)
!6724 = !DILocation(line: 736, column: 13, scope: !6710)
!6725 = !DILocation(line: 737, column: 3, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6727, file: !6566, line: 737, column: 3)
!6727 = distinct !DILexicalBlock(scope: !6728, file: !6566, line: 737, column: 3)
!6728 = distinct !DILexicalBlock(scope: !6729, file: !6566, line: 737, column: 3)
!6729 = distinct !DILexicalBlock(scope: !6730, file: !6566, line: 737, column: 3)
!6730 = distinct !DILexicalBlock(scope: !6722, file: !6566, line: 736, column: 55)
!6731 = !DILocation(line: 738, column: 2, scope: !6730)
!6732 = !DILocation(line: 738, column: 19, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6722, file: !6566, line: 738, column: 13)
!6734 = !DILocation(line: 738, column: 24, scope: !6733)
!6735 = !DILocation(line: 738, column: 47, scope: !6733)
!6736 = !DILocation(line: 738, column: 13, scope: !6722)
!6737 = !DILocation(line: 739, column: 3, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6739, file: !6566, line: 739, column: 3)
!6739 = distinct !DILexicalBlock(scope: !6740, file: !6566, line: 739, column: 3)
!6740 = distinct !DILexicalBlock(scope: !6741, file: !6566, line: 739, column: 3)
!6741 = distinct !DILexicalBlock(scope: !6742, file: !6566, line: 739, column: 3)
!6742 = distinct !DILexicalBlock(scope: !6733, file: !6566, line: 738, column: 53)
!6743 = !DILocation(line: 740, column: 7, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6742, file: !6566, line: 740, column: 7)
!6745 = !DILocation(line: 740, column: 7, scope: !6742)
!6746 = !DILocation(line: 741, column: 4, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6748, file: !6566, line: 741, column: 4)
!6748 = distinct !DILexicalBlock(scope: !6749, file: !6566, line: 741, column: 4)
!6749 = distinct !DILexicalBlock(scope: !6750, file: !6566, line: 741, column: 4)
!6750 = distinct !DILexicalBlock(scope: !6751, file: !6566, line: 741, column: 4)
!6751 = distinct !DILexicalBlock(scope: !6744, file: !6566, line: 740, column: 38)
!6752 = !DILocation(line: 742, column: 24, scope: !6751)
!6753 = !DILocation(line: 743, column: 3, scope: !6751)
!6754 = !DILocation(line: 743, column: 20, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6744, file: !6566, line: 743, column: 14)
!6756 = !DILocation(line: 743, column: 25, scope: !6755)
!6757 = !DILocation(line: 743, column: 52, scope: !6755)
!6758 = !DILocation(line: 743, column: 14, scope: !6744)
!6759 = !DILocation(line: 744, column: 13, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6755, file: !6566, line: 743, column: 58)
!6761 = !DILocation(line: 745, column: 3, scope: !6760)
!6762 = !DILocation(line: 745, column: 20, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6755, file: !6566, line: 745, column: 14)
!6764 = !DILocation(line: 745, column: 25, scope: !6763)
!6765 = !DILocation(line: 745, column: 52, scope: !6763)
!6766 = !DILocation(line: 745, column: 14, scope: !6755)
!6767 = !DILocation(line: 746, column: 13, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6763, file: !6566, line: 745, column: 58)
!6769 = !DILocation(line: 747, column: 3, scope: !6768)
!6770 = !DILocation(line: 747, column: 20, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6763, file: !6566, line: 747, column: 14)
!6772 = !DILocation(line: 747, column: 52, scope: !6771)
!6773 = !DILocation(line: 747, column: 14, scope: !6763)
!6774 = !DILocation(line: 748, column: 13, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6771, file: !6566, line: 747, column: 58)
!6776 = !DILocation(line: 754, column: 4, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6778, file: !6566, line: 754, column: 4)
!6778 = distinct !DILexicalBlock(scope: !6779, file: !6566, line: 754, column: 4)
!6779 = distinct !DILexicalBlock(scope: !6780, file: !6566, line: 754, column: 4)
!6780 = distinct !DILexicalBlock(scope: !6771, file: !6566, line: 753, column: 10)
!6781 = !DILocation(line: 758, column: 3, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6783, file: !6566, line: 758, column: 3)
!6783 = distinct !DILexicalBlock(scope: !6784, file: !6566, line: 758, column: 3)
!6784 = distinct !DILexicalBlock(scope: !6785, file: !6566, line: 758, column: 3)
!6785 = distinct !DILexicalBlock(scope: !6733, file: !6566, line: 757, column: 9)
!6786 = !DILocation(line: 766, column: 2, scope: !6695)
!6787 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6566, file: !6566, line: 229, type: !6671, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6788)
!6788 = !{!6789, !6790, !6791, !6792, !6793, !6794, !6797}
!6789 = !DILocalVariable(name: "esf", arg: 1, scope: !6787, file: !6566, line: 229, type: !2741)
!6790 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6787, file: !6566, line: 229, type: !107)
!6791 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6787, file: !6566, line: 230, type: !6639)
!6792 = !DILocalVariable(name: "reason", scope: !6787, file: !6566, line: 232, type: !152)
!6793 = !DILocalVariable(name: "mmfar", scope: !6787, file: !6566, line: 233, type: !152)
!6794 = !DILocalVariable(name: "temp", scope: !6795, file: !6566, line: 254, type: !152)
!6795 = distinct !DILexicalBlock(scope: !6796, file: !6566, line: 244, column: 48)
!6796 = distinct !DILexicalBlock(scope: !6787, file: !6566, line: 244, column: 6)
!6797 = !DILocalVariable(name: "min_stack_ptr", scope: !6798, file: !6566, line: 309, type: !152)
!6798 = distinct !DILexicalBlock(scope: !6799, file: !6566, line: 308, column: 43)
!6799 = distinct !DILexicalBlock(scope: !6800, file: !6566, line: 308, column: 7)
!6800 = distinct !DILexicalBlock(scope: !6801, file: !6566, line: 289, column: 40)
!6801 = distinct !DILexicalBlock(scope: !6787, file: !6566, line: 288, column: 6)
!6802 = !DILocation(line: 0, scope: !6787)
!6803 = !DILocation(line: 235, column: 2, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6805, file: !6566, line: 235, column: 2)
!6805 = distinct !DILexicalBlock(scope: !6806, file: !6566, line: 235, column: 2)
!6806 = distinct !DILexicalBlock(scope: !6807, file: !6566, line: 235, column: 2)
!6807 = distinct !DILexicalBlock(scope: !6787, file: !6566, line: 235, column: 2)
!6808 = !DILocation(line: 237, column: 12, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6787, file: !6566, line: 237, column: 6)
!6810 = !DILocation(line: 237, column: 17, scope: !6809)
!6811 = !DILocation(line: 237, column: 41, scope: !6809)
!6812 = !DILocation(line: 237, column: 6, scope: !6787)
!6813 = !DILocation(line: 238, column: 3, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6815, file: !6566, line: 238, column: 3)
!6815 = distinct !DILexicalBlock(scope: !6816, file: !6566, line: 238, column: 3)
!6816 = distinct !DILexicalBlock(scope: !6817, file: !6566, line: 238, column: 3)
!6817 = distinct !DILexicalBlock(scope: !6818, file: !6566, line: 238, column: 3)
!6818 = distinct !DILexicalBlock(scope: !6809, file: !6566, line: 237, column: 47)
!6819 = !DILocation(line: 240, column: 2, scope: !6818)
!6820 = !DILocation(line: 241, column: 12, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6787, file: !6566, line: 241, column: 6)
!6822 = !DILocation(line: 241, column: 17, scope: !6821)
!6823 = !DILocation(line: 241, column: 43, scope: !6821)
!6824 = !DILocation(line: 241, column: 6, scope: !6787)
!6825 = !DILocation(line: 242, column: 3, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6827, file: !6566, line: 242, column: 3)
!6827 = distinct !DILexicalBlock(scope: !6828, file: !6566, line: 242, column: 3)
!6828 = distinct !DILexicalBlock(scope: !6829, file: !6566, line: 242, column: 3)
!6829 = distinct !DILexicalBlock(scope: !6830, file: !6566, line: 242, column: 3)
!6830 = distinct !DILexicalBlock(scope: !6821, file: !6566, line: 241, column: 49)
!6831 = !DILocation(line: 243, column: 2, scope: !6830)
!6832 = !DILocation(line: 244, column: 12, scope: !6796)
!6833 = !DILocation(line: 244, column: 17, scope: !6796)
!6834 = !DILocation(line: 244, column: 42, scope: !6796)
!6835 = !DILocation(line: 244, column: 6, scope: !6787)
!6836 = !DILocation(line: 245, column: 3, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6838, file: !6566, line: 245, column: 3)
!6838 = distinct !DILexicalBlock(scope: !6839, file: !6566, line: 245, column: 3)
!6839 = distinct !DILexicalBlock(scope: !6840, file: !6566, line: 245, column: 3)
!6840 = distinct !DILexicalBlock(scope: !6795, file: !6566, line: 245, column: 3)
!6841 = !DILocation(line: 254, column: 24, scope: !6795)
!6842 = !DILocation(line: 0, scope: !6795)
!6843 = !DILocation(line: 256, column: 13, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6795, file: !6566, line: 256, column: 7)
!6845 = !DILocation(line: 256, column: 18, scope: !6844)
!6846 = !DILocation(line: 256, column: 44, scope: !6844)
!6847 = !DILocation(line: 256, column: 7, scope: !6795)
!6848 = !DILocation(line: 258, column: 4, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6850, file: !6566, line: 258, column: 4)
!6850 = distinct !DILexicalBlock(scope: !6851, file: !6566, line: 258, column: 4)
!6851 = distinct !DILexicalBlock(scope: !6852, file: !6566, line: 258, column: 4)
!6852 = distinct !DILexicalBlock(scope: !6853, file: !6566, line: 258, column: 4)
!6853 = distinct !DILexicalBlock(scope: !6844, file: !6566, line: 256, column: 50)
!6854 = !DILocation(line: 259, column: 24, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6853, file: !6566, line: 259, column: 8)
!6856 = !DILocation(line: 259, column: 8, scope: !6853)
!6857 = !DILocation(line: 261, column: 15, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6855, file: !6566, line: 259, column: 30)
!6859 = !DILocation(line: 262, column: 4, scope: !6858)
!6860 = !DILocation(line: 265, column: 12, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6787, file: !6566, line: 265, column: 6)
!6862 = !DILocation(line: 265, column: 17, scope: !6861)
!6863 = !DILocation(line: 265, column: 42, scope: !6861)
!6864 = !DILocation(line: 265, column: 6, scope: !6787)
!6865 = !DILocation(line: 266, column: 3, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6867, file: !6566, line: 266, column: 3)
!6867 = distinct !DILexicalBlock(scope: !6868, file: !6566, line: 266, column: 3)
!6868 = distinct !DILexicalBlock(scope: !6869, file: !6566, line: 266, column: 3)
!6869 = distinct !DILexicalBlock(scope: !6870, file: !6566, line: 266, column: 3)
!6870 = distinct !DILexicalBlock(scope: !6861, file: !6566, line: 265, column: 48)
!6871 = !DILocation(line: 267, column: 2, scope: !6870)
!6872 = !DILocation(line: 269, column: 12, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6787, file: !6566, line: 269, column: 6)
!6874 = !DILocation(line: 269, column: 17, scope: !6873)
!6875 = !DILocation(line: 269, column: 41, scope: !6873)
!6876 = !DILocation(line: 269, column: 6, scope: !6787)
!6877 = !DILocation(line: 270, column: 3, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6879, file: !6566, line: 270, column: 3)
!6879 = distinct !DILexicalBlock(scope: !6880, file: !6566, line: 270, column: 3)
!6880 = distinct !DILexicalBlock(scope: !6881, file: !6566, line: 270, column: 3)
!6881 = distinct !DILexicalBlock(scope: !6882, file: !6566, line: 270, column: 3)
!6882 = distinct !DILexicalBlock(scope: !6873, file: !6566, line: 269, column: 47)
!6883 = !DILocation(line: 272, column: 2, scope: !6882)
!6884 = !DILocation(line: 288, column: 12, scope: !6801)
!6885 = !DILocation(line: 288, column: 17, scope: !6801)
!6886 = !DILocation(line: 288, column: 41, scope: !6801)
!6887 = !DILocation(line: 289, column: 9, scope: !6801)
!6888 = !DILocation(line: 289, column: 14, scope: !6801)
!6889 = !DILocation(line: 288, column: 6, scope: !6787)
!6890 = !DILocation(line: 308, column: 12, scope: !6799)
!6891 = !DILocation(line: 308, column: 17, scope: !6799)
!6892 = !DILocation(line: 308, column: 7, scope: !6800)
!6893 = !DILocation(line: 310, column: 6, scope: !6798)
!6894 = !DILocation(line: 309, column: 29, scope: !6798)
!6895 = !DILocation(line: 0, scope: !6798)
!6896 = !DILocation(line: 312, column: 8, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6798, file: !6566, line: 312, column: 8)
!6898 = !DILocation(line: 312, column: 8, scope: !6798)
!6899 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6900, file: !6256, line: 1099, type: !152)
!6900 = distinct !DISubprogram(name: "__set_PSP", scope: !6256, file: !6256, line: 1099, type: !6353, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6901)
!6901 = !{!6899}
!6902 = !DILocation(line: 0, scope: !6900, inlinedAt: !6903)
!6903 = distinct !DILocation(line: 338, column: 5, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6897, file: !6566, line: 312, column: 23)
!6905 = !DILocation(line: 1101, column: 3, scope: !6900, inlinedAt: !6903)
!6906 = !{i64 3578032}
!6907 = !DILocation(line: 341, column: 4, scope: !6904)
!6908 = !DILocation(line: 342, column: 5, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6910, file: !6566, line: 342, column: 5)
!6910 = distinct !DILexicalBlock(scope: !6911, file: !6566, line: 342, column: 5)
!6911 = distinct !DILexicalBlock(scope: !6897, file: !6566, line: 341, column: 11)
!6912 = !DILocation(line: 342, column: 5, scope: !6910)
!6913 = !DILocation(line: 342, column: 5, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6909, file: !6566, line: 342, column: 5)
!6915 = !DILocation(line: 360, column: 12, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6787, file: !6566, line: 360, column: 6)
!6917 = !DILocation(line: 360, column: 17, scope: !6916)
!6918 = !DILocation(line: 360, column: 41, scope: !6916)
!6919 = !DILocation(line: 360, column: 6, scope: !6787)
!6920 = !DILocation(line: 361, column: 14, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6916, file: !6566, line: 360, column: 47)
!6922 = !DILocation(line: 362, column: 2, scope: !6921)
!6923 = !DILocation(line: 366, column: 12, scope: !6787)
!6924 = !DILocation(line: 369, column: 15, scope: !6787)
!6925 = !DILocation(line: 371, column: 2, scope: !6787)
!6926 = distinct !DISubprogram(name: "bus_fault", scope: !6566, file: !6566, line: 383, type: !6927, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6929)
!6927 = !DISubroutineType(types: !6928)
!6928 = !{!107, !2741, !107, !6639}
!6929 = !{!6930, !6931, !6932, !6933, !6934}
!6930 = !DILocalVariable(name: "esf", arg: 1, scope: !6926, file: !6566, line: 383, type: !2741)
!6931 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6926, file: !6566, line: 383, type: !107)
!6932 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6926, file: !6566, line: 383, type: !6639)
!6933 = !DILocalVariable(name: "reason", scope: !6926, file: !6566, line: 385, type: !152)
!6934 = !DILocalVariable(name: "bfar", scope: !6935, file: !6566, line: 405, type: !152)
!6935 = distinct !DILexicalBlock(scope: !6936, file: !6566, line: 395, column: 42)
!6936 = distinct !DILexicalBlock(scope: !6926, file: !6566, line: 395, column: 6)
!6937 = !DILocation(line: 0, scope: !6926)
!6938 = !DILocation(line: 387, column: 2, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6940, file: !6566, line: 387, column: 2)
!6940 = distinct !DILexicalBlock(scope: !6941, file: !6566, line: 387, column: 2)
!6941 = distinct !DILexicalBlock(scope: !6942, file: !6566, line: 387, column: 2)
!6942 = distinct !DILexicalBlock(scope: !6926, file: !6566, line: 387, column: 2)
!6943 = !DILocation(line: 389, column: 11, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6926, file: !6566, line: 389, column: 6)
!6945 = !DILocation(line: 389, column: 16, scope: !6944)
!6946 = !DILocation(line: 389, column: 6, scope: !6926)
!6947 = !DILocation(line: 390, column: 3, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6949, file: !6566, line: 390, column: 3)
!6949 = distinct !DILexicalBlock(scope: !6950, file: !6566, line: 390, column: 3)
!6950 = distinct !DILexicalBlock(scope: !6951, file: !6566, line: 390, column: 3)
!6951 = distinct !DILexicalBlock(scope: !6952, file: !6566, line: 390, column: 3)
!6952 = distinct !DILexicalBlock(scope: !6944, file: !6566, line: 389, column: 39)
!6953 = !DILocation(line: 391, column: 2, scope: !6952)
!6954 = !DILocation(line: 392, column: 11, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6926, file: !6566, line: 392, column: 6)
!6956 = !DILocation(line: 392, column: 16, scope: !6955)
!6957 = !DILocation(line: 392, column: 6, scope: !6926)
!6958 = !DILocation(line: 393, column: 3, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6960, file: !6566, line: 393, column: 3)
!6960 = distinct !DILexicalBlock(scope: !6961, file: !6566, line: 393, column: 3)
!6961 = distinct !DILexicalBlock(scope: !6962, file: !6566, line: 393, column: 3)
!6962 = distinct !DILexicalBlock(scope: !6963, file: !6566, line: 393, column: 3)
!6963 = distinct !DILexicalBlock(scope: !6955, file: !6566, line: 392, column: 41)
!6964 = !DILocation(line: 394, column: 2, scope: !6963)
!6965 = !DILocation(line: 395, column: 11, scope: !6936)
!6966 = !DILocation(line: 395, column: 16, scope: !6936)
!6967 = !DILocation(line: 395, column: 6, scope: !6926)
!6968 = !DILocation(line: 396, column: 3, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6970, file: !6566, line: 396, column: 3)
!6970 = distinct !DILexicalBlock(scope: !6971, file: !6566, line: 396, column: 3)
!6971 = distinct !DILexicalBlock(scope: !6972, file: !6566, line: 396, column: 3)
!6972 = distinct !DILexicalBlock(scope: !6935, file: !6566, line: 396, column: 3)
!6973 = !DILocation(line: 405, column: 3, scope: !6935)
!6974 = !DILocation(line: 0, scope: !6935)
!6975 = !DILocation(line: 407, column: 13, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6935, file: !6566, line: 407, column: 7)
!6977 = !DILocation(line: 407, column: 18, scope: !6976)
!6978 = !DILocation(line: 407, column: 44, scope: !6976)
!6979 = !DILocation(line: 407, column: 7, scope: !6935)
!6980 = !DILocation(line: 408, column: 4, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6982, file: !6566, line: 408, column: 4)
!6982 = distinct !DILexicalBlock(scope: !6983, file: !6566, line: 408, column: 4)
!6983 = distinct !DILexicalBlock(scope: !6984, file: !6566, line: 408, column: 4)
!6984 = distinct !DILexicalBlock(scope: !6985, file: !6566, line: 408, column: 4)
!6985 = distinct !DILexicalBlock(scope: !6976, file: !6566, line: 407, column: 50)
!6986 = !DILocation(line: 409, column: 24, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6985, file: !6566, line: 409, column: 8)
!6988 = !DILocation(line: 409, column: 8, scope: !6985)
!6989 = !DILocation(line: 411, column: 15, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6987, file: !6566, line: 409, column: 30)
!6991 = !DILocation(line: 412, column: 4, scope: !6990)
!6992 = !DILocation(line: 415, column: 11, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6926, file: !6566, line: 415, column: 6)
!6994 = !DILocation(line: 415, column: 16, scope: !6993)
!6995 = !DILocation(line: 415, column: 6, scope: !6926)
!6996 = !DILocation(line: 416, column: 3, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6998, file: !6566, line: 416, column: 3)
!6998 = distinct !DILexicalBlock(scope: !6999, file: !6566, line: 416, column: 3)
!6999 = distinct !DILexicalBlock(scope: !7000, file: !6566, line: 416, column: 3)
!7000 = distinct !DILexicalBlock(scope: !7001, file: !6566, line: 416, column: 3)
!7001 = distinct !DILexicalBlock(scope: !6993, file: !6566, line: 415, column: 44)
!7002 = !DILocation(line: 417, column: 2, scope: !7001)
!7003 = !DILocation(line: 418, column: 12, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !6926, file: !6566, line: 418, column: 6)
!7005 = !DILocation(line: 418, column: 17, scope: !7004)
!7006 = !DILocation(line: 418, column: 41, scope: !7004)
!7007 = !DILocation(line: 418, column: 6, scope: !6926)
!7008 = !DILocation(line: 423, column: 18, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !7004, file: !6566, line: 423, column: 13)
!7010 = !DILocation(line: 423, column: 23, scope: !7009)
!7011 = !DILocation(line: 423, column: 13, scope: !7004)
!7012 = !DILocation(line: 0, scope: !7004)
!7013 = !DILocation(line: 524, column: 12, scope: !6926)
!7014 = !DILocation(line: 526, column: 15, scope: !6926)
!7015 = !DILocation(line: 528, column: 2, scope: !6926)
!7016 = distinct !DISubprogram(name: "usage_fault", scope: !6566, file: !6566, line: 539, type: !7017, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !7021)
!7017 = !DISubroutineType(types: !7018)
!7018 = !{!152, !7019}
!7019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7020, size: 32)
!7020 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2742)
!7021 = !{!7022, !7023}
!7022 = !DILocalVariable(name: "esf", arg: 1, scope: !7016, file: !6566, line: 539, type: !7019)
!7023 = !DILocalVariable(name: "reason", scope: !7016, file: !6566, line: 541, type: !152)
!7024 = !DILocation(line: 0, scope: !7016)
!7025 = !DILocation(line: 543, column: 2, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7027, file: !6566, line: 543, column: 2)
!7027 = distinct !DILexicalBlock(scope: !7028, file: !6566, line: 543, column: 2)
!7028 = distinct !DILexicalBlock(scope: !7029, file: !6566, line: 543, column: 2)
!7029 = distinct !DILexicalBlock(scope: !7016, file: !6566, line: 543, column: 2)
!7030 = !DILocation(line: 546, column: 12, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7016, file: !6566, line: 546, column: 6)
!7032 = !DILocation(line: 546, column: 17, scope: !7031)
!7033 = !DILocation(line: 546, column: 43, scope: !7031)
!7034 = !DILocation(line: 546, column: 6, scope: !7016)
!7035 = !DILocation(line: 547, column: 3, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7037, file: !6566, line: 547, column: 3)
!7037 = distinct !DILexicalBlock(scope: !7038, file: !6566, line: 547, column: 3)
!7038 = distinct !DILexicalBlock(scope: !7039, file: !6566, line: 547, column: 3)
!7039 = distinct !DILexicalBlock(scope: !7040, file: !6566, line: 547, column: 3)
!7040 = distinct !DILexicalBlock(scope: !7031, file: !6566, line: 546, column: 49)
!7041 = !DILocation(line: 548, column: 2, scope: !7040)
!7042 = !DILocation(line: 549, column: 12, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7016, file: !6566, line: 549, column: 6)
!7044 = !DILocation(line: 549, column: 17, scope: !7043)
!7045 = !DILocation(line: 549, column: 43, scope: !7043)
!7046 = !DILocation(line: 549, column: 6, scope: !7016)
!7047 = !DILocation(line: 550, column: 3, scope: !7048)
!7048 = distinct !DILexicalBlock(scope: !7049, file: !6566, line: 550, column: 3)
!7049 = distinct !DILexicalBlock(scope: !7050, file: !6566, line: 550, column: 3)
!7050 = distinct !DILexicalBlock(scope: !7051, file: !6566, line: 550, column: 3)
!7051 = distinct !DILexicalBlock(scope: !7052, file: !6566, line: 550, column: 3)
!7052 = distinct !DILexicalBlock(scope: !7043, file: !6566, line: 549, column: 49)
!7053 = !DILocation(line: 551, column: 2, scope: !7052)
!7054 = !DILocation(line: 567, column: 12, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7016, file: !6566, line: 567, column: 6)
!7056 = !DILocation(line: 567, column: 17, scope: !7055)
!7057 = !DILocation(line: 567, column: 38, scope: !7055)
!7058 = !DILocation(line: 567, column: 6, scope: !7016)
!7059 = !DILocation(line: 568, column: 3, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !7061, file: !6566, line: 568, column: 3)
!7061 = distinct !DILexicalBlock(scope: !7062, file: !6566, line: 568, column: 3)
!7062 = distinct !DILexicalBlock(scope: !7063, file: !6566, line: 568, column: 3)
!7063 = distinct !DILexicalBlock(scope: !7064, file: !6566, line: 568, column: 3)
!7064 = distinct !DILexicalBlock(scope: !7055, file: !6566, line: 567, column: 44)
!7065 = !DILocation(line: 569, column: 2, scope: !7064)
!7066 = !DILocation(line: 570, column: 12, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !7016, file: !6566, line: 570, column: 6)
!7068 = !DILocation(line: 570, column: 17, scope: !7067)
!7069 = !DILocation(line: 570, column: 39, scope: !7067)
!7070 = !DILocation(line: 570, column: 6, scope: !7016)
!7071 = !DILocation(line: 571, column: 3, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7073, file: !6566, line: 571, column: 3)
!7073 = distinct !DILexicalBlock(scope: !7074, file: !6566, line: 571, column: 3)
!7074 = distinct !DILexicalBlock(scope: !7075, file: !6566, line: 571, column: 3)
!7075 = distinct !DILexicalBlock(scope: !7076, file: !6566, line: 571, column: 3)
!7076 = distinct !DILexicalBlock(scope: !7067, file: !6566, line: 570, column: 45)
!7077 = !DILocation(line: 572, column: 2, scope: !7076)
!7078 = !DILocation(line: 573, column: 12, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !7016, file: !6566, line: 573, column: 6)
!7080 = !DILocation(line: 573, column: 17, scope: !7079)
!7081 = !DILocation(line: 573, column: 42, scope: !7079)
!7082 = !DILocation(line: 573, column: 6, scope: !7016)
!7083 = !DILocation(line: 574, column: 3, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !7085, file: !6566, line: 574, column: 3)
!7085 = distinct !DILexicalBlock(scope: !7086, file: !6566, line: 574, column: 3)
!7086 = distinct !DILexicalBlock(scope: !7087, file: !6566, line: 574, column: 3)
!7087 = distinct !DILexicalBlock(scope: !7088, file: !6566, line: 574, column: 3)
!7088 = distinct !DILexicalBlock(scope: !7079, file: !6566, line: 573, column: 48)
!7089 = !DILocation(line: 575, column: 2, scope: !7088)
!7090 = !DILocation(line: 576, column: 12, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7016, file: !6566, line: 576, column: 6)
!7092 = !DILocation(line: 576, column: 17, scope: !7091)
!7093 = !DILocation(line: 576, column: 44, scope: !7091)
!7094 = !DILocation(line: 576, column: 6, scope: !7016)
!7095 = !DILocation(line: 577, column: 3, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7097, file: !6566, line: 577, column: 3)
!7097 = distinct !DILexicalBlock(scope: !7098, file: !6566, line: 577, column: 3)
!7098 = distinct !DILexicalBlock(scope: !7099, file: !6566, line: 577, column: 3)
!7099 = distinct !DILexicalBlock(scope: !7100, file: !6566, line: 577, column: 3)
!7100 = distinct !DILexicalBlock(scope: !7091, file: !6566, line: 576, column: 50)
!7101 = !DILocation(line: 578, column: 2, scope: !7100)
!7102 = !DILocation(line: 581, column: 12, scope: !7016)
!7103 = !DILocation(line: 583, column: 2, scope: !7016)
!7104 = distinct !DISubprogram(name: "debug_monitor", scope: !6566, file: !6566, line: 632, type: !7105, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !7107)
!7105 = !DISubroutineType(types: !7106)
!7106 = !{null, !2741, !6639}
!7107 = !{!7108, !7109}
!7108 = !DILocalVariable(name: "esf", arg: 1, scope: !7104, file: !6566, line: 632, type: !2741)
!7109 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7104, file: !6566, line: 632, type: !6639)
!7110 = !DILocation(line: 0, scope: !7104)
!7111 = !DILocation(line: 634, column: 15, scope: !7104)
!7112 = !DILocation(line: 636, column: 2, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7114, file: !6566, line: 636, column: 2)
!7114 = distinct !DILexicalBlock(scope: !7115, file: !6566, line: 636, column: 2)
!7115 = distinct !DILexicalBlock(scope: !7116, file: !6566, line: 636, column: 2)
!7116 = distinct !DILexicalBlock(scope: !7104, file: !6566, line: 636, column: 2)
!7117 = !DILocation(line: 652, column: 1, scope: !7104)
!7118 = distinct !DISubprogram(name: "reserved_exception", scope: !6566, file: !6566, line: 776, type: !7119, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !7121)
!7119 = !DISubroutineType(types: !7120)
!7120 = !{null, !7019, !107}
!7121 = !{!7122, !7123}
!7122 = !DILocalVariable(name: "esf", arg: 1, scope: !7118, file: !6566, line: 776, type: !7019)
!7123 = !DILocalVariable(name: "fault", arg: 2, scope: !7118, file: !6566, line: 776, type: !107)
!7124 = !DILocation(line: 0, scope: !7118)
!7125 = !DILocation(line: 780, column: 2, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7127, file: !6566, line: 780, column: 2)
!7127 = distinct !DILexicalBlock(scope: !7128, file: !6566, line: 780, column: 2)
!7128 = distinct !DILexicalBlock(scope: !7129, file: !6566, line: 780, column: 2)
!7129 = distinct !DILexicalBlock(scope: !7118, file: !6566, line: 780, column: 2)
!7130 = !DILocation(line: 783, column: 1, scope: !7118)
!7131 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6566, file: !6566, line: 658, type: !7132, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !7134)
!7132 = !DISubroutineType(types: !7133)
!7133 = !{!145, !2741}
!7134 = !{!7135, !7136, !7137}
!7135 = !DILocalVariable(name: "esf", arg: 1, scope: !7131, file: !6566, line: 658, type: !2741)
!7136 = !DILocalVariable(name: "ret_addr", scope: !7131, file: !6566, line: 660, type: !2784)
!7137 = !DILocalVariable(name: "fault_insn", scope: !7131, file: !6566, line: 686, type: !197)
!7138 = !DILocation(line: 0, scope: !7131)
!7139 = !DILocation(line: 660, column: 46, scope: !7131)
!7140 = !DILocation(line: 660, column: 23, scope: !7131)
!7141 = !DILocation(line: 682, column: 11, scope: !7131)
!7142 = !DILocation(line: 271, column: 3, scope: !7143, inlinedAt: !7144)
!7143 = distinct !DISubprogram(name: "__DSB", scope: !6256, file: !6256, line: 269, type: !3089, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !2166)
!7144 = distinct !DILocation(line: 683, column: 2, scope: !7131)
!7145 = !{i64 3554167}
!7146 = !DILocation(line: 260, column: 3, scope: !7147, inlinedAt: !7148)
!7147 = distinct !DISubprogram(name: "__ISB", scope: !6256, file: !6256, line: 258, type: !3089, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !2166)
!7148 = distinct !DILocation(line: 684, column: 2, scope: !7131)
!7149 = !{i64 3553884}
!7150 = !DILocation(line: 686, column: 35, scope: !7131)
!7151 = !DILocation(line: 686, column: 24, scope: !7131)
!7152 = !DILocation(line: 688, column: 11, scope: !7131)
!7153 = !DILocation(line: 271, column: 3, scope: !7143, inlinedAt: !7154)
!7154 = distinct !DILocation(line: 689, column: 2, scope: !7131)
!7155 = !DILocation(line: 260, column: 3, scope: !7147, inlinedAt: !7156)
!7156 = distinct !DILocation(line: 690, column: 2, scope: !7131)
!7157 = !DILocation(line: 693, column: 45, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7131, file: !6566, line: 693, column: 6)
!7159 = !DILocation(line: 699, column: 1, scope: !7131)
!7160 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6566, file: !6566, line: 1107, type: !3089, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !2166)
!7161 = !DILocation(line: 1111, column: 11, scope: !7160)
!7162 = !DILocation(line: 1136, column: 1, scope: !7160)
!7163 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7164, file: !7164, line: 26, type: !3089, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !7165)
!7164 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7165 = !{!7166}
!7166 = !DILocalVariable(name: "irq", scope: !7163, file: !7164, line: 28, type: !107)
!7167 = !DILocation(line: 0, scope: !7163)
!7168 = !DILocation(line: 30, column: 2, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7163, file: !7164, line: 30, column: 2)
!7170 = !DILocation(line: 31, column: 3, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7172, file: !7164, line: 30, column: 39)
!7172 = distinct !DILexicalBlock(scope: !7169, file: !7164, line: 30, column: 2)
!7173 = !DILocation(line: 30, column: 35, scope: !7172)
!7174 = !DILocation(line: 30, column: 13, scope: !7172)
!7175 = distinct !{!7175, !7168, !7176}
!7176 = !DILocation(line: 32, column: 2, scope: !7169)
!7177 = !DILocation(line: 33, column: 1, scope: !7163)
!7178 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6296, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !7179)
!7179 = !{!7180, !7181}
!7180 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7178, file: !463, line: 1814, type: !922)
!7181 = !DILocalVariable(name: "priority", arg: 2, scope: !7178, file: !463, line: 1814, type: !152)
!7182 = !DILocation(line: 0, scope: !7178)
!7183 = !DILocation(line: 1816, column: 7, scope: !7178)
!7184 = !DILocation(line: 0, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7178, file: !463, line: 1816, column: 7)
!7186 = !DILocation(line: 1824, column: 1, scope: !7178)
!7187 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7188, file: !7188, line: 27, type: !7189, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2830, retainedNodes: !7295)
!7188 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7189 = !DISubroutineType(types: !7190)
!7190 = !{null, !7191}
!7191 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !7192)
!7192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7193, size: 32)
!7193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !7194)
!7194 = !{!7195, !7253, !7265, !7266, !7267, !7268, !7269, !7275, !7290}
!7195 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7193, file: !309, line: 247, baseType: !7196, size: 384)
!7196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !7197)
!7197 = !{!7198, !7222, !7229, !7230, !7231, !7240, !7241, !7242}
!7198 = !DIDerivedType(tag: DW_TAG_member, scope: !7196, file: !309, line: 60, baseType: !7199, size: 64)
!7199 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7196, file: !309, line: 60, size: 64, elements: !7200)
!7200 = !{!7201, !7216}
!7201 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7199, file: !309, line: 61, baseType: !7202, size: 64)
!7202 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !7203)
!7203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !7204)
!7204 = !{!7205, !7211}
!7205 = !DIDerivedType(tag: DW_TAG_member, scope: !7203, file: !319, line: 38, baseType: !7206, size: 32)
!7206 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7203, file: !319, line: 38, size: 32, elements: !7207)
!7207 = !{!7208, !7210}
!7208 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7206, file: !319, line: 39, baseType: !7209, size: 32)
!7209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7203, size: 32)
!7210 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7206, file: !319, line: 40, baseType: !7209, size: 32)
!7211 = !DIDerivedType(tag: DW_TAG_member, scope: !7203, file: !319, line: 42, baseType: !7212, size: 32, offset: 32)
!7212 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7203, file: !319, line: 42, size: 32, elements: !7213)
!7213 = !{!7214, !7215}
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7212, file: !319, line: 43, baseType: !7209, size: 32)
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7212, file: !319, line: 44, baseType: !7209, size: 32)
!7216 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7199, file: !309, line: 62, baseType: !7217, size: 64)
!7217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !7218)
!7218 = !{!7219}
!7219 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7217, file: !335, line: 50, baseType: !7220, size: 64)
!7220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7221, size: 64, elements: !340)
!7221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7217, size: 32)
!7222 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7196, file: !309, line: 68, baseType: !7223, size: 32, offset: 64)
!7223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7224, size: 32)
!7224 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !7225)
!7225 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !7226)
!7226 = !{!7227}
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7225, file: !345, line: 232, baseType: !7228, size: 64)
!7228 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !7203)
!7229 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7196, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7196, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!7231 = !DIDerivedType(tag: DW_TAG_member, scope: !7196, file: !309, line: 90, baseType: !7232, size: 16, offset: 112)
!7232 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7196, file: !309, line: 90, size: 16, elements: !7233)
!7233 = !{!7234, !7239}
!7234 = !DIDerivedType(tag: DW_TAG_member, scope: !7232, file: !309, line: 91, baseType: !7235, size: 16)
!7235 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7232, file: !309, line: 91, size: 16, elements: !7236)
!7236 = !{!7237, !7238}
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7235, file: !309, line: 96, baseType: !359, size: 8)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7235, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!7239 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7232, file: !309, line: 100, baseType: !197, size: 16)
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7196, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7196, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7196, file: !309, line: 131, baseType: !7243, size: 192, offset: 192)
!7243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !7244)
!7244 = !{!7245, !7246, !7252}
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7243, file: !345, line: 245, baseType: !7202, size: 64)
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7243, file: !345, line: 246, baseType: !7247, size: 32, offset: 64)
!7247 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !7248)
!7248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7249, size: 32)
!7249 = !DISubroutineType(types: !7250)
!7250 = !{null, !7251}
!7251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7243, size: 32)
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7243, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7193, file: !309, line: 250, baseType: !7254, size: 288, offset: 384)
!7254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !7255)
!7255 = !{!7256, !7257, !7258, !7259, !7260, !7261, !7262, !7263, !7264}
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7254, file: !379, line: 26, baseType: !152, size: 32)
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7254, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7254, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7254, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7254, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!7261 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7254, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!7262 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7254, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7254, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!7264 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7254, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!7265 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7193, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!7266 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7193, file: !309, line: 256, baseType: !7224, size: 64, offset: 704)
!7267 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7193, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!7268 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7193, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!7269 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7193, file: !309, line: 300, baseType: !7270, size: 96, offset: 1056)
!7270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !7271)
!7271 = !{!7272, !7273, !7274}
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7270, file: !309, line: 153, baseType: !22, size: 32)
!7273 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7270, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!7274 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7270, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!7275 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7193, file: !309, line: 325, baseType: !7276, size: 32, offset: 1152)
!7276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7277, size: 32)
!7277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !7278)
!7278 = !{!7279, !7285, !7286}
!7279 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7277, file: !406, line: 5074, baseType: !7280, size: 96)
!7280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !7281)
!7281 = !{!7282, !7283, !7284}
!7282 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7280, file: !410, line: 57, baseType: !413, size: 32)
!7283 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7280, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7280, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7277, file: !406, line: 5075, baseType: !7224, size: 64, offset: 96)
!7286 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7277, file: !406, line: 5076, baseType: !7287, size: 32, offset: 160)
!7287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !7288)
!7288 = !{!7289}
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7287, file: !420, line: 52, baseType: !22, size: 32)
!7290 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7193, file: !309, line: 343, baseType: !7291, size: 64, offset: 1184)
!7291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !7292)
!7292 = !{!7293, !7294}
!7293 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7291, file: !379, line: 63, baseType: !152, size: 32)
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7291, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!7295 = !{!7296}
!7296 = !DILocalVariable(name: "thread", arg: 1, scope: !7187, file: !7188, line: 27, type: !7191)
!7297 = !DILocation(line: 0, scope: !7187)
!7298 = !DILocation(line: 29, column: 6, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7187, file: !7188, line: 29, column: 6)
!7300 = !DILocation(line: 29, column: 15, scope: !7299)
!7301 = !DILocation(line: 29, column: 6, scope: !7187)
!7302 = !DILocation(line: 1031, column: 3, scope: !7303, inlinedAt: !7306)
!7303 = distinct !DISubprogram(name: "__get_IPSR", scope: !6256, file: !6256, line: 1027, type: !6343, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2830, retainedNodes: !7304)
!7304 = !{!7305}
!7305 = !DILocalVariable(name: "result", scope: !7303, file: !6256, line: 1029, type: !152)
!7306 = distinct !DILocation(line: 48, column: 10, scope: !7307, inlinedAt: !7311)
!7307 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7308, file: !7308, line: 46, type: !7309, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2830, retainedNodes: !2166)
!7308 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7309 = !DISubroutineType(types: !7310)
!7310 = !{!145}
!7311 = distinct !DILocation(line: 30, column: 7, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7313, file: !7188, line: 30, column: 7)
!7313 = distinct !DILexicalBlock(scope: !7299, file: !7188, line: 29, column: 26)
!7314 = !{i64 3543015}
!7315 = !DILocation(line: 0, scope: !7303, inlinedAt: !7306)
!7316 = !DILocation(line: 48, column: 9, scope: !7307, inlinedAt: !7311)
!7317 = !DILocation(line: 30, column: 7, scope: !7313)
!7318 = !DILocation(line: 42, column: 14, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7312, file: !7188, line: 30, column: 25)
!7320 = !DILocation(line: 48, column: 15, scope: !7319)
!7321 = !DILocation(line: 49, column: 3, scope: !7319)
!7322 = !DILocation(line: 52, column: 2, scope: !7187)
!7323 = !DILocation(line: 53, column: 1, scope: !7187)
!7324 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !304, file: !304, line: 127, type: !3089, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2166)
!7325 = !DILocation(line: 134, column: 2, scope: !7324)
!7326 = !DILocation(line: 156, column: 1, scope: !7324)
!7327 = !DILocation(line: 0, scope: !303)
!7328 = !DILocation(line: 289, column: 36, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !303, file: !304, line: 285, column: 2)
!7330 = !DILocation(line: 289, column: 42, scope: !7329)
!7331 = !DILocation(line: 300, column: 36, scope: !303)
!7332 = !DILocation(line: 301, column: 35, scope: !303)
!7333 = !DILocation(line: 302, column: 37, scope: !303)
!7334 = !DILocation(line: 311, column: 2, scope: !303)
!7335 = !DILocation(line: 316, column: 1, scope: !303)
!7336 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !491, file: !491, line: 180, type: !3089, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2166)
!7337 = !DILocation(line: 188, column: 12, scope: !7336)
!7338 = !DILocation(line: 271, column: 3, scope: !7339, inlinedAt: !7340)
!7339 = distinct !DISubprogram(name: "__DSB", scope: !6256, file: !6256, line: 269, type: !3089, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2166)
!7340 = distinct !DILocation(line: 192, column: 2, scope: !7336)
!7341 = !{i64 3706681}
!7342 = !DILocation(line: 260, column: 3, scope: !7343, inlinedAt: !7344)
!7343 = distinct !DISubprogram(name: "__ISB", scope: !6256, file: !6256, line: 258, type: !3089, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2166)
!7344 = distinct !DILocation(line: 193, column: 2, scope: !7336)
!7345 = !{i64 3706398}
!7346 = !DILocation(line: 194, column: 1, scope: !7336)
!7347 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !491, file: !491, line: 199, type: !3089, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2166)
!7348 = !DILocation(line: 282, column: 3, scope: !7349, inlinedAt: !7350)
!7349 = distinct !DISubprogram(name: "__DMB", scope: !6256, file: !6256, line: 280, type: !3089, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2166)
!7350 = distinct !DILocation(line: 202, column: 2, scope: !7347)
!7351 = !{i64 3706957}
!7352 = !DILocation(line: 205, column: 12, scope: !7347)
!7353 = !DILocation(line: 206, column: 1, scope: !7347)
!7354 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !491, file: !491, line: 275, type: !7355, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7368)
!7355 = !DISubroutineType(types: !7356)
!7356 = !{null, !7357, !1948, !6533, !6533}
!7357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7358, size: 32)
!7358 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7359)
!7359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !435, line: 52, size: 96, elements: !7360)
!7360 = !{!7361, !7362, !7363}
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7359, file: !435, line: 53, baseType: !22, size: 32)
!7362 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7359, file: !435, line: 54, baseType: !185, size: 32, offset: 32)
!7363 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7359, file: !435, line: 55, baseType: !7364, size: 32, offset: 64)
!7364 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !441, line: 151, baseType: !7365)
!7365 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 149, size: 32, elements: !7366)
!7366 = !{!7367}
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7365, file: !441, line: 150, baseType: !152, size: 32)
!7368 = !{!7369, !7370, !7371, !7372}
!7369 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7354, file: !491, line: 276, type: !7357)
!7370 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7354, file: !491, line: 276, type: !1948)
!7371 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7354, file: !491, line: 277, type: !6533)
!7372 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7354, file: !491, line: 277, type: !6533)
!7373 = !DILocation(line: 0, scope: !7354)
!7374 = !DILocation(line: 279, column: 6, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7354, file: !491, line: 279, column: 6)
!7376 = !DILocation(line: 280, column: 57, scope: !7375)
!7377 = !DILocation(line: 279, column: 6, scope: !7354)
!7378 = !DILocation(line: 282, column: 3, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7380, file: !491, line: 282, column: 3)
!7380 = distinct !DILexicalBlock(scope: !7381, file: !491, line: 282, column: 3)
!7381 = distinct !DILexicalBlock(scope: !7382, file: !491, line: 282, column: 3)
!7382 = distinct !DILexicalBlock(scope: !7375, file: !491, line: 280, column: 69)
!7383 = !DILocation(line: 285, column: 1, scope: !7354)
!7384 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7385, file: !7385, line: 220, type: !7386, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7388)
!7385 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7386 = !DISubroutineType(types: !7387)
!7387 = !{!107, !7357, !1948, !6533, !6533}
!7388 = !{!7389, !7390, !7391, !7392, !7393}
!7389 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7384, file: !7385, line: 221, type: !7357)
!7390 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7384, file: !7385, line: 221, type: !1948)
!7391 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7384, file: !7385, line: 222, type: !6533)
!7392 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7384, file: !7385, line: 223, type: !6533)
!7393 = !DILocalVariable(name: "mpu_reg_index", scope: !7384, file: !7385, line: 225, type: !107)
!7394 = !DILocation(line: 0, scope: !7384)
!7395 = !DILocation(line: 225, column: 22, scope: !7384)
!7396 = !DILocation(line: 233, column: 18, scope: !7384)
!7397 = !DILocation(line: 236, column: 23, scope: !7384)
!7398 = !DILocation(line: 236, column: 21, scope: !7384)
!7399 = !DILocation(line: 238, column: 2, scope: !7384)
!7400 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !491, file: !491, line: 105, type: !7401, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7403)
!7401 = !DISubroutineType(types: !7402)
!7402 = !{!107, !7357, !195, !195, !145}
!7403 = !{!7404, !7405, !7406, !7407, !7408, !7409}
!7404 = !DILocalVariable(name: "regions", arg: 1, scope: !7400, file: !491, line: 106, type: !7357)
!7405 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7400, file: !491, line: 106, type: !195)
!7406 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7400, file: !491, line: 106, type: !195)
!7407 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7400, file: !491, line: 107, type: !145)
!7408 = !DILocalVariable(name: "i", scope: !7400, file: !491, line: 109, type: !107)
!7409 = !DILocalVariable(name: "reg_index", scope: !7400, file: !491, line: 110, type: !107)
!7410 = !DILocation(line: 0, scope: !7400)
!7411 = !DILocation(line: 110, column: 18, scope: !7400)
!7412 = !DILocation(line: 112, column: 16, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7414, file: !491, line: 112, column: 2)
!7414 = distinct !DILexicalBlock(scope: !7400, file: !491, line: 112, column: 2)
!7415 = !DILocation(line: 112, column: 2, scope: !7414)
!7416 = !DILocation(line: 113, column: 7, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7418, file: !491, line: 113, column: 7)
!7418 = distinct !DILexicalBlock(scope: !7413, file: !491, line: 112, column: 36)
!7419 = !DILocation(line: 113, column: 18, scope: !7417)
!7420 = !DILocation(line: 113, column: 23, scope: !7417)
!7421 = !DILocation(line: 113, column: 7, scope: !7418)
!7422 = !DILocation(line: 118, column: 23, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7418, file: !491, line: 118, column: 7)
!7424 = !DILocation(line: 119, column: 7, scope: !7423)
!7425 = !DILocation(line: 118, column: 7, scope: !7418)
!7426 = !DILocation(line: 120, column: 4, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7428, file: !491, line: 120, column: 4)
!7428 = distinct !DILexicalBlock(scope: !7429, file: !491, line: 120, column: 4)
!7429 = distinct !DILexicalBlock(scope: !7430, file: !491, line: 120, column: 4)
!7430 = distinct !DILexicalBlock(scope: !7431, file: !491, line: 120, column: 4)
!7431 = distinct !DILexicalBlock(scope: !7423, file: !491, line: 119, column: 45)
!7432 = !DILocation(line: 121, column: 4, scope: !7431)
!7433 = !DILocation(line: 124, column: 36, scope: !7418)
!7434 = !DILocation(line: 124, column: 15, scope: !7418)
!7435 = !DILocation(line: 126, column: 17, scope: !7436)
!7436 = distinct !DILexicalBlock(scope: !7418, file: !491, line: 126, column: 7)
!7437 = !DILocation(line: 126, column: 7, scope: !7418)
!7438 = !DILocation(line: 131, column: 12, scope: !7418)
!7439 = !DILocation(line: 132, column: 2, scope: !7418)
!7440 = !DILocation(line: 112, column: 32, scope: !7413)
!7441 = distinct !{!7441, !7415, !7442}
!7442 = !DILocation(line: 132, column: 2, scope: !7414)
!7443 = !DILocation(line: 135, column: 1, scope: !7400)
!7444 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7385, file: !7385, line: 63, type: !7445, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7447)
!7445 = !DISubroutineType(types: !7446)
!7446 = !{!107, !7357}
!7447 = !{!7448, !7449}
!7448 = !DILocalVariable(name: "part", arg: 1, scope: !7444, file: !7385, line: 63, type: !7357)
!7449 = !DILocalVariable(name: "partition_is_valid", scope: !7444, file: !7385, line: 70, type: !107)
!7450 = !DILocation(line: 0, scope: !7444)
!7451 = !DILocation(line: 71, column: 11, scope: !7444)
!7452 = !DILocation(line: 71, column: 37, scope: !7444)
!7453 = !{i32 0, i32 33}
!7454 = !DILocation(line: 72, column: 3, scope: !7444)
!7455 = !DILocation(line: 71, column: 30, scope: !7444)
!7456 = !DILocation(line: 75, column: 11, scope: !7444)
!7457 = !DILocation(line: 75, column: 17, scope: !7444)
!7458 = !DILocation(line: 75, column: 38, scope: !7444)
!7459 = !DILocation(line: 77, column: 2, scope: !7444)
!7460 = distinct !DISubprogram(name: "mpu_configure_region", scope: !491, file: !491, line: 79, type: !7461, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7463)
!7461 = !DISubroutineType(types: !7462)
!7462 = !{!107, !1948, !7357}
!7463 = !{!7464, !7465, !7466}
!7464 = !DILocalVariable(name: "index", arg: 1, scope: !7460, file: !491, line: 79, type: !1948)
!7465 = !DILocalVariable(name: "new_region", arg: 2, scope: !7460, file: !491, line: 80, type: !7357)
!7466 = !DILocalVariable(name: "region_conf", scope: !7460, file: !491, line: 82, type: !480)
!7467 = !DILocation(line: 0, scope: !7460)
!7468 = !DILocation(line: 82, column: 2, scope: !7460)
!7469 = !DILocation(line: 82, column: 24, scope: !7460)
!7470 = !DILocation(line: 87, column: 33, scope: !7460)
!7471 = !DILocation(line: 87, column: 14, scope: !7460)
!7472 = !DILocation(line: 87, column: 19, scope: !7460)
!7473 = !DILocation(line: 91, column: 55, scope: !7460)
!7474 = !DILocation(line: 92, column: 16, scope: !7460)
!7475 = !DILocation(line: 92, column: 53, scope: !7460)
!7476 = !DILocation(line: 91, column: 2, scope: !7460)
!7477 = !DILocation(line: 95, column: 9, scope: !7460)
!7478 = !DILocation(line: 97, column: 1, scope: !7460)
!7479 = !DILocation(line: 95, column: 2, scope: !7460)
!7480 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7385, file: !7385, line: 113, type: !7481, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7486)
!7481 = !DISubroutineType(types: !7482)
!7482 = !{null, !7483, !7484, !152, !152}
!7483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 32)
!7484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7485, size: 32)
!7485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7364)
!7486 = !{!7487, !7488, !7489, !7490}
!7487 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7480, file: !7385, line: 114, type: !7483)
!7488 = !DILocalVariable(name: "attr", arg: 2, scope: !7480, file: !7385, line: 115, type: !7484)
!7489 = !DILocalVariable(name: "base", arg: 3, scope: !7480, file: !7385, line: 115, type: !152)
!7490 = !DILocalVariable(name: "size", arg: 4, scope: !7480, file: !7385, line: 115, type: !152)
!7491 = !DILocation(line: 0, scope: !7480)
!7492 = !DILocation(line: 127, column: 23, scope: !7480)
!7493 = !DILocation(line: 127, column: 35, scope: !7480)
!7494 = !DILocation(line: 127, column: 33, scope: !7480)
!7495 = !DILocation(line: 127, column: 10, scope: !7480)
!7496 = !DILocation(line: 127, column: 15, scope: !7480)
!7497 = !DILocation(line: 129, column: 1, scope: !7480)
!7498 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !491, file: !491, line: 57, type: !7499, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7501)
!7499 = !DISubroutineType(types: !7500)
!7500 = !{!107, !1948, !478}
!7501 = !{!7502, !7503}
!7502 = !DILocalVariable(name: "index", arg: 1, scope: !7498, file: !491, line: 57, type: !1948)
!7503 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7498, file: !491, line: 58, type: !478)
!7504 = !DILocation(line: 0, scope: !7498)
!7505 = !DILocation(line: 61, column: 6, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7498, file: !491, line: 61, column: 6)
!7507 = !DILocation(line: 61, column: 12, scope: !7506)
!7508 = !DILocation(line: 61, column: 6, scope: !7498)
!7509 = !DILocation(line: 64, column: 3, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7511, file: !491, line: 64, column: 3)
!7511 = distinct !DILexicalBlock(scope: !7512, file: !491, line: 64, column: 3)
!7512 = distinct !DILexicalBlock(scope: !7513, file: !491, line: 64, column: 3)
!7513 = distinct !DILexicalBlock(scope: !7514, file: !491, line: 64, column: 3)
!7514 = distinct !DILexicalBlock(scope: !7506, file: !491, line: 61, column: 40)
!7515 = !DILocation(line: 65, column: 3, scope: !7514)
!7516 = !DILocation(line: 71, column: 2, scope: !7498)
!7517 = !DILocation(line: 73, column: 2, scope: !7498)
!7518 = !DILocation(line: 74, column: 1, scope: !7498)
!7519 = distinct !DISubprogram(name: "region_init", scope: !7385, file: !7385, line: 29, type: !7520, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7522)
!7520 = !DISubroutineType(types: !7521)
!7521 = !{null, !6533, !478}
!7522 = !{!7523, !7524}
!7523 = !DILocalVariable(name: "index", arg: 1, scope: !7519, file: !7385, line: 29, type: !6533)
!7524 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7519, file: !7385, line: 30, type: !478)
!7525 = !DILocation(line: 0, scope: !7519)
!7526 = !DILocation(line: 33, column: 2, scope: !7519)
!7527 = !DILocation(line: 47, column: 28, scope: !7519)
!7528 = !DILocation(line: 47, column: 33, scope: !7519)
!7529 = !DILocation(line: 48, column: 26, scope: !7519)
!7530 = !DILocation(line: 47, column: 12, scope: !7519)
!7531 = !DILocation(line: 49, column: 32, scope: !7519)
!7532 = !DILocation(line: 49, column: 37, scope: !7519)
!7533 = !DILocation(line: 49, column: 12, scope: !7519)
!7534 = !DILocation(line: 53, column: 1, scope: !7519)
!7535 = distinct !DISubprogram(name: "set_region_number", scope: !7536, file: !7536, line: 32, type: !6353, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7537)
!7536 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7537 = !{!7538}
!7538 = !DILocalVariable(name: "index", arg: 1, scope: !7535, file: !7536, line: 32, type: !152)
!7539 = !DILocation(line: 0, scope: !7535)
!7540 = !DILocation(line: 34, column: 11, scope: !7535)
!7541 = !DILocation(line: 35, column: 1, scope: !7535)
!7542 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7385, file: !7385, line: 88, type: !7543, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7545)
!7543 = !DISubroutineType(types: !7544)
!7544 = !{!152, !152}
!7545 = !{!7546}
!7546 = !DILocalVariable(name: "size", arg: 1, scope: !7542, file: !7385, line: 88, type: !152)
!7547 = !DILocation(line: 0, scope: !7542)
!7548 = !DILocation(line: 91, column: 11, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7542, file: !7385, line: 91, column: 6)
!7550 = !DILocation(line: 91, column: 6, scope: !7542)
!7551 = !DILocation(line: 100, column: 11, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7542, file: !7385, line: 100, column: 6)
!7553 = !DILocation(line: 100, column: 6, scope: !7542)
!7554 = !DILocation(line: 104, column: 35, scope: !7542)
!7555 = !DILocation(line: 104, column: 16, scope: !7542)
!7556 = !DILocation(line: 104, column: 50, scope: !7542)
!7557 = !DILocation(line: 104, column: 72, scope: !7542)
!7558 = !DILocation(line: 104, column: 2, scope: !7542)
!7559 = !DILocation(line: 106, column: 1, scope: !7542)
!7560 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !491, file: !491, line: 307, type: !7561, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7563)
!7561 = !DISubroutineType(types: !7562)
!7562 = !{null, !7357, !195}
!7563 = !{!7564, !7565}
!7564 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7560, file: !491, line: 308, type: !7357)
!7565 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7560, file: !491, line: 308, type: !195)
!7566 = !DILocation(line: 0, scope: !7560)
!7567 = !DILocation(line: 310, column: 6, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7560, file: !491, line: 310, column: 6)
!7569 = !DILocation(line: 311, column: 3, scope: !7568)
!7570 = !DILocation(line: 310, column: 6, scope: !7560)
!7571 = !DILocation(line: 313, column: 3, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7573, file: !491, line: 313, column: 3)
!7573 = distinct !DILexicalBlock(scope: !7574, file: !491, line: 313, column: 3)
!7574 = distinct !DILexicalBlock(scope: !7575, file: !491, line: 313, column: 3)
!7575 = distinct !DILexicalBlock(scope: !7568, file: !491, line: 311, column: 15)
!7576 = !DILocation(line: 316, column: 1, scope: !7560)
!7577 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7385, file: !7385, line: 249, type: !7578, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7580)
!7578 = !DISubroutineType(types: !7579)
!7579 = !{!107, !7357, !195}
!7580 = !{!7581, !7582, !7583, !7584}
!7581 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7577, file: !7385, line: 250, type: !7357)
!7582 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7577, file: !7385, line: 250, type: !195)
!7583 = !DILocalVariable(name: "mpu_reg_index", scope: !7577, file: !7385, line: 252, type: !107)
!7584 = !DILocalVariable(name: "i", scope: !7585, file: !7385, line: 264, type: !107)
!7585 = distinct !DILexicalBlock(scope: !7586, file: !7385, line: 264, column: 3)
!7586 = distinct !DILexicalBlock(scope: !7587, file: !7385, line: 261, column: 32)
!7587 = distinct !DILexicalBlock(scope: !7577, file: !7385, line: 261, column: 6)
!7588 = !DILocation(line: 0, scope: !7577)
!7589 = !DILocation(line: 252, column: 22, scope: !7577)
!7590 = !DILocation(line: 258, column: 18, scope: !7577)
!7591 = !DILocation(line: 261, column: 20, scope: !7587)
!7592 = !DILocation(line: 261, column: 6, scope: !7577)
!7593 = !DILocation(line: 0, scope: !7585)
!7594 = !DILocation(line: 265, column: 4, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7596, file: !7385, line: 264, column: 59)
!7596 = distinct !DILexicalBlock(scope: !7585, file: !7385, line: 264, column: 3)
!7597 = !DILocation(line: 264, column: 55, scope: !7596)
!7598 = !DILocation(line: 264, column: 33, scope: !7596)
!7599 = !DILocation(line: 264, column: 3, scope: !7585)
!7600 = distinct !{!7600, !7599, !7601}
!7601 = !DILocation(line: 266, column: 3, scope: !7585)
!7602 = !DILocation(line: 269, column: 2, scope: !7577)
!7603 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7604, file: !7604, line: 218, type: !6353, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7605)
!7604 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7605 = !{!7606}
!7606 = !DILocalVariable(name: "rnr", arg: 1, scope: !7603, file: !7604, line: 218, type: !152)
!7607 = !DILocation(line: 0, scope: !7603)
!7608 = !DILocation(line: 220, column: 12, scope: !7603)
!7609 = !DILocation(line: 221, column: 13, scope: !7603)
!7610 = !DILocation(line: 222, column: 1, scope: !7603)
!7611 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !491, file: !491, line: 326, type: !7612, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7614)
!7612 = !DISubroutineType(types: !7613)
!7613 = !{!107}
!7614 = !{!7615}
!7615 = !DILocalVariable(name: "r_index", scope: !7611, file: !491, line: 328, type: !152)
!7616 = !DILocation(line: 330, column: 17, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7611, file: !491, line: 330, column: 6)
!7618 = !DILocation(line: 330, column: 29, scope: !7617)
!7619 = !DILocation(line: 330, column: 6, scope: !7611)
!7620 = !DILocation(line: 337, column: 3, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7622, file: !491, line: 337, column: 3)
!7622 = distinct !DILexicalBlock(scope: !7623, file: !491, line: 337, column: 3)
!7623 = distinct !DILexicalBlock(scope: !7624, file: !491, line: 337, column: 3)
!7624 = distinct !DILexicalBlock(scope: !7617, file: !491, line: 330, column: 50)
!7625 = !DILocation(line: 347, column: 2, scope: !7611)
!7626 = !DILocation(line: 0, scope: !7611)
!7627 = !DILocation(line: 364, column: 29, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7629, file: !491, line: 364, column: 2)
!7629 = distinct !DILexicalBlock(scope: !7611, file: !491, line: 364, column: 2)
!7630 = !DILocation(line: 364, column: 2, scope: !7629)
!7631 = !DILocation(line: 365, column: 25, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7628, file: !491, line: 364, column: 66)
!7633 = !DILocation(line: 365, column: 3, scope: !7632)
!7634 = !DILocation(line: 364, column: 62, scope: !7628)
!7635 = distinct !{!7635, !7630, !7636}
!7636 = !DILocation(line: 366, column: 2, scope: !7629)
!7637 = !DILocation(line: 369, column: 23, scope: !7611)
!7638 = !DILocation(line: 369, column: 21, scope: !7611)
!7639 = !DILocation(line: 372, column: 2, scope: !7611)
!7640 = !DILocation(line: 433, column: 2, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7642, file: !491, line: 433, column: 2)
!7642 = distinct !DILexicalBlock(scope: !7611, file: !491, line: 433, column: 2)
!7643 = !DILocation(line: 433, column: 2, scope: !7642)
!7644 = !DILocation(line: 433, column: 2, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7641, file: !491, line: 433, column: 2)
!7646 = !DILocation(line: 444, column: 1, scope: !7611)
!7647 = distinct !DISubprogram(name: "strcpy", scope: !7648, file: !7648, line: 20, type: !7649, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7653)
!7648 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7649 = !DISubroutineType(types: !7650)
!7650 = !{!193, !7651, !7652}
!7651 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !193)
!7652 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !118)
!7653 = !{!7654, !7655, !7656}
!7654 = !DILocalVariable(name: "d", arg: 1, scope: !7647, file: !7648, line: 20, type: !7651)
!7655 = !DILocalVariable(name: "s", arg: 2, scope: !7647, file: !7648, line: 20, type: !7652)
!7656 = !DILocalVariable(name: "dest", scope: !7647, file: !7648, line: 22, type: !193)
!7657 = !DILocation(line: 0, scope: !7647)
!7658 = !DILocation(line: 24, column: 9, scope: !7647)
!7659 = !DILocation(line: 24, column: 12, scope: !7647)
!7660 = !DILocation(line: 24, column: 2, scope: !7647)
!7661 = !DILocation(line: 25, column: 6, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7647, file: !7648, line: 24, column: 21)
!7663 = !DILocation(line: 26, column: 4, scope: !7662)
!7664 = !DILocation(line: 27, column: 4, scope: !7662)
!7665 = distinct !{!7665, !7660, !7666}
!7666 = !DILocation(line: 28, column: 2, scope: !7647)
!7667 = !DILocation(line: 30, column: 5, scope: !7647)
!7668 = !DILocation(line: 32, column: 2, scope: !7647)
!7669 = distinct !DISubprogram(name: "strncpy", scope: !7648, file: !7648, line: 42, type: !7670, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7672)
!7670 = !DISubroutineType(types: !7671)
!7671 = !{!193, !7651, !7652, !185}
!7672 = !{!7673, !7674, !7675, !7676}
!7673 = !DILocalVariable(name: "d", arg: 1, scope: !7669, file: !7648, line: 42, type: !7651)
!7674 = !DILocalVariable(name: "s", arg: 2, scope: !7669, file: !7648, line: 42, type: !7652)
!7675 = !DILocalVariable(name: "n", arg: 3, scope: !7669, file: !7648, line: 42, type: !185)
!7676 = !DILocalVariable(name: "dest", scope: !7669, file: !7648, line: 44, type: !193)
!7677 = !DILocation(line: 0, scope: !7669)
!7678 = !DILocation(line: 46, column: 12, scope: !7669)
!7679 = !DILocation(line: 46, column: 17, scope: !7669)
!7680 = !DILocation(line: 46, column: 20, scope: !7669)
!7681 = !DILocation(line: 46, column: 23, scope: !7669)
!7682 = !DILocation(line: 46, column: 2, scope: !7669)
!7683 = !DILocation(line: 47, column: 6, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7669, file: !7648, line: 46, column: 32)
!7685 = !DILocation(line: 48, column: 4, scope: !7684)
!7686 = !DILocation(line: 49, column: 4, scope: !7684)
!7687 = !DILocation(line: 50, column: 4, scope: !7684)
!7688 = distinct !{!7688, !7682, !7689}
!7689 = !DILocation(line: 51, column: 2, scope: !7669)
!7690 = !DILocation(line: 54, column: 6, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7669, file: !7648, line: 53, column: 16)
!7692 = !DILocation(line: 55, column: 4, scope: !7691)
!7693 = !DILocation(line: 56, column: 4, scope: !7691)
!7694 = !DILocation(line: 53, column: 11, scope: !7669)
!7695 = !DILocation(line: 53, column: 2, scope: !7669)
!7696 = distinct !{!7696, !7695, !7697}
!7697 = !DILocation(line: 57, column: 2, scope: !7669)
!7698 = !DILocation(line: 59, column: 2, scope: !7669)
!7699 = distinct !DISubprogram(name: "strchr", scope: !7648, file: !7648, line: 69, type: !7700, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7702)
!7700 = !DISubroutineType(types: !7701)
!7701 = !{!193, !118, !107}
!7702 = !{!7703, !7704, !7705}
!7703 = !DILocalVariable(name: "s", arg: 1, scope: !7699, file: !7648, line: 69, type: !118)
!7704 = !DILocalVariable(name: "c", arg: 2, scope: !7699, file: !7648, line: 69, type: !107)
!7705 = !DILocalVariable(name: "tmp", scope: !7699, file: !7648, line: 71, type: !120)
!7706 = !DILocation(line: 0, scope: !7699)
!7707 = !DILocation(line: 73, column: 2, scope: !7699)
!7708 = !DILocation(line: 73, column: 10, scope: !7699)
!7709 = !DILocation(line: 73, column: 13, scope: !7699)
!7710 = !DILocation(line: 73, column: 21, scope: !7699)
!7711 = !DILocation(line: 74, column: 4, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7699, file: !7648, line: 73, column: 38)
!7713 = distinct !{!7713, !7707, !7714}
!7714 = !DILocation(line: 75, column: 2, scope: !7699)
!7715 = !DILocation(line: 77, column: 9, scope: !7699)
!7716 = !DILocation(line: 77, column: 2, scope: !7699)
!7717 = distinct !DISubprogram(name: "strrchr", scope: !7648, file: !7648, line: 87, type: !7700, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7718)
!7718 = !{!7719, !7720, !7721}
!7719 = !DILocalVariable(name: "s", arg: 1, scope: !7717, file: !7648, line: 87, type: !118)
!7720 = !DILocalVariable(name: "c", arg: 2, scope: !7717, file: !7648, line: 87, type: !107)
!7721 = !DILocalVariable(name: "match", scope: !7717, file: !7648, line: 89, type: !193)
!7722 = !DILocation(line: 0, scope: !7717)
!7723 = !DILocation(line: 91, column: 2, scope: !7717)
!7724 = !DILocation(line: 92, column: 7, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7726, file: !7648, line: 92, column: 7)
!7726 = distinct !DILexicalBlock(scope: !7717, file: !7648, line: 91, column: 5)
!7727 = !DILocation(line: 92, column: 10, scope: !7725)
!7728 = !DILocation(line: 92, column: 7, scope: !7726)
!7729 = !DILocation(line: 95, column: 13, scope: !7717)
!7730 = !DILocation(line: 95, column: 2, scope: !7726)
!7731 = distinct !{!7731, !7723, !7732}
!7732 = !DILocation(line: 95, column: 15, scope: !7717)
!7733 = !DILocation(line: 97, column: 2, scope: !7717)
!7734 = distinct !DISubprogram(name: "strlen", scope: !7648, file: !7648, line: 107, type: !7735, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7737)
!7735 = !DISubroutineType(types: !7736)
!7736 = !{!185, !118}
!7737 = !{!7738, !7739}
!7738 = !DILocalVariable(name: "s", arg: 1, scope: !7734, file: !7648, line: 107, type: !118)
!7739 = !DILocalVariable(name: "n", scope: !7734, file: !7648, line: 109, type: !185)
!7740 = !DILocation(line: 0, scope: !7734)
!7741 = !DILocation(line: 111, column: 9, scope: !7734)
!7742 = !DILocation(line: 111, column: 12, scope: !7734)
!7743 = !DILocation(line: 111, column: 2, scope: !7734)
!7744 = !DILocation(line: 112, column: 4, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7734, file: !7648, line: 111, column: 21)
!7746 = !DILocation(line: 113, column: 4, scope: !7745)
!7747 = distinct !{!7747, !7743, !7748}
!7748 = !DILocation(line: 114, column: 2, scope: !7734)
!7749 = !DILocation(line: 116, column: 2, scope: !7734)
!7750 = distinct !DISubprogram(name: "strnlen", scope: !7648, file: !7648, line: 126, type: !7751, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7753)
!7751 = !DISubroutineType(types: !7752)
!7752 = !{!185, !118, !185}
!7753 = !{!7754, !7755, !7756}
!7754 = !DILocalVariable(name: "s", arg: 1, scope: !7750, file: !7648, line: 126, type: !118)
!7755 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7750, file: !7648, line: 126, type: !185)
!7756 = !DILocalVariable(name: "n", scope: !7750, file: !7648, line: 128, type: !185)
!7757 = !DILocation(line: 0, scope: !7750)
!7758 = !DILocation(line: 130, column: 9, scope: !7750)
!7759 = !DILocation(line: 130, column: 12, scope: !7750)
!7760 = !DILocation(line: 130, column: 20, scope: !7750)
!7761 = !DILocation(line: 130, column: 2, scope: !7750)
!7762 = !DILocation(line: 131, column: 4, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7750, file: !7648, line: 130, column: 35)
!7764 = !DILocation(line: 132, column: 4, scope: !7763)
!7765 = distinct !{!7765, !7761, !7766}
!7766 = !DILocation(line: 133, column: 2, scope: !7750)
!7767 = !DILocation(line: 135, column: 2, scope: !7750)
!7768 = distinct !DISubprogram(name: "strcmp", scope: !7648, file: !7648, line: 145, type: !7769, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7771)
!7769 = !DISubroutineType(types: !7770)
!7770 = !{!107, !118, !118}
!7771 = !{!7772, !7773}
!7772 = !DILocalVariable(name: "s1", arg: 1, scope: !7768, file: !7648, line: 145, type: !118)
!7773 = !DILocalVariable(name: "s2", arg: 2, scope: !7768, file: !7648, line: 145, type: !118)
!7774 = !DILocation(line: 0, scope: !7768)
!7775 = !DILocation(line: 147, column: 10, scope: !7768)
!7776 = !DILocation(line: 147, column: 17, scope: !7768)
!7777 = !DILocation(line: 147, column: 14, scope: !7768)
!7778 = !DILocation(line: 147, column: 22, scope: !7768)
!7779 = !DILocation(line: 148, column: 5, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7768, file: !7648, line: 147, column: 40)
!7781 = !DILocation(line: 149, column: 5, scope: !7780)
!7782 = distinct !{!7782, !7783, !7784}
!7783 = !DILocation(line: 147, column: 2, scope: !7768)
!7784 = !DILocation(line: 150, column: 2, scope: !7768)
!7785 = !DILocation(line: 152, column: 9, scope: !7768)
!7786 = !DILocation(line: 152, column: 15, scope: !7768)
!7787 = !DILocation(line: 152, column: 13, scope: !7768)
!7788 = !DILocation(line: 152, column: 2, scope: !7768)
!7789 = distinct !DISubprogram(name: "strncmp", scope: !7648, file: !7648, line: 162, type: !7790, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7792)
!7790 = !DISubroutineType(types: !7791)
!7791 = !{!107, !118, !118, !185}
!7792 = !{!7793, !7794, !7795}
!7793 = !DILocalVariable(name: "s1", arg: 1, scope: !7789, file: !7648, line: 162, type: !118)
!7794 = !DILocalVariable(name: "s2", arg: 2, scope: !7789, file: !7648, line: 162, type: !118)
!7795 = !DILocalVariable(name: "n", arg: 3, scope: !7789, file: !7648, line: 162, type: !185)
!7796 = !DILocation(line: 0, scope: !7789)
!7797 = !DILocation(line: 164, column: 17, scope: !7789)
!7798 = !DILocation(line: 164, column: 21, scope: !7789)
!7799 = !DILocation(line: 164, column: 28, scope: !7789)
!7800 = !DILocation(line: 164, column: 25, scope: !7789)
!7801 = !DILocation(line: 164, column: 33, scope: !7789)
!7802 = !DILocation(line: 165, column: 5, scope: !7803)
!7803 = distinct !DILexicalBlock(scope: !7789, file: !7648, line: 164, column: 51)
!7804 = !DILocation(line: 166, column: 5, scope: !7803)
!7805 = !DILocation(line: 167, column: 4, scope: !7803)
!7806 = distinct !{!7806, !7807, !7808}
!7807 = !DILocation(line: 164, column: 2, scope: !7789)
!7808 = !DILocation(line: 168, column: 2, scope: !7789)
!7809 = !DILocation(line: 170, column: 25, scope: !7789)
!7810 = !DILocation(line: 170, column: 31, scope: !7789)
!7811 = !DILocation(line: 170, column: 29, scope: !7789)
!7812 = !DILocation(line: 170, column: 9, scope: !7789)
!7813 = !DILocation(line: 170, column: 2, scope: !7789)
!7814 = distinct !DISubprogram(name: "strtok_r", scope: !7648, file: !7648, line: 180, type: !7815, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7817)
!7815 = !DISubroutineType(types: !7816)
!7816 = !{!193, !193, !118, !192}
!7817 = !{!7818, !7819, !7820, !7821, !7822}
!7818 = !DILocalVariable(name: "str", arg: 1, scope: !7814, file: !7648, line: 180, type: !193)
!7819 = !DILocalVariable(name: "sep", arg: 2, scope: !7814, file: !7648, line: 180, type: !118)
!7820 = !DILocalVariable(name: "state", arg: 3, scope: !7814, file: !7648, line: 180, type: !192)
!7821 = !DILocalVariable(name: "start", scope: !7814, file: !7648, line: 182, type: !193)
!7822 = !DILocalVariable(name: "end", scope: !7814, file: !7648, line: 182, type: !193)
!7823 = !DILocation(line: 0, scope: !7814)
!7824 = !DILocation(line: 184, column: 10, scope: !7814)
!7825 = !DILocation(line: 184, column: 22, scope: !7814)
!7826 = !DILocation(line: 187, column: 9, scope: !7814)
!7827 = !DILocation(line: 187, column: 16, scope: !7814)
!7828 = !DILocation(line: 187, column: 19, scope: !7814)
!7829 = !DILocation(line: 187, column: 2, scope: !7814)
!7830 = !DILocation(line: 188, column: 8, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7814, file: !7648, line: 187, column: 40)
!7832 = distinct !{!7832, !7829, !7833}
!7833 = !DILocation(line: 189, column: 2, scope: !7814)
!7834 = !DILocation(line: 198, column: 9, scope: !7814)
!7835 = !DILocation(line: 198, column: 18, scope: !7814)
!7836 = !DILocation(line: 198, column: 17, scope: !7814)
!7837 = !DILocation(line: 198, column: 2, scope: !7814)
!7838 = !DILocation(line: 199, column: 6, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7814, file: !7648, line: 198, column: 37)
!7840 = !DILocation(line: 198, column: 14, scope: !7814)
!7841 = distinct !{!7841, !7837, !7842}
!7842 = !DILocation(line: 200, column: 2, scope: !7814)
!7843 = !DILocation(line: 203, column: 8, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7845, file: !7648, line: 202, column: 20)
!7845 = distinct !DILexicalBlock(scope: !7814, file: !7648, line: 202, column: 6)
!7846 = !DILocation(line: 204, column: 16, scope: !7844)
!7847 = !DILocation(line: 205, column: 2, scope: !7844)
!7848 = !DILocation(line: 210, column: 1, scope: !7814)
!7849 = distinct !DISubprogram(name: "strcat", scope: !7648, file: !7648, line: 212, type: !7649, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7850)
!7850 = !{!7851, !7852}
!7851 = !DILocalVariable(name: "dest", arg: 1, scope: !7849, file: !7648, line: 212, type: !7651)
!7852 = !DILocalVariable(name: "src", arg: 2, scope: !7849, file: !7648, line: 212, type: !7652)
!7853 = !DILocation(line: 0, scope: !7849)
!7854 = !DILocation(line: 214, column: 16, scope: !7849)
!7855 = !DILocation(line: 214, column: 14, scope: !7849)
!7856 = !DILocation(line: 214, column: 2, scope: !7849)
!7857 = !DILocation(line: 215, column: 2, scope: !7849)
!7858 = distinct !DISubprogram(name: "strncat", scope: !7648, file: !7648, line: 218, type: !7670, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7859)
!7859 = !{!7860, !7861, !7862, !7863, !7864}
!7860 = !DILocalVariable(name: "dest", arg: 1, scope: !7858, file: !7648, line: 218, type: !7651)
!7861 = !DILocalVariable(name: "src", arg: 2, scope: !7858, file: !7648, line: 218, type: !7652)
!7862 = !DILocalVariable(name: "n", arg: 3, scope: !7858, file: !7648, line: 219, type: !185)
!7863 = !DILocalVariable(name: "orig_dest", scope: !7858, file: !7648, line: 221, type: !193)
!7864 = !DILocalVariable(name: "len", scope: !7858, file: !7648, line: 222, type: !185)
!7865 = !DILocation(line: 0, scope: !7858)
!7866 = !DILocation(line: 222, column: 15, scope: !7858)
!7867 = !DILocation(line: 224, column: 7, scope: !7858)
!7868 = !DILocation(line: 225, column: 14, scope: !7858)
!7869 = !DILocation(line: 225, column: 19, scope: !7858)
!7870 = !DILocation(line: 225, column: 11, scope: !7858)
!7871 = !DILocation(line: 225, column: 23, scope: !7858)
!7872 = !DILocation(line: 225, column: 28, scope: !7858)
!7873 = !DILocation(line: 225, column: 2, scope: !7858)
!7874 = !DILocation(line: 226, column: 17, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7858, file: !7648, line: 225, column: 38)
!7876 = !DILocation(line: 226, column: 8, scope: !7875)
!7877 = !DILocation(line: 226, column: 11, scope: !7875)
!7878 = distinct !{!7878, !7873, !7879}
!7879 = !DILocation(line: 227, column: 2, scope: !7858)
!7880 = !DILocation(line: 228, column: 8, scope: !7858)
!7881 = !DILocation(line: 230, column: 2, scope: !7858)
!7882 = distinct !DISubprogram(name: "memcmp", scope: !7648, file: !7648, line: 239, type: !7883, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7885)
!7883 = !DISubroutineType(types: !7884)
!7884 = !{!107, !13, !13, !185}
!7885 = !{!7886, !7887, !7888, !7889, !7890}
!7886 = !DILocalVariable(name: "m1", arg: 1, scope: !7882, file: !7648, line: 239, type: !13)
!7887 = !DILocalVariable(name: "m2", arg: 2, scope: !7882, file: !7648, line: 239, type: !13)
!7888 = !DILocalVariable(name: "n", arg: 3, scope: !7882, file: !7648, line: 239, type: !185)
!7889 = !DILocalVariable(name: "c1", scope: !7882, file: !7648, line: 241, type: !118)
!7890 = !DILocalVariable(name: "c2", scope: !7882, file: !7648, line: 242, type: !118)
!7891 = !DILocation(line: 0, scope: !7882)
!7892 = !DILocation(line: 244, column: 7, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7882, file: !7648, line: 244, column: 6)
!7894 = !DILocation(line: 244, column: 6, scope: !7882)
!7895 = !DILocation(line: 248, column: 10, scope: !7882)
!7896 = !DILocation(line: 248, column: 14, scope: !7882)
!7897 = !DILocation(line: 248, column: 19, scope: !7882)
!7898 = !DILocation(line: 248, column: 2, scope: !7882)
!7899 = !DILocation(line: 248, column: 23, scope: !7882)
!7900 = !DILocation(line: 248, column: 30, scope: !7882)
!7901 = !DILocation(line: 248, column: 27, scope: !7882)
!7902 = !DILocation(line: 249, column: 5, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7882, file: !7648, line: 248, column: 36)
!7904 = !DILocation(line: 250, column: 5, scope: !7903)
!7905 = distinct !{!7905, !7898, !7906}
!7906 = !DILocation(line: 251, column: 2, scope: !7882)
!7907 = !DILocation(line: 253, column: 9, scope: !7882)
!7908 = !DILocation(line: 253, column: 15, scope: !7882)
!7909 = !DILocation(line: 253, column: 13, scope: !7882)
!7910 = !DILocation(line: 253, column: 2, scope: !7882)
!7911 = !DILocation(line: 254, column: 1, scope: !7882)
!7912 = distinct !DISubprogram(name: "memmove", scope: !7648, file: !7648, line: 263, type: !7913, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7915)
!7913 = !DISubroutineType(types: !7914)
!7914 = !{!106, !106, !13, !185}
!7915 = !{!7916, !7917, !7918, !7919, !7920}
!7916 = !DILocalVariable(name: "d", arg: 1, scope: !7912, file: !7648, line: 263, type: !106)
!7917 = !DILocalVariable(name: "s", arg: 2, scope: !7912, file: !7648, line: 263, type: !13)
!7918 = !DILocalVariable(name: "n", arg: 3, scope: !7912, file: !7648, line: 263, type: !185)
!7919 = !DILocalVariable(name: "dest", scope: !7912, file: !7648, line: 265, type: !193)
!7920 = !DILocalVariable(name: "src", scope: !7912, file: !7648, line: 266, type: !118)
!7921 = !DILocation(line: 0, scope: !7912)
!7922 = !DILocation(line: 268, column: 21, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7912, file: !7648, line: 268, column: 6)
!7924 = !DILocation(line: 268, column: 28, scope: !7923)
!7925 = !DILocation(line: 268, column: 6, scope: !7912)
!7926 = !DILocation(line: 280, column: 12, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7923, file: !7648, line: 278, column: 9)
!7928 = !DILocation(line: 280, column: 3, scope: !7927)
!7929 = !DILocation(line: 275, column: 5, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7931, file: !7648, line: 274, column: 17)
!7931 = distinct !DILexicalBlock(scope: !7923, file: !7648, line: 268, column: 33)
!7932 = !DILocation(line: 276, column: 14, scope: !7930)
!7933 = !DILocation(line: 276, column: 4, scope: !7930)
!7934 = !DILocation(line: 276, column: 12, scope: !7930)
!7935 = !DILocation(line: 274, column: 12, scope: !7931)
!7936 = !DILocation(line: 274, column: 3, scope: !7931)
!7937 = distinct !{!7937, !7936, !7938}
!7938 = !DILocation(line: 277, column: 3, scope: !7931)
!7939 = !DILocation(line: 281, column: 12, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7927, file: !7648, line: 280, column: 17)
!7941 = !DILocation(line: 281, column: 10, scope: !7940)
!7942 = !DILocation(line: 282, column: 8, scope: !7940)
!7943 = !DILocation(line: 283, column: 7, scope: !7940)
!7944 = !DILocation(line: 284, column: 5, scope: !7940)
!7945 = distinct !{!7945, !7928, !7946}
!7946 = !DILocation(line: 285, column: 3, scope: !7927)
!7947 = !DILocation(line: 288, column: 2, scope: !7912)
!7948 = distinct !DISubprogram(name: "memcpy", scope: !7648, file: !7648, line: 298, type: !7949, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7953)
!7949 = !DISubroutineType(types: !7950)
!7950 = !{!106, !7951, !7952, !185}
!7951 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !106)
!7952 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7953 = !{!7954, !7955, !7956, !7957, !7958}
!7954 = !DILocalVariable(name: "d", arg: 1, scope: !7948, file: !7648, line: 298, type: !7951)
!7955 = !DILocalVariable(name: "s", arg: 2, scope: !7948, file: !7648, line: 298, type: !7952)
!7956 = !DILocalVariable(name: "n", arg: 3, scope: !7948, file: !7648, line: 298, type: !185)
!7957 = !DILocalVariable(name: "d_byte", scope: !7948, file: !7648, line: 302, type: !1121)
!7958 = !DILocalVariable(name: "s_byte", scope: !7948, file: !7648, line: 303, type: !2861)
!7959 = !DILocation(line: 0, scope: !7948)
!7960 = !DILocation(line: 337, column: 11, scope: !7948)
!7961 = !DILocation(line: 337, column: 2, scope: !7948)
!7962 = !DILocation(line: 338, column: 25, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7948, file: !7648, line: 337, column: 16)
!7964 = !DILocation(line: 338, column: 17, scope: !7963)
!7965 = !DILocation(line: 338, column: 11, scope: !7963)
!7966 = !DILocation(line: 338, column: 15, scope: !7963)
!7967 = !DILocation(line: 339, column: 4, scope: !7963)
!7968 = distinct !{!7968, !7961, !7969}
!7969 = !DILocation(line: 340, column: 2, scope: !7948)
!7970 = !DILocation(line: 342, column: 2, scope: !7948)
!7971 = distinct !DISubprogram(name: "memset", scope: !7648, file: !7648, line: 352, type: !7972, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7974)
!7972 = !DISubroutineType(types: !7973)
!7973 = !{!106, !106, !107, !185}
!7974 = !{!7975, !7976, !7977, !7978, !7979}
!7975 = !DILocalVariable(name: "buf", arg: 1, scope: !7971, file: !7648, line: 352, type: !106)
!7976 = !DILocalVariable(name: "c", arg: 2, scope: !7971, file: !7648, line: 352, type: !107)
!7977 = !DILocalVariable(name: "n", arg: 3, scope: !7971, file: !7648, line: 352, type: !185)
!7978 = !DILocalVariable(name: "d_byte", scope: !7971, file: !7648, line: 356, type: !1121)
!7979 = !DILocalVariable(name: "c_byte", scope: !7971, file: !7648, line: 357, type: !196)
!7980 = !DILocation(line: 0, scope: !7971)
!7981 = !DILocation(line: 357, column: 25, scope: !7971)
!7982 = !DILocation(line: 389, column: 11, scope: !7971)
!7983 = !DILocation(line: 389, column: 2, scope: !7971)
!7984 = !DILocation(line: 390, column: 11, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7971, file: !7648, line: 389, column: 16)
!7986 = !DILocation(line: 390, column: 15, scope: !7985)
!7987 = !DILocation(line: 391, column: 4, scope: !7985)
!7988 = distinct !{!7988, !7983, !7989}
!7989 = !DILocation(line: 392, column: 2, scope: !7971)
!7990 = !DILocation(line: 394, column: 2, scope: !7971)
!7991 = distinct !DISubprogram(name: "memchr", scope: !7648, file: !7648, line: 404, type: !7992, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7994)
!7992 = !DISubroutineType(types: !7993)
!7993 = !{!106, !13, !107, !185}
!7994 = !{!7995, !7996, !7997, !7998}
!7995 = !DILocalVariable(name: "s", arg: 1, scope: !7991, file: !7648, line: 404, type: !13)
!7996 = !DILocalVariable(name: "c", arg: 2, scope: !7991, file: !7648, line: 404, type: !107)
!7997 = !DILocalVariable(name: "n", arg: 3, scope: !7991, file: !7648, line: 404, type: !185)
!7998 = !DILocalVariable(name: "p", scope: !7999, file: !7648, line: 407, type: !2861)
!7999 = distinct !DILexicalBlock(scope: !8000, file: !7648, line: 406, column: 14)
!8000 = distinct !DILexicalBlock(scope: !7991, file: !7648, line: 406, column: 6)
!8001 = !DILocation(line: 0, scope: !7991)
!8002 = !DILocation(line: 406, column: 8, scope: !8000)
!8003 = !DILocation(line: 406, column: 6, scope: !7991)
!8004 = !DILocation(line: 409, column: 3, scope: !7999)
!8005 = !DILocation(line: 0, scope: !7999)
!8006 = !DILocation(line: 410, column: 8, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !8008, file: !7648, line: 410, column: 8)
!8008 = distinct !DILexicalBlock(scope: !7999, file: !7648, line: 409, column: 6)
!8009 = !DILocation(line: 410, column: 13, scope: !8007)
!8010 = !DILocation(line: 410, column: 8, scope: !8008)
!8011 = distinct !{!8011, !8004, !8012}
!8012 = !DILocation(line: 414, column: 20, scope: !7999)
!8013 = !DILocation(line: 417, column: 2, scope: !7991)
!8014 = !DILocation(line: 418, column: 1, scope: !7991)
!8015 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !501, file: !501, line: 23, type: !4126, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8016)
!8016 = !{!8017}
!8017 = !DILocalVariable(name: "hook", arg: 1, scope: !8015, file: !501, line: 23, type: !213)
!8018 = !DILocation(line: 0, scope: !8015)
!8019 = !DILocation(line: 25, column: 15, scope: !8015)
!8020 = !DILocation(line: 26, column: 1, scope: !8015)
!8021 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !501, file: !501, line: 14, type: !214, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8022)
!8022 = !{!8023}
!8023 = !DILocalVariable(name: "c", arg: 1, scope: !8021, file: !501, line: 14, type: !107)
!8024 = !DILocation(line: 0, scope: !8021)
!8025 = !DILocation(line: 18, column: 2, scope: !8021)
!8026 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !501, file: !501, line: 28, type: !8027, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8029)
!8027 = !DISubroutineType(types: !8028)
!8028 = !{!107, !107, !497}
!8029 = !{!8030, !8031}
!8030 = !DILocalVariable(name: "c", arg: 1, scope: !8026, file: !501, line: 28, type: !107)
!8031 = !DILocalVariable(name: "stream", arg: 2, scope: !8026, file: !501, line: 28, type: !497)
!8032 = !DILocation(line: 0, scope: !8026)
!8033 = !DILocation(line: 30, column: 27, scope: !8026)
!8034 = !DILocation(line: 30, column: 50, scope: !8026)
!8035 = !DILocation(line: 30, column: 9, scope: !8026)
!8036 = !DILocation(line: 30, column: 2, scope: !8026)
!8037 = distinct !DISubprogram(name: "fputc", scope: !501, file: !501, line: 41, type: !8027, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8038)
!8038 = !{!8039, !8040}
!8039 = !DILocalVariable(name: "c", arg: 1, scope: !8037, file: !501, line: 41, type: !107)
!8040 = !DILocalVariable(name: "stream", arg: 2, scope: !8037, file: !501, line: 41, type: !497)
!8041 = !DILocation(line: 0, scope: !8037)
!8042 = !DILocation(line: 43, column: 9, scope: !8037)
!8043 = !DILocation(line: 43, column: 2, scope: !8037)
!8044 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8045, file: !8045, line: 72, type: !8027, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8046)
!8045 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!8046 = !{!8047, !8048}
!8047 = !DILocalVariable(name: "c", arg: 1, scope: !8044, file: !8045, line: 72, type: !107)
!8048 = !DILocalVariable(name: "stream", arg: 2, scope: !8044, file: !8045, line: 72, type: !497)
!8049 = !DILocation(line: 0, scope: !8044)
!8050 = !DILocation(line: 81, column: 2, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8044, file: !8045, line: 81, column: 2)
!8052 = !{i64 2154912661}
!8053 = !DILocation(line: 82, column: 9, scope: !8044)
!8054 = !DILocation(line: 82, column: 2, scope: !8044)
!8055 = distinct !DISubprogram(name: "fputs", scope: !501, file: !501, line: 46, type: !8056, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8059)
!8056 = !DISubroutineType(types: !8057)
!8057 = !{!107, !7652, !8058}
!8058 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !497)
!8059 = !{!8060, !8061, !8062, !8063}
!8060 = !DILocalVariable(name: "s", arg: 1, scope: !8055, file: !501, line: 46, type: !7652)
!8061 = !DILocalVariable(name: "stream", arg: 2, scope: !8055, file: !501, line: 46, type: !8058)
!8062 = !DILocalVariable(name: "len", scope: !8055, file: !501, line: 48, type: !107)
!8063 = !DILocalVariable(name: "ret", scope: !8055, file: !501, line: 49, type: !107)
!8064 = !DILocation(line: 0, scope: !8055)
!8065 = !DILocation(line: 48, column: 12, scope: !8055)
!8066 = !DILocation(line: 51, column: 8, scope: !8055)
!8067 = !DILocation(line: 53, column: 13, scope: !8055)
!8068 = !DILocation(line: 53, column: 9, scope: !8055)
!8069 = !DILocation(line: 53, column: 2, scope: !8055)
!8070 = distinct !DISubprogram(name: "fwrite", scope: !501, file: !501, line: 99, type: !8071, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8073)
!8071 = !DISubroutineType(types: !8072)
!8072 = !{!185, !7952, !185, !185, !8058}
!8073 = !{!8074, !8075, !8076, !8077}
!8074 = !DILocalVariable(name: "ptr", arg: 1, scope: !8070, file: !501, line: 99, type: !7952)
!8075 = !DILocalVariable(name: "size", arg: 2, scope: !8070, file: !501, line: 99, type: !185)
!8076 = !DILocalVariable(name: "nitems", arg: 3, scope: !8070, file: !501, line: 99, type: !185)
!8077 = !DILocalVariable(name: "stream", arg: 4, scope: !8070, file: !501, line: 100, type: !8058)
!8078 = !DILocation(line: 0, scope: !8070)
!8079 = !DILocation(line: 102, column: 9, scope: !8070)
!8080 = !DILocation(line: 102, column: 2, scope: !8070)
!8081 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8045, file: !8045, line: 96, type: !8071, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8082)
!8082 = !{!8083, !8084, !8085, !8086}
!8083 = !DILocalVariable(name: "ptr", arg: 1, scope: !8081, file: !8045, line: 96, type: !7952)
!8084 = !DILocalVariable(name: "size", arg: 2, scope: !8081, file: !8045, line: 96, type: !185)
!8085 = !DILocalVariable(name: "nitems", arg: 3, scope: !8081, file: !8045, line: 96, type: !185)
!8086 = !DILocalVariable(name: "stream", arg: 4, scope: !8081, file: !8045, line: 96, type: !8058)
!8087 = !DILocation(line: 0, scope: !8081)
!8088 = !DILocation(line: 107, column: 2, scope: !8089)
!8089 = distinct !DILexicalBlock(scope: !8081, file: !8045, line: 107, column: 2)
!8090 = !{i64 2154912765}
!8091 = !DILocation(line: 108, column: 9, scope: !8081)
!8092 = !DILocation(line: 108, column: 2, scope: !8081)
!8093 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !501, file: !501, line: 56, type: !8071, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8094)
!8094 = !{!8095, !8096, !8097, !8098, !8099, !8100, !8101, !8102}
!8095 = !DILocalVariable(name: "ptr", arg: 1, scope: !8093, file: !501, line: 56, type: !7952)
!8096 = !DILocalVariable(name: "size", arg: 2, scope: !8093, file: !501, line: 56, type: !185)
!8097 = !DILocalVariable(name: "nitems", arg: 3, scope: !8093, file: !501, line: 57, type: !185)
!8098 = !DILocalVariable(name: "stream", arg: 4, scope: !8093, file: !501, line: 57, type: !8058)
!8099 = !DILocalVariable(name: "i", scope: !8093, file: !501, line: 59, type: !185)
!8100 = !DILocalVariable(name: "j", scope: !8093, file: !501, line: 60, type: !185)
!8101 = !DILocalVariable(name: "p", scope: !8093, file: !501, line: 61, type: !2861)
!8102 = !DILabel(scope: !8093, name: "done", file: !501, line: 82)
!8103 = !DILocation(line: 0, scope: !8093)
!8104 = !DILocation(line: 63, column: 14, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8093, file: !501, line: 63, column: 6)
!8106 = !DILocation(line: 63, column: 24, scope: !8105)
!8107 = !DILocation(line: 72, column: 3, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8093, file: !501, line: 70, column: 5)
!8109 = !DILocation(line: 0, scope: !8108)
!8110 = !DILocation(line: 73, column: 8, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8112, file: !501, line: 73, column: 8)
!8112 = distinct !DILexicalBlock(scope: !8108, file: !501, line: 72, column: 6)
!8113 = !DILocation(line: 73, column: 29, scope: !8111)
!8114 = !DILocation(line: 73, column: 27, scope: !8111)
!8115 = !DILocation(line: 73, column: 21, scope: !8111)
!8116 = !DILocation(line: 73, column: 33, scope: !8111)
!8117 = !DILocation(line: 73, column: 8, scope: !8112)
!8118 = !DILocation(line: 76, column: 5, scope: !8112)
!8119 = !DILocation(line: 77, column: 14, scope: !8108)
!8120 = !DILocation(line: 77, column: 3, scope: !8112)
!8121 = distinct !{!8121, !8107, !8122}
!8122 = !DILocation(line: 77, column: 17, scope: !8108)
!8123 = !DILocation(line: 79, column: 4, scope: !8108)
!8124 = !DILocation(line: 80, column: 13, scope: !8093)
!8125 = !DILocation(line: 80, column: 2, scope: !8108)
!8126 = distinct !{!8126, !8127, !8128}
!8127 = !DILocation(line: 70, column: 2, scope: !8093)
!8128 = !DILocation(line: 80, column: 16, scope: !8093)
!8129 = !DILocation(line: 82, column: 1, scope: !8093)
!8130 = !DILocation(line: 83, column: 17, scope: !8093)
!8131 = !DILocation(line: 83, column: 2, scope: !8093)
!8132 = !DILocation(line: 84, column: 1, scope: !8093)
!8133 = distinct !DISubprogram(name: "puts", scope: !501, file: !501, line: 106, type: !8134, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8136)
!8134 = !DISubroutineType(types: !8135)
!8135 = !{!107, !118}
!8136 = !{!8137}
!8137 = !DILocalVariable(name: "s", arg: 1, scope: !8133, file: !501, line: 106, type: !118)
!8138 = !DILocation(line: 0, scope: !8133)
!8139 = !DILocation(line: 108, column: 6, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8133, file: !501, line: 108, column: 6)
!8141 = !DILocation(line: 108, column: 23, scope: !8140)
!8142 = !DILocation(line: 108, column: 6, scope: !8133)
!8143 = !DILocation(line: 112, column: 9, scope: !8133)
!8144 = !DILocation(line: 112, column: 29, scope: !8133)
!8145 = !DILocation(line: 112, column: 2, scope: !8133)
!8146 = !DILocation(line: 113, column: 1, scope: !8133)
!8147 = distinct !DISubprogram(name: "end_report", scope: !533, file: !533, line: 67, type: !3089, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8148 = !DILocation(line: 69, column: 6, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8147, file: !533, line: 69, column: 6)
!8150 = !DILocation(line: 0, scope: !8149)
!8151 = !DILocation(line: 74, column: 1, scope: !8147)
!8152 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_start", scope: !533, file: !533, line: 159, type: !3089, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8153 = !DILocation(line: 183, column: 1, scope: !8152)
!8154 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_stop", scope: !533, file: !533, line: 185, type: !3089, scopeLine: 186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8155 = !DILocation(line: 196, column: 1, scope: !8154)
!8156 = distinct !DISubprogram(name: "ztest_skip_failed_assumption", scope: !533, file: !533, line: 295, type: !3089, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8157 = !DILocation(line: 298, column: 34, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8159, file: !533, line: 297, column: 47)
!8159 = distinct !DILexicalBlock(scope: !8156, file: !533, line: 297, column: 6)
!8160 = !DILocation(line: 300, column: 2, scope: !8156)
!8161 = !DILocation(line: 301, column: 1, scope: !8156)
!8162 = distinct !DISubprogram(name: "ztest_test_skip", scope: !533, file: !533, line: 476, type: !3089, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8163 = !DILocation(line: 478, column: 10, scope: !8162)
!8164 = !DILocation(line: 478, column: 2, scope: !8162)
!8165 = !DILocation(line: 480, column: 15, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8162, file: !533, line: 478, column: 17)
!8167 = !DILocation(line: 481, column: 3, scope: !8166)
!8168 = !DILocation(line: 484, column: 15, scope: !8166)
!8169 = !DILocation(line: 485, column: 3, scope: !8166)
!8170 = !DILocation(line: 486, column: 3, scope: !8166)
!8171 = !DILocation(line: 489, column: 9, scope: !8166)
!8172 = !DILocation(line: 488, column: 3, scope: !8166)
!8173 = !DILocation(line: 490, column: 15, scope: !8166)
!8174 = !DILocation(line: 491, column: 3, scope: !8166)
!8175 = !DILocation(line: 493, column: 1, scope: !8162)
!8176 = distinct !DISubprogram(name: "test_finalize", scope: !533, file: !533, line: 432, type: !3089, scopeLine: 433, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8177 = !DILocation(line: 435, column: 3, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8179, file: !533, line: 434, column: 41)
!8179 = distinct !DILexicalBlock(scope: !8176, file: !533, line: 434, column: 6)
!8180 = !DILocation(line: 436, column: 18, scope: !8178)
!8181 = !DILocation(line: 436, column: 3, scope: !8178)
!8182 = !DILocation(line: 438, column: 1, scope: !8176)
!8183 = distinct !DISubprogram(name: "get_friendly_phase_name", scope: !533, file: !533, line: 274, type: !8184, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8186)
!8184 = !DISubroutineType(types: !8185)
!8185 = !{!118, !532}
!8186 = !{!8187}
!8187 = !DILocalVariable(name: "phase", arg: 1, scope: !8183, file: !533, line: 274, type: !532)
!8188 = !DILocation(line: 0, scope: !8183)
!8189 = !DILocation(line: 276, column: 2, scope: !8183)
!8190 = !DILocation(line: 0, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8183, file: !533, line: 276, column: 17)
!8192 = !DILocation(line: 292, column: 1, scope: !8183)
!8193 = distinct !DISubprogram(name: "k_thread_abort", scope: !4420, file: !4420, line: 188, type: !8194, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8198)
!8194 = !DISubroutineType(types: !8195)
!8195 = !{null, !8196}
!8196 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !8197)
!8197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 32)
!8198 = !{!8199}
!8199 = !DILocalVariable(name: "thread", arg: 1, scope: !8193, file: !4420, line: 188, type: !8196)
!8200 = !DILocation(line: 0, scope: !8193)
!8201 = !DILocation(line: 197, column: 2, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8193, file: !4420, line: 197, column: 2)
!8203 = !{i64 2154874548}
!8204 = !DILocation(line: 198, column: 2, scope: !8193)
!8205 = !DILocation(line: 199, column: 1, scope: !8193)
!8206 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !8207, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8207 = !DISubroutineType(types: !8208)
!8208 = !{!8196}
!8209 = !DILocation(line: 535, column: 9, scope: !8206)
!8210 = !DILocation(line: 535, column: 2, scope: !8206)
!8211 = distinct !DISubprogram(name: "z_current_get", scope: !4420, file: !4420, line: 173, type: !8207, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8212 = !DILocation(line: 180, column: 2, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8211, file: !4420, line: 180, column: 2)
!8214 = !{i64 2154874480}
!8215 = !DILocation(line: 181, column: 9, scope: !8211)
!8216 = !DILocation(line: 181, column: 2, scope: !8211)
!8217 = distinct !DISubprogram(name: "ztest_test_fail", scope: !533, file: !533, line: 440, type: !3089, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8218 = !DILocation(line: 442, column: 10, scope: !8217)
!8219 = !DILocation(line: 442, column: 2, scope: !8217)
!8220 = !DILocation(line: 444, column: 15, scope: !8221)
!8221 = distinct !DILexicalBlock(scope: !8217, file: !533, line: 442, column: 17)
!8222 = !DILocation(line: 445, column: 3, scope: !8221)
!8223 = !DILocation(line: 448, column: 15, scope: !8221)
!8224 = !DILocation(line: 449, column: 3, scope: !8221)
!8225 = !DILocation(line: 450, column: 3, scope: !8221)
!8226 = !DILocation(line: 453, column: 9, scope: !8221)
!8227 = !DILocation(line: 452, column: 3, scope: !8221)
!8228 = !DILocation(line: 454, column: 15, scope: !8221)
!8229 = !DILocation(line: 455, column: 3, scope: !8221)
!8230 = !DILocation(line: 457, column: 1, scope: !8217)
!8231 = distinct !DISubprogram(name: "ztest_test_pass", scope: !533, file: !533, line: 459, type: !3089, scopeLine: 460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8232 = !DILocation(line: 461, column: 10, scope: !8231)
!8233 = !DILocation(line: 461, column: 2, scope: !8231)
!8234 = !DILocation(line: 463, column: 15, scope: !8235)
!8235 = distinct !DILexicalBlock(scope: !8231, file: !533, line: 461, column: 17)
!8236 = !DILocation(line: 465, column: 3, scope: !8235)
!8237 = !DILocation(line: 468, column: 9, scope: !8235)
!8238 = !DILocation(line: 467, column: 3, scope: !8235)
!8239 = !DILocation(line: 469, column: 15, scope: !8235)
!8240 = !DILocation(line: 470, column: 7, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !8235, file: !533, line: 470, column: 7)
!8242 = !DILocation(line: 470, column: 13, scope: !8241)
!8243 = !DILocation(line: 470, column: 7, scope: !8235)
!8244 = !DILocation(line: 0, scope: !8235)
!8245 = !DILocation(line: 474, column: 1, scope: !8231)
!8246 = distinct !DISubprogram(name: "ztest_simple_1cpu_before", scope: !533, file: !533, line: 495, type: !131, scopeLine: 496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8247)
!8247 = !{!8248}
!8248 = !DILocalVariable(name: "data", arg: 1, scope: !8246, file: !533, line: 495, type: !106)
!8249 = !DILocation(line: 0, scope: !8246)
!8250 = !DILocation(line: 498, column: 2, scope: !8246)
!8251 = !DILocation(line: 499, column: 1, scope: !8246)
!8252 = distinct !DISubprogram(name: "z_test_1cpu_start", scope: !8253, file: !8253, line: 24, type: !3089, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8253 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!8254 = !DILocation(line: 32, column: 2, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8252, file: !8253, line: 32, column: 2)
!8256 = !{i64 2154996851}
!8257 = !DILocation(line: 34, column: 1, scope: !8252)
!8258 = distinct !DISubprogram(name: "ztest_simple_1cpu_after", scope: !533, file: !533, line: 501, type: !131, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8259)
!8259 = !{!8260}
!8260 = !DILocalVariable(name: "data", arg: 1, scope: !8258, file: !533, line: 501, type: !106)
!8261 = !DILocation(line: 0, scope: !8258)
!8262 = !DILocation(line: 504, column: 2, scope: !8258)
!8263 = !DILocation(line: 505, column: 1, scope: !8258)
!8264 = distinct !DISubprogram(name: "z_test_1cpu_stop", scope: !8253, file: !8253, line: 47, type: !3089, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8265 = !DILocation(line: 55, column: 2, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !8264, file: !8253, line: 55, column: 2)
!8267 = !{i64 2154996919}
!8268 = !DILocation(line: 57, column: 1, scope: !8264)
!8269 = distinct !DISubprogram(name: "z_ztest_get_next_test", scope: !533, file: !533, line: 617, type: !8270, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8289)
!8270 = !DISubroutineType(types: !8271)
!8271 = !{!8272, !118, !8272}
!8272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8273, size: 32)
!8273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !8274)
!8274 = !{!8275, !8276, !8277, !8278, !8279}
!8275 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8273, file: !114, line: 98, baseType: !118, size: 32)
!8276 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8273, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!8277 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !8273, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!8278 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !8273, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!8279 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8273, file: !114, line: 104, baseType: !8280, size: 32, offset: 128)
!8280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8281)
!8281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8282, size: 32)
!8282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !8283)
!8283 = !{!8284, !8285, !8286, !8287, !8288}
!8284 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !8282, file: !114, line: 125, baseType: !152, size: 32)
!8285 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !8282, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!8286 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !8282, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!8287 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !8282, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!8288 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !8282, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!8289 = !{!8290, !8291, !8292}
!8290 = !DILocalVariable(name: "suite", arg: 1, scope: !8269, file: !533, line: 617, type: !118)
!8291 = !DILocalVariable(name: "prev", arg: 2, scope: !8269, file: !533, line: 617, type: !8272)
!8292 = !DILocalVariable(name: "test", scope: !8269, file: !533, line: 619, type: !8272)
!8293 = !DILocation(line: 0, scope: !8269)
!8294 = !DILocation(line: 619, column: 39, scope: !8269)
!8295 = !DILocation(line: 619, column: 33, scope: !8269)
!8296 = !DILocation(line: 621, column: 14, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8298, file: !533, line: 621, column: 2)
!8298 = distinct !DILexicalBlock(scope: !8269, file: !533, line: 621, column: 2)
!8299 = !DILocation(line: 621, column: 2, scope: !8298)
!8300 = !DILocation(line: 622, column: 27, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8302, file: !533, line: 622, column: 7)
!8302 = distinct !DILexicalBlock(scope: !8297, file: !533, line: 621, column: 51)
!8303 = !DILocation(line: 622, column: 7, scope: !8301)
!8304 = !DILocation(line: 622, column: 44, scope: !8301)
!8305 = !DILocation(line: 622, column: 7, scope: !8302)
!8306 = !DILocation(line: 621, column: 43, scope: !8297)
!8307 = distinct !{!8307, !8299, !8308}
!8308 = !DILocation(line: 625, column: 2, scope: !8298)
!8309 = !DILocation(line: 627, column: 1, scope: !8269)
!8310 = distinct !DISubprogram(name: "z_ztest_run_test_suite", scope: !533, file: !533, line: 764, type: !8134, scopeLine: 765, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8311)
!8311 = !{!8312}
!8312 = !DILocalVariable(name: "name", arg: 1, scope: !8310, file: !533, line: 764, type: !118)
!8313 = !DILocation(line: 0, scope: !8310)
!8314 = !DILocation(line: 766, column: 36, scope: !8310)
!8315 = !DILocation(line: 766, column: 9, scope: !8310)
!8316 = !DILocation(line: 766, column: 2, scope: !8310)
!8317 = distinct !DISubprogram(name: "ztest_find_test_suite", scope: !533, file: !533, line: 604, type: !8318, scopeLine: 605, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8337)
!8318 = !DISubroutineType(types: !8319)
!8319 = !{!8320, !118}
!8320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8321, size: 32)
!8321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !8322)
!8322 = !{!8323, !8324, !8325, !8326, !8327, !8328, !8329}
!8323 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8321, file: !114, line: 179, baseType: !117, size: 32)
!8324 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !8321, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!8325 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !8321, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!8326 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !8321, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!8327 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !8321, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!8328 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !8321, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!8329 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8321, file: !114, line: 197, baseType: !8330, size: 32, offset: 192)
!8330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8331)
!8331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8332, size: 32)
!8332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !8333)
!8333 = !{!8334, !8335, !8336}
!8334 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !8332, file: !114, line: 116, baseType: !152, size: 32)
!8335 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !8332, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!8336 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !8332, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!8337 = !{!8338, !8339}
!8338 = !DILocalVariable(name: "name", arg: 1, scope: !8317, file: !533, line: 604, type: !118)
!8339 = !DILocalVariable(name: "node", scope: !8317, file: !533, line: 606, type: !8320)
!8340 = !DILocation(line: 0, scope: !8317)
!8341 = !DILocation(line: 608, column: 2, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8317, file: !533, line: 608, column: 2)
!8343 = !DILocation(line: 609, column: 26, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8345, file: !533, line: 609, column: 7)
!8345 = distinct !DILexicalBlock(scope: !8346, file: !533, line: 608, column: 87)
!8346 = distinct !DILexicalBlock(scope: !8342, file: !533, line: 608, column: 2)
!8347 = !DILocation(line: 609, column: 7, scope: !8344)
!8348 = !DILocation(line: 609, column: 32, scope: !8344)
!8349 = !DILocation(line: 609, column: 7, scope: !8345)
!8350 = !DILocation(line: 608, column: 79, scope: !8346)
!8351 = !DILocation(line: 608, column: 49, scope: !8346)
!8352 = distinct !{!8352, !8341, !8353}
!8353 = !DILocation(line: 612, column: 2, scope: !8342)
!8354 = !DILocation(line: 615, column: 1, scope: !8317)
!8355 = distinct !DISubprogram(name: "z_ztest_run_test_suite_ptr", scope: !533, file: !533, line: 652, type: !8356, scopeLine: 653, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8358)
!8356 = !DISubroutineType(types: !8357)
!8357 = !{!107, !8320}
!8358 = !{!8359, !8360, !8361, !8362, !8363, !8364}
!8359 = !DILocalVariable(name: "suite", arg: 1, scope: !8355, file: !533, line: 652, type: !8320)
!8360 = !DILocalVariable(name: "test", scope: !8355, file: !533, line: 654, type: !8272)
!8361 = !DILocalVariable(name: "data", scope: !8355, file: !533, line: 655, type: !106)
!8362 = !DILocalVariable(name: "fail", scope: !8355, file: !533, line: 656, type: !107)
!8363 = !DILocalVariable(name: "tc_result", scope: !8355, file: !533, line: 657, type: !107)
!8364 = !DILocalVariable(name: "i", scope: !8365, file: !533, line: 692, type: !107)
!8365 = distinct !DILexicalBlock(scope: !8355, file: !533, line: 692, column: 2)
!8366 = !DILocation(line: 0, scope: !8355)
!8367 = !DILocation(line: 663, column: 12, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8355, file: !533, line: 663, column: 6)
!8369 = !DILocation(line: 663, column: 6, scope: !8355)
!8370 = !DILocation(line: 664, column: 15, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8368, file: !533, line: 663, column: 21)
!8372 = !DILocation(line: 665, column: 3, scope: !8371)
!8373 = !DILocation(line: 679, column: 2, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8355, file: !533, line: 679, column: 2)
!8375 = !DILocation(line: 680, column: 33, scope: !8355)
!8376 = !DILocation(line: 681, column: 14, scope: !8355)
!8377 = !DILocation(line: 682, column: 8, scope: !8355)
!8378 = !DILocation(line: 688, column: 55, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8355, file: !533, line: 688, column: 6)
!8380 = !DILocation(line: 688, column: 61, scope: !8379)
!8381 = !DILocation(line: 688, column: 6, scope: !8355)
!8382 = !DILocation(line: 689, column: 10, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8379, file: !533, line: 688, column: 70)
!8384 = !DILocation(line: 690, column: 2, scope: !8383)
!8385 = !DILocation(line: 0, scope: !8365)
!8386 = !DILocation(line: 727, column: 3, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8388, file: !533, line: 692, column: 46)
!8388 = distinct !DILexicalBlock(scope: !8365, file: !533, line: 692, column: 2)
!8389 = !DILocation(line: 0, scope: !8387)
!8390 = !DILocation(line: 727, column: 48, scope: !8387)
!8391 = !DILocation(line: 727, column: 19, scope: !8387)
!8392 = !DILocation(line: 727, column: 61, scope: !8387)
!8393 = !DILocation(line: 728, column: 41, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8395, file: !533, line: 728, column: 8)
!8395 = distinct !DILexicalBlock(scope: !8387, file: !533, line: 727, column: 71)
!8396 = !DILocation(line: 728, column: 53, scope: !8394)
!8397 = !DILocation(line: 728, column: 8, scope: !8394)
!8398 = !DILocation(line: 728, column: 8, scope: !8395)
!8399 = !DILocation(line: 729, column: 11, scope: !8400)
!8400 = distinct !DILexicalBlock(scope: !8394, file: !533, line: 728, column: 60)
!8401 = !DILocation(line: 729, column: 18, scope: !8400)
!8402 = !DILocation(line: 729, column: 27, scope: !8400)
!8403 = !DILocation(line: 730, column: 17, scope: !8400)
!8404 = !DILocation(line: 731, column: 9, scope: !8400)
!8405 = !DILocation(line: 732, column: 12, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8407, file: !533, line: 731, column: 31)
!8407 = distinct !DILexicalBlock(scope: !8400, file: !533, line: 731, column: 9)
!8408 = !DILocation(line: 732, column: 19, scope: !8406)
!8409 = !DILocation(line: 733, column: 5, scope: !8406)
!8410 = !DILocation(line: 734, column: 12, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8412, file: !533, line: 733, column: 38)
!8412 = distinct !DILexicalBlock(scope: !8407, file: !533, line: 733, column: 16)
!8413 = !DILocation(line: 734, column: 19, scope: !8411)
!8414 = !DILocation(line: 735, column: 5, scope: !8411)
!8415 = !DILocation(line: 736, column: 12, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8417, file: !533, line: 735, column: 38)
!8417 = distinct !DILexicalBlock(scope: !8412, file: !533, line: 735, column: 16)
!8418 = !DILocation(line: 736, column: 19, scope: !8416)
!8419 = !DILocation(line: 737, column: 5, scope: !8416)
!8420 = !DILocation(line: 0, scope: !8407)
!8421 = !DILocation(line: 739, column: 19, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8400, file: !533, line: 739, column: 9)
!8423 = !DILocation(line: 739, column: 9, scope: !8400)
!8424 = !DILocation(line: 744, column: 31, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !8395, file: !533, line: 744, column: 8)
!8426 = !DILocation(line: 744, column: 43, scope: !8425)
!8427 = !DILocation(line: 744, column: 8, scope: !8395)
!8428 = distinct !{!8428, !8386, !8429}
!8429 = !DILocation(line: 747, column: 3, scope: !8387)
!8430 = !DILocation(line: 750, column: 7, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8387, file: !533, line: 750, column: 7)
!8432 = !DILocation(line: 750, column: 38, scope: !8431)
!8433 = !DILocation(line: 751, column: 16, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8431, file: !533, line: 750, column: 52)
!8435 = !DILocation(line: 752, column: 3, scope: !8434)
!8436 = !DILocation(line: 755, column: 2, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8438, file: !533, line: 755, column: 2)
!8438 = distinct !DILexicalBlock(scope: !8355, file: !533, line: 755, column: 2)
!8439 = !DILocation(line: 0, scope: !8437)
!8440 = !DILocation(line: 756, column: 8, scope: !8355)
!8441 = !DILocation(line: 757, column: 13, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8355, file: !533, line: 757, column: 6)
!8443 = !DILocation(line: 757, column: 22, scope: !8442)
!8444 = !DILocation(line: 757, column: 6, scope: !8355)
!8445 = !DILocation(line: 758, column: 3, scope: !8446)
!8446 = distinct !DILexicalBlock(scope: !8442, file: !533, line: 757, column: 31)
!8447 = !DILocation(line: 759, column: 2, scope: !8446)
!8448 = !DILocation(line: 762, column: 1, scope: !8355)
!8449 = distinct !DISubprogram(name: "run_test", scope: !533, file: !533, line: 521, type: !8450, scopeLine: 522, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8452)
!8450 = !DISubroutineType(types: !8451)
!8451 = !{!107, !8320, !8272, !106}
!8452 = !{!8453, !8454, !8455, !8456}
!8453 = !DILocalVariable(name: "suite", arg: 1, scope: !8449, file: !533, line: 521, type: !8320)
!8454 = !DILocalVariable(name: "test", arg: 2, scope: !8449, file: !533, line: 521, type: !8272)
!8455 = !DILocalVariable(name: "data", arg: 3, scope: !8449, file: !533, line: 521, type: !106)
!8456 = !DILocalVariable(name: "ret", scope: !8449, file: !533, line: 523, type: !107)
!8457 = !DILocation(line: 0, scope: !8449)
!8458 = !DILocation(line: 528, column: 2, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8449, file: !533, line: 528, column: 2)
!8460 = !DILocation(line: 530, column: 8, scope: !8449)
!8461 = !DILocation(line: 536, column: 3, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8463, file: !533, line: 535, column: 41)
!8463 = distinct !DILexicalBlock(scope: !8449, file: !533, line: 535, column: 6)
!8464 = !DILocation(line: 539, column: 32, scope: !8462)
!8465 = !DILocation(line: 539, column: 39, scope: !8462)
!8466 = !DILocation(line: 541, column: 11, scope: !8462)
!8467 = !DILocation(line: 541, column: 26, scope: !8462)
!8468 = !DILocation(line: 537, column: 3, scope: !8462)
!8469 = !DILocation(line: 543, column: 3, scope: !8462)
!8470 = !DILocation(line: 544, column: 13, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8462, file: !533, line: 544, column: 7)
!8472 = !DILocation(line: 544, column: 18, scope: !8471)
!8473 = !DILocation(line: 544, column: 7, scope: !8462)
!8474 = !DILocation(line: 545, column: 4, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8471, file: !533, line: 544, column: 27)
!8476 = !DILocation(line: 546, column: 3, scope: !8475)
!8477 = !DILocation(line: 548, column: 7, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8462, file: !533, line: 548, column: 7)
!8479 = !DILocation(line: 548, column: 46, scope: !8478)
!8480 = !DILocation(line: 550, column: 4, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8478, file: !533, line: 549, column: 47)
!8482 = !DILocation(line: 551, column: 4, scope: !8481)
!8483 = !DILocation(line: 552, column: 3, scope: !8481)
!8484 = !DILocation(line: 564, column: 8, scope: !8449)
!8485 = !DILocation(line: 565, column: 13, scope: !8486)
!8486 = distinct !DILexicalBlock(scope: !8449, file: !533, line: 565, column: 6)
!8487 = !DILocation(line: 565, column: 19, scope: !8486)
!8488 = !DILocation(line: 565, column: 6, scope: !8449)
!8489 = !DILocation(line: 566, column: 3, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8486, file: !533, line: 565, column: 28)
!8491 = !DILocation(line: 567, column: 2, scope: !8490)
!8492 = !DILocation(line: 568, column: 2, scope: !8449)
!8493 = !DILocation(line: 570, column: 2, scope: !8449)
!8494 = !DILocation(line: 571, column: 6, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8449, file: !533, line: 571, column: 6)
!8496 = !DILocation(line: 571, column: 28, scope: !8495)
!8497 = !DILocation(line: 571, column: 35, scope: !8495)
!8498 = !DILocation(line: 571, column: 20, scope: !8495)
!8499 = !DILocation(line: 571, column: 6, scope: !8449)
!8500 = !DILocation(line: 572, column: 34, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8495, file: !533, line: 571, column: 54)
!8502 = !DILocation(line: 573, column: 2, scope: !8501)
!8503 = !DILocation(line: 575, column: 8, scope: !8449)
!8504 = !DILocation(line: 583, column: 6, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8449, file: !533, line: 583, column: 6)
!8506 = !DILocation(line: 583, column: 39, scope: !8505)
!8507 = !DILocation(line: 585, column: 46, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8505, file: !533, line: 585, column: 13)
!8509 = !DILocation(line: 590, column: 10, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8511, file: !533, line: 589, column: 54)
!8511 = distinct !DILexicalBlock(scope: !8449, file: !533, line: 589, column: 6)
!8512 = !DILocation(line: 593, column: 8, scope: !8449)
!8513 = !DILocation(line: 594, column: 2, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8449, file: !533, line: 594, column: 2)
!8515 = !DILocation(line: 595, column: 10, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8449, file: !533, line: 595, column: 6)
!8517 = !DILocation(line: 595, column: 21, scope: !8516)
!8518 = !DILocation(line: 595, column: 24, scope: !8516)
!8519 = !DILocation(line: 595, column: 6, scope: !8449)
!8520 = !DILocation(line: 596, column: 15, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8516, file: !533, line: 595, column: 56)
!8522 = !DILocation(line: 597, column: 2, scope: !8521)
!8523 = !DILocation(line: 599, column: 2, scope: !8449)
!8524 = distinct !DISubprogram(name: "get_start_time_cyc", scope: !690, file: !690, line: 98, type: !3089, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8525 = !DILocation(line: 100, column: 18, scope: !8524)
!8526 = !DILocation(line: 100, column: 16, scope: !8524)
!8527 = !DILocation(line: 101, column: 1, scope: !8524)
!8528 = distinct !DISubprogram(name: "k_thread_create", scope: !4420, file: !4420, line: 24, type: !8529, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8537)
!8529 = !DISubroutineType(types: !8530)
!8530 = !{!8196, !8197, !8531, !185, !559, !106, !106, !106, !107, !152, !8533}
!8531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8532, size: 32)
!8532 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !576)
!8533 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !8534)
!8534 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !8535)
!8535 = !{!8536}
!8536 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !8534, file: !565, line: 66, baseType: !564, size: 64)
!8537 = !{!8538, !8539, !8540, !8541, !8542, !8543, !8544, !8545, !8546, !8547}
!8538 = !DILocalVariable(name: "new_thread", arg: 1, scope: !8528, file: !4420, line: 24, type: !8197)
!8539 = !DILocalVariable(name: "stack", arg: 2, scope: !8528, file: !4420, line: 24, type: !8531)
!8540 = !DILocalVariable(name: "stack_size", arg: 3, scope: !8528, file: !4420, line: 24, type: !185)
!8541 = !DILocalVariable(name: "entry", arg: 4, scope: !8528, file: !4420, line: 24, type: !559)
!8542 = !DILocalVariable(name: "p1", arg: 5, scope: !8528, file: !4420, line: 24, type: !106)
!8543 = !DILocalVariable(name: "p2", arg: 6, scope: !8528, file: !4420, line: 24, type: !106)
!8544 = !DILocalVariable(name: "p3", arg: 7, scope: !8528, file: !4420, line: 24, type: !106)
!8545 = !DILocalVariable(name: "prio", arg: 8, scope: !8528, file: !4420, line: 24, type: !107)
!8546 = !DILocalVariable(name: "options", arg: 9, scope: !8528, file: !4420, line: 24, type: !152)
!8547 = !DILocalVariable(name: "delay", arg: 10, scope: !8528, file: !4420, line: 24, type: !8533)
!8548 = !DILocation(line: 0, scope: !8528)
!8549 = !DILocation(line: 49, column: 2, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !8528, file: !4420, line: 49, column: 2)
!8551 = !{i64 2154873936}
!8552 = !DILocation(line: 50, column: 9, scope: !8528)
!8553 = !DILocation(line: 50, column: 2, scope: !8528)
!8554 = distinct !DISubprogram(name: "k_object_access_grant", scope: !8555, file: !8555, line: 24, type: !8556, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8558)
!8555 = !DIFile(filename: "zephyr/include/generated/syscalls/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!8556 = !DISubroutineType(types: !8557)
!8557 = !{null, !13, !8197}
!8558 = !{!8559, !8560}
!8559 = !DILocalVariable(name: "object", arg: 1, scope: !8554, file: !8555, line: 24, type: !13)
!8560 = !DILocalVariable(name: "thread", arg: 2, scope: !8554, file: !8555, line: 24, type: !8197)
!8561 = !DILocation(line: 0, scope: !8554)
!8562 = !DILocation(line: 34, column: 2, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8554, file: !8555, line: 34, column: 2)
!8564 = !{i64 2154390356}
!8565 = !DILocation(line: 36, column: 1, scope: !8554)
!8566 = distinct !DISubprogram(name: "k_thread_name_set", scope: !4420, file: !4420, line: 391, type: !8567, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8569)
!8567 = !DISubroutineType(types: !8568)
!8568 = !{!107, !8196, !118}
!8569 = !{!8570, !8571}
!8570 = !DILocalVariable(name: "thread", arg: 1, scope: !8566, file: !4420, line: 391, type: !8196)
!8571 = !DILocalVariable(name: "str", arg: 2, scope: !8566, file: !4420, line: 391, type: !118)
!8572 = !DILocation(line: 0, scope: !8566)
!8573 = !DILocation(line: 400, column: 2, scope: !8574)
!8574 = distinct !DILexicalBlock(scope: !8566, file: !4420, line: 400, column: 2)
!8575 = !{i64 2154875364}
!8576 = !DILocation(line: 401, column: 9, scope: !8566)
!8577 = !DILocation(line: 401, column: 2, scope: !8566)
!8578 = distinct !DISubprogram(name: "k_thread_start", scope: !4420, file: !4420, line: 205, type: !8194, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8579)
!8579 = !{!8580}
!8580 = !DILocalVariable(name: "thread", arg: 1, scope: !8578, file: !4420, line: 205, type: !8196)
!8581 = !DILocation(line: 0, scope: !8578)
!8582 = !DILocation(line: 214, column: 2, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8578, file: !4420, line: 214, column: 2)
!8584 = !{i64 2154874616}
!8585 = !DILocation(line: 215, column: 2, scope: !8578)
!8586 = !DILocation(line: 216, column: 1, scope: !8578)
!8587 = distinct !DISubprogram(name: "k_thread_join", scope: !4420, file: !4420, line: 74, type: !8588, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8590)
!8588 = !DISubroutineType(types: !8589)
!8589 = !{!107, !8197, !8533}
!8590 = !{!8591, !8592}
!8591 = !DILocalVariable(name: "thread", arg: 1, scope: !8587, file: !4420, line: 74, type: !8197)
!8592 = !DILocalVariable(name: "timeout", arg: 2, scope: !8587, file: !4420, line: 74, type: !8533)
!8593 = !DILocation(line: 0, scope: !8587)
!8594 = !DILocation(line: 83, column: 2, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8587, file: !4420, line: 83, column: 2)
!8596 = !{i64 2154874072}
!8597 = !DILocation(line: 84, column: 9, scope: !8587)
!8598 = !DILocation(line: 84, column: 2, scope: !8587)
!8599 = distinct !DISubprogram(name: "run_test_rules", scope: !533, file: !533, line: 207, type: !8600, scopeLine: 208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8602)
!8600 = !DISubroutineType(types: !8601)
!8601 = !{null, !145, !8272, !106}
!8602 = !{!8603, !8604, !8605, !8606}
!8603 = !DILocalVariable(name: "is_before", arg: 1, scope: !8599, file: !533, line: 207, type: !145)
!8604 = !DILocalVariable(name: "test", arg: 2, scope: !8599, file: !533, line: 207, type: !8272)
!8605 = !DILocalVariable(name: "data", arg: 3, scope: !8599, file: !533, line: 207, type: !106)
!8606 = !DILocalVariable(name: "rule", scope: !8607, file: !533, line: 209, type: !8608)
!8607 = distinct !DILexicalBlock(scope: !8599, file: !533, line: 209, column: 2)
!8608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8609, size: 32)
!8609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_test_rule", file: !114, line: 437, size: 64, elements: !8610)
!8610 = !{!8611, !8618}
!8611 = !DIDerivedType(tag: DW_TAG_member, name: "before_each", scope: !8609, file: !114, line: 438, baseType: !8612, size: 32)
!8612 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_rule_cb", file: !114, line: 434, baseType: !8613)
!8613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8614, size: 32)
!8614 = !DISubroutineType(types: !8615)
!8615 = !{null, !8616, !106}
!8616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8617, size: 32)
!8617 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8273)
!8618 = !DIDerivedType(tag: DW_TAG_member, name: "after_each", scope: !8609, file: !114, line: 439, baseType: !8612, size: 32, offset: 32)
!8619 = !DILocation(line: 0, scope: !8599)
!8620 = !DILocation(line: 0, scope: !8607)
!8621 = !DILocation(line: 209, column: 2, scope: !8607)
!8622 = !DILocation(line: 217, column: 1, scope: !8599)
!8623 = !DILocation(line: 211, column: 17, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8625, file: !533, line: 211, column: 7)
!8625 = distinct !DILexicalBlock(scope: !8626, file: !533, line: 210, column: 49)
!8626 = distinct !DILexicalBlock(scope: !8607, file: !533, line: 209, column: 2)
!8627 = !DILocation(line: 211, column: 26, scope: !8624)
!8628 = !DILocation(line: 211, column: 20, scope: !8624)
!8629 = !DILocation(line: 211, column: 7, scope: !8625)
!8630 = !DILocation(line: 213, column: 34, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8624, file: !533, line: 213, column: 14)
!8632 = !DILocation(line: 213, column: 28, scope: !8631)
!8633 = !DILocation(line: 213, column: 14, scope: !8624)
!8634 = !DILocation(line: 0, scope: !8624)
!8635 = !DILocation(line: 210, column: 41, scope: !8626)
!8636 = !DILocation(line: 210, column: 12, scope: !8626)
!8637 = distinct !{!8637, !8621, !8638}
!8638 = !DILocation(line: 216, column: 2, scope: !8607)
!8639 = distinct !DISubprogram(name: "get_test_duration_ms", scope: !690, file: !690, line: 103, type: !3089, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8640)
!8640 = !{!8641}
!8641 = !DILocalVariable(name: "spend_cycle", scope: !8639, file: !690, line: 105, type: !152)
!8642 = !DILocation(line: 105, column: 25, scope: !8639)
!8643 = !DILocation(line: 105, column: 44, scope: !8639)
!8644 = !DILocation(line: 105, column: 42, scope: !8639)
!8645 = !DILocation(line: 0, scope: !8639)
!8646 = !DILocation(line: 107, column: 18, scope: !8639)
!8647 = !DILocation(line: 107, column: 16, scope: !8639)
!8648 = !DILocation(line: 108, column: 1, scope: !8639)
!8649 = distinct !DISubprogram(name: "cleanup_test", scope: !533, file: !533, line: 76, type: !8650, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8652)
!8650 = !DISubroutineType(types: !8651)
!8651 = !{!107, !8272}
!8652 = !{!8653, !8654, !8655}
!8653 = !DILocalVariable(name: "test", arg: 1, scope: !8649, file: !533, line: 76, type: !8272)
!8654 = !DILocalVariable(name: "ret", scope: !8649, file: !533, line: 78, type: !107)
!8655 = !DILocalVariable(name: "mock_status", scope: !8649, file: !533, line: 79, type: !107)
!8656 = !DILocation(line: 0, scope: !8649)
!8657 = !DILocation(line: 89, column: 3, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8659, file: !533, line: 88, column: 41)
!8659 = distinct !DILexicalBlock(scope: !8649, file: !533, line: 88, column: 6)
!8660 = !DILocation(line: 103, column: 2, scope: !8649)
!8661 = distinct !DISubprogram(name: "get_final_test_result", scope: !533, file: !533, line: 236, type: !8662, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8664)
!8662 = !DISubroutineType(types: !8663)
!8663 = !{!107, !8616, !107}
!8664 = !{!8665, !8666, !8667, !8668}
!8665 = !DILocalVariable(name: "test", arg: 1, scope: !8661, file: !533, line: 236, type: !8616)
!8666 = !DILocalVariable(name: "ret", arg: 2, scope: !8661, file: !533, line: 236, type: !107)
!8667 = !DILocalVariable(name: "expected_result", scope: !8661, file: !533, line: 238, type: !554)
!8668 = !DILocalVariable(name: "expectation", scope: !8669, file: !533, line: 240, type: !8670)
!8669 = distinct !DILexicalBlock(scope: !8661, file: !533, line: 240, column: 2)
!8670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8671, size: 32)
!8671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_expected_result_entry", file: !114, line: 47, size: 96, elements: !8672)
!8672 = !{!8673, !8674, !8675}
!8673 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8671, file: !114, line: 48, baseType: !118, size: 32)
!8674 = !DIDerivedType(tag: DW_TAG_member, name: "test_name", scope: !8671, file: !114, line: 49, baseType: !118, size: 32, offset: 32)
!8675 = !DIDerivedType(tag: DW_TAG_member, name: "expected_result", scope: !8671, file: !114, line: 50, baseType: !554, size: 32, offset: 64)
!8676 = !DILocation(line: 0, scope: !8661)
!8677 = !DILocation(line: 0, scope: !8669)
!8678 = !DILocation(line: 240, column: 2, scope: !8669)
!8679 = !DILocation(line: 243, column: 27, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8681, file: !533, line: 243, column: 7)
!8681 = distinct !DILexicalBlock(scope: !8682, file: !533, line: 242, column: 75)
!8682 = distinct !DILexicalBlock(scope: !8669, file: !533, line: 240, column: 2)
!8683 = !DILocation(line: 243, column: 44, scope: !8680)
!8684 = !DILocation(line: 243, column: 7, scope: !8680)
!8685 = !DILocation(line: 243, column: 50, scope: !8680)
!8686 = !DILocation(line: 243, column: 55, scope: !8680)
!8687 = !DILocation(line: 244, column: 27, scope: !8680)
!8688 = !DILocation(line: 244, column: 50, scope: !8680)
!8689 = !DILocation(line: 244, column: 7, scope: !8680)
!8690 = !DILocation(line: 244, column: 67, scope: !8680)
!8691 = !DILocation(line: 243, column: 7, scope: !8681)
!8692 = !DILocation(line: 242, column: 60, scope: !8682)
!8693 = !DILocation(line: 242, column: 19, scope: !8682)
!8694 = distinct !{!8694, !8678, !8695}
!8695 = !DILocation(line: 248, column: 2, scope: !8669)
!8696 = !DILocation(line: 245, column: 35, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8680, file: !533, line: 244, column: 73)
!8698 = !DILocation(line: 250, column: 6, scope: !8661)
!8699 = !DILocation(line: 255, column: 15, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8701, file: !533, line: 250, column: 53)
!8701 = distinct !DILexicalBlock(scope: !8661, file: !533, line: 250, column: 6)
!8702 = !DILocation(line: 255, column: 10, scope: !8700)
!8703 = !DILocation(line: 255, column: 3, scope: !8700)
!8704 = !DILocation(line: 262, column: 15, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8706, file: !533, line: 257, column: 53)
!8706 = distinct !DILexicalBlock(scope: !8661, file: !533, line: 257, column: 6)
!8707 = !DILocation(line: 262, column: 10, scope: !8705)
!8708 = !DILocation(line: 262, column: 3, scope: !8705)
!8709 = !DILocation(line: 266, column: 1, scope: !8661)
!8710 = distinct !DISubprogram(name: "TC_RESULT_TO_STR", scope: !690, file: !690, line: 81, type: !8711, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8713)
!8711 = !DISubroutineType(types: !8712)
!8712 = !{!118, !107}
!8713 = !{!8714}
!8714 = !DILocalVariable(name: "result", arg: 1, scope: !8710, file: !690, line: 81, type: !107)
!8715 = !DILocation(line: 0, scope: !8710)
!8716 = !DILocation(line: 83, column: 2, scope: !8710)
!8717 = !DILocation(line: 0, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8710, file: !690, line: 83, column: 18)
!8719 = !DILocation(line: 93, column: 1, scope: !8710)
!8720 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !406, file: !406, line: 1675, type: !6343, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8721 = !DILocation(line: 1677, column: 9, scope: !8720)
!8722 = !DILocation(line: 1677, column: 2, scope: !8720)
!8723 = distinct !DISubprogram(name: "k_cyc_to_ms_ceil32", scope: !8724, file: !8724, line: 809, type: !7543, scopeLine: 810, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8725)
!8724 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8725 = !{!8726}
!8726 = !DILocalVariable(name: "t", arg: 1, scope: !8723, file: !8724, line: 809, type: !152)
!8727 = !DILocation(line: 0, scope: !8723)
!8728 = !DILocation(line: 812, column: 17, scope: !8723)
!8729 = !DILocalVariable(name: "t", arg: 1, scope: !8730, file: !8724, line: 102, type: !566)
!8730 = distinct !DISubprogram(name: "z_tmcvt", scope: !8724, file: !8724, line: 102, type: !8731, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8733)
!8731 = !DISubroutineType(types: !8732)
!8732 = !{!566, !566, !152, !152, !145, !145, !145, !145}
!8733 = !{!8729, !8734, !8735, !8736, !8737, !8738, !8739, !8740, !8741, !8742, !8743}
!8734 = !DILocalVariable(name: "from_hz", arg: 2, scope: !8730, file: !8724, line: 102, type: !152)
!8735 = !DILocalVariable(name: "to_hz", arg: 3, scope: !8730, file: !8724, line: 103, type: !152)
!8736 = !DILocalVariable(name: "const_hz", arg: 4, scope: !8730, file: !8724, line: 103, type: !145)
!8737 = !DILocalVariable(name: "result32", arg: 5, scope: !8730, file: !8724, line: 104, type: !145)
!8738 = !DILocalVariable(name: "round_up", arg: 6, scope: !8730, file: !8724, line: 104, type: !145)
!8739 = !DILocalVariable(name: "round_off", arg: 7, scope: !8730, file: !8724, line: 105, type: !145)
!8740 = !DILocalVariable(name: "mul_ratio", scope: !8730, file: !8724, line: 107, type: !145)
!8741 = !DILocalVariable(name: "div_ratio", scope: !8730, file: !8724, line: 109, type: !145)
!8742 = !DILocalVariable(name: "off", scope: !8730, file: !8724, line: 116, type: !566)
!8743 = !DILocalVariable(name: "rdivisor", scope: !8744, file: !8724, line: 119, type: !152)
!8744 = distinct !DILexicalBlock(scope: !8745, file: !8724, line: 118, column: 18)
!8745 = distinct !DILexicalBlock(scope: !8730, file: !8724, line: 118, column: 6)
!8746 = !DILocation(line: 0, scope: !8730, inlinedAt: !8747)
!8747 = distinct !DILocation(line: 812, column: 9, scope: !8723)
!8748 = !DILocation(line: 135, column: 5, scope: !8749, inlinedAt: !8747)
!8749 = distinct !DILexicalBlock(scope: !8750, file: !8724, line: 134, column: 17)
!8750 = distinct !DILexicalBlock(scope: !8730, file: !8724, line: 134, column: 6)
!8751 = !DILocation(line: 136, column: 16, scope: !8752, inlinedAt: !8747)
!8752 = distinct !DILexicalBlock(scope: !8749, file: !8724, line: 136, column: 7)
!8753 = !DILocation(line: 812, column: 9, scope: !8723)
!8754 = !DILocation(line: 812, column: 2, scope: !8723)
!8755 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8756, file: !8756, line: 24, type: !6343, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8756 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8757 = !DILocation(line: 26, column: 9, scope: !8755)
!8758 = !DILocation(line: 26, column: 2, scope: !8755)
!8759 = distinct !DISubprogram(name: "test_cb", scope: !533, file: !533, line: 507, type: !562, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8760)
!8760 = !{!8761, !8762, !8763, !8764, !8765}
!8761 = !DILocalVariable(name: "a", arg: 1, scope: !8759, file: !533, line: 507, type: !106)
!8762 = !DILocalVariable(name: "b", arg: 2, scope: !8759, file: !533, line: 507, type: !106)
!8763 = !DILocalVariable(name: "c", arg: 3, scope: !8759, file: !533, line: 507, type: !106)
!8764 = !DILocalVariable(name: "suite", scope: !8759, file: !533, line: 509, type: !8320)
!8765 = !DILocalVariable(name: "test", scope: !8759, file: !533, line: 510, type: !8272)
!8766 = !DILocation(line: 0, scope: !8759)
!8767 = !DILocation(line: 510, column: 33, scope: !8759)
!8768 = !DILocation(line: 512, column: 14, scope: !8759)
!8769 = !DILocation(line: 513, column: 2, scope: !8759)
!8770 = !DILocation(line: 514, column: 13, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8759, file: !533, line: 514, column: 6)
!8772 = !DILocation(line: 514, column: 6, scope: !8771)
!8773 = !DILocation(line: 514, column: 6, scope: !8759)
!8774 = !DILocation(line: 515, column: 3, scope: !8775)
!8775 = distinct !DILexicalBlock(scope: !8771, file: !533, line: 514, column: 21)
!8776 = !DILocation(line: 516, column: 2, scope: !8775)
!8777 = !DILocation(line: 517, column: 2, scope: !8759)
!8778 = !DILocation(line: 518, column: 14, scope: !8759)
!8779 = !DILocation(line: 519, column: 1, scope: !8759)
!8780 = distinct !DISubprogram(name: "run_test_functions", scope: !533, file: !533, line: 219, type: !8781, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8783)
!8781 = !DISubroutineType(types: !8782)
!8782 = !{null, !8320, !8272, !106}
!8783 = !{!8784, !8785, !8786}
!8784 = !DILocalVariable(name: "suite", arg: 1, scope: !8780, file: !533, line: 219, type: !8320)
!8785 = !DILocalVariable(name: "test", arg: 2, scope: !8780, file: !533, line: 219, type: !8272)
!8786 = !DILocalVariable(name: "data", arg: 3, scope: !8780, file: !533, line: 220, type: !106)
!8787 = !DILocation(line: 0, scope: !8780)
!8788 = !DILocation(line: 222, column: 8, scope: !8780)
!8789 = !DILocation(line: 223, column: 8, scope: !8780)
!8790 = !DILocation(line: 223, column: 2, scope: !8780)
!8791 = !DILocation(line: 224, column: 1, scope: !8780)
!8792 = distinct !DISubprogram(name: "z_impl_ztest_run_test_suites", scope: !533, file: !533, line: 929, type: !8793, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8795)
!8793 = !DISubroutineType(types: !8794)
!8794 = !{!107, !13}
!8795 = !{!8796, !8797, !8798}
!8796 = !DILocalVariable(name: "state", arg: 1, scope: !8792, file: !533, line: 929, type: !13)
!8797 = !DILocalVariable(name: "count", scope: !8792, file: !533, line: 931, type: !107)
!8798 = !DILocalVariable(name: "ptr", scope: !8799, file: !533, line: 954, type: !8320)
!8799 = distinct !DILexicalBlock(scope: !8792, file: !533, line: 954, column: 2)
!8800 = !DILocation(line: 0, scope: !8792)
!8801 = !DILocation(line: 933, column: 6, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8792, file: !533, line: 933, column: 6)
!8803 = !DILocation(line: 933, column: 18, scope: !8802)
!8804 = !DILocation(line: 933, column: 6, scope: !8792)
!8805 = !DILocation(line: 0, scope: !8799)
!8806 = !DILocation(line: 954, column: 2, scope: !8799)
!8807 = !DILocation(line: 956, column: 12, scope: !8808)
!8808 = distinct !DILexicalBlock(scope: !8809, file: !533, line: 955, column: 48)
!8809 = distinct !DILexicalBlock(scope: !8799, file: !533, line: 954, column: 2)
!8810 = !DILocation(line: 956, column: 9, scope: !8808)
!8811 = !DILocation(line: 960, column: 7, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8808, file: !533, line: 960, column: 7)
!8813 = !DILocation(line: 960, column: 19, scope: !8812)
!8814 = !DILocation(line: 955, column: 41, scope: !8809)
!8815 = !DILocation(line: 960, column: 50, scope: !8812)
!8816 = distinct !{!8816, !8806, !8817}
!8817 = !DILocation(line: 964, column: 2, scope: !8799)
!8818 = !DILocation(line: 967, column: 2, scope: !8792)
!8819 = !DILocation(line: 969, column: 2, scope: !8792)
!8820 = !DILocation(line: 970, column: 1, scope: !8792)
!8821 = distinct !DISubprogram(name: "__ztest_run_test_suite", scope: !533, file: !533, line: 907, type: !8822, scopeLine: 908, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8824)
!8822 = !DISubroutineType(types: !8823)
!8823 = !{!107, !8320, !13}
!8824 = !{!8825, !8826, !8827, !8828, !8829, !8831}
!8825 = !DILocalVariable(name: "ptr", arg: 1, scope: !8821, file: !533, line: 907, type: !8320)
!8826 = !DILocalVariable(name: "state", arg: 2, scope: !8821, file: !533, line: 907, type: !13)
!8827 = !DILocalVariable(name: "stats", scope: !8821, file: !533, line: 909, type: !8331)
!8828 = !DILocalVariable(name: "count", scope: !8821, file: !533, line: 910, type: !107)
!8829 = !DILocalVariable(name: "i", scope: !8830, file: !533, line: 914, type: !107)
!8830 = distinct !DILexicalBlock(scope: !8821, file: !533, line: 914, column: 2)
!8831 = !DILocalVariable(name: "fail", scope: !8832, file: !533, line: 916, type: !107)
!8832 = distinct !DILexicalBlock(scope: !8833, file: !533, line: 915, column: 47)
!8833 = distinct !DILexicalBlock(scope: !8834, file: !533, line: 915, column: 7)
!8834 = distinct !DILexicalBlock(scope: !8835, file: !533, line: 914, column: 47)
!8835 = distinct !DILexicalBlock(scope: !8830, file: !533, line: 914, column: 2)
!8836 = !DILocation(line: 0, scope: !8821)
!8837 = !DILocation(line: 909, column: 41, scope: !8821)
!8838 = !DILocation(line: 912, column: 2, scope: !8821)
!8839 = !DILocation(line: 0, scope: !8830)
!8840 = !DILocation(line: 915, column: 7, scope: !8833)
!8841 = !DILocation(line: 915, column: 7, scope: !8834)
!8842 = !DILocation(line: 916, column: 15, scope: !8832)
!8843 = !DILocation(line: 0, scope: !8832)
!8844 = !DILocation(line: 919, column: 20, scope: !8832)
!8845 = !DILocation(line: 920, column: 31, scope: !8832)
!8846 = !DILocation(line: 920, column: 25, scope: !8832)
!8847 = !DILocation(line: 921, column: 3, scope: !8832)
!8848 = !DILocation(line: 0, scope: !8833)
!8849 = !DILocation(line: 926, column: 2, scope: !8821)
!8850 = distinct !DISubprogram(name: "__ztest_show_suite_summary", scope: !533, file: !533, line: 886, type: !3089, scopeLine: 887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8851)
!8851 = !{!8852}
!8852 = !DILocalVariable(name: "ptr", scope: !8853, file: !533, line: 894, type: !8320)
!8853 = distinct !DILexicalBlock(scope: !8850, file: !533, line: 894, column: 2)
!8854 = !DILocation(line: 892, column: 2, scope: !8850)
!8855 = !DILocation(line: 0, scope: !8853)
!8856 = !DILocation(line: 894, column: 2, scope: !8853)
!8857 = !DILocation(line: 903, column: 2, scope: !8850)
!8858 = !DILocation(line: 905, column: 1, scope: !8850)
!8859 = !DILocation(line: 898, column: 3, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !8861, file: !533, line: 895, column: 48)
!8861 = distinct !DILexicalBlock(scope: !8853, file: !533, line: 894, column: 2)
!8862 = !DILocation(line: 895, column: 41, scope: !8861)
!8863 = !DILocation(line: 895, column: 11, scope: !8861)
!8864 = distinct !{!8864, !8856, !8865}
!8865 = !DILocation(line: 902, column: 2, scope: !8853)
!8866 = distinct !DISubprogram(name: "__ztest_show_suite_summary_verbose", scope: !533, file: !533, line: 852, type: !8867, scopeLine: 853, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8869)
!8867 = !DISubroutineType(types: !8868)
!8868 = !{null, !8320}
!8869 = !{!8870, !8871, !8872, !8873}
!8870 = !DILocalVariable(name: "suite", arg: 1, scope: !8866, file: !533, line: 852, type: !8320)
!8871 = !DILocalVariable(name: "test", scope: !8866, file: !533, line: 854, type: !8272)
!8872 = !DILocalVariable(name: "tc_result", scope: !8866, file: !533, line: 855, type: !107)
!8873 = !DILocalVariable(name: "flush_frequency", scope: !8866, file: !533, line: 856, type: !107)
!8874 = !DILocation(line: 0, scope: !8866)
!8875 = !DILocation(line: 858, column: 2, scope: !8866)
!8876 = !DILocation(line: 860, column: 47, scope: !8866)
!8877 = !DILocation(line: 860, column: 18, scope: !8866)
!8878 = !DILocation(line: 860, column: 60, scope: !8866)
!8879 = !DILocation(line: 860, column: 2, scope: !8866)
!8880 = !DILocation(line: 861, column: 13, scope: !8881)
!8881 = distinct !DILexicalBlock(scope: !8882, file: !533, line: 861, column: 7)
!8882 = distinct !DILexicalBlock(scope: !8866, file: !533, line: 860, column: 70)
!8883 = !DILocation(line: 861, column: 20, scope: !8881)
!8884 = !DILocation(line: 861, column: 47, scope: !8881)
!8885 = !DILocation(line: 861, column: 31, scope: !8881)
!8886 = !DILocation(line: 861, column: 7, scope: !8882)
!8887 = !DILocation(line: 863, column: 27, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8881, file: !533, line: 863, column: 14)
!8889 = !DILocation(line: 863, column: 38, scope: !8888)
!8890 = !DILocation(line: 0, scope: !8881)
!8891 = !DILocation(line: 869, column: 3, scope: !8882)
!8892 = distinct !{!8892, !8879, !8893}
!8893 = !DILocation(line: 880, column: 2, scope: !8866)
!8894 = !DILocation(line: 881, column: 2, scope: !8866)
!8895 = !DILocation(line: 883, column: 1, scope: !8866)
!8896 = distinct !DISubprogram(name: "__ztest_show_suite_summary_oneline", scope: !533, file: !533, line: 801, type: !8867, scopeLine: 802, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8897)
!8897 = !{!8898, !8899, !8900, !8901, !8902, !8903, !8904, !8905, !8906, !8907, !8908, !8909, !8910, !8911}
!8898 = !DILocalVariable(name: "suite", arg: 1, scope: !8896, file: !533, line: 801, type: !8320)
!8899 = !DILocalVariable(name: "distinct_pass", scope: !8896, file: !533, line: 803, type: !107)
!8900 = !DILocalVariable(name: "distinct_fail", scope: !8896, file: !533, line: 803, type: !107)
!8901 = !DILocalVariable(name: "distinct_skip", scope: !8896, file: !533, line: 803, type: !107)
!8902 = !DILocalVariable(name: "distinct_total", scope: !8896, file: !533, line: 803, type: !107)
!8903 = !DILocalVariable(name: "effective_total", scope: !8896, file: !533, line: 804, type: !107)
!8904 = !DILocalVariable(name: "expanded_pass", scope: !8896, file: !533, line: 805, type: !107)
!8905 = !DILocalVariable(name: "expanded_passrate", scope: !8896, file: !533, line: 805, type: !107)
!8906 = !DILocalVariable(name: "passrate_major", scope: !8896, file: !533, line: 806, type: !107)
!8907 = !DILocalVariable(name: "passrate_minor", scope: !8896, file: !533, line: 806, type: !107)
!8908 = !DILocalVariable(name: "passrate_tail", scope: !8896, file: !533, line: 806, type: !107)
!8909 = !DILocalVariable(name: "suite_result", scope: !8896, file: !533, line: 807, type: !107)
!8910 = !DILocalVariable(name: "test", scope: !8896, file: !533, line: 809, type: !8272)
!8911 = !DILocalVariable(name: "suite_duration_worst_ms", scope: !8896, file: !533, line: 810, type: !32)
!8912 = !DILocation(line: 0, scope: !8896)
!8913 = !DILocation(line: 813, column: 47, scope: !8896)
!8914 = !DILocation(line: 813, column: 18, scope: !8896)
!8915 = !DILocation(line: 813, column: 60, scope: !8896)
!8916 = !DILocation(line: 813, column: 2, scope: !8896)
!8917 = !DILocation(line: 814, column: 17, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8896, file: !533, line: 813, column: 70)
!8919 = !DILocation(line: 815, column: 36, scope: !8918)
!8920 = !DILocation(line: 815, column: 43, scope: !8918)
!8921 = !DILocation(line: 815, column: 27, scope: !8918)
!8922 = !DILocation(line: 816, column: 20, scope: !8923)
!8923 = distinct !DILexicalBlock(scope: !8918, file: !533, line: 816, column: 7)
!8924 = !DILocation(line: 816, column: 47, scope: !8923)
!8925 = !DILocation(line: 816, column: 31, scope: !8923)
!8926 = !DILocation(line: 816, column: 7, scope: !8918)
!8927 = !DILocation(line: 817, column: 17, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8923, file: !533, line: 816, column: 58)
!8929 = !DILocation(line: 818, column: 3, scope: !8928)
!8930 = !DILocation(line: 818, column: 27, scope: !8931)
!8931 = distinct !DILexicalBlock(scope: !8923, file: !533, line: 818, column: 14)
!8932 = !DILocation(line: 818, column: 38, scope: !8931)
!8933 = !DILocation(line: 818, column: 14, scope: !8923)
!8934 = !DILocation(line: 819, column: 17, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8931, file: !533, line: 818, column: 65)
!8936 = !DILocation(line: 820, column: 3, scope: !8935)
!8937 = !DILocation(line: 821, column: 17, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8931, file: !533, line: 820, column: 10)
!8939 = distinct !{!8939, !8916, !8940}
!8940 = !DILocation(line: 823, column: 2, scope: !8896)
!8941 = !DILocation(line: 825, column: 20, scope: !8942)
!8942 = distinct !DILexicalBlock(scope: !8896, file: !533, line: 825, column: 6)
!8943 = !DILocation(line: 825, column: 6, scope: !8896)
!8944 = !DILocation(line: 829, column: 33, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8942, file: !533, line: 828, column: 9)
!8946 = !DILocation(line: 829, column: 18, scope: !8945)
!8947 = !DILocation(line: 830, column: 36, scope: !8945)
!8948 = !DILocation(line: 831, column: 33, scope: !8945)
!8949 = !DILocation(line: 832, column: 37, scope: !8945)
!8950 = !DILocation(line: 833, column: 38, scope: !8945)
!8951 = !DILocation(line: 834, column: 56, scope: !8945)
!8952 = !DILocation(line: 834, column: 39, scope: !8945)
!8953 = !DILocation(line: 834, column: 64, scope: !8945)
!8954 = !DILocation(line: 835, column: 78, scope: !8945)
!8955 = !DILocation(line: 835, column: 61, scope: !8945)
!8956 = !DILocation(line: 836, column: 21, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !8945, file: !533, line: 836, column: 7)
!8958 = !DILocation(line: 836, column: 7, scope: !8945)
!8959 = !DILocation(line: 0, scope: !8942)
!8960 = !DILocation(line: 841, column: 2, scope: !8896)
!8961 = !DILocation(line: 849, column: 1, scope: !8896)
!8962 = distinct !DISubprogram(name: "__ztest_init_unit_test_result_for_suite", scope: !533, file: !533, line: 773, type: !8867, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8963)
!8963 = !{!8964, !8965}
!8964 = !DILocalVariable(name: "suite", arg: 1, scope: !8962, file: !533, line: 773, type: !8320)
!8965 = !DILocalVariable(name: "test", scope: !8962, file: !533, line: 775, type: !8272)
!8966 = !DILocation(line: 0, scope: !8962)
!8967 = !DILocation(line: 777, column: 47, scope: !8962)
!8968 = !DILocation(line: 777, column: 18, scope: !8962)
!8969 = !DILocation(line: 777, column: 60, scope: !8962)
!8970 = !DILocation(line: 777, column: 2, scope: !8962)
!8971 = !DILocation(line: 778, column: 9, scope: !8972)
!8972 = distinct !DILexicalBlock(scope: !8962, file: !533, line: 777, column: 70)
!8973 = !DILocation(line: 778, column: 16, scope: !8972)
!8974 = !DILocation(line: 778, column: 26, scope: !8972)
!8975 = !DILocation(line: 779, column: 9, scope: !8972)
!8976 = !DILocation(line: 779, column: 16, scope: !8972)
!8977 = !DILocation(line: 779, column: 27, scope: !8972)
!8978 = !DILocation(line: 780, column: 9, scope: !8972)
!8979 = !DILocation(line: 780, column: 16, scope: !8972)
!8980 = !DILocation(line: 780, column: 27, scope: !8972)
!8981 = !DILocation(line: 781, column: 9, scope: !8972)
!8982 = !DILocation(line: 781, column: 16, scope: !8972)
!8983 = !DILocation(line: 781, column: 27, scope: !8972)
!8984 = !DILocation(line: 782, column: 9, scope: !8972)
!8985 = !DILocation(line: 782, column: 16, scope: !8972)
!8986 = !DILocation(line: 782, column: 34, scope: !8972)
!8987 = distinct !{!8987, !8970, !8988}
!8988 = !DILocation(line: 783, column: 2, scope: !8962)
!8989 = !DILocation(line: 784, column: 1, scope: !8962)
!8990 = distinct !DISubprogram(name: "ztest_verify_all_test_suites_ran", scope: !533, file: !533, line: 972, type: !3089, scopeLine: 973, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8991)
!8991 = !{!8992, !8993, !8994}
!8992 = !DILocalVariable(name: "all_tests_run", scope: !8990, file: !533, line: 974, type: !145)
!8993 = !DILocalVariable(name: "suite", scope: !8990, file: !533, line: 975, type: !8320)
!8994 = !DILocalVariable(name: "test", scope: !8990, file: !533, line: 976, type: !8272)
!8995 = !DILocation(line: 0, scope: !8990)
!8996 = !DILocation(line: 979, column: 3, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8998, file: !533, line: 979, column: 3)
!8998 = distinct !DILexicalBlock(scope: !8999, file: !533, line: 978, column: 47)
!8999 = distinct !DILexicalBlock(scope: !8990, file: !533, line: 978, column: 6)
!9000 = !DILocation(line: 987, column: 3, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !8998, file: !533, line: 987, column: 3)
!9002 = !DILocation(line: 981, column: 15, scope: !9003)
!9003 = distinct !DILexicalBlock(scope: !9004, file: !533, line: 981, column: 8)
!9004 = distinct !DILexicalBlock(scope: !9005, file: !533, line: 980, column: 17)
!9005 = distinct !DILexicalBlock(scope: !8997, file: !533, line: 979, column: 3)
!9006 = !DILocation(line: 981, column: 22, scope: !9003)
!9007 = !DILocation(line: 981, column: 32, scope: !9003)
!9008 = !DILocation(line: 981, column: 8, scope: !9004)
!9009 = !DILocation(line: 982, column: 59, scope: !9010)
!9010 = distinct !DILexicalBlock(scope: !9003, file: !533, line: 981, column: 37)
!9011 = !DILocation(line: 982, column: 5, scope: !9010)
!9012 = !DILocation(line: 984, column: 4, scope: !9010)
!9013 = !DILocation(line: 980, column: 8, scope: !9005)
!9014 = !DILocation(line: 979, column: 52, scope: !9005)
!9015 = distinct !{!9015, !8996, !9016}
!9016 = !DILocation(line: 985, column: 3, scope: !8997)
!9017 = !DILocation(line: 988, column: 40, scope: !9018)
!9018 = distinct !DILexicalBlock(scope: !9019, file: !533, line: 987, column: 86)
!9019 = distinct !DILexicalBlock(scope: !9001, file: !533, line: 987, column: 3)
!9020 = !DILocation(line: 988, column: 12, scope: !9018)
!9021 = !DILocation(line: 989, column: 14, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !9018, file: !533, line: 989, column: 8)
!9023 = !DILocation(line: 989, column: 8, scope: !9018)
!9024 = !DILocation(line: 992, column: 17, scope: !9025)
!9025 = distinct !DILexicalBlock(scope: !9022, file: !533, line: 989, column: 23)
!9026 = !DILocation(line: 992, column: 29, scope: !9025)
!9027 = !DILocation(line: 990, column: 5, scope: !9025)
!9028 = !DILocation(line: 994, column: 4, scope: !9025)
!9029 = !DILocation(line: 987, column: 78, scope: !9019)
!9030 = !DILocation(line: 987, column: 49, scope: !9019)
!9031 = distinct !{!9031, !9000, !9032}
!9032 = !DILocation(line: 995, column: 3, scope: !9001)
!9033 = !DILocation(line: 997, column: 7, scope: !8998)
!9034 = !DILocation(line: 998, column: 16, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !9036, file: !533, line: 997, column: 23)
!9036 = distinct !DILexicalBlock(scope: !8998, file: !533, line: 997, column: 7)
!9037 = !DILocation(line: 999, column: 3, scope: !9035)
!9038 = !DILocation(line: 1002, column: 2, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !8990, file: !533, line: 1002, column: 2)
!9040 = !DILocation(line: 1003, column: 13, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9042, file: !533, line: 1003, column: 7)
!9042 = distinct !DILexicalBlock(scope: !9043, file: !533, line: 1002, column: 85)
!9043 = distinct !DILexicalBlock(scope: !9039, file: !533, line: 1002, column: 2)
!9044 = !DILocation(line: 1003, column: 20, scope: !9041)
!9045 = !DILocation(line: 1003, column: 46, scope: !9041)
!9046 = !DILocation(line: 1003, column: 31, scope: !9041)
!9047 = !DILocation(line: 1003, column: 72, scope: !9041)
!9048 = !DILocation(line: 1003, column: 57, scope: !9041)
!9049 = !DILocation(line: 1004, column: 20, scope: !9041)
!9050 = !DILocation(line: 1003, column: 83, scope: !9041)
!9051 = !DILocation(line: 1003, column: 7, scope: !9042)
!9052 = !DILocation(line: 1005, column: 41, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9041, file: !533, line: 1004, column: 31)
!9054 = !DILocation(line: 1005, column: 64, scope: !9053)
!9055 = !DILocation(line: 1005, column: 4, scope: !9053)
!9056 = !DILocation(line: 1006, column: 16, scope: !9053)
!9057 = !DILocation(line: 1007, column: 3, scope: !9053)
!9058 = !DILocation(line: 1002, column: 77, scope: !9043)
!9059 = !DILocation(line: 1002, column: 48, scope: !9043)
!9060 = distinct !{!9060, !9038, !9061}
!9061 = !DILocation(line: 1008, column: 2, scope: !9039)
!9062 = !DILocation(line: 1009, column: 1, scope: !8990)
!9063 = distinct !DISubprogram(name: "ztest_run_all", scope: !533, file: !533, line: 1011, type: !17, scopeLine: 1011, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !9064)
!9064 = !{!9065}
!9065 = !DILocalVariable(name: "state", arg: 1, scope: !9063, file: !533, line: 1011, type: !13)
!9066 = !DILocation(line: 0, scope: !9063)
!9067 = !DILocation(line: 1011, column: 51, scope: !9063)
!9068 = !DILocation(line: 1011, column: 41, scope: !9063)
!9069 = !DILocation(line: 1011, column: 67, scope: !9063)
!9070 = distinct !DISubprogram(name: "test_main", scope: !533, file: !533, line: 1013, type: !3089, scopeLine: 1014, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!9071 = !DILocation(line: 1015, column: 2, scope: !9070)
!9072 = !DILocation(line: 1017, column: 2, scope: !9070)
!9073 = !DILocation(line: 1018, column: 1, scope: !9070)
!9074 = distinct !DISubprogram(name: "main", scope: !533, file: !533, line: 1030, type: !3089, scopeLine: 1031, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!9075 = !DILocation(line: 1046, column: 2, scope: !9074)
!9076 = !DILocation(line: 1047, column: 2, scope: !9074)
!9077 = !DILocation(line: 1071, column: 1, scope: !9074)
!9078 = distinct !DISubprogram(name: "z_ztest_run_all", scope: !699, file: !699, line: 30, type: !17, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9079)
!9079 = !{!9080}
!9080 = !DILocalVariable(name: "state", arg: 1, scope: !9078, file: !699, line: 30, type: !13)
!9081 = !DILocation(line: 0, scope: !9078)
!9082 = !DILocation(line: 32, column: 2, scope: !9078)
!9083 = !DILocation(line: 33, column: 1, scope: !9078)
!9084 = distinct !DISubprogram(name: "z_ztest_should_suite_run", scope: !699, file: !699, line: 45, type: !706, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9085)
!9085 = !{!9086, !9087, !9088}
!9086 = !DILocalVariable(name: "state", arg: 1, scope: !9084, file: !699, line: 45, type: !13)
!9087 = !DILocalVariable(name: "suite", arg: 2, scope: !9084, file: !699, line: 45, type: !708)
!9088 = !DILocalVariable(name: "run_suite", scope: !9084, file: !699, line: 47, type: !145)
!9089 = !DILocation(line: 0, scope: !9084)
!9090 = !DILocation(line: 49, column: 13, scope: !9091)
!9091 = distinct !DILexicalBlock(scope: !9084, file: !699, line: 49, column: 6)
!9092 = !DILocation(line: 49, column: 23, scope: !9091)
!9093 = !DILocation(line: 49, column: 6, scope: !9084)
!9094 = !DILocation(line: 50, column: 15, scope: !9095)
!9095 = distinct !DILexicalBlock(scope: !9091, file: !699, line: 49, column: 32)
!9096 = !DILocation(line: 51, column: 2, scope: !9095)
!9097 = !DILocation(line: 53, column: 2, scope: !9084)
!9098 = distinct !DISubprogram(name: "z_ztest_should_test_run", scope: !699, file: !699, line: 65, type: !727, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9099)
!9099 = !{!9100, !9101}
!9100 = !DILocalVariable(name: "suite", arg: 1, scope: !9098, file: !699, line: 65, type: !118)
!9101 = !DILocalVariable(name: "test", arg: 2, scope: !9098, file: !699, line: 65, type: !118)
!9102 = !DILocation(line: 0, scope: !9098)
!9103 = !DILocation(line: 67, column: 2, scope: !9098)
!9104 = distinct !DISubprogram(name: "ztest_run_test_suites", scope: !9105, file: !9105, line: 24, type: !8793, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9106)
!9105 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!9106 = !{!9107}
!9107 = !DILocalVariable(name: "state", arg: 1, scope: !9104, file: !9105, line: 24, type: !13)
!9108 = !DILocation(line: 0, scope: !9104)
!9109 = !DILocation(line: 32, column: 2, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9104, file: !9105, line: 32, column: 2)
!9111 = !{i64 2154969603}
!9112 = !DILocation(line: 33, column: 9, scope: !9104)
!9113 = !DILocation(line: 33, column: 2, scope: !9104)
!9114 = distinct !DISubprogram(name: "ztest_relative_filename", scope: !699, file: !699, line: 20, type: !9115, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9117)
!9115 = !DISubroutineType(types: !9116)
!9116 = !{!118, !118}
!9117 = !{!9118}
!9118 = !DILocalVariable(name: "file", arg: 1, scope: !9114, file: !699, line: 20, type: !118)
!9119 = !DILocation(line: 0, scope: !9114)
!9120 = !DILocation(line: 22, column: 2, scope: !9114)
!9121 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !836, file: !836, line: 368, type: !889, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9122)
!9122 = !{!9123}
!9123 = !DILocalVariable(name: "dev", arg: 1, scope: !9121, file: !836, line: 368, type: !865)
!9124 = !DILocation(line: 0, scope: !9121)
!9125 = !DILocation(line: 370, column: 2, scope: !9121)
!9126 = !DILocation(line: 371, column: 1, scope: !9121)
!9127 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !836, file: !836, line: 243, type: !9128, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9130)
!9128 = !DISubroutineType(types: !9129)
!9129 = !{null, !107, !107, !865}
!9130 = !{!9131, !9132, !9133, !9134, !9136}
!9131 = !DILocalVariable(name: "min", arg: 1, scope: !9127, file: !836, line: 243, type: !107)
!9132 = !DILocalVariable(name: "max", arg: 2, scope: !9127, file: !836, line: 243, type: !107)
!9133 = !DILocalVariable(name: "dev", arg: 3, scope: !9127, file: !836, line: 243, type: !865)
!9134 = !DILocalVariable(name: "data", scope: !9127, file: !836, line: 245, type: !9135)
!9135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 32)
!9136 = !DILocalVariable(name: "line", scope: !9127, file: !836, line: 246, type: !107)
!9137 = !DILocation(line: 0, scope: !9127)
!9138 = !DILocation(line: 245, column: 38, scope: !9127)
!9139 = !DILocation(line: 249, column: 24, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !9141, file: !836, line: 249, column: 2)
!9141 = distinct !DILexicalBlock(scope: !9127, file: !836, line: 249, column: 2)
!9142 = !DILocation(line: 249, column: 2, scope: !9141)
!9143 = !DILocation(line: 251, column: 7, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !9145, file: !836, line: 251, column: 7)
!9145 = distinct !DILexicalBlock(scope: !9140, file: !836, line: 249, column: 39)
!9146 = !DILocation(line: 251, column: 7, scope: !9145)
!9147 = !DILocation(line: 253, column: 4, scope: !9148)
!9148 = distinct !DILexicalBlock(scope: !9144, file: !836, line: 251, column: 36)
!9149 = !DILocation(line: 256, column: 24, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9148, file: !836, line: 256, column: 8)
!9151 = !DILocation(line: 256, column: 9, scope: !9150)
!9152 = !DILocation(line: 256, column: 8, scope: !9148)
!9153 = !DILocation(line: 260, column: 43, scope: !9148)
!9154 = !DILocation(line: 260, column: 4, scope: !9148)
!9155 = !DILocation(line: 261, column: 3, scope: !9148)
!9156 = !DILocation(line: 249, column: 35, scope: !9140)
!9157 = distinct !{!9157, !9142, !9158}
!9158 = !DILocation(line: 262, column: 2, scope: !9141)
!9159 = !DILocation(line: 263, column: 1, scope: !9127)
!9160 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !836, file: !836, line: 158, type: !214, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9161)
!9161 = !{!9162}
!9162 = !DILocalVariable(name: "line", arg: 1, scope: !9160, file: !836, line: 158, type: !107)
!9163 = !DILocation(line: 0, scope: !9160)
!9164 = !DILocation(line: 170, column: 38, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9166, file: !836, line: 160, column: 17)
!9166 = distinct !DILexicalBlock(scope: !9160, file: !836, line: 160, column: 6)
!9167 = !DILocation(line: 170, column: 10, scope: !9165)
!9168 = !DILocation(line: 176, column: 1, scope: !9160)
!9169 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !836, file: !836, line: 183, type: !9170, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9172)
!9170 = !DISubroutineType(types: !9171)
!9171 = !{null, !107}
!9172 = !{!9173}
!9173 = !DILocalVariable(name: "line", arg: 1, scope: !9169, file: !836, line: 183, type: !107)
!9174 = !DILocation(line: 0, scope: !9169)
!9175 = !DILocation(line: 195, column: 28, scope: !9176)
!9176 = distinct !DILexicalBlock(scope: !9177, file: !836, line: 185, column: 17)
!9177 = distinct !DILexicalBlock(scope: !9169, file: !836, line: 185, column: 6)
!9178 = !DILocation(line: 195, column: 3, scope: !9176)
!9179 = !DILocation(line: 200, column: 1, scope: !9169)
!9180 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9181, file: !9181, line: 910, type: !6353, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9182)
!9181 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9182 = !{!9183}
!9183 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9180, file: !9181, line: 910, type: !152)
!9184 = !DILocation(line: 0, scope: !9180)
!9185 = !DILocation(line: 912, column: 3, scope: !9180)
!9186 = !DILocation(line: 913, column: 1, scope: !9180)
!9187 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9181, file: !9181, line: 834, type: !7543, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9188)
!9188 = !{!9189}
!9189 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9187, file: !9181, line: 834, type: !152)
!9190 = !DILocation(line: 0, scope: !9187)
!9191 = !DILocation(line: 836, column: 11, scope: !9187)
!9192 = !DILocation(line: 836, column: 40, scope: !9187)
!9193 = !DILocation(line: 836, column: 3, scope: !9187)
!9194 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !836, file: !836, line: 304, type: !889, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9195)
!9195 = !{!9196}
!9196 = !DILocalVariable(name: "dev", arg: 1, scope: !9194, file: !836, line: 304, type: !865)
!9197 = !DILocation(line: 0, scope: !9194)
!9198 = !DILocation(line: 306, column: 2, scope: !9194)
!9199 = !DILocation(line: 307, column: 1, scope: !9194)
!9200 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !836, file: !836, line: 299, type: !889, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9201)
!9201 = !{!9202}
!9202 = !DILocalVariable(name: "dev", arg: 1, scope: !9200, file: !836, line: 299, type: !865)
!9203 = !DILocation(line: 0, scope: !9200)
!9204 = !DILocation(line: 301, column: 2, scope: !9200)
!9205 = !DILocation(line: 302, column: 1, scope: !9200)
!9206 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !836, file: !836, line: 294, type: !889, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9207)
!9207 = !{!9208}
!9208 = !DILocalVariable(name: "dev", arg: 1, scope: !9206, file: !836, line: 294, type: !865)
!9209 = !DILocation(line: 0, scope: !9206)
!9210 = !DILocation(line: 296, column: 2, scope: !9206)
!9211 = !DILocation(line: 297, column: 1, scope: !9206)
!9212 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !836, file: !836, line: 397, type: !889, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9213)
!9213 = !{!9214}
!9214 = !DILocalVariable(name: "dev", arg: 1, scope: !9212, file: !836, line: 397, type: !865)
!9215 = !DILocation(line: 0, scope: !9212)
!9216 = !DILocation(line: 399, column: 2, scope: !9212)
!9217 = !DILocation(line: 400, column: 1, scope: !9212)
!9218 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !836, file: !836, line: 392, type: !889, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9219)
!9219 = !{!9220}
!9220 = !DILocalVariable(name: "dev", arg: 1, scope: !9218, file: !836, line: 392, type: !865)
!9221 = !DILocation(line: 0, scope: !9218)
!9222 = !DILocation(line: 394, column: 2, scope: !9218)
!9223 = !DILocation(line: 395, column: 1, scope: !9218)
!9224 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !836, file: !836, line: 289, type: !889, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9225)
!9225 = !{!9226}
!9226 = !DILocalVariable(name: "dev", arg: 1, scope: !9224, file: !836, line: 289, type: !865)
!9227 = !DILocation(line: 0, scope: !9224)
!9228 = !DILocation(line: 291, column: 2, scope: !9224)
!9229 = !DILocation(line: 292, column: 1, scope: !9224)
!9230 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !836, file: !836, line: 387, type: !889, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9231)
!9231 = !{!9232}
!9232 = !DILocalVariable(name: "dev", arg: 1, scope: !9230, file: !836, line: 387, type: !865)
!9233 = !DILocation(line: 0, scope: !9230)
!9234 = !DILocation(line: 389, column: 2, scope: !9230)
!9235 = !DILocation(line: 390, column: 1, scope: !9230)
!9236 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !836, file: !836, line: 382, type: !889, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9237)
!9237 = !{!9238}
!9238 = !DILocalVariable(name: "dev", arg: 1, scope: !9236, file: !836, line: 382, type: !865)
!9239 = !DILocation(line: 0, scope: !9236)
!9240 = !DILocation(line: 384, column: 2, scope: !9236)
!9241 = !DILocation(line: 385, column: 1, scope: !9236)
!9242 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !836, file: !836, line: 373, type: !889, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9243)
!9243 = !{!9244}
!9244 = !DILocalVariable(name: "dev", arg: 1, scope: !9242, file: !836, line: 373, type: !865)
!9245 = !DILocation(line: 0, scope: !9242)
!9246 = !DILocation(line: 375, column: 2, scope: !9242)
!9247 = !DILocation(line: 376, column: 1, scope: !9242)
!9248 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !836, file: !836, line: 284, type: !889, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9249)
!9249 = !{!9250}
!9250 = !DILocalVariable(name: "dev", arg: 1, scope: !9248, file: !836, line: 284, type: !865)
!9251 = !DILocation(line: 0, scope: !9248)
!9252 = !DILocation(line: 286, column: 2, scope: !9248)
!9253 = !DILocation(line: 287, column: 1, scope: !9248)
!9254 = distinct !DISubprogram(name: "stm32_exti_init", scope: !836, file: !836, line: 416, type: !863, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9255)
!9255 = !{!9256}
!9256 = !DILocalVariable(name: "dev", arg: 1, scope: !9254, file: !836, line: 416, type: !865)
!9257 = !DILocation(line: 0, scope: !9254)
!9258 = !DILocation(line: 418, column: 2, scope: !9254)
!9259 = !DILocation(line: 420, column: 2, scope: !9254)
!9260 = !DILocation(line: 0, scope: !888)
!9261 = !DILocation(line: 493, column: 2, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !888, file: !836, line: 493, column: 2)
!9263 = !DILocation(line: 497, column: 2, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !888, file: !836, line: 497, column: 2)
!9265 = !DILocation(line: 507, column: 2, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !888, file: !836, line: 507, column: 2)
!9267 = !DILocation(line: 512, column: 2, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !888, file: !836, line: 512, column: 2)
!9269 = !DILocation(line: 516, column: 2, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !888, file: !836, line: 516, column: 2)
!9271 = !DILocation(line: 523, column: 2, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !888, file: !836, line: 523, column: 2)
!9273 = !DILocation(line: 527, column: 2, scope: !9274)
!9274 = distinct !DILexicalBlock(scope: !888, file: !836, line: 527, column: 2)
!9275 = !DILocation(line: 581, column: 2, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !888, file: !836, line: 581, column: 2)
!9277 = !DILocation(line: 586, column: 2, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !888, file: !836, line: 586, column: 2)
!9279 = !DILocation(line: 591, column: 2, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !888, file: !836, line: 591, column: 2)
!9281 = !DILocation(line: 595, column: 2, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !888, file: !836, line: 595, column: 2)
!9283 = !DILocation(line: 607, column: 1, scope: !888)
!9284 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !836, file: !836, line: 112, type: !9170, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9285)
!9285 = !{!9286, !9287}
!9286 = !DILocalVariable(name: "line", arg: 1, scope: !9284, file: !836, line: 112, type: !107)
!9287 = !DILocalVariable(name: "irqnum", scope: !9284, file: !836, line: 114, type: !107)
!9288 = !DILocation(line: 0, scope: !9284)
!9289 = !DILocation(line: 122, column: 13, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9284, file: !836, line: 122, column: 6)
!9291 = !DILocation(line: 122, column: 6, scope: !9284)
!9292 = !DILocation(line: 123, column: 3, scope: !9293)
!9293 = distinct !DILexicalBlock(scope: !9294, file: !836, line: 123, column: 3)
!9294 = distinct !DILexicalBlock(scope: !9295, file: !836, line: 123, column: 3)
!9295 = distinct !DILexicalBlock(scope: !9296, file: !836, line: 123, column: 3)
!9296 = distinct !DILexicalBlock(scope: !9290, file: !836, line: 122, column: 22)
!9297 = !DILocation(line: 121, column: 11, scope: !9284)
!9298 = !DILocation(line: 130, column: 26, scope: !9284)
!9299 = !DILocation(line: 130, column: 2, scope: !9284)
!9300 = !DILocation(line: 134, column: 2, scope: !9284)
!9301 = !DILocation(line: 135, column: 1, scope: !9284)
!9302 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9181, file: !9181, line: 268, type: !6353, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9303)
!9303 = !{!9304}
!9304 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9302, file: !9181, line: 268, type: !152)
!9305 = !DILocation(line: 0, scope: !9302)
!9306 = !DILocation(line: 270, column: 3, scope: !9302)
!9307 = !DILocation(line: 271, column: 1, scope: !9302)
!9308 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !836, file: !836, line: 137, type: !9170, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9309)
!9309 = !{!9310}
!9310 = !DILocalVariable(name: "line", arg: 1, scope: !9308, file: !836, line: 137, type: !107)
!9311 = !DILocation(line: 0, scope: !9308)
!9312 = !DILocation(line: 141, column: 11, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9308, file: !836, line: 141, column: 6)
!9314 = !DILocation(line: 141, column: 6, scope: !9308)
!9315 = !DILocation(line: 145, column: 28, scope: !9316)
!9316 = distinct !DILexicalBlock(scope: !9313, file: !836, line: 141, column: 17)
!9317 = !DILocation(line: 145, column: 3, scope: !9316)
!9318 = !DILocation(line: 147, column: 2, scope: !9316)
!9319 = !DILocation(line: 151, column: 1, scope: !9308)
!9320 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9181, file: !9181, line: 309, type: !6353, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9321)
!9321 = !{!9322}
!9322 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9320, file: !9181, line: 309, type: !152)
!9323 = !DILocation(line: 0, scope: !9320)
!9324 = !DILocation(line: 311, column: 3, scope: !9320)
!9325 = !DILocation(line: 312, column: 1, scope: !9320)
!9326 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !836, file: !836, line: 202, type: !9327, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9329)
!9327 = !DISubroutineType(types: !9328)
!9328 = !{null, !107, !107}
!9329 = !{!9330, !9331}
!9330 = !DILocalVariable(name: "line", arg: 1, scope: !9326, file: !836, line: 202, type: !107)
!9331 = !DILocalVariable(name: "trigger", arg: 2, scope: !9326, file: !836, line: 202, type: !107)
!9332 = !DILocation(line: 0, scope: !9326)
!9333 = !DILocation(line: 211, column: 2, scope: !9326)
!9334 = !DILocation(line: 213, column: 36, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9326, file: !836, line: 211, column: 19)
!9336 = !DILocation(line: 213, column: 3, scope: !9335)
!9337 = !DILocation(line: 214, column: 3, scope: !9335)
!9338 = !DILocation(line: 215, column: 3, scope: !9335)
!9339 = !DILocation(line: 217, column: 35, scope: !9335)
!9340 = !DILocation(line: 217, column: 3, scope: !9335)
!9341 = !DILocation(line: 218, column: 3, scope: !9335)
!9342 = !DILocation(line: 219, column: 3, scope: !9335)
!9343 = !DILocation(line: 221, column: 36, scope: !9335)
!9344 = !DILocation(line: 221, column: 3, scope: !9335)
!9345 = !DILocation(line: 222, column: 3, scope: !9335)
!9346 = !DILocation(line: 223, column: 3, scope: !9335)
!9347 = !DILocation(line: 225, column: 35, scope: !9335)
!9348 = !DILocation(line: 225, column: 3, scope: !9335)
!9349 = !DILocation(line: 226, column: 3, scope: !9335)
!9350 = !DILocation(line: 227, column: 3, scope: !9335)
!9351 = !DILocation(line: 232, column: 1, scope: !9326)
!9352 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9181, file: !9181, line: 573, type: !6353, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9353)
!9353 = !{!9354}
!9354 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9352, file: !9181, line: 573, type: !152)
!9355 = !DILocation(line: 0, scope: !9352)
!9356 = !DILocation(line: 575, column: 3, scope: !9352)
!9357 = !DILocation(line: 577, column: 1, scope: !9352)
!9358 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9181, file: !9181, line: 703, type: !6353, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9359)
!9359 = !{!9360}
!9360 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9358, file: !9181, line: 703, type: !152)
!9361 = !DILocation(line: 0, scope: !9358)
!9362 = !DILocation(line: 705, column: 3, scope: !9358)
!9363 = !DILocation(line: 706, column: 1, scope: !9358)
!9364 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9181, file: !9181, line: 529, type: !6353, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9365)
!9365 = !{!9366}
!9366 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9364, file: !9181, line: 529, type: !152)
!9367 = !DILocation(line: 0, scope: !9364)
!9368 = !DILocation(line: 531, column: 3, scope: !9364)
!9369 = !DILocation(line: 533, column: 1, scope: !9364)
!9370 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9181, file: !9181, line: 661, type: !6353, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9371)
!9371 = !{!9372}
!9372 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9370, file: !9181, line: 661, type: !152)
!9373 = !DILocation(line: 0, scope: !9370)
!9374 = !DILocation(line: 663, column: 3, scope: !9370)
!9375 = !DILocation(line: 664, column: 1, scope: !9370)
!9376 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !836, file: !836, line: 433, type: !9377, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9379)
!9377 = !DISubroutineType(types: !9378)
!9378 = !{!107, !107, !876, !106}
!9379 = !{!9380, !9381, !9382, !9383, !9385}
!9380 = !DILocalVariable(name: "line", arg: 1, scope: !9376, file: !836, line: 433, type: !107)
!9381 = !DILocalVariable(name: "cb", arg: 2, scope: !9376, file: !836, line: 433, type: !876)
!9382 = !DILocalVariable(name: "arg", arg: 3, scope: !9376, file: !836, line: 433, type: !106)
!9383 = !DILocalVariable(name: "dev", scope: !9376, file: !836, line: 435, type: !9384)
!9384 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !865)
!9385 = !DILocalVariable(name: "data", scope: !9376, file: !836, line: 436, type: !9135)
!9386 = !DILocation(line: 0, scope: !9376)
!9387 = !DILocation(line: 438, column: 21, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9376, file: !836, line: 438, column: 6)
!9389 = !DILocation(line: 438, column: 6, scope: !9388)
!9390 = !DILocation(line: 438, column: 6, scope: !9376)
!9391 = !DILocation(line: 442, column: 20, scope: !9376)
!9392 = !DILocation(line: 443, column: 17, scope: !9376)
!9393 = !DILocation(line: 443, column: 22, scope: !9376)
!9394 = !DILocation(line: 445, column: 2, scope: !9376)
!9395 = !DILocation(line: 446, column: 1, scope: !9376)
!9396 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !836, file: !836, line: 448, type: !9170, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9397)
!9397 = !{!9398, !9399, !9400}
!9398 = !DILocalVariable(name: "line", arg: 1, scope: !9396, file: !836, line: 448, type: !107)
!9399 = !DILocalVariable(name: "dev", scope: !9396, file: !836, line: 450, type: !9384)
!9400 = !DILocalVariable(name: "data", scope: !9396, file: !836, line: 451, type: !9135)
!9401 = !DILocation(line: 0, scope: !9396)
!9402 = !DILocation(line: 453, column: 17, scope: !9396)
!9403 = !DILocation(line: 453, column: 20, scope: !9396)
!9404 = !DILocation(line: 454, column: 17, scope: !9396)
!9405 = !DILocation(line: 454, column: 22, scope: !9396)
!9406 = !DILocation(line: 455, column: 1, scope: !9396)
!9407 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1020, file: !1020, line: 183, type: !1058, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !9408)
!9408 = !{!9409, !9410, !9411, !9412, !9413}
!9409 = !DILocalVariable(name: "dev", arg: 1, scope: !9407, file: !1020, line: 183, type: !1049)
!9410 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9407, file: !1020, line: 184, type: !1060)
!9411 = !DILocalVariable(name: "pclken", scope: !9407, file: !1020, line: 186, type: !1010)
!9412 = !DILocalVariable(name: "reg", scope: !9407, file: !1020, line: 187, type: !1610)
!9413 = !DILocalVariable(name: "reg_val", scope: !9407, file: !1020, line: 188, type: !152)
!9414 = !DILocation(line: 0, scope: !9407)
!9415 = !DILocation(line: 192, column: 6, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9407, file: !1020, line: 192, column: 6)
!9417 = !DILocation(line: 192, column: 6, scope: !9407)
!9418 = !DILocation(line: 197, column: 52, scope: !9407)
!9419 = !DILocation(line: 197, column: 8, scope: !9407)
!9420 = !DILocation(line: 198, column: 12, scope: !9407)
!9421 = !DILocation(line: 199, column: 21, scope: !9407)
!9422 = !DILocation(line: 199, column: 10, scope: !9407)
!9423 = !DILocation(line: 200, column: 7, scope: !9407)
!9424 = !DILocation(line: 202, column: 2, scope: !9407)
!9425 = !DILocation(line: 203, column: 1, scope: !9407)
!9426 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1020, file: !1020, line: 205, type: !1058, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !9427)
!9427 = !{!9428, !9429, !9430, !9431, !9432}
!9428 = !DILocalVariable(name: "dev", arg: 1, scope: !9426, file: !1020, line: 205, type: !1049)
!9429 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9426, file: !1020, line: 206, type: !1060)
!9430 = !DILocalVariable(name: "pclken", scope: !9426, file: !1020, line: 208, type: !1010)
!9431 = !DILocalVariable(name: "reg", scope: !9426, file: !1020, line: 209, type: !1610)
!9432 = !DILocalVariable(name: "reg_val", scope: !9426, file: !1020, line: 210, type: !152)
!9433 = !DILocation(line: 0, scope: !9426)
!9434 = !DILocation(line: 214, column: 6, scope: !9435)
!9435 = distinct !DILexicalBlock(scope: !9426, file: !1020, line: 214, column: 6)
!9436 = !DILocation(line: 214, column: 6, scope: !9426)
!9437 = !DILocation(line: 219, column: 52, scope: !9426)
!9438 = !DILocation(line: 219, column: 8, scope: !9426)
!9439 = !DILocation(line: 220, column: 12, scope: !9426)
!9440 = !DILocation(line: 221, column: 22, scope: !9426)
!9441 = !DILocation(line: 221, column: 13, scope: !9426)
!9442 = !DILocation(line: 221, column: 10, scope: !9426)
!9443 = !DILocation(line: 222, column: 7, scope: !9426)
!9444 = !DILocation(line: 224, column: 2, scope: !9426)
!9445 = !DILocation(line: 225, column: 1, scope: !9426)
!9446 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1020, file: !1020, line: 262, type: !1074, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !9447)
!9447 = !{!9448, !9449, !9450, !9451, !9452, !9453, !9454, !9455}
!9448 = !DILocalVariable(name: "clock", arg: 1, scope: !9446, file: !1020, line: 262, type: !1049)
!9449 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9446, file: !1020, line: 263, type: !1060)
!9450 = !DILocalVariable(name: "rate", arg: 3, scope: !9446, file: !1020, line: 264, type: !1016)
!9451 = !DILocalVariable(name: "pclken", scope: !9446, file: !1020, line: 266, type: !1010)
!9452 = !DILocalVariable(name: "ahb_clock", scope: !9446, file: !1020, line: 273, type: !152)
!9453 = !DILocalVariable(name: "apb1_clock", scope: !9446, file: !1020, line: 274, type: !152)
!9454 = !DILocalVariable(name: "apb2_clock", scope: !9446, file: !1020, line: 276, type: !152)
!9455 = !DILocalVariable(name: "ahb3_clock", scope: !9446, file: !1020, line: 286, type: !152)
!9456 = !DILocation(line: 0, scope: !9446)
!9457 = !DILocation(line: 273, column: 23, scope: !9446)
!9458 = !DILocation(line: 299, column: 18, scope: !9446)
!9459 = !DILocation(line: 299, column: 2, scope: !9446)
!9460 = !DILocation(line: 274, column: 24, scope: !9446)
!9461 = !DILocation(line: 319, column: 3, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9446, file: !1020, line: 299, column: 23)
!9463 = !DILocation(line: 276, column: 24, scope: !9446)
!9464 = !DILocation(line: 323, column: 3, scope: !9462)
!9465 = !DILocation(line: 346, column: 33, scope: !9462)
!9466 = !DILocation(line: 346, column: 11, scope: !9462)
!9467 = !DILocation(line: 350, column: 3, scope: !9462)
!9468 = !DILocation(line: 354, column: 33, scope: !9462)
!9469 = !DILocation(line: 354, column: 11, scope: !9462)
!9470 = !DILocation(line: 358, column: 3, scope: !9462)
!9471 = !DILocation(line: 374, column: 3, scope: !9462)
!9472 = !DILocation(line: 379, column: 3, scope: !9462)
!9473 = !DILocation(line: 0, scope: !9462)
!9474 = !DILocation(line: 396, column: 1, scope: !9446)
!9475 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1020, file: !1020, line: 227, type: !1090, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !9476)
!9476 = !{!9477, !9478, !9479, !9480, !9481, !9482, !9483, !9484}
!9477 = !DILocalVariable(name: "dev", arg: 1, scope: !9475, file: !1020, line: 227, type: !1049)
!9478 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9475, file: !1020, line: 228, type: !1060)
!9479 = !DILocalVariable(name: "data", arg: 3, scope: !9475, file: !1020, line: 229, type: !106)
!9480 = !DILocalVariable(name: "pclken", scope: !9475, file: !1020, line: 233, type: !1010)
!9481 = !DILocalVariable(name: "reg", scope: !9475, file: !1020, line: 234, type: !1610)
!9482 = !DILocalVariable(name: "reg_val", scope: !9475, file: !1020, line: 235, type: !152)
!9483 = !DILocalVariable(name: "dt_val", scope: !9475, file: !1020, line: 235, type: !152)
!9484 = !DILocalVariable(name: "err", scope: !9475, file: !1020, line: 236, type: !107)
!9485 = !DILocation(line: 0, scope: !9475)
!9486 = !DILocation(line: 241, column: 30, scope: !9475)
!9487 = !DILocation(line: 241, column: 8, scope: !9475)
!9488 = !DILocation(line: 242, column: 10, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9475, file: !1020, line: 242, column: 6)
!9490 = !DILocation(line: 242, column: 6, scope: !9475)
!9491 = !DILocation(line: 247, column: 11, scope: !9475)
!9492 = !DILocation(line: 248, column: 6, scope: !9475)
!9493 = !DILocation(line: 247, column: 44, scope: !9475)
!9494 = !DILocation(line: 250, column: 6, scope: !9475)
!9495 = !DILocation(line: 249, column: 52, scope: !9475)
!9496 = !DILocation(line: 249, column: 8, scope: !9475)
!9497 = !DILocation(line: 251, column: 12, scope: !9475)
!9498 = !DILocation(line: 252, column: 10, scope: !9475)
!9499 = !DILocation(line: 253, column: 7, scope: !9475)
!9500 = !DILocation(line: 255, column: 2, scope: !9475)
!9501 = !DILocation(line: 260, column: 1, scope: !9475)
!9502 = distinct !DISubprogram(name: "enabled_clock", scope: !1020, file: !1020, line: 100, type: !9503, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !9505)
!9503 = !DISubroutineType(types: !9504)
!9504 = !{!107, !152}
!9505 = !{!9506, !9507}
!9506 = !DILocalVariable(name: "src_clk", arg: 1, scope: !9502, file: !1020, line: 100, type: !152)
!9507 = !DILocalVariable(name: "r", scope: !9502, file: !1020, line: 102, type: !107)
!9508 = !DILocation(line: 0, scope: !9502)
!9509 = !DILocation(line: 104, column: 2, scope: !9502)
!9510 = !DILocation(line: 180, column: 2, scope: !9502)
!9511 = !DILocation(line: 181, column: 1, scope: !9502)
!9512 = distinct !DISubprogram(name: "get_bus_clock", scope: !1020, file: !1020, line: 79, type: !9513, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !9515)
!9513 = !DISubroutineType(types: !9514)
!9514 = !{!152, !152, !152}
!9515 = !{!9516, !9517}
!9516 = !DILocalVariable(name: "clock", arg: 1, scope: !9512, file: !1020, line: 79, type: !152)
!9517 = !DILocalVariable(name: "prescaler", arg: 2, scope: !9512, file: !1020, line: 79, type: !152)
!9518 = !DILocation(line: 0, scope: !9512)
!9519 = !DILocation(line: 81, column: 15, scope: !9512)
!9520 = !DILocation(line: 81, column: 2, scope: !9512)
!9521 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1020, file: !1020, line: 68, type: !9522, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !9524)
!9522 = !DISubroutineType(types: !9523)
!9523 = !{!152, !152, !107, !107, !107}
!9524 = !{!9525, !9526, !9527, !9528}
!9525 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !9521, file: !1020, line: 68, type: !152)
!9526 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !9521, file: !1020, line: 69, type: !107)
!9527 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !9521, file: !1020, line: 70, type: !107)
!9528 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !9521, file: !1020, line: 71, type: !107)
!9529 = !DILocation(line: 0, scope: !9521)
!9530 = !DILocation(line: 75, column: 22, scope: !9521)
!9531 = !DILocation(line: 76, column: 13, scope: !9521)
!9532 = !DILocation(line: 75, column: 34, scope: !9521)
!9533 = !DILocation(line: 75, column: 2, scope: !9521)
!9534 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1020, file: !1020, line: 641, type: !1047, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !9535)
!9535 = !{!9536, !9537, !9538}
!9536 = !DILocalVariable(name: "dev", arg: 1, scope: !9534, file: !1020, line: 641, type: !1049)
!9537 = !DILocalVariable(name: "old_flash_freq", scope: !9534, file: !1020, line: 664, type: !152)
!9538 = !DILocalVariable(name: "new_flash_freq", scope: !9534, file: !1020, line: 665, type: !152)
!9539 = !DILocation(line: 0, scope: !9534)
!9540 = !DILocation(line: 646, column: 2, scope: !9534)
!9541 = !DILocation(line: 667, column: 19, scope: !9534)
!9542 = !DILocation(line: 674, column: 21, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9534, file: !1020, line: 674, column: 6)
!9544 = !DILocation(line: 674, column: 6, scope: !9534)
!9545 = !DILocation(line: 675, column: 3, scope: !9546)
!9546 = distinct !DILexicalBlock(scope: !9543, file: !1020, line: 674, column: 59)
!9547 = !DILocation(line: 676, column: 2, scope: !9546)
!9548 = !DILocation(line: 680, column: 2, scope: !9534)
!9549 = !DILocation(line: 683, column: 2, scope: !9534)
!9550 = !DILocation(line: 690, column: 3, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9552, file: !1020, line: 689, column: 9)
!9552 = distinct !DILexicalBlock(scope: !9534, file: !1020, line: 685, column: 6)
!9553 = !DILocation(line: 695, column: 2, scope: !9534)
!9554 = !DILocation(line: 696, column: 2, scope: !9534)
!9555 = !DILocation(line: 696, column: 9, scope: !9534)
!9556 = !DILocation(line: 696, column: 34, scope: !9534)
!9557 = distinct !{!9557, !9554, !9558}
!9558 = !DILocation(line: 697, column: 2, scope: !9534)
!9559 = !DILocation(line: 720, column: 21, scope: !9560)
!9560 = distinct !DILexicalBlock(scope: !9534, file: !1020, line: 720, column: 6)
!9561 = !DILocation(line: 720, column: 6, scope: !9534)
!9562 = !DILocation(line: 721, column: 3, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9560, file: !1020, line: 720, column: 60)
!9564 = !DILocation(line: 722, column: 2, scope: !9563)
!9565 = !DILocation(line: 725, column: 18, scope: !9534)
!9566 = !DILocation(line: 728, column: 2, scope: !9534)
!9567 = !DILocation(line: 730, column: 2, scope: !9534)
!9568 = !DILocation(line: 745, column: 2, scope: !9534)
!9569 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !9570, file: !9570, line: 3275, type: !6343, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9570 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9571 = !DILocation(line: 3277, column: 21, scope: !9569)
!9572 = !DILocation(line: 3277, column: 3, scope: !9569)
!9573 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1020, file: !1020, line: 507, type: !3089, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9574 = !DILocation(line: 516, column: 4, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9576, file: !1020, line: 515, column: 10)
!9576 = distinct !DILexicalBlock(scope: !9577, file: !1020, line: 513, column: 7)
!9577 = distinct !DILexicalBlock(scope: !9578, file: !1020, line: 510, column: 37)
!9578 = distinct !DILexicalBlock(scope: !9573, file: !1020, line: 510, column: 6)
!9579 = !DILocation(line: 526, column: 3, scope: !9577)
!9580 = !DILocation(line: 527, column: 3, scope: !9577)
!9581 = !DILocation(line: 527, column: 10, scope: !9577)
!9582 = !DILocation(line: 527, column: 31, scope: !9577)
!9583 = distinct !{!9583, !9580, !9584}
!9584 = !DILocation(line: 529, column: 3, scope: !9577)
!9585 = !DILocation(line: 583, column: 3, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9587, file: !1020, line: 577, column: 37)
!9587 = distinct !DILexicalBlock(scope: !9573, file: !1020, line: 577, column: 6)
!9588 = !DILocation(line: 584, column: 3, scope: !9586)
!9589 = !DILocation(line: 584, column: 10, scope: !9586)
!9590 = !DILocation(line: 584, column: 31, scope: !9586)
!9591 = distinct !{!9591, !9588, !9592}
!9592 = !DILocation(line: 585, column: 3, scope: !9586)
!9593 = !DILocation(line: 627, column: 1, scope: !9573)
!9594 = distinct !DISubprogram(name: "set_up_plls", scope: !1020, file: !1020, line: 448, type: !3089, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9595 = !DILocation(line: 460, column: 6, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9594, file: !1020, line: 460, column: 6)
!9597 = !DILocation(line: 460, column: 31, scope: !9596)
!9598 = !DILocation(line: 460, column: 6, scope: !9594)
!9599 = !DILocation(line: 461, column: 3, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9596, file: !1020, line: 460, column: 67)
!9601 = !DILocation(line: 462, column: 3, scope: !9600)
!9602 = !DILocation(line: 463, column: 2, scope: !9600)
!9603 = !DILocation(line: 464, column: 2, scope: !9594)
!9604 = !DILocation(line: 488, column: 2, scope: !9594)
!9605 = !DILocation(line: 492, column: 2, scope: !9594)
!9606 = !DILocation(line: 496, column: 2, scope: !9594)
!9607 = !DILocation(line: 499, column: 2, scope: !9594)
!9608 = !DILocation(line: 500, column: 2, scope: !9594)
!9609 = !DILocation(line: 500, column: 9, scope: !9594)
!9610 = !DILocation(line: 500, column: 30, scope: !9594)
!9611 = distinct !{!9611, !9608, !9612}
!9612 = !DILocation(line: 502, column: 2, scope: !9594)
!9613 = !DILocation(line: 505, column: 1, scope: !9594)
!9614 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9570, file: !9570, line: 3224, type: !6353, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !9615)
!9615 = !{!9616}
!9616 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9614, file: !9570, line: 3224, type: !152)
!9617 = !DILocation(line: 0, scope: !9614)
!9618 = !DILocation(line: 3226, column: 3, scope: !9614)
!9619 = !DILocation(line: 3227, column: 1, scope: !9614)
!9620 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9570, file: !9570, line: 3188, type: !6353, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !9621)
!9621 = !{!9622}
!9622 = !DILocalVariable(name: "Source", arg: 1, scope: !9620, file: !9570, line: 3188, type: !152)
!9623 = !DILocation(line: 0, scope: !9620)
!9624 = !DILocation(line: 3190, column: 3, scope: !9620)
!9625 = !DILocation(line: 3191, column: 1, scope: !9620)
!9626 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9570, file: !9570, line: 3204, type: !6343, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9627 = !DILocation(line: 3206, column: 21, scope: !9626)
!9628 = !DILocation(line: 3206, column: 3, scope: !9626)
!9629 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9570, file: !9570, line: 3240, type: !6353, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !9630)
!9630 = !{!9631}
!9631 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9629, file: !9570, line: 3240, type: !152)
!9632 = !DILocation(line: 0, scope: !9629)
!9633 = !DILocation(line: 3242, column: 3, scope: !9629)
!9634 = !DILocation(line: 3243, column: 1, scope: !9629)
!9635 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9570, file: !9570, line: 3256, type: !6353, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !9636)
!9636 = !{!9637}
!9637 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9635, file: !9570, line: 3256, type: !152)
!9638 = !DILocation(line: 0, scope: !9635)
!9639 = !DILocation(line: 3258, column: 3, scope: !9635)
!9640 = !DILocation(line: 3259, column: 1, scope: !9635)
!9641 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1020, file: !1020, line: 409, type: !3089, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9642 = !DILocation(line: 412, column: 6, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9641, file: !1020, line: 412, column: 6)
!9644 = !DILocation(line: 412, column: 27, scope: !9643)
!9645 = !DILocation(line: 412, column: 6, scope: !9641)
!9646 = !DILocation(line: 414, column: 3, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9643, file: !1020, line: 412, column: 33)
!9648 = !DILocation(line: 415, column: 3, scope: !9647)
!9649 = !DILocation(line: 415, column: 10, scope: !9647)
!9650 = !DILocation(line: 415, column: 31, scope: !9647)
!9651 = distinct !{!9651, !9648, !9652}
!9652 = !DILocation(line: 417, column: 3, scope: !9647)
!9653 = !DILocation(line: 421, column: 2, scope: !9641)
!9654 = !DILocation(line: 422, column: 2, scope: !9641)
!9655 = !DILocation(line: 422, column: 9, scope: !9641)
!9656 = !DILocation(line: 422, column: 34, scope: !9641)
!9657 = distinct !{!9657, !9654, !9658}
!9658 = !DILocation(line: 423, column: 2, scope: !9641)
!9659 = !DILocation(line: 424, column: 1, scope: !9641)
!9660 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !9570, file: !9570, line: 4195, type: !3089, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9661 = !DILocation(line: 4197, column: 3, scope: !9660)
!9662 = !DILocation(line: 4198, column: 1, scope: !9660)
!9663 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9570, file: !9570, line: 4184, type: !3089, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9664 = !DILocation(line: 4186, column: 3, scope: !9663)
!9665 = !DILocation(line: 4187, column: 1, scope: !9663)
!9666 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9570, file: !9570, line: 4205, type: !6343, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9667 = !DILocation(line: 4207, column: 11, scope: !9666)
!9668 = !DILocation(line: 4207, column: 44, scope: !9666)
!9669 = !DILocation(line: 4207, column: 3, scope: !9666)
!9670 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9570, file: !9570, line: 3007, type: !6343, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9671 = !DILocation(line: 3009, column: 11, scope: !9670)
!9672 = !DILocation(line: 3009, column: 44, scope: !9670)
!9673 = !DILocation(line: 3009, column: 3, scope: !9670)
!9674 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9570, file: !9570, line: 2987, type: !3089, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9675 = !DILocation(line: 2989, column: 3, scope: !9674)
!9676 = !DILocation(line: 2990, column: 1, scope: !9674)
!9677 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9570, file: !9570, line: 2939, type: !3089, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9678 = !DILocation(line: 2941, column: 3, scope: !9677)
!9679 = !DILocation(line: 2942, column: 1, scope: !9677)
!9680 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9570, file: !9570, line: 2949, type: !3089, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9681 = !DILocation(line: 2951, column: 3, scope: !9680)
!9682 = !DILocation(line: 2952, column: 1, scope: !9680)
!9683 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9570, file: !9570, line: 2969, type: !6343, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9684 = !DILocation(line: 2971, column: 11, scope: !9683)
!9685 = !DILocation(line: 2971, column: 44, scope: !9683)
!9686 = !DILocation(line: 2971, column: 3, scope: !9683)
!9687 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !9570, file: !9570, line: 3143, type: !3089, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9688 = !DILocation(line: 3145, column: 3, scope: !9687)
!9689 = !DILocation(line: 3146, column: 1, scope: !9687)
!9690 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !9570, file: !9570, line: 3163, type: !6343, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9691 = !DILocation(line: 3165, column: 11, scope: !9690)
!9692 = !DILocation(line: 3165, column: 46, scope: !9690)
!9693 = !DILocation(line: 3165, column: 3, scope: !9690)
!9694 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !9695, file: !9695, line: 40, type: !6343, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !2166)
!9695 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9696 = !DILocation(line: 45, column: 3, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9698, file: !9695, line: 44, column: 44)
!9698 = distinct !DILexicalBlock(scope: !9699, file: !9695, line: 44, column: 13)
!9699 = distinct !DILexicalBlock(scope: !9694, file: !9695, line: 42, column: 6)
!9700 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !9695, file: !9695, line: 56, type: !3089, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !2166)
!9701 = !DILocation(line: 58, column: 2, scope: !9700)
!9702 = !DILocation(line: 62, column: 1, scope: !9700)
!9703 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9570, file: !9570, line: 4304, type: !9704, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !9706)
!9704 = !DISubroutineType(types: !9705)
!9705 = !{null, !152, !152, !152, !152}
!9706 = !{!9707, !9708, !9709, !9710}
!9707 = !DILocalVariable(name: "Source", arg: 1, scope: !9703, file: !9570, line: 4304, type: !152)
!9708 = !DILocalVariable(name: "PLLM", arg: 2, scope: !9703, file: !9570, line: 4304, type: !152)
!9709 = !DILocalVariable(name: "PLLN", arg: 3, scope: !9703, file: !9570, line: 4304, type: !152)
!9710 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !9703, file: !9570, line: 4304, type: !152)
!9711 = !DILocation(line: 0, scope: !9703)
!9712 = !DILocation(line: 4306, column: 3, scope: !9703)
!9713 = !DILocation(line: 4308, column: 3, scope: !9703)
!9714 = !DILocation(line: 4312, column: 1, scope: !9703)
!9715 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !9695, file: !9695, line: 69, type: !3089, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !2166)
!9716 = !DILocation(line: 72, column: 2, scope: !9715)
!9717 = !DILocation(line: 73, column: 1, scope: !9715)
!9718 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !9719, file: !9719, line: 1185, type: !6353, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !9720)
!9719 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9720 = !{!9721, !9722}
!9721 = !DILocalVariable(name: "Periphs", arg: 1, scope: !9718, file: !9719, line: 1185, type: !152)
!9722 = !DILocalVariable(name: "tmpreg", scope: !9718, file: !9719, line: 1187, type: !227)
!9723 = !DILocation(line: 0, scope: !9718)
!9724 = !DILocation(line: 1187, column: 3, scope: !9718)
!9725 = !DILocation(line: 1187, column: 17, scope: !9718)
!9726 = !DILocation(line: 1188, column: 3, scope: !9718)
!9727 = !DILocation(line: 1190, column: 12, scope: !9718)
!9728 = !DILocation(line: 1190, column: 10, scope: !9718)
!9729 = !DILocation(line: 1191, column: 9, scope: !9718)
!9730 = !DILocation(line: 1192, column: 1, scope: !9718)
!9731 = distinct !DISubprogram(name: "uart_console_init", scope: !1151, file: !1151, line: 588, type: !1128, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !9732)
!9732 = !{!9733}
!9733 = !DILocalVariable(name: "arg", arg: 1, scope: !9731, file: !1151, line: 588, type: !1106)
!9734 = !DILocation(line: 0, scope: !9731)
!9735 = !DILocation(line: 593, column: 7, scope: !9736)
!9736 = distinct !DILexicalBlock(scope: !9731, file: !1151, line: 593, column: 6)
!9737 = !DILocation(line: 593, column: 6, scope: !9731)
!9738 = !DILocation(line: 597, column: 2, scope: !9731)
!9739 = !DILocation(line: 599, column: 2, scope: !9731)
!9740 = !DILocation(line: 600, column: 1, scope: !9731)
!9741 = distinct !DISubprogram(name: "device_is_ready", scope: !9742, file: !9742, line: 47, type: !9743, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !9745)
!9742 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!9743 = !DISubroutineType(types: !9744)
!9744 = !{!145, !1106}
!9745 = !{!9746}
!9746 = !DILocalVariable(name: "dev", arg: 1, scope: !9741, file: !9742, line: 47, type: !1106)
!9747 = !DILocation(line: 0, scope: !9741)
!9748 = !DILocation(line: 55, column: 2, scope: !9749)
!9749 = distinct !DILexicalBlock(scope: !9741, file: !9742, line: 55, column: 2)
!9750 = !{i64 2155055663}
!9751 = !DILocation(line: 56, column: 9, scope: !9741)
!9752 = !DILocation(line: 56, column: 2, scope: !9741)
!9753 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1151, file: !1151, line: 573, type: !3089, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !2166)
!9754 = !DILocation(line: 576, column: 2, scope: !9753)
!9755 = !DILocation(line: 579, column: 2, scope: !9753)
!9756 = !DILocation(line: 581, column: 1, scope: !9753)
!9757 = distinct !DISubprogram(name: "console_out", scope: !1151, file: !1151, line: 77, type: !214, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !9758)
!9758 = !{!9759}
!9759 = !DILocalVariable(name: "c", arg: 1, scope: !9757, file: !1151, line: 77, type: !107)
!9760 = !DILocation(line: 0, scope: !9757)
!9761 = !DILocation(line: 89, column: 11, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9757, file: !1151, line: 89, column: 6)
!9763 = !DILocation(line: 89, column: 6, scope: !9757)
!9764 = !DILocation(line: 90, column: 3, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9762, file: !1151, line: 89, column: 17)
!9766 = !DILocation(line: 91, column: 2, scope: !9765)
!9767 = !DILocation(line: 92, column: 34, scope: !9757)
!9768 = !DILocation(line: 92, column: 2, scope: !9757)
!9769 = !DILocation(line: 94, column: 2, scope: !9757)
!9770 = distinct !DISubprogram(name: "uart_poll_out", scope: !9771, file: !9771, line: 95, type: !1124, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !9772)
!9771 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/pytest")
!9772 = !{!9773, !9774}
!9773 = !DILocalVariable(name: "dev", arg: 1, scope: !9770, file: !9771, line: 95, type: !1106)
!9774 = !DILocalVariable(name: "out_char", arg: 2, scope: !9770, file: !9771, line: 95, type: !196)
!9775 = !DILocation(line: 0, scope: !9770)
!9776 = !DILocation(line: 105, column: 2, scope: !9777)
!9777 = distinct !DILexicalBlock(scope: !9770, file: !9771, line: 105, column: 2)
!9778 = !{i64 2155139054}
!9779 = !DILocation(line: 106, column: 2, scope: !9770)
!9780 = !DILocation(line: 107, column: 1, scope: !9770)
!9781 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1100, file: !1100, line: 574, type: !1124, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !9782)
!9782 = !{!9783, !9784, !9785}
!9783 = !DILocalVariable(name: "dev", arg: 1, scope: !9781, file: !1100, line: 574, type: !1106)
!9784 = !DILocalVariable(name: "out_char", arg: 2, scope: !9781, file: !1100, line: 575, type: !196)
!9785 = !DILocalVariable(name: "api", scope: !9781, file: !1100, line: 577, type: !1097)
!9786 = !DILocation(line: 0, scope: !9781)
!9787 = !DILocation(line: 578, column: 40, scope: !9781)
!9788 = !DILocation(line: 580, column: 7, scope: !9781)
!9789 = !DILocation(line: 580, column: 2, scope: !9781)
!9790 = !DILocation(line: 581, column: 1, scope: !9781)
!9791 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !9743, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !9792)
!9792 = !{!9793}
!9793 = !DILocalVariable(name: "dev", arg: 1, scope: !9791, file: !247, line: 730, type: !1106)
!9794 = !DILocation(line: 0, scope: !9791)
!9795 = !DILocation(line: 732, column: 9, scope: !9791)
!9796 = !DILocation(line: 732, column: 2, scope: !9791)
!9797 = distinct !DISubprogram(name: "uart_register_input", scope: !1151, file: !1151, line: 560, type: !9798, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !9845)
!9798 = !DISubroutineType(types: !9799)
!9799 = !{null, !9800, !9800, !9842}
!9800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9801, size: 32)
!9801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !406, line: 2208, size: 160, elements: !9802)
!9802 = !{!9803}
!9803 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9801, file: !406, line: 2209, baseType: !9804, size: 160)
!9804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !406, line: 1709, size: 160, elements: !9805)
!9805 = !{!9806, !9819, !9823}
!9806 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9804, file: !406, line: 1710, baseType: !9807, size: 64)
!9807 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9808, line: 46, baseType: !9809)
!9808 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9808, line: 41, size: 64, elements: !9810)
!9810 = !{!9811, !9818}
!9811 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9809, file: !9808, line: 42, baseType: !9812, size: 32)
!9812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9813, size: 32)
!9813 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9808, line: 39, baseType: !9814)
!9814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9808, line: 35, size: 32, elements: !9815)
!9815 = !{!9816}
!9816 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9814, file: !9808, line: 36, baseType: !9817, size: 32)
!9817 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9808, line: 32, baseType: !152)
!9818 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9809, file: !9808, line: 43, baseType: !9812, size: 32, offset: 32)
!9819 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9804, file: !406, line: 1711, baseType: !9820, size: 32, offset: 64)
!9820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !9821)
!9821 = !{!9822}
!9822 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9820, file: !420, line: 52, baseType: !22, size: 32)
!9823 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9804, file: !406, line: 1712, baseType: !9824, size: 64, offset: 96)
!9824 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !9825)
!9825 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !9826)
!9826 = !{!9827}
!9827 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9825, file: !345, line: 232, baseType: !9828, size: 64)
!9828 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !9829)
!9829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !9830)
!9830 = !{!9831, !9837}
!9831 = !DIDerivedType(tag: DW_TAG_member, scope: !9829, file: !319, line: 38, baseType: !9832, size: 32)
!9832 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9829, file: !319, line: 38, size: 32, elements: !9833)
!9833 = !{!9834, !9836}
!9834 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9832, file: !319, line: 39, baseType: !9835, size: 32)
!9835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9829, size: 32)
!9836 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9832, file: !319, line: 40, baseType: !9835, size: 32)
!9837 = !DIDerivedType(tag: DW_TAG_member, scope: !9829, file: !319, line: 42, baseType: !9838, size: 32, offset: 32)
!9838 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9829, file: !319, line: 42, size: 32, elements: !9839)
!9839 = !{!9840, !9841}
!9840 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9838, file: !319, line: 43, baseType: !9835, size: 32)
!9841 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9838, file: !319, line: 44, baseType: !9835, size: 32)
!9842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9843, size: 32)
!9843 = !DISubroutineType(types: !9844)
!9844 = !{!195, !193, !195}
!9845 = !{!9846, !9847, !9848}
!9846 = !DILocalVariable(name: "avail", arg: 1, scope: !9797, file: !1151, line: 560, type: !9800)
!9847 = !DILocalVariable(name: "lines", arg: 2, scope: !9797, file: !1151, line: 560, type: !9800)
!9848 = !DILocalVariable(name: "completion", arg: 3, scope: !9797, file: !1151, line: 561, type: !9842)
!9849 = !DILocation(line: 0, scope: !9797)
!9850 = !DILocation(line: 566, column: 1, scope: !9797)
!9851 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1329, file: !1329, line: 523, type: !1187, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !9852)
!9852 = !{!9853, !9854, !9855, !9856, !9857}
!9853 = !DILocalVariable(name: "dev", arg: 1, scope: !9851, file: !1329, line: 523, type: !1189)
!9854 = !DILocalVariable(name: "pin", arg: 2, scope: !9851, file: !1329, line: 524, type: !1204)
!9855 = !DILocalVariable(name: "flags", arg: 3, scope: !9851, file: !1329, line: 524, type: !1205)
!9856 = !DILocalVariable(name: "err", scope: !9851, file: !1329, line: 526, type: !107)
!9857 = !DILocalVariable(name: "pincfg", scope: !9851, file: !1329, line: 527, type: !107)
!9858 = !DILocation(line: 0, scope: !9851)
!9859 = !DILocation(line: 527, column: 2, scope: !9851)
!9860 = !DILocation(line: 532, column: 8, scope: !9851)
!9861 = !DILocation(line: 533, column: 10, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9851, file: !1329, line: 533, column: 6)
!9863 = !DILocation(line: 533, column: 6, scope: !9851)
!9864 = !DILocation(line: 543, column: 13, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9851, file: !1329, line: 543, column: 6)
!9866 = !DILocation(line: 543, column: 28, scope: !9865)
!9867 = !DILocation(line: 543, column: 6, scope: !9851)
!9868 = !DILocation(line: 544, column: 14, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9870, file: !1329, line: 544, column: 7)
!9870 = distinct !DILexicalBlock(scope: !9865, file: !1329, line: 543, column: 34)
!9871 = !DILocation(line: 544, column: 39, scope: !9869)
!9872 = !DILocation(line: 544, column: 7, scope: !9870)
!9873 = !DILocation(line: 545, column: 38, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9869, file: !1329, line: 544, column: 45)
!9875 = !DILocation(line: 545, column: 4, scope: !9874)
!9876 = !DILocation(line: 546, column: 3, scope: !9874)
!9877 = !DILocation(line: 546, column: 21, scope: !9878)
!9878 = distinct !DILexicalBlock(scope: !9869, file: !1329, line: 546, column: 14)
!9879 = !DILocation(line: 546, column: 45, scope: !9878)
!9880 = !DILocation(line: 546, column: 14, scope: !9869)
!9881 = !DILocation(line: 547, column: 40, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9878, file: !1329, line: 546, column: 51)
!9883 = !DILocation(line: 547, column: 4, scope: !9882)
!9884 = !DILocation(line: 548, column: 3, scope: !9882)
!9885 = !DILocation(line: 551, column: 32, scope: !9851)
!9886 = !DILocation(line: 551, column: 37, scope: !9851)
!9887 = !DILocation(line: 551, column: 2, scope: !9851)
!9888 = !DILocation(line: 554, column: 6, scope: !9851)
!9889 = !DILocation(line: 562, column: 1, scope: !9851)
!9890 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1329, file: !1329, line: 410, type: !9891, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !9893)
!9891 = !DISubroutineType(types: !9892)
!9892 = !{!107, !1189, !1016}
!9893 = !{!9894, !9895, !9896, !9898}
!9894 = !DILocalVariable(name: "dev", arg: 1, scope: !9890, file: !1329, line: 410, type: !1189)
!9895 = !DILocalVariable(name: "value", arg: 2, scope: !9890, file: !1329, line: 410, type: !1016)
!9896 = !DILocalVariable(name: "cfg", scope: !9890, file: !1329, line: 412, type: !9897)
!9897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 32)
!9898 = !DILocalVariable(name: "gpio", scope: !9890, file: !1329, line: 413, type: !1262)
!9899 = !DILocation(line: 0, scope: !9890)
!9900 = !DILocation(line: 412, column: 45, scope: !9890)
!9901 = !DILocation(line: 413, column: 44, scope: !9890)
!9902 = !DILocation(line: 415, column: 11, scope: !9890)
!9903 = !DILocation(line: 415, column: 9, scope: !9890)
!9904 = !DILocation(line: 417, column: 2, scope: !9890)
!9905 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1329, file: !1329, line: 420, type: !1214, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !9906)
!9906 = !{!9907, !9908, !9909, !9910, !9911, !9912}
!9907 = !DILocalVariable(name: "dev", arg: 1, scope: !9905, file: !1329, line: 420, type: !1189)
!9908 = !DILocalVariable(name: "mask", arg: 2, scope: !9905, file: !1329, line: 421, type: !1216)
!9909 = !DILocalVariable(name: "value", arg: 3, scope: !9905, file: !1329, line: 422, type: !1211)
!9910 = !DILocalVariable(name: "cfg", scope: !9905, file: !1329, line: 424, type: !9897)
!9911 = !DILocalVariable(name: "gpio", scope: !9905, file: !1329, line: 425, type: !1262)
!9912 = !DILocalVariable(name: "port_value", scope: !9905, file: !1329, line: 426, type: !152)
!9913 = !DILocation(line: 0, scope: !9905)
!9914 = !DILocation(line: 424, column: 45, scope: !9905)
!9915 = !DILocation(line: 425, column: 44, scope: !9905)
!9916 = !DILocation(line: 430, column: 15, scope: !9905)
!9917 = !DILocation(line: 431, column: 46, scope: !9905)
!9918 = !DILocation(line: 431, column: 44, scope: !9905)
!9919 = !DILocation(line: 431, column: 61, scope: !9905)
!9920 = !DILocation(line: 431, column: 53, scope: !9905)
!9921 = !DILocation(line: 431, column: 2, scope: !9905)
!9922 = !DILocation(line: 435, column: 2, scope: !9905)
!9923 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1329, file: !1329, line: 438, type: !1219, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !9924)
!9924 = !{!9925, !9926, !9927, !9928}
!9925 = !DILocalVariable(name: "dev", arg: 1, scope: !9923, file: !1329, line: 438, type: !1189)
!9926 = !DILocalVariable(name: "pins", arg: 2, scope: !9923, file: !1329, line: 439, type: !1216)
!9927 = !DILocalVariable(name: "cfg", scope: !9923, file: !1329, line: 441, type: !9897)
!9928 = !DILocalVariable(name: "gpio", scope: !9923, file: !1329, line: 442, type: !1262)
!9929 = !DILocation(line: 0, scope: !9923)
!9930 = !DILocation(line: 441, column: 45, scope: !9923)
!9931 = !DILocation(line: 442, column: 44, scope: !9923)
!9932 = !DILocation(line: 448, column: 2, scope: !9923)
!9933 = !DILocation(line: 450, column: 2, scope: !9923)
!9934 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1329, file: !1329, line: 453, type: !1219, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !9935)
!9935 = !{!9936, !9937, !9938, !9939}
!9936 = !DILocalVariable(name: "dev", arg: 1, scope: !9934, file: !1329, line: 453, type: !1189)
!9937 = !DILocalVariable(name: "pins", arg: 2, scope: !9934, file: !1329, line: 454, type: !1216)
!9938 = !DILocalVariable(name: "cfg", scope: !9934, file: !1329, line: 456, type: !9897)
!9939 = !DILocalVariable(name: "gpio", scope: !9934, file: !1329, line: 457, type: !1262)
!9940 = !DILocation(line: 0, scope: !9934)
!9941 = !DILocation(line: 456, column: 45, scope: !9934)
!9942 = !DILocation(line: 457, column: 44, scope: !9934)
!9943 = !DILocation(line: 467, column: 2, scope: !9934)
!9944 = !DILocation(line: 470, column: 2, scope: !9934)
!9945 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1329, file: !1329, line: 473, type: !1219, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !9946)
!9946 = !{!9947, !9948, !9949, !9950}
!9947 = !DILocalVariable(name: "dev", arg: 1, scope: !9945, file: !1329, line: 473, type: !1189)
!9948 = !DILocalVariable(name: "pins", arg: 2, scope: !9945, file: !1329, line: 474, type: !1216)
!9949 = !DILocalVariable(name: "cfg", scope: !9945, file: !1329, line: 476, type: !9897)
!9950 = !DILocalVariable(name: "gpio", scope: !9945, file: !1329, line: 477, type: !1262)
!9951 = !DILocation(line: 0, scope: !9945)
!9952 = !DILocation(line: 476, column: 45, scope: !9945)
!9953 = !DILocation(line: 477, column: 44, scope: !9945)
!9954 = !DILocation(line: 484, column: 2, scope: !9945)
!9955 = !DILocation(line: 487, column: 2, scope: !9945)
!9956 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1329, file: !1329, line: 594, type: !1225, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !9957)
!9957 = !{!9958, !9959, !9960, !9961, !9962, !9963, !9965, !9966, !9967}
!9958 = !DILocalVariable(name: "dev", arg: 1, scope: !9956, file: !1329, line: 594, type: !1189)
!9959 = !DILocalVariable(name: "pin", arg: 2, scope: !9956, file: !1329, line: 595, type: !1204)
!9960 = !DILocalVariable(name: "mode", arg: 3, scope: !9956, file: !1329, line: 596, type: !1163)
!9961 = !DILocalVariable(name: "trig", arg: 4, scope: !9956, file: !1329, line: 597, type: !1169)
!9962 = !DILocalVariable(name: "cfg", scope: !9956, file: !1329, line: 599, type: !9897)
!9963 = !DILocalVariable(name: "data", scope: !9956, file: !1329, line: 600, type: !9964)
!9964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 32)
!9965 = !DILocalVariable(name: "edge", scope: !9956, file: !1329, line: 601, type: !107)
!9966 = !DILocalVariable(name: "err", scope: !9956, file: !1329, line: 602, type: !107)
!9967 = !DILabel(scope: !9956, name: "exit", file: !1329, line: 643)
!9968 = !DILocation(line: 0, scope: !9956)
!9969 = !DILocation(line: 599, column: 45, scope: !9956)
!9970 = !DILocation(line: 604, column: 6, scope: !9956)
!9971 = !DILocation(line: 605, column: 34, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !9973, file: !1329, line: 605, column: 7)
!9973 = distinct !DILexicalBlock(scope: !9974, file: !1329, line: 604, column: 38)
!9974 = distinct !DILexicalBlock(scope: !9956, file: !1329, line: 604, column: 6)
!9975 = !DILocation(line: 605, column: 7, scope: !9972)
!9976 = !DILocation(line: 605, column: 47, scope: !9972)
!9977 = !DILocation(line: 605, column: 39, scope: !9972)
!9978 = !DILocation(line: 605, column: 7, scope: !9973)
!9979 = !DILocation(line: 606, column: 4, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9972, file: !1329, line: 605, column: 53)
!9981 = !DILocation(line: 607, column: 4, scope: !9980)
!9982 = !DILocation(line: 608, column: 4, scope: !9980)
!9983 = !DILocation(line: 609, column: 3, scope: !9980)
!9984 = !DILocation(line: 600, column: 38, scope: !9956)
!9985 = !DILocation(line: 620, column: 30, scope: !9986)
!9986 = distinct !DILexicalBlock(scope: !9956, file: !1329, line: 620, column: 6)
!9987 = !DILocation(line: 620, column: 6, scope: !9986)
!9988 = !DILocation(line: 620, column: 57, scope: !9986)
!9989 = !DILocation(line: 620, column: 6, scope: !9956)
!9990 = !DILocation(line: 625, column: 29, scope: !9956)
!9991 = !DILocation(line: 625, column: 2, scope: !9956)
!9992 = !DILocation(line: 627, column: 2, scope: !9956)
!9993 = !DILocation(line: 630, column: 3, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9956, file: !1329, line: 627, column: 16)
!9995 = !DILocation(line: 633, column: 3, scope: !9994)
!9996 = !DILocation(line: 636, column: 3, scope: !9994)
!9997 = !DILocation(line: 639, column: 2, scope: !9956)
!9998 = !DILocation(line: 641, column: 2, scope: !9956)
!9999 = !DILocation(line: 643, column: 1, scope: !9956)
!10000 = !DILocation(line: 644, column: 2, scope: !9956)
!10001 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1329, file: !1329, line: 647, type: !1229, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10002)
!10002 = !{!10003, !10004, !10005, !10006}
!10003 = !DILocalVariable(name: "dev", arg: 1, scope: !10001, file: !1329, line: 647, type: !1189)
!10004 = !DILocalVariable(name: "callback", arg: 2, scope: !10001, file: !1329, line: 648, type: !1231)
!10005 = !DILocalVariable(name: "set", arg: 3, scope: !10001, file: !1329, line: 649, type: !145)
!10006 = !DILocalVariable(name: "data", scope: !10001, file: !1329, line: 651, type: !9964)
!10007 = !DILocation(line: 0, scope: !10001)
!10008 = !DILocation(line: 651, column: 38, scope: !10001)
!10009 = !DILocation(line: 653, column: 37, scope: !10001)
!10010 = !DILocation(line: 653, column: 9, scope: !10001)
!10011 = !DILocation(line: 653, column: 2, scope: !10001)
!10012 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10013, file: !10013, line: 38, type: !10014, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10017)
!10013 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10014 = !DISubroutineType(types: !10015)
!10015 = !{!107, !10016, !1231, !145}
!10016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 32)
!10017 = !{!10018, !10019, !10020}
!10018 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10012, file: !10013, line: 38, type: !10016)
!10019 = !DILocalVariable(name: "callback", arg: 2, scope: !10012, file: !10013, line: 39, type: !1231)
!10020 = !DILocalVariable(name: "set", arg: 3, scope: !10012, file: !10013, line: 40, type: !145)
!10021 = !DILocation(line: 0, scope: !10012)
!10022 = !DILocation(line: 42, column: 2, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !10024, file: !10013, line: 42, column: 2)
!10024 = distinct !DILexicalBlock(scope: !10012, file: !10013, line: 42, column: 2)
!10025 = !DILocation(line: 42, column: 2, scope: !10024)
!10026 = !DILocation(line: 42, column: 2, scope: !10027)
!10027 = distinct !DILexicalBlock(scope: !10023, file: !10013, line: 42, column: 2)
!10028 = !DILocation(line: 43, column: 2, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !10030, file: !10013, line: 43, column: 2)
!10030 = distinct !DILexicalBlock(scope: !10012, file: !10013, line: 43, column: 2)
!10031 = !DILocation(line: 43, column: 2, scope: !10030)
!10032 = !DILocation(line: 43, column: 2, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10029, file: !10013, line: 43, column: 2)
!10034 = !DILocation(line: 45, column: 7, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !10012, file: !10013, line: 45, column: 6)
!10036 = !DILocation(line: 45, column: 6, scope: !10012)
!10037 = !DILocation(line: 46, column: 56, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10039, file: !10013, line: 46, column: 7)
!10039 = distinct !DILexicalBlock(scope: !10035, file: !10013, line: 45, column: 38)
!10040 = !DILocation(line: 46, column: 8, scope: !10038)
!10041 = !DILocation(line: 46, column: 7, scope: !10039)
!10042 = !DILocation(line: 51, column: 13, scope: !10035)
!10043 = !DILocation(line: 56, column: 43, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !10045, file: !10013, line: 55, column: 11)
!10045 = distinct !DILexicalBlock(scope: !10012, file: !10013, line: 55, column: 6)
!10046 = !DILocation(line: 56, column: 3, scope: !10044)
!10047 = !DILocation(line: 57, column: 2, scope: !10044)
!10048 = !DILocation(line: 60, column: 1, scope: !10012)
!10049 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1236, file: !1236, line: 261, type: !10050, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10052)
!10050 = !DISubroutineType(types: !10051)
!10051 = !{!145, !10016}
!10052 = !{!10053}
!10053 = !DILocalVariable(name: "list", arg: 1, scope: !10049, file: !1236, line: 261, type: !10016)
!10054 = !DILocation(line: 0, scope: !10049)
!10055 = !DILocation(line: 261, column: 1, scope: !10049)
!10056 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1236, file: !1236, line: 417, type: !10057, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10059)
!10057 = !DISubroutineType(types: !10058)
!10058 = !{!145, !10016, !1408}
!10059 = !{!10060, !10061, !10062, !10063}
!10060 = !DILocalVariable(name: "list", arg: 1, scope: !10056, file: !1236, line: 417, type: !10016)
!10061 = !DILocalVariable(name: "node", arg: 2, scope: !10056, file: !1236, line: 417, type: !1408)
!10062 = !DILocalVariable(name: "prev", scope: !10056, file: !1236, line: 417, type: !1408)
!10063 = !DILocalVariable(name: "test", scope: !10056, file: !1236, line: 417, type: !1408)
!10064 = !DILocation(line: 0, scope: !10056)
!10065 = !DILocation(line: 417, column: 1, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10056, file: !1236, line: 417, column: 1)
!10067 = !DILocation(line: 417, column: 1, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !10066, file: !1236, line: 417, column: 1)
!10069 = !DILocation(line: 417, column: 1, scope: !10070)
!10070 = distinct !DILexicalBlock(scope: !10071, file: !1236, line: 417, column: 1)
!10071 = distinct !DILexicalBlock(scope: !10068, file: !1236, line: 417, column: 1)
!10072 = !DILocation(line: 417, column: 1, scope: !10071)
!10073 = distinct !{!10073, !10065, !10065}
!10074 = !DILocation(line: 417, column: 1, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10070, file: !1236, line: 417, column: 1)
!10076 = !DILocation(line: 417, column: 1, scope: !10056)
!10077 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1236, file: !1236, line: 298, type: !10078, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10080)
!10078 = !DISubroutineType(types: !10079)
!10079 = !{null, !10016, !1408}
!10080 = !{!10081, !10082}
!10081 = !DILocalVariable(name: "list", arg: 1, scope: !10077, file: !1236, line: 298, type: !10016)
!10082 = !DILocalVariable(name: "node", arg: 2, scope: !10077, file: !1236, line: 298, type: !1408)
!10083 = !DILocation(line: 0, scope: !10077)
!10084 = !DILocation(line: 298, column: 1, scope: !10077)
!10085 = !DILocation(line: 298, column: 1, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10077, file: !1236, line: 298, column: 1)
!10087 = !DILocation(line: 298, column: 1, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10086, file: !1236, line: 298, column: 1)
!10089 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1236, file: !1236, line: 231, type: !10090, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10092)
!10090 = !DISubroutineType(types: !10091)
!10091 = !{!1408, !10016}
!10092 = !{!10093}
!10093 = !DILocalVariable(name: "list", arg: 1, scope: !10089, file: !1236, line: 231, type: !10016)
!10094 = !DILocation(line: 0, scope: !10089)
!10095 = !DILocation(line: 233, column: 15, scope: !10089)
!10096 = !DILocation(line: 233, column: 2, scope: !10089)
!10097 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1236, file: !1236, line: 209, type: !10098, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10100)
!10098 = !DISubroutineType(types: !10099)
!10099 = !{null, !1408, !1408}
!10100 = !{!10101, !10102}
!10101 = !DILocalVariable(name: "parent", arg: 1, scope: !10097, file: !1236, line: 209, type: !1408)
!10102 = !DILocalVariable(name: "child", arg: 2, scope: !10097, file: !1236, line: 209, type: !1408)
!10103 = !DILocation(line: 0, scope: !10097)
!10104 = !DILocation(line: 211, column: 10, scope: !10097)
!10105 = !DILocation(line: 211, column: 15, scope: !10097)
!10106 = !DILocation(line: 212, column: 1, scope: !10097)
!10107 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1236, file: !1236, line: 214, type: !10078, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10108)
!10108 = !{!10109, !10110}
!10109 = !DILocalVariable(name: "list", arg: 1, scope: !10107, file: !1236, line: 214, type: !10016)
!10110 = !DILocalVariable(name: "node", arg: 2, scope: !10107, file: !1236, line: 214, type: !1408)
!10111 = !DILocation(line: 0, scope: !10107)
!10112 = !DILocation(line: 216, column: 8, scope: !10107)
!10113 = !DILocation(line: 216, column: 13, scope: !10107)
!10114 = !DILocation(line: 217, column: 1, scope: !10107)
!10115 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1236, file: !1236, line: 243, type: !10090, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10116)
!10116 = !{!10117}
!10117 = !DILocalVariable(name: "list", arg: 1, scope: !10115, file: !1236, line: 243, type: !10016)
!10118 = !DILocation(line: 0, scope: !10115)
!10119 = !DILocation(line: 245, column: 15, scope: !10115)
!10120 = !DILocation(line: 245, column: 2, scope: !10115)
!10121 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1236, file: !1236, line: 219, type: !10078, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10122)
!10122 = !{!10123, !10124}
!10123 = !DILocalVariable(name: "list", arg: 1, scope: !10121, file: !1236, line: 219, type: !10016)
!10124 = !DILocalVariable(name: "node", arg: 2, scope: !10121, file: !1236, line: 219, type: !1408)
!10125 = !DILocation(line: 0, scope: !10121)
!10126 = !DILocation(line: 221, column: 8, scope: !10121)
!10127 = !DILocation(line: 221, column: 13, scope: !10121)
!10128 = !DILocation(line: 222, column: 1, scope: !10121)
!10129 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1236, file: !1236, line: 401, type: !10130, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10132)
!10130 = !DISubroutineType(types: !10131)
!10131 = !{null, !10016, !1408, !1408}
!10132 = !{!10133, !10134, !10135}
!10133 = !DILocalVariable(name: "list", arg: 1, scope: !10129, file: !1236, line: 401, type: !10016)
!10134 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10129, file: !1236, line: 401, type: !1408)
!10135 = !DILocalVariable(name: "node", arg: 3, scope: !10129, file: !1236, line: 401, type: !1408)
!10136 = !DILocation(line: 0, scope: !10129)
!10137 = !DILocation(line: 401, column: 1, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10129, file: !1236, line: 401, column: 1)
!10139 = !DILocation(line: 0, scope: !10138)
!10140 = !DILocation(line: 401, column: 1, scope: !10129)
!10141 = !DILocation(line: 401, column: 1, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10138, file: !1236, line: 401, column: 1)
!10143 = !DILocation(line: 401, column: 1, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10142, file: !1236, line: 401, column: 1)
!10145 = !DILocation(line: 401, column: 1, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10144, file: !1236, line: 401, column: 1)
!10147 = !DILocation(line: 401, column: 1, scope: !10148)
!10148 = distinct !DILexicalBlock(scope: !10138, file: !1236, line: 401, column: 1)
!10149 = !DILocation(line: 401, column: 1, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10148, file: !1236, line: 401, column: 1)
!10151 = !DILocation(line: 401, column: 1, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !10150, file: !1236, line: 401, column: 1)
!10153 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1236, file: !1236, line: 285, type: !10154, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10156)
!10154 = !DISubroutineType(types: !10155)
!10155 = !{!1408, !1408}
!10156 = !{!10157}
!10157 = !DILocalVariable(name: "node", arg: 1, scope: !10153, file: !1236, line: 285, type: !1408)
!10158 = !DILocation(line: 0, scope: !10153)
!10159 = !DILocation(line: 285, column: 1, scope: !10153)
!10160 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1236, file: !1236, line: 274, type: !10154, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10161)
!10161 = !{!10162}
!10162 = !DILocalVariable(name: "node", arg: 1, scope: !10160, file: !1236, line: 274, type: !1408)
!10163 = !DILocation(line: 0, scope: !10160)
!10164 = !DILocation(line: 274, column: 1, scope: !10160)
!10165 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1236, file: !1236, line: 204, type: !10154, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10166)
!10166 = !{!10167}
!10167 = !DILocalVariable(name: "node", arg: 1, scope: !10165, file: !1236, line: 204, type: !1408)
!10168 = !DILocation(line: 0, scope: !10165)
!10169 = !DILocation(line: 206, column: 15, scope: !10165)
!10170 = !DILocation(line: 206, column: 2, scope: !10165)
!10171 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1329, file: !1329, line: 342, type: !214, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10172)
!10172 = !{!10173, !10174, !10175}
!10173 = !DILocalVariable(name: "pin", arg: 1, scope: !10171, file: !1329, line: 342, type: !107)
!10174 = !DILocalVariable(name: "line", scope: !10171, file: !1329, line: 344, type: !152)
!10175 = !DILocalVariable(name: "port", scope: !10171, file: !1329, line: 345, type: !107)
!10176 = !DILocation(line: 0, scope: !10171)
!10177 = !DILocation(line: 344, column: 18, scope: !10171)
!10178 = !{i32 983040, i32 0}
!10179 = !DILocation(line: 356, column: 9, scope: !10171)
!10180 = !DILocation(line: 370, column: 2, scope: !10171)
!10181 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1329, file: !1329, line: 37, type: !879, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10182)
!10182 = !{!10183, !10184, !10185}
!10183 = !DILocalVariable(name: "line", arg: 1, scope: !10181, file: !1329, line: 37, type: !107)
!10184 = !DILocalVariable(name: "arg", arg: 2, scope: !10181, file: !1329, line: 37, type: !106)
!10185 = !DILocalVariable(name: "data", scope: !10181, file: !1329, line: 39, type: !9964)
!10186 = !DILocation(line: 0, scope: !10181)
!10187 = !DILocation(line: 41, column: 29, scope: !10181)
!10188 = !DILocation(line: 41, column: 39, scope: !10181)
!10189 = !DILocation(line: 41, column: 44, scope: !10181)
!10190 = !DILocation(line: 41, column: 2, scope: !10181)
!10191 = !DILocation(line: 42, column: 1, scope: !10181)
!10192 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1329, file: !1329, line: 376, type: !10193, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10195)
!10193 = !DISubroutineType(types: !10194)
!10194 = !{!107, !107, !107}
!10195 = !{!10196, !10197, !10198, !10200, !10201}
!10196 = !DILocalVariable(name: "port", arg: 1, scope: !10192, file: !1329, line: 376, type: !107)
!10197 = !DILocalVariable(name: "pin", arg: 2, scope: !10192, file: !1329, line: 376, type: !107)
!10198 = !DILocalVariable(name: "clk", scope: !10192, file: !1329, line: 386, type: !10199)
!10199 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1189)
!10200 = !DILocalVariable(name: "pclken", scope: !10192, file: !1329, line: 387, type: !1455)
!10201 = !DILocalVariable(name: "ret", scope: !10192, file: !1329, line: 396, type: !107)
!10202 = !DILocation(line: 0, scope: !10192)
!10203 = !DILocation(line: 387, column: 2, scope: !10192)
!10204 = !DILocation(line: 387, column: 22, scope: !10192)
!10205 = !DILocation(line: 399, column: 8, scope: !10192)
!10206 = !DILocation(line: 400, column: 10, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10192, file: !1329, line: 400, column: 6)
!10208 = !DILocation(line: 400, column: 6, scope: !10192)
!10209 = !DILocation(line: 405, column: 2, scope: !10192)
!10210 = !DILocation(line: 407, column: 2, scope: !10192)
!10211 = !DILocation(line: 408, column: 1, scope: !10192)
!10212 = distinct !DISubprogram(name: "clock_control_on", scope: !968, file: !968, line: 123, type: !1294, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10213)
!10213 = !{!10214, !10215, !10216}
!10214 = !DILocalVariable(name: "dev", arg: 1, scope: !10212, file: !968, line: 123, type: !1189)
!10215 = !DILocalVariable(name: "sys", arg: 2, scope: !10212, file: !968, line: 124, type: !1060)
!10216 = !DILocalVariable(name: "api", scope: !10212, file: !968, line: 126, type: !1287)
!10217 = !DILocation(line: 0, scope: !10212)
!10218 = !DILocation(line: 127, column: 49, scope: !10212)
!10219 = !DILocation(line: 129, column: 14, scope: !10212)
!10220 = !DILocation(line: 129, column: 9, scope: !10212)
!10221 = !DILocation(line: 129, column: 2, scope: !10212)
!10222 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1329, file: !1329, line: 311, type: !9327, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10223)
!10223 = !{!10224, !10225, !10226}
!10224 = !DILocalVariable(name: "port", arg: 1, scope: !10222, file: !1329, line: 311, type: !107)
!10225 = !DILocalVariable(name: "pin", arg: 2, scope: !10222, file: !1329, line: 311, type: !107)
!10226 = !DILocalVariable(name: "line", scope: !10222, file: !1329, line: 313, type: !152)
!10227 = !DILocation(line: 0, scope: !10222)
!10228 = !DILocation(line: 313, column: 18, scope: !10222)
!10229 = !DILocation(line: 337, column: 2, scope: !10222)
!10230 = !DILocation(line: 340, column: 1, scope: !10222)
!10231 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1329, file: !1329, line: 295, type: !10232, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10234)
!10232 = !DISubroutineType(types: !10233)
!10233 = !{!152, !107}
!10234 = !{!10235}
!10235 = !DILocalVariable(name: "pin", arg: 1, scope: !10231, file: !1329, line: 295, type: !107)
!10236 = !DILocation(line: 0, scope: !10231)
!10237 = !DILocation(line: 307, column: 46, scope: !10231)
!10238 = !DILocation(line: 307, column: 27, scope: !10231)
!10239 = !DILocation(line: 307, column: 32, scope: !10231)
!10240 = !DILocation(line: 307, column: 14, scope: !10231)
!10241 = !DILocation(line: 307, column: 39, scope: !10231)
!10242 = !DILocation(line: 307, column: 2, scope: !10231)
!10243 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5958, file: !5958, line: 671, type: !10244, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10246)
!10244 = !DISubroutineType(types: !10245)
!10245 = !{null, !152, !152}
!10246 = !{!10247, !10248}
!10247 = !DILocalVariable(name: "Port", arg: 1, scope: !10243, file: !5958, line: 671, type: !152)
!10248 = !DILocalVariable(name: "Line", arg: 2, scope: !10243, file: !5958, line: 671, type: !152)
!10249 = !DILocation(line: 0, scope: !10243)
!10250 = !DILocation(line: 673, column: 3, scope: !10243)
!10251 = !DILocalVariable(name: "value", arg: 1, scope: !10252, file: !6256, line: 373, type: !152)
!10252 = distinct !DISubprogram(name: "__RBIT", scope: !6256, file: !6256, line: 373, type: !7543, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10253)
!10253 = !{!10251, !10254}
!10254 = !DILocalVariable(name: "result", scope: !10252, file: !6256, line: 375, type: !152)
!10255 = !DILocation(line: 0, scope: !10252, inlinedAt: !10256)
!10256 = distinct !DILocation(line: 673, column: 3, scope: !10243)
!10257 = !DILocation(line: 380, column: 4, scope: !10252, inlinedAt: !10256)
!10258 = !{i64 3550315}
!10259 = !DILocalVariable(name: "value", arg: 1, scope: !10260, file: !6256, line: 403, type: !152)
!10260 = distinct !DISubprogram(name: "__CLZ", scope: !6256, file: !6256, line: 403, type: !10261, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10263)
!10261 = !DISubroutineType(types: !10262)
!10262 = !{!195, !152}
!10263 = !{!10259}
!10264 = !DILocation(line: 0, scope: !10260, inlinedAt: !10265)
!10265 = distinct !DILocation(line: 673, column: 3, scope: !10243)
!10266 = !DILocation(line: 414, column: 7, scope: !10260, inlinedAt: !10265)
!10267 = !DILocation(line: 674, column: 1, scope: !10243)
!10268 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10013, file: !10013, line: 69, type: !10269, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10271)
!10269 = !DISubroutineType(types: !10270)
!10270 = !{null, !10016, !1189, !152}
!10271 = !{!10272, !10273, !10274, !10275, !10276}
!10272 = !DILocalVariable(name: "list", arg: 1, scope: !10268, file: !10013, line: 69, type: !10016)
!10273 = !DILocalVariable(name: "port", arg: 2, scope: !10268, file: !10013, line: 70, type: !1189)
!10274 = !DILocalVariable(name: "pins", arg: 3, scope: !10268, file: !10013, line: 71, type: !152)
!10275 = !DILocalVariable(name: "cb", scope: !10268, file: !10013, line: 73, type: !1231)
!10276 = !DILocalVariable(name: "tmp", scope: !10268, file: !10013, line: 73, type: !1231)
!10277 = !DILocation(line: 0, scope: !10268)
!10278 = !DILocation(line: 75, column: 2, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10268, file: !10013, line: 75, column: 2)
!10280 = !DILocation(line: 0, scope: !10279)
!10281 = !DILocation(line: 76, column: 11, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10283, file: !10013, line: 76, column: 7)
!10283 = distinct !DILexicalBlock(scope: !10284, file: !10013, line: 75, column: 57)
!10284 = distinct !DILexicalBlock(scope: !10279, file: !10013, line: 75, column: 2)
!10285 = !DILocation(line: 76, column: 20, scope: !10282)
!10286 = !DILocation(line: 76, column: 7, scope: !10283)
!10287 = !DILocation(line: 77, column: 4, scope: !10288)
!10288 = distinct !DILexicalBlock(scope: !10289, file: !10013, line: 77, column: 4)
!10289 = distinct !DILexicalBlock(scope: !10290, file: !10013, line: 77, column: 4)
!10290 = distinct !DILexicalBlock(scope: !10282, file: !10013, line: 76, column: 28)
!10291 = !DILocation(line: 77, column: 4, scope: !10289)
!10292 = !DILocation(line: 77, column: 4, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10288, file: !10013, line: 77, column: 4)
!10294 = !DILocation(line: 78, column: 4, scope: !10290)
!10295 = !DILocation(line: 79, column: 3, scope: !10290)
!10296 = !DILocation(line: 75, column: 2, scope: !10284)
!10297 = !DILocation(line: 81, column: 1, scope: !10268)
!10298 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5958, file: !5958, line: 710, type: !7543, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10299)
!10299 = !{!10300}
!10300 = !DILocalVariable(name: "Line", arg: 1, scope: !10298, file: !5958, line: 710, type: !152)
!10301 = !DILocation(line: 0, scope: !10298)
!10302 = !DILocation(line: 712, column: 21, scope: !10298)
!10303 = !DILocation(line: 0, scope: !10252, inlinedAt: !10304)
!10304 = distinct !DILocation(line: 712, column: 76, scope: !10298)
!10305 = !DILocation(line: 380, column: 4, scope: !10252, inlinedAt: !10304)
!10306 = !DILocation(line: 0, scope: !10260, inlinedAt: !10307)
!10307 = distinct !DILocation(line: 712, column: 76, scope: !10298)
!10308 = !DILocation(line: 414, column: 7, scope: !10260, inlinedAt: !10307)
!10309 = !DILocation(line: 712, column: 73, scope: !10298)
!10310 = !DILocation(line: 712, column: 3, scope: !10298)
!10311 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10312, file: !10312, line: 910, type: !10313, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10315)
!10312 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10313 = !DISubroutineType(types: !10314)
!10314 = !{null, !1262, !152}
!10315 = !{!10316, !10317}
!10316 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10311, file: !10312, line: 910, type: !1262)
!10317 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10311, file: !10312, line: 910, type: !152)
!10318 = !DILocation(line: 0, scope: !10311)
!10319 = !DILocation(line: 912, column: 3, scope: !10311)
!10320 = !DILocation(line: 913, column: 1, scope: !10311)
!10321 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10312, file: !10312, line: 823, type: !10322, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10324)
!10322 = !DISubroutineType(types: !10323)
!10323 = !{!152, !1262}
!10324 = !{!10325}
!10325 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10321, file: !10312, line: 823, type: !1262)
!10326 = !DILocation(line: 0, scope: !10321)
!10327 = !DILocation(line: 825, column: 21, scope: !10321)
!10328 = !DILocation(line: 825, column: 3, scope: !10321)
!10329 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10312, file: !10312, line: 812, type: !10313, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10330)
!10330 = !{!10331, !10332}
!10331 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10329, file: !10312, line: 812, type: !1262)
!10332 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10329, file: !10312, line: 812, type: !152)
!10333 = !DILocation(line: 0, scope: !10329)
!10334 = !DILocation(line: 814, column: 3, scope: !10329)
!10335 = !DILocation(line: 815, column: 1, scope: !10329)
!10336 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10312, file: !10312, line: 771, type: !10322, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10337)
!10337 = !{!10338}
!10338 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10336, file: !10312, line: 771, type: !1262)
!10339 = !DILocation(line: 0, scope: !10336)
!10340 = !DILocation(line: 773, column: 21, scope: !10336)
!10341 = !DILocation(line: 773, column: 3, scope: !10336)
!10342 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1329, file: !1329, line: 47, type: !10343, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10345)
!10343 = !DISubroutineType(types: !10344)
!10344 = !{!107, !1205, !187}
!10345 = !{!10346, !10347}
!10346 = !DILocalVariable(name: "flags", arg: 1, scope: !10342, file: !1329, line: 47, type: !1205)
!10347 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10342, file: !1329, line: 47, type: !187)
!10348 = !DILocation(line: 0, scope: !10342)
!10349 = !DILocation(line: 50, column: 13, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !10342, file: !1329, line: 50, column: 6)
!10351 = !DILocation(line: 50, column: 28, scope: !10350)
!10352 = !DILocation(line: 50, column: 6, scope: !10342)
!10353 = !DILocation(line: 53, column: 11, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !10350, file: !1329, line: 50, column: 34)
!10355 = !DILocation(line: 55, column: 14, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10354, file: !1329, line: 55, column: 7)
!10357 = !DILocation(line: 55, column: 35, scope: !10356)
!10358 = !DILocation(line: 55, column: 7, scope: !10354)
!10359 = !DILocation(line: 56, column: 14, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10361, file: !1329, line: 56, column: 8)
!10361 = distinct !DILexicalBlock(scope: !10356, file: !1329, line: 55, column: 41)
!10362 = !DILocation(line: 56, column: 8, scope: !10361)
!10363 = !DILocation(line: 0, scope: !10356)
!10364 = !DILocation(line: 66, column: 14, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !10354, file: !1329, line: 66, column: 7)
!10366 = !DILocation(line: 66, column: 30, scope: !10365)
!10367 = !DILocation(line: 66, column: 7, scope: !10354)
!10368 = !DILocation(line: 67, column: 12, scope: !10369)
!10369 = distinct !DILexicalBlock(scope: !10365, file: !1329, line: 66, column: 36)
!10370 = !DILocation(line: 68, column: 3, scope: !10369)
!10371 = !DILocation(line: 68, column: 21, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !10365, file: !1329, line: 68, column: 14)
!10373 = !DILocation(line: 68, column: 39, scope: !10372)
!10374 = !DILocation(line: 68, column: 14, scope: !10365)
!10375 = !DILocation(line: 69, column: 12, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10372, file: !1329, line: 68, column: 45)
!10377 = !DILocation(line: 70, column: 3, scope: !10376)
!10378 = !DILocation(line: 72, column: 21, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10350, file: !1329, line: 72, column: 14)
!10380 = !DILocation(line: 72, column: 35, scope: !10379)
!10381 = !DILocation(line: 72, column: 14, scope: !10350)
!10382 = !DILocation(line: 77, column: 14, scope: !10383)
!10383 = distinct !DILexicalBlock(scope: !10384, file: !1329, line: 77, column: 7)
!10384 = distinct !DILexicalBlock(scope: !10379, file: !1329, line: 72, column: 41)
!10385 = !DILocation(line: 77, column: 30, scope: !10383)
!10386 = !DILocation(line: 77, column: 7, scope: !10384)
!10387 = !DILocation(line: 0, scope: !10350)
!10388 = !DILocation(line: 90, column: 1, scope: !10342)
!10389 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1329, file: !1329, line: 157, type: !10390, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10392)
!10390 = !DISubroutineType(types: !10391)
!10391 = !{null, !1189, !107, !107, !107}
!10392 = !{!10393, !10394, !10395, !10396, !10397, !10398, !10399, !10400, !10401, !10402, !10403}
!10393 = !DILocalVariable(name: "dev", arg: 1, scope: !10389, file: !1329, line: 157, type: !1189)
!10394 = !DILocalVariable(name: "pin", arg: 2, scope: !10389, file: !1329, line: 157, type: !107)
!10395 = !DILocalVariable(name: "conf", arg: 3, scope: !10389, file: !1329, line: 158, type: !107)
!10396 = !DILocalVariable(name: "func", arg: 4, scope: !10389, file: !1329, line: 158, type: !107)
!10397 = !DILocalVariable(name: "cfg", scope: !10389, file: !1329, line: 160, type: !9897)
!10398 = !DILocalVariable(name: "gpio", scope: !10389, file: !1329, line: 161, type: !1262)
!10399 = !DILocalVariable(name: "pin_ll", scope: !10389, file: !1329, line: 163, type: !107)
!10400 = !DILocalVariable(name: "mode", scope: !10389, file: !1329, line: 227, type: !32)
!10401 = !DILocalVariable(name: "otype", scope: !10389, file: !1329, line: 227, type: !32)
!10402 = !DILocalVariable(name: "ospeed", scope: !10389, file: !1329, line: 227, type: !32)
!10403 = !DILocalVariable(name: "pupd", scope: !10389, file: !1329, line: 227, type: !32)
!10404 = !DILocation(line: 0, scope: !10389)
!10405 = !DILocation(line: 160, column: 45, scope: !10389)
!10406 = !DILocation(line: 161, column: 44, scope: !10389)
!10407 = !DILocation(line: 163, column: 15, scope: !10389)
!10408 = !DILocation(line: 229, column: 14, scope: !10389)
!10409 = !DILocation(line: 246, column: 47, scope: !10389)
!10410 = !DILocation(line: 246, column: 2, scope: !10389)
!10411 = !DILocation(line: 248, column: 43, scope: !10389)
!10412 = !DILocation(line: 248, column: 2, scope: !10389)
!10413 = !DILocation(line: 250, column: 40, scope: !10389)
!10414 = !DILocation(line: 250, column: 2, scope: !10389)
!10415 = !DILocation(line: 252, column: 11, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10389, file: !1329, line: 252, column: 6)
!10417 = !DILocation(line: 252, column: 6, scope: !10389)
!10418 = !DILocation(line: 253, column: 11, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10420, file: !1329, line: 253, column: 7)
!10420 = distinct !DILexicalBlock(scope: !10416, file: !1329, line: 252, column: 36)
!10421 = !DILocation(line: 253, column: 7, scope: !10420)
!10422 = !DILocation(line: 254, column: 4, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10419, file: !1329, line: 253, column: 16)
!10424 = !DILocation(line: 255, column: 3, scope: !10423)
!10425 = !DILocation(line: 256, column: 4, scope: !10426)
!10426 = distinct !DILexicalBlock(scope: !10419, file: !1329, line: 255, column: 10)
!10427 = !DILocation(line: 260, column: 40, scope: !10389)
!10428 = !DILocation(line: 260, column: 2, scope: !10389)
!10429 = !DILocation(line: 265, column: 1, scope: !10389)
!10430 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1329, file: !1329, line: 137, type: !10232, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10431)
!10431 = !{!10432, !10433}
!10432 = !DILocalVariable(name: "pin", arg: 1, scope: !10430, file: !1329, line: 137, type: !107)
!10433 = !DILocalVariable(name: "pinval", scope: !10430, file: !1329, line: 139, type: !152)
!10434 = !DILocation(line: 0, scope: !10430)
!10435 = !DILocation(line: 149, column: 13, scope: !10430)
!10436 = !DILocation(line: 151, column: 2, scope: !10430)
!10437 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10312, file: !10312, line: 342, type: !10438, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10440)
!10438 = !DISubroutineType(types: !10439)
!10439 = !{null, !1262, !152, !152}
!10440 = !{!10441, !10442, !10443}
!10441 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10437, file: !10312, line: 342, type: !1262)
!10442 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10437, file: !10312, line: 342, type: !152)
!10443 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10437, file: !10312, line: 342, type: !152)
!10444 = !DILocation(line: 0, scope: !10437)
!10445 = !DILocation(line: 344, column: 3, scope: !10437)
!10446 = !DILocation(line: 345, column: 1, scope: !10437)
!10447 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10312, file: !10312, line: 413, type: !10438, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10448)
!10448 = !{!10449, !10450, !10451}
!10449 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10447, file: !10312, line: 413, type: !1262)
!10450 = !DILocalVariable(name: "Pin", arg: 2, scope: !10447, file: !10312, line: 413, type: !152)
!10451 = !DILocalVariable(name: "Speed", arg: 3, scope: !10447, file: !10312, line: 413, type: !152)
!10452 = !DILocation(line: 0, scope: !10447)
!10453 = !DILocation(line: 415, column: 3, scope: !10447)
!10454 = !DILocation(line: 0, scope: !10252, inlinedAt: !10455)
!10455 = distinct !DILocation(line: 415, column: 3, scope: !10447)
!10456 = !DILocation(line: 380, column: 4, scope: !10252, inlinedAt: !10455)
!10457 = !DILocation(line: 0, scope: !10260, inlinedAt: !10458)
!10458 = distinct !DILocation(line: 415, column: 3, scope: !10447)
!10459 = !DILocation(line: 414, column: 7, scope: !10260, inlinedAt: !10458)
!10460 = !DILocation(line: 0, scope: !10252, inlinedAt: !10461)
!10461 = distinct !DILocation(line: 415, column: 3, scope: !10447)
!10462 = !DILocation(line: 0, scope: !10260, inlinedAt: !10463)
!10463 = distinct !DILocation(line: 415, column: 3, scope: !10447)
!10464 = !DILocation(line: 417, column: 1, scope: !10447)
!10465 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10312, file: !10312, line: 484, type: !10438, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10466)
!10466 = !{!10467, !10468, !10469}
!10467 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10465, file: !10312, line: 484, type: !1262)
!10468 = !DILocalVariable(name: "Pin", arg: 2, scope: !10465, file: !10312, line: 484, type: !152)
!10469 = !DILocalVariable(name: "Pull", arg: 3, scope: !10465, file: !10312, line: 484, type: !152)
!10470 = !DILocation(line: 0, scope: !10465)
!10471 = !DILocation(line: 486, column: 3, scope: !10465)
!10472 = !DILocation(line: 0, scope: !10252, inlinedAt: !10473)
!10473 = distinct !DILocation(line: 486, column: 3, scope: !10465)
!10474 = !DILocation(line: 380, column: 4, scope: !10252, inlinedAt: !10473)
!10475 = !DILocation(line: 0, scope: !10260, inlinedAt: !10476)
!10476 = distinct !DILocation(line: 486, column: 3, scope: !10465)
!10477 = !DILocation(line: 414, column: 7, scope: !10260, inlinedAt: !10476)
!10478 = !DILocation(line: 0, scope: !10252, inlinedAt: !10479)
!10479 = distinct !DILocation(line: 486, column: 3, scope: !10465)
!10480 = !DILocation(line: 0, scope: !10260, inlinedAt: !10481)
!10481 = distinct !DILocation(line: 486, column: 3, scope: !10465)
!10482 = !DILocation(line: 487, column: 1, scope: !10465)
!10483 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10312, file: !10312, line: 556, type: !10438, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10484)
!10484 = !{!10485, !10486, !10487}
!10485 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10483, file: !10312, line: 556, type: !1262)
!10486 = !DILocalVariable(name: "Pin", arg: 2, scope: !10483, file: !10312, line: 556, type: !152)
!10487 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10483, file: !10312, line: 556, type: !152)
!10488 = !DILocation(line: 0, scope: !10483)
!10489 = !DILocation(line: 558, column: 3, scope: !10483)
!10490 = !DILocation(line: 0, scope: !10252, inlinedAt: !10491)
!10491 = distinct !DILocation(line: 558, column: 3, scope: !10483)
!10492 = !DILocation(line: 380, column: 4, scope: !10252, inlinedAt: !10491)
!10493 = !DILocation(line: 0, scope: !10260, inlinedAt: !10494)
!10494 = distinct !DILocation(line: 558, column: 3, scope: !10483)
!10495 = !DILocation(line: 414, column: 7, scope: !10260, inlinedAt: !10494)
!10496 = !DILocation(line: 0, scope: !10252, inlinedAt: !10497)
!10497 = distinct !DILocation(line: 558, column: 3, scope: !10483)
!10498 = !DILocation(line: 0, scope: !10260, inlinedAt: !10499)
!10499 = distinct !DILocation(line: 558, column: 3, scope: !10483)
!10500 = !DILocation(line: 560, column: 1, scope: !10483)
!10501 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10312, file: !10312, line: 633, type: !10438, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10502)
!10502 = !{!10503, !10504, !10505}
!10503 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10501, file: !10312, line: 633, type: !1262)
!10504 = !DILocalVariable(name: "Pin", arg: 2, scope: !10501, file: !10312, line: 633, type: !152)
!10505 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10501, file: !10312, line: 633, type: !152)
!10506 = !DILocation(line: 0, scope: !10501)
!10507 = !DILocation(line: 635, column: 3, scope: !10501)
!10508 = !DILocation(line: 0, scope: !10252, inlinedAt: !10509)
!10509 = distinct !DILocation(line: 635, column: 3, scope: !10501)
!10510 = !DILocation(line: 380, column: 4, scope: !10252, inlinedAt: !10509)
!10511 = !DILocation(line: 0, scope: !10260, inlinedAt: !10512)
!10512 = distinct !DILocation(line: 635, column: 3, scope: !10501)
!10513 = !DILocation(line: 414, column: 7, scope: !10260, inlinedAt: !10512)
!10514 = !DILocation(line: 0, scope: !10252, inlinedAt: !10515)
!10515 = distinct !DILocation(line: 635, column: 3, scope: !10501)
!10516 = !DILocation(line: 0, scope: !10260, inlinedAt: !10517)
!10517 = distinct !DILocation(line: 635, column: 3, scope: !10501)
!10518 = !DILocation(line: 637, column: 1, scope: !10501)
!10519 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10312, file: !10312, line: 273, type: !10438, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10520)
!10520 = !{!10521, !10522, !10523}
!10521 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10519, file: !10312, line: 273, type: !1262)
!10522 = !DILocalVariable(name: "Pin", arg: 2, scope: !10519, file: !10312, line: 273, type: !152)
!10523 = !DILocalVariable(name: "Mode", arg: 3, scope: !10519, file: !10312, line: 273, type: !152)
!10524 = !DILocation(line: 0, scope: !10519)
!10525 = !DILocation(line: 275, column: 3, scope: !10519)
!10526 = !DILocation(line: 0, scope: !10252, inlinedAt: !10527)
!10527 = distinct !DILocation(line: 275, column: 3, scope: !10519)
!10528 = !DILocation(line: 380, column: 4, scope: !10252, inlinedAt: !10527)
!10529 = !DILocation(line: 0, scope: !10260, inlinedAt: !10530)
!10530 = distinct !DILocation(line: 275, column: 3, scope: !10519)
!10531 = !DILocation(line: 414, column: 7, scope: !10260, inlinedAt: !10530)
!10532 = !DILocation(line: 0, scope: !10252, inlinedAt: !10533)
!10533 = distinct !DILocation(line: 275, column: 3, scope: !10519)
!10534 = !DILocation(line: 0, scope: !10260, inlinedAt: !10535)
!10535 = distinct !DILocation(line: 275, column: 3, scope: !10519)
!10536 = !DILocation(line: 276, column: 1, scope: !10519)
!10537 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1329, file: !1329, line: 698, type: !1342, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10538)
!10538 = !{!10539, !10540, !10541}
!10539 = !DILocalVariable(name: "dev", arg: 1, scope: !10537, file: !1329, line: 698, type: !1189)
!10540 = !DILocalVariable(name: "data", scope: !10537, file: !1329, line: 700, type: !9964)
!10541 = !DILocalVariable(name: "ret", scope: !10537, file: !1329, line: 701, type: !107)
!10542 = !DILocation(line: 0, scope: !10537)
!10543 = !DILocation(line: 700, column: 38, scope: !10537)
!10544 = !DILocation(line: 703, column: 8, scope: !10537)
!10545 = !DILocation(line: 703, column: 12, scope: !10537)
!10546 = !DILocation(line: 705, column: 7, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10537, file: !1329, line: 705, column: 6)
!10548 = !DILocation(line: 705, column: 6, scope: !10537)
!10549 = !DILocation(line: 722, column: 8, scope: !10537)
!10550 = !DILocation(line: 723, column: 10, scope: !10551)
!10551 = distinct !DILexicalBlock(scope: !10537, file: !1329, line: 723, column: 6)
!10552 = !DILocation(line: 723, column: 6, scope: !10537)
!10553 = !DILocation(line: 731, column: 1, scope: !10537)
!10554 = distinct !DISubprogram(name: "device_is_ready", scope: !9742, file: !9742, line: 47, type: !10555, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10557)
!10555 = !DISubroutineType(types: !10556)
!10556 = !{!145, !1189}
!10557 = !{!10558}
!10558 = !DILocalVariable(name: "dev", arg: 1, scope: !10554, file: !9742, line: 47, type: !1189)
!10559 = !DILocation(line: 0, scope: !10554)
!10560 = !DILocation(line: 55, column: 2, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !10554, file: !9742, line: 55, column: 2)
!10562 = !{i64 2155046870}
!10563 = !DILocation(line: 56, column: 9, scope: !10554)
!10564 = !DILocation(line: 56, column: 2, scope: !10554)
!10565 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1329, file: !1329, line: 270, type: !10566, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10568)
!10566 = !DISubroutineType(types: !10567)
!10567 = !{!107, !1189, !145}
!10568 = !{!10569, !10570, !10571, !10572, !10573}
!10569 = !DILocalVariable(name: "dev", arg: 1, scope: !10565, file: !1329, line: 270, type: !1189)
!10570 = !DILocalVariable(name: "on", arg: 2, scope: !10565, file: !1329, line: 270, type: !145)
!10571 = !DILocalVariable(name: "cfg", scope: !10565, file: !1329, line: 272, type: !9897)
!10572 = !DILocalVariable(name: "ret", scope: !10565, file: !1329, line: 273, type: !107)
!10573 = !DILocalVariable(name: "clk", scope: !10565, file: !1329, line: 278, type: !10199)
!10574 = !DILocation(line: 0, scope: !10565)
!10575 = !DILocation(line: 272, column: 45, scope: !10565)
!10576 = !DILocation(line: 282, column: 38, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10578, file: !1329, line: 280, column: 10)
!10578 = distinct !DILexicalBlock(scope: !10565, file: !1329, line: 280, column: 6)
!10579 = !DILocation(line: 282, column: 6, scope: !10577)
!10580 = !DILocation(line: 281, column: 9, scope: !10577)
!10581 = !DILocation(line: 293, column: 1, scope: !10565)
!10582 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !10555, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10583)
!10583 = !{!10584}
!10584 = !DILocalVariable(name: "dev", arg: 1, scope: !10582, file: !247, line: 730, type: !1189)
!10585 = !DILocation(line: 0, scope: !10582)
!10586 = !DILocation(line: 732, column: 9, scope: !10582)
!10587 = !DILocation(line: 732, column: 2, scope: !10582)
!10588 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1329, file: !1329, line: 496, type: !10589, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10591)
!10589 = !DISubroutineType(types: !10590)
!10590 = !{!107, !1189, !107, !107, !107}
!10591 = !{!10592, !10593, !10594, !10595, !10596, !10597}
!10592 = !DILocalVariable(name: "dev", arg: 1, scope: !10588, file: !1329, line: 496, type: !1189)
!10593 = !DILocalVariable(name: "pin", arg: 2, scope: !10588, file: !1329, line: 496, type: !107)
!10594 = !DILocalVariable(name: "conf", arg: 3, scope: !10588, file: !1329, line: 496, type: !107)
!10595 = !DILocalVariable(name: "func", arg: 4, scope: !10588, file: !1329, line: 496, type: !107)
!10596 = !DILocalVariable(name: "ret", scope: !10588, file: !1329, line: 498, type: !107)
!10597 = !DILocalVariable(name: "gpio_out", scope: !10598, file: !1329, line: 508, type: !152)
!10598 = distinct !DILexicalBlock(scope: !10599, file: !1329, line: 507, column: 27)
!10599 = distinct !DILexicalBlock(scope: !10588, file: !1329, line: 507, column: 6)
!10600 = !DILocation(line: 0, scope: !10588)
!10601 = !DILocation(line: 505, column: 2, scope: !10588)
!10602 = !DILocation(line: 507, column: 11, scope: !10599)
!10603 = !DILocation(line: 507, column: 6, scope: !10588)
!10604 = !DILocation(line: 508, column: 28, scope: !10598)
!10605 = !DILocation(line: 0, scope: !10598)
!10606 = !DILocation(line: 510, column: 16, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10598, file: !1329, line: 510, column: 7)
!10608 = !DILocation(line: 0, scope: !10607)
!10609 = !DILocation(line: 510, column: 7, scope: !10598)
!10610 = !DILocation(line: 511, column: 4, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10607, file: !1329, line: 510, column: 32)
!10612 = !DILocation(line: 512, column: 3, scope: !10611)
!10613 = !DILocation(line: 513, column: 4, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !10615, file: !1329, line: 512, column: 39)
!10615 = distinct !DILexicalBlock(scope: !10607, file: !1329, line: 512, column: 14)
!10616 = !DILocation(line: 514, column: 3, scope: !10614)
!10617 = !DILocation(line: 518, column: 1, scope: !10588)
!10618 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1614, file: !1614, line: 526, type: !1517, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10619)
!10619 = !{!10620, !10621, !10622}
!10620 = !DILocalVariable(name: "dev", arg: 1, scope: !10618, file: !1614, line: 526, type: !1519)
!10621 = !DILocalVariable(name: "c", arg: 2, scope: !10618, file: !1614, line: 526, type: !1121)
!10622 = !DILocalVariable(name: "config", scope: !10618, file: !1614, line: 528, type: !10623)
!10623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 32)
!10624 = !DILocation(line: 0, scope: !10618)
!10625 = !DILocation(line: 528, column: 48, scope: !10618)
!10626 = !DILocation(line: 531, column: 40, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10618, file: !1614, line: 531, column: 6)
!10628 = !DILocation(line: 531, column: 6, scope: !10627)
!10629 = !DILocation(line: 531, column: 6, scope: !10618)
!10630 = !DILocation(line: 532, column: 34, scope: !10631)
!10631 = distinct !DILexicalBlock(scope: !10627, file: !1614, line: 531, column: 48)
!10632 = !DILocation(line: 532, column: 3, scope: !10631)
!10633 = !DILocation(line: 533, column: 2, scope: !10631)
!10634 = !DILocation(line: 539, column: 42, scope: !10635)
!10635 = distinct !DILexicalBlock(scope: !10618, file: !1614, line: 539, column: 6)
!10636 = !DILocation(line: 539, column: 7, scope: !10635)
!10637 = !DILocation(line: 539, column: 6, scope: !10618)
!10638 = !DILocation(line: 543, column: 52, scope: !10618)
!10639 = !DILocation(line: 543, column: 22, scope: !10618)
!10640 = !DILocation(line: 543, column: 5, scope: !10618)
!10641 = !DILocation(line: 545, column: 2, scope: !10618)
!10642 = !DILocation(line: 546, column: 1, scope: !10618)
!10643 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1614, file: !1614, line: 548, type: !1536, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10644)
!10644 = !{!10645, !10646, !10647, !10648}
!10645 = !DILocalVariable(name: "dev", arg: 1, scope: !10643, file: !1614, line: 548, type: !1519)
!10646 = !DILocalVariable(name: "c", arg: 2, scope: !10643, file: !1614, line: 549, type: !196)
!10647 = !DILocalVariable(name: "config", scope: !10643, file: !1614, line: 551, type: !10623)
!10648 = !DILocalVariable(name: "key", scope: !10643, file: !1614, line: 555, type: !32)
!10649 = !DILocation(line: 0, scope: !10643)
!10650 = !DILocation(line: 551, column: 48, scope: !10643)
!10651 = !DILocation(line: 562, column: 2, scope: !10643)
!10652 = !DILocation(line: 563, column: 41, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10654, file: !1614, line: 563, column: 7)
!10654 = distinct !DILexicalBlock(scope: !10643, file: !1614, line: 562, column: 12)
!10655 = !DILocation(line: 563, column: 7, scope: !10653)
!10656 = !DILocation(line: 563, column: 7, scope: !10654)
!10657 = !DILocation(line: 55, column: 2, scope: !10658, inlinedAt: !10662)
!10658 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5937, file: !5937, line: 42, type: !5938, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10659)
!10659 = !{!10660, !10661}
!10660 = !DILocalVariable(name: "key", scope: !10658, file: !5937, line: 44, type: !32)
!10661 = !DILocalVariable(name: "tmp", scope: !10658, file: !5937, line: 53, type: !32)
!10662 = distinct !DILocation(line: 564, column: 10, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10653, file: !1614, line: 563, column: 49)
!10664 = !{i64 2275986}
!10665 = !DILocation(line: 0, scope: !10658, inlinedAt: !10662)
!10666 = !DILocation(line: 565, column: 42, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10663, file: !1614, line: 565, column: 8)
!10668 = !DILocation(line: 565, column: 8, scope: !10667)
!10669 = !DILocation(line: 565, column: 8, scope: !10663)
!10670 = !DILocalVariable(name: "key", arg: 1, scope: !10671, file: !5937, line: 84, type: !32)
!10671 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5937, file: !5937, line: 84, type: !5948, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10672)
!10672 = !{!10670}
!10673 = !DILocation(line: 0, scope: !10671, inlinedAt: !10674)
!10674 = distinct !DILocation(line: 568, column: 4, scope: !10663)
!10675 = !DILocation(line: 95, column: 2, scope: !10671, inlinedAt: !10674)
!10676 = !{i64 2276803}
!10677 = !DILocation(line: 569, column: 3, scope: !10663)
!10678 = distinct !{!10678, !10651, !10679}
!10679 = !DILocation(line: 570, column: 2, scope: !10643)
!10680 = !DILocation(line: 592, column: 33, scope: !10643)
!10681 = !DILocation(line: 592, column: 2, scope: !10643)
!10682 = !DILocation(line: 0, scope: !10671, inlinedAt: !10683)
!10683 = distinct !DILocation(line: 593, column: 2, scope: !10643)
!10684 = !DILocation(line: 95, column: 2, scope: !10671, inlinedAt: !10683)
!10685 = !DILocation(line: 594, column: 1, scope: !10643)
!10686 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1614, file: !1614, line: 596, type: !1540, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10687)
!10687 = !{!10688, !10689, !10690}
!10688 = !DILocalVariable(name: "dev", arg: 1, scope: !10686, file: !1614, line: 596, type: !1519)
!10689 = !DILocalVariable(name: "config", scope: !10686, file: !1614, line: 598, type: !10623)
!10690 = !DILocalVariable(name: "err", scope: !10686, file: !1614, line: 599, type: !152)
!10691 = !DILocation(line: 0, scope: !10686)
!10692 = !DILocation(line: 598, column: 48, scope: !10686)
!10693 = !DILocation(line: 606, column: 40, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10686, file: !1614, line: 606, column: 6)
!10695 = !DILocation(line: 606, column: 6, scope: !10694)
!10696 = !DILocation(line: 606, column: 6, scope: !10686)
!10697 = !DILocation(line: 610, column: 39, scope: !10698)
!10698 = distinct !DILexicalBlock(scope: !10686, file: !1614, line: 610, column: 6)
!10699 = !DILocation(line: 610, column: 6, scope: !10698)
!10700 = !DILocation(line: 610, column: 6, scope: !10686)
!10701 = !DILocation(line: 614, column: 39, scope: !10702)
!10702 = distinct !DILexicalBlock(scope: !10686, file: !1614, line: 614, column: 6)
!10703 = !DILocation(line: 614, column: 6, scope: !10702)
!10704 = !DILocation(line: 614, column: 6, scope: !10686)
!10705 = !DILocation(line: 619, column: 40, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10686, file: !1614, line: 619, column: 6)
!10707 = !DILocation(line: 619, column: 6, scope: !10706)
!10708 = !DILocation(line: 619, column: 6, scope: !10686)
!10709 = !DILocation(line: 623, column: 10, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10686, file: !1614, line: 623, column: 6)
!10711 = !DILocation(line: 623, column: 6, scope: !10686)
!10712 = !DILocation(line: 624, column: 34, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10710, file: !1614, line: 623, column: 24)
!10714 = !DILocation(line: 624, column: 3, scope: !10713)
!10715 = !DILocation(line: 625, column: 2, scope: !10713)
!10716 = !DILocation(line: 632, column: 10, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10686, file: !1614, line: 632, column: 6)
!10718 = !DILocation(line: 632, column: 6, scope: !10686)
!10719 = !DILocation(line: 633, column: 34, scope: !10720)
!10720 = distinct !DILexicalBlock(scope: !10717, file: !1614, line: 632, column: 32)
!10721 = !DILocation(line: 633, column: 3, scope: !10720)
!10722 = !DILocation(line: 634, column: 2, scope: !10720)
!10723 = !DILocation(line: 636, column: 10, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10686, file: !1614, line: 636, column: 6)
!10725 = !DILocation(line: 636, column: 6, scope: !10686)
!10726 = !DILocation(line: 637, column: 33, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10724, file: !1614, line: 636, column: 31)
!10728 = !DILocation(line: 637, column: 3, scope: !10727)
!10729 = !DILocation(line: 638, column: 2, scope: !10727)
!10730 = !DILocation(line: 640, column: 10, scope: !10731)
!10731 = distinct !DILexicalBlock(scope: !10686, file: !1614, line: 640, column: 6)
!10732 = !DILocation(line: 640, column: 6, scope: !10686)
!10733 = !DILocation(line: 641, column: 33, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !10731, file: !1614, line: 640, column: 32)
!10735 = !DILocation(line: 641, column: 3, scope: !10734)
!10736 = !DILocation(line: 642, column: 2, scope: !10734)
!10737 = !DILocation(line: 646, column: 32, scope: !10686)
!10738 = !DILocation(line: 646, column: 2, scope: !10686)
!10739 = !DILocation(line: 648, column: 2, scope: !10686)
!10740 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1614, file: !1614, line: 419, type: !1544, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10741)
!10741 = !{!10742, !10743, !10744, !10745, !10747, !10748, !10749, !10750}
!10742 = !DILocalVariable(name: "dev", arg: 1, scope: !10740, file: !1614, line: 419, type: !1519)
!10743 = !DILocalVariable(name: "cfg", arg: 2, scope: !10740, file: !1614, line: 420, type: !1546)
!10744 = !DILocalVariable(name: "config", scope: !10740, file: !1614, line: 422, type: !10623)
!10745 = !DILocalVariable(name: "data", scope: !10740, file: !1614, line: 423, type: !10746)
!10746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 32)
!10747 = !DILocalVariable(name: "parity", scope: !10740, file: !1614, line: 424, type: !6533)
!10748 = !DILocalVariable(name: "stopbits", scope: !10740, file: !1614, line: 425, type: !6533)
!10749 = !DILocalVariable(name: "databits", scope: !10740, file: !1614, line: 426, type: !6533)
!10750 = !DILocalVariable(name: "flowctrl", scope: !10740, file: !1614, line: 428, type: !6533)
!10751 = !DILocation(line: 0, scope: !10740)
!10752 = !DILocation(line: 422, column: 48, scope: !10740)
!10753 = !DILocation(line: 423, column: 38, scope: !10740)
!10754 = !DILocation(line: 424, column: 56, scope: !10740)
!10755 = !DILocation(line: 424, column: 51, scope: !10740)
!10756 = !DILocation(line: 424, column: 26, scope: !10740)
!10757 = !DILocation(line: 425, column: 60, scope: !10740)
!10758 = !DILocation(line: 425, column: 55, scope: !10740)
!10759 = !DILocation(line: 425, column: 28, scope: !10740)
!10760 = !DILocation(line: 426, column: 60, scope: !10740)
!10761 = !DILocation(line: 426, column: 55, scope: !10740)
!10762 = !DILocation(line: 426, column: 28, scope: !10740)
!10763 = !DILocation(line: 428, column: 58, scope: !10740)
!10764 = !DILocation(line: 428, column: 53, scope: !10740)
!10765 = !DILocation(line: 428, column: 28, scope: !10740)
!10766 = !DILocation(line: 431, column: 44, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10740, file: !1614, line: 431, column: 6)
!10768 = !DILocation(line: 438, column: 22, scope: !10769)
!10769 = distinct !DILexicalBlock(scope: !10740, file: !1614, line: 437, column: 6)
!10770 = !DILocation(line: 437, column: 6, scope: !10740)
!10771 = !DILocation(line: 448, column: 6, scope: !10740)
!10772 = !DILocation(line: 465, column: 47, scope: !10773)
!10773 = distinct !DILexicalBlock(scope: !10740, file: !1614, line: 465, column: 6)
!10774 = !DILocation(line: 475, column: 21, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10740, file: !1614, line: 475, column: 6)
!10776 = !DILocation(line: 475, column: 6, scope: !10740)
!10777 = !DILocation(line: 476, column: 8, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10779, file: !1614, line: 476, column: 7)
!10779 = distinct !DILexicalBlock(scope: !10775, file: !1614, line: 475, column: 49)
!10780 = !DILocation(line: 477, column: 34, scope: !10778)
!10781 = !DILocation(line: 476, column: 7, scope: !10779)
!10782 = !DILocation(line: 482, column: 27, scope: !10740)
!10783 = !DILocation(line: 482, column: 2, scope: !10740)
!10784 = !DILocation(line: 484, column: 16, scope: !10785)
!10785 = distinct !DILexicalBlock(scope: !10740, file: !1614, line: 484, column: 6)
!10786 = !DILocation(line: 484, column: 13, scope: !10785)
!10787 = !DILocation(line: 484, column: 6, scope: !10740)
!10788 = !DILocation(line: 485, column: 3, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10785, file: !1614, line: 484, column: 44)
!10790 = !DILocation(line: 486, column: 2, scope: !10789)
!10791 = !DILocation(line: 488, column: 18, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10740, file: !1614, line: 488, column: 6)
!10793 = !DILocation(line: 488, column: 15, scope: !10792)
!10794 = !DILocation(line: 488, column: 6, scope: !10740)
!10795 = !DILocation(line: 489, column: 3, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10792, file: !1614, line: 488, column: 48)
!10797 = !DILocation(line: 490, column: 2, scope: !10796)
!10798 = !DILocation(line: 492, column: 18, scope: !10799)
!10799 = distinct !DILexicalBlock(scope: !10740, file: !1614, line: 492, column: 6)
!10800 = !DILocation(line: 492, column: 15, scope: !10799)
!10801 = !DILocation(line: 492, column: 6, scope: !10740)
!10802 = !DILocation(line: 493, column: 3, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10799, file: !1614, line: 492, column: 48)
!10804 = !DILocation(line: 494, column: 2, scope: !10803)
!10805 = !DILocation(line: 496, column: 18, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10740, file: !1614, line: 496, column: 6)
!10807 = !DILocation(line: 496, column: 15, scope: !10806)
!10808 = !DILocation(line: 496, column: 6, scope: !10740)
!10809 = !DILocation(line: 497, column: 3, scope: !10810)
!10810 = distinct !DILexicalBlock(scope: !10806, file: !1614, line: 496, column: 46)
!10811 = !DILocation(line: 498, column: 2, scope: !10810)
!10812 = !DILocation(line: 500, column: 11, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10740, file: !1614, line: 500, column: 6)
!10814 = !DILocation(line: 500, column: 29, scope: !10813)
!10815 = !DILocation(line: 500, column: 20, scope: !10813)
!10816 = !DILocation(line: 500, column: 6, scope: !10740)
!10817 = !DILocation(line: 501, column: 3, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10813, file: !1614, line: 500, column: 40)
!10819 = !DILocation(line: 502, column: 26, scope: !10818)
!10820 = !DILocation(line: 502, column: 19, scope: !10818)
!10821 = !DILocation(line: 503, column: 2, scope: !10818)
!10822 = !DILocation(line: 505, column: 26, scope: !10740)
!10823 = !DILocation(line: 505, column: 2, scope: !10740)
!10824 = !DILocation(line: 506, column: 2, scope: !10740)
!10825 = !DILocation(line: 507, column: 1, scope: !10740)
!10826 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1614, file: !1614, line: 509, type: !1557, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10827)
!10827 = !{!10828, !10829, !10830}
!10828 = !DILocalVariable(name: "dev", arg: 1, scope: !10826, file: !1614, line: 509, type: !1519)
!10829 = !DILocalVariable(name: "cfg", arg: 2, scope: !10826, file: !1614, line: 510, type: !1559)
!10830 = !DILocalVariable(name: "data", scope: !10826, file: !1614, line: 512, type: !10746)
!10831 = !DILocation(line: 0, scope: !10826)
!10832 = !DILocation(line: 512, column: 38, scope: !10826)
!10833 = !DILocation(line: 514, column: 24, scope: !10826)
!10834 = !DILocation(line: 514, column: 7, scope: !10826)
!10835 = !DILocation(line: 514, column: 16, scope: !10826)
!10836 = !DILocation(line: 515, column: 41, scope: !10826)
!10837 = !{i32 0, i32 1537}
!10838 = !DILocation(line: 515, column: 16, scope: !10826)
!10839 = !DILocation(line: 515, column: 7, scope: !10826)
!10840 = !DILocation(line: 515, column: 14, scope: !10826)
!10841 = !DILocation(line: 517, column: 3, scope: !10826)
!10842 = !{i32 0, i32 12289}
!10843 = !DILocation(line: 516, column: 19, scope: !10826)
!10844 = !DILocation(line: 516, column: 7, scope: !10826)
!10845 = !DILocation(line: 516, column: 17, scope: !10826)
!10846 = !DILocation(line: 519, column: 3, scope: !10826)
!10847 = !DILocation(line: 519, column: 33, scope: !10826)
!10848 = !DILocation(line: 518, column: 19, scope: !10826)
!10849 = !DILocation(line: 518, column: 7, scope: !10826)
!10850 = !DILocation(line: 518, column: 17, scope: !10826)
!10851 = !DILocation(line: 521, column: 3, scope: !10826)
!10852 = !{i32 0, i32 769}
!10853 = !DILocation(line: 520, column: 19, scope: !10826)
!10854 = !DILocation(line: 520, column: 7, scope: !10826)
!10855 = !DILocation(line: 520, column: 17, scope: !10826)
!10856 = !DILocation(line: 522, column: 2, scope: !10826)
!10857 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1614, file: !1614, line: 205, type: !10858, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10860)
!10858 = !DISubroutineType(types: !10859)
!10859 = !{!152, !1519}
!10860 = !{!10861, !10862}
!10861 = !DILocalVariable(name: "dev", arg: 1, scope: !10857, file: !1614, line: 205, type: !1519)
!10862 = !DILocalVariable(name: "config", scope: !10857, file: !1614, line: 207, type: !10623)
!10863 = !DILocation(line: 0, scope: !10857)
!10864 = !DILocation(line: 207, column: 48, scope: !10857)
!10865 = !DILocation(line: 209, column: 36, scope: !10857)
!10866 = !DILocation(line: 209, column: 9, scope: !10857)
!10867 = !DILocation(line: 209, column: 2, scope: !10857)
!10868 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1614, file: !1614, line: 270, type: !10869, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10871)
!10869 = !DISubroutineType(types: !10870)
!10870 = !{!1485, !152}
!10871 = !{!10872}
!10872 = !DILocalVariable(name: "parity", arg: 1, scope: !10868, file: !1614, line: 270, type: !152)
!10873 = !DILocation(line: 0, scope: !10868)
!10874 = !DILocation(line: 272, column: 2, scope: !10868)
!10875 = !DILocation(line: 281, column: 1, scope: !10868)
!10876 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1614, file: !1614, line: 220, type: !10858, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10877)
!10877 = !{!10878, !10879}
!10878 = !DILocalVariable(name: "dev", arg: 1, scope: !10876, file: !1614, line: 220, type: !1519)
!10879 = !DILocalVariable(name: "config", scope: !10876, file: !1614, line: 222, type: !10623)
!10880 = !DILocation(line: 0, scope: !10876)
!10881 = !DILocation(line: 222, column: 48, scope: !10876)
!10882 = !DILocation(line: 224, column: 44, scope: !10876)
!10883 = !DILocation(line: 224, column: 9, scope: !10876)
!10884 = !DILocation(line: 224, column: 2, scope: !10876)
!10885 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1614, file: !1614, line: 304, type: !10886, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10888)
!10886 = !DISubroutineType(types: !10887)
!10887 = !{!1499, !152}
!10888 = !{!10889}
!10889 = !DILocalVariable(name: "sb", arg: 1, scope: !10885, file: !1614, line: 304, type: !152)
!10890 = !DILocation(line: 0, scope: !10885)
!10891 = !DILocation(line: 306, column: 2, scope: !10885)
!10892 = !DILocation(line: 0, scope: !10893)
!10893 = distinct !DILexicalBlock(scope: !10885, file: !1614, line: 306, column: 14)
!10894 = !DILocation(line: 323, column: 1, scope: !10885)
!10895 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1614, file: !1614, line: 235, type: !10858, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10896)
!10896 = !{!10897, !10898}
!10897 = !DILocalVariable(name: "dev", arg: 1, scope: !10895, file: !1614, line: 235, type: !1519)
!10898 = !DILocalVariable(name: "config", scope: !10895, file: !1614, line: 237, type: !10623)
!10899 = !DILocation(line: 0, scope: !10895)
!10900 = !DILocation(line: 237, column: 48, scope: !10895)
!10901 = !DILocation(line: 239, column: 39, scope: !10895)
!10902 = !DILocation(line: 239, column: 9, scope: !10895)
!10903 = !DILocation(line: 239, column: 2, scope: !10895)
!10904 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1614, file: !1614, line: 355, type: !10905, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10907)
!10905 = !DISubroutineType(types: !10906)
!10906 = !{!1492, !152, !152}
!10907 = !{!10908, !10909}
!10908 = !DILocalVariable(name: "db", arg: 1, scope: !10904, file: !1614, line: 355, type: !152)
!10909 = !DILocalVariable(name: "p", arg: 2, scope: !10904, file: !1614, line: 356, type: !152)
!10910 = !DILocation(line: 0, scope: !10904)
!10911 = !DILocation(line: 358, column: 2, scope: !10904)
!10912 = !DILocation(line: 384, column: 1, scope: !10904)
!10913 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1614, file: !1614, line: 250, type: !10858, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10914)
!10914 = !{!10915, !10916}
!10915 = !DILocalVariable(name: "dev", arg: 1, scope: !10913, file: !1614, line: 250, type: !1519)
!10916 = !DILocalVariable(name: "config", scope: !10913, file: !1614, line: 252, type: !10623)
!10917 = !DILocation(line: 0, scope: !10913)
!10918 = !DILocation(line: 252, column: 48, scope: !10913)
!10919 = !DILocation(line: 254, column: 40, scope: !10913)
!10920 = !DILocation(line: 254, column: 9, scope: !10913)
!10921 = !DILocation(line: 254, column: 2, scope: !10913)
!10922 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1614, file: !1614, line: 409, type: !10923, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10925)
!10923 = !DISubroutineType(types: !10924)
!10924 = !{!1505, !152}
!10925 = !{!10926}
!10926 = !DILocalVariable(name: "fc", arg: 1, scope: !10922, file: !1614, line: 409, type: !152)
!10927 = !DILocation(line: 0, scope: !10922)
!10928 = !DILocation(line: 411, column: 9, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10922, file: !1614, line: 411, column: 6)
!10930 = !DILocation(line: 416, column: 1, scope: !10922)
!10931 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10932, file: !10932, line: 967, type: !10933, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10935)
!10932 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10933 = !DISubroutineType(types: !10934)
!10934 = !{!152, !1560}
!10935 = !{!10936}
!10936 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10931, file: !10932, line: 967, type: !1560)
!10937 = !DILocation(line: 0, scope: !10931)
!10938 = !DILocation(line: 969, column: 21, scope: !10931)
!10939 = !DILocation(line: 969, column: 3, scope: !10931)
!10940 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10932, file: !10932, line: 601, type: !10933, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10941)
!10941 = !{!10942}
!10942 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10940, file: !10932, line: 601, type: !1560)
!10943 = !DILocation(line: 0, scope: !10940)
!10944 = !DILocation(line: 603, column: 21, scope: !10940)
!10945 = !DILocation(line: 603, column: 3, scope: !10940)
!10946 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10932, file: !10932, line: 820, type: !10933, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10947)
!10947 = !{!10948}
!10948 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10946, file: !10932, line: 820, type: !1560)
!10949 = !DILocation(line: 0, scope: !10946)
!10950 = !DILocation(line: 822, column: 21, scope: !10946)
!10951 = !DILocation(line: 822, column: 3, scope: !10946)
!10952 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10932, file: !10932, line: 547, type: !10933, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10953)
!10953 = !{!10954}
!10954 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10952, file: !10932, line: 547, type: !1560)
!10955 = !DILocation(line: 0, scope: !10952)
!10956 = !DILocation(line: 549, column: 21, scope: !10952)
!10957 = !DILocation(line: 549, column: 3, scope: !10952)
!10958 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1614, file: !1614, line: 257, type: !10959, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10961)
!10959 = !DISubroutineType(types: !10960)
!10960 = !{!152, !1485}
!10961 = !{!10962}
!10962 = !DILocalVariable(name: "parity", arg: 1, scope: !10958, file: !1614, line: 257, type: !1485)
!10963 = !DILocation(line: 0, scope: !10958)
!10964 = !DILocation(line: 259, column: 2, scope: !10958)
!10965 = !DILocation(line: 268, column: 1, scope: !10958)
!10966 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1614, file: !1614, line: 283, type: !10967, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10969)
!10967 = !DISubroutineType(types: !10968)
!10968 = !{!152, !1499}
!10969 = !{!10970}
!10970 = !DILocalVariable(name: "sb", arg: 1, scope: !10966, file: !1614, line: 283, type: !1499)
!10971 = !DILocation(line: 0, scope: !10966)
!10972 = !DILocation(line: 285, column: 2, scope: !10966)
!10973 = !DILocation(line: 0, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10966, file: !1614, line: 285, column: 14)
!10975 = !DILocation(line: 302, column: 1, scope: !10966)
!10976 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1614, file: !1614, line: 325, type: !10977, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10979)
!10977 = !DISubroutineType(types: !10978)
!10978 = !{!152, !1492, !1485}
!10979 = !{!10980, !10981}
!10980 = !DILocalVariable(name: "db", arg: 1, scope: !10976, file: !1614, line: 325, type: !1492)
!10981 = !DILocalVariable(name: "p", arg: 2, scope: !10976, file: !1614, line: 326, type: !1485)
!10982 = !DILocation(line: 0, scope: !10976)
!10983 = !DILocation(line: 328, column: 2, scope: !10976)
!10984 = !DILocation(line: 353, column: 1, scope: !10976)
!10985 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1614, file: !1614, line: 393, type: !10986, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10988)
!10986 = !DISubroutineType(types: !10987)
!10987 = !{!152, !1505}
!10988 = !{!10989}
!10989 = !DILocalVariable(name: "fc", arg: 1, scope: !10985, file: !1614, line: 393, type: !1505)
!10990 = !DILocation(line: 0, scope: !10985)
!10991 = !DILocation(line: 395, column: 9, scope: !10992)
!10992 = distinct !DILexicalBlock(scope: !10985, file: !1614, line: 395, column: 6)
!10993 = !DILocation(line: 400, column: 1, scope: !10985)
!10994 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10932, file: !10932, line: 424, type: !10995, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10997)
!10995 = !DISubroutineType(types: !10996)
!10996 = !{null, !1560}
!10997 = !{!10998}
!10998 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10994, file: !10932, line: 424, type: !1560)
!10999 = !DILocation(line: 0, scope: !10994)
!11000 = !DILocation(line: 426, column: 3, scope: !10994)
!11001 = !DILocation(line: 427, column: 1, scope: !10994)
!11002 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1614, file: !1614, line: 197, type: !11003, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11005)
!11003 = !DISubroutineType(types: !11004)
!11004 = !{null, !1519, !152}
!11005 = !{!11006, !11007, !11008}
!11006 = !DILocalVariable(name: "dev", arg: 1, scope: !11002, file: !1614, line: 197, type: !1519)
!11007 = !DILocalVariable(name: "parity", arg: 2, scope: !11002, file: !1614, line: 198, type: !152)
!11008 = !DILocalVariable(name: "config", scope: !11002, file: !1614, line: 200, type: !10623)
!11009 = !DILocation(line: 0, scope: !11002)
!11010 = !DILocation(line: 200, column: 48, scope: !11002)
!11011 = !DILocation(line: 202, column: 29, scope: !11002)
!11012 = !DILocation(line: 202, column: 2, scope: !11002)
!11013 = !DILocation(line: 203, column: 1, scope: !11002)
!11014 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1614, file: !1614, line: 212, type: !11003, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11015)
!11015 = !{!11016, !11017, !11018}
!11016 = !DILocalVariable(name: "dev", arg: 1, scope: !11014, file: !1614, line: 212, type: !1519)
!11017 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11014, file: !1614, line: 213, type: !152)
!11018 = !DILocalVariable(name: "config", scope: !11014, file: !1614, line: 215, type: !10623)
!11019 = !DILocation(line: 0, scope: !11014)
!11020 = !DILocation(line: 215, column: 48, scope: !11014)
!11021 = !DILocation(line: 217, column: 37, scope: !11014)
!11022 = !DILocation(line: 217, column: 2, scope: !11014)
!11023 = !DILocation(line: 218, column: 1, scope: !11014)
!11024 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1614, file: !1614, line: 227, type: !11003, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11025)
!11025 = !{!11026, !11027, !11028}
!11026 = !DILocalVariable(name: "dev", arg: 1, scope: !11024, file: !1614, line: 227, type: !1519)
!11027 = !DILocalVariable(name: "databits", arg: 2, scope: !11024, file: !1614, line: 228, type: !152)
!11028 = !DILocalVariable(name: "config", scope: !11024, file: !1614, line: 230, type: !10623)
!11029 = !DILocation(line: 0, scope: !11024)
!11030 = !DILocation(line: 230, column: 48, scope: !11024)
!11031 = !DILocation(line: 232, column: 32, scope: !11024)
!11032 = !DILocation(line: 232, column: 2, scope: !11024)
!11033 = !DILocation(line: 233, column: 1, scope: !11024)
!11034 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1614, file: !1614, line: 242, type: !11003, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11035)
!11035 = !{!11036, !11037, !11038}
!11036 = !DILocalVariable(name: "dev", arg: 1, scope: !11034, file: !1614, line: 242, type: !1519)
!11037 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11034, file: !1614, line: 243, type: !152)
!11038 = !DILocalVariable(name: "config", scope: !11034, file: !1614, line: 245, type: !10623)
!11039 = !DILocation(line: 0, scope: !11034)
!11040 = !DILocation(line: 245, column: 48, scope: !11034)
!11041 = !DILocation(line: 247, column: 33, scope: !11034)
!11042 = !DILocation(line: 247, column: 2, scope: !11034)
!11043 = !DILocation(line: 248, column: 1, scope: !11034)
!11044 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1614, file: !1614, line: 107, type: !11003, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11045)
!11045 = !{!11046, !11047, !11048, !11049, !11050}
!11046 = !DILocalVariable(name: "dev", arg: 1, scope: !11044, file: !1614, line: 107, type: !1519)
!11047 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11044, file: !1614, line: 107, type: !152)
!11048 = !DILocalVariable(name: "config", scope: !11044, file: !1614, line: 109, type: !10623)
!11049 = !DILocalVariable(name: "data", scope: !11044, file: !1614, line: 110, type: !10746)
!11050 = !DILocalVariable(name: "clock_rate", scope: !11044, file: !1614, line: 112, type: !152)
!11051 = !DILocation(line: 0, scope: !11044)
!11052 = !DILocation(line: 109, column: 48, scope: !11044)
!11053 = !DILocation(line: 110, column: 38, scope: !11044)
!11054 = !DILocation(line: 112, column: 2, scope: !11044)
!11055 = !DILocation(line: 123, column: 36, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !11057, file: !1614, line: 123, column: 7)
!11057 = distinct !DILexicalBlock(scope: !11058, file: !1614, line: 122, column: 9)
!11058 = distinct !DILexicalBlock(scope: !11044, file: !1614, line: 115, column: 6)
!11059 = !DILocation(line: 124, column: 42, scope: !11056)
!11060 = !DILocation(line: 123, column: 7, scope: !11056)
!11061 = !DILocation(line: 125, column: 22, scope: !11056)
!11062 = !DILocation(line: 123, column: 7, scope: !11057)
!11063 = !DILocation(line: 126, column: 4, scope: !11064)
!11064 = distinct !DILexicalBlock(scope: !11065, file: !1614, line: 126, column: 4)
!11065 = distinct !DILexicalBlock(scope: !11066, file: !1614, line: 126, column: 4)
!11066 = distinct !DILexicalBlock(scope: !11067, file: !1614, line: 126, column: 4)
!11067 = distinct !DILexicalBlock(scope: !11068, file: !1614, line: 126, column: 4)
!11068 = distinct !DILexicalBlock(scope: !11056, file: !1614, line: 125, column: 27)
!11069 = !DILocation(line: 127, column: 4, scope: !11068)
!11070 = !DILocation(line: 176, column: 36, scope: !11044)
!11071 = !DILocation(line: 176, column: 3, scope: !11044)
!11072 = !DILocation(line: 179, column: 32, scope: !11044)
!11073 = !DILocation(line: 180, column: 10, scope: !11044)
!11074 = !DILocation(line: 179, column: 3, scope: !11044)
!11075 = !DILocation(line: 189, column: 3, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11077, file: !1614, line: 189, column: 3)
!11077 = distinct !DILexicalBlock(scope: !11044, file: !1614, line: 189, column: 3)
!11078 = !DILocation(line: 189, column: 3, scope: !11077)
!11079 = !DILocation(line: 189, column: 3, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11076, file: !1614, line: 189, column: 3)
!11081 = !DILocation(line: 195, column: 1, scope: !11044)
!11082 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10932, file: !10932, line: 410, type: !10995, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11083)
!11083 = !{!11084}
!11084 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11082, file: !10932, line: 410, type: !1560)
!11085 = !DILocation(line: 0, scope: !11082)
!11086 = !DILocation(line: 412, column: 3, scope: !11082)
!11087 = !DILocation(line: 413, column: 1, scope: !11082)
!11088 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !968, file: !968, line: 216, type: !1593, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11089)
!11089 = !{!11090, !11091, !11092, !11093}
!11090 = !DILocalVariable(name: "dev", arg: 1, scope: !11088, file: !968, line: 216, type: !1519)
!11091 = !DILocalVariable(name: "sys", arg: 2, scope: !11088, file: !968, line: 217, type: !1060)
!11092 = !DILocalVariable(name: "rate", arg: 3, scope: !11088, file: !968, line: 218, type: !1016)
!11093 = !DILocalVariable(name: "api", scope: !11088, file: !968, line: 220, type: !1571)
!11094 = !DILocation(line: 0, scope: !11088)
!11095 = !DILocation(line: 221, column: 49, scope: !11088)
!11096 = !DILocation(line: 223, column: 11, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11088, file: !968, line: 223, column: 6)
!11098 = !DILocation(line: 223, column: 20, scope: !11097)
!11099 = !DILocation(line: 223, column: 6, scope: !11088)
!11100 = !DILocation(line: 227, column: 9, scope: !11088)
!11101 = !DILocation(line: 227, column: 2, scope: !11088)
!11102 = !DILocation(line: 228, column: 1, scope: !11088)
!11103 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6015, file: !6015, line: 175, type: !6016, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11104)
!11104 = !{!11105}
!11105 = !DILocalVariable(name: "level", arg: 1, scope: !11103, file: !6015, line: 175, type: !107)
!11106 = !DILocation(line: 0, scope: !11103)
!11107 = !DILocation(line: 177, column: 2, scope: !11103)
!11108 = !DILocation(line: 189, column: 1, scope: !11103)
!11109 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10932, file: !10932, line: 615, type: !11110, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11112)
!11110 = !DISubroutineType(types: !11111)
!11111 = !{null, !1560, !152}
!11112 = !{!11113, !11114}
!11113 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11109, file: !10932, line: 615, type: !1560)
!11114 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11109, file: !10932, line: 615, type: !152)
!11115 = !DILocation(line: 0, scope: !11109)
!11116 = !DILocation(line: 617, column: 3, scope: !11109)
!11117 = !DILocation(line: 618, column: 1, scope: !11109)
!11118 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10932, file: !10932, line: 1020, type: !11119, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11121)
!11119 = !DISubroutineType(types: !11120)
!11120 = !{null, !1560, !152, !152, !152}
!11121 = !{!11122, !11123, !11124, !11125}
!11122 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11118, file: !10932, line: 1020, type: !1560)
!11123 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11118, file: !10932, line: 1020, type: !152)
!11124 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11118, file: !10932, line: 1020, type: !152)
!11125 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11118, file: !10932, line: 1021, type: !152)
!11126 = !DILocation(line: 0, scope: !11118)
!11127 = !DILocation(line: 1029, column: 30, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11129, file: !10932, line: 1028, column: 3)
!11129 = distinct !DILexicalBlock(scope: !11118, file: !10932, line: 1023, column: 7)
!11130 = !DILocation(line: 1029, column: 19, scope: !11128)
!11131 = !DILocation(line: 1029, column: 13, scope: !11128)
!11132 = !DILocation(line: 1029, column: 17, scope: !11128)
!11133 = !DILocation(line: 1031, column: 1, scope: !11118)
!11134 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10932, file: !10932, line: 949, type: !11110, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11135)
!11135 = !{!11136, !11137}
!11136 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11134, file: !10932, line: 949, type: !1560)
!11137 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11134, file: !10932, line: 949, type: !152)
!11138 = !DILocation(line: 0, scope: !11134)
!11139 = !DILocation(line: 951, column: 3, scope: !11134)
!11140 = !DILocation(line: 952, column: 1, scope: !11134)
!11141 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10932, file: !10932, line: 588, type: !11110, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11142)
!11142 = !{!11143, !11144}
!11143 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11141, file: !10932, line: 588, type: !1560)
!11144 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11141, file: !10932, line: 588, type: !152)
!11145 = !DILocation(line: 0, scope: !11141)
!11146 = !DILocation(line: 590, column: 3, scope: !11141)
!11147 = !DILocation(line: 591, column: 1, scope: !11141)
!11148 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10932, file: !10932, line: 805, type: !11110, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11149)
!11149 = !{!11150, !11151}
!11150 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11148, file: !10932, line: 805, type: !1560)
!11151 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11148, file: !10932, line: 805, type: !152)
!11152 = !DILocation(line: 0, scope: !11148)
!11153 = !DILocation(line: 807, column: 3, scope: !11148)
!11154 = !DILocation(line: 808, column: 1, scope: !11148)
!11155 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10932, file: !10932, line: 532, type: !11110, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11156)
!11156 = !{!11157, !11158}
!11157 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11155, file: !10932, line: 532, type: !1560)
!11158 = !DILocalVariable(name: "Parity", arg: 2, scope: !11155, file: !10932, line: 532, type: !152)
!11159 = !DILocation(line: 0, scope: !11155)
!11160 = !DILocation(line: 534, column: 3, scope: !11155)
!11161 = !DILocation(line: 535, column: 1, scope: !11155)
!11162 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10932, file: !10932, line: 1770, type: !10933, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11163)
!11163 = !{!11164}
!11164 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11162, file: !10932, line: 1770, type: !1560)
!11165 = !DILocation(line: 0, scope: !11162)
!11166 = !DILocation(line: 1772, column: 11, scope: !11162)
!11167 = !DILocation(line: 1772, column: 46, scope: !11162)
!11168 = !DILocation(line: 1772, column: 3, scope: !11162)
!11169 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10932, file: !10932, line: 1737, type: !10933, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11170)
!11170 = !{!11171}
!11171 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11169, file: !10932, line: 1737, type: !1560)
!11172 = !DILocation(line: 0, scope: !11169)
!11173 = !DILocation(line: 1739, column: 11, scope: !11169)
!11174 = !DILocation(line: 1739, column: 3, scope: !11169)
!11175 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10932, file: !10932, line: 1748, type: !10933, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11176)
!11176 = !{!11177}
!11177 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11175, file: !10932, line: 1748, type: !1560)
!11178 = !DILocation(line: 0, scope: !11175)
!11179 = !DILocation(line: 1750, column: 11, scope: !11175)
!11180 = !DILocation(line: 1750, column: 45, scope: !11175)
!11181 = !DILocation(line: 1750, column: 3, scope: !11175)
!11182 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10932, file: !10932, line: 1827, type: !10933, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11183)
!11183 = !{!11184}
!11184 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11182, file: !10932, line: 1827, type: !1560)
!11185 = !DILocation(line: 0, scope: !11182)
!11186 = !DILocation(line: 1829, column: 11, scope: !11182)
!11187 = !DILocation(line: 1829, column: 46, scope: !11182)
!11188 = !DILocation(line: 1829, column: 3, scope: !11182)
!11189 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10932, file: !10932, line: 1992, type: !10995, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11190)
!11190 = !{!11191}
!11191 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11189, file: !10932, line: 1992, type: !1560)
!11192 = !DILocation(line: 0, scope: !11189)
!11193 = !DILocation(line: 1994, column: 3, scope: !11189)
!11194 = !DILocation(line: 1995, column: 1, scope: !11189)
!11195 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10932, file: !10932, line: 1934, type: !10995, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11196)
!11196 = !{!11197, !11198}
!11197 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11195, file: !10932, line: 1934, type: !1560)
!11198 = !DILocalVariable(name: "tmpreg", scope: !11195, file: !10932, line: 1936, type: !227)
!11199 = !DILocation(line: 0, scope: !11195)
!11200 = !DILocation(line: 1936, column: 3, scope: !11195)
!11201 = !DILocation(line: 1936, column: 17, scope: !11195)
!11202 = !DILocation(line: 1937, column: 20, scope: !11195)
!11203 = !DILocation(line: 1937, column: 10, scope: !11195)
!11204 = !DILocation(line: 1938, column: 10, scope: !11195)
!11205 = !DILocation(line: 1939, column: 20, scope: !11195)
!11206 = !DILocation(line: 1939, column: 10, scope: !11195)
!11207 = !DILocation(line: 1940, column: 10, scope: !11195)
!11208 = !DILocation(line: 1941, column: 1, scope: !11195)
!11209 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10932, file: !10932, line: 1877, type: !10995, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11210)
!11210 = !{!11211, !11212}
!11211 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11209, file: !10932, line: 1877, type: !1560)
!11212 = !DILocalVariable(name: "tmpreg", scope: !11209, file: !10932, line: 1879, type: !227)
!11213 = !DILocation(line: 0, scope: !11209)
!11214 = !DILocation(line: 1879, column: 3, scope: !11209)
!11215 = !DILocation(line: 1879, column: 17, scope: !11209)
!11216 = !DILocation(line: 1880, column: 20, scope: !11209)
!11217 = !DILocation(line: 1880, column: 10, scope: !11209)
!11218 = !DILocation(line: 1881, column: 10, scope: !11209)
!11219 = !DILocation(line: 1882, column: 20, scope: !11209)
!11220 = !DILocation(line: 1882, column: 10, scope: !11209)
!11221 = !DILocation(line: 1883, column: 10, scope: !11209)
!11222 = !DILocation(line: 1884, column: 1, scope: !11209)
!11223 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10932, file: !10932, line: 1896, type: !10995, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11224)
!11224 = !{!11225, !11226}
!11225 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11223, file: !10932, line: 1896, type: !1560)
!11226 = !DILocalVariable(name: "tmpreg", scope: !11223, file: !10932, line: 1898, type: !227)
!11227 = !DILocation(line: 0, scope: !11223)
!11228 = !DILocation(line: 1898, column: 3, scope: !11223)
!11229 = !DILocation(line: 1898, column: 17, scope: !11223)
!11230 = !DILocation(line: 1899, column: 20, scope: !11223)
!11231 = !DILocation(line: 1899, column: 10, scope: !11223)
!11232 = !DILocation(line: 1900, column: 10, scope: !11223)
!11233 = !DILocation(line: 1901, column: 20, scope: !11223)
!11234 = !DILocation(line: 1901, column: 10, scope: !11223)
!11235 = !DILocation(line: 1902, column: 10, scope: !11223)
!11236 = !DILocation(line: 1903, column: 1, scope: !11223)
!11237 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10932, file: !10932, line: 1915, type: !10995, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11238)
!11238 = !{!11239, !11240}
!11239 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11237, file: !10932, line: 1915, type: !1560)
!11240 = !DILocalVariable(name: "tmpreg", scope: !11237, file: !10932, line: 1917, type: !227)
!11241 = !DILocation(line: 0, scope: !11237)
!11242 = !DILocation(line: 1917, column: 3, scope: !11237)
!11243 = !DILocation(line: 1917, column: 17, scope: !11237)
!11244 = !DILocation(line: 1918, column: 20, scope: !11237)
!11245 = !DILocation(line: 1918, column: 10, scope: !11237)
!11246 = !DILocation(line: 1919, column: 10, scope: !11237)
!11247 = !DILocation(line: 1920, column: 20, scope: !11237)
!11248 = !DILocation(line: 1920, column: 10, scope: !11237)
!11249 = !DILocation(line: 1921, column: 10, scope: !11237)
!11250 = !DILocation(line: 1922, column: 1, scope: !11237)
!11251 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10932, file: !10932, line: 1814, type: !10933, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11252)
!11252 = !{!11253}
!11253 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11251, file: !10932, line: 1814, type: !1560)
!11254 = !DILocation(line: 0, scope: !11251)
!11255 = !DILocation(line: 1816, column: 11, scope: !11251)
!11256 = !DILocation(line: 1816, column: 46, scope: !11251)
!11257 = !DILocation(line: 1816, column: 3, scope: !11251)
!11258 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10932, file: !10932, line: 2426, type: !11259, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11261)
!11259 = !DISubroutineType(types: !11260)
!11260 = !{null, !1560, !195}
!11261 = !{!11262, !11263}
!11262 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11258, file: !10932, line: 2426, type: !1560)
!11263 = !DILocalVariable(name: "Value", arg: 2, scope: !11258, file: !10932, line: 2426, type: !195)
!11264 = !DILocation(line: 0, scope: !11258)
!11265 = !DILocation(line: 2428, column: 16, scope: !11258)
!11266 = !DILocation(line: 2428, column: 11, scope: !11258)
!11267 = !DILocation(line: 2428, column: 14, scope: !11258)
!11268 = !DILocation(line: 2429, column: 1, scope: !11258)
!11269 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10932, file: !10932, line: 1792, type: !10933, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11270)
!11270 = !{!11271}
!11271 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11269, file: !10932, line: 1792, type: !1560)
!11272 = !DILocation(line: 0, scope: !11269)
!11273 = !DILocation(line: 1794, column: 11, scope: !11269)
!11274 = !DILocation(line: 1794, column: 47, scope: !11269)
!11275 = !DILocation(line: 1794, column: 3, scope: !11269)
!11276 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10932, file: !10932, line: 2403, type: !11277, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11279)
!11277 = !DISubroutineType(types: !11278)
!11278 = !{!195, !1560}
!11279 = !{!11280}
!11280 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11276, file: !10932, line: 2403, type: !1560)
!11281 = !DILocation(line: 0, scope: !11276)
!11282 = !DILocation(line: 2405, column: 20, scope: !11276)
!11283 = !DILocation(line: 2405, column: 10, scope: !11276)
!11284 = !DILocation(line: 2405, column: 3, scope: !11276)
!11285 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1614, file: !1614, line: 1583, type: !1540, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11286)
!11286 = !{!11287, !11288, !11289, !11290, !11291, !11292}
!11287 = !DILocalVariable(name: "dev", arg: 1, scope: !11285, file: !1614, line: 1583, type: !1519)
!11288 = !DILocalVariable(name: "config", scope: !11285, file: !1614, line: 1585, type: !10623)
!11289 = !DILocalVariable(name: "data", scope: !11285, file: !1614, line: 1586, type: !10746)
!11290 = !DILocalVariable(name: "ll_parity", scope: !11285, file: !1614, line: 1587, type: !152)
!11291 = !DILocalVariable(name: "ll_datawidth", scope: !11285, file: !1614, line: 1588, type: !152)
!11292 = !DILocalVariable(name: "err", scope: !11285, file: !1614, line: 1589, type: !107)
!11293 = !DILocation(line: 0, scope: !11285)
!11294 = !DILocation(line: 1585, column: 48, scope: !11285)
!11295 = !DILocation(line: 1586, column: 38, scope: !11285)
!11296 = !DILocation(line: 1591, column: 2, scope: !11285)
!11297 = !DILocation(line: 1593, column: 29, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11285, file: !1614, line: 1593, column: 6)
!11299 = !DILocation(line: 1593, column: 7, scope: !11298)
!11300 = !DILocation(line: 1593, column: 6, scope: !11285)
!11301 = !DILocation(line: 1594, column: 3, scope: !11302)
!11302 = distinct !DILexicalBlock(scope: !11303, file: !1614, line: 1594, column: 3)
!11303 = distinct !DILexicalBlock(scope: !11304, file: !1614, line: 1594, column: 3)
!11304 = distinct !DILexicalBlock(scope: !11305, file: !1614, line: 1594, column: 3)
!11305 = distinct !DILexicalBlock(scope: !11306, file: !1614, line: 1594, column: 3)
!11306 = distinct !DILexicalBlock(scope: !11298, file: !1614, line: 1593, column: 37)
!11307 = !DILocation(line: 1595, column: 3, scope: !11306)
!11308 = !DILocation(line: 1599, column: 31, scope: !11285)
!11309 = !DILocation(line: 1599, column: 71, scope: !11285)
!11310 = !DILocation(line: 1599, column: 8, scope: !11285)
!11311 = !DILocation(line: 1600, column: 10, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11285, file: !1614, line: 1600, column: 6)
!11313 = !DILocation(line: 1600, column: 6, scope: !11285)
!11314 = !DILocation(line: 1601, column: 3, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !11316, file: !1614, line: 1601, column: 3)
!11316 = distinct !DILexicalBlock(scope: !11317, file: !1614, line: 1601, column: 3)
!11317 = distinct !DILexicalBlock(scope: !11318, file: !1614, line: 1601, column: 3)
!11318 = distinct !DILexicalBlock(scope: !11319, file: !1614, line: 1601, column: 3)
!11319 = distinct !DILexicalBlock(scope: !11312, file: !1614, line: 1600, column: 16)
!11320 = !DILocation(line: 1602, column: 3, scope: !11319)
!11321 = !DILocation(line: 1616, column: 36, scope: !11285)
!11322 = !DILocation(line: 1616, column: 8, scope: !11285)
!11323 = !DILocation(line: 1617, column: 10, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11285, file: !1614, line: 1617, column: 6)
!11325 = !DILocation(line: 1617, column: 6, scope: !11285)
!11326 = !DILocation(line: 1621, column: 27, scope: !11285)
!11327 = !DILocation(line: 1621, column: 2, scope: !11285)
!11328 = !DILocation(line: 1624, column: 40, scope: !11285)
!11329 = !DILocation(line: 1624, column: 2, scope: !11285)
!11330 = !DILocation(line: 1630, column: 14, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11285, file: !1614, line: 1630, column: 6)
!11332 = !DILocation(line: 1630, column: 6, scope: !11285)
!11333 = !DILocation(line: 1640, column: 4, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11335, file: !1614, line: 1640, column: 4)
!11335 = distinct !DILexicalBlock(scope: !11336, file: !1614, line: 1640, column: 4)
!11336 = distinct !DILexicalBlock(scope: !11337, file: !1614, line: 1640, column: 4)
!11337 = distinct !DILexicalBlock(scope: !11338, file: !1614, line: 1640, column: 4)
!11338 = distinct !DILexicalBlock(scope: !11339, file: !1614, line: 1639, column: 28)
!11339 = distinct !DILexicalBlock(scope: !11340, file: !1614, line: 1639, column: 7)
!11340 = distinct !DILexicalBlock(scope: !11341, file: !1614, line: 1638, column: 9)
!11341 = distinct !DILexicalBlock(scope: !11331, file: !1614, line: 1634, column: 13)
!11342 = !DILocation(line: 0, scope: !11331)
!11343 = !DILocation(line: 1649, column: 35, scope: !11285)
!11344 = !DILocation(line: 1649, column: 2, scope: !11285)
!11345 = !DILocation(line: 1654, column: 14, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11285, file: !1614, line: 1654, column: 6)
!11347 = !DILocation(line: 1654, column: 6, scope: !11285)
!11348 = !DILocation(line: 1655, column: 3, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !11346, file: !1614, line: 1654, column: 31)
!11350 = !DILocation(line: 1656, column: 2, scope: !11349)
!11351 = !DILocation(line: 1659, column: 37, scope: !11285)
!11352 = !DILocation(line: 1659, column: 2, scope: !11285)
!11353 = !DILocation(line: 1662, column: 14, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11285, file: !1614, line: 1662, column: 6)
!11355 = !DILocation(line: 1662, column: 6, scope: !11285)
!11356 = !DILocation(line: 1663, column: 37, scope: !11357)
!11357 = distinct !DILexicalBlock(scope: !11354, file: !1614, line: 1662, column: 27)
!11358 = !DILocation(line: 1663, column: 3, scope: !11357)
!11359 = !DILocation(line: 1664, column: 2, scope: !11357)
!11360 = !DILocation(line: 1684, column: 26, scope: !11285)
!11361 = !DILocation(line: 1684, column: 2, scope: !11285)
!11362 = !DILocation(line: 1722, column: 2, scope: !11285)
!11363 = !DILocation(line: 1724, column: 1, scope: !11285)
!11364 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1614, file: !1614, line: 651, type: !11365, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11367)
!11365 = !DISubroutineType(types: !11366)
!11366 = !{null, !1519}
!11367 = !{!11368, !11369, !11370}
!11368 = !DILocalVariable(name: "dev", arg: 1, scope: !11364, file: !1614, line: 651, type: !1519)
!11369 = !DILocalVariable(name: "data", scope: !11364, file: !1614, line: 653, type: !10746)
!11370 = !DILocalVariable(name: "clk", scope: !11364, file: !1614, line: 654, type: !11371)
!11371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1519)
!11372 = !DILocation(line: 0, scope: !11364)
!11373 = !DILocation(line: 653, column: 38, scope: !11364)
!11374 = !DILocation(line: 656, column: 8, scope: !11364)
!11375 = !DILocation(line: 656, column: 14, scope: !11364)
!11376 = !DILocation(line: 657, column: 1, scope: !11364)
!11377 = distinct !DISubprogram(name: "device_is_ready", scope: !9742, file: !9742, line: 47, type: !11378, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11380)
!11378 = !DISubroutineType(types: !11379)
!11379 = !{!145, !1519}
!11380 = !{!11381}
!11381 = !DILocalVariable(name: "dev", arg: 1, scope: !11377, file: !9742, line: 47, type: !1519)
!11382 = !DILocation(line: 0, scope: !11377)
!11383 = !DILocation(line: 55, column: 2, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !11377, file: !9742, line: 55, column: 2)
!11385 = !{i64 2155138033}
!11386 = !DILocation(line: 56, column: 9, scope: !11377)
!11387 = !DILocation(line: 56, column: 2, scope: !11377)
!11388 = distinct !DISubprogram(name: "clock_control_on", scope: !968, file: !968, line: 123, type: !1578, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11389)
!11389 = !{!11390, !11391, !11392}
!11390 = !DILocalVariable(name: "dev", arg: 1, scope: !11388, file: !968, line: 123, type: !1519)
!11391 = !DILocalVariable(name: "sys", arg: 2, scope: !11388, file: !968, line: 124, type: !1060)
!11392 = !DILocalVariable(name: "api", scope: !11388, file: !968, line: 126, type: !1571)
!11393 = !DILocation(line: 0, scope: !11388)
!11394 = !DILocation(line: 127, column: 49, scope: !11388)
!11395 = !DILocation(line: 129, column: 14, scope: !11388)
!11396 = !DILocation(line: 129, column: 9, scope: !11388)
!11397 = !DILocation(line: 129, column: 2, scope: !11388)
!11398 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1654, file: !1654, line: 342, type: !11399, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11401)
!11399 = !DISubroutineType(types: !11400)
!11400 = !{!107, !1651, !195}
!11401 = !{!11402, !11403, !11404, !11405}
!11402 = !DILocalVariable(name: "config", arg: 1, scope: !11398, file: !1654, line: 342, type: !1651)
!11403 = !DILocalVariable(name: "id", arg: 2, scope: !11398, file: !1654, line: 343, type: !195)
!11404 = !DILocalVariable(name: "ret", scope: !11398, file: !1654, line: 345, type: !107)
!11405 = !DILocalVariable(name: "state", scope: !11398, file: !1654, line: 346, type: !1657)
!11406 = !DILocation(line: 0, scope: !11398)
!11407 = !DILocation(line: 346, column: 2, scope: !11398)
!11408 = !DILocation(line: 348, column: 8, scope: !11398)
!11409 = !DILocation(line: 349, column: 10, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11398, file: !1654, line: 349, column: 6)
!11411 = !DILocation(line: 349, column: 6, scope: !11398)
!11412 = !DILocation(line: 353, column: 44, scope: !11398)
!11413 = !DILocation(line: 353, column: 9, scope: !11398)
!11414 = !DILocation(line: 353, column: 2, scope: !11398)
!11415 = !DILocation(line: 354, column: 1, scope: !11398)
!11416 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10932, file: !10932, line: 497, type: !11110, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11417)
!11417 = !{!11418, !11419, !11420}
!11418 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11416, file: !10932, line: 497, type: !1560)
!11419 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11416, file: !10932, line: 497, type: !152)
!11420 = !DILocalVariable(name: "val", scope: !11421, file: !10932, line: 499, type: !152)
!11421 = distinct !DILexicalBlock(scope: !11416, file: !10932, line: 499, column: 3)
!11422 = !DILocation(line: 0, scope: !11416)
!11423 = !DILocation(line: 499, column: 3, scope: !11421)
!11424 = !DILocalVariable(name: "addr", arg: 1, scope: !11425, file: !6256, line: 476, type: !1610)
!11425 = distinct !DISubprogram(name: "__LDREXW", scope: !6256, file: !6256, line: 476, type: !11426, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11428)
!11426 = !DISubroutineType(types: !11427)
!11427 = !{!152, !1610}
!11428 = !{!11424, !11429}
!11429 = !DILocalVariable(name: "result", scope: !11425, file: !6256, line: 478, type: !152)
!11430 = !DILocation(line: 0, scope: !11425, inlinedAt: !11431)
!11431 = distinct !DILocation(line: 499, column: 3, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11421, file: !10932, line: 499, column: 3)
!11433 = !DILocation(line: 480, column: 4, scope: !11425, inlinedAt: !11431)
!11434 = !{i64 3577922}
!11435 = !DILocation(line: 499, column: 3, scope: !11432)
!11436 = !DILocation(line: 0, scope: !11421)
!11437 = !DILocalVariable(name: "value", arg: 1, scope: !11438, file: !6256, line: 527, type: !152)
!11438 = distinct !DISubprogram(name: "__STREXW", scope: !6256, file: !6256, line: 527, type: !11439, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11441)
!11439 = !DISubroutineType(types: !11440)
!11440 = !{!152, !152, !1610}
!11441 = !{!11437, !11442, !11443}
!11442 = !DILocalVariable(name: "addr", arg: 2, scope: !11438, file: !6256, line: 527, type: !1610)
!11443 = !DILocalVariable(name: "result", scope: !11438, file: !6256, line: 529, type: !152)
!11444 = !DILocation(line: 0, scope: !11438, inlinedAt: !11445)
!11445 = distinct !DILocation(line: 499, column: 3, scope: !11421)
!11446 = !DILocation(line: 531, column: 4, scope: !11438, inlinedAt: !11445)
!11447 = !{i64 3579358}
!11448 = distinct !{!11448, !11423, !11423}
!11449 = !DILocation(line: 500, column: 1, scope: !11416)
!11450 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10932, file: !10932, line: 850, type: !11119, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11451)
!11451 = !{!11452, !11453, !11454, !11455}
!11452 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11450, file: !10932, line: 850, type: !1560)
!11453 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11450, file: !10932, line: 850, type: !152)
!11454 = !DILocalVariable(name: "Parity", arg: 3, scope: !11450, file: !10932, line: 850, type: !152)
!11455 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11450, file: !10932, line: 851, type: !152)
!11456 = !DILocation(line: 0, scope: !11450)
!11457 = !DILocation(line: 853, column: 3, scope: !11450)
!11458 = !DILocation(line: 854, column: 3, scope: !11450)
!11459 = !DILocation(line: 855, column: 1, scope: !11450)
!11460 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10932, file: !10932, line: 1337, type: !10995, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11461)
!11461 = !{!11462}
!11462 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11460, file: !10932, line: 1337, type: !1560)
!11463 = !DILocation(line: 0, scope: !11460)
!11464 = !DILocation(line: 1339, column: 3, scope: !11460)
!11465 = !DILocation(line: 1340, column: 1, scope: !11460)
!11466 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1654, file: !1654, line: 316, type: !11467, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11469)
!11467 = !DISubroutineType(types: !11468)
!11468 = !{!107, !1651, !1657}
!11469 = !{!11470, !11471, !11472}
!11470 = !DILocalVariable(name: "config", arg: 1, scope: !11466, file: !1654, line: 317, type: !1651)
!11471 = !DILocalVariable(name: "state", arg: 2, scope: !11466, file: !1654, line: 318, type: !1657)
!11472 = !DILocalVariable(name: "reg", scope: !11466, file: !1654, line: 320, type: !22)
!11473 = !DILocation(line: 0, scope: !11466)
!11474 = !DILocation(line: 329, column: 39, scope: !11466)
!11475 = !DILocation(line: 329, column: 52, scope: !11466)
!11476 = !DILocation(line: 329, column: 9, scope: !11466)
!11477 = !DILocation(line: 329, column: 2, scope: !11466)
!11478 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !11378, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11479)
!11479 = !{!11480}
!11480 = !DILocalVariable(name: "dev", arg: 1, scope: !11478, file: !247, line: 730, type: !1519)
!11481 = !DILocation(line: 0, scope: !11478)
!11482 = !DILocation(line: 732, column: 9, scope: !11478)
!11483 = !DILocation(line: 732, column: 2, scope: !11478)
!11484 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1777, file: !1777, line: 270, type: !1783, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !11485)
!11485 = !{!11486}
!11486 = !DILocalVariable(name: "dev", arg: 1, scope: !11484, file: !1777, line: 270, type: !1785)
!11487 = !DILocation(line: 0, scope: !11484)
!11488 = !DILocation(line: 274, column: 2, scope: !11484)
!11489 = !DILocation(line: 275, column: 12, scope: !11484)
!11490 = !DILocation(line: 276, column: 15, scope: !11484)
!11491 = !DILocation(line: 277, column: 16, scope: !11484)
!11492 = !DILocation(line: 278, column: 15, scope: !11484)
!11493 = !DILocation(line: 279, column: 16, scope: !11484)
!11494 = !DILocation(line: 282, column: 2, scope: !11484)
!11495 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6296, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !11496)
!11496 = !{!11497, !11498}
!11497 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11495, file: !463, line: 1814, type: !922)
!11498 = !DILocalVariable(name: "priority", arg: 2, scope: !11495, file: !463, line: 1814, type: !152)
!11499 = !DILocation(line: 0, scope: !11495)
!11500 = !DILocation(line: 1822, column: 46, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11502, file: !463, line: 1821, column: 3)
!11502 = distinct !DILexicalBlock(scope: !11495, file: !463, line: 1816, column: 7)
!11503 = !DILocation(line: 1824, column: 1, scope: !11495)
!11504 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1777, file: !1777, line: 118, type: !131, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !11505)
!11505 = !{!11506, !11507}
!11506 = !DILocalVariable(name: "arg", arg: 1, scope: !11504, file: !1777, line: 118, type: !106)
!11507 = !DILocalVariable(name: "dticks", scope: !11504, file: !1777, line: 121, type: !152)
!11508 = !DILocation(line: 0, scope: !11504)
!11509 = !DILocation(line: 124, column: 2, scope: !11504)
!11510 = !DILocation(line: 129, column: 17, scope: !11504)
!11511 = !DILocation(line: 129, column: 14, scope: !11504)
!11512 = !DILocation(line: 130, column: 15, scope: !11504)
!11513 = !DILocation(line: 145, column: 27, scope: !11514)
!11514 = distinct !DILexicalBlock(scope: !11515, file: !1777, line: 132, column: 16)
!11515 = distinct !DILexicalBlock(scope: !11504, file: !1777, line: 132, column: 6)
!11516 = !DILocation(line: 145, column: 25, scope: !11514)
!11517 = !DILocation(line: 145, column: 45, scope: !11514)
!11518 = !DILocation(line: 146, column: 30, scope: !11514)
!11519 = !DILocation(line: 146, column: 20, scope: !11514)
!11520 = !DILocation(line: 147, column: 3, scope: !11514)
!11521 = !DILocation(line: 151, column: 2, scope: !11504)
!11522 = !DILocation(line: 152, column: 1, scope: !11504)
!11523 = distinct !DISubprogram(name: "elapsed", scope: !1777, file: !1777, line: 85, type: !6343, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !11524)
!11524 = !{!11525, !11526, !11527}
!11525 = !DILocalVariable(name: "val1", scope: !11523, file: !1777, line: 87, type: !152)
!11526 = !DILocalVariable(name: "ctrl", scope: !11523, file: !1777, line: 88, type: !152)
!11527 = !DILocalVariable(name: "val2", scope: !11523, file: !1777, line: 89, type: !152)
!11528 = !DILocation(line: 87, column: 27, scope: !11523)
!11529 = !DILocation(line: 0, scope: !11523)
!11530 = !DILocation(line: 88, column: 27, scope: !11523)
!11531 = !DILocation(line: 89, column: 27, scope: !11523)
!11532 = !DILocation(line: 105, column: 12, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11523, file: !1777, line: 105, column: 6)
!11534 = !DILocation(line: 106, column: 6, scope: !11533)
!11535 = !DILocation(line: 107, column: 16, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11533, file: !1777, line: 106, column: 24)
!11537 = !DILocation(line: 111, column: 18, scope: !11536)
!11538 = !DILocation(line: 112, column: 2, scope: !11536)
!11539 = !DILocation(line: 114, column: 20, scope: !11523)
!11540 = !DILocation(line: 114, column: 30, scope: !11523)
!11541 = !DILocation(line: 114, column: 28, scope: !11523)
!11542 = !DILocation(line: 114, column: 2, scope: !11523)
!11543 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1777, file: !1777, line: 154, type: !11544, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !11546)
!11544 = !DISubroutineType(types: !11545)
!11545 = !{null, !896, !145}
!11546 = !{!11547, !11548, !11549, !11550, !11551, !11552, !11553, !11558, !11559}
!11547 = !DILocalVariable(name: "ticks", arg: 1, scope: !11543, file: !1777, line: 154, type: !896)
!11548 = !DILocalVariable(name: "idle", arg: 2, scope: !11543, file: !1777, line: 154, type: !145)
!11549 = !DILocalVariable(name: "delay", scope: !11543, file: !1777, line: 169, type: !152)
!11550 = !DILocalVariable(name: "val1", scope: !11543, file: !1777, line: 170, type: !152)
!11551 = !DILocalVariable(name: "val2", scope: !11543, file: !1777, line: 170, type: !152)
!11552 = !DILocalVariable(name: "last_load_", scope: !11543, file: !1777, line: 171, type: !152)
!11553 = !DILocalVariable(name: "key", scope: !11543, file: !1777, line: 176, type: !11554)
!11554 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !11555)
!11555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !11556)
!11556 = !{!11557}
!11557 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11555, file: !420, line: 33, baseType: !107, size: 32)
!11558 = !DILocalVariable(name: "pending", scope: !11543, file: !1777, line: 178, type: !152)
!11559 = !DILocalVariable(name: "unannounced", scope: !11543, file: !1777, line: 185, type: !152)
!11560 = !DILocation(line: 0, scope: !11543)
!11561 = !DILocation(line: 162, column: 49, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !11543, file: !1777, line: 162, column: 6)
!11563 = !DILocation(line: 163, column: 17, scope: !11564)
!11564 = distinct !DILexicalBlock(scope: !11562, file: !1777, line: 162, column: 78)
!11565 = !DILocation(line: 164, column: 13, scope: !11564)
!11566 = !DILocation(line: 165, column: 3, scope: !11564)
!11567 = !DILocation(line: 171, column: 24, scope: !11543)
!11568 = !DILocation(line: 173, column: 10, scope: !11543)
!11569 = !DILocation(line: 174, column: 10, scope: !11543)
!11570 = !DILocalVariable(name: "l", arg: 1, scope: !11571, file: !420, line: 136, type: !11574)
!11571 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !11572, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !11575)
!11572 = !DISubroutineType(types: !11573)
!11573 = !{!11554, !11574}
!11574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 32)
!11575 = !{!11570, !11576}
!11576 = !DILocalVariable(name: "k", scope: !11571, file: !420, line: 139, type: !11554)
!11577 = !DILocation(line: 0, scope: !11571, inlinedAt: !11578)
!11578 = distinct !DILocation(line: 176, column: 25, scope: !11543)
!11579 = !DILocation(line: 55, column: 2, scope: !11580, inlinedAt: !11584)
!11580 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5937, file: !5937, line: 42, type: !5938, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !11581)
!11581 = !{!11582, !11583}
!11582 = !DILocalVariable(name: "key", scope: !11580, file: !5937, line: 44, type: !32)
!11583 = !DILocalVariable(name: "tmp", scope: !11580, file: !5937, line: 53, type: !32)
!11584 = distinct !DILocation(line: 145, column: 10, scope: !11571, inlinedAt: !11578)
!11585 = !{i64 2201120}
!11586 = !DILocation(line: 0, scope: !11580, inlinedAt: !11584)
!11587 = !DILocation(line: 148, column: 2, scope: !11588, inlinedAt: !11578)
!11588 = distinct !DILexicalBlock(scope: !11589, file: !420, line: 148, column: 2)
!11589 = distinct !DILexicalBlock(scope: !11571, file: !420, line: 148, column: 2)
!11590 = !DILocation(line: 148, column: 2, scope: !11589, inlinedAt: !11578)
!11591 = !DILocation(line: 148, column: 2, scope: !11592, inlinedAt: !11578)
!11592 = distinct !DILexicalBlock(scope: !11588, file: !420, line: 148, column: 2)
!11593 = !DILocation(line: 160, column: 2, scope: !11571, inlinedAt: !11578)
!11594 = !DILocation(line: 178, column: 21, scope: !11543)
!11595 = !DILocation(line: 180, column: 18, scope: !11543)
!11596 = !DILocation(line: 182, column: 14, scope: !11543)
!11597 = !DILocation(line: 183, column: 15, scope: !11543)
!11598 = !DILocation(line: 185, column: 39, scope: !11543)
!11599 = !DILocation(line: 185, column: 37, scope: !11543)
!11600 = !DILocation(line: 187, column: 27, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11543, file: !1777, line: 187, column: 6)
!11602 = !DILocation(line: 187, column: 6, scope: !11543)
!11603 = !DILocation(line: 202, column: 27, scope: !11604)
!11604 = distinct !DILexicalBlock(scope: !11601, file: !1777, line: 195, column: 9)
!11605 = !DILocation(line: 202, column: 48, scope: !11604)
!11606 = !DILocation(line: 203, column: 9, scope: !11604)
!11607 = !DILocation(line: 204, column: 11, scope: !11604)
!11608 = !DILocation(line: 205, column: 13, scope: !11609)
!11609 = distinct !DILexicalBlock(scope: !11604, file: !1777, line: 205, column: 7)
!11610 = !DILocation(line: 205, column: 7, scope: !11604)
!11611 = !DILocation(line: 0, scope: !11601)
!11612 = !DILocation(line: 212, column: 18, scope: !11543)
!11613 = !DILocation(line: 214, column: 28, scope: !11543)
!11614 = !DILocation(line: 214, column: 16, scope: !11543)
!11615 = !DILocation(line: 215, column: 15, scope: !11543)
!11616 = !DILocation(line: 227, column: 11, scope: !11617)
!11617 = distinct !DILexicalBlock(scope: !11543, file: !1777, line: 227, column: 6)
!11618 = !DILocation(line: 227, column: 6, scope: !11543)
!11619 = !DILocation(line: 228, column: 15, scope: !11620)
!11620 = distinct !DILexicalBlock(scope: !11617, file: !1777, line: 227, column: 19)
!11621 = !DILocation(line: 228, column: 38, scope: !11620)
!11622 = !DILocation(line: 228, column: 24, scope: !11620)
!11623 = !DILocation(line: 229, column: 2, scope: !11620)
!11624 = !DILocation(line: 230, column: 24, scope: !11625)
!11625 = distinct !DILexicalBlock(scope: !11617, file: !1777, line: 229, column: 9)
!11626 = !DILocation(line: 230, column: 15, scope: !11625)
!11627 = !DILocation(line: 0, scope: !11617)
!11628 = !DILocalVariable(name: "key", arg: 2, scope: !11629, file: !420, line: 190, type: !11554)
!11629 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !11630, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !11632)
!11630 = !DISubroutineType(types: !11631)
!11631 = !{null, !11574, !11554}
!11632 = !{!11633, !11628}
!11633 = !DILocalVariable(name: "l", arg: 1, scope: !11629, file: !420, line: 189, type: !11574)
!11634 = !DILocation(line: 0, scope: !11629, inlinedAt: !11635)
!11635 = distinct !DILocation(line: 232, column: 2, scope: !11543)
!11636 = !DILocation(line: 194, column: 2, scope: !11637, inlinedAt: !11635)
!11637 = distinct !DILexicalBlock(scope: !11638, file: !420, line: 194, column: 2)
!11638 = distinct !DILexicalBlock(scope: !11629, file: !420, line: 194, column: 2)
!11639 = !DILocation(line: 194, column: 2, scope: !11638, inlinedAt: !11635)
!11640 = !DILocation(line: 194, column: 2, scope: !11641, inlinedAt: !11635)
!11641 = distinct !DILexicalBlock(scope: !11637, file: !420, line: 194, column: 2)
!11642 = !DILocalVariable(name: "key", arg: 1, scope: !11643, file: !5937, line: 84, type: !32)
!11643 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5937, file: !5937, line: 84, type: !5948, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !11644)
!11644 = !{!11642}
!11645 = !DILocation(line: 0, scope: !11643, inlinedAt: !11646)
!11646 = distinct !DILocation(line: 215, column: 2, scope: !11629, inlinedAt: !11635)
!11647 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !11646)
!11648 = !{i64 2201937}
!11649 = !DILocation(line: 234, column: 1, scope: !11543)
!11650 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1777, file: !1777, line: 236, type: !6343, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !11651)
!11651 = !{!11652, !11653}
!11652 = !DILocalVariable(name: "key", scope: !11650, file: !1777, line: 242, type: !11554)
!11653 = !DILocalVariable(name: "cyc", scope: !11650, file: !1777, line: 243, type: !152)
!11654 = !DILocation(line: 0, scope: !11571, inlinedAt: !11655)
!11655 = distinct !DILocation(line: 242, column: 25, scope: !11650)
!11656 = !DILocation(line: 55, column: 2, scope: !11580, inlinedAt: !11657)
!11657 = distinct !DILocation(line: 145, column: 10, scope: !11571, inlinedAt: !11655)
!11658 = !DILocation(line: 0, scope: !11580, inlinedAt: !11657)
!11659 = !DILocation(line: 148, column: 2, scope: !11588, inlinedAt: !11655)
!11660 = !DILocation(line: 148, column: 2, scope: !11589, inlinedAt: !11655)
!11661 = !DILocation(line: 148, column: 2, scope: !11592, inlinedAt: !11655)
!11662 = !DILocation(line: 160, column: 2, scope: !11571, inlinedAt: !11655)
!11663 = !DILocation(line: 0, scope: !11650)
!11664 = !DILocation(line: 243, column: 17, scope: !11650)
!11665 = !DILocation(line: 243, column: 29, scope: !11650)
!11666 = !DILocation(line: 243, column: 43, scope: !11650)
!11667 = !DILocation(line: 0, scope: !11629, inlinedAt: !11668)
!11668 = distinct !DILocation(line: 245, column: 2, scope: !11650)
!11669 = !DILocation(line: 194, column: 2, scope: !11637, inlinedAt: !11668)
!11670 = !DILocation(line: 194, column: 2, scope: !11638, inlinedAt: !11668)
!11671 = !DILocation(line: 194, column: 2, scope: !11641, inlinedAt: !11668)
!11672 = !DILocation(line: 243, column: 27, scope: !11650)
!11673 = !DILocation(line: 243, column: 41, scope: !11650)
!11674 = !DILocation(line: 0, scope: !11643, inlinedAt: !11675)
!11675 = distinct !DILocation(line: 215, column: 2, scope: !11629, inlinedAt: !11668)
!11676 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !11675)
!11677 = !DILocation(line: 246, column: 13, scope: !11650)
!11678 = !DILocation(line: 246, column: 2, scope: !11650)
!11679 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1777, file: !1777, line: 249, type: !6343, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !11680)
!11680 = !{!11681, !11682}
!11681 = !DILocalVariable(name: "key", scope: !11679, file: !1777, line: 251, type: !11554)
!11682 = !DILocalVariable(name: "ret", scope: !11679, file: !1777, line: 252, type: !152)
!11683 = !DILocation(line: 0, scope: !11571, inlinedAt: !11684)
!11684 = distinct !DILocation(line: 251, column: 25, scope: !11679)
!11685 = !DILocation(line: 55, column: 2, scope: !11580, inlinedAt: !11686)
!11686 = distinct !DILocation(line: 145, column: 10, scope: !11571, inlinedAt: !11684)
!11687 = !DILocation(line: 0, scope: !11580, inlinedAt: !11686)
!11688 = !DILocation(line: 148, column: 2, scope: !11588, inlinedAt: !11684)
!11689 = !DILocation(line: 148, column: 2, scope: !11589, inlinedAt: !11684)
!11690 = !DILocation(line: 148, column: 2, scope: !11592, inlinedAt: !11684)
!11691 = !DILocation(line: 160, column: 2, scope: !11571, inlinedAt: !11684)
!11692 = !DILocation(line: 0, scope: !11679)
!11693 = !DILocation(line: 252, column: 17, scope: !11679)
!11694 = !DILocation(line: 252, column: 29, scope: !11679)
!11695 = !DILocation(line: 0, scope: !11629, inlinedAt: !11696)
!11696 = distinct !DILocation(line: 254, column: 2, scope: !11679)
!11697 = !DILocation(line: 194, column: 2, scope: !11637, inlinedAt: !11696)
!11698 = !DILocation(line: 194, column: 2, scope: !11638, inlinedAt: !11696)
!11699 = !DILocation(line: 194, column: 2, scope: !11641, inlinedAt: !11696)
!11700 = !DILocation(line: 252, column: 27, scope: !11679)
!11701 = !DILocation(line: 0, scope: !11643, inlinedAt: !11702)
!11702 = distinct !DILocation(line: 215, column: 2, scope: !11629, inlinedAt: !11696)
!11703 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !11702)
!11704 = !DILocation(line: 255, column: 2, scope: !11679)
!11705 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1777, file: !1777, line: 258, type: !3089, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !2166)
!11706 = !DILocation(line: 260, column: 6, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11705, file: !1777, line: 260, column: 6)
!11708 = !DILocation(line: 260, column: 16, scope: !11707)
!11709 = !DILocation(line: 260, column: 6, scope: !11705)
!11710 = !DILocation(line: 261, column: 17, scope: !11711)
!11711 = distinct !DILexicalBlock(scope: !11707, file: !1777, line: 260, column: 34)
!11712 = !DILocation(line: 262, column: 2, scope: !11711)
!11713 = !DILocation(line: 263, column: 1, scope: !11705)
!11714 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1777, file: !1777, line: 265, type: !3089, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !2166)
!11715 = !DILocation(line: 267, column: 16, scope: !11714)
!11716 = !DILocation(line: 268, column: 1, scope: !11714)
!11717 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11718, file: !11718, line: 9, type: !11719, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !11742)
!11718 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11719 = !DISubroutineType(types: !11720)
!11720 = !{!107, !11721, !195, !11741}
!11721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11722, size: 32)
!11722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11723)
!11723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1654, line: 60, size: 64, elements: !11724)
!11724 = !{!11725, !11740}
!11725 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11723, file: !1654, line: 69, baseType: !11726, size: 32)
!11726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11727, size: 32)
!11727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11728)
!11728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1654, line: 50, size: 64, elements: !11729)
!11729 = !{!11730, !11738, !11739}
!11730 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11728, file: !1654, line: 52, baseType: !11731, size: 32)
!11731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11732, size: 32)
!11732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11733)
!11733 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1665, line: 37, baseType: !11734)
!11734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1665, line: 32, size: 64, elements: !11735)
!11735 = !{!11736, !11737}
!11736 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11734, file: !1665, line: 34, baseType: !152, size: 32)
!11737 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11734, file: !1665, line: 36, baseType: !152, size: 32, offset: 32)
!11738 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11728, file: !1654, line: 54, baseType: !195, size: 8, offset: 32)
!11739 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11728, file: !1654, line: 56, baseType: !195, size: 8, offset: 40)
!11740 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11723, file: !1654, line: 71, baseType: !195, size: 8, offset: 32)
!11741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11726, size: 32)
!11742 = !{!11743, !11744, !11745}
!11743 = !DILocalVariable(name: "config", arg: 1, scope: !11717, file: !11718, line: 9, type: !11721)
!11744 = !DILocalVariable(name: "id", arg: 2, scope: !11717, file: !11718, line: 9, type: !195)
!11745 = !DILocalVariable(name: "state", arg: 3, scope: !11717, file: !11718, line: 10, type: !11741)
!11746 = !DILocation(line: 0, scope: !11717)
!11747 = !DILocation(line: 12, column: 20, scope: !11717)
!11748 = !DILocation(line: 13, column: 27, scope: !11717)
!11749 = !DILocation(line: 13, column: 42, scope: !11717)
!11750 = !DILocation(line: 13, column: 19, scope: !11717)
!11751 = !DILocation(line: 13, column: 16, scope: !11717)
!11752 = !DILocation(line: 13, column: 2, scope: !11717)
!11753 = distinct !{!11753, !11752, !11754}
!11754 = !DILocation(line: 19, column: 2, scope: !11717)
!11755 = !DILocation(line: 14, column: 23, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11757, file: !11718, line: 14, column: 7)
!11757 = distinct !DILexicalBlock(scope: !11717, file: !11718, line: 13, column: 54)
!11758 = !DILocation(line: 14, column: 10, scope: !11756)
!11759 = !DILocation(line: 18, column: 11, scope: !11757)
!11760 = !DILocation(line: 14, column: 7, scope: !11757)
!11761 = !DILocation(line: 22, column: 1, scope: !11717)
!11762 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1896, file: !1896, line: 193, type: !11763, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1814, retainedNodes: !11772)
!11763 = !DISubroutineType(types: !11764)
!11764 = !{!107, !11765, !195, !22}
!11765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11766, size: 32)
!11766 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11767)
!11767 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1665, line: 37, baseType: !11768)
!11768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1665, line: 32, size: 64, elements: !11769)
!11769 = !{!11770, !11771}
!11770 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11768, file: !1665, line: 34, baseType: !152, size: 32)
!11771 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11768, file: !1665, line: 36, baseType: !152, size: 32, offset: 32)
!11772 = !{!11773, !11774, !11775, !11776, !11777, !11778, !11779, !11780, !11782}
!11773 = !DILocalVariable(name: "pins", arg: 1, scope: !11762, file: !1896, line: 193, type: !11765)
!11774 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11762, file: !1896, line: 193, type: !195)
!11775 = !DILocalVariable(name: "reg", arg: 3, scope: !11762, file: !1896, line: 194, type: !22)
!11776 = !DILocalVariable(name: "pin", scope: !11762, file: !1896, line: 196, type: !152)
!11777 = !DILocalVariable(name: "mux", scope: !11762, file: !1896, line: 196, type: !152)
!11778 = !DILocalVariable(name: "pin_cgf", scope: !11762, file: !1896, line: 197, type: !152)
!11779 = !DILocalVariable(name: "ret", scope: !11762, file: !1896, line: 198, type: !107)
!11780 = !DILocalVariable(name: "i", scope: !11781, file: !1896, line: 209, type: !195)
!11781 = distinct !DILexicalBlock(scope: !11762, file: !1896, line: 209, column: 2)
!11782 = !DILocalVariable(name: "gpio_out", scope: !11783, file: !1896, line: 239, type: !152)
!11783 = distinct !DILexicalBlock(scope: !11784, file: !1896, line: 238, column: 55)
!11784 = distinct !DILexicalBlock(scope: !11785, file: !1896, line: 238, column: 14)
!11785 = distinct !DILexicalBlock(scope: !11786, file: !1896, line: 236, column: 14)
!11786 = distinct !DILexicalBlock(scope: !11787, file: !1896, line: 234, column: 7)
!11787 = distinct !DILexicalBlock(scope: !11788, file: !1896, line: 209, column: 41)
!11788 = distinct !DILexicalBlock(scope: !11781, file: !1896, line: 209, column: 2)
!11789 = !DILocation(line: 0, scope: !11762)
!11790 = !DILocation(line: 0, scope: !11781)
!11791 = !DILocation(line: 209, column: 25, scope: !11788)
!11792 = !DILocation(line: 209, column: 2, scope: !11781)
!11793 = distinct !{!11793, !11792, !11794}
!11794 = !DILocation(line: 259, column: 2, scope: !11781)
!11795 = !DILocation(line: 210, column: 17, scope: !11787)
!11796 = !DILocation(line: 234, column: 7, scope: !11786)
!11797 = !DILocation(line: 234, column: 33, scope: !11786)
!11798 = !DILocation(line: 234, column: 7, scope: !11787)
!11799 = !DILocation(line: 235, column: 22, scope: !11800)
!11800 = distinct !DILexicalBlock(scope: !11786, file: !1896, line: 234, column: 49)
!11801 = !DILocation(line: 235, column: 29, scope: !11800)
!11802 = !DILocation(line: 236, column: 3, scope: !11800)
!11803 = !DILocation(line: 236, column: 14, scope: !11786)
!11804 = !DILocation(line: 239, column: 32, scope: !11783)
!11805 = !DILocation(line: 0, scope: !11783)
!11806 = !DILocation(line: 241, column: 8, scope: !11783)
!11807 = !DILocation(line: 246, column: 3, scope: !11783)
!11808 = !DILocation(line: 252, column: 9, scope: !11787)
!11809 = !DILocation(line: 255, column: 9, scope: !11787)
!11810 = !DILocation(line: 256, column: 11, scope: !11811)
!11811 = distinct !DILexicalBlock(scope: !11787, file: !1896, line: 256, column: 7)
!11812 = !DILocation(line: 209, column: 37, scope: !11788)
!11813 = !DILocation(line: 256, column: 7, scope: !11787)
!11814 = !DILocation(line: 262, column: 1, scope: !11762)
!11815 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1896, file: !1896, line: 176, type: !11816, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1814, retainedNodes: !11818)
!11816 = !DISubroutineType(types: !11817)
!11817 = !{!107, !152, !152, !152}
!11818 = !{!11819, !11820, !11821, !11822}
!11819 = !DILocalVariable(name: "pin", arg: 1, scope: !11815, file: !1896, line: 176, type: !152)
!11820 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11815, file: !1896, line: 176, type: !152)
!11821 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11815, file: !1896, line: 176, type: !152)
!11822 = !DILocalVariable(name: "port_device", scope: !11815, file: !1896, line: 178, type: !1826)
!11823 = !DILocation(line: 0, scope: !11815)
!11824 = !DILocation(line: 180, column: 22, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11815, file: !1896, line: 180, column: 6)
!11826 = !DILocation(line: 180, column: 6, scope: !11815)
!11827 = !DILocation(line: 180, column: 6, scope: !11825)
!11828 = !DILocation(line: 184, column: 16, scope: !11815)
!11829 = !DILocation(line: 186, column: 19, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11815, file: !1896, line: 186, column: 6)
!11831 = !DILocation(line: 186, column: 28, scope: !11830)
!11832 = !DILocation(line: 186, column: 33, scope: !11830)
!11833 = !DILocation(line: 186, column: 6, scope: !11815)
!11834 = !DILocation(line: 190, column: 43, scope: !11815)
!11835 = !DILocation(line: 190, column: 9, scope: !11815)
!11836 = !DILocation(line: 190, column: 2, scope: !11815)
!11837 = !DILocation(line: 191, column: 1, scope: !11815)
!11838 = distinct !DISubprogram(name: "device_is_ready", scope: !9742, file: !9742, line: 47, type: !11839, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1814, retainedNodes: !11841)
!11839 = !DISubroutineType(types: !11840)
!11840 = !{!145, !1826}
!11841 = !{!11842}
!11842 = !DILocalVariable(name: "dev", arg: 1, scope: !11838, file: !9742, line: 47, type: !1826)
!11843 = !DILocation(line: 0, scope: !11838)
!11844 = !DILocation(line: 55, column: 2, scope: !11845)
!11845 = distinct !DILexicalBlock(scope: !11838, file: !9742, line: 55, column: 2)
!11846 = !{i64 2149439187}
!11847 = !DILocation(line: 56, column: 9, scope: !11838)
!11848 = !DILocation(line: 56, column: 2, scope: !11838)
!11849 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !11839, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1814, retainedNodes: !11850)
!11850 = !{!11851}
!11851 = !DILocalVariable(name: "dev", arg: 1, scope: !11849, file: !247, line: 730, type: !1826)
!11852 = !DILocation(line: 0, scope: !11849)
!11853 = !DILocation(line: 732, column: 9, scope: !11849)
!11854 = !DILocation(line: 732, column: 2, scope: !11849)
!11855 = distinct !DISubprogram(name: "SystemInit", scope: !1944, file: !1944, line: 167, type: !3089, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !2166)
!11856 = !DILocation(line: 182, column: 1, scope: !11855)
!11857 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1944, file: !1944, line: 220, type: !3089, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !11858)
!11858 = !{!11859, !11860, !11861, !11862, !11863}
!11859 = !DILocalVariable(name: "tmp", scope: !11857, file: !1944, line: 222, type: !152)
!11860 = !DILocalVariable(name: "pllvco", scope: !11857, file: !1944, line: 222, type: !152)
!11861 = !DILocalVariable(name: "pllp", scope: !11857, file: !1944, line: 222, type: !152)
!11862 = !DILocalVariable(name: "pllsource", scope: !11857, file: !1944, line: 222, type: !152)
!11863 = !DILocalVariable(name: "pllm", scope: !11857, file: !1944, line: 222, type: !152)
!11864 = !DILocation(line: 0, scope: !11857)
!11865 = !DILocation(line: 225, column: 14, scope: !11857)
!11866 = !DILocation(line: 225, column: 19, scope: !11857)
!11867 = !DILocation(line: 227, column: 3, scope: !11857)
!11868 = !DILocation(line: 234, column: 7, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11857, file: !1944, line: 228, column: 3)
!11870 = !DILocation(line: 240, column: 25, scope: !11869)
!11871 = !DILocation(line: 241, column: 19, scope: !11869)
!11872 = !DILocation(line: 241, column: 27, scope: !11869)
!11873 = !DILocation(line: 243, column: 21, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !11869, file: !1944, line: 243, column: 11)
!11875 = !DILocation(line: 0, scope: !11874)
!11876 = !DILocation(line: 254, column: 22, scope: !11869)
!11877 = !DILocation(line: 254, column: 62, scope: !11869)
!11878 = !DILocation(line: 255, column: 31, scope: !11869)
!11879 = !DILocation(line: 256, column: 7, scope: !11869)
!11880 = !DILocation(line: 0, scope: !11869)
!11881 = !DILocation(line: 263, column: 30, scope: !11857)
!11882 = !DILocation(line: 263, column: 52, scope: !11857)
!11883 = !DILocation(line: 263, column: 9, scope: !11857)
!11884 = !DILocation(line: 265, column: 19, scope: !11857)
!11885 = !DILocation(line: 266, column: 1, scope: !11857)
!11886 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11887, file: !11887, line: 200, type: !11888, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !2166)
!11887 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11888 = !DISubroutineType(types: !11889)
!11889 = !{!11890}
!11890 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2906, line: 44, baseType: !2905)
!11891 = !DILocation(line: 202, column: 3, scope: !11886)
!11892 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11887, file: !11887, line: 219, type: !11893, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !11917)
!11893 = !DISubroutineType(types: !11894)
!11894 = !{!11890, !11895}
!11895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11896, size: 32)
!11896 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11897, line: 70, baseType: !11898)
!11897 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11898 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11897, line: 49, size: 384, elements: !11899)
!11899 = !{!11900, !11901, !11902, !11903, !11904, !11905, !11906}
!11900 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11898, file: !11897, line: 51, baseType: !152, size: 32)
!11901 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11898, file: !11897, line: 54, baseType: !152, size: 32, offset: 32)
!11902 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11898, file: !11897, line: 57, baseType: !152, size: 32, offset: 64)
!11903 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11898, file: !11897, line: 60, baseType: !152, size: 32, offset: 96)
!11904 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11898, file: !11897, line: 63, baseType: !152, size: 32, offset: 128)
!11905 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11898, file: !11897, line: 66, baseType: !152, size: 32, offset: 160)
!11906 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11898, file: !11897, line: 69, baseType: !11907, size: 192, offset: 192)
!11907 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11908, line: 73, baseType: !11909)
!11908 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11909 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11908, line: 45, size: 192, elements: !11910)
!11910 = !{!11911, !11912, !11913, !11914, !11915, !11916}
!11911 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11909, file: !11908, line: 47, baseType: !152, size: 32)
!11912 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11909, file: !11908, line: 50, baseType: !152, size: 32, offset: 32)
!11913 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11909, file: !11908, line: 53, baseType: !152, size: 32, offset: 64)
!11914 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11909, file: !11908, line: 56, baseType: !152, size: 32, offset: 96)
!11915 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11909, file: !11908, line: 60, baseType: !152, size: 32, offset: 128)
!11916 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11909, file: !11908, line: 63, baseType: !152, size: 32, offset: 160)
!11917 = !{!11918, !11919, !11920, !11921, !11925}
!11918 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11892, file: !11887, line: 219, type: !11895)
!11919 = !DILocalVariable(name: "tickstart", scope: !11892, file: !11887, line: 221, type: !152)
!11920 = !DILocalVariable(name: "pll_config", scope: !11892, file: !11887, line: 221, type: !152)
!11921 = !DILocalVariable(name: "pwrclkchanged", scope: !11922, file: !11887, line: 391, type: !11924)
!11922 = distinct !DILexicalBlock(scope: !11923, file: !11887, line: 390, column: 3)
!11923 = distinct !DILexicalBlock(scope: !11892, file: !11887, line: 389, column: 6)
!11924 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !963, line: 188, baseType: !2912)
!11925 = !DILocalVariable(name: "tmpreg", scope: !11926, file: !11887, line: 400, type: !227)
!11926 = distinct !DILexicalBlock(scope: !11927, file: !11887, line: 400, column: 7)
!11927 = distinct !DILexicalBlock(scope: !11928, file: !11887, line: 399, column: 5)
!11928 = distinct !DILexicalBlock(scope: !11922, file: !11887, line: 398, column: 8)
!11929 = !DILocation(line: 0, scope: !11892)
!11930 = !DILocation(line: 224, column: 24, scope: !11931)
!11931 = distinct !DILexicalBlock(scope: !11892, file: !11887, line: 224, column: 6)
!11932 = !DILocation(line: 224, column: 6, scope: !11892)
!11933 = !DILocation(line: 232, column: 27, scope: !11934)
!11934 = distinct !DILexicalBlock(scope: !11892, file: !11887, line: 232, column: 6)
!11935 = !DILocation(line: 232, column: 43, scope: !11934)
!11936 = !DILocation(line: 232, column: 69, scope: !11934)
!11937 = !DILocation(line: 232, column: 6, scope: !11892)
!11938 = !DILocation(line: 237, column: 9, scope: !11939)
!11939 = distinct !DILexicalBlock(scope: !11940, file: !11887, line: 237, column: 8)
!11940 = distinct !DILexicalBlock(scope: !11934, file: !11887, line: 233, column: 3)
!11941 = !DILocation(line: 237, column: 39, scope: !11939)
!11942 = !DILocation(line: 237, column: 60, scope: !11939)
!11943 = !DILocation(line: 238, column: 9, scope: !11939)
!11944 = !DILocation(line: 238, column: 39, scope: !11939)
!11945 = !DILocation(line: 238, column: 60, scope: !11939)
!11946 = !DILocation(line: 238, column: 70, scope: !11939)
!11947 = !DILocation(line: 238, column: 78, scope: !11939)
!11948 = !DILocation(line: 238, column: 100, scope: !11939)
!11949 = !DILocation(line: 237, column: 8, scope: !11940)
!11950 = !DILocation(line: 240, column: 11, scope: !11951)
!11951 = distinct !DILexicalBlock(scope: !11952, file: !11887, line: 240, column: 10)
!11952 = distinct !DILexicalBlock(scope: !11939, file: !11887, line: 239, column: 5)
!11953 = !DILocation(line: 240, column: 57, scope: !11951)
!11954 = !DILocation(line: 240, column: 80, scope: !11951)
!11955 = !DILocation(line: 240, column: 89, scope: !11951)
!11956 = !DILocation(line: 240, column: 10, scope: !11952)
!11957 = !DILocation(line: 248, column: 7, scope: !11958)
!11958 = distinct !DILexicalBlock(scope: !11959, file: !11887, line: 248, column: 7)
!11959 = distinct !DILexicalBlock(scope: !11960, file: !11887, line: 248, column: 7)
!11960 = distinct !DILexicalBlock(scope: !11939, file: !11887, line: 246, column: 5)
!11961 = !DILocation(line: 248, column: 7, scope: !11959)
!11962 = !DILocation(line: 248, column: 7, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11958, file: !11887, line: 248, column: 7)
!11964 = !DILocation(line: 248, column: 7, scope: !11965)
!11965 = distinct !DILexicalBlock(scope: !11966, file: !11887, line: 248, column: 7)
!11966 = distinct !DILexicalBlock(scope: !11958, file: !11887, line: 248, column: 7)
!11967 = !DILocation(line: 248, column: 7, scope: !11968)
!11968 = distinct !DILexicalBlock(scope: !11966, file: !11887, line: 248, column: 7)
!11969 = !DILocation(line: 0, scope: !11958)
!11970 = !DILocation(line: 251, column: 30, scope: !11971)
!11971 = distinct !DILexicalBlock(scope: !11960, file: !11887, line: 251, column: 10)
!11972 = !DILocation(line: 251, column: 40, scope: !11971)
!11973 = !DILocation(line: 0, scope: !11971)
!11974 = !DILocation(line: 251, column: 10, scope: !11960)
!11975 = !DILocation(line: 257, column: 15, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11971, file: !11887, line: 252, column: 7)
!11977 = !DILocation(line: 257, column: 51, scope: !11976)
!11978 = !DILocation(line: 257, column: 9, scope: !11976)
!11979 = !DILocation(line: 259, column: 15, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !11981, file: !11887, line: 259, column: 14)
!11981 = distinct !DILexicalBlock(scope: !11976, file: !11887, line: 258, column: 9)
!11982 = !DILocation(line: 259, column: 29, scope: !11980)
!11983 = !DILocation(line: 259, column: 43, scope: !11980)
!11984 = !DILocation(line: 259, column: 14, scope: !11981)
!11985 = distinct !{!11985, !11978, !11986}
!11986 = !DILocation(line: 263, column: 9, scope: !11976)
!11987 = !DILocation(line: 271, column: 15, scope: !11988)
!11988 = distinct !DILexicalBlock(scope: !11971, file: !11887, line: 266, column: 7)
!11989 = !DILocation(line: 271, column: 9, scope: !11988)
!11990 = !DILocation(line: 273, column: 15, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11992, file: !11887, line: 273, column: 14)
!11992 = distinct !DILexicalBlock(scope: !11988, file: !11887, line: 272, column: 9)
!11993 = !DILocation(line: 273, column: 29, scope: !11991)
!11994 = !DILocation(line: 273, column: 43, scope: !11991)
!11995 = !DILocation(line: 273, column: 14, scope: !11992)
!11996 = distinct !{!11996, !11989, !11997}
!11997 = !DILocation(line: 277, column: 9, scope: !11988)
!11998 = !DILocation(line: 282, column: 27, scope: !11999)
!11999 = distinct !DILexicalBlock(scope: !11892, file: !11887, line: 282, column: 6)
!12000 = !DILocation(line: 282, column: 43, scope: !11999)
!12001 = !DILocation(line: 282, column: 69, scope: !11999)
!12002 = !DILocation(line: 282, column: 6, scope: !11892)
!12003 = !DILocation(line: 289, column: 9, scope: !12004)
!12004 = distinct !DILexicalBlock(scope: !12005, file: !11887, line: 289, column: 8)
!12005 = distinct !DILexicalBlock(scope: !11999, file: !11887, line: 283, column: 3)
!12006 = !DILocation(line: 289, column: 39, scope: !12004)
!12007 = !DILocation(line: 289, column: 60, scope: !12004)
!12008 = !DILocation(line: 290, column: 9, scope: !12004)
!12009 = !DILocation(line: 290, column: 39, scope: !12004)
!12010 = !DILocation(line: 290, column: 60, scope: !12004)
!12011 = !DILocation(line: 290, column: 70, scope: !12004)
!12012 = !DILocation(line: 290, column: 78, scope: !12004)
!12013 = !DILocation(line: 290, column: 100, scope: !12004)
!12014 = !DILocation(line: 289, column: 8, scope: !12005)
!12015 = !DILocation(line: 293, column: 11, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !12017, file: !11887, line: 293, column: 10)
!12017 = distinct !DILexicalBlock(scope: !12004, file: !11887, line: 291, column: 5)
!12018 = !DILocation(line: 293, column: 57, scope: !12016)
!12019 = !DILocation(line: 293, column: 80, scope: !12016)
!12020 = !DILocation(line: 293, column: 89, scope: !12016)
!12021 = !DILocation(line: 293, column: 10, scope: !12017)
!12022 = !DILocation(line: 307, column: 30, scope: !12023)
!12023 = distinct !DILexicalBlock(scope: !12024, file: !11887, line: 307, column: 10)
!12024 = distinct !DILexicalBlock(scope: !12004, file: !11887, line: 305, column: 5)
!12025 = !DILocation(line: 307, column: 39, scope: !12023)
!12026 = !DILocation(line: 307, column: 10, scope: !12024)
!12027 = !DILocation(line: 310, column: 9, scope: !12028)
!12028 = distinct !DILexicalBlock(scope: !12023, file: !11887, line: 308, column: 7)
!12029 = !DILocation(line: 313, column: 21, scope: !12028)
!12030 = !DILocation(line: 316, column: 9, scope: !12028)
!12031 = !DILocation(line: 316, column: 15, scope: !12028)
!12032 = !DILocation(line: 316, column: 51, scope: !12028)
!12033 = !DILocation(line: 318, column: 15, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !12035, file: !11887, line: 318, column: 14)
!12035 = distinct !DILexicalBlock(scope: !12028, file: !11887, line: 317, column: 9)
!12036 = !DILocation(line: 318, column: 29, scope: !12034)
!12037 = !DILocation(line: 318, column: 43, scope: !12034)
!12038 = !DILocation(line: 318, column: 14, scope: !12035)
!12039 = distinct !{!12039, !12030, !12040}
!12040 = !DILocation(line: 322, column: 9, scope: !12028)
!12041 = !DILocation(line: 330, column: 9, scope: !12042)
!12042 = distinct !DILexicalBlock(scope: !12023, file: !11887, line: 328, column: 7)
!12043 = !DILocation(line: 333, column: 21, scope: !12042)
!12044 = !DILocation(line: 336, column: 9, scope: !12042)
!12045 = !DILocation(line: 336, column: 15, scope: !12042)
!12046 = !DILocation(line: 338, column: 15, scope: !12047)
!12047 = distinct !DILexicalBlock(scope: !12048, file: !11887, line: 338, column: 14)
!12048 = distinct !DILexicalBlock(scope: !12042, file: !11887, line: 337, column: 9)
!12049 = !DILocation(line: 338, column: 29, scope: !12047)
!12050 = !DILocation(line: 338, column: 43, scope: !12047)
!12051 = !DILocation(line: 338, column: 14, scope: !12048)
!12052 = distinct !{!12052, !12044, !12053}
!12053 = !DILocation(line: 342, column: 9, scope: !12042)
!12054 = !DILocation(line: 0, scope: !12004)
!12055 = !DILocation(line: 347, column: 27, scope: !12056)
!12056 = distinct !DILexicalBlock(scope: !11892, file: !11887, line: 347, column: 6)
!12057 = !DILocation(line: 347, column: 43, scope: !12056)
!12058 = !DILocation(line: 347, column: 69, scope: !12056)
!12059 = !DILocation(line: 347, column: 6, scope: !11892)
!12060 = !DILocation(line: 353, column: 28, scope: !12061)
!12061 = distinct !DILexicalBlock(scope: !12062, file: !11887, line: 353, column: 8)
!12062 = distinct !DILexicalBlock(scope: !12056, file: !11887, line: 348, column: 3)
!12063 = !DILocation(line: 353, column: 37, scope: !12061)
!12064 = !DILocation(line: 353, column: 8, scope: !12062)
!12065 = !DILocation(line: 356, column: 7, scope: !12066)
!12066 = distinct !DILexicalBlock(scope: !12061, file: !11887, line: 354, column: 5)
!12067 = !DILocation(line: 359, column: 19, scope: !12066)
!12068 = !DILocation(line: 362, column: 7, scope: !12066)
!12069 = !DILocation(line: 362, column: 13, scope: !12066)
!12070 = !DILocation(line: 362, column: 49, scope: !12066)
!12071 = !DILocation(line: 364, column: 13, scope: !12072)
!12072 = distinct !DILexicalBlock(scope: !12073, file: !11887, line: 364, column: 12)
!12073 = distinct !DILexicalBlock(scope: !12066, file: !11887, line: 363, column: 7)
!12074 = !DILocation(line: 364, column: 27, scope: !12072)
!12075 = !DILocation(line: 364, column: 41, scope: !12072)
!12076 = !DILocation(line: 364, column: 12, scope: !12073)
!12077 = distinct !{!12077, !12068, !12078}
!12078 = !DILocation(line: 368, column: 7, scope: !12066)
!12079 = !DILocation(line: 373, column: 7, scope: !12080)
!12080 = distinct !DILexicalBlock(scope: !12061, file: !11887, line: 371, column: 5)
!12081 = !DILocation(line: 376, column: 19, scope: !12080)
!12082 = !DILocation(line: 379, column: 7, scope: !12080)
!12083 = !DILocation(line: 379, column: 13, scope: !12080)
!12084 = !DILocation(line: 381, column: 13, scope: !12085)
!12085 = distinct !DILexicalBlock(scope: !12086, file: !11887, line: 381, column: 12)
!12086 = distinct !DILexicalBlock(scope: !12080, file: !11887, line: 380, column: 7)
!12087 = !DILocation(line: 381, column: 27, scope: !12085)
!12088 = !DILocation(line: 381, column: 41, scope: !12085)
!12089 = !DILocation(line: 381, column: 12, scope: !12086)
!12090 = distinct !{!12090, !12082, !12091}
!12091 = !DILocation(line: 385, column: 7, scope: !12080)
!12092 = !DILocation(line: 389, column: 27, scope: !11923)
!12093 = !DILocation(line: 389, column: 43, scope: !11923)
!12094 = !DILocation(line: 389, column: 69, scope: !11923)
!12095 = !DILocation(line: 389, column: 6, scope: !11892)
!12096 = !DILocation(line: 0, scope: !11922)
!12097 = !DILocation(line: 398, column: 8, scope: !11928)
!12098 = !DILocation(line: 398, column: 8, scope: !11922)
!12099 = !DILocation(line: 400, column: 7, scope: !11926)
!12100 = !DILocation(line: 400, column: 7, scope: !11927)
!12101 = !DILocation(line: 402, column: 5, scope: !11927)
!12102 = !DILocation(line: 404, column: 8, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !11922, file: !11887, line: 404, column: 8)
!12104 = !DILocation(line: 404, column: 8, scope: !11922)
!12105 = !DILocation(line: 407, column: 7, scope: !12106)
!12106 = distinct !DILexicalBlock(scope: !12103, file: !11887, line: 405, column: 5)
!12107 = !DILocation(line: 410, column: 19, scope: !12106)
!12108 = !DILocation(line: 412, column: 7, scope: !12106)
!12109 = !DILocation(line: 412, column: 13, scope: !12106)
!12110 = !DILocation(line: 414, column: 13, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !12112, file: !11887, line: 414, column: 12)
!12112 = distinct !DILexicalBlock(scope: !12106, file: !11887, line: 413, column: 7)
!12113 = !DILocation(line: 414, column: 27, scope: !12111)
!12114 = !DILocation(line: 414, column: 40, scope: !12111)
!12115 = !DILocation(line: 414, column: 12, scope: !12112)
!12116 = distinct !{!12116, !12108, !12117}
!12117 = !DILocation(line: 418, column: 7, scope: !12106)
!12118 = !DILocation(line: 422, column: 5, scope: !12119)
!12119 = distinct !DILexicalBlock(scope: !12120, file: !11887, line: 422, column: 5)
!12120 = distinct !DILexicalBlock(scope: !11922, file: !11887, line: 422, column: 5)
!12121 = !DILocation(line: 422, column: 5, scope: !12120)
!12122 = !DILocation(line: 422, column: 5, scope: !12123)
!12123 = distinct !DILexicalBlock(scope: !12119, file: !11887, line: 422, column: 5)
!12124 = !DILocation(line: 422, column: 5, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !12126, file: !11887, line: 422, column: 5)
!12126 = distinct !DILexicalBlock(scope: !12119, file: !11887, line: 422, column: 5)
!12127 = !DILocation(line: 422, column: 5, scope: !12128)
!12128 = distinct !DILexicalBlock(scope: !12126, file: !11887, line: 422, column: 5)
!12129 = !DILocation(line: 0, scope: !12119)
!12130 = !DILocation(line: 424, column: 28, scope: !12131)
!12131 = distinct !DILexicalBlock(scope: !11922, file: !11887, line: 424, column: 8)
!12132 = !DILocation(line: 424, column: 38, scope: !12131)
!12133 = !DILocation(line: 0, scope: !12131)
!12134 = !DILocation(line: 424, column: 8, scope: !11922)
!12135 = !DILocation(line: 430, column: 13, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12131, file: !11887, line: 425, column: 5)
!12137 = !DILocation(line: 430, column: 49, scope: !12136)
!12138 = !DILocation(line: 430, column: 7, scope: !12136)
!12139 = !DILocation(line: 432, column: 13, scope: !12140)
!12140 = distinct !DILexicalBlock(scope: !12141, file: !11887, line: 432, column: 12)
!12141 = distinct !DILexicalBlock(scope: !12136, file: !11887, line: 431, column: 7)
!12142 = !DILocation(line: 432, column: 27, scope: !12140)
!12143 = !DILocation(line: 432, column: 41, scope: !12140)
!12144 = !DILocation(line: 432, column: 12, scope: !12141)
!12145 = distinct !{!12145, !12138, !12146}
!12146 = !DILocation(line: 436, column: 7, scope: !12136)
!12147 = !DILocation(line: 444, column: 13, scope: !12148)
!12148 = distinct !DILexicalBlock(scope: !12131, file: !11887, line: 439, column: 5)
!12149 = !DILocation(line: 444, column: 7, scope: !12148)
!12150 = !DILocation(line: 446, column: 13, scope: !12151)
!12151 = distinct !DILexicalBlock(scope: !12152, file: !11887, line: 446, column: 12)
!12152 = distinct !DILexicalBlock(scope: !12148, file: !11887, line: 445, column: 7)
!12153 = !DILocation(line: 446, column: 27, scope: !12151)
!12154 = !DILocation(line: 446, column: 41, scope: !12151)
!12155 = !DILocation(line: 446, column: 12, scope: !12152)
!12156 = distinct !{!12156, !12149, !12157}
!12157 = !DILocation(line: 450, column: 7, scope: !12148)
!12158 = !DILocation(line: 454, column: 8, scope: !11922)
!12159 = !DILocation(line: 456, column: 7, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12161, file: !11887, line: 455, column: 5)
!12161 = distinct !DILexicalBlock(scope: !11922, file: !11887, line: 454, column: 8)
!12162 = !DILocation(line: 457, column: 5, scope: !12160)
!12163 = !DILocation(line: 462, column: 31, scope: !12164)
!12164 = distinct !DILexicalBlock(scope: !11892, file: !11887, line: 462, column: 7)
!12165 = !DILocation(line: 462, column: 41, scope: !12164)
!12166 = !DILocation(line: 462, column: 7, scope: !11892)
!12167 = !DILocation(line: 465, column: 8, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12169, file: !11887, line: 465, column: 8)
!12169 = distinct !DILexicalBlock(scope: !12164, file: !11887, line: 463, column: 3)
!12170 = !DILocation(line: 465, column: 38, scope: !12168)
!12171 = !DILocation(line: 465, column: 8, scope: !12169)
!12172 = !DILocation(line: 467, column: 44, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !12174, file: !11887, line: 467, column: 10)
!12174 = distinct !DILexicalBlock(scope: !12168, file: !11887, line: 466, column: 5)
!12175 = !DILocation(line: 0, scope: !12173)
!12176 = !DILocation(line: 467, column: 10, scope: !12174)
!12177 = !DILocation(line: 483, column: 15, scope: !12178)
!12178 = distinct !DILexicalBlock(scope: !12173, file: !11887, line: 468, column: 7)
!12179 = !DILocation(line: 483, column: 9, scope: !12178)
!12180 = !DILocation(line: 485, column: 15, scope: !12181)
!12181 = distinct !DILexicalBlock(scope: !12182, file: !11887, line: 485, column: 14)
!12182 = distinct !DILexicalBlock(scope: !12178, file: !11887, line: 484, column: 9)
!12183 = !DILocation(line: 485, column: 29, scope: !12181)
!12184 = !DILocation(line: 485, column: 43, scope: !12181)
!12185 = !DILocation(line: 485, column: 14, scope: !12182)
!12186 = distinct !{!12186, !12179, !12187}
!12187 = !DILocation(line: 489, column: 9, scope: !12178)
!12188 = !DILocation(line: 492, column: 9, scope: !12178)
!12189 = !DILocation(line: 498, column: 9, scope: !12178)
!12190 = !DILocation(line: 501, column: 21, scope: !12178)
!12191 = !DILocation(line: 504, column: 9, scope: !12178)
!12192 = !DILocation(line: 504, column: 15, scope: !12178)
!12193 = !DILocation(line: 504, column: 51, scope: !12178)
!12194 = !DILocation(line: 506, column: 15, scope: !12195)
!12195 = distinct !DILexicalBlock(scope: !12196, file: !11887, line: 506, column: 14)
!12196 = distinct !DILexicalBlock(scope: !12178, file: !11887, line: 505, column: 9)
!12197 = !DILocation(line: 506, column: 29, scope: !12195)
!12198 = !DILocation(line: 506, column: 43, scope: !12195)
!12199 = !DILocation(line: 506, column: 14, scope: !12196)
!12200 = distinct !{!12200, !12191, !12201}
!12201 = !DILocation(line: 510, column: 9, scope: !12178)
!12202 = !DILocation(line: 521, column: 15, scope: !12203)
!12203 = distinct !DILexicalBlock(scope: !12173, file: !11887, line: 513, column: 7)
!12204 = !DILocation(line: 521, column: 9, scope: !12203)
!12205 = !DILocation(line: 523, column: 15, scope: !12206)
!12206 = distinct !DILexicalBlock(scope: !12207, file: !11887, line: 523, column: 14)
!12207 = distinct !DILexicalBlock(scope: !12203, file: !11887, line: 522, column: 9)
!12208 = !DILocation(line: 523, column: 29, scope: !12206)
!12209 = !DILocation(line: 523, column: 43, scope: !12206)
!12210 = !DILocation(line: 523, column: 14, scope: !12207)
!12211 = distinct !{!12211, !12204, !12212}
!12212 = !DILocation(line: 527, column: 9, scope: !12203)
!12213 = !DILocation(line: 533, column: 44, scope: !12214)
!12214 = distinct !DILexicalBlock(scope: !12215, file: !11887, line: 533, column: 10)
!12215 = distinct !DILexicalBlock(scope: !12168, file: !11887, line: 531, column: 5)
!12216 = !DILocation(line: 533, column: 10, scope: !12215)
!12217 = !DILocation(line: 540, column: 27, scope: !12218)
!12218 = distinct !DILexicalBlock(scope: !12214, file: !11887, line: 538, column: 7)
!12219 = !DILocation(line: 551, column: 14, scope: !12220)
!12220 = distinct !DILexicalBlock(scope: !12218, file: !11887, line: 550, column: 13)
!12221 = !DILocation(line: 551, column: 81, scope: !12220)
!12222 = !DILocation(line: 551, column: 55, scope: !12220)
!12223 = !DILocation(line: 551, column: 92, scope: !12220)
!12224 = !DILocation(line: 552, column: 14, scope: !12220)
!12225 = !DILocation(line: 552, column: 80, scope: !12220)
!12226 = !DILocation(line: 552, column: 53, scope: !12220)
!12227 = !DILocation(line: 552, column: 111, scope: !12220)
!12228 = !DILocation(line: 553, column: 14, scope: !12220)
!12229 = !DILocation(line: 553, column: 80, scope: !12220)
!12230 = !DILocation(line: 553, column: 86, scope: !12220)
!12231 = !DILocation(line: 553, column: 53, scope: !12220)
!12232 = !DILocation(line: 553, column: 111, scope: !12220)
!12233 = !DILocation(line: 554, column: 14, scope: !12220)
!12234 = !DILocation(line: 554, column: 82, scope: !12220)
!12235 = !DILocation(line: 554, column: 101, scope: !12220)
!12236 = !DILocation(line: 554, column: 53, scope: !12220)
!12237 = !DILocation(line: 554, column: 126, scope: !12220)
!12238 = !DILocation(line: 555, column: 14, scope: !12220)
!12239 = !DILocation(line: 555, column: 80, scope: !12220)
!12240 = !DILocation(line: 555, column: 85, scope: !12220)
!12241 = !DILocation(line: 555, column: 53, scope: !12220)
!12242 = !DILocation(line: 550, column: 13, scope: !12218)
!12243 = !DILocation(line: 563, column: 3, scope: !11892)
!12244 = !DILocation(line: 564, column: 1, scope: !11892)
!12245 = !DISubprogram(name: "HAL_GetTick", scope: !12246, file: !12246, line: 234, type: !6343, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2166)
!12246 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12247 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11887, file: !11887, line: 591, type: !12248, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !12259)
!12248 = !DISubroutineType(types: !12249)
!12249 = !{!11890, !12250, !152}
!12250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12251, size: 32)
!12251 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11897, line: 92, baseType: !12252)
!12252 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11897, line: 75, size: 160, elements: !12253)
!12253 = !{!12254, !12255, !12256, !12257, !12258}
!12254 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12252, file: !11897, line: 77, baseType: !152, size: 32)
!12255 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12252, file: !11897, line: 80, baseType: !152, size: 32, offset: 32)
!12256 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12252, file: !11897, line: 83, baseType: !152, size: 32, offset: 64)
!12257 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12252, file: !11897, line: 86, baseType: !152, size: 32, offset: 96)
!12258 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12252, file: !11897, line: 89, baseType: !152, size: 32, offset: 128)
!12259 = !{!12260, !12261, !12262}
!12260 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12247, file: !11887, line: 591, type: !12250)
!12261 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12247, file: !11887, line: 591, type: !152)
!12262 = !DILocalVariable(name: "tickstart", scope: !12247, file: !11887, line: 593, type: !152)
!12263 = !DILocation(line: 0, scope: !12247)
!12264 = !DILocation(line: 596, column: 24, scope: !12265)
!12265 = distinct !DILexicalBlock(scope: !12247, file: !11887, line: 596, column: 6)
!12266 = !DILocation(line: 596, column: 6, scope: !12247)
!12267 = !DILocation(line: 610, column: 17, scope: !12268)
!12268 = distinct !DILexicalBlock(scope: !12247, file: !11887, line: 610, column: 6)
!12269 = !DILocation(line: 610, column: 15, scope: !12268)
!12270 = !DILocation(line: 610, column: 6, scope: !12247)
!12271 = !DILocation(line: 613, column: 5, scope: !12272)
!12272 = distinct !DILexicalBlock(scope: !12268, file: !11887, line: 611, column: 3)
!12273 = !DILocation(line: 617, column: 8, scope: !12274)
!12274 = distinct !DILexicalBlock(scope: !12272, file: !11887, line: 617, column: 8)
!12275 = !DILocation(line: 617, column: 34, scope: !12274)
!12276 = !DILocation(line: 617, column: 8, scope: !12272)
!12277 = !DILocation(line: 624, column: 27, scope: !12278)
!12278 = distinct !DILexicalBlock(scope: !12247, file: !11887, line: 624, column: 6)
!12279 = !DILocation(line: 624, column: 38, scope: !12278)
!12280 = !DILocation(line: 624, column: 60, scope: !12278)
!12281 = !DILocation(line: 624, column: 6, scope: !12247)
!12282 = !DILocation(line: 628, column: 40, scope: !12283)
!12283 = distinct !DILexicalBlock(scope: !12284, file: !11887, line: 628, column: 8)
!12284 = distinct !DILexicalBlock(scope: !12278, file: !11887, line: 625, column: 3)
!12285 = !DILocation(line: 628, column: 63, scope: !12283)
!12286 = !DILocation(line: 628, column: 8, scope: !12284)
!12287 = !DILocation(line: 630, column: 7, scope: !12288)
!12288 = distinct !DILexicalBlock(scope: !12283, file: !11887, line: 629, column: 5)
!12289 = !DILocation(line: 633, column: 29, scope: !12290)
!12290 = distinct !DILexicalBlock(scope: !12284, file: !11887, line: 633, column: 8)
!12291 = !DILocation(line: 631, column: 5, scope: !12288)
!12292 = !DILocation(line: 633, column: 40, scope: !12290)
!12293 = !DILocation(line: 633, column: 63, scope: !12290)
!12294 = !DILocation(line: 633, column: 8, scope: !12284)
!12295 = !DILocation(line: 635, column: 7, scope: !12296)
!12296 = distinct !DILexicalBlock(scope: !12290, file: !11887, line: 634, column: 5)
!12297 = !DILocation(line: 636, column: 5, scope: !12296)
!12298 = !DILocation(line: 639, column: 5, scope: !12284)
!12299 = !DILocation(line: 643, column: 27, scope: !12300)
!12300 = distinct !DILexicalBlock(scope: !12247, file: !11887, line: 643, column: 6)
!12301 = !DILocation(line: 640, column: 3, scope: !12284)
!12302 = !DILocation(line: 643, column: 38, scope: !12300)
!12303 = !DILocation(line: 643, column: 62, scope: !12300)
!12304 = !DILocation(line: 643, column: 6, scope: !12247)
!12305 = !DILocation(line: 648, column: 27, scope: !12306)
!12306 = distinct !DILexicalBlock(scope: !12307, file: !11887, line: 648, column: 8)
!12307 = distinct !DILexicalBlock(scope: !12300, file: !11887, line: 644, column: 3)
!12308 = !DILocation(line: 648, column: 8, scope: !12307)
!12309 = !DILocation(line: 651, column: 10, scope: !12310)
!12310 = distinct !DILexicalBlock(scope: !12311, file: !11887, line: 651, column: 10)
!12311 = distinct !DILexicalBlock(scope: !12306, file: !11887, line: 649, column: 5)
!12312 = !DILocation(line: 651, column: 46, scope: !12310)
!12313 = !DILocation(line: 651, column: 10, scope: !12311)
!12314 = !DILocation(line: 661, column: 10, scope: !12315)
!12315 = distinct !DILexicalBlock(scope: !12316, file: !11887, line: 661, column: 10)
!12316 = distinct !DILexicalBlock(scope: !12317, file: !11887, line: 659, column: 5)
!12317 = distinct !DILexicalBlock(scope: !12306, file: !11887, line: 657, column: 13)
!12318 = !DILocation(line: 661, column: 46, scope: !12315)
!12319 = !DILocation(line: 661, column: 10, scope: !12316)
!12320 = !DILocation(line: 670, column: 10, scope: !12321)
!12321 = distinct !DILexicalBlock(scope: !12322, file: !11887, line: 670, column: 10)
!12322 = distinct !DILexicalBlock(scope: !12317, file: !11887, line: 668, column: 5)
!12323 = !DILocation(line: 670, column: 46, scope: !12321)
!12324 = !DILocation(line: 670, column: 10, scope: !12322)
!12325 = !DILocation(line: 676, column: 5, scope: !12307)
!12326 = !DILocation(line: 679, column: 17, scope: !12307)
!12327 = !DILocation(line: 681, column: 5, scope: !12307)
!12328 = !DILocation(line: 681, column: 12, scope: !12307)
!12329 = !DILocation(line: 681, column: 65, scope: !12307)
!12330 = !DILocation(line: 681, column: 78, scope: !12307)
!12331 = !DILocation(line: 681, column: 42, scope: !12307)
!12332 = !DILocation(line: 683, column: 12, scope: !12333)
!12333 = distinct !DILexicalBlock(scope: !12334, file: !11887, line: 683, column: 11)
!12334 = distinct !DILexicalBlock(scope: !12307, file: !11887, line: 682, column: 5)
!12335 = !DILocation(line: 683, column: 26, scope: !12333)
!12336 = !DILocation(line: 683, column: 39, scope: !12333)
!12337 = !DILocation(line: 683, column: 11, scope: !12334)
!12338 = distinct !{!12338, !12327, !12339}
!12339 = !DILocation(line: 687, column: 5, scope: !12307)
!12340 = !DILocation(line: 691, column: 17, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12247, file: !11887, line: 691, column: 6)
!12342 = !DILocation(line: 691, column: 15, scope: !12341)
!12343 = !DILocation(line: 691, column: 6, scope: !12247)
!12344 = !DILocation(line: 694, column: 5, scope: !12345)
!12345 = distinct !DILexicalBlock(scope: !12341, file: !11887, line: 692, column: 3)
!12346 = !DILocation(line: 698, column: 8, scope: !12347)
!12347 = distinct !DILexicalBlock(scope: !12345, file: !11887, line: 698, column: 8)
!12348 = !DILocation(line: 698, column: 34, scope: !12347)
!12349 = !DILocation(line: 698, column: 8, scope: !12345)
!12350 = !DILocation(line: 705, column: 27, scope: !12351)
!12351 = distinct !DILexicalBlock(scope: !12247, file: !11887, line: 705, column: 6)
!12352 = !DILocation(line: 705, column: 38, scope: !12351)
!12353 = !DILocation(line: 705, column: 61, scope: !12351)
!12354 = !DILocation(line: 705, column: 6, scope: !12247)
!12355 = !DILocation(line: 708, column: 5, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !12351, file: !11887, line: 706, column: 3)
!12357 = !DILocation(line: 712, column: 27, scope: !12358)
!12358 = distinct !DILexicalBlock(scope: !12247, file: !11887, line: 712, column: 6)
!12359 = !DILocation(line: 709, column: 3, scope: !12356)
!12360 = !DILocation(line: 712, column: 38, scope: !12358)
!12361 = !DILocation(line: 712, column: 61, scope: !12358)
!12362 = !DILocation(line: 712, column: 6, scope: !12247)
!12363 = !DILocation(line: 715, column: 5, scope: !12364)
!12364 = distinct !DILexicalBlock(scope: !12358, file: !11887, line: 713, column: 3)
!12365 = !DILocation(line: 716, column: 3, scope: !12364)
!12366 = !DILocation(line: 719, column: 21, scope: !12247)
!12367 = !DILocation(line: 719, column: 70, scope: !12247)
!12368 = !DILocation(line: 719, column: 91, scope: !12247)
!12369 = !DILocation(line: 719, column: 50, scope: !12247)
!12370 = !DILocation(line: 719, column: 47, scope: !12247)
!12371 = !DILocation(line: 719, column: 19, scope: !12247)
!12372 = !DILocation(line: 722, column: 17, scope: !12247)
!12373 = !DILocation(line: 722, column: 3, scope: !12247)
!12374 = !DILocation(line: 724, column: 3, scope: !12247)
!12375 = !DILocation(line: 725, column: 1, scope: !12247)
!12376 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11887, file: !11887, line: 885, type: !6343, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !12377)
!12377 = !{!12378, !12379, !12380, !12381}
!12378 = !DILocalVariable(name: "pllm", scope: !12376, file: !11887, line: 887, type: !152)
!12379 = !DILocalVariable(name: "pllvco", scope: !12376, file: !11887, line: 887, type: !152)
!12380 = !DILocalVariable(name: "pllp", scope: !12376, file: !11887, line: 887, type: !152)
!12381 = !DILocalVariable(name: "sysclockfreq", scope: !12376, file: !11887, line: 888, type: !152)
!12382 = !DILocation(line: 0, scope: !12376)
!12383 = !DILocation(line: 891, column: 16, scope: !12376)
!12384 = !DILocation(line: 891, column: 21, scope: !12376)
!12385 = !DILocation(line: 891, column: 3, scope: !12376)
!12386 = !DILocation(line: 901, column: 7, scope: !12387)
!12387 = distinct !DILexicalBlock(scope: !12388, file: !11887, line: 899, column: 5)
!12388 = distinct !DILexicalBlock(scope: !12376, file: !11887, line: 892, column: 3)
!12389 = !DILocation(line: 907, column: 19, scope: !12390)
!12390 = distinct !DILexicalBlock(scope: !12388, file: !11887, line: 904, column: 5)
!12391 = !DILocation(line: 907, column: 27, scope: !12390)
!12392 = !DILocation(line: 908, column: 10, scope: !12393)
!12393 = distinct !DILexicalBlock(scope: !12390, file: !11887, line: 908, column: 10)
!12394 = !DILocation(line: 908, column: 40, scope: !12393)
!12395 = !DILocation(line: 0, scope: !12393)
!12396 = !DILocation(line: 918, column: 23, scope: !12390)
!12397 = !DILocation(line: 918, column: 82, scope: !12390)
!12398 = !DILocation(line: 920, column: 28, scope: !12390)
!12399 = !DILocation(line: 921, column: 7, scope: !12390)
!12400 = !DILocation(line: 0, scope: !12388)
!12401 = !DILocation(line: 929, column: 3, scope: !12376)
!12402 = !DISubprogram(name: "HAL_InitTick", scope: !12246, file: !12246, line: 223, type: !12403, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2166)
!12403 = !DISubroutineType(types: !12404)
!12404 = !{!11890, !152}
!12405 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11887, file: !11887, line: 775, type: !12406, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !12408)
!12406 = !DISubroutineType(types: !12407)
!12407 = !{null, !152, !152, !152}
!12408 = !{!12409, !12410, !12411, !12412, !12422, !12426}
!12409 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12405, file: !11887, line: 775, type: !152)
!12410 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12405, file: !11887, line: 775, type: !152)
!12411 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12405, file: !11887, line: 775, type: !152)
!12412 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12405, file: !11887, line: 777, type: !12413)
!12413 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12414, line: 62, baseType: !12415)
!12414 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12415 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12414, line: 46, size: 160, elements: !12416)
!12416 = !{!12417, !12418, !12419, !12420, !12421}
!12417 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12415, file: !12414, line: 48, baseType: !152, size: 32)
!12418 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12415, file: !12414, line: 51, baseType: !152, size: 32, offset: 32)
!12419 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12415, file: !12414, line: 54, baseType: !152, size: 32, offset: 64)
!12420 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12415, file: !12414, line: 57, baseType: !152, size: 32, offset: 96)
!12421 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12415, file: !12414, line: 60, baseType: !152, size: 32, offset: 128)
!12422 = !DILocalVariable(name: "tmpreg", scope: !12423, file: !11887, line: 787, type: !227)
!12423 = distinct !DILexicalBlock(scope: !12424, file: !11887, line: 787, column: 5)
!12424 = distinct !DILexicalBlock(scope: !12425, file: !11887, line: 783, column: 3)
!12425 = distinct !DILexicalBlock(scope: !12405, file: !11887, line: 782, column: 6)
!12426 = !DILocalVariable(name: "tmpreg", scope: !12427, file: !11887, line: 811, type: !227)
!12427 = distinct !DILexicalBlock(scope: !12428, file: !11887, line: 811, column: 5)
!12428 = distinct !DILexicalBlock(scope: !12425, file: !11887, line: 807, column: 3)
!12429 = !DILocation(line: 0, scope: !12405)
!12430 = !DILocation(line: 777, column: 3, scope: !12405)
!12431 = !DILocation(line: 777, column: 20, scope: !12405)
!12432 = !DILocation(line: 782, column: 15, scope: !12425)
!12433 = !DILocation(line: 782, column: 6, scope: !12405)
!12434 = !DILocation(line: 787, column: 5, scope: !12423)
!12435 = !DILocation(line: 787, column: 5, scope: !12424)
!12436 = !DILocation(line: 790, column: 21, scope: !12424)
!12437 = !DILocation(line: 790, column: 25, scope: !12424)
!12438 = !DILocation(line: 791, column: 21, scope: !12424)
!12439 = !DILocation(line: 791, column: 26, scope: !12424)
!12440 = !DILocation(line: 792, column: 21, scope: !12424)
!12441 = !DILocation(line: 792, column: 27, scope: !12424)
!12442 = !DILocation(line: 793, column: 21, scope: !12424)
!12443 = !DILocation(line: 793, column: 26, scope: !12424)
!12444 = !DILocation(line: 794, column: 21, scope: !12424)
!12445 = !DILocation(line: 794, column: 31, scope: !12424)
!12446 = !DILocation(line: 795, column: 5, scope: !12424)
!12447 = !DILocation(line: 798, column: 5, scope: !12424)
!12448 = !DILocation(line: 804, column: 3, scope: !12424)
!12449 = !DILocation(line: 811, column: 5, scope: !12427)
!12450 = !DILocation(line: 811, column: 5, scope: !12428)
!12451 = !DILocation(line: 814, column: 21, scope: !12428)
!12452 = !DILocation(line: 814, column: 25, scope: !12428)
!12453 = !DILocation(line: 815, column: 21, scope: !12428)
!12454 = !DILocation(line: 815, column: 26, scope: !12428)
!12455 = !DILocation(line: 816, column: 21, scope: !12428)
!12456 = !DILocation(line: 816, column: 27, scope: !12428)
!12457 = !DILocation(line: 817, column: 21, scope: !12428)
!12458 = !DILocation(line: 817, column: 26, scope: !12428)
!12459 = !DILocation(line: 818, column: 21, scope: !12428)
!12460 = !DILocation(line: 818, column: 31, scope: !12428)
!12461 = !DILocation(line: 819, column: 5, scope: !12428)
!12462 = !DILocation(line: 822, column: 5, scope: !12428)
!12463 = !DILocation(line: 0, scope: !12425)
!12464 = !DILocation(line: 830, column: 1, scope: !12405)
!12465 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12414, file: !12414, line: 224, type: !12466, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2166)
!12466 = !DISubroutineType(types: !12467)
!12467 = !{null, !2973, !12468}
!12468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12413, size: 32)
!12469 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11887, file: !11887, line: 841, type: !3089, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !2166)
!12470 = !DILocation(line: 843, column: 38, scope: !12469)
!12471 = !DILocation(line: 844, column: 1, scope: !12469)
!12472 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11887, file: !11887, line: 850, type: !3089, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !2166)
!12473 = !DILocation(line: 852, column: 38, scope: !12472)
!12474 = !DILocation(line: 853, column: 1, scope: !12472)
!12475 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11887, file: !11887, line: 941, type: !6343, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !2166)
!12476 = !DILocation(line: 943, column: 10, scope: !12475)
!12477 = !DILocation(line: 943, column: 3, scope: !12475)
!12478 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11887, file: !11887, line: 952, type: !6343, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !2166)
!12479 = !DILocation(line: 955, column: 11, scope: !12478)
!12480 = !DILocation(line: 955, column: 56, scope: !12478)
!12481 = !DILocation(line: 955, column: 78, scope: !12478)
!12482 = !DILocation(line: 955, column: 36, scope: !12478)
!12483 = !DILocation(line: 955, column: 33, scope: !12478)
!12484 = !DILocation(line: 955, column: 3, scope: !12478)
!12485 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11887, file: !11887, line: 964, type: !6343, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !2166)
!12486 = !DILocation(line: 967, column: 11, scope: !12485)
!12487 = !DILocation(line: 967, column: 55, scope: !12485)
!12488 = !DILocation(line: 967, column: 77, scope: !12485)
!12489 = !DILocation(line: 967, column: 35, scope: !12485)
!12490 = !DILocation(line: 967, column: 32, scope: !12485)
!12491 = !DILocation(line: 967, column: 3, scope: !12485)
!12492 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11887, file: !11887, line: 977, type: !12493, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !12495)
!12493 = !DISubroutineType(types: !12494)
!12494 = !{null, !11895}
!12495 = !{!12496}
!12496 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12492, file: !11887, line: 977, type: !11895)
!12497 = !DILocation(line: 0, scope: !12492)
!12498 = !DILocation(line: 980, column: 22, scope: !12492)
!12499 = !DILocation(line: 980, column: 37, scope: !12492)
!12500 = !DILocation(line: 983, column: 12, scope: !12501)
!12501 = distinct !DILexicalBlock(scope: !12492, file: !11887, line: 983, column: 6)
!12502 = !DILocation(line: 983, column: 15, scope: !12501)
!12503 = !DILocation(line: 983, column: 31, scope: !12501)
!12504 = !DILocation(line: 983, column: 6, scope: !12492)
!12505 = !DILocation(line: 985, column: 24, scope: !12506)
!12506 = distinct !DILexicalBlock(scope: !12501, file: !11887, line: 984, column: 3)
!12507 = !DILocation(line: 985, column: 33, scope: !12506)
!12508 = !DILocation(line: 986, column: 3, scope: !12506)
!12509 = !DILocation(line: 987, column: 17, scope: !12510)
!12510 = distinct !DILexicalBlock(scope: !12501, file: !11887, line: 987, column: 11)
!12511 = !DILocation(line: 987, column: 20, scope: !12510)
!12512 = !DILocation(line: 987, column: 35, scope: !12510)
!12513 = !DILocation(line: 0, scope: !12510)
!12514 = !DILocation(line: 987, column: 11, scope: !12501)
!12515 = !DILocation(line: 989, column: 33, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12510, file: !11887, line: 988, column: 3)
!12517 = !DILocation(line: 990, column: 3, scope: !12516)
!12518 = !DILocation(line: 993, column: 33, scope: !12519)
!12519 = distinct !DILexicalBlock(scope: !12510, file: !11887, line: 992, column: 3)
!12520 = !DILocation(line: 997, column: 12, scope: !12521)
!12521 = distinct !DILexicalBlock(scope: !12492, file: !11887, line: 997, column: 6)
!12522 = !DILocation(line: 997, column: 15, scope: !12521)
!12523 = !DILocation(line: 1003, column: 24, scope: !12524)
!12524 = distinct !DILexicalBlock(scope: !12521, file: !11887, line: 1002, column: 3)
!12525 = !DILocation(line: 1003, column: 33, scope: !12524)
!12526 = !DILocation(line: 1006, column: 61, scope: !12492)
!12527 = !DILocation(line: 1006, column: 81, scope: !12492)
!12528 = !DILocation(line: 1006, column: 22, scope: !12492)
!12529 = !DILocation(line: 1006, column: 42, scope: !12492)
!12530 = !DILocation(line: 1009, column: 12, scope: !12531)
!12531 = distinct !DILexicalBlock(scope: !12492, file: !11887, line: 1009, column: 6)
!12532 = !DILocation(line: 1009, column: 17, scope: !12531)
!12533 = !DILocation(line: 1009, column: 35, scope: !12531)
!12534 = !DILocation(line: 1009, column: 6, scope: !12492)
!12535 = !DILocation(line: 1011, column: 24, scope: !12536)
!12536 = distinct !DILexicalBlock(scope: !12531, file: !11887, line: 1010, column: 3)
!12537 = !DILocation(line: 1011, column: 33, scope: !12536)
!12538 = !DILocation(line: 1012, column: 3, scope: !12536)
!12539 = !DILocation(line: 1013, column: 17, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !12531, file: !11887, line: 1013, column: 11)
!12541 = !DILocation(line: 1013, column: 22, scope: !12540)
!12542 = !DILocation(line: 1013, column: 39, scope: !12540)
!12543 = !DILocation(line: 0, scope: !12540)
!12544 = !DILocation(line: 1013, column: 11, scope: !12531)
!12545 = !DILocation(line: 1015, column: 33, scope: !12546)
!12546 = distinct !DILexicalBlock(scope: !12540, file: !11887, line: 1014, column: 3)
!12547 = !DILocation(line: 1016, column: 3, scope: !12546)
!12548 = !DILocation(line: 1019, column: 33, scope: !12549)
!12549 = distinct !DILexicalBlock(scope: !12540, file: !11887, line: 1018, column: 3)
!12550 = !DILocation(line: 1023, column: 12, scope: !12551)
!12551 = distinct !DILexicalBlock(scope: !12492, file: !11887, line: 1023, column: 6)
!12552 = !DILocation(line: 1023, column: 16, scope: !12551)
!12553 = !DILocation(line: 1029, column: 24, scope: !12554)
!12554 = distinct !DILexicalBlock(scope: !12551, file: !11887, line: 1028, column: 3)
!12555 = !DILocation(line: 1029, column: 33, scope: !12554)
!12556 = !DILocation(line: 1033, column: 12, scope: !12557)
!12557 = distinct !DILexicalBlock(scope: !12492, file: !11887, line: 1033, column: 6)
!12558 = !DILocation(line: 1033, column: 15, scope: !12557)
!12559 = !DILocation(line: 1033, column: 30, scope: !12557)
!12560 = !DILocation(line: 1033, column: 6, scope: !12492)
!12561 = !DILocation(line: 1039, column: 28, scope: !12562)
!12562 = distinct !DILexicalBlock(scope: !12557, file: !11887, line: 1038, column: 3)
!12563 = !DILocation(line: 1039, column: 37, scope: !12562)
!12564 = !DILocation(line: 1041, column: 54, scope: !12492)
!12565 = !DILocation(line: 1041, column: 62, scope: !12492)
!12566 = !DILocation(line: 1041, column: 26, scope: !12492)
!12567 = !DILocation(line: 1041, column: 36, scope: !12492)
!12568 = !DILocation(line: 1042, column: 49, scope: !12492)
!12569 = !DILocation(line: 1042, column: 57, scope: !12492)
!12570 = !DILocation(line: 1042, column: 26, scope: !12492)
!12571 = !DILocation(line: 1042, column: 31, scope: !12492)
!12572 = !DILocation(line: 1043, column: 50, scope: !12492)
!12573 = !DILocation(line: 1043, column: 78, scope: !12492)
!12574 = !DILocation(line: 1043, column: 26, scope: !12492)
!12575 = !DILocation(line: 1043, column: 31, scope: !12492)
!12576 = !DILocation(line: 1044, column: 52, scope: !12492)
!12577 = !DILocation(line: 1044, column: 102, scope: !12492)
!12578 = !DILocation(line: 1044, column: 109, scope: !12492)
!12579 = !DILocation(line: 1044, column: 26, scope: !12492)
!12580 = !DILocation(line: 1044, column: 31, scope: !12492)
!12581 = !DILocation(line: 1045, column: 50, scope: !12492)
!12582 = !DILocation(line: 1045, column: 78, scope: !12492)
!12583 = !DILocation(line: 1045, column: 26, scope: !12492)
!12584 = !DILocation(line: 1045, column: 31, scope: !12492)
!12585 = !DILocation(line: 1046, column: 1, scope: !12492)
!12586 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11887, file: !11887, line: 1056, type: !12587, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !12589)
!12587 = !DISubroutineType(types: !12588)
!12588 = !{null, !12250, !1016}
!12589 = !{!12590, !12591}
!12590 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12586, file: !11887, line: 1056, type: !12250)
!12591 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !12586, file: !11887, line: 1056, type: !1016)
!12592 = !DILocation(line: 0, scope: !12586)
!12593 = !DILocation(line: 1059, column: 22, scope: !12586)
!12594 = !DILocation(line: 1059, column: 32, scope: !12586)
!12595 = !DILocation(line: 1062, column: 53, scope: !12586)
!12596 = !DILocation(line: 1062, column: 58, scope: !12586)
!12597 = !DILocation(line: 1062, column: 22, scope: !12586)
!12598 = !DILocation(line: 1062, column: 35, scope: !12586)
!12599 = !DILocation(line: 1065, column: 54, scope: !12586)
!12600 = !DILocation(line: 1065, column: 59, scope: !12586)
!12601 = !DILocation(line: 1065, column: 22, scope: !12586)
!12602 = !DILocation(line: 1065, column: 36, scope: !12586)
!12603 = !DILocation(line: 1068, column: 55, scope: !12586)
!12604 = !DILocation(line: 1068, column: 60, scope: !12586)
!12605 = !DILocation(line: 1068, column: 22, scope: !12586)
!12606 = !DILocation(line: 1068, column: 37, scope: !12586)
!12607 = !DILocation(line: 1071, column: 56, scope: !12586)
!12608 = !DILocation(line: 1071, column: 79, scope: !12586)
!12609 = !DILocation(line: 1071, column: 22, scope: !12586)
!12610 = !DILocation(line: 1071, column: 37, scope: !12586)
!12611 = !DILocation(line: 1074, column: 34, scope: !12586)
!12612 = !DILocation(line: 1074, column: 38, scope: !12586)
!12613 = !DILocation(line: 1074, column: 14, scope: !12586)
!12614 = !DILocation(line: 1075, column: 1, scope: !12586)
!12615 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11887, file: !11887, line: 1082, type: !3089, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !2166)
!12616 = !DILocation(line: 1085, column: 6, scope: !12617)
!12617 = distinct !DILexicalBlock(scope: !12615, file: !11887, line: 1085, column: 6)
!12618 = !DILocation(line: 1085, column: 6, scope: !12615)
!12619 = !DILocation(line: 1088, column: 5, scope: !12620)
!12620 = distinct !DILexicalBlock(scope: !12617, file: !11887, line: 1086, column: 3)
!12621 = !DILocation(line: 1091, column: 5, scope: !12620)
!12622 = !DILocation(line: 1092, column: 3, scope: !12620)
!12623 = !DILocation(line: 1093, column: 1, scope: !12615)
!12624 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11887, file: !11887, line: 1099, type: !3089, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !2166)
!12625 = !DILocation(line: 1104, column: 1, scope: !12624)
!12626 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12627, file: !12627, line: 257, type: !6353, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12628)
!12627 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12628 = !{!12629}
!12629 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12626, file: !12627, line: 257, type: !152)
!12630 = !DILocation(line: 0, scope: !12626)
!12631 = !DILocation(line: 260, column: 3, scope: !12626)
!12632 = !DILocation(line: 261, column: 1, scope: !12626)
!12633 = distinct !DISubprogram(name: "LL_InitTick", scope: !12634, file: !12634, line: 260, type: !10244, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12635)
!12634 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12635 = !{!12636, !12637}
!12636 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12633, file: !12634, line: 260, type: !152)
!12637 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12633, file: !12634, line: 260, type: !152)
!12638 = !DILocation(line: 0, scope: !12633)
!12639 = !DILocation(line: 263, column: 46, scope: !12633)
!12640 = !DILocation(line: 263, column: 55, scope: !12633)
!12641 = !DILocation(line: 263, column: 18, scope: !12633)
!12642 = !DILocation(line: 264, column: 18, scope: !12633)
!12643 = !DILocation(line: 265, column: 18, scope: !12633)
!12644 = !DILocation(line: 267, column: 1, scope: !12633)
!12645 = distinct !DISubprogram(name: "LL_mDelay", scope: !12627, file: !12627, line: 273, type: !6353, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12646)
!12646 = !{!12647, !12648}
!12647 = !DILocalVariable(name: "Delay", arg: 1, scope: !12645, file: !12627, line: 273, type: !152)
!12648 = !DILocalVariable(name: "tmp", scope: !12645, file: !12627, line: 275, type: !227)
!12649 = !DILocation(line: 0, scope: !12645)
!12650 = !DILocation(line: 275, column: 3, scope: !12645)
!12651 = !DILocation(line: 275, column: 18, scope: !12645)
!12652 = !DILocation(line: 275, column: 33, scope: !12645)
!12653 = !DILocation(line: 277, column: 10, scope: !12645)
!12654 = !DILocation(line: 280, column: 12, scope: !12655)
!12655 = distinct !DILexicalBlock(scope: !12645, file: !12627, line: 280, column: 6)
!12656 = !DILocation(line: 285, column: 3, scope: !12645)
!12657 = !DILocation(line: 287, column: 18, scope: !12658)
!12658 = distinct !DILexicalBlock(scope: !12659, file: !12627, line: 287, column: 8)
!12659 = distinct !DILexicalBlock(scope: !12645, file: !12627, line: 286, column: 3)
!12660 = !DILocation(line: 292, column: 1, scope: !12645)
!12661 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12627, file: !12627, line: 323, type: !6353, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12662)
!12662 = !{!12663}
!12663 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12661, file: !12627, line: 323, type: !152)
!12664 = !DILocation(line: 0, scope: !12661)
!12665 = !DILocation(line: 326, column: 19, scope: !12661)
!12666 = !DILocation(line: 327, column: 1, scope: !12661)
!12667 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12627, file: !12627, line: 338, type: !12668, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12671)
!12668 = !DISubroutineType(types: !12669)
!12669 = !{!12670, !152}
!12670 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !963, line: 201, baseType: !962)
!12671 = !{!12672, !12673, !12674, !12675, !12676}
!12672 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !12667, file: !12627, line: 338, type: !152)
!12673 = !DILocalVariable(name: "timeout", scope: !12667, file: !12627, line: 340, type: !152)
!12674 = !DILocalVariable(name: "getlatency", scope: !12667, file: !12627, line: 341, type: !152)
!12675 = !DILocalVariable(name: "latency", scope: !12667, file: !12627, line: 342, type: !152)
!12676 = !DILocalVariable(name: "status", scope: !12667, file: !12627, line: 343, type: !12670)
!12677 = !DILocation(line: 0, scope: !12667)
!12678 = !DILocation(line: 347, column: 21, scope: !12679)
!12679 = distinct !DILexicalBlock(scope: !12667, file: !12627, line: 347, column: 6)
!12680 = !DILocation(line: 347, column: 6, scope: !12667)
!12681 = !DILocation(line: 353, column: 8, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12683, file: !12627, line: 353, column: 8)
!12683 = distinct !DILexicalBlock(scope: !12679, file: !12627, line: 352, column: 3)
!12684 = !DILocation(line: 353, column: 40, scope: !12682)
!12685 = !DILocation(line: 353, column: 8, scope: !12683)
!12686 = !DILocation(line: 356, column: 26, scope: !12687)
!12687 = distinct !DILexicalBlock(scope: !12688, file: !12627, line: 356, column: 10)
!12688 = distinct !DILexicalBlock(scope: !12682, file: !12627, line: 354, column: 5)
!12689 = !DILocation(line: 356, column: 55, scope: !12687)
!12690 = !DILocation(line: 362, column: 55, scope: !12691)
!12691 = distinct !DILexicalBlock(scope: !12688, file: !12627, line: 362, column: 10)
!12692 = !DILocation(line: 368, column: 55, scope: !12693)
!12693 = distinct !DILexicalBlock(scope: !12688, file: !12627, line: 368, column: 10)
!12694 = !DILocation(line: 374, column: 26, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12688, file: !12627, line: 374, column: 10)
!12696 = !DILocation(line: 374, column: 55, scope: !12695)
!12697 = !DILocation(line: 380, column: 28, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !12699, file: !12627, line: 380, column: 12)
!12699 = distinct !DILexicalBlock(scope: !12695, file: !12627, line: 379, column: 7)
!12700 = !DILocation(line: 380, column: 57, scope: !12698)
!12701 = !DILocation(line: 387, column: 8, scope: !12702)
!12702 = distinct !DILexicalBlock(scope: !12683, file: !12627, line: 387, column: 8)
!12703 = !DILocation(line: 387, column: 40, scope: !12702)
!12704 = !DILocation(line: 387, column: 8, scope: !12683)
!12705 = !DILocation(line: 396, column: 26, scope: !12706)
!12706 = distinct !DILexicalBlock(scope: !12707, file: !12627, line: 396, column: 10)
!12707 = distinct !DILexicalBlock(scope: !12702, file: !12627, line: 388, column: 5)
!12708 = !DILocation(line: 396, column: 55, scope: !12706)
!12709 = !DILocation(line: 402, column: 26, scope: !12710)
!12710 = distinct !DILexicalBlock(scope: !12707, file: !12627, line: 402, column: 10)
!12711 = !DILocation(line: 402, column: 55, scope: !12710)
!12712 = !DILocation(line: 407, column: 26, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12707, file: !12627, line: 407, column: 10)
!12714 = !DILocation(line: 407, column: 55, scope: !12713)
!12715 = !DILocation(line: 413, column: 28, scope: !12716)
!12716 = distinct !DILexicalBlock(scope: !12717, file: !12627, line: 413, column: 12)
!12717 = distinct !DILexicalBlock(scope: !12713, file: !12627, line: 412, column: 7)
!12718 = !DILocation(line: 413, column: 57, scope: !12716)
!12719 = !DILocation(line: 0, scope: !12683)
!12720 = !DILocation(line: 444, column: 5, scope: !12683)
!12721 = !DILocation(line: 448, column: 5, scope: !12683)
!12722 = !DILocation(line: 451, column: 18, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !12683, file: !12627, line: 449, column: 5)
!12724 = !DILocation(line: 452, column: 12, scope: !12723)
!12725 = !DILocation(line: 453, column: 26, scope: !12683)
!12726 = !DILocation(line: 453, column: 38, scope: !12683)
!12727 = !DILocation(line: 453, column: 5, scope: !12723)
!12728 = distinct !{!12728, !12721, !12729}
!12729 = !DILocation(line: 453, column: 54, scope: !12683)
!12730 = !DILocation(line: 0, scope: !12679)
!12731 = !DILocation(line: 464, column: 3, scope: !12667)
!12732 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12733, file: !12733, line: 519, type: !6343, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2166)
!12733 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12734 = !DILocation(line: 521, column: 21, scope: !12732)
!12735 = !DILocation(line: 521, column: 3, scope: !12732)
!12736 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5958, file: !5958, line: 1543, type: !6353, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12737)
!12737 = !{!12738}
!12738 = !DILocalVariable(name: "Latency", arg: 1, scope: !12736, file: !5958, line: 1543, type: !152)
!12739 = !DILocation(line: 0, scope: !12736)
!12740 = !DILocation(line: 1545, column: 3, scope: !12736)
!12741 = !DILocation(line: 1546, column: 1, scope: !12736)
!12742 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5958, file: !5958, line: 1569, type: !6343, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2166)
!12743 = !DILocation(line: 1571, column: 21, scope: !12742)
!12744 = !DILocation(line: 1571, column: 3, scope: !12742)
!12745 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12627, file: !12627, line: 483, type: !12746, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12762)
!12746 = !DISubroutineType(types: !12747)
!12747 = !{!12670, !12748, !12755}
!12748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12749, size: 32)
!12749 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12634, line: 114, baseType: !12750)
!12750 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12634, line: 94, size: 96, elements: !12751)
!12751 = !{!12752, !12753, !12754}
!12752 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12750, file: !12634, line: 96, baseType: !152, size: 32)
!12753 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12750, file: !12634, line: 102, baseType: !152, size: 32, offset: 32)
!12754 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12750, file: !12634, line: 109, baseType: !152, size: 32, offset: 64)
!12755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12756, size: 32)
!12756 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12634, line: 139, baseType: !12757)
!12757 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12634, line: 119, size: 96, elements: !12758)
!12758 = !{!12759, !12760, !12761}
!12759 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12757, file: !12634, line: 121, baseType: !152, size: 32)
!12760 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12757, file: !12634, line: 127, baseType: !152, size: 32, offset: 32)
!12761 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12757, file: !12634, line: 133, baseType: !152, size: 32, offset: 64)
!12762 = !{!12763, !12764, !12765, !12766}
!12763 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12745, file: !12627, line: 483, type: !12748)
!12764 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12745, file: !12627, line: 484, type: !12755)
!12765 = !DILocalVariable(name: "status", scope: !12745, file: !12627, line: 486, type: !12670)
!12766 = !DILocalVariable(name: "pllfreq", scope: !12745, file: !12627, line: 487, type: !152)
!12767 = !DILocation(line: 0, scope: !12745)
!12768 = !DILocation(line: 490, column: 6, scope: !12769)
!12769 = distinct !DILexicalBlock(scope: !12745, file: !12627, line: 490, column: 6)
!12770 = !DILocation(line: 490, column: 25, scope: !12769)
!12771 = !DILocation(line: 490, column: 6, scope: !12745)
!12772 = !DILocation(line: 493, column: 15, scope: !12773)
!12773 = distinct !DILexicalBlock(scope: !12769, file: !12627, line: 491, column: 3)
!12774 = !DILocation(line: 496, column: 8, scope: !12775)
!12775 = distinct !DILexicalBlock(scope: !12773, file: !12627, line: 496, column: 8)
!12776 = !DILocation(line: 496, column: 29, scope: !12775)
!12777 = !DILocation(line: 496, column: 8, scope: !12773)
!12778 = !DILocation(line: 498, column: 7, scope: !12779)
!12779 = distinct !DILexicalBlock(scope: !12775, file: !12627, line: 497, column: 5)
!12780 = !DILocation(line: 499, column: 7, scope: !12779)
!12781 = !DILocation(line: 499, column: 14, scope: !12779)
!12782 = !DILocation(line: 499, column: 35, scope: !12779)
!12783 = distinct !{!12783, !12780, !12784}
!12784 = !DILocation(line: 502, column: 7, scope: !12779)
!12785 = !DILocation(line: 506, column: 76, scope: !12773)
!12786 = !DILocation(line: 506, column: 103, scope: !12773)
!12787 = !DILocation(line: 507, column: 54, scope: !12773)
!12788 = !DILocation(line: 506, column: 5, scope: !12773)
!12789 = !DILocation(line: 510, column: 14, scope: !12773)
!12790 = !DILocation(line: 511, column: 3, scope: !12773)
!12791 = !DILocation(line: 0, scope: !12769)
!12792 = !DILocation(line: 518, column: 3, scope: !12745)
!12793 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12627, file: !12627, line: 642, type: !12794, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12796)
!12794 = !DISubroutineType(types: !12795)
!12795 = !{!12670}
!12796 = !{!12797}
!12797 = !DILocalVariable(name: "status", scope: !12793, file: !12627, line: 644, type: !12670)
!12798 = !DILocation(line: 0, scope: !12793)
!12799 = !DILocation(line: 647, column: 6, scope: !12800)
!12800 = distinct !DILexicalBlock(scope: !12793, file: !12627, line: 647, column: 6)
!12801 = !DILocation(line: 647, column: 27, scope: !12800)
!12802 = !DILocation(line: 663, column: 6, scope: !12803)
!12803 = distinct !DILexicalBlock(scope: !12793, file: !12627, line: 663, column: 6)
!12804 = !DILocation(line: 663, column: 30, scope: !12803)
!12805 = !DILocation(line: 663, column: 6, scope: !12793)
!12806 = !DILocation(line: 669, column: 3, scope: !12793)
!12807 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12627, file: !12627, line: 611, type: !12808, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12810)
!12808 = !DISubroutineType(types: !12809)
!12809 = !{!152, !152, !12748}
!12810 = !{!12811, !12812, !12813}
!12811 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12807, file: !12627, line: 611, type: !152)
!12812 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12807, file: !12627, line: 611, type: !12748)
!12813 = !DILocalVariable(name: "pllfreq", scope: !12807, file: !12627, line: 613, type: !152)
!12814 = !DILocation(line: 0, scope: !12807)
!12815 = !DILocation(line: 622, column: 56, scope: !12807)
!12816 = !DILocation(line: 622, column: 61, scope: !12807)
!12817 = !DILocation(line: 622, column: 32, scope: !12807)
!12818 = !DILocation(line: 626, column: 45, scope: !12807)
!12819 = !DILocation(line: 626, column: 50, scope: !12807)
!12820 = !DILocation(line: 626, column: 21, scope: !12807)
!12821 = !DILocation(line: 630, column: 47, scope: !12807)
!12822 = !DILocation(line: 630, column: 82, scope: !12807)
!12823 = !DILocation(line: 630, column: 21, scope: !12807)
!12824 = !DILocation(line: 633, column: 3, scope: !12807)
!12825 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9570, file: !9570, line: 3007, type: !6343, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2166)
!12826 = !DILocation(line: 3009, column: 11, scope: !12825)
!12827 = !DILocation(line: 3009, column: 44, scope: !12825)
!12828 = !DILocation(line: 3009, column: 3, scope: !12825)
!12829 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9570, file: !9570, line: 2987, type: !3089, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2166)
!12830 = !DILocation(line: 2989, column: 3, scope: !12829)
!12831 = !DILocation(line: 2990, column: 1, scope: !12829)
!12832 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9570, file: !9570, line: 4304, type: !9704, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12833)
!12833 = !{!12834, !12835, !12836, !12837}
!12834 = !DILocalVariable(name: "Source", arg: 1, scope: !12832, file: !9570, line: 4304, type: !152)
!12835 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12832, file: !9570, line: 4304, type: !152)
!12836 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12832, file: !9570, line: 4304, type: !152)
!12837 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12832, file: !9570, line: 4304, type: !152)
!12838 = !DILocation(line: 0, scope: !12832)
!12839 = !DILocation(line: 4306, column: 3, scope: !12832)
!12840 = !DILocation(line: 4308, column: 3, scope: !12832)
!12841 = !DILocation(line: 4312, column: 1, scope: !12832)
!12842 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12627, file: !12627, line: 681, type: !12843, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12845)
!12843 = !DISubroutineType(types: !12844)
!12844 = !{!12670, !152, !12755}
!12845 = !{!12846, !12847, !12848, !12849}
!12846 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12842, file: !12627, line: 681, type: !152)
!12847 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12842, file: !12627, line: 681, type: !12755)
!12848 = !DILocalVariable(name: "status", scope: !12842, file: !12627, line: 683, type: !12670)
!12849 = !DILocalVariable(name: "hclk_frequency", scope: !12842, file: !12627, line: 684, type: !152)
!12850 = !DILocation(line: 0, scope: !12842)
!12851 = !DILocation(line: 691, column: 20, scope: !12842)
!12852 = !DILocation(line: 694, column: 6, scope: !12853)
!12853 = distinct !DILexicalBlock(scope: !12842, file: !12627, line: 694, column: 6)
!12854 = !DILocation(line: 694, column: 22, scope: !12853)
!12855 = !DILocation(line: 694, column: 6, scope: !12842)
!12856 = !DILocation(line: 697, column: 14, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12853, file: !12627, line: 695, column: 3)
!12858 = !DILocation(line: 701, column: 13, scope: !12859)
!12859 = distinct !DILexicalBlock(scope: !12842, file: !12627, line: 701, column: 6)
!12860 = !DILocation(line: 701, column: 6, scope: !12842)
!12861 = !DILocation(line: 704, column: 5, scope: !12862)
!12862 = distinct !DILexicalBlock(scope: !12859, file: !12627, line: 702, column: 3)
!12863 = !DILocation(line: 705, column: 5, scope: !12862)
!12864 = !DILocation(line: 705, column: 12, scope: !12862)
!12865 = !DILocation(line: 705, column: 33, scope: !12862)
!12866 = distinct !{!12866, !12863, !12867}
!12867 = !DILocation(line: 708, column: 5, scope: !12862)
!12868 = !DILocation(line: 711, column: 49, scope: !12862)
!12869 = !DILocation(line: 711, column: 5, scope: !12862)
!12870 = !DILocation(line: 712, column: 5, scope: !12862)
!12871 = !DILocation(line: 713, column: 5, scope: !12862)
!12872 = !DILocation(line: 713, column: 12, scope: !12862)
!12873 = !DILocation(line: 713, column: 37, scope: !12862)
!12874 = distinct !{!12874, !12871, !12875}
!12875 = !DILocation(line: 716, column: 5, scope: !12862)
!12876 = !DILocation(line: 719, column: 50, scope: !12862)
!12877 = !DILocation(line: 719, column: 5, scope: !12862)
!12878 = !DILocation(line: 720, column: 50, scope: !12862)
!12879 = !DILocation(line: 720, column: 5, scope: !12862)
!12880 = !DILocation(line: 721, column: 3, scope: !12862)
!12881 = !DILocation(line: 724, column: 6, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12842, file: !12627, line: 724, column: 6)
!12883 = !DILocation(line: 724, column: 22, scope: !12882)
!12884 = !DILocation(line: 724, column: 6, scope: !12842)
!12885 = !DILocation(line: 727, column: 14, scope: !12886)
!12886 = distinct !DILexicalBlock(scope: !12882, file: !12627, line: 725, column: 3)
!12887 = !DILocation(line: 728, column: 3, scope: !12886)
!12888 = !DILocation(line: 731, column: 13, scope: !12889)
!12889 = distinct !DILexicalBlock(scope: !12842, file: !12627, line: 731, column: 6)
!12890 = !DILocation(line: 731, column: 6, scope: !12842)
!12891 = !DILocation(line: 733, column: 5, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12889, file: !12627, line: 732, column: 3)
!12893 = !DILocation(line: 734, column: 3, scope: !12892)
!12894 = !DILocation(line: 736, column: 3, scope: !12842)
!12895 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9570, file: !9570, line: 4184, type: !3089, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2166)
!12896 = !DILocation(line: 4186, column: 3, scope: !12895)
!12897 = !DILocation(line: 4187, column: 1, scope: !12895)
!12898 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9570, file: !9570, line: 4205, type: !6343, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2166)
!12899 = !DILocation(line: 4207, column: 11, scope: !12898)
!12900 = !DILocation(line: 4207, column: 44, scope: !12898)
!12901 = !DILocation(line: 4207, column: 3, scope: !12898)
!12902 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9570, file: !9570, line: 3224, type: !6353, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12903)
!12903 = !{!12904}
!12904 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12902, file: !9570, line: 3224, type: !152)
!12905 = !DILocation(line: 0, scope: !12902)
!12906 = !DILocation(line: 3226, column: 3, scope: !12902)
!12907 = !DILocation(line: 3227, column: 1, scope: !12902)
!12908 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9570, file: !9570, line: 3188, type: !6353, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12909)
!12909 = !{!12910}
!12910 = !DILocalVariable(name: "Source", arg: 1, scope: !12908, file: !9570, line: 3188, type: !152)
!12911 = !DILocation(line: 0, scope: !12908)
!12912 = !DILocation(line: 3190, column: 3, scope: !12908)
!12913 = !DILocation(line: 3191, column: 1, scope: !12908)
!12914 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9570, file: !9570, line: 3204, type: !6343, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2166)
!12915 = !DILocation(line: 3206, column: 21, scope: !12914)
!12916 = !DILocation(line: 3206, column: 3, scope: !12914)
!12917 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9570, file: !9570, line: 3240, type: !6353, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12918)
!12918 = !{!12919}
!12919 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12917, file: !9570, line: 3240, type: !152)
!12920 = !DILocation(line: 0, scope: !12917)
!12921 = !DILocation(line: 3242, column: 3, scope: !12917)
!12922 = !DILocation(line: 3243, column: 1, scope: !12917)
!12923 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9570, file: !9570, line: 3256, type: !6353, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12924)
!12924 = !{!12925}
!12925 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12923, file: !9570, line: 3256, type: !152)
!12926 = !DILocation(line: 0, scope: !12923)
!12927 = !DILocation(line: 3258, column: 3, scope: !12923)
!12928 = !DILocation(line: 3259, column: 1, scope: !12923)
!12929 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !9570, file: !9570, line: 5153, type: !6343, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2166)
!12930 = !DILocation(line: 5155, column: 11, scope: !12929)
!12931 = !DILocation(line: 5155, column: 47, scope: !12929)
!12932 = !DILocation(line: 5155, column: 3, scope: !12929)
!12933 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12627, file: !12627, line: 540, type: !12934, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12936)
!12934 = !DISubroutineType(types: !12935)
!12935 = !{!12670, !152, !152, !12748, !12755}
!12936 = !{!12937, !12938, !12939, !12940, !12941, !12942}
!12937 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12933, file: !12627, line: 540, type: !152)
!12938 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12933, file: !12627, line: 540, type: !152)
!12939 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12933, file: !12627, line: 541, type: !12748)
!12940 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12933, file: !12627, line: 541, type: !12755)
!12941 = !DILocalVariable(name: "status", scope: !12933, file: !12627, line: 543, type: !12670)
!12942 = !DILocalVariable(name: "pllfreq", scope: !12933, file: !12627, line: 544, type: !152)
!12943 = !DILocation(line: 0, scope: !12933)
!12944 = !DILocation(line: 551, column: 6, scope: !12945)
!12945 = distinct !DILexicalBlock(scope: !12933, file: !12627, line: 551, column: 6)
!12946 = !DILocation(line: 551, column: 25, scope: !12945)
!12947 = !DILocation(line: 551, column: 6, scope: !12933)
!12948 = !DILocation(line: 554, column: 15, scope: !12949)
!12949 = distinct !DILexicalBlock(scope: !12945, file: !12627, line: 552, column: 3)
!12950 = !DILocation(line: 557, column: 8, scope: !12951)
!12951 = distinct !DILexicalBlock(scope: !12949, file: !12627, line: 557, column: 8)
!12952 = !DILocation(line: 557, column: 29, scope: !12951)
!12953 = !DILocation(line: 557, column: 8, scope: !12949)
!12954 = !DILocation(line: 560, column: 20, scope: !12955)
!12955 = distinct !DILexicalBlock(scope: !12956, file: !12627, line: 560, column: 10)
!12956 = distinct !DILexicalBlock(scope: !12951, file: !12627, line: 558, column: 5)
!12957 = !DILocation(line: 560, column: 10, scope: !12956)
!12958 = !DILocation(line: 562, column: 9, scope: !12959)
!12959 = distinct !DILexicalBlock(scope: !12955, file: !12627, line: 561, column: 7)
!12960 = !DILocation(line: 563, column: 7, scope: !12959)
!12961 = !DILocation(line: 566, column: 9, scope: !12962)
!12962 = distinct !DILexicalBlock(scope: !12955, file: !12627, line: 565, column: 7)
!12963 = !DILocation(line: 570, column: 7, scope: !12956)
!12964 = !DILocation(line: 571, column: 7, scope: !12956)
!12965 = !DILocation(line: 571, column: 14, scope: !12956)
!12966 = !DILocation(line: 571, column: 35, scope: !12956)
!12967 = distinct !{!12967, !12964, !12968}
!12968 = !DILocation(line: 574, column: 7, scope: !12956)
!12969 = !DILocation(line: 578, column: 76, scope: !12949)
!12970 = !DILocation(line: 578, column: 103, scope: !12949)
!12971 = !DILocation(line: 579, column: 54, scope: !12949)
!12972 = !DILocation(line: 578, column: 5, scope: !12949)
!12973 = !DILocation(line: 582, column: 14, scope: !12949)
!12974 = !DILocation(line: 583, column: 3, scope: !12949)
!12975 = !DILocation(line: 0, scope: !12945)
!12976 = !DILocation(line: 590, column: 3, scope: !12933)
!12977 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9570, file: !9570, line: 2969, type: !6343, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2166)
!12978 = !DILocation(line: 2971, column: 11, scope: !12977)
!12979 = !DILocation(line: 2971, column: 44, scope: !12977)
!12980 = !DILocation(line: 2971, column: 3, scope: !12977)
!12981 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !9570, file: !9570, line: 2929, type: !3089, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2166)
!12982 = !DILocation(line: 2931, column: 3, scope: !12981)
!12983 = !DILocation(line: 2932, column: 1, scope: !12981)
!12984 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9570, file: !9570, line: 2939, type: !3089, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2166)
!12985 = !DILocation(line: 2941, column: 3, scope: !12984)
!12986 = !DILocation(line: 2942, column: 1, scope: !12984)
!12987 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9570, file: !9570, line: 2949, type: !3089, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2166)
!12988 = !DILocation(line: 2951, column: 3, scope: !12987)
!12989 = !DILocation(line: 2952, column: 1, scope: !12987)
!12990 = distinct !DISubprogram(name: "z_device_state_init", scope: !12991, file: !12991, line: 23, type: !3089, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !12992)
!12991 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12992 = !{!12993}
!12993 = !DILocalVariable(name: "dev", scope: !12990, file: !12991, line: 25, type: !12994)
!12994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12995, size: 32)
!12995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12996)
!12996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !12997)
!12997 = !{!12998, !12999, !13000, !13001, !13007, !13008}
!12998 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12996, file: !247, line: 380, baseType: !118, size: 32)
!12999 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12996, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!13000 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12996, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!13001 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12996, file: !247, line: 386, baseType: !13002, size: 32, offset: 96)
!13002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13003, size: 32)
!13003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !13004)
!13004 = !{!13005, !13006}
!13005 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13003, file: !247, line: 359, baseType: !195, size: 8)
!13006 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13003, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13007 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12996, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!13008 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12996, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!13009 = !DILocation(line: 0, scope: !12990)
!13010 = !DILocation(line: 31, column: 1, scope: !12990)
!13011 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12991, file: !12991, line: 33, type: !13012, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !13014)
!13012 = !DISubroutineType(types: !13013)
!13013 = !{!12994, !118}
!13014 = !{!13015, !13016}
!13015 = !DILocalVariable(name: "name", arg: 1, scope: !13011, file: !12991, line: 33, type: !118)
!13016 = !DILocalVariable(name: "dev", scope: !13011, file: !12991, line: 35, type: !12994)
!13017 = !DILocation(line: 0, scope: !13011)
!13018 = !DILocation(line: 40, column: 12, scope: !13019)
!13019 = distinct !DILexicalBlock(scope: !13011, file: !12991, line: 40, column: 6)
!13020 = !DILocation(line: 40, column: 21, scope: !13019)
!13021 = !DILocation(line: 40, column: 25, scope: !13019)
!13022 = !DILocation(line: 40, column: 33, scope: !13019)
!13023 = !DILocation(line: 40, column: 6, scope: !13011)
!13024 = !DILocation(line: 55, column: 2, scope: !13025)
!13025 = distinct !DILexicalBlock(scope: !13011, file: !12991, line: 55, column: 2)
!13026 = !DILocation(line: 50, column: 7, scope: !13027)
!13027 = distinct !DILexicalBlock(scope: !13028, file: !12991, line: 50, column: 7)
!13028 = distinct !DILexicalBlock(scope: !13029, file: !12991, line: 49, column: 57)
!13029 = distinct !DILexicalBlock(scope: !13030, file: !12991, line: 49, column: 2)
!13030 = distinct !DILexicalBlock(scope: !13011, file: !12991, line: 49, column: 2)
!13031 = !DILocation(line: 50, column: 30, scope: !13027)
!13032 = !DILocation(line: 50, column: 39, scope: !13027)
!13033 = !DILocation(line: 50, column: 44, scope: !13027)
!13034 = !DILocation(line: 50, column: 7, scope: !13028)
!13035 = !DILocation(line: 49, column: 53, scope: !13029)
!13036 = !DILocation(line: 49, column: 33, scope: !13029)
!13037 = !DILocation(line: 49, column: 2, scope: !13030)
!13038 = distinct !{!13038, !13037, !13039}
!13039 = !DILocation(line: 53, column: 2, scope: !13030)
!13040 = !DILocation(line: 56, column: 7, scope: !13041)
!13041 = distinct !DILexicalBlock(scope: !13042, file: !12991, line: 56, column: 7)
!13042 = distinct !DILexicalBlock(scope: !13043, file: !12991, line: 55, column: 57)
!13043 = distinct !DILexicalBlock(scope: !13025, file: !12991, line: 55, column: 2)
!13044 = !DILocation(line: 56, column: 30, scope: !13041)
!13045 = !DILocation(line: 56, column: 52, scope: !13041)
!13046 = !DILocation(line: 56, column: 34, scope: !13041)
!13047 = !DILocation(line: 56, column: 58, scope: !13041)
!13048 = !DILocation(line: 56, column: 7, scope: !13042)
!13049 = !DILocation(line: 55, column: 53, scope: !13043)
!13050 = !DILocation(line: 55, column: 33, scope: !13043)
!13051 = distinct !{!13051, !13024, !13052}
!13052 = !DILocation(line: 59, column: 2, scope: !13025)
!13053 = !DILocation(line: 62, column: 1, scope: !13011)
!13054 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12991, file: !12991, line: 93, type: !13055, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !13057)
!13055 = !DISubroutineType(types: !13056)
!13056 = !{!145, !12994}
!13057 = !{!13058}
!13058 = !DILocalVariable(name: "dev", arg: 1, scope: !13054, file: !12991, line: 93, type: !12994)
!13059 = !DILocation(line: 0, scope: !13054)
!13060 = !DILocation(line: 99, column: 10, scope: !13061)
!13061 = distinct !DILexicalBlock(scope: !13054, file: !12991, line: 99, column: 6)
!13062 = !DILocation(line: 99, column: 6, scope: !13054)
!13063 = !DILocation(line: 103, column: 14, scope: !13054)
!13064 = !DILocation(line: 103, column: 21, scope: !13054)
!13065 = !DILocation(line: 103, column: 33, scope: !13054)
!13066 = !DILocation(line: 103, column: 49, scope: !13054)
!13067 = !DILocation(line: 103, column: 58, scope: !13054)
!13068 = !DILocation(line: 104, column: 1, scope: !13054)
!13069 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12991, file: !12991, line: 87, type: !13070, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !13073)
!13070 = !DISubroutineType(types: !13071)
!13071 = !{!185, !13072}
!13072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12994, size: 32)
!13073 = !{!13074}
!13074 = !DILocalVariable(name: "devices", arg: 1, scope: !13069, file: !12991, line: 87, type: !13072)
!13075 = !DILocation(line: 0, scope: !13069)
!13076 = !DILocation(line: 89, column: 11, scope: !13069)
!13077 = !DILocation(line: 90, column: 2, scope: !13069)
!13078 = distinct !DISubprogram(name: "device_required_foreach", scope: !12991, file: !12991, line: 125, type: !13079, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !13085)
!13079 = !DISubroutineType(types: !13080)
!13080 = !{!107, !12994, !13081, !106}
!13081 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !247, line: 471, baseType: !13082)
!13082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13083, size: 32)
!13083 = !DISubroutineType(types: !13084)
!13084 = !{!107, !12994, !106}
!13085 = !{!13086, !13087, !13088, !13089, !13090}
!13086 = !DILocalVariable(name: "dev", arg: 1, scope: !13078, file: !12991, line: 125, type: !12994)
!13087 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13078, file: !12991, line: 126, type: !13081)
!13088 = !DILocalVariable(name: "context", arg: 3, scope: !13078, file: !12991, line: 127, type: !106)
!13089 = !DILocalVariable(name: "handle_count", scope: !13078, file: !12991, line: 129, type: !185)
!13090 = !DILocalVariable(name: "handles", scope: !13078, file: !12991, line: 130, type: !260)
!13091 = !DILocation(line: 0, scope: !13078)
!13092 = !DILocation(line: 129, column: 2, scope: !13078)
!13093 = !DILocation(line: 129, column: 9, scope: !13078)
!13094 = !DILocation(line: 130, column: 35, scope: !13078)
!13095 = !DILocation(line: 132, column: 33, scope: !13078)
!13096 = !DILocation(line: 132, column: 9, scope: !13078)
!13097 = !DILocation(line: 133, column: 1, scope: !13078)
!13098 = !DILocation(line: 132, column: 2, scope: !13078)
!13099 = distinct !DISubprogram(name: "device_required_handles_get", scope: !247, file: !247, line: 493, type: !13100, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !13102)
!13100 = !DISubroutineType(types: !13101)
!13101 = !{!260, !12994, !2545}
!13102 = !{!13103, !13104, !13105, !13106}
!13103 = !DILocalVariable(name: "dev", arg: 1, scope: !13099, file: !247, line: 493, type: !12994)
!13104 = !DILocalVariable(name: "count", arg: 2, scope: !13099, file: !247, line: 493, type: !2545)
!13105 = !DILocalVariable(name: "rv", scope: !13099, file: !247, line: 495, type: !260)
!13106 = !DILocalVariable(name: "i", scope: !13107, file: !247, line: 498, type: !185)
!13107 = distinct !DILexicalBlock(scope: !13108, file: !247, line: 497, column: 18)
!13108 = distinct !DILexicalBlock(scope: !13099, file: !247, line: 497, column: 6)
!13109 = !DILocation(line: 0, scope: !13099)
!13110 = !DILocation(line: 495, column: 35, scope: !13099)
!13111 = !DILocation(line: 497, column: 9, scope: !13108)
!13112 = !DILocation(line: 497, column: 6, scope: !13099)
!13113 = !DILocation(line: 0, scope: !13107)
!13114 = !DILocation(line: 500, column: 11, scope: !13107)
!13115 = !DILocation(line: 500, column: 40, scope: !13107)
!13116 = !DILocation(line: 502, column: 4, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13107, file: !247, line: 501, column: 40)
!13118 = distinct !{!13118, !13119, !13120}
!13119 = !DILocation(line: 500, column: 3, scope: !13107)
!13120 = !DILocation(line: 503, column: 3, scope: !13107)
!13121 = !DILocation(line: 504, column: 10, scope: !13107)
!13122 = !DILocation(line: 505, column: 2, scope: !13107)
!13123 = !DILocation(line: 507, column: 2, scope: !13099)
!13124 = distinct !DISubprogram(name: "device_visitor", scope: !12991, file: !12991, line: 106, type: !13125, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !13127)
!13125 = !DISubroutineType(types: !13126)
!13126 = !{!107, !260, !185, !13081, !106}
!13127 = !{!13128, !13129, !13130, !13131, !13132, !13134, !13137, !13138}
!13128 = !DILocalVariable(name: "handles", arg: 1, scope: !13124, file: !12991, line: 106, type: !260)
!13129 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13124, file: !12991, line: 107, type: !185)
!13130 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13124, file: !12991, line: 108, type: !13081)
!13131 = !DILocalVariable(name: "context", arg: 4, scope: !13124, file: !12991, line: 109, type: !106)
!13132 = !DILocalVariable(name: "i", scope: !13133, file: !12991, line: 112, type: !185)
!13133 = distinct !DILexicalBlock(scope: !13124, file: !12991, line: 112, column: 2)
!13134 = !DILocalVariable(name: "dh", scope: !13135, file: !12991, line: 113, type: !262)
!13135 = distinct !DILexicalBlock(scope: !13136, file: !12991, line: 112, column: 44)
!13136 = distinct !DILexicalBlock(scope: !13133, file: !12991, line: 112, column: 2)
!13137 = !DILocalVariable(name: "rdev", scope: !13135, file: !12991, line: 114, type: !12994)
!13138 = !DILocalVariable(name: "rc", scope: !13135, file: !12991, line: 115, type: !107)
!13139 = !DILocation(line: 0, scope: !13124)
!13140 = !DILocation(line: 0, scope: !13133)
!13141 = !DILocation(line: 112, column: 23, scope: !13136)
!13142 = !DILocation(line: 112, column: 2, scope: !13133)
!13143 = distinct !{!13143, !13142, !13144}
!13144 = !DILocation(line: 120, column: 2, scope: !13133)
!13145 = !DILocation(line: 113, column: 24, scope: !13135)
!13146 = !DILocation(line: 0, scope: !13135)
!13147 = !DILocation(line: 114, column: 31, scope: !13135)
!13148 = !DILocation(line: 115, column: 12, scope: !13135)
!13149 = !DILocation(line: 117, column: 10, scope: !13150)
!13150 = distinct !DILexicalBlock(scope: !13135, file: !12991, line: 117, column: 7)
!13151 = !DILocation(line: 112, column: 39, scope: !13136)
!13152 = !DILocation(line: 123, column: 1, scope: !13124)
!13153 = distinct !DISubprogram(name: "device_from_handle", scope: !247, file: !247, line: 439, type: !13154, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !13156)
!13154 = !DISubroutineType(types: !13155)
!13155 = !{!12994, !262}
!13156 = !{!13157, !13158, !13159}
!13157 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13153, file: !247, line: 439, type: !262)
!13158 = !DILocalVariable(name: "dev", scope: !13153, file: !247, line: 443, type: !12994)
!13159 = !DILocalVariable(name: "numdev", scope: !13153, file: !247, line: 444, type: !185)
!13160 = !DILocation(line: 0, scope: !13153)
!13161 = !DILocation(line: 446, column: 7, scope: !13162)
!13162 = distinct !DILexicalBlock(scope: !13153, file: !247, line: 446, column: 6)
!13163 = !DILocation(line: 446, column: 18, scope: !13162)
!13164 = !DILocation(line: 446, column: 23, scope: !13162)
!13165 = !DILocation(line: 450, column: 2, scope: !13153)
!13166 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12991, file: !12991, line: 135, type: !13079, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !13167)
!13167 = !{!13168, !13169, !13170, !13171, !13172}
!13168 = !DILocalVariable(name: "dev", arg: 1, scope: !13166, file: !12991, line: 135, type: !12994)
!13169 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13166, file: !12991, line: 136, type: !13081)
!13170 = !DILocalVariable(name: "context", arg: 3, scope: !13166, file: !12991, line: 137, type: !106)
!13171 = !DILocalVariable(name: "handle_count", scope: !13166, file: !12991, line: 139, type: !185)
!13172 = !DILocalVariable(name: "handles", scope: !13166, file: !12991, line: 140, type: !260)
!13173 = !DILocation(line: 0, scope: !13166)
!13174 = !DILocation(line: 139, column: 2, scope: !13166)
!13175 = !DILocation(line: 139, column: 9, scope: !13166)
!13176 = !DILocation(line: 140, column: 35, scope: !13166)
!13177 = !DILocation(line: 142, column: 33, scope: !13166)
!13178 = !DILocation(line: 142, column: 9, scope: !13166)
!13179 = !DILocation(line: 143, column: 1, scope: !13166)
!13180 = !DILocation(line: 142, column: 2, scope: !13166)
!13181 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !247, file: !247, line: 573, type: !13100, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !13182)
!13182 = !{!13183, !13184, !13185, !13186, !13187}
!13183 = !DILocalVariable(name: "dev", arg: 1, scope: !13181, file: !247, line: 573, type: !12994)
!13184 = !DILocalVariable(name: "count", arg: 2, scope: !13181, file: !247, line: 573, type: !2545)
!13185 = !DILocalVariable(name: "rv", scope: !13181, file: !247, line: 575, type: !260)
!13186 = !DILocalVariable(name: "region", scope: !13181, file: !247, line: 576, type: !185)
!13187 = !DILocalVariable(name: "i", scope: !13181, file: !247, line: 577, type: !185)
!13188 = !DILocation(line: 0, scope: !13181)
!13189 = !DILocation(line: 575, column: 35, scope: !13181)
!13190 = !DILocation(line: 579, column: 9, scope: !13191)
!13191 = distinct !DILexicalBlock(scope: !13181, file: !247, line: 579, column: 6)
!13192 = !DILocation(line: 579, column: 6, scope: !13181)
!13193 = !DILocation(line: 582, column: 8, scope: !13194)
!13194 = distinct !DILexicalBlock(scope: !13195, file: !247, line: 582, column: 8)
!13195 = distinct !DILexicalBlock(scope: !13196, file: !247, line: 581, column: 23)
!13196 = distinct !DILexicalBlock(scope: !13191, file: !247, line: 579, column: 18)
!13197 = !DILocation(line: 582, column: 12, scope: !13194)
!13198 = !DILocation(line: 585, column: 6, scope: !13195)
!13199 = !DILocation(line: 0, scope: !13196)
!13200 = !DILocation(line: 581, column: 17, scope: !13196)
!13201 = !DILocation(line: 581, column: 3, scope: !13196)
!13202 = !DILocation(line: 588, column: 10, scope: !13196)
!13203 = !DILocation(line: 588, column: 16, scope: !13196)
!13204 = !DILocation(line: 589, column: 4, scope: !13205)
!13205 = distinct !DILexicalBlock(scope: !13196, file: !247, line: 588, column: 39)
!13206 = !DILocation(line: 588, column: 3, scope: !13196)
!13207 = distinct !{!13207, !13206, !13208}
!13208 = !DILocation(line: 590, column: 3, scope: !13196)
!13209 = !DILocation(line: 591, column: 10, scope: !13196)
!13210 = !DILocation(line: 592, column: 2, scope: !13196)
!13211 = !DILocation(line: 575, column: 25, scope: !13181)
!13212 = !DILocation(line: 594, column: 2, scope: !13181)
!13213 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1957, file: !1957, line: 49, type: !13214, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1954, retainedNodes: !2166)
!13214 = !DISubroutineType(types: !13215)
!13215 = !{!187}
!13216 = !DILocation(line: 51, column: 10, scope: !13213)
!13217 = !DILocation(line: 51, column: 20, scope: !13213)
!13218 = !DILocation(line: 51, column: 2, scope: !13213)
!13219 = distinct !DISubprogram(name: "coredump", scope: !3056, file: !3056, line: 209, type: !13220, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13369)
!13220 = !DISubroutineType(types: !13221)
!13221 = !{null, !32, !13222, !13266}
!13222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13223, size: 32)
!13223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13224)
!13224 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2675, line: 141, baseType: !13225)
!13225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2675, line: 97, size: 256, elements: !13226)
!13226 = !{!13227}
!13227 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13225, file: !2675, line: 107, baseType: !13228, size: 256)
!13228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2675, line: 98, size: 256, elements: !13229)
!13229 = !{!13230, !13235, !13240, !13245, !13250, !13255, !13260, !13265}
!13230 = !DIDerivedType(tag: DW_TAG_member, scope: !13228, file: !2675, line: 99, baseType: !13231, size: 32)
!13231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13228, file: !2675, line: 99, size: 32, elements: !13232)
!13232 = !{!13233, !13234}
!13233 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13231, file: !2675, line: 99, baseType: !152, size: 32)
!13234 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13231, file: !2675, line: 99, baseType: !152, size: 32)
!13235 = !DIDerivedType(tag: DW_TAG_member, scope: !13228, file: !2675, line: 100, baseType: !13236, size: 32, offset: 32)
!13236 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13228, file: !2675, line: 100, size: 32, elements: !13237)
!13237 = !{!13238, !13239}
!13238 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13236, file: !2675, line: 100, baseType: !152, size: 32)
!13239 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13236, file: !2675, line: 100, baseType: !152, size: 32)
!13240 = !DIDerivedType(tag: DW_TAG_member, scope: !13228, file: !2675, line: 101, baseType: !13241, size: 32, offset: 64)
!13241 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13228, file: !2675, line: 101, size: 32, elements: !13242)
!13242 = !{!13243, !13244}
!13243 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13241, file: !2675, line: 101, baseType: !152, size: 32)
!13244 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13241, file: !2675, line: 101, baseType: !152, size: 32)
!13245 = !DIDerivedType(tag: DW_TAG_member, scope: !13228, file: !2675, line: 102, baseType: !13246, size: 32, offset: 96)
!13246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13228, file: !2675, line: 102, size: 32, elements: !13247)
!13247 = !{!13248, !13249}
!13248 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13246, file: !2675, line: 102, baseType: !152, size: 32)
!13249 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13246, file: !2675, line: 102, baseType: !152, size: 32)
!13250 = !DIDerivedType(tag: DW_TAG_member, scope: !13228, file: !2675, line: 103, baseType: !13251, size: 32, offset: 128)
!13251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13228, file: !2675, line: 103, size: 32, elements: !13252)
!13252 = !{!13253, !13254}
!13253 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13251, file: !2675, line: 103, baseType: !152, size: 32)
!13254 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13251, file: !2675, line: 103, baseType: !152, size: 32)
!13255 = !DIDerivedType(tag: DW_TAG_member, scope: !13228, file: !2675, line: 104, baseType: !13256, size: 32, offset: 160)
!13256 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13228, file: !2675, line: 104, size: 32, elements: !13257)
!13257 = !{!13258, !13259}
!13258 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13256, file: !2675, line: 104, baseType: !152, size: 32)
!13259 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13256, file: !2675, line: 104, baseType: !152, size: 32)
!13260 = !DIDerivedType(tag: DW_TAG_member, scope: !13228, file: !2675, line: 105, baseType: !13261, size: 32, offset: 192)
!13261 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13228, file: !2675, line: 105, size: 32, elements: !13262)
!13262 = !{!13263, !13264}
!13263 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13261, file: !2675, line: 105, baseType: !152, size: 32)
!13264 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13261, file: !2675, line: 105, baseType: !152, size: 32)
!13265 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13228, file: !2675, line: 106, baseType: !152, size: 32, offset: 224)
!13266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13267, size: 32)
!13267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !13268)
!13268 = !{!13269, !13327, !13339, !13340, !13341, !13342, !13343, !13349, !13364}
!13269 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13267, file: !309, line: 247, baseType: !13270, size: 384)
!13270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !13271)
!13271 = !{!13272, !13296, !13303, !13304, !13305, !13314, !13315, !13316}
!13272 = !DIDerivedType(tag: DW_TAG_member, scope: !13270, file: !309, line: 60, baseType: !13273, size: 64)
!13273 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13270, file: !309, line: 60, size: 64, elements: !13274)
!13274 = !{!13275, !13290}
!13275 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13273, file: !309, line: 61, baseType: !13276, size: 64)
!13276 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !13277)
!13277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !13278)
!13278 = !{!13279, !13285}
!13279 = !DIDerivedType(tag: DW_TAG_member, scope: !13277, file: !319, line: 38, baseType: !13280, size: 32)
!13280 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13277, file: !319, line: 38, size: 32, elements: !13281)
!13281 = !{!13282, !13284}
!13282 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13280, file: !319, line: 39, baseType: !13283, size: 32)
!13283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13277, size: 32)
!13284 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13280, file: !319, line: 40, baseType: !13283, size: 32)
!13285 = !DIDerivedType(tag: DW_TAG_member, scope: !13277, file: !319, line: 42, baseType: !13286, size: 32, offset: 32)
!13286 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13277, file: !319, line: 42, size: 32, elements: !13287)
!13287 = !{!13288, !13289}
!13288 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13286, file: !319, line: 43, baseType: !13283, size: 32)
!13289 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13286, file: !319, line: 44, baseType: !13283, size: 32)
!13290 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13273, file: !309, line: 62, baseType: !13291, size: 64)
!13291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !13292)
!13292 = !{!13293}
!13293 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13291, file: !335, line: 50, baseType: !13294, size: 64)
!13294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13295, size: 64, elements: !340)
!13295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13291, size: 32)
!13296 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13270, file: !309, line: 68, baseType: !13297, size: 32, offset: 64)
!13297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13298, size: 32)
!13298 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !13299)
!13299 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !13300)
!13300 = !{!13301}
!13301 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13299, file: !345, line: 232, baseType: !13302, size: 64)
!13302 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !13277)
!13303 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13270, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!13304 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13270, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!13305 = !DIDerivedType(tag: DW_TAG_member, scope: !13270, file: !309, line: 90, baseType: !13306, size: 16, offset: 112)
!13306 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13270, file: !309, line: 90, size: 16, elements: !13307)
!13307 = !{!13308, !13313}
!13308 = !DIDerivedType(tag: DW_TAG_member, scope: !13306, file: !309, line: 91, baseType: !13309, size: 16)
!13309 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13306, file: !309, line: 91, size: 16, elements: !13310)
!13310 = !{!13311, !13312}
!13311 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13309, file: !309, line: 96, baseType: !359, size: 8)
!13312 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13309, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!13313 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13306, file: !309, line: 100, baseType: !197, size: 16)
!13314 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13270, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!13315 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13270, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!13316 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13270, file: !309, line: 131, baseType: !13317, size: 192, offset: 192)
!13317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !13318)
!13318 = !{!13319, !13320, !13326}
!13319 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13317, file: !345, line: 245, baseType: !13276, size: 64)
!13320 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13317, file: !345, line: 246, baseType: !13321, size: 32, offset: 64)
!13321 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !13322)
!13322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13323, size: 32)
!13323 = !DISubroutineType(types: !13324)
!13324 = !{null, !13325}
!13325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13317, size: 32)
!13326 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13317, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!13327 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13267, file: !309, line: 250, baseType: !13328, size: 288, offset: 384)
!13328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !13329)
!13329 = !{!13330, !13331, !13332, !13333, !13334, !13335, !13336, !13337, !13338}
!13330 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13328, file: !379, line: 26, baseType: !152, size: 32)
!13331 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13328, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!13332 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13328, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!13333 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13328, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!13334 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13328, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!13335 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13328, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!13336 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13328, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!13337 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13328, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!13338 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13328, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!13339 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13267, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!13340 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13267, file: !309, line: 256, baseType: !13298, size: 64, offset: 704)
!13341 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13267, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!13342 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13267, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!13343 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13267, file: !309, line: 300, baseType: !13344, size: 96, offset: 1056)
!13344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !13345)
!13345 = !{!13346, !13347, !13348}
!13346 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13344, file: !309, line: 153, baseType: !22, size: 32)
!13347 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13344, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!13348 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13344, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!13349 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13267, file: !309, line: 325, baseType: !13350, size: 32, offset: 1152)
!13350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13351, size: 32)
!13351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !13352)
!13352 = !{!13353, !13359, !13360}
!13353 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13351, file: !406, line: 5074, baseType: !13354, size: 96)
!13354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !13355)
!13355 = !{!13356, !13357, !13358}
!13356 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13354, file: !410, line: 57, baseType: !413, size: 32)
!13357 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13354, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!13358 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13354, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!13359 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13351, file: !406, line: 5075, baseType: !13298, size: 64, offset: 96)
!13360 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13351, file: !406, line: 5076, baseType: !13361, size: 32, offset: 160)
!13361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !13362)
!13362 = !{!13363}
!13363 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !13361, file: !420, line: 52, baseType: !22, size: 32)
!13364 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13267, file: !309, line: 343, baseType: !13365, size: 64, offset: 1184)
!13365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !13366)
!13366 = !{!13367, !13368}
!13367 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13365, file: !379, line: 63, baseType: !152, size: 32)
!13368 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13365, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!13369 = !{!13370, !13371, !13372}
!13370 = !DILocalVariable(name: "reason", arg: 1, scope: !13219, file: !3056, line: 209, type: !32)
!13371 = !DILocalVariable(name: "esf", arg: 2, scope: !13219, file: !3056, line: 209, type: !13222)
!13372 = !DILocalVariable(name: "thread", arg: 3, scope: !13219, file: !3056, line: 210, type: !13266)
!13373 = !DILocation(line: 0, scope: !13219)
!13374 = !DILocation(line: 212, column: 1, scope: !13219)
!13375 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3056, file: !3056, line: 214, type: !13376, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13378)
!13376 = !DISubroutineType(types: !13377)
!13377 = !{null, !22, !22}
!13378 = !{!13379, !13380}
!13379 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13375, file: !3056, line: 214, type: !22)
!13380 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13375, file: !3056, line: 214, type: !22)
!13381 = !DILocation(line: 0, scope: !13375)
!13382 = !DILocation(line: 216, column: 1, scope: !13375)
!13383 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3056, file: !3056, line: 218, type: !13384, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13386)
!13384 = !DISubroutineType(types: !13385)
!13385 = !{null, !194, !185}
!13386 = !{!13387, !13388}
!13387 = !DILocalVariable(name: "buf", arg: 1, scope: !13383, file: !3056, line: 218, type: !194)
!13388 = !DILocalVariable(name: "buflen", arg: 2, scope: !13383, file: !3056, line: 218, type: !185)
!13389 = !DILocation(line: 0, scope: !13383)
!13390 = !DILocation(line: 220, column: 1, scope: !13383)
!13391 = distinct !DISubprogram(name: "coredump_query", scope: !3056, file: !3056, line: 222, type: !13392, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13394)
!13392 = !DISubroutineType(types: !13393)
!13393 = !{!107, !3055, !106}
!13394 = !{!13395, !13396}
!13395 = !DILocalVariable(name: "query_id", arg: 1, scope: !13391, file: !3056, line: 222, type: !3055)
!13396 = !DILocalVariable(name: "arg", arg: 2, scope: !13391, file: !3056, line: 222, type: !106)
!13397 = !DILocation(line: 0, scope: !13391)
!13398 = !DILocation(line: 224, column: 2, scope: !13391)
!13399 = distinct !DISubprogram(name: "coredump_cmd", scope: !3056, file: !3056, line: 227, type: !13400, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13402)
!13400 = !DISubroutineType(types: !13401)
!13401 = !{!107, !3062, !106}
!13402 = !{!13403, !13404}
!13403 = !DILocalVariable(name: "query_id", arg: 1, scope: !13399, file: !3056, line: 227, type: !3062)
!13404 = !DILocalVariable(name: "arg", arg: 2, scope: !13399, file: !3056, line: 227, type: !106)
!13405 = !DILocation(line: 0, scope: !13399)
!13406 = !DILocation(line: 229, column: 2, scope: !13399)
!13407 = distinct !DISubprogram(name: "arch_system_halt", scope: !13408, file: !13408, line: 23, type: !5948, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13409)
!13408 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13409 = !{!13410}
!13410 = !DILocalVariable(name: "reason", arg: 1, scope: !13407, file: !13408, line: 23, type: !32)
!13411 = !DILocation(line: 0, scope: !13407)
!13412 = !DILocation(line: 55, column: 2, scope: !13413, inlinedAt: !13417)
!13413 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5937, file: !5937, line: 42, type: !5938, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13414)
!13414 = !{!13415, !13416}
!13415 = !DILocalVariable(name: "key", scope: !13413, file: !5937, line: 44, type: !32)
!13416 = !DILocalVariable(name: "tmp", scope: !13413, file: !5937, line: 53, type: !32)
!13417 = distinct !DILocation(line: 31, column: 8, scope: !13407)
!13418 = !{i64 2228546}
!13419 = !DILocation(line: 0, scope: !13413, inlinedAt: !13417)
!13420 = !DILocation(line: 32, column: 2, scope: !13407)
!13421 = !DILocation(line: 32, column: 2, scope: !13422)
!13422 = distinct !DILexicalBlock(scope: !13423, file: !13408, line: 32, column: 2)
!13423 = distinct !DILexicalBlock(scope: !13407, file: !13408, line: 32, column: 2)
!13424 = distinct !{!13424, !13425, !13426}
!13425 = !DILocation(line: 32, column: 2, scope: !13423)
!13426 = !DILocation(line: 34, column: 2, scope: !13423)
!13427 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13408, file: !13408, line: 39, type: !13428, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13430)
!13428 = !DISubroutineType(types: !13429)
!13429 = !{null, !32, !13222}
!13430 = !{!13431, !13432}
!13431 = !DILocalVariable(name: "reason", arg: 1, scope: !13427, file: !13408, line: 39, type: !32)
!13432 = !DILocalVariable(name: "esf", arg: 2, scope: !13427, file: !13408, line: 40, type: !13222)
!13433 = !DILocation(line: 0, scope: !13427)
!13434 = !DILocation(line: 45, column: 2, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13436, file: !13408, line: 45, column: 2)
!13436 = distinct !DILexicalBlock(scope: !13437, file: !13408, line: 45, column: 2)
!13437 = distinct !DILexicalBlock(scope: !13438, file: !13408, line: 45, column: 2)
!13438 = distinct !DILexicalBlock(scope: !13427, file: !13408, line: 45, column: 2)
!13439 = !DILocation(line: 46, column: 2, scope: !13427)
!13440 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13408, file: !13408, line: 81, type: !5948, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13441)
!13441 = !{!13442}
!13442 = !DILocalVariable(name: "reason", arg: 1, scope: !13440, file: !13408, line: 81, type: !32)
!13443 = !DILocation(line: 0, scope: !13440)
!13444 = !DILocation(line: 83, column: 2, scope: !13440)
!13445 = distinct !DISubprogram(name: "z_fatal_error", scope: !13408, file: !13408, line: 96, type: !13428, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13446)
!13446 = !{!13447, !13448, !13449, !13450}
!13447 = !DILocalVariable(name: "reason", arg: 1, scope: !13445, file: !13408, line: 96, type: !32)
!13448 = !DILocalVariable(name: "esf", arg: 2, scope: !13445, file: !13408, line: 96, type: !13222)
!13449 = !DILocalVariable(name: "key", scope: !13445, file: !13408, line: 102, type: !32)
!13450 = !DILocalVariable(name: "thread", scope: !13445, file: !13408, line: 103, type: !13266)
!13451 = !DILocation(line: 0, scope: !13445)
!13452 = !DILocation(line: 55, column: 2, scope: !13413, inlinedAt: !13453)
!13453 = distinct !DILocation(line: 102, column: 21, scope: !13445)
!13454 = !DILocation(line: 0, scope: !13413, inlinedAt: !13453)
!13455 = !DILocation(line: 104, column: 4, scope: !13445)
!13456 = !DILocation(line: 109, column: 2, scope: !13457)
!13457 = distinct !DILexicalBlock(scope: !13458, file: !13408, line: 109, column: 2)
!13458 = distinct !DILexicalBlock(scope: !13459, file: !13408, line: 109, column: 2)
!13459 = distinct !DILexicalBlock(scope: !13460, file: !13408, line: 109, column: 2)
!13460 = distinct !DILexicalBlock(scope: !13445, file: !13408, line: 109, column: 2)
!13461 = !DILocation(line: 119, column: 11, scope: !13462)
!13462 = distinct !DILexicalBlock(scope: !13445, file: !13408, line: 119, column: 6)
!13463 = !DILocation(line: 119, column: 20, scope: !13462)
!13464 = !DILocalVariable(name: "esf", arg: 1, scope: !13465, file: !7308, line: 71, type: !13222)
!13465 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7308, file: !7308, line: 71, type: !13466, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13468)
!13466 = !DISubroutineType(types: !13467)
!13467 = !{!145, !13222}
!13468 = !{!13464}
!13469 = !DILocation(line: 0, scope: !13465, inlinedAt: !13470)
!13470 = distinct !DILocation(line: 119, column: 23, scope: !13462)
!13471 = !DILocation(line: 73, column: 21, scope: !13465, inlinedAt: !13470)
!13472 = !DILocation(line: 73, column: 26, scope: !13465, inlinedAt: !13470)
!13473 = !DILocation(line: 73, column: 9, scope: !13465, inlinedAt: !13470)
!13474 = !DILocation(line: 119, column: 6, scope: !13445)
!13475 = !DILocation(line: 120, column: 3, scope: !13476)
!13476 = distinct !DILexicalBlock(scope: !13477, file: !13408, line: 120, column: 3)
!13477 = distinct !DILexicalBlock(scope: !13478, file: !13408, line: 120, column: 3)
!13478 = distinct !DILexicalBlock(scope: !13479, file: !13408, line: 120, column: 3)
!13479 = distinct !DILexicalBlock(scope: !13480, file: !13408, line: 120, column: 3)
!13480 = distinct !DILexicalBlock(scope: !13462, file: !13408, line: 119, column: 57)
!13481 = !DILocation(line: 121, column: 2, scope: !13480)
!13482 = !DILocation(line: 124, column: 2, scope: !13483)
!13483 = distinct !DILexicalBlock(scope: !13484, file: !13408, line: 124, column: 2)
!13484 = distinct !DILexicalBlock(scope: !13485, file: !13408, line: 124, column: 2)
!13485 = distinct !DILexicalBlock(scope: !13486, file: !13408, line: 124, column: 2)
!13486 = distinct !DILexicalBlock(scope: !13445, file: !13408, line: 124, column: 2)
!13487 = !DILocation(line: 131, column: 2, scope: !13445)
!13488 = !DILocation(line: 0, scope: !13465, inlinedAt: !13489)
!13489 = distinct !DILocation(line: 163, column: 24, scope: !13490)
!13490 = distinct !DILexicalBlock(scope: !13491, file: !13408, line: 163, column: 7)
!13491 = distinct !DILexicalBlock(scope: !13492, file: !13408, line: 160, column: 9)
!13492 = distinct !DILexicalBlock(scope: !13445, file: !13408, line: 146, column: 6)
!13493 = !DILocation(line: 73, column: 21, scope: !13465, inlinedAt: !13489)
!13494 = !DILocation(line: 73, column: 26, scope: !13465, inlinedAt: !13489)
!13495 = !DILocation(line: 73, column: 9, scope: !13465, inlinedAt: !13489)
!13496 = !DILocation(line: 163, column: 7, scope: !13491)
!13497 = !DILocalVariable(name: "key", arg: 1, scope: !13498, file: !5937, line: 84, type: !32)
!13498 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5937, file: !5937, line: 84, type: !5948, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13499)
!13499 = !{!13497}
!13500 = !DILocation(line: 0, scope: !13498, inlinedAt: !13501)
!13501 = distinct !DILocation(line: 171, column: 4, scope: !13502)
!13502 = distinct !DILexicalBlock(scope: !13490, file: !13408, line: 163, column: 58)
!13503 = !DILocation(line: 95, column: 2, scope: !13498, inlinedAt: !13501)
!13504 = !{i64 2229363}
!13505 = !DILocation(line: 172, column: 4, scope: !13502)
!13506 = !DILocation(line: 163, column: 21, scope: !13490)
!13507 = !DILocation(line: 178, column: 15, scope: !13508)
!13508 = distinct !DILexicalBlock(scope: !13509, file: !13408, line: 178, column: 8)
!13509 = distinct !DILexicalBlock(scope: !13490, file: !13408, line: 174, column: 10)
!13510 = !DILocation(line: 0, scope: !13498, inlinedAt: !13511)
!13511 = distinct !DILocation(line: 179, column: 5, scope: !13512)
!13512 = distinct !DILexicalBlock(scope: !13508, file: !13408, line: 178, column: 38)
!13513 = !DILocation(line: 0, scope: !13498, inlinedAt: !13514)
!13514 = distinct !DILocation(line: 186, column: 2, scope: !13445)
!13515 = !DILocation(line: 178, column: 8, scope: !13509)
!13516 = !DILocation(line: 189, column: 3, scope: !13517)
!13517 = distinct !DILexicalBlock(scope: !13518, file: !13408, line: 188, column: 41)
!13518 = distinct !DILexicalBlock(scope: !13445, file: !13408, line: 188, column: 6)
!13519 = !DILocation(line: 191, column: 1, scope: !13445)
!13520 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !13521, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !2166)
!13521 = !DISubroutineType(types: !13522)
!13522 = !{!13523}
!13523 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !13266)
!13524 = !DILocation(line: 535, column: 9, scope: !13520)
!13525 = !DILocation(line: 535, column: 2, scope: !13520)
!13526 = distinct !DISubprogram(name: "reason_to_str", scope: !13408, file: !13408, line: 62, type: !13527, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13529)
!13527 = !DISubroutineType(types: !13528)
!13528 = !{!118, !32}
!13529 = !{!13530}
!13530 = !DILocalVariable(name: "reason", arg: 1, scope: !13526, file: !13408, line: 62, type: !32)
!13531 = !DILocation(line: 0, scope: !13526)
!13532 = !DILocation(line: 64, column: 2, scope: !13526)
!13533 = !DILocation(line: 0, scope: !13534)
!13534 = distinct !DILexicalBlock(scope: !13526, file: !13408, line: 64, column: 18)
!13535 = !DILocation(line: 78, column: 1, scope: !13526)
!13536 = distinct !DISubprogram(name: "thread_name_get", scope: !13408, file: !13408, line: 51, type: !13537, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13539)
!13537 = !DISubroutineType(types: !13538)
!13538 = !{!118, !13266}
!13539 = !{!13540, !13541}
!13540 = !DILocalVariable(name: "thread", arg: 1, scope: !13536, file: !13408, line: 51, type: !13266)
!13541 = !DILocalVariable(name: "thread_name", scope: !13536, file: !13408, line: 53, type: !118)
!13542 = !DILocation(line: 0, scope: !13536)
!13543 = !DILocation(line: 53, column: 36, scope: !13536)
!13544 = !DILocation(line: 53, column: 28, scope: !13536)
!13545 = !DILocation(line: 53, column: 47, scope: !13536)
!13546 = !DILocation(line: 55, column: 19, scope: !13547)
!13547 = distinct !DILexicalBlock(scope: !13536, file: !13408, line: 55, column: 6)
!13548 = !DILocation(line: 55, column: 28, scope: !13547)
!13549 = !DILocation(line: 55, column: 32, scope: !13547)
!13550 = !DILocation(line: 55, column: 47, scope: !13547)
!13551 = !DILocation(line: 55, column: 6, scope: !13536)
!13552 = !DILocation(line: 57, column: 2, scope: !13553)
!13553 = distinct !DILexicalBlock(scope: !13547, file: !13408, line: 55, column: 57)
!13554 = !DILocation(line: 59, column: 2, scope: !13536)
!13555 = distinct !DISubprogram(name: "k_thread_abort", scope: !4420, file: !4420, line: 188, type: !13556, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13558)
!13556 = !DISubroutineType(types: !13557)
!13557 = !{null, !13523}
!13558 = !{!13559}
!13559 = !DILocalVariable(name: "thread", arg: 1, scope: !13555, file: !4420, line: 188, type: !13523)
!13560 = !DILocation(line: 0, scope: !13555)
!13561 = !DILocation(line: 197, column: 2, scope: !13562)
!13562 = distinct !DILexicalBlock(scope: !13555, file: !4420, line: 197, column: 2)
!13563 = !{i64 2154850901}
!13564 = !DILocation(line: 198, column: 2, scope: !13555)
!13565 = !DILocation(line: 199, column: 1, scope: !13555)
!13566 = distinct !DISubprogram(name: "z_current_get", scope: !4420, file: !4420, line: 173, type: !13521, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !2166)
!13567 = !DILocation(line: 180, column: 2, scope: !13568)
!13568 = distinct !DILexicalBlock(scope: !13566, file: !4420, line: 180, column: 2)
!13569 = !{i64 2154850833}
!13570 = !DILocation(line: 181, column: 9, scope: !13566)
!13571 = !DILocation(line: 181, column: 2, scope: !13566)
!13572 = distinct !DISubprogram(name: "z_early_memset", scope: !1965, file: !1965, line: 108, type: !13573, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13575)
!13573 = !DISubroutineType(types: !13574)
!13574 = !{null, !106, !107, !185}
!13575 = !{!13576, !13577, !13578}
!13576 = !DILocalVariable(name: "dst", arg: 1, scope: !13572, file: !1965, line: 108, type: !106)
!13577 = !DILocalVariable(name: "c", arg: 2, scope: !13572, file: !1965, line: 108, type: !107)
!13578 = !DILocalVariable(name: "n", arg: 3, scope: !13572, file: !1965, line: 108, type: !185)
!13579 = !DILocation(line: 0, scope: !13572)
!13580 = !DILocation(line: 110, column: 9, scope: !13572)
!13581 = !DILocation(line: 111, column: 1, scope: !13572)
!13582 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1965, file: !1965, line: 121, type: !13583, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13585)
!13583 = !DISubroutineType(types: !13584)
!13584 = !{null, !106, !13, !185}
!13585 = !{!13586, !13587, !13588}
!13586 = !DILocalVariable(name: "dst", arg: 1, scope: !13582, file: !1965, line: 121, type: !106)
!13587 = !DILocalVariable(name: "src", arg: 2, scope: !13582, file: !1965, line: 121, type: !13)
!13588 = !DILocalVariable(name: "n", arg: 3, scope: !13582, file: !1965, line: 121, type: !185)
!13589 = !DILocation(line: 0, scope: !13582)
!13590 = !DILocation(line: 123, column: 9, scope: !13582)
!13591 = !DILocation(line: 124, column: 1, scope: !13582)
!13592 = distinct !DISubprogram(name: "z_bss_zero", scope: !1965, file: !1965, line: 132, type: !3089, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !2166)
!13593 = !DILocation(line: 143, column: 2, scope: !13592)
!13594 = !DILocation(line: 145, column: 2, scope: !13592)
!13595 = !DILocation(line: 168, column: 1, scope: !13592)
!13596 = distinct !DISubprogram(name: "z_init_cpu", scope: !1965, file: !1965, line: 372, type: !9170, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13597)
!13597 = !{!13598}
!13598 = !DILocalVariable(name: "id", arg: 1, scope: !13596, file: !1965, line: 372, type: !107)
!13599 = !DILocation(line: 0, scope: !13596)
!13600 = !DILocation(line: 374, column: 2, scope: !13596)
!13601 = !DILocation(line: 375, column: 34, scope: !13596)
!13602 = !DILocation(line: 375, column: 19, scope: !13596)
!13603 = !DILocation(line: 375, column: 31, scope: !13596)
!13604 = !DILocation(line: 376, column: 24, scope: !13596)
!13605 = !DILocation(line: 376, column: 19, scope: !13596)
!13606 = !DILocation(line: 376, column: 22, scope: !13596)
!13607 = !DILocation(line: 378, column: 26, scope: !13596)
!13608 = !DILocation(line: 378, column: 4, scope: !13596)
!13609 = !DILocation(line: 378, column: 50, scope: !13596)
!13610 = !DILocation(line: 377, column: 19, scope: !13596)
!13611 = !DILocation(line: 377, column: 29, scope: !13596)
!13612 = !DILocation(line: 384, column: 1, scope: !13596)
!13613 = distinct !DISubprogram(name: "init_idle_thread", scope: !1965, file: !1965, line: 343, type: !9170, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13614)
!13614 = !{!13615, !13616, !13617, !13620}
!13615 = !DILocalVariable(name: "i", arg: 1, scope: !13613, file: !1965, line: 343, type: !107)
!13616 = !DILocalVariable(name: "thread", scope: !13613, file: !1965, line: 345, type: !2057)
!13617 = !DILocalVariable(name: "stack", scope: !13613, file: !1965, line: 346, type: !13618)
!13618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13619, size: 32)
!13619 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !2175)
!13620 = !DILocalVariable(name: "tname", scope: !13613, file: !1965, line: 354, type: !193)
!13621 = !DILocation(line: 0, scope: !13613)
!13622 = !DILocation(line: 345, column: 29, scope: !13613)
!13623 = !DILocation(line: 346, column: 28, scope: !13613)
!13624 = !DILocation(line: 362, column: 37, scope: !13613)
!13625 = !DILocation(line: 362, column: 36, scope: !13613)
!13626 = !DILocation(line: 361, column: 2, scope: !13613)
!13627 = !DILocation(line: 365, column: 2, scope: !13613)
!13628 = !DILocation(line: 370, column: 1, scope: !13613)
!13629 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !577, file: !577, line: 331, type: !13630, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13632)
!13630 = !DISubroutineType(types: !13631)
!13631 = !{!193, !13618}
!13632 = !{!13633}
!13633 = !DILocalVariable(name: "sym", arg: 1, scope: !13629, file: !577, line: 331, type: !13618)
!13634 = !DILocation(line: 0, scope: !13629)
!13635 = !DILocation(line: 333, column: 21, scope: !13629)
!13636 = !DILocation(line: 333, column: 2, scope: !13629)
!13637 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13638, file: !13638, line: 155, type: !13639, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13641)
!13638 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13639 = !DISubroutineType(types: !13640)
!13640 = !{null, !2057}
!13641 = !{!13642}
!13642 = !DILocalVariable(name: "thread", arg: 1, scope: !13637, file: !13638, line: 155, type: !2057)
!13643 = !DILocation(line: 0, scope: !13637)
!13644 = !DILocation(line: 157, column: 15, scope: !13637)
!13645 = !DILocation(line: 157, column: 28, scope: !13637)
!13646 = !DILocation(line: 158, column: 1, scope: !13637)
!13647 = distinct !DISubprogram(name: "z_cstart", scope: !1965, file: !1965, line: 501, type: !3089, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13648)
!13648 = !{!13649}
!13649 = !DILocalVariable(name: "dummy_thread", scope: !13647, file: !1965, line: 518, type: !2058)
!13650 = !DILocation(line: 507, column: 2, scope: !13647)
!13651 = !DILocation(line: 43, column: 14, scope: !13652, inlinedAt: !13656)
!13652 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13653, file: !13653, line: 40, type: !3089, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13654)
!13653 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13654 = !{!13655}
!13655 = !DILocalVariable(name: "msp", scope: !13652, file: !13653, line: 42, type: !152)
!13656 = distinct !DILocation(line: 44, column: 2, scope: !13657, inlinedAt: !13659)
!13657 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13658, file: !13658, line: 42, type: !3089, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !2166)
!13658 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13659 = distinct !DILocation(line: 510, column: 2, scope: !13647)
!13660 = !DILocation(line: 43, column: 3, scope: !13652, inlinedAt: !13656)
!13661 = !DILocation(line: 43, column: 60, scope: !13652, inlinedAt: !13656)
!13662 = !DILocation(line: 0, scope: !13652, inlinedAt: !13656)
!13663 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13664, file: !6256, line: 1153, type: !152)
!13664 = distinct !DISubprogram(name: "__set_MSP", scope: !6256, file: !6256, line: 1153, type: !6353, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13665)
!13665 = !{!13663}
!13666 = !DILocation(line: 0, scope: !13664, inlinedAt: !13667)
!13667 = distinct !DILocation(line: 46, column: 2, scope: !13652, inlinedAt: !13656)
!13668 = !DILocation(line: 1155, column: 3, scope: !13664, inlinedAt: !13667)
!13669 = !{i64 3565664}
!13670 = !DILocation(line: 62, column: 11, scope: !13652, inlinedAt: !13656)
!13671 = !DILocation(line: 102, column: 2, scope: !13672, inlinedAt: !13673)
!13672 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7308, file: !7308, line: 97, type: !3089, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !2166)
!13673 = distinct !DILocation(line: 45, column: 2, scope: !13657, inlinedAt: !13659)
!13674 = !DILocation(line: 108, column: 2, scope: !13672, inlinedAt: !13673)
!13675 = !DILocation(line: 112, column: 2, scope: !13672, inlinedAt: !13673)
!13676 = !DILocation(line: 113, column: 2, scope: !13672, inlinedAt: !13673)
!13677 = !DILocation(line: 114, column: 2, scope: !13672, inlinedAt: !13673)
!13678 = !DILocation(line: 116, column: 2, scope: !13672, inlinedAt: !13673)
!13679 = !DILocation(line: 123, column: 13, scope: !13672, inlinedAt: !13673)
!13680 = !DILocation(line: 46, column: 2, scope: !13657, inlinedAt: !13659)
!13681 = !DILocation(line: 47, column: 2, scope: !13657, inlinedAt: !13659)
!13682 = !DILocation(line: 174, column: 12, scope: !13683, inlinedAt: !13684)
!13683 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7308, file: !7308, line: 169, type: !3089, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !2166)
!13684 = distinct !DILocation(line: 48, column: 2, scope: !13657, inlinedAt: !13659)
!13685 = !DILocation(line: 179, column: 12, scope: !13683, inlinedAt: !13684)
!13686 = !DILocation(line: 50, column: 2, scope: !13657, inlinedAt: !13659)
!13687 = !DILocation(line: 57, column: 2, scope: !13657, inlinedAt: !13659)
!13688 = !DILocation(line: 518, column: 2, scope: !13647)
!13689 = !DILocation(line: 518, column: 18, scope: !13647)
!13690 = !DILocation(line: 520, column: 2, scope: !13647)
!13691 = !DILocation(line: 523, column: 2, scope: !13647)
!13692 = !DILocation(line: 526, column: 2, scope: !13647)
!13693 = !DILocation(line: 527, column: 2, scope: !13647)
!13694 = !DILocation(line: 543, column: 24, scope: !13647)
!13695 = !DILocation(line: 543, column: 2, scope: !13647)
!13696 = !DILocation(line: 0, scope: !2197)
!13697 = !DILocation(line: 246, column: 15, scope: !2215)
!13698 = !DILocation(line: 246, column: 36, scope: !2214)
!13699 = !DILocation(line: 246, column: 2, scope: !2215)
!13700 = !DILocation(line: 247, column: 37, scope: !2213)
!13701 = !DILocation(line: 0, scope: !2213)
!13702 = !DILocation(line: 248, column: 19, scope: !2213)
!13703 = !DILocation(line: 248, column: 12, scope: !2213)
!13704 = !DILocation(line: 250, column: 11, scope: !13705)
!13705 = distinct !DILexicalBlock(scope: !2213, file: !1965, line: 250, column: 7)
!13706 = !DILocation(line: 250, column: 7, scope: !2213)
!13707 = !DILocation(line: 254, column: 11, scope: !13708)
!13708 = distinct !DILexicalBlock(scope: !13709, file: !1965, line: 254, column: 8)
!13709 = distinct !DILexicalBlock(scope: !13705, file: !1965, line: 250, column: 20)
!13710 = !DILocation(line: 254, column: 8, scope: !13709)
!13711 = !DILocation(line: 255, column: 9, scope: !13712)
!13712 = distinct !DILexicalBlock(scope: !13708, file: !1965, line: 254, column: 17)
!13713 = !DILocation(line: 258, column: 9, scope: !13712)
!13714 = !DILocation(line: 261, column: 28, scope: !13712)
!13715 = !DILocation(line: 261, column: 10, scope: !13712)
!13716 = !DILocation(line: 261, column: 17, scope: !13712)
!13717 = !DILocation(line: 261, column: 26, scope: !13712)
!13718 = !DILocation(line: 262, column: 4, scope: !13712)
!13719 = !DILocation(line: 263, column: 9, scope: !13709)
!13720 = !DILocation(line: 263, column: 16, scope: !13709)
!13721 = !DILocation(line: 263, column: 28, scope: !13709)
!13722 = !DILocation(line: 264, column: 3, scope: !13709)
!13723 = !DILocation(line: 246, column: 60, scope: !2214)
!13724 = distinct !{!13724, !13699, !13725}
!13725 = !DILocation(line: 265, column: 2, scope: !2215)
!13726 = !DILocation(line: 266, column: 1, scope: !2197)
!13727 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6296, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13728)
!13728 = !{!13729, !13730}
!13729 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13727, file: !463, line: 1814, type: !922)
!13730 = !DILocalVariable(name: "priority", arg: 2, scope: !13727, file: !463, line: 1814, type: !152)
!13731 = !DILocation(line: 0, scope: !13727)
!13732 = !DILocation(line: 1822, column: 48, scope: !13733)
!13733 = distinct !DILexicalBlock(scope: !13734, file: !463, line: 1821, column: 3)
!13734 = distinct !DILexicalBlock(scope: !13727, file: !463, line: 1816, column: 7)
!13735 = !DILocation(line: 1822, column: 32, scope: !13733)
!13736 = !DILocation(line: 1822, column: 40, scope: !13733)
!13737 = !DILocation(line: 1822, column: 5, scope: !13733)
!13738 = !DILocation(line: 1822, column: 46, scope: !13733)
!13739 = !DILocation(line: 1824, column: 1, scope: !13727)
!13740 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13658, file: !13658, line: 32, type: !3089, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2166)
!13741 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13742, file: !13742, line: 215, type: !13639, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13743)
!13742 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13743 = !{!13744}
!13744 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13741, file: !13742, line: 215, type: !2057)
!13745 = !DILocation(line: 0, scope: !13741)
!13746 = !DILocation(line: 217, column: 21, scope: !13741)
!13747 = !DILocation(line: 217, column: 34, scope: !13741)
!13748 = !DILocation(line: 221, column: 21, scope: !13741)
!13749 = !DILocation(line: 221, column: 34, scope: !13741)
!13750 = !DILocation(line: 223, column: 27, scope: !13741)
!13751 = !DILocation(line: 223, column: 33, scope: !13741)
!13752 = !DILocation(line: 224, column: 27, scope: !13741)
!13753 = !DILocation(line: 224, column: 32, scope: !13741)
!13754 = !DILocation(line: 232, column: 16, scope: !13741)
!13755 = !DILocation(line: 232, column: 30, scope: !13741)
!13756 = !DILocation(line: 239, column: 24, scope: !13741)
!13757 = !DILocation(line: 240, column: 1, scope: !13741)
!13758 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1965, file: !1965, line: 399, type: !13759, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13761)
!13759 = !DISubroutineType(types: !13760)
!13760 = !{!193}
!13761 = !{!13762}
!13762 = !DILocalVariable(name: "stack_ptr", scope: !13758, file: !1965, line: 401, type: !193)
!13763 = !DILocation(line: 404, column: 2, scope: !13758)
!13764 = !DILocation(line: 416, column: 24, scope: !13758)
!13765 = !DILocation(line: 418, column: 14, scope: !13758)
!13766 = !DILocation(line: 0, scope: !13758)
!13767 = !DILocation(line: 423, column: 2, scope: !13758)
!13768 = !DILocation(line: 424, column: 2, scope: !13758)
!13769 = !DILocation(line: 426, column: 2, scope: !13758)
!13770 = !DILocation(line: 428, column: 2, scope: !13758)
!13771 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1965, file: !1965, line: 432, type: !13772, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13774)
!13772 = !DISubroutineType(types: !13773)
!13773 = !{null, !193}
!13774 = !{!13775}
!13775 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13771, file: !1965, line: 432, type: !193)
!13776 = !DILocation(line: 0, scope: !13771)
!13777 = !DILocation(line: 435, column: 2, scope: !13771)
!13778 = !DILocation(line: 445, column: 2, scope: !13771)
!13779 = distinct !DISubprogram(name: "bg_thread_main", scope: !1965, file: !1965, line: 277, type: !562, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13780)
!13780 = !{!13781, !13782, !13783}
!13781 = !DILocalVariable(name: "unused1", arg: 1, scope: !13779, file: !1965, line: 277, type: !106)
!13782 = !DILocalVariable(name: "unused2", arg: 2, scope: !13779, file: !1965, line: 277, type: !106)
!13783 = !DILocalVariable(name: "unused3", arg: 3, scope: !13779, file: !1965, line: 277, type: !106)
!13784 = !DILocation(line: 0, scope: !13779)
!13785 = !DILocation(line: 291, column: 20, scope: !13779)
!13786 = !DILocation(line: 293, column: 2, scope: !13779)
!13787 = !DILocation(line: 297, column: 2, scope: !13779)
!13788 = !DILocation(line: 305, column: 2, scope: !13779)
!13789 = !DILocation(line: 307, column: 2, scope: !13779)
!13790 = !DILocation(line: 330, column: 8, scope: !13779)
!13791 = !DILocation(line: 333, column: 34, scope: !13779)
!13792 = !DILocation(line: 339, column: 1, scope: !13779)
!13793 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2226, file: !2226, line: 45, type: !13794, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13802)
!13794 = !DISubroutineType(types: !13795)
!13795 = !{null, !13796, !106}
!13796 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !406, line: 103, baseType: !13797)
!13797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13798, size: 32)
!13798 = !DISubroutineType(types: !13799)
!13799 = !{null, !13800, !106}
!13800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13801, size: 32)
!13801 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2231)
!13802 = !{!13803, !13804}
!13803 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13793, file: !2226, line: 45, type: !13796)
!13804 = !DILocalVariable(name: "user_data", arg: 2, scope: !13793, file: !2226, line: 45, type: !106)
!13805 = !DILocation(line: 0, scope: !13793)
!13806 = !DILocation(line: 71, column: 1, scope: !13793)
!13807 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2226, file: !2226, line: 73, type: !13794, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13808)
!13808 = !{!13809, !13810}
!13809 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13807, file: !2226, line: 73, type: !13796)
!13810 = !DILocalVariable(name: "user_data", arg: 2, scope: !13807, file: !2226, line: 73, type: !106)
!13811 = !DILocation(line: 0, scope: !13807)
!13812 = !DILocation(line: 95, column: 1, scope: !13807)
!13813 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2226, file: !2226, line: 97, type: !7309, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2166)
!13814 = !DILocation(line: 1031, column: 3, scope: !13815, inlinedAt: !13818)
!13815 = distinct !DISubprogram(name: "__get_IPSR", scope: !6256, file: !6256, line: 1027, type: !6343, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13816)
!13816 = !{!13817}
!13817 = !DILocalVariable(name: "result", scope: !13815, file: !6256, line: 1029, type: !152)
!13818 = distinct !DILocation(line: 48, column: 10, scope: !13819, inlinedAt: !13820)
!13819 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7308, file: !7308, line: 46, type: !7309, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2166)
!13820 = distinct !DILocation(line: 99, column: 9, scope: !13813)
!13821 = !{i64 3571315}
!13822 = !DILocation(line: 0, scope: !13815, inlinedAt: !13818)
!13823 = !DILocation(line: 48, column: 9, scope: !13819, inlinedAt: !13820)
!13824 = !DILocation(line: 99, column: 2, scope: !13813)
!13825 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2226, file: !2226, line: 106, type: !3089, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2166)
!13826 = !DILocation(line: 108, column: 2, scope: !13825)
!13827 = !DILocation(line: 108, column: 17, scope: !13825)
!13828 = !DILocation(line: 108, column: 30, scope: !13825)
!13829 = !DILocation(line: 109, column: 1, scope: !13825)
!13830 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2226, file: !2226, line: 116, type: !3089, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2166)
!13831 = !DILocation(line: 118, column: 2, scope: !13830)
!13832 = !DILocation(line: 118, column: 17, scope: !13830)
!13833 = !DILocation(line: 118, column: 30, scope: !13830)
!13834 = !DILocation(line: 119, column: 1, scope: !13830)
!13835 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2226, file: !2226, line: 126, type: !7309, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2166)
!13836 = !DILocation(line: 128, column: 10, scope: !13835)
!13837 = !DILocation(line: 128, column: 25, scope: !13835)
!13838 = !DILocation(line: 128, column: 38, scope: !13835)
!13839 = !DILocation(line: 128, column: 53, scope: !13835)
!13840 = !DILocation(line: 128, column: 2, scope: !13835)
!13841 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2226, file: !2226, line: 187, type: !13842, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13844)
!13842 = !DISubroutineType(types: !13843)
!13843 = !{!107, !2230, !118}
!13844 = !{!13845, !13846}
!13845 = !DILocalVariable(name: "thread", arg: 1, scope: !13841, file: !2226, line: 187, type: !2230)
!13846 = !DILocalVariable(name: "value", arg: 2, scope: !13841, file: !2226, line: 187, type: !118)
!13847 = !DILocation(line: 0, scope: !13841)
!13848 = !DILocation(line: 190, column: 13, scope: !13849)
!13849 = distinct !DILexicalBlock(scope: !13841, file: !2226, line: 190, column: 6)
!13850 = !DILocation(line: 190, column: 6, scope: !13841)
!13851 = !DILocation(line: 194, column: 10, scope: !13841)
!13852 = !DILocation(line: 194, column: 2, scope: !13841)
!13853 = !DILocation(line: 195, column: 2, scope: !13841)
!13854 = !DILocation(line: 195, column: 47, scope: !13841)
!13855 = !DILocation(line: 199, column: 2, scope: !13841)
!13856 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2226, file: !2226, line: 238, type: !13857, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13859)
!13857 = !DISubroutineType(types: !13858)
!13858 = !{!118, !2230}
!13859 = !{!13860}
!13860 = !DILocalVariable(name: "thread", arg: 1, scope: !13856, file: !2226, line: 238, type: !2230)
!13861 = !DILocation(line: 0, scope: !13856)
!13862 = !DILocation(line: 241, column: 23, scope: !13856)
!13863 = !DILocation(line: 241, column: 2, scope: !13856)
!13864 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2226, file: !2226, line: 248, type: !13865, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13867)
!13865 = !DISubroutineType(types: !13866)
!13866 = !{!107, !2229, !193, !185}
!13867 = !{!13868, !13869, !13870}
!13868 = !DILocalVariable(name: "thread", arg: 1, scope: !13864, file: !2226, line: 248, type: !2229)
!13869 = !DILocalVariable(name: "buf", arg: 2, scope: !13864, file: !2226, line: 248, type: !193)
!13870 = !DILocalVariable(name: "size", arg: 3, scope: !13864, file: !2226, line: 248, type: !185)
!13871 = !DILocation(line: 0, scope: !13864)
!13872 = !DILocation(line: 251, column: 15, scope: !13864)
!13873 = !DILocation(line: 251, column: 2, scope: !13864)
!13874 = !DILocation(line: 252, column: 2, scope: !13864)
!13875 = !DILocation(line: 0, scope: !2225)
!13876 = !DILocation(line: 281, column: 11, scope: !13877)
!13877 = distinct !DILexicalBlock(scope: !2225, file: !2226, line: 281, column: 6)
!13878 = !DILocation(line: 281, column: 20, scope: !13877)
!13879 = !DILocation(line: 275, column: 45, scope: !2225)
!13880 = !DILocation(line: 285, column: 10, scope: !2225)
!13881 = !DILocation(line: 0, scope: !2349)
!13882 = !DILocation(line: 293, column: 39, scope: !13883)
!13883 = distinct !DILexicalBlock(scope: !2349, file: !2226, line: 293, column: 2)
!13884 = !DILocation(line: 293, column: 2, scope: !2349)
!13885 = !DILocation(line: 273, column: 14, scope: !2225)
!13886 = !DILocation(line: 309, column: 2, scope: !2225)
!13887 = !DILocation(line: 309, column: 11, scope: !2225)
!13888 = !DILocation(line: 311, column: 2, scope: !2225)
!13889 = !DILocation(line: 293, column: 26, scope: !13883)
!13890 = !DILocation(line: 294, column: 9, scope: !13891)
!13891 = distinct !DILexicalBlock(scope: !13883, file: !2226, line: 293, column: 54)
!13892 = !DILocation(line: 295, column: 21, scope: !13893)
!13893 = distinct !DILexicalBlock(scope: !13891, file: !2226, line: 295, column: 7)
!13894 = !DILocation(line: 295, column: 28, scope: !13893)
!13895 = !DILocation(line: 295, column: 7, scope: !13891)
!13896 = !DILocation(line: 299, column: 25, scope: !13891)
!13897 = !DILocation(line: 299, column: 41, scope: !13891)
!13898 = !DILocation(line: 300, column: 7, scope: !13891)
!13899 = !DILocation(line: 300, column: 26, scope: !13891)
!13900 = !DILocation(line: 299, column: 10, scope: !13891)
!13901 = !DILocation(line: 299, column: 7, scope: !13891)
!13902 = !DILocation(line: 302, column: 16, scope: !13891)
!13903 = !DILocation(line: 304, column: 20, scope: !13904)
!13904 = distinct !DILexicalBlock(scope: !13891, file: !2226, line: 304, column: 7)
!13905 = !DILocation(line: 304, column: 7, scope: !13891)
!13906 = !DILocation(line: 305, column: 26, scope: !13907)
!13907 = distinct !DILexicalBlock(scope: !13904, file: !2226, line: 304, column: 26)
!13908 = !DILocation(line: 305, column: 42, scope: !13907)
!13909 = !DILocation(line: 305, column: 11, scope: !13907)
!13910 = !DILocation(line: 305, column: 8, scope: !13907)
!13911 = !DILocation(line: 306, column: 3, scope: !13907)
!13912 = !DILocation(line: 293, column: 50, scope: !13883)
!13913 = !DILocation(line: 312, column: 1, scope: !2225)
!13914 = distinct !DISubprogram(name: "copy_bytes", scope: !2226, file: !2226, line: 261, type: !13915, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13917)
!13915 = !DISubroutineType(types: !13916)
!13916 = !{!185, !193, !185, !118, !185}
!13917 = !{!13918, !13919, !13920, !13921, !13922}
!13918 = !DILocalVariable(name: "dest", arg: 1, scope: !13914, file: !2226, line: 261, type: !193)
!13919 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13914, file: !2226, line: 261, type: !185)
!13920 = !DILocalVariable(name: "src", arg: 3, scope: !13914, file: !2226, line: 261, type: !118)
!13921 = !DILocalVariable(name: "src_size", arg: 4, scope: !13914, file: !2226, line: 261, type: !185)
!13922 = !DILocalVariable(name: "bytes_to_copy", scope: !13914, file: !2226, line: 263, type: !185)
!13923 = !DILocation(line: 0, scope: !13914)
!13924 = !DILocation(line: 265, column: 18, scope: !13914)
!13925 = !DILocation(line: 266, column: 2, scope: !13914)
!13926 = !DILocation(line: 268, column: 2, scope: !13914)
!13927 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2226, file: !2226, line: 383, type: !13928, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13930)
!13928 = !DISubroutineType(types: !13929)
!13929 = !{null, !2230}
!13930 = !{!13931}
!13931 = !DILocalVariable(name: "thread", arg: 1, scope: !13927, file: !2226, line: 383, type: !2230)
!13932 = !DILocation(line: 0, scope: !13927)
!13933 = !DILocation(line: 387, column: 2, scope: !13927)
!13934 = !DILocation(line: 388, column: 1, scope: !13927)
!13935 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2226, file: !2226, line: 528, type: !13936, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13943)
!13936 = !DISubroutineType(types: !13937)
!13937 = !{!193, !2230, !13938, !185, !559, !106, !106, !106, !107, !152, !118}
!13938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13939, size: 32)
!13939 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !13940)
!13940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !13941)
!13941 = !{!13942}
!13942 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13940, file: !577, line: 48, baseType: !120, size: 8)
!13943 = !{!13944, !13945, !13946, !13947, !13948, !13949, !13950, !13951, !13952, !13953, !13954}
!13944 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13935, file: !2226, line: 528, type: !2230)
!13945 = !DILocalVariable(name: "stack", arg: 2, scope: !13935, file: !2226, line: 529, type: !13938)
!13946 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13935, file: !2226, line: 529, type: !185)
!13947 = !DILocalVariable(name: "entry", arg: 4, scope: !13935, file: !2226, line: 530, type: !559)
!13948 = !DILocalVariable(name: "p1", arg: 5, scope: !13935, file: !2226, line: 531, type: !106)
!13949 = !DILocalVariable(name: "p2", arg: 6, scope: !13935, file: !2226, line: 531, type: !106)
!13950 = !DILocalVariable(name: "p3", arg: 7, scope: !13935, file: !2226, line: 531, type: !106)
!13951 = !DILocalVariable(name: "prio", arg: 8, scope: !13935, file: !2226, line: 532, type: !107)
!13952 = !DILocalVariable(name: "options", arg: 9, scope: !13935, file: !2226, line: 532, type: !152)
!13953 = !DILocalVariable(name: "name", arg: 10, scope: !13935, file: !2226, line: 532, type: !118)
!13954 = !DILocalVariable(name: "stack_ptr", scope: !13935, file: !2226, line: 534, type: !193)
!13955 = !DILocation(line: 0, scope: !13935)
!13956 = !DILocation(line: 536, column: 2, scope: !13957)
!13957 = distinct !DILexicalBlock(scope: !13958, file: !2226, line: 536, column: 2)
!13958 = distinct !DILexicalBlock(scope: !13959, file: !2226, line: 536, column: 2)
!13959 = distinct !DILexicalBlock(scope: !13935, file: !2226, line: 536, column: 2)
!13960 = !DILocation(line: 536, column: 2, scope: !13961)
!13961 = distinct !DILexicalBlock(scope: !13957, file: !2226, line: 536, column: 2)
!13962 = !DILocation(line: 550, column: 28, scope: !13935)
!13963 = !DILocation(line: 550, column: 2, scope: !13935)
!13964 = !DILocation(line: 553, column: 34, scope: !13935)
!13965 = !DILocation(line: 553, column: 2, scope: !13935)
!13966 = !DILocation(line: 554, column: 14, scope: !13935)
!13967 = !DILocation(line: 564, column: 2, scope: !13935)
!13968 = !DILocation(line: 567, column: 14, scope: !13935)
!13969 = !DILocation(line: 567, column: 24, scope: !13935)
!13970 = !DILocation(line: 594, column: 11, scope: !13971)
!13971 = distinct !DILexicalBlock(scope: !13935, file: !2226, line: 594, column: 6)
!13972 = !DILocation(line: 0, scope: !13971)
!13973 = !DILocation(line: 594, column: 6, scope: !13935)
!13974 = !DILocation(line: 595, column: 3, scope: !13975)
!13975 = distinct !DILexicalBlock(scope: !13971, file: !2226, line: 594, column: 20)
!13976 = !DILocation(line: 598, column: 3, scope: !13975)
!13977 = !DILocation(line: 598, column: 52, scope: !13975)
!13978 = !DILocation(line: 599, column: 2, scope: !13975)
!13979 = !DILocation(line: 600, column: 23, scope: !13980)
!13980 = distinct !DILexicalBlock(scope: !13971, file: !2226, line: 599, column: 9)
!13981 = !DILocation(line: 612, column: 7, scope: !13982)
!13982 = distinct !DILexicalBlock(scope: !13935, file: !2226, line: 612, column: 6)
!13983 = !DILocation(line: 612, column: 6, scope: !13935)
!13984 = !DILocation(line: 627, column: 40, scope: !13935)
!13985 = !DILocation(line: 637, column: 2, scope: !13935)
!13986 = !DILocation(line: 613, column: 15, scope: !13987)
!13987 = distinct !DILexicalBlock(scope: !13982, file: !2226, line: 612, column: 17)
!13988 = !DILocation(line: 613, column: 29, scope: !13987)
!13989 = !DILocation(line: 638, column: 1, scope: !13935)
!13990 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !13638, file: !13638, line: 78, type: !13991, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13993)
!13991 = !DISubroutineType(types: !13992)
!13992 = !{!145, !106}
!13993 = !{!13994}
!13994 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13990, file: !13638, line: 78, type: !106)
!13995 = !DILocation(line: 0, scope: !13990)
!13996 = !DILocation(line: 80, column: 21, scope: !13990)
!13997 = !DILocation(line: 80, column: 2, scope: !13990)
!13998 = distinct !DISubprogram(name: "z_waitq_init", scope: !13999, file: !13999, line: 47, type: !14000, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14002)
!13999 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14000 = !DISubroutineType(types: !14001)
!14001 = !{null, !2261}
!14002 = !{!14003}
!14003 = !DILocalVariable(name: "w", arg: 1, scope: !13998, file: !13999, line: 47, type: !2261)
!14004 = !DILocation(line: 0, scope: !13998)
!14005 = !DILocation(line: 49, column: 21, scope: !13998)
!14006 = !DILocation(line: 49, column: 2, scope: !13998)
!14007 = !DILocation(line: 50, column: 1, scope: !13998)
!14008 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2226, file: !2226, line: 791, type: !14009, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14012)
!14009 = !DISubroutineType(types: !14010)
!14010 = !{null, !14011, !107, !152, !32}
!14011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 32)
!14012 = !{!14013, !14014, !14015, !14016}
!14013 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14008, file: !2226, line: 791, type: !14011)
!14014 = !DILocalVariable(name: "priority", arg: 2, scope: !14008, file: !2226, line: 791, type: !107)
!14015 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14008, file: !2226, line: 792, type: !152)
!14016 = !DILocalVariable(name: "options", arg: 4, scope: !14008, file: !2226, line: 792, type: !32)
!14017 = !DILocation(line: 0, scope: !14008)
!14018 = !DILocation(line: 795, column: 15, scope: !14008)
!14019 = !DILocation(line: 795, column: 25, scope: !14008)
!14020 = !DILocation(line: 796, column: 30, scope: !14008)
!14021 = !DILocation(line: 796, column: 15, scope: !14008)
!14022 = !DILocation(line: 796, column: 28, scope: !14008)
!14023 = !DILocation(line: 797, column: 30, scope: !14008)
!14024 = !DILocation(line: 797, column: 15, scope: !14008)
!14025 = !DILocation(line: 797, column: 28, scope: !14008)
!14026 = !DILocation(line: 799, column: 22, scope: !14008)
!14027 = !DILocation(line: 799, column: 15, scope: !14008)
!14028 = !DILocation(line: 799, column: 20, scope: !14008)
!14029 = !DILocation(line: 801, column: 15, scope: !14008)
!14030 = !DILocation(line: 801, column: 28, scope: !14008)
!14031 = !DILocation(line: 814, column: 2, scope: !14008)
!14032 = !DILocation(line: 815, column: 1, scope: !14008)
!14033 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2226, file: !2226, line: 449, type: !14034, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14036)
!14034 = !DISubroutineType(types: !14035)
!14035 = !{!193, !2230, !13938, !185}
!14036 = !{!14037, !14038, !14039, !14040, !14041, !14042, !14043, !14044}
!14037 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14033, file: !2226, line: 449, type: !2230)
!14038 = !DILocalVariable(name: "stack", arg: 2, scope: !14033, file: !2226, line: 450, type: !13938)
!14039 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14033, file: !2226, line: 450, type: !185)
!14040 = !DILocalVariable(name: "stack_obj_size", scope: !14033, file: !2226, line: 452, type: !185)
!14041 = !DILocalVariable(name: "stack_buf_size", scope: !14033, file: !2226, line: 452, type: !185)
!14042 = !DILocalVariable(name: "stack_ptr", scope: !14033, file: !2226, line: 453, type: !193)
!14043 = !DILocalVariable(name: "stack_buf_start", scope: !14033, file: !2226, line: 453, type: !193)
!14044 = !DILocalVariable(name: "delta", scope: !14033, file: !2226, line: 454, type: !185)
!14045 = !DILocation(line: 0, scope: !14033)
!14046 = !DILocation(line: 465, column: 20, scope: !14047)
!14047 = distinct !DILexicalBlock(scope: !14033, file: !2226, line: 463, column: 2)
!14048 = !DILocation(line: 466, column: 21, scope: !14047)
!14049 = !DILocation(line: 473, column: 28, scope: !14033)
!14050 = !DILocation(line: 514, column: 33, scope: !14033)
!14051 = !DILocation(line: 514, column: 25, scope: !14033)
!14052 = !DILocation(line: 514, column: 31, scope: !14033)
!14053 = !DILocation(line: 515, column: 25, scope: !14033)
!14054 = !DILocation(line: 515, column: 30, scope: !14033)
!14055 = !DILocation(line: 516, column: 25, scope: !14033)
!14056 = !DILocation(line: 516, column: 31, scope: !14033)
!14057 = !DILocation(line: 520, column: 2, scope: !14033)
!14058 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !577, file: !577, line: 331, type: !14059, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14061)
!14059 = !DISubroutineType(types: !14060)
!14060 = !{!193, !13938}
!14061 = !{!14062}
!14062 = !DILocalVariable(name: "sym", arg: 1, scope: !14058, file: !577, line: 331, type: !13938)
!14063 = !DILocation(line: 0, scope: !14058)
!14064 = !DILocation(line: 333, column: 21, scope: !14058)
!14065 = !DILocation(line: 333, column: 2, scope: !14058)
!14066 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14067, file: !14067, line: 40, type: !14068, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14070)
!14067 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14068 = !DISubroutineType(types: !14069)
!14069 = !{null, !14011}
!14070 = !{!14071}
!14071 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14066, file: !14067, line: 40, type: !14011)
!14072 = !DILocation(line: 0, scope: !14066)
!14073 = !DILocation(line: 42, column: 31, scope: !14066)
!14074 = !DILocation(line: 42, column: 2, scope: !14066)
!14075 = !DILocation(line: 43, column: 1, scope: !14066)
!14076 = distinct !DISubprogram(name: "z_init_timeout", scope: !14067, file: !14067, line: 25, type: !2287, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14077)
!14077 = !{!14078}
!14078 = !DILocalVariable(name: "to", arg: 1, scope: !14076, file: !14067, line: 25, type: !2289)
!14079 = !DILocation(line: 0, scope: !14076)
!14080 = !DILocation(line: 27, column: 22, scope: !14076)
!14081 = !DILocation(line: 27, column: 2, scope: !14076)
!14082 = !DILocation(line: 28, column: 1, scope: !14076)
!14083 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !14084, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14086)
!14084 = !DISubroutineType(types: !14085)
!14085 = !{null, !2336}
!14086 = !{!14087}
!14087 = !DILocalVariable(name: "node", arg: 1, scope: !14083, file: !319, line: 211, type: !2336)
!14088 = !DILocation(line: 0, scope: !14083)
!14089 = !DILocation(line: 213, column: 8, scope: !14083)
!14090 = !DILocation(line: 213, column: 13, scope: !14083)
!14091 = !DILocation(line: 214, column: 8, scope: !14083)
!14092 = !DILocation(line: 214, column: 13, scope: !14083)
!14093 = !DILocation(line: 215, column: 1, scope: !14083)
!14094 = distinct !DISubprogram(name: "sys_dlist_init", scope: !319, file: !319, line: 197, type: !14095, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14098)
!14095 = !DISubroutineType(types: !14096)
!14096 = !{null, !14097}
!14097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 32)
!14098 = !{!14099}
!14099 = !DILocalVariable(name: "list", arg: 1, scope: !14094, file: !319, line: 197, type: !14097)
!14100 = !DILocation(line: 0, scope: !14094)
!14101 = !DILocation(line: 199, column: 8, scope: !14094)
!14102 = !DILocation(line: 199, column: 13, scope: !14094)
!14103 = !DILocation(line: 200, column: 8, scope: !14094)
!14104 = !DILocation(line: 200, column: 13, scope: !14094)
!14105 = !DILocation(line: 201, column: 1, scope: !14094)
!14106 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2226, file: !2226, line: 641, type: !14107, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14113)
!14107 = !DISubroutineType(types: !14108)
!14108 = !{!2229, !2230, !13938, !185, !559, !106, !106, !106, !107, !152, !14109}
!14109 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !14110)
!14110 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !14111)
!14111 = !{!14112}
!14112 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14110, file: !565, line: 66, baseType: !564, size: 64)
!14113 = !{!14114, !14115, !14116, !14117, !14118, !14119, !14120, !14121, !14122, !14123}
!14114 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14106, file: !2226, line: 641, type: !2230)
!14115 = !DILocalVariable(name: "stack", arg: 2, scope: !14106, file: !2226, line: 642, type: !13938)
!14116 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14106, file: !2226, line: 643, type: !185)
!14117 = !DILocalVariable(name: "entry", arg: 4, scope: !14106, file: !2226, line: 643, type: !559)
!14118 = !DILocalVariable(name: "p1", arg: 5, scope: !14106, file: !2226, line: 644, type: !106)
!14119 = !DILocalVariable(name: "p2", arg: 6, scope: !14106, file: !2226, line: 644, type: !106)
!14120 = !DILocalVariable(name: "p3", arg: 7, scope: !14106, file: !2226, line: 644, type: !106)
!14121 = !DILocalVariable(name: "prio", arg: 8, scope: !14106, file: !2226, line: 645, type: !107)
!14122 = !DILocalVariable(name: "options", arg: 9, scope: !14106, file: !2226, line: 645, type: !152)
!14123 = !DILocalVariable(name: "delay", arg: 10, scope: !14106, file: !2226, line: 645, type: !14109)
!14124 = !DILocation(line: 0, scope: !14106)
!14125 = !DILocation(line: 1031, column: 3, scope: !13815, inlinedAt: !14126)
!14126 = distinct !DILocation(line: 48, column: 10, scope: !13819, inlinedAt: !14127)
!14127 = distinct !DILocation(line: 647, column: 2, scope: !14128)
!14128 = distinct !DILexicalBlock(scope: !14129, file: !2226, line: 647, column: 2)
!14129 = distinct !DILexicalBlock(scope: !14106, file: !2226, line: 647, column: 2)
!14130 = !DILocation(line: 0, scope: !13815, inlinedAt: !14126)
!14131 = !DILocation(line: 48, column: 9, scope: !13819, inlinedAt: !14127)
!14132 = !DILocation(line: 647, column: 2, scope: !14129)
!14133 = !DILocation(line: 647, column: 2, scope: !14134)
!14134 = distinct !DILexicalBlock(scope: !14128, file: !2226, line: 647, column: 2)
!14135 = !DILocation(line: 649, column: 2, scope: !14106)
!14136 = !DILocation(line: 652, column: 7, scope: !14137)
!14137 = distinct !DILexicalBlock(scope: !14106, file: !2226, line: 652, column: 6)
!14138 = !DILocation(line: 652, column: 6, scope: !14106)
!14139 = !DILocation(line: 653, column: 3, scope: !14140)
!14140 = distinct !DILexicalBlock(scope: !14137, file: !2226, line: 652, column: 39)
!14141 = !DILocation(line: 654, column: 2, scope: !14140)
!14142 = !DILocation(line: 656, column: 2, scope: !14106)
!14143 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2226, file: !2226, line: 401, type: !14144, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14146)
!14144 = !DISubroutineType(types: !14145)
!14145 = !{null, !2230, !14109}
!14146 = !{!14147, !14148}
!14147 = !DILocalVariable(name: "thread", arg: 1, scope: !14143, file: !2226, line: 401, type: !2230)
!14148 = !DILocalVariable(name: "delay", arg: 2, scope: !14143, file: !2226, line: 401, type: !14109)
!14149 = !DILocation(line: 0, scope: !14143)
!14150 = !DILocation(line: 404, column: 6, scope: !14151)
!14151 = distinct !DILexicalBlock(scope: !14143, file: !2226, line: 404, column: 6)
!14152 = !DILocation(line: 404, column: 6, scope: !14143)
!14153 = !DILocation(line: 405, column: 3, scope: !14154)
!14154 = distinct !DILexicalBlock(scope: !14151, file: !2226, line: 404, column: 38)
!14155 = !DILocation(line: 406, column: 2, scope: !14154)
!14156 = !DILocation(line: 407, column: 3, scope: !14157)
!14157 = distinct !DILexicalBlock(scope: !14151, file: !2226, line: 406, column: 9)
!14158 = !DILocation(line: 413, column: 1, scope: !14143)
!14159 = distinct !DISubprogram(name: "k_thread_start", scope: !4420, file: !4420, line: 205, type: !14160, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14162)
!14160 = !DISubroutineType(types: !14161)
!14161 = !{null, !2229}
!14162 = !{!14163}
!14163 = !DILocalVariable(name: "thread", arg: 1, scope: !14159, file: !4420, line: 205, type: !2229)
!14164 = !DILocation(line: 0, scope: !14159)
!14165 = !DILocation(line: 214, column: 2, scope: !14166)
!14166 = distinct !DILexicalBlock(scope: !14159, file: !4420, line: 214, column: 2)
!14167 = !{i64 2154876125}
!14168 = !DILocation(line: 215, column: 2, scope: !14159)
!14169 = !DILocation(line: 216, column: 1, scope: !14159)
!14170 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14067, file: !14067, line: 47, type: !14144, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14171)
!14171 = !{!14172, !14173}
!14172 = !DILocalVariable(name: "thread", arg: 1, scope: !14170, file: !14067, line: 47, type: !2230)
!14173 = !DILocalVariable(name: "ticks", arg: 2, scope: !14170, file: !14067, line: 47, type: !14109)
!14174 = !DILocation(line: 0, scope: !14170)
!14175 = !DILocation(line: 49, column: 30, scope: !14170)
!14176 = !DILocation(line: 49, column: 2, scope: !14170)
!14177 = !DILocation(line: 50, column: 1, scope: !14170)
!14178 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2226, file: !2226, line: 748, type: !3089, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14179)
!14179 = !{!14180, !14198}
!14180 = !DILocalVariable(name: "thread_data", scope: !14181, file: !2226, line: 750, type: !14182)
!14181 = distinct !DILexicalBlock(scope: !14178, file: !2226, line: 750, column: 2)
!14182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14183, size: 32)
!14183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !406, line: 620, size: 384, elements: !14184)
!14184 = !{!14185, !14186, !14187, !14188, !14189, !14190, !14191, !14192, !14193, !14194, !14195, !14197}
!14185 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14183, file: !406, line: 621, baseType: !2230, size: 32)
!14186 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14183, file: !406, line: 622, baseType: !13938, size: 32, offset: 32)
!14187 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14183, file: !406, line: 623, baseType: !32, size: 32, offset: 64)
!14188 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14183, file: !406, line: 624, baseType: !559, size: 32, offset: 96)
!14189 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14183, file: !406, line: 625, baseType: !106, size: 32, offset: 128)
!14190 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14183, file: !406, line: 626, baseType: !106, size: 32, offset: 160)
!14191 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14183, file: !406, line: 627, baseType: !106, size: 32, offset: 192)
!14192 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14183, file: !406, line: 628, baseType: !107, size: 32, offset: 224)
!14193 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14183, file: !406, line: 629, baseType: !152, size: 32, offset: 256)
!14194 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14183, file: !406, line: 630, baseType: !896, size: 32, offset: 288)
!14195 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14183, file: !406, line: 631, baseType: !14196, size: 32, offset: 320)
!14196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3089, size: 32)
!14197 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14183, file: !406, line: 632, baseType: !118, size: 32, offset: 352)
!14198 = !DILocalVariable(name: "thread_data", scope: !14199, file: !2226, line: 781, type: !14182)
!14199 = distinct !DILexicalBlock(scope: !14178, file: !2226, line: 781, column: 2)
!14200 = !DILocation(line: 0, scope: !14181)
!14201 = !DILocation(line: 750, column: 2, scope: !14202)
!14202 = distinct !DILexicalBlock(scope: !14203, file: !2226, line: 750, column: 2)
!14203 = distinct !DILexicalBlock(scope: !14204, file: !2226, line: 750, column: 2)
!14204 = distinct !DILexicalBlock(scope: !14181, file: !2226, line: 750, column: 2)
!14205 = !DILocation(line: 750, column: 2, scope: !14206)
!14206 = distinct !DILexicalBlock(scope: !14207, file: !2226, line: 750, column: 2)
!14207 = distinct !DILexicalBlock(scope: !14202, file: !2226, line: 750, column: 2)
!14208 = !DILocation(line: 750, column: 2, scope: !14203)
!14209 = !DILocation(line: 750, column: 2, scope: !14181)
!14210 = !DILocation(line: 780, column: 2, scope: !14178)
!14211 = !DILocation(line: 0, scope: !14199)
!14212 = !DILocation(line: 781, column: 2, scope: !14213)
!14213 = distinct !DILexicalBlock(scope: !14214, file: !2226, line: 781, column: 2)
!14214 = distinct !DILexicalBlock(scope: !14215, file: !2226, line: 781, column: 2)
!14215 = distinct !DILexicalBlock(scope: !14199, file: !2226, line: 781, column: 2)
!14216 = !DILocation(line: 752, column: 17, scope: !14217)
!14217 = distinct !DILexicalBlock(scope: !14204, file: !2226, line: 750, column: 38)
!14218 = !DILocation(line: 753, column: 17, scope: !14217)
!14219 = !DILocation(line: 754, column: 17, scope: !14217)
!14220 = !DILocation(line: 755, column: 17, scope: !14217)
!14221 = !DILocation(line: 756, column: 17, scope: !14217)
!14222 = !DILocation(line: 757, column: 17, scope: !14217)
!14223 = !DILocation(line: 758, column: 17, scope: !14217)
!14224 = !DILocation(line: 759, column: 17, scope: !14217)
!14225 = !DILocation(line: 760, column: 17, scope: !14217)
!14226 = !DILocation(line: 761, column: 17, scope: !14217)
!14227 = !DILocation(line: 751, column: 3, scope: !14217)
!14228 = !DILocation(line: 763, column: 16, scope: !14217)
!14229 = !DILocation(line: 763, column: 29, scope: !14217)
!14230 = !DILocation(line: 763, column: 39, scope: !14217)
!14231 = !DILocation(line: 750, column: 2, scope: !14204)
!14232 = !DILocation(line: 750, column: 2, scope: !14207)
!14233 = distinct !{!14233, !14209, !14234}
!14234 = !DILocation(line: 764, column: 2, scope: !14181)
!14235 = !DILocation(line: 781, column: 2, scope: !14236)
!14236 = distinct !DILexicalBlock(scope: !14237, file: !2226, line: 781, column: 2)
!14237 = distinct !DILexicalBlock(scope: !14213, file: !2226, line: 781, column: 2)
!14238 = !DILocation(line: 781, column: 2, scope: !14214)
!14239 = !DILocation(line: 781, column: 2, scope: !14199)
!14240 = !DILocation(line: 787, column: 2, scope: !14178)
!14241 = !DILocation(line: 788, column: 1, scope: !14178)
!14242 = !DILocation(line: 782, column: 20, scope: !14243)
!14243 = distinct !DILexicalBlock(scope: !14244, file: !2226, line: 782, column: 7)
!14244 = distinct !DILexicalBlock(scope: !14215, file: !2226, line: 781, column: 38)
!14245 = !DILocation(line: 782, column: 31, scope: !14243)
!14246 = !DILocation(line: 782, column: 7, scope: !14244)
!14247 = !DILocation(line: 783, column: 37, scope: !14248)
!14248 = distinct !DILexicalBlock(scope: !14243, file: !2226, line: 782, column: 51)
!14249 = !DILocation(line: 784, column: 10, scope: !14248)
!14250 = !DILocation(line: 783, column: 4, scope: !14248)
!14251 = !DILocation(line: 785, column: 3, scope: !14248)
!14252 = !DILocation(line: 781, column: 2, scope: !14215)
!14253 = !DILocation(line: 781, column: 2, scope: !14237)
!14254 = distinct !{!14254, !14239, !14255}
!14255 = !DILocation(line: 786, column: 2, scope: !14199)
!14256 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !8724, file: !8724, line: 403, type: !14257, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14259)
!14257 = !DISubroutineType(types: !14258)
!14258 = !{!566, !566}
!14259 = !{!14260}
!14260 = !DILocalVariable(name: "t", arg: 1, scope: !14256, file: !8724, line: 403, type: !566)
!14261 = !DILocation(line: 0, scope: !14256)
!14262 = !DILocalVariable(name: "t", arg: 1, scope: !14263, file: !8724, line: 102, type: !566)
!14263 = distinct !DISubprogram(name: "z_tmcvt", scope: !8724, file: !8724, line: 102, type: !8731, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14264)
!14264 = !{!14262, !14265, !14266, !14267, !14268, !14269, !14270, !14271, !14272, !14273, !14274}
!14265 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14263, file: !8724, line: 102, type: !152)
!14266 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14263, file: !8724, line: 103, type: !152)
!14267 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14263, file: !8724, line: 103, type: !145)
!14268 = !DILocalVariable(name: "result32", arg: 5, scope: !14263, file: !8724, line: 104, type: !145)
!14269 = !DILocalVariable(name: "round_up", arg: 6, scope: !14263, file: !8724, line: 104, type: !145)
!14270 = !DILocalVariable(name: "round_off", arg: 7, scope: !14263, file: !8724, line: 105, type: !145)
!14271 = !DILocalVariable(name: "mul_ratio", scope: !14263, file: !8724, line: 107, type: !145)
!14272 = !DILocalVariable(name: "div_ratio", scope: !14263, file: !8724, line: 109, type: !145)
!14273 = !DILocalVariable(name: "off", scope: !14263, file: !8724, line: 116, type: !566)
!14274 = !DILocalVariable(name: "rdivisor", scope: !14275, file: !8724, line: 119, type: !152)
!14275 = distinct !DILexicalBlock(scope: !14276, file: !8724, line: 118, column: 18)
!14276 = distinct !DILexicalBlock(scope: !14263, file: !8724, line: 118, column: 6)
!14277 = !DILocation(line: 0, scope: !14263, inlinedAt: !14278)
!14278 = distinct !DILocation(line: 406, column: 9, scope: !14256)
!14279 = !DILocation(line: 145, column: 13, scope: !14280, inlinedAt: !14278)
!14280 = distinct !DILexicalBlock(scope: !14281, file: !8724, line: 144, column: 10)
!14281 = distinct !DILexicalBlock(scope: !14282, file: !8724, line: 142, column: 7)
!14282 = distinct !DILexicalBlock(scope: !14283, file: !8724, line: 141, column: 24)
!14283 = distinct !DILexicalBlock(scope: !14284, file: !8724, line: 141, column: 13)
!14284 = distinct !DILexicalBlock(scope: !14263, file: !8724, line: 134, column: 6)
!14285 = !DILocation(line: 406, column: 2, scope: !14256)
!14286 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2226, file: !2226, line: 817, type: !4298, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14287)
!14287 = !{!14288, !14289, !14290, !14291}
!14288 = !DILocalVariable(name: "entry", arg: 1, scope: !14286, file: !2226, line: 817, type: !559)
!14289 = !DILocalVariable(name: "p1", arg: 2, scope: !14286, file: !2226, line: 818, type: !106)
!14290 = !DILocalVariable(name: "p2", arg: 3, scope: !14286, file: !2226, line: 818, type: !106)
!14291 = !DILocalVariable(name: "p3", arg: 4, scope: !14286, file: !2226, line: 818, type: !106)
!14292 = !DILocation(line: 0, scope: !14286)
!14293 = !DILocation(line: 822, column: 2, scope: !14286)
!14294 = !DILocation(line: 822, column: 17, scope: !14286)
!14295 = !DILocation(line: 822, column: 30, scope: !14286)
!14296 = !DILocation(line: 823, column: 2, scope: !14286)
!14297 = !DILocation(line: 845, column: 2, scope: !14286)
!14298 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2226, file: !2226, line: 853, type: !14299, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14302)
!14299 = !DISubroutineType(types: !14300)
!14300 = !{!145, !14301}
!14301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 32)
!14302 = !{!14303, !14304}
!14303 = !DILocalVariable(name: "l", arg: 1, scope: !14298, file: !2226, line: 853, type: !14301)
!14304 = !DILocalVariable(name: "thread_cpu", scope: !14298, file: !2226, line: 855, type: !22)
!14305 = !DILocation(line: 0, scope: !14298)
!14306 = !DILocation(line: 855, column: 28, scope: !14298)
!14307 = !DILocation(line: 857, column: 17, scope: !14308)
!14308 = distinct !DILexicalBlock(scope: !14298, file: !2226, line: 857, column: 6)
!14309 = !DILocation(line: 857, column: 6, scope: !14298)
!14310 = !DILocation(line: 858, column: 19, scope: !14311)
!14311 = distinct !DILexicalBlock(scope: !14312, file: !2226, line: 858, column: 7)
!14312 = distinct !DILexicalBlock(scope: !14308, file: !2226, line: 857, column: 24)
!14313 = !DILocation(line: 858, column: 42, scope: !14311)
!14314 = !DILocation(line: 858, column: 28, scope: !14311)
!14315 = !DILocation(line: 858, column: 25, scope: !14311)
!14316 = !DILocation(line: 858, column: 7, scope: !14312)
!14317 = !DILocation(line: 862, column: 2, scope: !14298)
!14318 = !DILocation(line: 863, column: 1, scope: !14298)
!14319 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2226, file: !2226, line: 865, type: !14299, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14320)
!14320 = !{!14321}
!14321 = !DILocalVariable(name: "l", arg: 1, scope: !14319, file: !2226, line: 865, type: !14301)
!14322 = !DILocation(line: 0, scope: !14319)
!14323 = !DILocation(line: 867, column: 9, scope: !14324)
!14324 = distinct !DILexicalBlock(scope: !14319, file: !2226, line: 867, column: 6)
!14325 = !DILocation(line: 867, column: 38, scope: !14324)
!14326 = !DILocation(line: 867, column: 24, scope: !14324)
!14327 = !DILocation(line: 867, column: 54, scope: !14324)
!14328 = !DILocation(line: 867, column: 43, scope: !14324)
!14329 = !DILocation(line: 867, column: 41, scope: !14324)
!14330 = !DILocation(line: 867, column: 20, scope: !14324)
!14331 = !DILocation(line: 867, column: 6, scope: !14319)
!14332 = !DILocation(line: 870, column: 16, scope: !14319)
!14333 = !DILocation(line: 871, column: 2, scope: !14319)
!14334 = !DILocation(line: 872, column: 1, scope: !14319)
!14335 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2226, file: !2226, line: 874, type: !14336, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14338)
!14336 = !DISubroutineType(types: !14337)
!14337 = !{null, !14301}
!14338 = !{!14339}
!14339 = !DILocalVariable(name: "l", arg: 1, scope: !14335, file: !2226, line: 874, type: !14301)
!14340 = !DILocation(line: 0, scope: !14335)
!14341 = !DILocation(line: 876, column: 32, scope: !14335)
!14342 = !DILocation(line: 876, column: 18, scope: !14335)
!14343 = !DILocation(line: 876, column: 48, scope: !14335)
!14344 = !DILocation(line: 876, column: 37, scope: !14335)
!14345 = !DILocation(line: 876, column: 35, scope: !14335)
!14346 = !DILocation(line: 876, column: 5, scope: !14335)
!14347 = !DILocation(line: 876, column: 16, scope: !14335)
!14348 = !DILocation(line: 877, column: 1, scope: !14335)
!14349 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2226, file: !2226, line: 888, type: !14350, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14352)
!14350 = !DISubroutineType(types: !14351)
!14351 = !{!107, !2230}
!14352 = !{!14353}
!14353 = !DILocalVariable(name: "thread", arg: 1, scope: !14349, file: !2226, line: 888, type: !2230)
!14354 = !DILocation(line: 0, scope: !14349)
!14355 = !DILocation(line: 893, column: 2, scope: !14349)
!14356 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2226, file: !2226, line: 897, type: !14357, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14359)
!14357 = !DISubroutineType(types: !14358)
!14358 = !{!107, !2230, !32}
!14359 = !{!14360, !14361}
!14360 = !DILocalVariable(name: "thread", arg: 1, scope: !14356, file: !2226, line: 897, type: !2230)
!14361 = !DILocalVariable(name: "options", arg: 2, scope: !14356, file: !2226, line: 897, type: !32)
!14362 = !DILocation(line: 0, scope: !14356)
!14363 = !DILocation(line: 902, column: 2, scope: !14356)
!14364 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2226, file: !2226, line: 1072, type: !14365, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14370)
!14365 = !DISubroutineType(types: !14366)
!14366 = !{!107, !2229, !14367}
!14367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14368, size: 32)
!14368 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !309, line: 234, baseType: !14369)
!14369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !309, line: 192, elements: !2166)
!14370 = !{!14371, !14372}
!14371 = !DILocalVariable(name: "thread", arg: 1, scope: !14364, file: !2226, line: 1072, type: !2229)
!14372 = !DILocalVariable(name: "stats", arg: 2, scope: !14364, file: !2226, line: 1073, type: !14367)
!14373 = !DILocation(line: 0, scope: !14364)
!14374 = !DILocation(line: 1075, column: 14, scope: !14375)
!14375 = distinct !DILexicalBlock(scope: !14364, file: !2226, line: 1075, column: 6)
!14376 = !DILocation(line: 1075, column: 23, scope: !14375)
!14377 = !DILocation(line: 1086, column: 1, scope: !14364)
!14378 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2226, file: !2226, line: 1088, type: !14379, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14381)
!14379 = !DISubroutineType(types: !14380)
!14380 = !{!107, !14367}
!14381 = !{!14382}
!14382 = !DILocalVariable(name: "stats", arg: 1, scope: !14378, file: !2226, line: 1088, type: !14367)
!14383 = !DILocation(line: 0, scope: !14378)
!14384 = !DILocation(line: 1094, column: 12, scope: !14385)
!14385 = distinct !DILexicalBlock(scope: !14378, file: !2226, line: 1094, column: 6)
!14386 = !DILocation(line: 1120, column: 1, scope: !14378)
!14387 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14388, file: !14388, line: 20, type: !3089, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !2166)
!14388 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14389 = !DILocation(line: 30, column: 2, scope: !14387)
!14390 = !DILocation(line: 31, column: 1, scope: !14387)
!14391 = distinct !DISubprogram(name: "idle", scope: !14388, file: !14388, line: 33, type: !562, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !14392)
!14392 = !{!14393, !14394, !14395}
!14393 = !DILocalVariable(name: "unused1", arg: 1, scope: !14391, file: !14388, line: 33, type: !106)
!14394 = !DILocalVariable(name: "unused2", arg: 2, scope: !14391, file: !14388, line: 33, type: !106)
!14395 = !DILocalVariable(name: "unused3", arg: 3, scope: !14391, file: !14388, line: 33, type: !106)
!14396 = !DILocation(line: 0, scope: !14391)
!14397 = !DILocation(line: 39, column: 2, scope: !14398)
!14398 = distinct !DILexicalBlock(scope: !14399, file: !14388, line: 39, column: 2)
!14399 = distinct !DILexicalBlock(scope: !14391, file: !14388, line: 39, column: 2)
!14400 = !DILocation(line: 39, column: 2, scope: !14399)
!14401 = !DILocation(line: 39, column: 2, scope: !14402)
!14402 = distinct !DILexicalBlock(scope: !14398, file: !14388, line: 39, column: 2)
!14403 = !DILocation(line: 55, column: 2, scope: !14404, inlinedAt: !14408)
!14404 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5937, file: !5937, line: 42, type: !5938, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !14405)
!14405 = !{!14406, !14407}
!14406 = !DILocalVariable(name: "key", scope: !14404, file: !5937, line: 44, type: !32)
!14407 = !DILocalVariable(name: "tmp", scope: !14404, file: !5937, line: 53, type: !32)
!14408 = distinct !DILocation(line: 62, column: 10, scope: !14409)
!14409 = distinct !DILexicalBlock(scope: !14391, file: !14388, line: 41, column: 15)
!14410 = !{i64 2226888}
!14411 = !DILocation(line: 0, scope: !14404, inlinedAt: !14408)
!14412 = !DILocation(line: 86, column: 3, scope: !14409)
!14413 = !DILocation(line: 41, column: 2, scope: !14391)
!14414 = distinct !{!14414, !14413, !14415}
!14415 = !DILocation(line: 105, column: 2, scope: !14391)
!14416 = distinct !DISubprogram(name: "k_cpu_idle", scope: !406, file: !406, line: 5627, type: !3089, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !2166)
!14417 = !DILocation(line: 5629, column: 2, scope: !14416)
!14418 = !DILocation(line: 5630, column: 1, scope: !14416)
!14419 = !DISubprogram(name: "arch_cpu_idle", scope: !560, file: !560, line: 167, type: !3089, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2166)
!14420 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2464, file: !2464, line: 93, type: !14421, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14423)
!14421 = !DISubroutineType(types: !14422)
!14422 = !{!896, !2356, !2356}
!14423 = !{!14424, !14425, !14426, !14427}
!14424 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14420, file: !2464, line: 93, type: !2356)
!14425 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14420, file: !2464, line: 94, type: !2356)
!14426 = !DILocalVariable(name: "b1", scope: !14420, file: !2464, line: 97, type: !896)
!14427 = !DILocalVariable(name: "b2", scope: !14420, file: !2464, line: 98, type: !896)
!14428 = !DILocation(line: 0, scope: !14420)
!14429 = !DILocation(line: 97, column: 30, scope: !14420)
!14430 = !DILocation(line: 98, column: 30, scope: !14420)
!14431 = !DILocation(line: 100, column: 9, scope: !14432)
!14432 = distinct !DILexicalBlock(scope: !14420, file: !2464, line: 100, column: 6)
!14433 = !DILocation(line: 100, column: 6, scope: !14420)
!14434 = !DILocation(line: 125, column: 1, scope: !14420)
!14435 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2464, file: !2464, line: 428, type: !14436, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14438)
!14436 = !DISubroutineType(types: !14437)
!14437 = !{null, !2356}
!14438 = !{!14439}
!14439 = !DILocalVariable(name: "curr", arg: 1, scope: !14435, file: !2464, line: 428, type: !2356)
!14440 = !DILocation(line: 0, scope: !14435)
!14441 = !DILocation(line: 434, column: 6, scope: !14442)
!14442 = distinct !DILexicalBlock(scope: !14435, file: !2464, line: 434, column: 6)
!14443 = !DILocation(line: 434, column: 23, scope: !14442)
!14444 = !DILocation(line: 434, column: 6, scope: !14435)
!14445 = !DILocation(line: 435, column: 50, scope: !14446)
!14446 = distinct !DILexicalBlock(scope: !14442, file: !2464, line: 434, column: 29)
!14447 = !DILocation(line: 435, column: 48, scope: !14446)
!14448 = !DILocation(line: 435, column: 29, scope: !14446)
!14449 = !DILocation(line: 436, column: 24, scope: !14446)
!14450 = !DILocation(line: 436, column: 3, scope: !14446)
!14451 = !DILocation(line: 437, column: 2, scope: !14446)
!14452 = !DILocation(line: 438, column: 1, scope: !14435)
!14453 = distinct !DISubprogram(name: "slice_time", scope: !2464, file: !2464, line: 407, type: !14454, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14456)
!14454 = !DISubroutineType(types: !14455)
!14455 = !{!107, !2356}
!14456 = !{!14457, !14458}
!14457 = !DILocalVariable(name: "curr", arg: 1, scope: !14453, file: !2464, line: 407, type: !2356)
!14458 = !DILocalVariable(name: "ret", scope: !14453, file: !2464, line: 409, type: !107)
!14459 = !DILocation(line: 0, scope: !14453)
!14460 = !DILocation(line: 409, column: 12, scope: !14453)
!14461 = !DILocation(line: 416, column: 2, scope: !14453)
!14462 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2464, file: !2464, line: 440, type: !14463, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14465)
!14463 = !DISubroutineType(types: !14464)
!14464 = !{null, !896, !107}
!14465 = !{!14466, !14467, !14468, !14474}
!14466 = !DILocalVariable(name: "slice", arg: 1, scope: !14462, file: !2464, line: 440, type: !896)
!14467 = !DILocalVariable(name: "prio", arg: 2, scope: !14462, file: !2464, line: 440, type: !107)
!14468 = !DILocalVariable(name: "__i", scope: !14469, file: !2464, line: 442, type: !14470)
!14469 = distinct !DILexicalBlock(scope: !14462, file: !2464, line: 442, column: 2)
!14470 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !14471)
!14471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !14472)
!14472 = !{!14473}
!14473 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14471, file: !420, line: 33, baseType: !107, size: 32)
!14474 = !DILocalVariable(name: "__key", scope: !14469, file: !2464, line: 442, type: !14470)
!14475 = !DILocation(line: 0, scope: !14462)
!14476 = !DILocation(line: 0, scope: !14469)
!14477 = !DILocalVariable(name: "l", arg: 1, scope: !14478, file: !420, line: 136, type: !14481)
!14478 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !14479, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14482)
!14479 = !DISubroutineType(types: !14480)
!14480 = !{!14470, !14481}
!14481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 32)
!14482 = !{!14477, !14483}
!14483 = !DILocalVariable(name: "k", scope: !14478, file: !420, line: 139, type: !14470)
!14484 = !DILocation(line: 0, scope: !14478, inlinedAt: !14485)
!14485 = distinct !DILocation(line: 442, column: 2, scope: !14469)
!14486 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !14491)
!14487 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5937, file: !5937, line: 42, type: !5938, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14488)
!14488 = !{!14489, !14490}
!14489 = !DILocalVariable(name: "key", scope: !14487, file: !5937, line: 44, type: !32)
!14490 = !DILocalVariable(name: "tmp", scope: !14487, file: !5937, line: 53, type: !32)
!14491 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !14485)
!14492 = !{i64 2270859}
!14493 = !DILocation(line: 0, scope: !14487, inlinedAt: !14491)
!14494 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !14485)
!14495 = distinct !DILexicalBlock(scope: !14496, file: !420, line: 148, column: 2)
!14496 = distinct !DILexicalBlock(scope: !14478, file: !420, line: 148, column: 2)
!14497 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !14485)
!14498 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !14485)
!14499 = distinct !DILexicalBlock(scope: !14495, file: !420, line: 148, column: 2)
!14500 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !14485)
!14501 = !DILocation(line: 443, column: 29, scope: !14502)
!14502 = distinct !DILexicalBlock(scope: !14503, file: !2464, line: 442, column: 26)
!14503 = distinct !DILexicalBlock(scope: !14469, file: !2464, line: 442, column: 2)
!14504 = !DILocation(line: 444, column: 17, scope: !14502)
!14505 = !DILocation(line: 445, column: 51, scope: !14506)
!14506 = distinct !DILexicalBlock(scope: !14502, file: !2464, line: 445, column: 7)
!14507 = !DILocation(line: 445, column: 7, scope: !14502)
!14508 = !DILocation(line: 0, scope: !14502)
!14509 = !DILocation(line: 451, column: 18, scope: !14502)
!14510 = !DILocation(line: 452, column: 3, scope: !14502)
!14511 = !DILocalVariable(name: "key", arg: 2, scope: !14512, file: !420, line: 190, type: !14470)
!14512 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !14513, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14515)
!14513 = !DISubroutineType(types: !14514)
!14514 = !{null, !14481, !14470}
!14515 = !{!14516, !14511}
!14516 = !DILocalVariable(name: "l", arg: 1, scope: !14512, file: !420, line: 189, type: !14481)
!14517 = !DILocation(line: 0, scope: !14512, inlinedAt: !14518)
!14518 = distinct !DILocation(line: 442, column: 2, scope: !14503)
!14519 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !14518)
!14520 = distinct !DILexicalBlock(scope: !14521, file: !420, line: 194, column: 2)
!14521 = distinct !DILexicalBlock(scope: !14512, file: !420, line: 194, column: 2)
!14522 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !14518)
!14523 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !14518)
!14524 = distinct !DILexicalBlock(scope: !14520, file: !420, line: 194, column: 2)
!14525 = !DILocalVariable(name: "key", arg: 1, scope: !14526, file: !5937, line: 84, type: !32)
!14526 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5937, file: !5937, line: 84, type: !5948, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14527)
!14527 = !{!14525}
!14528 = !DILocation(line: 0, scope: !14526, inlinedAt: !14529)
!14529 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !14518)
!14530 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !14529)
!14531 = !{i64 2271676}
!14532 = !DILocation(line: 454, column: 1, scope: !14462)
!14533 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !8724, file: !8724, line: 389, type: !7543, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14534)
!14534 = !{!14535}
!14535 = !DILocalVariable(name: "t", arg: 1, scope: !14533, file: !8724, line: 389, type: !152)
!14536 = !DILocation(line: 0, scope: !14533)
!14537 = !DILocalVariable(name: "t", arg: 1, scope: !14538, file: !8724, line: 102, type: !566)
!14538 = distinct !DISubprogram(name: "z_tmcvt", scope: !8724, file: !8724, line: 102, type: !8731, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14539)
!14539 = !{!14537, !14540, !14541, !14542, !14543, !14544, !14545, !14546, !14547, !14548, !14549}
!14540 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14538, file: !8724, line: 102, type: !152)
!14541 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14538, file: !8724, line: 103, type: !152)
!14542 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14538, file: !8724, line: 103, type: !145)
!14543 = !DILocalVariable(name: "result32", arg: 5, scope: !14538, file: !8724, line: 104, type: !145)
!14544 = !DILocalVariable(name: "round_up", arg: 6, scope: !14538, file: !8724, line: 104, type: !145)
!14545 = !DILocalVariable(name: "round_off", arg: 7, scope: !14538, file: !8724, line: 105, type: !145)
!14546 = !DILocalVariable(name: "mul_ratio", scope: !14538, file: !8724, line: 107, type: !145)
!14547 = !DILocalVariable(name: "div_ratio", scope: !14538, file: !8724, line: 109, type: !145)
!14548 = !DILocalVariable(name: "off", scope: !14538, file: !8724, line: 116, type: !566)
!14549 = !DILocalVariable(name: "rdivisor", scope: !14550, file: !8724, line: 119, type: !152)
!14550 = distinct !DILexicalBlock(scope: !14551, file: !8724, line: 118, column: 18)
!14551 = distinct !DILexicalBlock(scope: !14538, file: !8724, line: 118, column: 6)
!14552 = !DILocation(line: 0, scope: !14538, inlinedAt: !14553)
!14553 = distinct !DILocation(line: 392, column: 9, scope: !14533)
!14554 = !DILocation(line: 143, column: 25, scope: !14555, inlinedAt: !14553)
!14555 = distinct !DILexicalBlock(scope: !14556, file: !8724, line: 142, column: 17)
!14556 = distinct !DILexicalBlock(scope: !14557, file: !8724, line: 142, column: 7)
!14557 = distinct !DILexicalBlock(scope: !14558, file: !8724, line: 141, column: 24)
!14558 = distinct !DILexicalBlock(scope: !14559, file: !8724, line: 141, column: 13)
!14559 = distinct !DILexicalBlock(scope: !14538, file: !8724, line: 134, column: 6)
!14560 = !DILocation(line: 392, column: 2, scope: !14533)
!14561 = distinct !DISubprogram(name: "z_time_slice", scope: !2464, file: !2464, line: 502, type: !9170, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14562)
!14562 = !{!14563, !14564}
!14563 = !DILocalVariable(name: "ticks", arg: 1, scope: !14561, file: !2464, line: 502, type: !107)
!14564 = !DILocalVariable(name: "key", scope: !14561, file: !2464, line: 511, type: !14470)
!14565 = !DILocation(line: 0, scope: !14561)
!14566 = !DILocation(line: 0, scope: !14478, inlinedAt: !14567)
!14567 = distinct !DILocation(line: 511, column: 25, scope: !14561)
!14568 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !14569)
!14569 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !14567)
!14570 = !DILocation(line: 0, scope: !14487, inlinedAt: !14569)
!14571 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !14567)
!14572 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !14567)
!14573 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !14567)
!14574 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !14567)
!14575 = !DILocation(line: 514, column: 6, scope: !14576)
!14576 = distinct !DILexicalBlock(scope: !14561, file: !2464, line: 514, column: 6)
!14577 = !DILocation(line: 514, column: 25, scope: !14576)
!14578 = !DILocation(line: 514, column: 22, scope: !14576)
!14579 = !DILocation(line: 514, column: 6, scope: !14561)
!14580 = !DILocation(line: 515, column: 3, scope: !14581)
!14581 = distinct !DILexicalBlock(scope: !14576, file: !2464, line: 514, column: 35)
!14582 = !DILocation(line: 0, scope: !14512, inlinedAt: !14583)
!14583 = distinct !DILocation(line: 516, column: 3, scope: !14581)
!14584 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !14583)
!14585 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !14583)
!14586 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !14583)
!14587 = !DILocation(line: 0, scope: !14526, inlinedAt: !14588)
!14588 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !14583)
!14589 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !14588)
!14590 = !DILocation(line: 517, column: 3, scope: !14581)
!14591 = !DILocation(line: 519, column: 18, scope: !14561)
!14592 = !DILocation(line: 522, column: 6, scope: !14593)
!14593 = distinct !DILexicalBlock(scope: !14561, file: !2464, line: 522, column: 6)
!14594 = !DILocation(line: 522, column: 27, scope: !14593)
!14595 = !DILocation(line: 522, column: 30, scope: !14593)
!14596 = !DILocation(line: 522, column: 6, scope: !14561)
!14597 = !DILocation(line: 523, column: 30, scope: !14598)
!14598 = distinct !DILexicalBlock(scope: !14599, file: !2464, line: 523, column: 7)
!14599 = distinct !DILexicalBlock(scope: !14593, file: !2464, line: 522, column: 51)
!14600 = !DILocation(line: 523, column: 13, scope: !14598)
!14601 = !DILocation(line: 523, column: 7, scope: !14599)
!14602 = !DILocation(line: 530, column: 10, scope: !14603)
!14603 = distinct !DILexicalBlock(scope: !14598, file: !2464, line: 523, column: 43)
!14604 = !DILocation(line: 531, column: 3, scope: !14603)
!14605 = !DILocation(line: 532, column: 30, scope: !14606)
!14606 = distinct !DILexicalBlock(scope: !14598, file: !2464, line: 531, column: 10)
!14607 = !DILocation(line: 535, column: 29, scope: !14608)
!14608 = distinct !DILexicalBlock(scope: !14593, file: !2464, line: 534, column: 9)
!14609 = !DILocation(line: 0, scope: !14512, inlinedAt: !14610)
!14610 = distinct !DILocation(line: 537, column: 2, scope: !14561)
!14611 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !14610)
!14612 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !14610)
!14613 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !14610)
!14614 = !DILocation(line: 0, scope: !14526, inlinedAt: !14615)
!14615 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !14610)
!14616 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !14615)
!14617 = !DILocation(line: 538, column: 1, scope: !14561)
!14618 = distinct !DISubprogram(name: "sliceable", scope: !2464, file: !2464, line: 468, type: !14619, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14621)
!14619 = !DISubroutineType(types: !14620)
!14620 = !{!145, !2356}
!14621 = !{!14622, !14623}
!14622 = !DILocalVariable(name: "thread", arg: 1, scope: !14618, file: !2464, line: 468, type: !2356)
!14623 = !DILocalVariable(name: "ret", scope: !14618, file: !2464, line: 470, type: !145)
!14624 = !DILocation(line: 0, scope: !14618)
!14625 = !DILocation(line: 470, column: 13, scope: !14618)
!14626 = !DILocation(line: 471, column: 3, scope: !14618)
!14627 = !DILocation(line: 471, column: 7, scope: !14618)
!14628 = !DILocation(line: 472, column: 3, scope: !14618)
!14629 = !DILocation(line: 472, column: 37, scope: !14618)
!14630 = !DILocation(line: 472, column: 24, scope: !14618)
!14631 = !DILocation(line: 472, column: 43, scope: !14618)
!14632 = !DILocation(line: 472, column: 7, scope: !14618)
!14633 = !DILocation(line: 473, column: 3, scope: !14618)
!14634 = !DILocation(line: 473, column: 7, scope: !14618)
!14635 = !DILocation(line: 473, column: 6, scope: !14618)
!14636 = !DILocation(line: 479, column: 2, scope: !14618)
!14637 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2464, file: !2464, line: 482, type: !14638, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14640)
!14638 = !DISubroutineType(types: !14639)
!14639 = !{!14470, !14470}
!14640 = !{!14641, !14642}
!14641 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14637, file: !2464, line: 482, type: !14470)
!14642 = !DILocalVariable(name: "curr", scope: !14637, file: !2464, line: 484, type: !2356)
!14643 = !DILocation(line: 0, scope: !14637)
!14644 = !DILocation(line: 484, column: 26, scope: !14637)
!14645 = !DILocation(line: 493, column: 7, scope: !14646)
!14646 = distinct !DILexicalBlock(scope: !14637, file: !2464, line: 493, column: 6)
!14647 = !DILocation(line: 493, column: 6, scope: !14637)
!14648 = !DILocation(line: 494, column: 3, scope: !14649)
!14649 = distinct !DILexicalBlock(scope: !14646, file: !2464, line: 493, column: 49)
!14650 = !DILocation(line: 495, column: 2, scope: !14649)
!14651 = !DILocation(line: 496, column: 2, scope: !14637)
!14652 = !DILocation(line: 499, column: 1, scope: !14637)
!14653 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13638, file: !13638, line: 106, type: !14619, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14654)
!14654 = !{!14655, !14656}
!14655 = !DILocalVariable(name: "thread", arg: 1, scope: !14653, file: !13638, line: 106, type: !2356)
!14656 = !DILocalVariable(name: "state", scope: !14653, file: !13638, line: 108, type: !195)
!14657 = !DILocation(line: 0, scope: !14653)
!14658 = !DILocation(line: 108, column: 31, scope: !14653)
!14659 = !DILocation(line: 110, column: 16, scope: !14653)
!14660 = !DILocation(line: 111, column: 41, scope: !14653)
!14661 = !DILocation(line: 110, column: 2, scope: !14653)
!14662 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2464, file: !2464, line: 393, type: !14436, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14663)
!14663 = !{!14664}
!14664 = !DILocalVariable(name: "thread", arg: 1, scope: !14662, file: !2464, line: 393, type: !2356)
!14665 = !DILocation(line: 0, scope: !14662)
!14666 = !DILocation(line: 395, column: 6, scope: !14667)
!14667 = distinct !DILexicalBlock(scope: !14662, file: !2464, line: 395, column: 6)
!14668 = !DILocation(line: 395, column: 6, scope: !14662)
!14669 = !DILocalVariable(name: "thread", arg: 1, scope: !14670, file: !2464, line: 264, type: !2356)
!14670 = distinct !DISubprogram(name: "dequeue_thread", scope: !2464, file: !2464, line: 264, type: !14436, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14671)
!14671 = !{!14669}
!14672 = !DILocation(line: 0, scope: !14670, inlinedAt: !14673)
!14673 = distinct !DILocation(line: 396, column: 3, scope: !14674)
!14674 = distinct !DILexicalBlock(scope: !14667, file: !2464, line: 395, column: 34)
!14675 = !DILocation(line: 266, column: 15, scope: !14670, inlinedAt: !14673)
!14676 = !DILocation(line: 266, column: 28, scope: !14670, inlinedAt: !14673)
!14677 = !DILocalVariable(name: "thread", arg: 1, scope: !14678, file: !2464, line: 232, type: !2356)
!14678 = distinct !DISubprogram(name: "runq_remove", scope: !2464, file: !2464, line: 232, type: !14436, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14679)
!14679 = !{!14677}
!14680 = !DILocation(line: 0, scope: !14678, inlinedAt: !14681)
!14681 = distinct !DILocation(line: 268, column: 3, scope: !14682, inlinedAt: !14673)
!14682 = distinct !DILexicalBlock(scope: !14683, file: !2464, line: 267, column: 35)
!14683 = distinct !DILexicalBlock(scope: !14670, file: !2464, line: 267, column: 6)
!14684 = !DILocation(line: 234, column: 2, scope: !14678, inlinedAt: !14681)
!14685 = !DILocation(line: 397, column: 2, scope: !14674)
!14686 = !DILocalVariable(name: "thread", arg: 1, scope: !14687, file: !2464, line: 250, type: !2356)
!14687 = distinct !DISubprogram(name: "queue_thread", scope: !2464, file: !2464, line: 250, type: !14436, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14688)
!14688 = !{!14686}
!14689 = !DILocation(line: 0, scope: !14687, inlinedAt: !14690)
!14690 = distinct !DILocation(line: 398, column: 2, scope: !14662)
!14691 = !DILocation(line: 252, column: 15, scope: !14687, inlinedAt: !14690)
!14692 = !DILocation(line: 252, column: 28, scope: !14687, inlinedAt: !14690)
!14693 = !DILocalVariable(name: "thread", arg: 1, scope: !14694, file: !2464, line: 227, type: !2356)
!14694 = distinct !DISubprogram(name: "runq_add", scope: !2464, file: !2464, line: 227, type: !14436, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14695)
!14695 = !{!14693}
!14696 = !DILocation(line: 0, scope: !14694, inlinedAt: !14697)
!14697 = distinct !DILocation(line: 254, column: 3, scope: !14698, inlinedAt: !14690)
!14698 = distinct !DILexicalBlock(scope: !14699, file: !2464, line: 253, column: 35)
!14699 = distinct !DILexicalBlock(scope: !14687, file: !2464, line: 253, column: 6)
!14700 = !DILocalVariable(name: "pq", arg: 1, scope: !14701, file: !2464, line: 181, type: !14704)
!14701 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2464, file: !2464, line: 181, type: !14702, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14705)
!14702 = !DISubroutineType(types: !14703)
!14703 = !{null, !14704, !2356}
!14704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 32)
!14705 = !{!14700, !14706, !14707}
!14706 = !DILocalVariable(name: "thread", arg: 2, scope: !14701, file: !2464, line: 182, type: !2356)
!14707 = !DILocalVariable(name: "t", scope: !14701, file: !2464, line: 184, type: !2356)
!14708 = !DILocation(line: 0, scope: !14701, inlinedAt: !14709)
!14709 = distinct !DILocation(line: 229, column: 2, scope: !14694, inlinedAt: !14697)
!14710 = !DILocation(line: 186, column: 2, scope: !14711, inlinedAt: !14709)
!14711 = distinct !DILexicalBlock(scope: !14712, file: !2464, line: 186, column: 2)
!14712 = distinct !DILexicalBlock(scope: !14701, file: !2464, line: 186, column: 2)
!14713 = !DILocation(line: 186, column: 2, scope: !14712, inlinedAt: !14709)
!14714 = !DILocation(line: 186, column: 2, scope: !14715, inlinedAt: !14709)
!14715 = distinct !DILexicalBlock(scope: !14711, file: !2464, line: 186, column: 2)
!14716 = !DILocation(line: 188, column: 2, scope: !14717, inlinedAt: !14709)
!14717 = distinct !DILexicalBlock(scope: !14701, file: !2464, line: 188, column: 2)
!14718 = !DILocation(line: 188, column: 2, scope: !14719, inlinedAt: !14709)
!14719 = distinct !DILexicalBlock(scope: !14717, file: !2464, line: 188, column: 2)
!14720 = !DILocation(line: 0, scope: !14717, inlinedAt: !14709)
!14721 = !DILocation(line: 189, column: 7, scope: !14722, inlinedAt: !14709)
!14722 = distinct !DILexicalBlock(scope: !14723, file: !2464, line: 189, column: 7)
!14723 = distinct !DILexicalBlock(scope: !14719, file: !2464, line: 188, column: 56)
!14724 = !DILocation(line: 189, column: 35, scope: !14722, inlinedAt: !14709)
!14725 = !DILocation(line: 189, column: 7, scope: !14723, inlinedAt: !14709)
!14726 = !DILocation(line: 191, column: 21, scope: !14727, inlinedAt: !14709)
!14727 = distinct !DILexicalBlock(scope: !14722, file: !2464, line: 189, column: 40)
!14728 = !DILocation(line: 190, column: 4, scope: !14727, inlinedAt: !14709)
!14729 = !DILocation(line: 192, column: 4, scope: !14727, inlinedAt: !14709)
!14730 = distinct !{!14730, !14716, !14731}
!14731 = !DILocation(line: 194, column: 2, scope: !14717, inlinedAt: !14709)
!14732 = !DILocation(line: 196, column: 37, scope: !14701, inlinedAt: !14709)
!14733 = !DILocation(line: 196, column: 2, scope: !14701, inlinedAt: !14709)
!14734 = !DILocation(line: 197, column: 1, scope: !14701, inlinedAt: !14709)
!14735 = !DILocation(line: 399, column: 25, scope: !14662)
!14736 = !DILocation(line: 399, column: 22, scope: !14662)
!14737 = !DILocation(line: 399, column: 2, scope: !14662)
!14738 = !DILocation(line: 400, column: 1, scope: !14662)
!14739 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13638, file: !13638, line: 136, type: !14619, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14740)
!14740 = !{!14741}
!14741 = !DILocalVariable(name: "thread", arg: 1, scope: !14739, file: !13638, line: 136, type: !2356)
!14742 = !DILocation(line: 0, scope: !14739)
!14743 = !DILocation(line: 138, column: 9, scope: !14739)
!14744 = !DILocation(line: 138, column: 2, scope: !14739)
!14745 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2464, file: !2464, line: 1137, type: !14702, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14746)
!14746 = !{!14747, !14748}
!14747 = !DILocalVariable(name: "pq", arg: 1, scope: !14745, file: !2464, line: 1137, type: !14704)
!14748 = !DILocalVariable(name: "thread", arg: 2, scope: !14745, file: !2464, line: 1137, type: !2356)
!14749 = !DILocation(line: 0, scope: !14745)
!14750 = !DILocation(line: 1139, column: 2, scope: !14751)
!14751 = distinct !DILexicalBlock(scope: !14752, file: !2464, line: 1139, column: 2)
!14752 = distinct !DILexicalBlock(scope: !14745, file: !2464, line: 1139, column: 2)
!14753 = !DILocation(line: 1139, column: 2, scope: !14752)
!14754 = !DILocation(line: 1139, column: 2, scope: !14755)
!14755 = distinct !DILexicalBlock(scope: !14751, file: !2464, line: 1139, column: 2)
!14756 = !DILocation(line: 1141, column: 33, scope: !14745)
!14757 = !DILocation(line: 1141, column: 2, scope: !14745)
!14758 = !DILocation(line: 1142, column: 1, scope: !14745)
!14759 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13638, file: !13638, line: 83, type: !14619, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14760)
!14760 = !{!14761}
!14761 = !DILocalVariable(name: "thread", arg: 1, scope: !14759, file: !13638, line: 83, type: !2356)
!14762 = !DILocation(line: 0, scope: !14759)
!14763 = !DILocation(line: 89, column: 16, scope: !14759)
!14764 = !DILocation(line: 89, column: 2, scope: !14759)
!14765 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !319, file: !319, line: 294, type: !14766, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14768)
!14766 = !DISubroutineType(types: !14767)
!14767 = !{!2460, !14704}
!14768 = !{!14769}
!14769 = !DILocalVariable(name: "list", arg: 1, scope: !14765, file: !319, line: 294, type: !14704)
!14770 = !DILocation(line: 0, scope: !14765)
!14771 = !DILocation(line: 296, column: 9, scope: !14765)
!14772 = !DILocation(line: 296, column: 49, scope: !14765)
!14773 = !DILocation(line: 296, column: 2, scope: !14765)
!14774 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !319, file: !319, line: 443, type: !14775, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14777)
!14775 = !DISubroutineType(types: !14776)
!14776 = !{null, !2460, !2460}
!14777 = !{!14778, !14779, !14780}
!14778 = !DILocalVariable(name: "successor", arg: 1, scope: !14774, file: !319, line: 443, type: !2460)
!14779 = !DILocalVariable(name: "node", arg: 2, scope: !14774, file: !319, line: 443, type: !2460)
!14780 = !DILocalVariable(name: "prev", scope: !14774, file: !319, line: 445, type: !14781)
!14781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2460)
!14782 = !DILocation(line: 0, scope: !14774)
!14783 = !DILocation(line: 445, column: 39, scope: !14774)
!14784 = !DILocation(line: 447, column: 8, scope: !14774)
!14785 = !DILocation(line: 447, column: 13, scope: !14774)
!14786 = !DILocation(line: 448, column: 8, scope: !14774)
!14787 = !DILocation(line: 448, column: 13, scope: !14774)
!14788 = !DILocation(line: 449, column: 8, scope: !14774)
!14789 = !DILocation(line: 449, column: 13, scope: !14774)
!14790 = !DILocation(line: 450, column: 18, scope: !14774)
!14791 = !DILocation(line: 451, column: 1, scope: !14774)
!14792 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !319, file: !319, line: 341, type: !14793, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14795)
!14793 = !DISubroutineType(types: !14794)
!14794 = !{!2460, !14704, !2460}
!14795 = !{!14796, !14797}
!14796 = !DILocalVariable(name: "list", arg: 1, scope: !14792, file: !319, line: 341, type: !14704)
!14797 = !DILocalVariable(name: "node", arg: 2, scope: !14792, file: !319, line: 342, type: !2460)
!14798 = !DILocation(line: 0, scope: !14792)
!14799 = !DILocation(line: 344, column: 15, scope: !14792)
!14800 = !DILocation(line: 344, column: 9, scope: !14792)
!14801 = !DILocation(line: 344, column: 26, scope: !14792)
!14802 = !DILocation(line: 344, column: 2, scope: !14792)
!14803 = distinct !DISubprogram(name: "sys_dlist_append", scope: !319, file: !319, line: 404, type: !14804, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14806)
!14804 = !DISubroutineType(types: !14805)
!14805 = !{null, !14704, !2460}
!14806 = !{!14807, !14808, !14809}
!14807 = !DILocalVariable(name: "list", arg: 1, scope: !14803, file: !319, line: 404, type: !14704)
!14808 = !DILocalVariable(name: "node", arg: 2, scope: !14803, file: !319, line: 404, type: !2460)
!14809 = !DILocalVariable(name: "tail", scope: !14803, file: !319, line: 406, type: !14781)
!14810 = !DILocation(line: 0, scope: !14803)
!14811 = !DILocation(line: 406, column: 34, scope: !14803)
!14812 = !DILocation(line: 408, column: 8, scope: !14803)
!14813 = !DILocation(line: 408, column: 13, scope: !14803)
!14814 = !DILocation(line: 409, column: 8, scope: !14803)
!14815 = !DILocation(line: 409, column: 13, scope: !14803)
!14816 = !DILocation(line: 411, column: 8, scope: !14803)
!14817 = !DILocation(line: 411, column: 13, scope: !14803)
!14818 = !DILocation(line: 412, column: 13, scope: !14803)
!14819 = !DILocation(line: 413, column: 1, scope: !14803)
!14820 = distinct !DISubprogram(name: "update_cache", scope: !2464, file: !2464, line: 559, type: !9170, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14821)
!14821 = !{!14822, !14823}
!14822 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14820, file: !2464, line: 559, type: !107)
!14823 = !DILocalVariable(name: "thread", scope: !14820, file: !2464, line: 562, type: !2356)
!14824 = !DILocation(line: 0, scope: !14820)
!14825 = !DILocation(line: 239, column: 9, scope: !14826, inlinedAt: !14829)
!14826 = distinct !DISubprogram(name: "runq_best", scope: !2464, file: !2464, line: 237, type: !14827, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2166)
!14827 = !DISubroutineType(types: !14828)
!14828 = !{!2356}
!14829 = distinct !DILocation(line: 314, column: 28, scope: !14830, inlinedAt: !14833)
!14830 = distinct !DISubprogram(name: "next_up", scope: !2464, file: !2464, line: 312, type: !14827, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14831)
!14831 = !{!14832}
!14832 = !DILocalVariable(name: "thread", scope: !14830, file: !2464, line: 314, type: !2356)
!14833 = distinct !DILocation(line: 562, column: 28, scope: !14820)
!14834 = !DILocation(line: 0, scope: !14830, inlinedAt: !14833)
!14835 = !DILocation(line: 340, column: 17, scope: !14830, inlinedAt: !14833)
!14836 = !DILocation(line: 340, column: 9, scope: !14830, inlinedAt: !14833)
!14837 = !DILocalVariable(name: "thread", arg: 1, scope: !14838, file: !2464, line: 127, type: !2356)
!14838 = distinct !DISubprogram(name: "should_preempt", scope: !2464, file: !2464, line: 127, type: !14839, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14841)
!14839 = !DISubroutineType(types: !14840)
!14840 = !{!145, !2356, !107}
!14841 = !{!14837, !14842}
!14842 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14838, file: !2464, line: 128, type: !107)
!14843 = !DILocation(line: 0, scope: !14838, inlinedAt: !14844)
!14844 = distinct !DILocation(line: 564, column: 6, scope: !14845)
!14845 = distinct !DILexicalBlock(scope: !14820, file: !2464, line: 564, column: 6)
!14846 = !DILocation(line: 133, column: 17, scope: !14847, inlinedAt: !14844)
!14847 = distinct !DILexicalBlock(scope: !14838, file: !2464, line: 133, column: 6)
!14848 = !DILocation(line: 0, scope: !14845)
!14849 = !DILocation(line: 133, column: 6, scope: !14838, inlinedAt: !14844)
!14850 = !DILocation(line: 137, column: 2, scope: !14851, inlinedAt: !14844)
!14851 = distinct !DILexicalBlock(scope: !14852, file: !2464, line: 137, column: 2)
!14852 = distinct !DILexicalBlock(scope: !14838, file: !2464, line: 137, column: 2)
!14853 = !DILocation(line: 137, column: 2, scope: !14852, inlinedAt: !14844)
!14854 = !DILocation(line: 137, column: 2, scope: !14855, inlinedAt: !14844)
!14855 = distinct !DILexicalBlock(scope: !14851, file: !2464, line: 137, column: 2)
!14856 = !DILocation(line: 140, column: 6, scope: !14857, inlinedAt: !14844)
!14857 = distinct !DILexicalBlock(scope: !14838, file: !2464, line: 140, column: 6)
!14858 = !DILocation(line: 140, column: 6, scope: !14838, inlinedAt: !14844)
!14859 = !DILocation(line: 150, column: 9, scope: !14860, inlinedAt: !14844)
!14860 = distinct !DILexicalBlock(scope: !14838, file: !2464, line: 149, column: 6)
!14861 = !DILocation(line: 149, column: 6, scope: !14838, inlinedAt: !14844)
!14862 = !DILocation(line: 157, column: 6, scope: !14863, inlinedAt: !14844)
!14863 = distinct !DILexicalBlock(scope: !14838, file: !2464, line: 157, column: 6)
!14864 = !DILocation(line: 564, column: 6, scope: !14820)
!14865 = !DILocation(line: 566, column: 14, scope: !14866)
!14866 = distinct !DILexicalBlock(scope: !14867, file: !2464, line: 566, column: 7)
!14867 = distinct !DILexicalBlock(scope: !14845, file: !2464, line: 564, column: 42)
!14868 = !DILocation(line: 566, column: 7, scope: !14867)
!14869 = !DILocation(line: 567, column: 4, scope: !14870)
!14870 = distinct !DILexicalBlock(scope: !14866, file: !2464, line: 566, column: 27)
!14871 = !DILocation(line: 568, column: 3, scope: !14870)
!14872 = !DILocation(line: 585, column: 1, scope: !14820)
!14873 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2464, file: !2464, line: 1144, type: !14874, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14876)
!14874 = !DISubroutineType(types: !14875)
!14875 = !{!2356, !14704}
!14876 = !{!14877, !14878, !14879}
!14877 = !DILocalVariable(name: "pq", arg: 1, scope: !14873, file: !2464, line: 1144, type: !14704)
!14878 = !DILocalVariable(name: "thread", scope: !14873, file: !2464, line: 1146, type: !2356)
!14879 = !DILocalVariable(name: "n", scope: !14873, file: !2464, line: 1147, type: !2460)
!14880 = !DILocation(line: 0, scope: !14873)
!14881 = !DILocation(line: 1147, column: 19, scope: !14873)
!14882 = !DILocation(line: 1152, column: 2, scope: !14873)
!14883 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13638, file: !13638, line: 115, type: !14619, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14884)
!14884 = !{!14885}
!14885 = !DILocalVariable(name: "thread", arg: 1, scope: !14883, file: !13638, line: 115, type: !2356)
!14886 = !DILocation(line: 0, scope: !14883)
!14887 = !DILocation(line: 117, column: 46, scope: !14883)
!14888 = !DILocation(line: 117, column: 10, scope: !14883)
!14889 = !DILocation(line: 117, column: 9, scope: !14883)
!14890 = !DILocation(line: 117, column: 2, scope: !14883)
!14891 = distinct !DISubprogram(name: "is_preempt", scope: !2464, file: !2464, line: 62, type: !14454, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14892)
!14892 = !{!14893}
!14893 = !DILocalVariable(name: "thread", arg: 1, scope: !14891, file: !2464, line: 62, type: !2356)
!14894 = !DILocation(line: 0, scope: !14891)
!14895 = !DILocation(line: 65, column: 22, scope: !14891)
!14896 = !DILocation(line: 65, column: 30, scope: !14891)
!14897 = !DILocation(line: 65, column: 2, scope: !14891)
!14898 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14067, file: !14067, line: 35, type: !14899, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14903)
!14899 = !DISubroutineType(types: !14900)
!14900 = !{!145, !14901}
!14901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14902, size: 32)
!14902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2407)
!14903 = !{!14904}
!14904 = !DILocalVariable(name: "to", arg: 1, scope: !14898, file: !14067, line: 35, type: !14901)
!14905 = !DILocation(line: 0, scope: !14898)
!14906 = !DILocation(line: 37, column: 35, scope: !14898)
!14907 = !DILocation(line: 37, column: 10, scope: !14898)
!14908 = !DILocation(line: 37, column: 9, scope: !14898)
!14909 = !DILocation(line: 37, column: 2, scope: !14898)
!14910 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !319, file: !319, line: 225, type: !14911, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14915)
!14911 = !DISubroutineType(types: !14912)
!14912 = !{!145, !14913}
!14913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14914, size: 32)
!14914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2366)
!14915 = !{!14916}
!14916 = !DILocalVariable(name: "node", arg: 1, scope: !14910, file: !319, line: 225, type: !14913)
!14917 = !DILocation(line: 0, scope: !14910)
!14918 = !DILocation(line: 227, column: 15, scope: !14910)
!14919 = !DILocation(line: 227, column: 20, scope: !14910)
!14920 = !DILocation(line: 227, column: 2, scope: !14910)
!14921 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !319, file: !319, line: 325, type: !14793, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14922)
!14922 = !{!14923, !14924}
!14923 = !DILocalVariable(name: "list", arg: 1, scope: !14921, file: !319, line: 325, type: !14704)
!14924 = !DILocalVariable(name: "node", arg: 2, scope: !14921, file: !319, line: 326, type: !2460)
!14925 = !DILocation(line: 0, scope: !14921)
!14926 = !DILocation(line: 328, column: 24, scope: !14921)
!14927 = !DILocation(line: 328, column: 15, scope: !14921)
!14928 = !DILocation(line: 328, column: 9, scope: !14921)
!14929 = !DILocation(line: 328, column: 45, scope: !14921)
!14930 = !DILocation(line: 328, column: 2, scope: !14921)
!14931 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !319, file: !319, line: 266, type: !14932, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14934)
!14932 = !DISubroutineType(types: !14933)
!14933 = !{!145, !14704}
!14934 = !{!14935}
!14935 = !DILocalVariable(name: "list", arg: 1, scope: !14931, file: !319, line: 266, type: !14704)
!14936 = !DILocation(line: 0, scope: !14931)
!14937 = !DILocation(line: 268, column: 15, scope: !14931)
!14938 = !DILocation(line: 268, column: 20, scope: !14931)
!14939 = !DILocation(line: 268, column: 2, scope: !14931)
!14940 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !319, file: !319, line: 496, type: !14941, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14943)
!14941 = !DISubroutineType(types: !14942)
!14942 = !{null, !2460}
!14943 = !{!14944, !14945, !14946}
!14944 = !DILocalVariable(name: "node", arg: 1, scope: !14940, file: !319, line: 496, type: !2460)
!14945 = !DILocalVariable(name: "prev", scope: !14940, file: !319, line: 498, type: !14781)
!14946 = !DILocalVariable(name: "next", scope: !14940, file: !319, line: 499, type: !14781)
!14947 = !DILocation(line: 0, scope: !14940)
!14948 = !DILocation(line: 498, column: 34, scope: !14940)
!14949 = !DILocation(line: 499, column: 34, scope: !14940)
!14950 = !DILocation(line: 501, column: 8, scope: !14940)
!14951 = !DILocation(line: 501, column: 13, scope: !14940)
!14952 = !DILocation(line: 502, column: 8, scope: !14940)
!14953 = !DILocation(line: 502, column: 13, scope: !14940)
!14954 = !DILocation(line: 503, column: 2, scope: !14940)
!14955 = !DILocation(line: 504, column: 1, scope: !14940)
!14956 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !14941, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14957)
!14957 = !{!14958}
!14958 = !DILocalVariable(name: "node", arg: 1, scope: !14956, file: !319, line: 211, type: !2460)
!14959 = !DILocation(line: 0, scope: !14956)
!14960 = !DILocation(line: 213, column: 8, scope: !14956)
!14961 = !DILocation(line: 213, column: 13, scope: !14956)
!14962 = !DILocation(line: 214, column: 8, scope: !14956)
!14963 = !DILocation(line: 214, column: 13, scope: !14956)
!14964 = !DILocation(line: 215, column: 1, scope: !14956)
!14965 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13638, file: !13638, line: 131, type: !14966, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14968)
!14966 = !DISubroutineType(types: !14967)
!14967 = !{!145, !2356, !152}
!14968 = !{!14969, !14970}
!14969 = !DILocalVariable(name: "thread", arg: 1, scope: !14965, file: !13638, line: 131, type: !2356)
!14970 = !DILocalVariable(name: "state", arg: 2, scope: !14965, file: !13638, line: 131, type: !152)
!14971 = !DILocation(line: 0, scope: !14965)
!14972 = !DILocation(line: 133, column: 23, scope: !14965)
!14973 = !DILocation(line: 133, column: 10, scope: !14965)
!14974 = !DILocation(line: 133, column: 36, scope: !14965)
!14975 = !DILocation(line: 133, column: 45, scope: !14965)
!14976 = !DILocation(line: 133, column: 2, scope: !14965)
!14977 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13638, file: !13638, line: 211, type: !14978, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14980)
!14978 = !DISubroutineType(types: !14979)
!14979 = !{!145, !107, !107}
!14980 = !{!14981, !14982}
!14981 = !DILocalVariable(name: "prio", arg: 1, scope: !14977, file: !13638, line: 211, type: !107)
!14982 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14977, file: !13638, line: 211, type: !107)
!14983 = !DILocation(line: 0, scope: !14977)
!14984 = !DILocation(line: 213, column: 9, scope: !14977)
!14985 = !DILocation(line: 213, column: 2, scope: !14977)
!14986 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13638, file: !13638, line: 206, type: !14978, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14987)
!14987 = !{!14988, !14989}
!14988 = !DILocalVariable(name: "prio1", arg: 1, scope: !14986, file: !13638, line: 206, type: !107)
!14989 = !DILocalVariable(name: "prio2", arg: 2, scope: !14986, file: !13638, line: 206, type: !107)
!14990 = !DILocation(line: 0, scope: !14986)
!14991 = !DILocation(line: 208, column: 15, scope: !14986)
!14992 = !DILocation(line: 208, column: 2, scope: !14986)
!14993 = distinct !DISubprogram(name: "z_ready_thread", scope: !2464, file: !2464, line: 635, type: !14436, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14994)
!14994 = !{!14995, !14996, !14998}
!14995 = !DILocalVariable(name: "thread", arg: 1, scope: !14993, file: !2464, line: 635, type: !2356)
!14996 = !DILocalVariable(name: "__i", scope: !14997, file: !2464, line: 637, type: !14470)
!14997 = distinct !DILexicalBlock(scope: !14993, file: !2464, line: 637, column: 2)
!14998 = !DILocalVariable(name: "__key", scope: !14997, file: !2464, line: 637, type: !14470)
!14999 = !DILocation(line: 0, scope: !14993)
!15000 = !DILocation(line: 0, scope: !14997)
!15001 = !DILocation(line: 0, scope: !14478, inlinedAt: !15002)
!15002 = distinct !DILocation(line: 637, column: 2, scope: !14997)
!15003 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15004)
!15004 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15002)
!15005 = !DILocation(line: 0, scope: !14487, inlinedAt: !15004)
!15006 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15002)
!15007 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15002)
!15008 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15002)
!15009 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15002)
!15010 = !DILocation(line: 639, column: 4, scope: !15011)
!15011 = distinct !DILexicalBlock(scope: !15012, file: !2464, line: 638, column: 41)
!15012 = distinct !DILexicalBlock(scope: !15013, file: !2464, line: 638, column: 7)
!15013 = distinct !DILexicalBlock(scope: !15014, file: !2464, line: 637, column: 26)
!15014 = distinct !DILexicalBlock(scope: !14997, file: !2464, line: 637, column: 2)
!15015 = !DILocation(line: 0, scope: !14512, inlinedAt: !15016)
!15016 = distinct !DILocation(line: 637, column: 2, scope: !15014)
!15017 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15016)
!15018 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15016)
!15019 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15016)
!15020 = !DILocation(line: 0, scope: !14526, inlinedAt: !15021)
!15021 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15016)
!15022 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15021)
!15023 = !DILocation(line: 642, column: 1, scope: !14993)
!15024 = distinct !DISubprogram(name: "ready_thread", scope: !2464, file: !2464, line: 617, type: !14436, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15025)
!15025 = !{!15026}
!15026 = !DILocalVariable(name: "thread", arg: 1, scope: !15024, file: !2464, line: 617, type: !2356)
!15027 = !DILocation(line: 0, scope: !15024)
!15028 = !DILocation(line: 626, column: 7, scope: !15029)
!15029 = distinct !DILexicalBlock(scope: !15024, file: !2464, line: 626, column: 6)
!15030 = !DILocation(line: 626, column: 34, scope: !15029)
!15031 = !DILocation(line: 626, column: 37, scope: !15029)
!15032 = !DILocation(line: 626, column: 6, scope: !15024)
!15033 = !DILocation(line: 0, scope: !14687, inlinedAt: !15034)
!15034 = distinct !DILocation(line: 629, column: 3, scope: !15035)
!15035 = distinct !DILexicalBlock(scope: !15029, file: !2464, line: 626, column: 64)
!15036 = !DILocation(line: 252, column: 15, scope: !14687, inlinedAt: !15034)
!15037 = !DILocation(line: 252, column: 28, scope: !14687, inlinedAt: !15034)
!15038 = !DILocation(line: 0, scope: !14694, inlinedAt: !15039)
!15039 = distinct !DILocation(line: 254, column: 3, scope: !14698, inlinedAt: !15034)
!15040 = !DILocation(line: 0, scope: !14701, inlinedAt: !15041)
!15041 = distinct !DILocation(line: 229, column: 2, scope: !14694, inlinedAt: !15039)
!15042 = !DILocation(line: 186, column: 2, scope: !14711, inlinedAt: !15041)
!15043 = !DILocation(line: 186, column: 2, scope: !14712, inlinedAt: !15041)
!15044 = !DILocation(line: 186, column: 2, scope: !14715, inlinedAt: !15041)
!15045 = !DILocation(line: 188, column: 2, scope: !14717, inlinedAt: !15041)
!15046 = !DILocation(line: 188, column: 2, scope: !14719, inlinedAt: !15041)
!15047 = !DILocation(line: 0, scope: !14717, inlinedAt: !15041)
!15048 = !DILocation(line: 189, column: 7, scope: !14722, inlinedAt: !15041)
!15049 = !DILocation(line: 189, column: 35, scope: !14722, inlinedAt: !15041)
!15050 = !DILocation(line: 189, column: 7, scope: !14723, inlinedAt: !15041)
!15051 = !DILocation(line: 191, column: 21, scope: !14727, inlinedAt: !15041)
!15052 = !DILocation(line: 190, column: 4, scope: !14727, inlinedAt: !15041)
!15053 = !DILocation(line: 192, column: 4, scope: !14727, inlinedAt: !15041)
!15054 = distinct !{!15054, !15045, !15055}
!15055 = !DILocation(line: 194, column: 2, scope: !14717, inlinedAt: !15041)
!15056 = !DILocation(line: 196, column: 37, scope: !14701, inlinedAt: !15041)
!15057 = !DILocation(line: 196, column: 2, scope: !14701, inlinedAt: !15041)
!15058 = !DILocation(line: 197, column: 1, scope: !14701, inlinedAt: !15041)
!15059 = !DILocation(line: 630, column: 3, scope: !15035)
!15060 = !DILocation(line: 632, column: 2, scope: !15035)
!15061 = !DILocation(line: 633, column: 1, scope: !15024)
!15062 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13638, file: !13638, line: 120, type: !14619, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15063)
!15063 = !{!15064}
!15064 = !DILocalVariable(name: "thread", arg: 1, scope: !15062, file: !13638, line: 120, type: !2356)
!15065 = !DILocation(line: 0, scope: !15062)
!15066 = !DILocation(line: 122, column: 12, scope: !15062)
!15067 = !DILocation(line: 122, column: 62, scope: !15062)
!15068 = !DILocation(line: 123, column: 4, scope: !15062)
!15069 = !DILocation(line: 122, column: 2, scope: !15062)
!15070 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2464, file: !2464, line: 644, type: !14436, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15071)
!15071 = !{!15072, !15073, !15075}
!15072 = !DILocalVariable(name: "thread", arg: 1, scope: !15070, file: !2464, line: 644, type: !2356)
!15073 = !DILocalVariable(name: "__i", scope: !15074, file: !2464, line: 646, type: !14470)
!15074 = distinct !DILexicalBlock(scope: !15070, file: !2464, line: 646, column: 2)
!15075 = !DILocalVariable(name: "__key", scope: !15074, file: !2464, line: 646, type: !14470)
!15076 = !DILocation(line: 0, scope: !15070)
!15077 = !DILocation(line: 0, scope: !15074)
!15078 = !DILocation(line: 0, scope: !14478, inlinedAt: !15079)
!15079 = distinct !DILocation(line: 646, column: 2, scope: !15074)
!15080 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15081)
!15081 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15079)
!15082 = !DILocation(line: 0, scope: !14487, inlinedAt: !15081)
!15083 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15079)
!15084 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15079)
!15085 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15079)
!15086 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15079)
!15087 = !DILocation(line: 647, column: 3, scope: !15088)
!15088 = distinct !DILexicalBlock(scope: !15089, file: !2464, line: 646, column: 26)
!15089 = distinct !DILexicalBlock(scope: !15074, file: !2464, line: 646, column: 2)
!15090 = !DILocation(line: 0, scope: !14512, inlinedAt: !15091)
!15091 = distinct !DILocation(line: 646, column: 2, scope: !15089)
!15092 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15091)
!15093 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15091)
!15094 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15091)
!15095 = !DILocation(line: 0, scope: !14526, inlinedAt: !15096)
!15096 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15091)
!15097 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15096)
!15098 = !DILocation(line: 649, column: 1, scope: !15070)
!15099 = distinct !DISubprogram(name: "z_sched_start", scope: !2464, file: !2464, line: 651, type: !14436, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15100)
!15100 = !{!15101, !15102}
!15101 = !DILocalVariable(name: "thread", arg: 1, scope: !15099, file: !2464, line: 651, type: !2356)
!15102 = !DILocalVariable(name: "key", scope: !15099, file: !2464, line: 653, type: !14470)
!15103 = !DILocation(line: 0, scope: !15099)
!15104 = !DILocation(line: 0, scope: !14478, inlinedAt: !15105)
!15105 = distinct !DILocation(line: 653, column: 25, scope: !15099)
!15106 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15107)
!15107 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15105)
!15108 = !DILocation(line: 0, scope: !14487, inlinedAt: !15107)
!15109 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15105)
!15110 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15105)
!15111 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15105)
!15112 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15105)
!15113 = !DILocation(line: 655, column: 6, scope: !15114)
!15114 = distinct !DILexicalBlock(scope: !15099, file: !2464, line: 655, column: 6)
!15115 = !DILocation(line: 655, column: 6, scope: !15099)
!15116 = !DILocation(line: 0, scope: !14512, inlinedAt: !15117)
!15117 = distinct !DILocation(line: 656, column: 3, scope: !15118)
!15118 = distinct !DILexicalBlock(scope: !15114, file: !2464, line: 655, column: 36)
!15119 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15117)
!15120 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15117)
!15121 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15117)
!15122 = !DILocation(line: 0, scope: !14526, inlinedAt: !15123)
!15123 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15117)
!15124 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15123)
!15125 = !DILocation(line: 657, column: 3, scope: !15118)
!15126 = !DILocation(line: 660, column: 2, scope: !15099)
!15127 = !DILocation(line: 661, column: 2, scope: !15099)
!15128 = !DILocation(line: 662, column: 2, scope: !15099)
!15129 = !DILocation(line: 663, column: 1, scope: !15099)
!15130 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13638, file: !13638, line: 126, type: !14619, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15131)
!15131 = !{!15132}
!15132 = !DILocalVariable(name: "thread", arg: 1, scope: !15130, file: !13638, line: 126, type: !2356)
!15133 = !DILocation(line: 0, scope: !15130)
!15134 = !DILocation(line: 128, column: 23, scope: !15130)
!15135 = !DILocation(line: 128, column: 36, scope: !15130)
!15136 = !DILocation(line: 128, column: 56, scope: !15130)
!15137 = !DILocation(line: 128, column: 2, scope: !15130)
!15138 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13638, file: !13638, line: 155, type: !14436, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15139)
!15139 = !{!15140}
!15140 = !DILocalVariable(name: "thread", arg: 1, scope: !15138, file: !13638, line: 155, type: !2356)
!15141 = !DILocation(line: 0, scope: !15138)
!15142 = !DILocation(line: 157, column: 15, scope: !15138)
!15143 = !DILocation(line: 157, column: 28, scope: !15138)
!15144 = !DILocation(line: 158, column: 1, scope: !15138)
!15145 = distinct !DISubprogram(name: "z_reschedule", scope: !2464, file: !2464, line: 967, type: !14513, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15146)
!15146 = !{!15147, !15148}
!15147 = !DILocalVariable(name: "lock", arg: 1, scope: !15145, file: !2464, line: 967, type: !14481)
!15148 = !DILocalVariable(name: "key", arg: 2, scope: !15145, file: !2464, line: 967, type: !14470)
!15149 = !DILocation(line: 0, scope: !15145)
!15150 = !DILocation(line: 969, column: 6, scope: !15151)
!15151 = distinct !DILexicalBlock(scope: !15145, file: !2464, line: 969, column: 6)
!15152 = !DILocation(line: 969, column: 23, scope: !15151)
!15153 = !DILocation(line: 969, column: 26, scope: !15151)
!15154 = !DILocation(line: 969, column: 6, scope: !15145)
!15155 = !DILocalVariable(name: "key", arg: 2, scope: !15156, file: !13742, line: 193, type: !14470)
!15156 = distinct !DISubprogram(name: "z_swap", scope: !13742, file: !13742, line: 193, type: !15157, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15159)
!15157 = !DISubroutineType(types: !15158)
!15158 = !{!107, !14481, !14470}
!15159 = !{!15160, !15155}
!15160 = !DILocalVariable(name: "lock", arg: 1, scope: !15156, file: !13742, line: 193, type: !14481)
!15161 = !DILocation(line: 0, scope: !15156, inlinedAt: !15162)
!15162 = distinct !DILocation(line: 970, column: 3, scope: !15163)
!15163 = distinct !DILexicalBlock(scope: !15151, file: !2464, line: 969, column: 39)
!15164 = !DILocalVariable(name: "l", arg: 1, scope: !15165, file: !420, line: 221, type: !14481)
!15165 = distinct !DISubprogram(name: "k_spin_release", scope: !420, file: !420, line: 221, type: !15166, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15168)
!15166 = !DISubroutineType(types: !15167)
!15167 = !{null, !14481}
!15168 = !{!15164}
!15169 = !DILocation(line: 0, scope: !15165, inlinedAt: !15170)
!15170 = distinct !DILocation(line: 195, column: 2, scope: !15156, inlinedAt: !15162)
!15171 = !DILocation(line: 225, column: 2, scope: !15172, inlinedAt: !15170)
!15172 = distinct !DILexicalBlock(scope: !15173, file: !420, line: 225, column: 2)
!15173 = distinct !DILexicalBlock(scope: !15165, file: !420, line: 225, column: 2)
!15174 = !DILocation(line: 225, column: 2, scope: !15173, inlinedAt: !15170)
!15175 = !DILocation(line: 225, column: 2, scope: !15176, inlinedAt: !15170)
!15176 = distinct !DILexicalBlock(scope: !15172, file: !420, line: 225, column: 2)
!15177 = !DILocation(line: 196, column: 9, scope: !15156, inlinedAt: !15162)
!15178 = !DILocation(line: 971, column: 2, scope: !15163)
!15179 = !DILocation(line: 0, scope: !14512, inlinedAt: !15180)
!15180 = distinct !DILocation(line: 972, column: 3, scope: !15181)
!15181 = distinct !DILexicalBlock(scope: !15151, file: !2464, line: 971, column: 9)
!15182 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15180)
!15183 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15180)
!15184 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15180)
!15185 = !DILocation(line: 0, scope: !14526, inlinedAt: !15186)
!15186 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15180)
!15187 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15186)
!15188 = !DILocation(line: 975, column: 1, scope: !15145)
!15189 = distinct !DISubprogram(name: "resched", scope: !2464, file: !2464, line: 940, type: !15190, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15192)
!15190 = !DISubroutineType(types: !15191)
!15191 = !{!145, !152}
!15192 = !{!15193}
!15193 = !DILocalVariable(name: "key", arg: 1, scope: !15189, file: !2464, line: 940, type: !152)
!15194 = !DILocation(line: 0, scope: !15189)
!15195 = !DILocalVariable(name: "key", arg: 1, scope: !15196, file: !5937, line: 112, type: !32)
!15196 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5937, file: !5937, line: 112, type: !15197, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15199)
!15197 = !DISubroutineType(types: !15198)
!15198 = !{!145, !32}
!15199 = !{!15195}
!15200 = !DILocation(line: 0, scope: !15196, inlinedAt: !15201)
!15201 = distinct !DILocation(line: 946, column: 9, scope: !15189)
!15202 = !DILocation(line: 115, column: 13, scope: !15196, inlinedAt: !15201)
!15203 = !DILocation(line: 946, column: 32, scope: !15189)
!15204 = !DILocation(line: 1031, column: 3, scope: !15205, inlinedAt: !15208)
!15205 = distinct !DISubprogram(name: "__get_IPSR", scope: !6256, file: !6256, line: 1027, type: !6343, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15206)
!15206 = !{!15207}
!15207 = !DILocalVariable(name: "result", scope: !15205, file: !6256, line: 1029, type: !152)
!15208 = distinct !DILocation(line: 48, column: 10, scope: !15209, inlinedAt: !15210)
!15209 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7308, file: !7308, line: 46, type: !7309, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2166)
!15210 = distinct !DILocation(line: 946, column: 36, scope: !15189)
!15211 = !{i64 3588472}
!15212 = !DILocation(line: 0, scope: !15205, inlinedAt: !15208)
!15213 = !DILocation(line: 48, column: 9, scope: !15209, inlinedAt: !15210)
!15214 = !DILocation(line: 946, column: 2, scope: !15189)
!15215 = distinct !DISubprogram(name: "need_swap", scope: !2464, file: !2464, line: 953, type: !7309, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15216)
!15216 = !{!15217}
!15217 = !DILocalVariable(name: "new_thread", scope: !15215, file: !2464, line: 959, type: !2356)
!15218 = !DILocation(line: 962, column: 31, scope: !15215)
!15219 = !DILocation(line: 0, scope: !15215)
!15220 = !DILocation(line: 963, column: 23, scope: !15215)
!15221 = !DILocation(line: 963, column: 20, scope: !15215)
!15222 = !DILocation(line: 963, column: 2, scope: !15215)
!15223 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13742, file: !13742, line: 181, type: !6266, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15224)
!15224 = !{!15225, !15226}
!15225 = !DILocalVariable(name: "key", arg: 1, scope: !15223, file: !13742, line: 181, type: !32)
!15226 = !DILocalVariable(name: "ret", scope: !15223, file: !13742, line: 183, type: !107)
!15227 = !DILocation(line: 0, scope: !15223)
!15228 = !DILocation(line: 185, column: 8, scope: !15223)
!15229 = !DILocation(line: 186, column: 2, scope: !15223)
!15230 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2464, file: !2464, line: 665, type: !14436, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15231)
!15231 = !{!15232, !15233, !15235}
!15232 = !DILocalVariable(name: "thread", arg: 1, scope: !15230, file: !2464, line: 665, type: !2356)
!15233 = !DILocalVariable(name: "__i", scope: !15234, file: !2464, line: 671, type: !14470)
!15234 = distinct !DILexicalBlock(scope: !15230, file: !2464, line: 671, column: 2)
!15235 = !DILocalVariable(name: "__key", scope: !15234, file: !2464, line: 671, type: !14470)
!15236 = !DILocation(line: 0, scope: !15230)
!15237 = !DILocation(line: 669, column: 8, scope: !15230)
!15238 = !DILocation(line: 0, scope: !15234)
!15239 = !DILocation(line: 0, scope: !14478, inlinedAt: !15240)
!15240 = distinct !DILocation(line: 671, column: 2, scope: !15234)
!15241 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15242)
!15242 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15240)
!15243 = !DILocation(line: 0, scope: !14487, inlinedAt: !15242)
!15244 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15240)
!15245 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15240)
!15246 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15240)
!15247 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15240)
!15248 = !DILocation(line: 672, column: 7, scope: !15249)
!15249 = distinct !DILexicalBlock(scope: !15250, file: !2464, line: 672, column: 7)
!15250 = distinct !DILexicalBlock(scope: !15251, file: !2464, line: 671, column: 26)
!15251 = distinct !DILexicalBlock(scope: !15234, file: !2464, line: 671, column: 2)
!15252 = !DILocation(line: 672, column: 7, scope: !15250)
!15253 = !DILocation(line: 0, scope: !14670, inlinedAt: !15254)
!15254 = distinct !DILocation(line: 673, column: 4, scope: !15255)
!15255 = distinct !DILexicalBlock(scope: !15249, file: !2464, line: 672, column: 35)
!15256 = !DILocation(line: 266, column: 15, scope: !14670, inlinedAt: !15254)
!15257 = !DILocation(line: 266, column: 28, scope: !14670, inlinedAt: !15254)
!15258 = !DILocation(line: 0, scope: !14678, inlinedAt: !15259)
!15259 = distinct !DILocation(line: 268, column: 3, scope: !14682, inlinedAt: !15254)
!15260 = !DILocation(line: 234, column: 2, scope: !14678, inlinedAt: !15259)
!15261 = !DILocation(line: 674, column: 3, scope: !15255)
!15262 = !DILocation(line: 675, column: 3, scope: !15250)
!15263 = !DILocation(line: 676, column: 26, scope: !15250)
!15264 = !DILocation(line: 676, column: 23, scope: !15250)
!15265 = !DILocation(line: 676, column: 3, scope: !15250)
!15266 = !DILocation(line: 0, scope: !14512, inlinedAt: !15267)
!15267 = distinct !DILocation(line: 671, column: 2, scope: !15251)
!15268 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15267)
!15269 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15267)
!15270 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15267)
!15271 = !DILocation(line: 0, scope: !14526, inlinedAt: !15272)
!15272 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15267)
!15273 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15272)
!15274 = !DILocation(line: 679, column: 16, scope: !15275)
!15275 = distinct !DILexicalBlock(scope: !15230, file: !2464, line: 679, column: 6)
!15276 = !DILocation(line: 679, column: 13, scope: !15275)
!15277 = !DILocation(line: 679, column: 6, scope: !15230)
!15278 = !DILocation(line: 680, column: 3, scope: !15279)
!15279 = distinct !DILexicalBlock(scope: !15275, file: !2464, line: 679, column: 26)
!15280 = !DILocation(line: 681, column: 2, scope: !15279)
!15281 = !DILocation(line: 684, column: 1, scope: !15230)
!15282 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14067, file: !14067, line: 52, type: !14454, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15283)
!15283 = !{!15284}
!15284 = !DILocalVariable(name: "thread", arg: 1, scope: !15282, file: !14067, line: 52, type: !2356)
!15285 = !DILocation(line: 0, scope: !15282)
!15286 = !DILocation(line: 54, column: 39, scope: !15282)
!15287 = !DILocation(line: 54, column: 9, scope: !15282)
!15288 = !DILocation(line: 54, column: 2, scope: !15282)
!15289 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13638, file: !13638, line: 141, type: !14436, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15290)
!15290 = !{!15291}
!15291 = !DILocalVariable(name: "thread", arg: 1, scope: !15289, file: !13638, line: 141, type: !2356)
!15292 = !DILocation(line: 0, scope: !15289)
!15293 = !DILocation(line: 143, column: 15, scope: !15289)
!15294 = !DILocation(line: 143, column: 28, scope: !15289)
!15295 = !DILocation(line: 146, column: 1, scope: !15289)
!15296 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13638, file: !13638, line: 73, type: !3089, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2166)
!15297 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15298)
!15298 = distinct !DILocation(line: 75, column: 30, scope: !15296)
!15299 = !DILocation(line: 0, scope: !14487, inlinedAt: !15298)
!15300 = !DILocation(line: 75, column: 9, scope: !15296)
!15301 = !DILocation(line: 76, column: 1, scope: !15296)
!15302 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2464, file: !2464, line: 977, type: !6353, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15303)
!15303 = !{!15304}
!15304 = !DILocalVariable(name: "key", arg: 1, scope: !15302, file: !2464, line: 977, type: !152)
!15305 = !DILocation(line: 0, scope: !15302)
!15306 = !DILocation(line: 979, column: 6, scope: !15307)
!15307 = distinct !DILexicalBlock(scope: !15302, file: !2464, line: 979, column: 6)
!15308 = !DILocation(line: 979, column: 6, scope: !15302)
!15309 = !DILocation(line: 980, column: 3, scope: !15310)
!15310 = distinct !DILexicalBlock(scope: !15307, file: !2464, line: 979, column: 20)
!15311 = !DILocation(line: 981, column: 2, scope: !15310)
!15312 = !DILocation(line: 0, scope: !14526, inlinedAt: !15313)
!15313 = distinct !DILocation(line: 982, column: 3, scope: !15314)
!15314 = distinct !DILexicalBlock(scope: !15307, file: !2464, line: 981, column: 9)
!15315 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15313)
!15316 = !DILocation(line: 985, column: 1, scope: !15302)
!15317 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2464, file: !2464, line: 695, type: !14436, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15318)
!15318 = !{!15319, !15320}
!15319 = !DILocalVariable(name: "thread", arg: 1, scope: !15317, file: !2464, line: 695, type: !2356)
!15320 = !DILocalVariable(name: "key", scope: !15317, file: !2464, line: 699, type: !14470)
!15321 = !DILocation(line: 0, scope: !15317)
!15322 = !DILocation(line: 0, scope: !14478, inlinedAt: !15323)
!15323 = distinct !DILocation(line: 699, column: 25, scope: !15317)
!15324 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15325)
!15325 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15323)
!15326 = !DILocation(line: 0, scope: !14487, inlinedAt: !15325)
!15327 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15323)
!15328 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15323)
!15329 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15323)
!15330 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15323)
!15331 = !DILocation(line: 702, column: 7, scope: !15332)
!15332 = distinct !DILexicalBlock(scope: !15317, file: !2464, line: 702, column: 6)
!15333 = !DILocation(line: 702, column: 6, scope: !15317)
!15334 = !DILocation(line: 0, scope: !14512, inlinedAt: !15335)
!15335 = distinct !DILocation(line: 703, column: 3, scope: !15336)
!15336 = distinct !DILexicalBlock(scope: !15332, file: !2464, line: 702, column: 38)
!15337 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15335)
!15338 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15335)
!15339 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15335)
!15340 = !DILocation(line: 0, scope: !14526, inlinedAt: !15341)
!15341 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15335)
!15342 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15341)
!15343 = !DILocation(line: 704, column: 3, scope: !15336)
!15344 = !DILocation(line: 707, column: 2, scope: !15317)
!15345 = !DILocation(line: 708, column: 2, scope: !15317)
!15346 = !DILocation(line: 710, column: 2, scope: !15317)
!15347 = !DILocation(line: 713, column: 1, scope: !15317)
!15348 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13638, file: !13638, line: 96, type: !14619, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15349)
!15349 = !{!15350}
!15350 = !DILocalVariable(name: "thread", arg: 1, scope: !15348, file: !13638, line: 96, type: !2356)
!15351 = !DILocation(line: 0, scope: !15348)
!15352 = !DILocation(line: 98, column: 23, scope: !15348)
!15353 = !DILocation(line: 98, column: 36, scope: !15348)
!15354 = !DILocation(line: 98, column: 57, scope: !15348)
!15355 = !DILocation(line: 98, column: 2, scope: !15348)
!15356 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13638, file: !13638, line: 148, type: !14436, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15357)
!15357 = !{!15358}
!15358 = !DILocalVariable(name: "thread", arg: 1, scope: !15356, file: !13638, line: 148, type: !2356)
!15359 = !DILocation(line: 0, scope: !15356)
!15360 = !DILocation(line: 150, column: 15, scope: !15356)
!15361 = !DILocation(line: 150, column: 28, scope: !15356)
!15362 = !DILocation(line: 153, column: 1, scope: !15356)
!15363 = distinct !DISubprogram(name: "z_pend_thread", scope: !2464, file: !2464, line: 770, type: !15364, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15370)
!15364 = !DISubroutineType(types: !15365)
!15365 = !{null, !2356, !2387, !15366}
!15366 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !15367)
!15367 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !15368)
!15368 = !{!15369}
!15369 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15367, file: !565, line: 66, baseType: !564, size: 64)
!15370 = !{!15371, !15372, !15373, !15374, !15376}
!15371 = !DILocalVariable(name: "thread", arg: 1, scope: !15363, file: !2464, line: 770, type: !2356)
!15372 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15363, file: !2464, line: 770, type: !2387)
!15373 = !DILocalVariable(name: "timeout", arg: 3, scope: !15363, file: !2464, line: 771, type: !15366)
!15374 = !DILocalVariable(name: "__i", scope: !15375, file: !2464, line: 774, type: !14470)
!15375 = distinct !DILexicalBlock(scope: !15363, file: !2464, line: 774, column: 2)
!15376 = !DILocalVariable(name: "__key", scope: !15375, file: !2464, line: 774, type: !14470)
!15377 = !DILocation(line: 0, scope: !15363)
!15378 = !DILocation(line: 773, column: 2, scope: !15379)
!15379 = distinct !DILexicalBlock(scope: !15380, file: !2464, line: 773, column: 2)
!15380 = distinct !DILexicalBlock(scope: !15363, file: !2464, line: 773, column: 2)
!15381 = !DILocation(line: 773, column: 2, scope: !15380)
!15382 = !DILocation(line: 773, column: 2, scope: !15383)
!15383 = distinct !DILexicalBlock(scope: !15379, file: !2464, line: 773, column: 2)
!15384 = !DILocation(line: 0, scope: !15375)
!15385 = !DILocation(line: 0, scope: !14478, inlinedAt: !15386)
!15386 = distinct !DILocation(line: 774, column: 2, scope: !15375)
!15387 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15388)
!15388 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15386)
!15389 = !DILocation(line: 0, scope: !14487, inlinedAt: !15388)
!15390 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15386)
!15391 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15386)
!15392 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15386)
!15393 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15386)
!15394 = !DILocation(line: 775, column: 3, scope: !15395)
!15395 = distinct !DILexicalBlock(scope: !15396, file: !2464, line: 774, column: 26)
!15396 = distinct !DILexicalBlock(scope: !15375, file: !2464, line: 774, column: 2)
!15397 = !DILocation(line: 0, scope: !14512, inlinedAt: !15398)
!15398 = distinct !DILocation(line: 774, column: 2, scope: !15396)
!15399 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15398)
!15400 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15398)
!15401 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15398)
!15402 = !DILocation(line: 0, scope: !14526, inlinedAt: !15403)
!15403 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15398)
!15404 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15403)
!15405 = !DILocation(line: 777, column: 1, scope: !15363)
!15406 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2464, file: !2464, line: 79, type: !14619, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15407)
!15407 = !{!15408}
!15408 = !DILocalVariable(name: "thread", arg: 1, scope: !15406, file: !2464, line: 79, type: !2356)
!15409 = !DILocation(line: 0, scope: !15406)
!15410 = !DILocation(line: 81, column: 23, scope: !15406)
!15411 = !DILocation(line: 81, column: 36, scope: !15406)
!15412 = !DILocation(line: 81, column: 53, scope: !15406)
!15413 = !DILocation(line: 81, column: 2, scope: !15406)
!15414 = distinct !DISubprogram(name: "pend_locked", scope: !2464, file: !2464, line: 760, type: !15364, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15415)
!15415 = !{!15416, !15417, !15418}
!15416 = !DILocalVariable(name: "thread", arg: 1, scope: !15414, file: !2464, line: 760, type: !2356)
!15417 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15414, file: !2464, line: 760, type: !2387)
!15418 = !DILocalVariable(name: "timeout", arg: 3, scope: !15414, file: !2464, line: 761, type: !15366)
!15419 = !DILocation(line: 0, scope: !15414)
!15420 = !DILocation(line: 766, column: 2, scope: !15414)
!15421 = !DILocation(line: 767, column: 2, scope: !15414)
!15422 = !DILocation(line: 768, column: 1, scope: !15414)
!15423 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2464, file: !2464, line: 740, type: !15424, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15426)
!15424 = !DISubroutineType(types: !15425)
!15425 = !{null, !2356, !2387}
!15426 = !{!15427, !15428}
!15427 = !DILocalVariable(name: "thread", arg: 1, scope: !15423, file: !2464, line: 740, type: !2356)
!15428 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15423, file: !2464, line: 740, type: !2387)
!15429 = !DILocation(line: 0, scope: !15423)
!15430 = !DILocation(line: 742, column: 2, scope: !15423)
!15431 = !DILocation(line: 743, column: 2, scope: !15423)
!15432 = !DILocation(line: 747, column: 13, scope: !15433)
!15433 = distinct !DILexicalBlock(scope: !15423, file: !2464, line: 747, column: 6)
!15434 = !DILocation(line: 747, column: 6, scope: !15423)
!15435 = !DILocation(line: 748, column: 16, scope: !15436)
!15436 = distinct !DILexicalBlock(scope: !15433, file: !2464, line: 747, column: 22)
!15437 = !DILocation(line: 748, column: 26, scope: !15436)
!15438 = !DILocation(line: 749, column: 28, scope: !15436)
!15439 = !DILocation(line: 0, scope: !14701, inlinedAt: !15440)
!15440 = distinct !DILocation(line: 749, column: 3, scope: !15436)
!15441 = !DILocation(line: 186, column: 2, scope: !14711, inlinedAt: !15440)
!15442 = !DILocation(line: 186, column: 2, scope: !14712, inlinedAt: !15440)
!15443 = !DILocation(line: 186, column: 2, scope: !14715, inlinedAt: !15440)
!15444 = !DILocation(line: 188, column: 2, scope: !14717, inlinedAt: !15440)
!15445 = !DILocation(line: 188, column: 2, scope: !14719, inlinedAt: !15440)
!15446 = !DILocation(line: 0, scope: !14717, inlinedAt: !15440)
!15447 = !DILocation(line: 189, column: 7, scope: !14722, inlinedAt: !15440)
!15448 = !DILocation(line: 189, column: 35, scope: !14722, inlinedAt: !15440)
!15449 = !DILocation(line: 189, column: 7, scope: !14723, inlinedAt: !15440)
!15450 = !DILocation(line: 191, column: 21, scope: !14727, inlinedAt: !15440)
!15451 = !DILocation(line: 190, column: 4, scope: !14727, inlinedAt: !15440)
!15452 = !DILocation(line: 192, column: 4, scope: !14727, inlinedAt: !15440)
!15453 = distinct !{!15453, !15444, !15454}
!15454 = !DILocation(line: 194, column: 2, scope: !14717, inlinedAt: !15440)
!15455 = !DILocation(line: 196, column: 37, scope: !14701, inlinedAt: !15440)
!15456 = !DILocation(line: 196, column: 2, scope: !14701, inlinedAt: !15440)
!15457 = !DILocation(line: 197, column: 1, scope: !14701, inlinedAt: !15440)
!15458 = !DILocation(line: 751, column: 1, scope: !15423)
!15459 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2464, file: !2464, line: 753, type: !15460, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15462)
!15460 = !DISubroutineType(types: !15461)
!15461 = !{null, !2356, !15366}
!15462 = !{!15463, !15464}
!15463 = !DILocalVariable(name: "thread", arg: 1, scope: !15459, file: !2464, line: 753, type: !2356)
!15464 = !DILocalVariable(name: "timeout", arg: 2, scope: !15459, file: !2464, line: 753, type: !15366)
!15465 = !DILocation(line: 0, scope: !15459)
!15466 = !DILocation(line: 755, column: 7, scope: !15467)
!15467 = distinct !DILexicalBlock(scope: !15459, file: !2464, line: 755, column: 6)
!15468 = !DILocation(line: 755, column: 6, scope: !15459)
!15469 = !DILocation(line: 756, column: 3, scope: !15470)
!15470 = distinct !DILexicalBlock(scope: !15467, file: !2464, line: 755, column: 41)
!15471 = !DILocation(line: 757, column: 2, scope: !15470)
!15472 = !DILocation(line: 758, column: 1, scope: !15459)
!15473 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14067, file: !14067, line: 47, type: !15460, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15474)
!15474 = !{!15475, !15476}
!15475 = !DILocalVariable(name: "thread", arg: 1, scope: !15473, file: !14067, line: 47, type: !2356)
!15476 = !DILocalVariable(name: "ticks", arg: 2, scope: !15473, file: !14067, line: 47, type: !15366)
!15477 = !DILocation(line: 0, scope: !15473)
!15478 = !DILocation(line: 49, column: 30, scope: !15473)
!15479 = !DILocation(line: 49, column: 2, scope: !15473)
!15480 = !DILocation(line: 50, column: 1, scope: !15473)
!15481 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2464, file: !2464, line: 795, type: !2413, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15482)
!15482 = !{!15483, !15484, !15485, !15487, !15488}
!15483 = !DILocalVariable(name: "timeout", arg: 1, scope: !15481, file: !2464, line: 795, type: !2415)
!15484 = !DILocalVariable(name: "thread", scope: !15481, file: !2464, line: 797, type: !2356)
!15485 = !DILocalVariable(name: "__i", scope: !15486, file: !2464, line: 800, type: !14470)
!15486 = distinct !DILexicalBlock(scope: !15481, file: !2464, line: 800, column: 2)
!15487 = !DILocalVariable(name: "__key", scope: !15486, file: !2464, line: 800, type: !14470)
!15488 = !DILocalVariable(name: "killed", scope: !15489, file: !2464, line: 801, type: !145)
!15489 = distinct !DILexicalBlock(scope: !15490, file: !2464, line: 800, column: 26)
!15490 = distinct !DILexicalBlock(scope: !15486, file: !2464, line: 800, column: 2)
!15491 = !DILocation(line: 0, scope: !15481)
!15492 = !DILocation(line: 797, column: 28, scope: !15481)
!15493 = !DILocation(line: 0, scope: !15486)
!15494 = !DILocation(line: 0, scope: !14478, inlinedAt: !15495)
!15495 = distinct !DILocation(line: 800, column: 2, scope: !15486)
!15496 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15497)
!15497 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15495)
!15498 = !DILocation(line: 0, scope: !14487, inlinedAt: !15497)
!15499 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15495)
!15500 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15495)
!15501 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15495)
!15502 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15495)
!15503 = !DILocation(line: 801, column: 27, scope: !15489)
!15504 = !DILocation(line: 801, column: 32, scope: !15489)
!15505 = !DILocation(line: 801, column: 61, scope: !15489)
!15506 = !DILocation(line: 0, scope: !15489)
!15507 = !DILocation(line: 804, column: 7, scope: !15489)
!15508 = !DILocation(line: 805, column: 21, scope: !15509)
!15509 = distinct !DILexicalBlock(scope: !15510, file: !2464, line: 805, column: 8)
!15510 = distinct !DILexicalBlock(scope: !15511, file: !2464, line: 804, column: 16)
!15511 = distinct !DILexicalBlock(scope: !15489, file: !2464, line: 804, column: 7)
!15512 = !DILocation(line: 805, column: 31, scope: !15509)
!15513 = !DILocation(line: 805, column: 8, scope: !15510)
!15514 = !DILocation(line: 806, column: 5, scope: !15515)
!15515 = distinct !DILexicalBlock(scope: !15509, file: !2464, line: 805, column: 40)
!15516 = !DILocation(line: 807, column: 4, scope: !15515)
!15517 = !DILocation(line: 808, column: 4, scope: !15510)
!15518 = !DILocation(line: 809, column: 4, scope: !15510)
!15519 = !DILocation(line: 810, column: 4, scope: !15510)
!15520 = !DILocation(line: 811, column: 3, scope: !15510)
!15521 = !DILocation(line: 0, scope: !14512, inlinedAt: !15522)
!15522 = distinct !DILocation(line: 800, column: 2, scope: !15490)
!15523 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15522)
!15524 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15522)
!15525 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15522)
!15526 = !DILocation(line: 0, scope: !14526, inlinedAt: !15527)
!15527 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15522)
!15528 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15527)
!15529 = !DILocation(line: 813, column: 1, scope: !15481)
!15530 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2464, file: !2464, line: 779, type: !14436, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15531)
!15531 = !{!15532}
!15532 = !DILocalVariable(name: "thread", arg: 1, scope: !15530, file: !2464, line: 779, type: !2356)
!15533 = !DILocation(line: 0, scope: !15530)
!15534 = !DILocation(line: 781, column: 21, scope: !15530)
!15535 = !DILocation(line: 781, column: 2, scope: !15530)
!15536 = !DILocation(line: 782, column: 2, scope: !15530)
!15537 = !DILocation(line: 783, column: 15, scope: !15530)
!15538 = !DILocation(line: 783, column: 25, scope: !15530)
!15539 = !DILocation(line: 784, column: 1, scope: !15530)
!15540 = distinct !DISubprogram(name: "pended_on_thread", scope: !2464, file: !2464, line: 724, type: !15541, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15543)
!15541 = !DISubroutineType(types: !15542)
!15542 = !{!2387, !2356}
!15543 = !{!15544}
!15544 = !DILocalVariable(name: "thread", arg: 1, scope: !15540, file: !2464, line: 724, type: !2356)
!15545 = !DILocation(line: 0, scope: !15540)
!15546 = !DILocation(line: 726, column: 2, scope: !15547)
!15547 = distinct !DILexicalBlock(scope: !15548, file: !2464, line: 726, column: 2)
!15548 = distinct !DILexicalBlock(scope: !15540, file: !2464, line: 726, column: 2)
!15549 = !DILocation(line: 726, column: 2, scope: !15548)
!15550 = !DILocation(line: 726, column: 2, scope: !15551)
!15551 = distinct !DILexicalBlock(scope: !15547, file: !2464, line: 726, column: 2)
!15552 = !DILocation(line: 728, column: 2, scope: !15540)
!15553 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13638, file: !13638, line: 165, type: !14436, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15554)
!15554 = !{!15555}
!15555 = !DILocalVariable(name: "thread", arg: 1, scope: !15553, file: !13638, line: 165, type: !2356)
!15556 = !DILocation(line: 0, scope: !15553)
!15557 = !DILocation(line: 167, column: 15, scope: !15553)
!15558 = !DILocation(line: 167, column: 28, scope: !15553)
!15559 = !DILocation(line: 168, column: 1, scope: !15553)
!15560 = distinct !DISubprogram(name: "unready_thread", scope: !2464, file: !2464, line: 731, type: !14436, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15561)
!15561 = !{!15562}
!15562 = !DILocalVariable(name: "thread", arg: 1, scope: !15560, file: !2464, line: 731, type: !2356)
!15563 = !DILocation(line: 0, scope: !15560)
!15564 = !DILocation(line: 733, column: 6, scope: !15565)
!15565 = distinct !DILexicalBlock(scope: !15560, file: !2464, line: 733, column: 6)
!15566 = !DILocation(line: 733, column: 6, scope: !15560)
!15567 = !DILocation(line: 0, scope: !14670, inlinedAt: !15568)
!15568 = distinct !DILocation(line: 734, column: 3, scope: !15569)
!15569 = distinct !DILexicalBlock(scope: !15565, file: !2464, line: 733, column: 34)
!15570 = !DILocation(line: 266, column: 15, scope: !14670, inlinedAt: !15568)
!15571 = !DILocation(line: 266, column: 28, scope: !14670, inlinedAt: !15568)
!15572 = !DILocation(line: 0, scope: !14678, inlinedAt: !15573)
!15573 = distinct !DILocation(line: 268, column: 3, scope: !14682, inlinedAt: !15568)
!15574 = !DILocation(line: 234, column: 2, scope: !14678, inlinedAt: !15573)
!15575 = !DILocation(line: 735, column: 2, scope: !15569)
!15576 = !DILocation(line: 736, column: 25, scope: !15560)
!15577 = !DILocation(line: 736, column: 22, scope: !15560)
!15578 = !DILocation(line: 736, column: 2, scope: !15560)
!15579 = !DILocation(line: 737, column: 1, scope: !15560)
!15580 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13638, file: !13638, line: 160, type: !14436, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15581)
!15581 = !{!15582}
!15582 = !DILocalVariable(name: "thread", arg: 1, scope: !15580, file: !13638, line: 160, type: !2356)
!15583 = !DILocation(line: 0, scope: !15580)
!15584 = !DILocation(line: 162, column: 15, scope: !15580)
!15585 = !DILocation(line: 162, column: 28, scope: !15580)
!15586 = !DILocation(line: 163, column: 1, scope: !15580)
!15587 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2464, file: !2464, line: 786, type: !14436, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15588)
!15588 = !{!15589, !15590, !15592}
!15589 = !DILocalVariable(name: "thread", arg: 1, scope: !15587, file: !2464, line: 786, type: !2356)
!15590 = !DILocalVariable(name: "__i", scope: !15591, file: !2464, line: 788, type: !14470)
!15591 = distinct !DILexicalBlock(scope: !15587, file: !2464, line: 788, column: 2)
!15592 = !DILocalVariable(name: "__key", scope: !15591, file: !2464, line: 788, type: !14470)
!15593 = !DILocation(line: 0, scope: !15587)
!15594 = !DILocation(line: 0, scope: !15591)
!15595 = !DILocation(line: 0, scope: !14478, inlinedAt: !15596)
!15596 = distinct !DILocation(line: 788, column: 2, scope: !15591)
!15597 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15598)
!15598 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15596)
!15599 = !DILocation(line: 0, scope: !14487, inlinedAt: !15598)
!15600 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15596)
!15601 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15596)
!15602 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15596)
!15603 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15596)
!15604 = !DILocation(line: 789, column: 3, scope: !15605)
!15605 = distinct !DILexicalBlock(scope: !15606, file: !2464, line: 788, column: 26)
!15606 = distinct !DILexicalBlock(scope: !15591, file: !2464, line: 788, column: 2)
!15607 = !DILocation(line: 0, scope: !14512, inlinedAt: !15608)
!15608 = distinct !DILocation(line: 788, column: 2, scope: !15606)
!15609 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15608)
!15610 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15608)
!15611 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15608)
!15612 = !DILocation(line: 0, scope: !14526, inlinedAt: !15613)
!15613 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15608)
!15614 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15613)
!15615 = !DILocation(line: 791, column: 1, scope: !15587)
!15616 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2464, file: !2464, line: 816, type: !15617, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15619)
!15617 = !DISubroutineType(types: !15618)
!15618 = !{!107, !152, !2387, !15366}
!15619 = !{!15620, !15621, !15622, !15623, !15624, !15626}
!15620 = !DILocalVariable(name: "key", arg: 1, scope: !15616, file: !2464, line: 816, type: !152)
!15621 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15616, file: !2464, line: 816, type: !2387)
!15622 = !DILocalVariable(name: "timeout", arg: 3, scope: !15616, file: !2464, line: 816, type: !15366)
!15623 = !DILocalVariable(name: "ret", scope: !15616, file: !2464, line: 828, type: !107)
!15624 = !DILocalVariable(name: "__i", scope: !15625, file: !2464, line: 829, type: !14470)
!15625 = distinct !DILexicalBlock(scope: !15616, file: !2464, line: 829, column: 2)
!15626 = !DILocalVariable(name: "__key", scope: !15625, file: !2464, line: 829, type: !14470)
!15627 = !DILocation(line: 0, scope: !15616)
!15628 = !DILocation(line: 823, column: 14, scope: !15616)
!15629 = !DILocation(line: 823, column: 2, scope: !15616)
!15630 = !DILocation(line: 826, column: 20, scope: !15616)
!15631 = !DILocation(line: 826, column: 18, scope: !15616)
!15632 = !DILocation(line: 828, column: 12, scope: !15616)
!15633 = !DILocation(line: 0, scope: !15625)
!15634 = !DILocation(line: 0, scope: !14478, inlinedAt: !15635)
!15635 = distinct !DILocation(line: 829, column: 2, scope: !15625)
!15636 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15637)
!15637 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15635)
!15638 = !DILocation(line: 0, scope: !14487, inlinedAt: !15637)
!15639 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15635)
!15640 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15635)
!15641 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15635)
!15642 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15635)
!15643 = !DILocation(line: 830, column: 7, scope: !15644)
!15644 = distinct !DILexicalBlock(scope: !15645, file: !2464, line: 830, column: 7)
!15645 = distinct !DILexicalBlock(scope: !15646, file: !2464, line: 829, column: 26)
!15646 = distinct !DILexicalBlock(scope: !15625, file: !2464, line: 829, column: 2)
!15647 = !DILocation(line: 830, column: 26, scope: !15644)
!15648 = !DILocation(line: 830, column: 23, scope: !15644)
!15649 = !DILocation(line: 830, column: 7, scope: !15645)
!15650 = !DILocation(line: 831, column: 20, scope: !15651)
!15651 = distinct !DILexicalBlock(scope: !15644, file: !2464, line: 830, column: 36)
!15652 = !DILocation(line: 832, column: 3, scope: !15651)
!15653 = !DILocation(line: 0, scope: !14512, inlinedAt: !15654)
!15654 = distinct !DILocation(line: 829, column: 2, scope: !15646)
!15655 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15654)
!15656 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15654)
!15657 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15654)
!15658 = !DILocation(line: 0, scope: !14526, inlinedAt: !15659)
!15659 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15654)
!15660 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15659)
!15661 = !DILocation(line: 834, column: 2, scope: !15616)
!15662 = distinct !DISubprogram(name: "z_pend_curr", scope: !2464, file: !2464, line: 840, type: !15663, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15665)
!15663 = !DISubroutineType(types: !15664)
!15664 = !{!107, !14481, !14470, !2387, !15366}
!15665 = !{!15666, !15667, !15668, !15669}
!15666 = !DILocalVariable(name: "lock", arg: 1, scope: !15662, file: !2464, line: 840, type: !14481)
!15667 = !DILocalVariable(name: "key", arg: 2, scope: !15662, file: !2464, line: 840, type: !14470)
!15668 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15662, file: !2464, line: 841, type: !2387)
!15669 = !DILocalVariable(name: "timeout", arg: 4, scope: !15662, file: !2464, line: 841, type: !15366)
!15670 = !DILocation(line: 0, scope: !15662)
!15671 = !DILocation(line: 844, column: 20, scope: !15662)
!15672 = !DILocation(line: 844, column: 18, scope: !15662)
!15673 = !DILocation(line: 846, column: 2, scope: !15674)
!15674 = distinct !DILexicalBlock(scope: !15675, file: !2464, line: 846, column: 2)
!15675 = distinct !DILexicalBlock(scope: !15662, file: !2464, line: 846, column: 2)
!15676 = !DILocation(line: 846, column: 2, scope: !15675)
!15677 = !DILocation(line: 846, column: 2, scope: !15678)
!15678 = distinct !DILexicalBlock(scope: !15674, file: !2464, line: 846, column: 2)
!15679 = !DILocation(line: 0, scope: !14478, inlinedAt: !15680)
!15680 = distinct !DILocation(line: 856, column: 9, scope: !15662)
!15681 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15682)
!15682 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15680)
!15683 = !DILocation(line: 0, scope: !14487, inlinedAt: !15682)
!15684 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15680)
!15685 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15680)
!15686 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15680)
!15687 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15680)
!15688 = !DILocation(line: 857, column: 14, scope: !15662)
!15689 = !DILocation(line: 857, column: 2, scope: !15662)
!15690 = !DILocation(line: 0, scope: !15165, inlinedAt: !15691)
!15691 = distinct !DILocation(line: 858, column: 2, scope: !15662)
!15692 = !DILocation(line: 225, column: 2, scope: !15172, inlinedAt: !15691)
!15693 = !DILocation(line: 225, column: 2, scope: !15173, inlinedAt: !15691)
!15694 = !DILocation(line: 225, column: 2, scope: !15176, inlinedAt: !15691)
!15695 = !DILocation(line: 0, scope: !15156, inlinedAt: !15696)
!15696 = distinct !DILocation(line: 859, column: 9, scope: !15662)
!15697 = !DILocation(line: 0, scope: !15165, inlinedAt: !15698)
!15698 = distinct !DILocation(line: 195, column: 2, scope: !15156, inlinedAt: !15696)
!15699 = !DILocation(line: 225, column: 2, scope: !15172, inlinedAt: !15698)
!15700 = !DILocation(line: 225, column: 2, scope: !15173, inlinedAt: !15698)
!15701 = !DILocation(line: 225, column: 2, scope: !15176, inlinedAt: !15698)
!15702 = !DILocation(line: 196, column: 9, scope: !15156, inlinedAt: !15696)
!15703 = !DILocation(line: 859, column: 2, scope: !15662)
!15704 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2464, file: !2464, line: 862, type: !15705, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15707)
!15705 = !DISubroutineType(types: !15706)
!15706 = !{!2356, !2387}
!15707 = !{!15708, !15709, !15710, !15712}
!15708 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15704, file: !2464, line: 862, type: !2387)
!15709 = !DILocalVariable(name: "thread", scope: !15704, file: !2464, line: 864, type: !2356)
!15710 = !DILocalVariable(name: "__i", scope: !15711, file: !2464, line: 866, type: !14470)
!15711 = distinct !DILexicalBlock(scope: !15704, file: !2464, line: 866, column: 2)
!15712 = !DILocalVariable(name: "__key", scope: !15711, file: !2464, line: 866, type: !14470)
!15713 = !DILocation(line: 0, scope: !15704)
!15714 = !DILocation(line: 0, scope: !15711)
!15715 = !DILocation(line: 0, scope: !14478, inlinedAt: !15716)
!15716 = distinct !DILocation(line: 866, column: 2, scope: !15711)
!15717 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15718)
!15718 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15716)
!15719 = !DILocation(line: 0, scope: !14487, inlinedAt: !15718)
!15720 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15716)
!15721 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15716)
!15722 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15716)
!15723 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15716)
!15724 = !DILocation(line: 867, column: 12, scope: !15725)
!15725 = distinct !DILexicalBlock(scope: !15726, file: !2464, line: 866, column: 26)
!15726 = distinct !DILexicalBlock(scope: !15711, file: !2464, line: 866, column: 2)
!15727 = !DILocation(line: 869, column: 14, scope: !15728)
!15728 = distinct !DILexicalBlock(scope: !15725, file: !2464, line: 869, column: 7)
!15729 = !DILocation(line: 869, column: 7, scope: !15725)
!15730 = !DILocation(line: 870, column: 4, scope: !15731)
!15731 = distinct !DILexicalBlock(scope: !15728, file: !2464, line: 869, column: 23)
!15732 = !DILocation(line: 871, column: 3, scope: !15731)
!15733 = !DILocation(line: 0, scope: !14512, inlinedAt: !15734)
!15734 = distinct !DILocation(line: 866, column: 2, scope: !15726)
!15735 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15734)
!15736 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15734)
!15737 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15734)
!15738 = !DILocation(line: 0, scope: !14526, inlinedAt: !15739)
!15739 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15734)
!15740 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15739)
!15741 = !DILocation(line: 874, column: 2, scope: !15704)
!15742 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2464, file: !2464, line: 877, type: !15705, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15743)
!15743 = !{!15744, !15745, !15746, !15748}
!15744 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15742, file: !2464, line: 877, type: !2387)
!15745 = !DILocalVariable(name: "thread", scope: !15742, file: !2464, line: 879, type: !2356)
!15746 = !DILocalVariable(name: "__i", scope: !15747, file: !2464, line: 881, type: !14470)
!15747 = distinct !DILexicalBlock(scope: !15742, file: !2464, line: 881, column: 2)
!15748 = !DILocalVariable(name: "__key", scope: !15747, file: !2464, line: 881, type: !14470)
!15749 = !DILocation(line: 0, scope: !15742)
!15750 = !DILocation(line: 0, scope: !15747)
!15751 = !DILocation(line: 0, scope: !14478, inlinedAt: !15752)
!15752 = distinct !DILocation(line: 881, column: 2, scope: !15747)
!15753 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15754)
!15754 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15752)
!15755 = !DILocation(line: 0, scope: !14487, inlinedAt: !15754)
!15756 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15752)
!15757 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15752)
!15758 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15752)
!15759 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15752)
!15760 = !DILocation(line: 882, column: 12, scope: !15761)
!15761 = distinct !DILexicalBlock(scope: !15762, file: !2464, line: 881, column: 26)
!15762 = distinct !DILexicalBlock(scope: !15747, file: !2464, line: 881, column: 2)
!15763 = !DILocation(line: 884, column: 14, scope: !15764)
!15764 = distinct !DILexicalBlock(scope: !15761, file: !2464, line: 884, column: 7)
!15765 = !DILocation(line: 884, column: 7, scope: !15761)
!15766 = !DILocation(line: 885, column: 4, scope: !15767)
!15767 = distinct !DILexicalBlock(scope: !15764, file: !2464, line: 884, column: 23)
!15768 = !DILocation(line: 886, column: 10, scope: !15767)
!15769 = !DILocation(line: 887, column: 3, scope: !15767)
!15770 = !DILocation(line: 0, scope: !14512, inlinedAt: !15771)
!15771 = distinct !DILocation(line: 881, column: 2, scope: !15762)
!15772 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15771)
!15773 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15771)
!15774 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15771)
!15775 = !DILocation(line: 0, scope: !14526, inlinedAt: !15776)
!15776 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15771)
!15777 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15776)
!15778 = !DILocation(line: 890, column: 2, scope: !15742)
!15779 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2464, file: !2464, line: 893, type: !14436, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15780)
!15780 = !{!15781}
!15781 = !DILocalVariable(name: "thread", arg: 1, scope: !15779, file: !2464, line: 893, type: !2356)
!15782 = !DILocation(line: 0, scope: !15779)
!15783 = !DILocation(line: 0, scope: !15587, inlinedAt: !15784)
!15784 = distinct !DILocation(line: 895, column: 2, scope: !15779)
!15785 = !DILocation(line: 0, scope: !15591, inlinedAt: !15784)
!15786 = !DILocation(line: 0, scope: !14478, inlinedAt: !15787)
!15787 = distinct !DILocation(line: 788, column: 2, scope: !15591, inlinedAt: !15784)
!15788 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15789)
!15789 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15787)
!15790 = !DILocation(line: 0, scope: !14487, inlinedAt: !15789)
!15791 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15787)
!15792 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15787)
!15793 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15787)
!15794 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15787)
!15795 = !DILocation(line: 789, column: 3, scope: !15605, inlinedAt: !15784)
!15796 = !DILocation(line: 0, scope: !14512, inlinedAt: !15797)
!15797 = distinct !DILocation(line: 788, column: 2, scope: !15606, inlinedAt: !15784)
!15798 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15797)
!15799 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15797)
!15800 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15797)
!15801 = !DILocation(line: 0, scope: !14526, inlinedAt: !15802)
!15802 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15797)
!15803 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15802)
!15804 = !DILocation(line: 896, column: 8, scope: !15779)
!15805 = !DILocation(line: 897, column: 1, scope: !15779)
!15806 = distinct !DISubprogram(name: "z_set_prio", scope: !2464, file: !2464, line: 902, type: !14839, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15807)
!15807 = !{!15808, !15809, !15810, !15811, !15813}
!15808 = !DILocalVariable(name: "thread", arg: 1, scope: !15806, file: !2464, line: 902, type: !2356)
!15809 = !DILocalVariable(name: "prio", arg: 2, scope: !15806, file: !2464, line: 902, type: !107)
!15810 = !DILocalVariable(name: "need_sched", scope: !15806, file: !2464, line: 904, type: !145)
!15811 = !DILocalVariable(name: "__i", scope: !15812, file: !2464, line: 906, type: !14470)
!15812 = distinct !DILexicalBlock(scope: !15806, file: !2464, line: 906, column: 2)
!15813 = !DILocalVariable(name: "__key", scope: !15812, file: !2464, line: 906, type: !14470)
!15814 = !DILocation(line: 0, scope: !15806)
!15815 = !DILocation(line: 0, scope: !15812)
!15816 = !DILocation(line: 0, scope: !14478, inlinedAt: !15817)
!15817 = distinct !DILocation(line: 906, column: 2, scope: !15812)
!15818 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15819)
!15819 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15817)
!15820 = !DILocation(line: 0, scope: !14487, inlinedAt: !15819)
!15821 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15817)
!15822 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15817)
!15823 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15817)
!15824 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15817)
!15825 = !DILocation(line: 907, column: 16, scope: !15826)
!15826 = distinct !DILexicalBlock(scope: !15827, file: !2464, line: 906, column: 26)
!15827 = distinct !DILexicalBlock(scope: !15812, file: !2464, line: 906, column: 2)
!15828 = !DILocation(line: 909, column: 7, scope: !15826)
!15829 = !DILocation(line: 0, scope: !14670, inlinedAt: !15830)
!15830 = distinct !DILocation(line: 912, column: 5, scope: !15831)
!15831 = distinct !DILexicalBlock(scope: !15832, file: !2464, line: 911, column: 63)
!15832 = distinct !DILexicalBlock(scope: !15833, file: !2464, line: 911, column: 8)
!15833 = distinct !DILexicalBlock(scope: !15834, file: !2464, line: 909, column: 19)
!15834 = distinct !DILexicalBlock(scope: !15826, file: !2464, line: 909, column: 7)
!15835 = !DILocation(line: 266, column: 28, scope: !14670, inlinedAt: !15830)
!15836 = !DILocation(line: 0, scope: !14678, inlinedAt: !15837)
!15837 = distinct !DILocation(line: 268, column: 3, scope: !14682, inlinedAt: !15830)
!15838 = !DILocation(line: 234, column: 2, scope: !14678, inlinedAt: !15837)
!15839 = !DILocation(line: 913, column: 23, scope: !15831)
!15840 = !DILocation(line: 0, scope: !14687, inlinedAt: !15841)
!15841 = distinct !DILocation(line: 914, column: 5, scope: !15831)
!15842 = !DILocation(line: 252, column: 28, scope: !14687, inlinedAt: !15841)
!15843 = !DILocation(line: 0, scope: !14694, inlinedAt: !15844)
!15844 = distinct !DILocation(line: 254, column: 3, scope: !14698, inlinedAt: !15841)
!15845 = !DILocation(line: 0, scope: !14701, inlinedAt: !15846)
!15846 = distinct !DILocation(line: 229, column: 2, scope: !14694, inlinedAt: !15844)
!15847 = !DILocation(line: 186, column: 2, scope: !14711, inlinedAt: !15846)
!15848 = !DILocation(line: 186, column: 2, scope: !14712, inlinedAt: !15846)
!15849 = !DILocation(line: 186, column: 2, scope: !14715, inlinedAt: !15846)
!15850 = !DILocation(line: 188, column: 2, scope: !14717, inlinedAt: !15846)
!15851 = !DILocation(line: 188, column: 2, scope: !14719, inlinedAt: !15846)
!15852 = !DILocation(line: 0, scope: !14717, inlinedAt: !15846)
!15853 = !DILocation(line: 189, column: 7, scope: !14722, inlinedAt: !15846)
!15854 = !DILocation(line: 189, column: 35, scope: !14722, inlinedAt: !15846)
!15855 = !DILocation(line: 189, column: 7, scope: !14723, inlinedAt: !15846)
!15856 = !DILocation(line: 190, column: 4, scope: !14727, inlinedAt: !15846)
!15857 = !DILocation(line: 192, column: 4, scope: !14727, inlinedAt: !15846)
!15858 = distinct !{!15858, !15850, !15859}
!15859 = !DILocation(line: 194, column: 2, scope: !14717, inlinedAt: !15846)
!15860 = !DILocation(line: 196, column: 2, scope: !14701, inlinedAt: !15846)
!15861 = !DILocation(line: 197, column: 1, scope: !14701, inlinedAt: !15846)
!15862 = !DILocation(line: 918, column: 4, scope: !15833)
!15863 = !DILocation(line: 919, column: 3, scope: !15833)
!15864 = !DILocation(line: 920, column: 22, scope: !15865)
!15865 = distinct !DILexicalBlock(scope: !15834, file: !2464, line: 919, column: 10)
!15866 = !DILocation(line: 0, scope: !14512, inlinedAt: !15867)
!15867 = distinct !DILocation(line: 906, column: 2, scope: !15827)
!15868 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15867)
!15869 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15867)
!15870 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15867)
!15871 = !DILocation(line: 0, scope: !14526, inlinedAt: !15872)
!15872 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15867)
!15873 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15872)
!15874 = !DILocation(line: 926, column: 2, scope: !15806)
!15875 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2464, file: !2464, line: 929, type: !15876, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15878)
!15876 = !DISubroutineType(types: !15877)
!15877 = !{null, !2356, !107}
!15878 = !{!15879, !15880, !15881}
!15879 = !DILocalVariable(name: "thread", arg: 1, scope: !15875, file: !2464, line: 929, type: !2356)
!15880 = !DILocalVariable(name: "prio", arg: 2, scope: !15875, file: !2464, line: 929, type: !107)
!15881 = !DILocalVariable(name: "need_sched", scope: !15875, file: !2464, line: 931, type: !145)
!15882 = !DILocation(line: 0, scope: !15875)
!15883 = !DILocation(line: 931, column: 20, scope: !15875)
!15884 = !DILocation(line: 935, column: 17, scope: !15885)
!15885 = distinct !DILexicalBlock(scope: !15875, file: !2464, line: 935, column: 6)
!15886 = !DILocation(line: 935, column: 20, scope: !15885)
!15887 = !DILocation(line: 935, column: 35, scope: !15885)
!15888 = !DILocation(line: 935, column: 48, scope: !15885)
!15889 = !DILocation(line: 935, column: 6, scope: !15875)
!15890 = !DILocation(line: 936, column: 3, scope: !15891)
!15891 = distinct !DILexicalBlock(scope: !15885, file: !2464, line: 935, column: 55)
!15892 = !DILocation(line: 937, column: 2, scope: !15891)
!15893 = !DILocation(line: 938, column: 1, scope: !15875)
!15894 = distinct !DISubprogram(name: "k_sched_lock", scope: !2464, file: !2464, line: 987, type: !3089, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15895)
!15895 = !{!15896, !15898}
!15896 = !DILocalVariable(name: "__i", scope: !15897, file: !2464, line: 989, type: !14470)
!15897 = distinct !DILexicalBlock(scope: !15894, file: !2464, line: 989, column: 2)
!15898 = !DILocalVariable(name: "__key", scope: !15897, file: !2464, line: 989, type: !14470)
!15899 = !DILocation(line: 0, scope: !15897)
!15900 = !DILocation(line: 0, scope: !14478, inlinedAt: !15901)
!15901 = distinct !DILocation(line: 989, column: 2, scope: !15897)
!15902 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15903)
!15903 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15901)
!15904 = !DILocation(line: 0, scope: !14487, inlinedAt: !15903)
!15905 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15901)
!15906 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15901)
!15907 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15901)
!15908 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15901)
!15909 = !DILocation(line: 992, column: 3, scope: !15910)
!15910 = distinct !DILexicalBlock(scope: !15911, file: !2464, line: 989, column: 26)
!15911 = distinct !DILexicalBlock(scope: !15897, file: !2464, line: 989, column: 2)
!15912 = !DILocation(line: 0, scope: !14512, inlinedAt: !15913)
!15913 = distinct !DILocation(line: 989, column: 2, scope: !15911)
!15914 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15913)
!15915 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15913)
!15916 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15913)
!15917 = !DILocation(line: 0, scope: !14526, inlinedAt: !15918)
!15918 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15913)
!15919 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15918)
!15920 = !DILocation(line: 994, column: 1, scope: !15894)
!15921 = distinct !DISubprogram(name: "z_sched_lock", scope: !13638, file: !13638, line: 251, type: !3089, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2166)
!15922 = !DILocation(line: 1031, column: 3, scope: !15205, inlinedAt: !15923)
!15923 = distinct !DILocation(line: 48, column: 10, scope: !15209, inlinedAt: !15924)
!15924 = distinct !DILocation(line: 253, column: 2, scope: !15925)
!15925 = distinct !DILexicalBlock(scope: !15926, file: !13638, line: 253, column: 2)
!15926 = distinct !DILexicalBlock(scope: !15921, file: !13638, line: 253, column: 2)
!15927 = !DILocation(line: 0, scope: !15205, inlinedAt: !15923)
!15928 = !DILocation(line: 48, column: 9, scope: !15209, inlinedAt: !15924)
!15929 = !DILocation(line: 253, column: 2, scope: !15926)
!15930 = !DILocation(line: 253, column: 2, scope: !15931)
!15931 = distinct !DILexicalBlock(scope: !15925, file: !13638, line: 253, column: 2)
!15932 = !DILocation(line: 254, column: 2, scope: !15933)
!15933 = distinct !DILexicalBlock(scope: !15934, file: !13638, line: 254, column: 2)
!15934 = distinct !DILexicalBlock(scope: !15921, file: !13638, line: 254, column: 2)
!15935 = !DILocation(line: 254, column: 2, scope: !15934)
!15936 = !DILocation(line: 254, column: 2, scope: !15937)
!15937 = distinct !DILexicalBlock(scope: !15933, file: !13638, line: 254, column: 2)
!15938 = !DILocation(line: 256, column: 2, scope: !15921)
!15939 = !DILocation(line: 258, column: 2, scope: !15940)
!15940 = distinct !DILexicalBlock(scope: !15921, file: !13638, line: 258, column: 2)
!15941 = !{i64 2154977532}
!15942 = !DILocation(line: 259, column: 1, scope: !15921)
!15943 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2464, file: !2464, line: 996, type: !3089, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15944)
!15944 = !{!15945, !15947}
!15945 = !DILocalVariable(name: "__i", scope: !15946, file: !2464, line: 998, type: !14470)
!15946 = distinct !DILexicalBlock(scope: !15943, file: !2464, line: 998, column: 2)
!15947 = !DILocalVariable(name: "__key", scope: !15946, file: !2464, line: 998, type: !14470)
!15948 = !DILocation(line: 0, scope: !15946)
!15949 = !DILocation(line: 0, scope: !14478, inlinedAt: !15950)
!15950 = distinct !DILocation(line: 998, column: 2, scope: !15946)
!15951 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !15952)
!15952 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !15950)
!15953 = !DILocation(line: 0, scope: !14487, inlinedAt: !15952)
!15954 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15950)
!15955 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15950)
!15956 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !15950)
!15957 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !15950)
!15958 = !DILocation(line: 999, column: 3, scope: !15959)
!15959 = distinct !DILexicalBlock(scope: !15960, file: !2464, line: 999, column: 3)
!15960 = distinct !DILexicalBlock(scope: !15961, file: !2464, line: 999, column: 3)
!15961 = distinct !DILexicalBlock(scope: !15962, file: !2464, line: 998, column: 26)
!15962 = distinct !DILexicalBlock(scope: !15946, file: !2464, line: 998, column: 2)
!15963 = !DILocation(line: 999, column: 3, scope: !15960)
!15964 = !DILocation(line: 999, column: 3, scope: !15965)
!15965 = distinct !DILexicalBlock(scope: !15959, file: !2464, line: 999, column: 3)
!15966 = !DILocation(line: 1031, column: 3, scope: !15205, inlinedAt: !15967)
!15967 = distinct !DILocation(line: 48, column: 10, scope: !15209, inlinedAt: !15968)
!15968 = distinct !DILocation(line: 1000, column: 3, scope: !15969)
!15969 = distinct !DILexicalBlock(scope: !15970, file: !2464, line: 1000, column: 3)
!15970 = distinct !DILexicalBlock(scope: !15961, file: !2464, line: 1000, column: 3)
!15971 = !DILocation(line: 0, scope: !15205, inlinedAt: !15967)
!15972 = !DILocation(line: 48, column: 9, scope: !15209, inlinedAt: !15968)
!15973 = !DILocation(line: 1000, column: 3, scope: !15970)
!15974 = !DILocation(line: 1000, column: 3, scope: !15975)
!15975 = distinct !DILexicalBlock(scope: !15969, file: !2464, line: 1000, column: 3)
!15976 = !DILocation(line: 1002, column: 5, scope: !15961)
!15977 = !DILocation(line: 1002, column: 20, scope: !15961)
!15978 = !DILocation(line: 1002, column: 3, scope: !15961)
!15979 = !DILocation(line: 1003, column: 3, scope: !15961)
!15980 = !DILocation(line: 0, scope: !14512, inlinedAt: !15981)
!15981 = distinct !DILocation(line: 998, column: 2, scope: !15962)
!15982 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !15981)
!15983 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15981)
!15984 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !15981)
!15985 = !DILocation(line: 0, scope: !14526, inlinedAt: !15986)
!15986 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !15981)
!15987 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !15986)
!15988 = !DILocation(line: 1011, column: 2, scope: !15943)
!15989 = !DILocation(line: 1012, column: 1, scope: !15943)
!15990 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2464, file: !2464, line: 1014, type: !14827, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2166)
!15991 = !DILocation(line: 1028, column: 25, scope: !15990)
!15992 = !DILocation(line: 1028, column: 2, scope: !15990)
!15993 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2464, file: !2464, line: 1155, type: !15994, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15996)
!15994 = !DISubroutineType(types: !15995)
!15995 = !{!145, !2385, !2385}
!15996 = !{!15997, !15998, !15999, !16000, !16001}
!15997 = !DILocalVariable(name: "a", arg: 1, scope: !15993, file: !2464, line: 1155, type: !2385)
!15998 = !DILocalVariable(name: "b", arg: 2, scope: !15993, file: !2464, line: 1155, type: !2385)
!15999 = !DILocalVariable(name: "thread_a", scope: !15993, file: !2464, line: 1157, type: !2356)
!16000 = !DILocalVariable(name: "thread_b", scope: !15993, file: !2464, line: 1157, type: !2356)
!16001 = !DILocalVariable(name: "cmp", scope: !15993, file: !2464, line: 1158, type: !896)
!16002 = !DILocation(line: 0, scope: !15993)
!16003 = !DILocation(line: 1160, column: 13, scope: !15993)
!16004 = !DILocation(line: 1161, column: 13, scope: !15993)
!16005 = !DILocation(line: 1163, column: 8, scope: !15993)
!16006 = !DILocation(line: 1165, column: 10, scope: !16007)
!16007 = distinct !DILexicalBlock(scope: !15993, file: !2464, line: 1165, column: 6)
!16008 = !DILocation(line: 1165, column: 6, scope: !15993)
!16009 = !DILocation(line: 1167, column: 17, scope: !16010)
!16010 = distinct !DILexicalBlock(scope: !16007, file: !2464, line: 1167, column: 13)
!16011 = !DILocation(line: 1167, column: 13, scope: !16007)
!16012 = !DILocation(line: 1170, column: 25, scope: !16013)
!16013 = distinct !DILexicalBlock(scope: !16010, file: !2464, line: 1169, column: 9)
!16014 = !DILocation(line: 1170, column: 52, scope: !16013)
!16015 = !DILocation(line: 1170, column: 35, scope: !16013)
!16016 = !DILocation(line: 1170, column: 3, scope: !16013)
!16017 = !DILocation(line: 0, scope: !16007)
!16018 = !DILocation(line: 1173, column: 1, scope: !15993)
!16019 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2464, file: !2464, line: 1175, type: !16020, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16035)
!16020 = !DISubroutineType(types: !16021)
!16021 = !{null, !16022, !2356}
!16022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16023, size: 32)
!16023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16024, line: 37, size: 128, elements: !16025)
!16024 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16025 = !{!16026, !16034}
!16026 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16023, file: !16024, line: 38, baseType: !16027, size: 96)
!16027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !335, line: 83, size: 96, elements: !16028)
!16028 = !{!16029, !16030, !16033}
!16029 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16027, file: !335, line: 84, baseType: !2385, size: 32)
!16030 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16027, file: !335, line: 85, baseType: !16031, size: 32, offset: 32)
!16031 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !335, line: 81, baseType: !16032)
!16032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15994, size: 32)
!16033 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16027, file: !335, line: 86, baseType: !107, size: 32, offset: 64)
!16034 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16023, file: !16024, line: 39, baseType: !107, size: 32, offset: 96)
!16035 = !{!16036, !16037, !16038, !16039, !16048}
!16036 = !DILocalVariable(name: "pq", arg: 1, scope: !16019, file: !2464, line: 1175, type: !16022)
!16037 = !DILocalVariable(name: "thread", arg: 2, scope: !16019, file: !2464, line: 1175, type: !2356)
!16038 = !DILocalVariable(name: "t", scope: !16019, file: !2464, line: 1177, type: !2356)
!16039 = !DILocalVariable(name: "__f", scope: !16040, file: !2464, line: 1190, type: !16043)
!16040 = distinct !DILexicalBlock(scope: !16041, file: !2464, line: 1190, column: 3)
!16041 = distinct !DILexicalBlock(scope: !16042, file: !2464, line: 1189, column: 27)
!16042 = distinct !DILexicalBlock(scope: !16019, file: !2464, line: 1189, column: 6)
!16043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !335, line: 155, size: 96, elements: !16044)
!16044 = !{!16045, !16046, !16047}
!16045 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16043, file: !335, line: 156, baseType: !2459, size: 32)
!16046 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16043, file: !335, line: 157, baseType: !194, size: 32, offset: 32)
!16047 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16043, file: !335, line: 158, baseType: !896, size: 32, offset: 64)
!16048 = !DILocalVariable(name: "n", scope: !16049, file: !2464, line: 1190, type: !2385)
!16049 = distinct !DILexicalBlock(scope: !16050, file: !2464, line: 1190, column: 3)
!16050 = distinct !DILexicalBlock(scope: !16040, file: !2464, line: 1190, column: 3)
!16051 = !DILocation(line: 0, scope: !16019)
!16052 = !DILocation(line: 1179, column: 2, scope: !16053)
!16053 = distinct !DILexicalBlock(scope: !16054, file: !2464, line: 1179, column: 2)
!16054 = distinct !DILexicalBlock(scope: !16019, file: !2464, line: 1179, column: 2)
!16055 = !DILocation(line: 1179, column: 2, scope: !16054)
!16056 = !DILocation(line: 1179, column: 2, scope: !16057)
!16057 = distinct !DILexicalBlock(scope: !16053, file: !2464, line: 1179, column: 2)
!16058 = !DILocation(line: 1181, column: 31, scope: !16019)
!16059 = !DILocation(line: 1181, column: 45, scope: !16019)
!16060 = !DILocation(line: 1181, column: 15, scope: !16019)
!16061 = !DILocation(line: 1181, column: 25, scope: !16019)
!16062 = !DILocation(line: 1189, column: 11, scope: !16042)
!16063 = !DILocation(line: 1189, column: 7, scope: !16042)
!16064 = !DILocation(line: 1189, column: 6, scope: !16019)
!16065 = !DILocation(line: 1190, column: 3, scope: !16040)
!16066 = !DILocation(line: 1190, column: 3, scope: !16049)
!16067 = !DILocation(line: 0, scope: !16049)
!16068 = !DILocation(line: 1190, column: 3, scope: !16050)
!16069 = !DILocation(line: 1193, column: 2, scope: !16041)
!16070 = !DILocation(line: 1191, column: 42, scope: !16071)
!16071 = distinct !DILexicalBlock(scope: !16050, file: !2464, line: 1190, column: 54)
!16072 = !DILocation(line: 1191, column: 12, scope: !16071)
!16073 = !DILocation(line: 1191, column: 22, scope: !16071)
!16074 = distinct !{!16074, !16065, !16075}
!16075 = !DILocation(line: 1192, column: 3, scope: !16040)
!16076 = !DILocation(line: 1195, column: 17, scope: !16019)
!16077 = !DILocation(line: 1195, column: 37, scope: !16019)
!16078 = !DILocation(line: 1195, column: 2, scope: !16019)
!16079 = !DILocation(line: 1196, column: 1, scope: !16019)
!16080 = !DISubprogram(name: "z_rb_foreach_next", scope: !335, file: !335, line: 176, type: !16081, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2166)
!16081 = !DISubroutineType(types: !16082)
!16082 = !{!2385, !16083, !16084}
!16083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16027, size: 32)
!16084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16043, size: 32)
!16085 = !DISubprogram(name: "rb_insert", scope: !335, file: !335, line: 105, type: !16086, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2166)
!16086 = !DISubroutineType(types: !16087)
!16087 = !{null, !16083, !2385}
!16088 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2464, file: !2464, line: 1198, type: !16020, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16089)
!16089 = !{!16090, !16091}
!16090 = !DILocalVariable(name: "pq", arg: 1, scope: !16088, file: !2464, line: 1198, type: !16022)
!16091 = !DILocalVariable(name: "thread", arg: 2, scope: !16088, file: !2464, line: 1198, type: !2356)
!16092 = !DILocation(line: 0, scope: !16088)
!16093 = !DILocation(line: 1200, column: 2, scope: !16094)
!16094 = distinct !DILexicalBlock(scope: !16095, file: !2464, line: 1200, column: 2)
!16095 = distinct !DILexicalBlock(scope: !16088, file: !2464, line: 1200, column: 2)
!16096 = !DILocation(line: 1200, column: 2, scope: !16095)
!16097 = !DILocation(line: 1200, column: 2, scope: !16098)
!16098 = distinct !DILexicalBlock(scope: !16094, file: !2464, line: 1200, column: 2)
!16099 = !DILocation(line: 1202, column: 17, scope: !16088)
!16100 = !DILocation(line: 1202, column: 37, scope: !16088)
!16101 = !DILocation(line: 1202, column: 2, scope: !16088)
!16102 = !DILocation(line: 1204, column: 16, scope: !16103)
!16103 = distinct !DILexicalBlock(scope: !16088, file: !2464, line: 1204, column: 6)
!16104 = !DILocation(line: 1204, column: 7, scope: !16103)
!16105 = !DILocation(line: 1204, column: 6, scope: !16088)
!16106 = !DILocation(line: 1205, column: 7, scope: !16107)
!16107 = distinct !DILexicalBlock(scope: !16103, file: !2464, line: 1204, column: 22)
!16108 = !DILocation(line: 1205, column: 22, scope: !16107)
!16109 = !DILocation(line: 1206, column: 2, scope: !16107)
!16110 = !DILocation(line: 1207, column: 1, scope: !16088)
!16111 = !DISubprogram(name: "rb_remove", scope: !335, file: !335, line: 110, type: !16086, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2166)
!16112 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2464, file: !2464, line: 1209, type: !16113, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16115)
!16113 = !DISubroutineType(types: !16114)
!16114 = !{!2356, !16022}
!16115 = !{!16116, !16117, !16118}
!16116 = !DILocalVariable(name: "pq", arg: 1, scope: !16112, file: !2464, line: 1209, type: !16022)
!16117 = !DILocalVariable(name: "thread", scope: !16112, file: !2464, line: 1211, type: !2356)
!16118 = !DILocalVariable(name: "n", scope: !16112, file: !2464, line: 1212, type: !2385)
!16119 = !DILocation(line: 0, scope: !16112)
!16120 = !DILocation(line: 1212, column: 37, scope: !16112)
!16121 = !DILocation(line: 1212, column: 21, scope: !16112)
!16122 = !DILocation(line: 1217, column: 2, scope: !16112)
!16123 = distinct !DISubprogram(name: "rb_get_min", scope: !335, file: !335, line: 115, type: !16124, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16126)
!16124 = !DISubroutineType(types: !16125)
!16125 = !{!2385, !16083}
!16126 = !{!16127}
!16127 = !DILocalVariable(name: "tree", arg: 1, scope: !16123, file: !335, line: 115, type: !16083)
!16128 = !DILocation(line: 0, scope: !16123)
!16129 = !DILocation(line: 117, column: 9, scope: !16123)
!16130 = !DILocation(line: 117, column: 2, scope: !16123)
!16131 = !DISubprogram(name: "z_rb_get_minmax", scope: !335, file: !335, line: 100, type: !16132, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2166)
!16132 = !DISubroutineType(types: !16133)
!16133 = !{!2385, !16083, !195}
!16134 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2464, file: !2464, line: 1246, type: !16135, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16143)
!16135 = !DISubroutineType(types: !16136)
!16136 = !{!2356, !16137}
!16137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16138, size: 32)
!16138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16024, line: 53, size: 2080, elements: !16139)
!16139 = !{!16140, !16142}
!16140 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16138, file: !16024, line: 54, baseType: !16141, size: 2048)
!16141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2392, size: 2048, elements: !394)
!16142 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16138, file: !16024, line: 55, baseType: !32, size: 32, offset: 2048)
!16143 = !{!16144, !16145, !16146, !16147}
!16144 = !DILocalVariable(name: "pq", arg: 1, scope: !16134, file: !2464, line: 1246, type: !16137)
!16145 = !DILocalVariable(name: "thread", scope: !16134, file: !2464, line: 1252, type: !2356)
!16146 = !DILocalVariable(name: "l", scope: !16134, file: !2464, line: 1253, type: !14704)
!16147 = !DILocalVariable(name: "n", scope: !16134, file: !2464, line: 1254, type: !2460)
!16148 = !DILocation(line: 0, scope: !16134)
!16149 = !DILocation(line: 1248, column: 11, scope: !16150)
!16150 = distinct !DILexicalBlock(scope: !16134, file: !2464, line: 1248, column: 6)
!16151 = !DILocation(line: 1248, column: 7, scope: !16150)
!16152 = !DILocation(line: 1248, column: 6, scope: !16134)
!16153 = !DILocation(line: 1253, column: 31, scope: !16134)
!16154 = !DILocation(line: 1253, column: 20, scope: !16134)
!16155 = !DILocation(line: 1254, column: 19, scope: !16134)
!16156 = !DILocation(line: 1260, column: 1, scope: !16134)
!16157 = distinct !DISubprogram(name: "z_unpend_all", scope: !2464, file: !2464, line: 1262, type: !16158, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16160)
!16158 = !DISubroutineType(types: !16159)
!16159 = !{!107, !2387}
!16160 = !{!16161, !16162, !16163}
!16161 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16157, file: !2464, line: 1262, type: !2387)
!16162 = !DILocalVariable(name: "need_sched", scope: !16157, file: !2464, line: 1264, type: !107)
!16163 = !DILocalVariable(name: "thread", scope: !16157, file: !2464, line: 1265, type: !2356)
!16164 = !DILocation(line: 0, scope: !16157)
!16165 = !DILocation(line: 1267, column: 19, scope: !16157)
!16166 = !DILocation(line: 1267, column: 41, scope: !16157)
!16167 = !DILocation(line: 1267, column: 2, scope: !16157)
!16168 = !DILocation(line: 1268, column: 3, scope: !16169)
!16169 = distinct !DILexicalBlock(scope: !16157, file: !2464, line: 1267, column: 50)
!16170 = !DILocation(line: 1269, column: 3, scope: !16169)
!16171 = distinct !{!16171, !16167, !16172}
!16172 = !DILocation(line: 1271, column: 2, scope: !16157)
!16173 = !DILocation(line: 1273, column: 2, scope: !16157)
!16174 = distinct !DISubprogram(name: "z_waitq_head", scope: !13999, file: !13999, line: 52, type: !15705, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16175)
!16175 = !{!16176}
!16176 = !DILocalVariable(name: "w", arg: 1, scope: !16174, file: !13999, line: 52, type: !2387)
!16177 = !DILocation(line: 0, scope: !16174)
!16178 = !DILocation(line: 54, column: 52, scope: !16174)
!16179 = !DILocation(line: 54, column: 28, scope: !16174)
!16180 = !DILocation(line: 54, column: 9, scope: !16174)
!16181 = !DILocation(line: 54, column: 2, scope: !16174)
!16182 = distinct !DISubprogram(name: "init_ready_q", scope: !2464, file: !2464, line: 1276, type: !16183, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16190)
!16183 = !DISubroutineType(types: !16184)
!16184 = !{null, !16185}
!16185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16186, size: 32)
!16186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !345, line: 83, size: 96, elements: !16187)
!16187 = !{!16188, !16189}
!16188 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16186, file: !345, line: 86, baseType: !2356, size: 32)
!16189 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16186, file: !345, line: 90, baseType: !2392, size: 64, offset: 32)
!16190 = !{!16191}
!16191 = !DILocalVariable(name: "rq", arg: 1, scope: !16182, file: !2464, line: 1276, type: !16185)
!16192 = !DILocation(line: 0, scope: !16182)
!16193 = !DILocation(line: 1289, column: 22, scope: !16182)
!16194 = !DILocation(line: 1289, column: 2, scope: !16182)
!16195 = !DILocation(line: 1291, column: 1, scope: !16182)
!16196 = distinct !DISubprogram(name: "sys_dlist_init", scope: !319, file: !319, line: 197, type: !16197, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16199)
!16197 = !DISubroutineType(types: !16198)
!16198 = !{null, !14704}
!16199 = !{!16200}
!16200 = !DILocalVariable(name: "list", arg: 1, scope: !16196, file: !319, line: 197, type: !14704)
!16201 = !DILocation(line: 0, scope: !16196)
!16202 = !DILocation(line: 199, column: 8, scope: !16196)
!16203 = !DILocation(line: 199, column: 13, scope: !16196)
!16204 = !DILocation(line: 200, column: 8, scope: !16196)
!16205 = !DILocation(line: 200, column: 13, scope: !16196)
!16206 = !DILocation(line: 201, column: 1, scope: !16196)
!16207 = distinct !DISubprogram(name: "z_sched_init", scope: !2464, file: !2464, line: 1293, type: !3089, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2166)
!16208 = !DILocation(line: 1302, column: 2, scope: !16207)
!16209 = !DILocation(line: 1306, column: 2, scope: !16207)
!16210 = !DILocation(line: 1309, column: 1, scope: !16207)
!16211 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2464, file: !2464, line: 1311, type: !16212, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16215)
!16212 = !DISubroutineType(types: !16213)
!16213 = !{!107, !16214}
!16214 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !2356)
!16215 = !{!16216}
!16216 = !DILocalVariable(name: "thread", arg: 1, scope: !16211, file: !2464, line: 1311, type: !16214)
!16217 = !DILocation(line: 0, scope: !16211)
!16218 = !DILocation(line: 1313, column: 22, scope: !16211)
!16219 = !DILocation(line: 1313, column: 9, scope: !16211)
!16220 = !DILocation(line: 1313, column: 2, scope: !16211)
!16221 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2464, file: !2464, line: 1325, type: !16222, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16224)
!16222 = !DISubroutineType(types: !16223)
!16223 = !{null, !16214, !107}
!16224 = !{!16225, !16226, !16227}
!16225 = !DILocalVariable(name: "thread", arg: 1, scope: !16221, file: !2464, line: 1325, type: !16214)
!16226 = !DILocalVariable(name: "prio", arg: 2, scope: !16221, file: !2464, line: 1325, type: !107)
!16227 = !DILocalVariable(name: "th", scope: !16221, file: !2464, line: 1334, type: !2356)
!16228 = !DILocation(line: 0, scope: !16221)
!16229 = !DILocation(line: 1331, column: 2, scope: !16230)
!16230 = distinct !DILexicalBlock(scope: !16231, file: !2464, line: 1331, column: 2)
!16231 = distinct !DILexicalBlock(scope: !16232, file: !2464, line: 1331, column: 2)
!16232 = distinct !DILexicalBlock(scope: !16221, file: !2464, line: 1331, column: 2)
!16233 = !DILocation(line: 1331, column: 2, scope: !16234)
!16234 = distinct !DILexicalBlock(scope: !16230, file: !2464, line: 1331, column: 2)
!16235 = !DILocation(line: 1031, column: 3, scope: !15205, inlinedAt: !16236)
!16236 = distinct !DILocation(line: 48, column: 10, scope: !15209, inlinedAt: !16237)
!16237 = distinct !DILocation(line: 1332, column: 2, scope: !16238)
!16238 = distinct !DILexicalBlock(scope: !16239, file: !2464, line: 1332, column: 2)
!16239 = distinct !DILexicalBlock(scope: !16221, file: !2464, line: 1332, column: 2)
!16240 = !DILocation(line: 0, scope: !15205, inlinedAt: !16236)
!16241 = !DILocation(line: 48, column: 9, scope: !15209, inlinedAt: !16237)
!16242 = !DILocation(line: 1332, column: 2, scope: !16239)
!16243 = !DILocation(line: 1332, column: 2, scope: !16244)
!16244 = distinct !DILexicalBlock(scope: !16238, file: !2464, line: 1332, column: 2)
!16245 = !DILocation(line: 1336, column: 2, scope: !16221)
!16246 = !DILocation(line: 1337, column: 1, scope: !16221)
!16247 = distinct !DISubprogram(name: "k_can_yield", scope: !2464, file: !2464, line: 1384, type: !7309, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2166)
!16248 = !DILocation(line: 1386, column: 11, scope: !16247)
!16249 = !DILocation(line: 1386, column: 29, scope: !16247)
!16250 = !DILocation(line: 1386, column: 32, scope: !16247)
!16251 = !DILocation(line: 1386, column: 46, scope: !16247)
!16252 = !DILocation(line: 1387, column: 28, scope: !16247)
!16253 = !DILocation(line: 1387, column: 4, scope: !16247)
!16254 = !DILocation(line: 1386, column: 2, scope: !16247)
!16255 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !406, file: !406, line: 989, type: !7309, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2166)
!16256 = !DILocation(line: 993, column: 10, scope: !16255)
!16257 = !DILocation(line: 993, column: 2, scope: !16255)
!16258 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2464, file: !2464, line: 1390, type: !3089, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16259)
!16259 = !{!16260}
!16260 = !DILocalVariable(name: "key", scope: !16258, file: !2464, line: 1396, type: !14470)
!16261 = !DILocation(line: 1031, column: 3, scope: !15205, inlinedAt: !16262)
!16262 = distinct !DILocation(line: 48, column: 10, scope: !15209, inlinedAt: !16263)
!16263 = distinct !DILocation(line: 1392, column: 2, scope: !16264)
!16264 = distinct !DILexicalBlock(scope: !16265, file: !2464, line: 1392, column: 2)
!16265 = distinct !DILexicalBlock(scope: !16258, file: !2464, line: 1392, column: 2)
!16266 = !DILocation(line: 0, scope: !15205, inlinedAt: !16262)
!16267 = !DILocation(line: 48, column: 9, scope: !15209, inlinedAt: !16263)
!16268 = !DILocation(line: 1392, column: 2, scope: !16265)
!16269 = !DILocation(line: 1392, column: 2, scope: !16270)
!16270 = distinct !DILexicalBlock(scope: !16264, file: !2464, line: 1392, column: 2)
!16271 = !DILocation(line: 0, scope: !14478, inlinedAt: !16272)
!16272 = distinct !DILocation(line: 1396, column: 25, scope: !16258)
!16273 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !16274)
!16274 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !16272)
!16275 = !DILocation(line: 0, scope: !14487, inlinedAt: !16274)
!16276 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !16272)
!16277 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !16272)
!16278 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !16272)
!16279 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !16272)
!16280 = !DILocation(line: 0, scope: !16258)
!16281 = !DILocation(line: 1400, column: 18, scope: !16282)
!16282 = distinct !DILexicalBlock(scope: !16283, file: !2464, line: 1399, column: 36)
!16283 = distinct !DILexicalBlock(scope: !16258, file: !2464, line: 1398, column: 6)
!16284 = !DILocation(line: 0, scope: !14670, inlinedAt: !16285)
!16285 = distinct !DILocation(line: 1400, column: 3, scope: !16282)
!16286 = !DILocation(line: 266, column: 15, scope: !14670, inlinedAt: !16285)
!16287 = !DILocation(line: 266, column: 28, scope: !14670, inlinedAt: !16285)
!16288 = !DILocation(line: 0, scope: !14678, inlinedAt: !16289)
!16289 = distinct !DILocation(line: 268, column: 3, scope: !14682, inlinedAt: !16285)
!16290 = !DILocation(line: 234, column: 2, scope: !14678, inlinedAt: !16289)
!16291 = !DILocation(line: 1402, column: 15, scope: !16258)
!16292 = !DILocation(line: 0, scope: !14687, inlinedAt: !16293)
!16293 = distinct !DILocation(line: 1402, column: 2, scope: !16258)
!16294 = !DILocation(line: 252, column: 15, scope: !14687, inlinedAt: !16293)
!16295 = !DILocation(line: 252, column: 28, scope: !14687, inlinedAt: !16293)
!16296 = !DILocation(line: 0, scope: !14694, inlinedAt: !16297)
!16297 = distinct !DILocation(line: 254, column: 3, scope: !14698, inlinedAt: !16293)
!16298 = !DILocation(line: 0, scope: !14701, inlinedAt: !16299)
!16299 = distinct !DILocation(line: 229, column: 2, scope: !14694, inlinedAt: !16297)
!16300 = !DILocation(line: 186, column: 2, scope: !14711, inlinedAt: !16299)
!16301 = !DILocation(line: 186, column: 2, scope: !14712, inlinedAt: !16299)
!16302 = !DILocation(line: 186, column: 2, scope: !14715, inlinedAt: !16299)
!16303 = !DILocation(line: 188, column: 2, scope: !14717, inlinedAt: !16299)
!16304 = !DILocation(line: 188, column: 2, scope: !14719, inlinedAt: !16299)
!16305 = !DILocation(line: 0, scope: !14717, inlinedAt: !16299)
!16306 = !DILocation(line: 189, column: 7, scope: !14722, inlinedAt: !16299)
!16307 = !DILocation(line: 189, column: 35, scope: !14722, inlinedAt: !16299)
!16308 = !DILocation(line: 189, column: 7, scope: !14723, inlinedAt: !16299)
!16309 = !DILocation(line: 191, column: 21, scope: !14727, inlinedAt: !16299)
!16310 = !DILocation(line: 190, column: 4, scope: !14727, inlinedAt: !16299)
!16311 = !DILocation(line: 192, column: 4, scope: !14727, inlinedAt: !16299)
!16312 = distinct !{!16312, !16303, !16313}
!16313 = !DILocation(line: 194, column: 2, scope: !14717, inlinedAt: !16299)
!16314 = !DILocation(line: 196, column: 37, scope: !14701, inlinedAt: !16299)
!16315 = !DILocation(line: 196, column: 2, scope: !14701, inlinedAt: !16299)
!16316 = !DILocation(line: 197, column: 1, scope: !14701, inlinedAt: !16299)
!16317 = !DILocation(line: 1403, column: 2, scope: !16258)
!16318 = !DILocation(line: 0, scope: !15156, inlinedAt: !16319)
!16319 = distinct !DILocation(line: 1404, column: 2, scope: !16258)
!16320 = !DILocation(line: 0, scope: !15165, inlinedAt: !16321)
!16321 = distinct !DILocation(line: 195, column: 2, scope: !15156, inlinedAt: !16319)
!16322 = !DILocation(line: 225, column: 2, scope: !15172, inlinedAt: !16321)
!16323 = !DILocation(line: 225, column: 2, scope: !15173, inlinedAt: !16321)
!16324 = !DILocation(line: 225, column: 2, scope: !15176, inlinedAt: !16321)
!16325 = !DILocation(line: 196, column: 9, scope: !15156, inlinedAt: !16319)
!16326 = !DILocation(line: 1405, column: 1, scope: !16258)
!16327 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2464, file: !2464, line: 1459, type: !16328, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16330)
!16328 = !DISubroutineType(types: !16329)
!16329 = !{!896, !15366}
!16330 = !{!16331, !16332, !16333}
!16331 = !DILocalVariable(name: "timeout", arg: 1, scope: !16327, file: !2464, line: 1459, type: !15366)
!16332 = !DILocalVariable(name: "ticks", scope: !16327, file: !2464, line: 1461, type: !564)
!16333 = !DILocalVariable(name: "ret", scope: !16327, file: !2464, line: 1480, type: !896)
!16334 = !DILocation(line: 0, scope: !16327)
!16335 = !DILocation(line: 1031, column: 3, scope: !15205, inlinedAt: !16336)
!16336 = distinct !DILocation(line: 48, column: 10, scope: !15209, inlinedAt: !16337)
!16337 = distinct !DILocation(line: 1463, column: 2, scope: !16338)
!16338 = distinct !DILexicalBlock(scope: !16339, file: !2464, line: 1463, column: 2)
!16339 = distinct !DILexicalBlock(scope: !16327, file: !2464, line: 1463, column: 2)
!16340 = !DILocation(line: 0, scope: !15205, inlinedAt: !16336)
!16341 = !DILocation(line: 48, column: 9, scope: !15209, inlinedAt: !16337)
!16342 = !DILocation(line: 1463, column: 2, scope: !16339)
!16343 = !DILocation(line: 1463, column: 2, scope: !16344)
!16344 = distinct !DILexicalBlock(scope: !16338, file: !2464, line: 1463, column: 2)
!16345 = !DILocation(line: 1468, column: 6, scope: !16346)
!16346 = distinct !DILexicalBlock(scope: !16327, file: !2464, line: 1468, column: 6)
!16347 = !DILocation(line: 1468, column: 6, scope: !16327)
!16348 = !DILocation(line: 1469, column: 20, scope: !16349)
!16349 = distinct !DILexicalBlock(scope: !16346, file: !2464, line: 1468, column: 40)
!16350 = !DILocation(line: 1469, column: 3, scope: !16349)
!16351 = !DILocation(line: 1473, column: 3, scope: !16349)
!16352 = !DILocation(line: 1478, column: 10, scope: !16327)
!16353 = !DILocation(line: 1480, column: 16, scope: !16327)
!16354 = !DILocation(line: 1485, column: 1, scope: !16327)
!16355 = distinct !DISubprogram(name: "k_thread_suspend", scope: !4420, file: !4420, line: 310, type: !16356, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16358)
!16356 = !DISubroutineType(types: !16357)
!16357 = !{null, !16214}
!16358 = !{!16359}
!16359 = !DILocalVariable(name: "thread", arg: 1, scope: !16355, file: !4420, line: 310, type: !16214)
!16360 = !DILocation(line: 0, scope: !16355)
!16361 = !DILocation(line: 319, column: 2, scope: !16362)
!16362 = distinct !DILexicalBlock(scope: !16355, file: !4420, line: 319, column: 2)
!16363 = !{i64 2154893690}
!16364 = !DILocation(line: 320, column: 2, scope: !16355)
!16365 = !DILocation(line: 321, column: 1, scope: !16355)
!16366 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2464, file: !2464, line: 1415, type: !16367, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16369)
!16367 = !DISubroutineType(types: !16368)
!16368 = !{!896, !564}
!16369 = !{!16370, !16371, !16372, !16373}
!16370 = !DILocalVariable(name: "ticks", arg: 1, scope: !16366, file: !2464, line: 1415, type: !564)
!16371 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16366, file: !2464, line: 1418, type: !152)
!16372 = !DILocalVariable(name: "timeout", scope: !16366, file: !2464, line: 1430, type: !15366)
!16373 = !DILocalVariable(name: "key", scope: !16366, file: !2464, line: 1437, type: !14470)
!16374 = !DILocation(line: 0, scope: !16366)
!16375 = !DILocation(line: 1031, column: 3, scope: !15205, inlinedAt: !16376)
!16376 = distinct !DILocation(line: 48, column: 10, scope: !15209, inlinedAt: !16377)
!16377 = distinct !DILocation(line: 1420, column: 2, scope: !16378)
!16378 = distinct !DILexicalBlock(scope: !16379, file: !2464, line: 1420, column: 2)
!16379 = distinct !DILexicalBlock(scope: !16366, file: !2464, line: 1420, column: 2)
!16380 = !DILocation(line: 0, scope: !15205, inlinedAt: !16376)
!16381 = !DILocation(line: 48, column: 9, scope: !15209, inlinedAt: !16377)
!16382 = !DILocation(line: 1420, column: 2, scope: !16379)
!16383 = !DILocation(line: 1420, column: 2, scope: !16384)
!16384 = distinct !DILexicalBlock(scope: !16378, file: !2464, line: 1420, column: 2)
!16385 = !DILocation(line: 1425, column: 12, scope: !16386)
!16386 = distinct !DILexicalBlock(scope: !16366, file: !2464, line: 1425, column: 6)
!16387 = !DILocation(line: 1425, column: 6, scope: !16366)
!16388 = !DILocation(line: 1426, column: 3, scope: !16389)
!16389 = distinct !DILexicalBlock(scope: !16386, file: !2464, line: 1425, column: 18)
!16390 = !DILocation(line: 1427, column: 3, scope: !16389)
!16391 = !DILocation(line: 1431, column: 24, scope: !16392)
!16392 = distinct !DILexicalBlock(scope: !16366, file: !2464, line: 1431, column: 6)
!16393 = !DILocation(line: 1431, column: 6, scope: !16366)
!16394 = !DILocation(line: 1432, column: 35, scope: !16395)
!16395 = distinct !DILexicalBlock(scope: !16392, file: !2464, line: 1431, column: 30)
!16396 = !DILocation(line: 1432, column: 27, scope: !16395)
!16397 = !DILocation(line: 1433, column: 2, scope: !16395)
!16398 = !DILocation(line: 1434, column: 27, scope: !16399)
!16399 = distinct !DILexicalBlock(scope: !16392, file: !2464, line: 1433, column: 9)
!16400 = !DILocation(line: 0, scope: !16392)
!16401 = !DILocation(line: 0, scope: !14478, inlinedAt: !16402)
!16402 = distinct !DILocation(line: 1437, column: 25, scope: !16366)
!16403 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !16404)
!16404 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !16402)
!16405 = !DILocation(line: 0, scope: !14487, inlinedAt: !16404)
!16406 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !16402)
!16407 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !16402)
!16408 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !16402)
!16409 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !16402)
!16410 = !DILocation(line: 1440, column: 20, scope: !16366)
!16411 = !DILocation(line: 1440, column: 18, scope: !16366)
!16412 = !DILocation(line: 1442, column: 2, scope: !16366)
!16413 = !DILocation(line: 1443, column: 23, scope: !16366)
!16414 = !DILocation(line: 1443, column: 2, scope: !16366)
!16415 = !DILocation(line: 1444, column: 29, scope: !16366)
!16416 = !DILocation(line: 1444, column: 2, scope: !16366)
!16417 = !DILocation(line: 0, scope: !15156, inlinedAt: !16418)
!16418 = distinct !DILocation(line: 1446, column: 8, scope: !16366)
!16419 = !DILocation(line: 0, scope: !15165, inlinedAt: !16420)
!16420 = distinct !DILocation(line: 195, column: 2, scope: !15156, inlinedAt: !16418)
!16421 = !DILocation(line: 225, column: 2, scope: !15172, inlinedAt: !16420)
!16422 = !DILocation(line: 225, column: 2, scope: !15173, inlinedAt: !16420)
!16423 = !DILocation(line: 225, column: 2, scope: !15176, inlinedAt: !16420)
!16424 = !DILocation(line: 196, column: 9, scope: !15156, inlinedAt: !16418)
!16425 = !DILocation(line: 1448, column: 2, scope: !16426)
!16426 = distinct !DILexicalBlock(scope: !16427, file: !2464, line: 1448, column: 2)
!16427 = distinct !DILexicalBlock(scope: !16366, file: !2464, line: 1448, column: 2)
!16428 = !DILocation(line: 1448, column: 2, scope: !16427)
!16429 = !DILocation(line: 1448, column: 2, scope: !16430)
!16430 = distinct !DILexicalBlock(scope: !16426, file: !2464, line: 1448, column: 2)
!16431 = !DILocation(line: 1450, column: 10, scope: !16366)
!16432 = !DILocation(line: 1450, column: 45, scope: !16366)
!16433 = !DILocation(line: 1450, column: 43, scope: !16366)
!16434 = !DILocation(line: 1451, column: 6, scope: !16366)
!16435 = !DILocation(line: 1457, column: 1, scope: !16366)
!16436 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !8724, file: !8724, line: 1103, type: !14257, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16437)
!16437 = !{!16438}
!16438 = !DILocalVariable(name: "t", arg: 1, scope: !16436, file: !8724, line: 1103, type: !566)
!16439 = !DILocation(line: 0, scope: !16436)
!16440 = !DILocation(line: 0, scope: !14538, inlinedAt: !16441)
!16441 = distinct !DILocation(line: 1106, column: 9, scope: !16436)
!16442 = !DILocation(line: 139, column: 13, scope: !16443, inlinedAt: !16441)
!16443 = distinct !DILexicalBlock(scope: !16444, file: !8724, line: 138, column: 10)
!16444 = distinct !DILexicalBlock(scope: !16445, file: !8724, line: 136, column: 7)
!16445 = distinct !DILexicalBlock(scope: !14559, file: !8724, line: 134, column: 17)
!16446 = !DILocation(line: 1106, column: 2, scope: !16436)
!16447 = distinct !DISubprogram(name: "k_yield", scope: !4420, file: !4420, line: 140, type: !3089, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2166)
!16448 = !DILocation(line: 148, column: 2, scope: !16449)
!16449 = distinct !DILexicalBlock(scope: !16447, file: !4420, line: 148, column: 2)
!16450 = !{i64 2154893010}
!16451 = !DILocation(line: 149, column: 2, scope: !16447)
!16452 = !DILocation(line: 150, column: 1, scope: !16447)
!16453 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2464, file: !2464, line: 1495, type: !16454, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16456)
!16454 = !DISubroutineType(types: !16455)
!16455 = !{!896, !107}
!16456 = !{!16457, !16458}
!16457 = !DILocalVariable(name: "us", arg: 1, scope: !16453, file: !2464, line: 1495, type: !107)
!16458 = !DILocalVariable(name: "ticks", scope: !16453, file: !2464, line: 1497, type: !896)
!16459 = !DILocation(line: 0, scope: !16453)
!16460 = !DILocation(line: 1501, column: 31, scope: !16453)
!16461 = !DILocation(line: 1501, column: 10, scope: !16453)
!16462 = !DILocation(line: 1502, column: 23, scope: !16453)
!16463 = !DILocation(line: 1502, column: 10, scope: !16453)
!16464 = !DILocation(line: 1506, column: 31, scope: !16453)
!16465 = !DILocation(line: 1506, column: 9, scope: !16453)
!16466 = !DILocation(line: 1506, column: 2, scope: !16453)
!16467 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !8724, file: !8724, line: 571, type: !14257, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16468)
!16468 = !{!16469}
!16469 = !DILocalVariable(name: "t", arg: 1, scope: !16467, file: !8724, line: 571, type: !566)
!16470 = !DILocation(line: 0, scope: !16467)
!16471 = !DILocation(line: 0, scope: !14538, inlinedAt: !16472)
!16472 = distinct !DILocation(line: 574, column: 9, scope: !16467)
!16473 = !DILocation(line: 135, column: 5, scope: !16445, inlinedAt: !16472)
!16474 = !DILocation(line: 139, column: 13, scope: !16443, inlinedAt: !16472)
!16475 = !DILocation(line: 574, column: 2, scope: !16467)
!16476 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !8724, file: !8724, line: 1187, type: !14257, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16477)
!16477 = !{!16478}
!16478 = !DILocalVariable(name: "t", arg: 1, scope: !16476, file: !8724, line: 1187, type: !566)
!16479 = !DILocation(line: 0, scope: !16476)
!16480 = !DILocation(line: 0, scope: !14538, inlinedAt: !16481)
!16481 = distinct !DILocation(line: 1190, column: 9, scope: !16476)
!16482 = !DILocation(line: 145, column: 13, scope: !16483, inlinedAt: !16481)
!16483 = distinct !DILexicalBlock(scope: !14556, file: !8724, line: 144, column: 10)
!16484 = !DILocation(line: 1190, column: 2, scope: !16476)
!16485 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2464, file: !2464, line: 1517, type: !16356, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16486)
!16486 = !{!16487}
!16487 = !DILocalVariable(name: "thread", arg: 1, scope: !16485, file: !2464, line: 1517, type: !16214)
!16488 = !DILocation(line: 0, scope: !16485)
!16489 = !DILocation(line: 1521, column: 6, scope: !16490)
!16490 = distinct !DILexicalBlock(scope: !16485, file: !2464, line: 1521, column: 6)
!16491 = !DILocation(line: 1521, column: 6, scope: !16485)
!16492 = !DILocation(line: 1525, column: 6, scope: !16493)
!16493 = distinct !DILexicalBlock(scope: !16485, file: !2464, line: 1525, column: 6)
!16494 = !DILocation(line: 1525, column: 37, scope: !16493)
!16495 = !DILocation(line: 1525, column: 6, scope: !16485)
!16496 = !DILocation(line: 1527, column: 20, scope: !16497)
!16497 = distinct !DILexicalBlock(scope: !16498, file: !2464, line: 1527, column: 7)
!16498 = distinct !DILexicalBlock(scope: !16493, file: !2464, line: 1525, column: 42)
!16499 = !DILocation(line: 1527, column: 33, scope: !16497)
!16500 = !DILocation(line: 1527, column: 7, scope: !16498)
!16501 = !DILocation(line: 1532, column: 2, scope: !16485)
!16502 = !DILocation(line: 1533, column: 2, scope: !16485)
!16503 = !DILocation(line: 1031, column: 3, scope: !15205, inlinedAt: !16504)
!16504 = distinct !DILocation(line: 48, column: 10, scope: !15209, inlinedAt: !16505)
!16505 = distinct !DILocation(line: 1537, column: 7, scope: !16506)
!16506 = distinct !DILexicalBlock(scope: !16485, file: !2464, line: 1537, column: 6)
!16507 = !DILocation(line: 0, scope: !15205, inlinedAt: !16504)
!16508 = !DILocation(line: 48, column: 9, scope: !15209, inlinedAt: !16505)
!16509 = !DILocation(line: 1537, column: 6, scope: !16485)
!16510 = !DILocation(line: 1538, column: 3, scope: !16511)
!16511 = distinct !DILexicalBlock(scope: !16506, file: !2464, line: 1537, column: 25)
!16512 = !DILocation(line: 1539, column: 2, scope: !16511)
!16513 = !DILocation(line: 1540, column: 1, scope: !16485)
!16514 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13638, file: !13638, line: 101, type: !14619, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16515)
!16515 = !{!16516}
!16516 = !DILocalVariable(name: "thread", arg: 1, scope: !16514, file: !13638, line: 101, type: !2356)
!16517 = !DILocation(line: 0, scope: !16514)
!16518 = !DILocation(line: 103, column: 23, scope: !16514)
!16519 = !DILocation(line: 103, column: 36, scope: !16514)
!16520 = !DILocation(line: 103, column: 55, scope: !16514)
!16521 = !DILocation(line: 103, column: 2, scope: !16514)
!16522 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2464, file: !2464, line: 1567, type: !16523, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16525)
!16523 = !DISubroutineType(types: !16524)
!16524 = !{!16214}
!16525 = !{!16526}
!16526 = !DILocalVariable(name: "ret", scope: !16522, file: !2464, line: 1577, type: !16214)
!16527 = !DILocation(line: 1577, column: 30, scope: !16522)
!16528 = !DILocation(line: 0, scope: !16522)
!16529 = !DILocation(line: 1582, column: 2, scope: !16522)
!16530 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2464, file: !2464, line: 1593, type: !7612, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2166)
!16531 = !DILocation(line: 1031, column: 3, scope: !15205, inlinedAt: !16532)
!16532 = distinct !DILocation(line: 48, column: 10, scope: !15209, inlinedAt: !16533)
!16533 = distinct !DILocation(line: 1595, column: 10, scope: !16530)
!16534 = !DILocation(line: 0, scope: !15205, inlinedAt: !16532)
!16535 = !DILocation(line: 48, column: 9, scope: !15209, inlinedAt: !16533)
!16536 = !DILocation(line: 1595, column: 27, scope: !16530)
!16537 = !DILocation(line: 1595, column: 41, scope: !16530)
!16538 = !DILocation(line: 1595, column: 30, scope: !16530)
!16539 = !DILocation(line: 1595, column: 2, scope: !16530)
!16540 = distinct !DISubprogram(name: "z_thread_abort", scope: !2464, file: !2464, line: 1725, type: !14436, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16541)
!16541 = !{!16542, !16543}
!16542 = !DILocalVariable(name: "thread", arg: 1, scope: !16540, file: !2464, line: 1725, type: !2356)
!16543 = !DILocalVariable(name: "key", scope: !16540, file: !2464, line: 1727, type: !14470)
!16544 = !DILocation(line: 0, scope: !16540)
!16545 = !DILocation(line: 0, scope: !14478, inlinedAt: !16546)
!16546 = distinct !DILocation(line: 1727, column: 25, scope: !16540)
!16547 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !16548)
!16548 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !16546)
!16549 = !DILocation(line: 0, scope: !14487, inlinedAt: !16548)
!16550 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !16546)
!16551 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !16546)
!16552 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !16546)
!16553 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !16546)
!16554 = !DILocation(line: 1729, column: 20, scope: !16555)
!16555 = distinct !DILexicalBlock(scope: !16540, file: !2464, line: 1729, column: 6)
!16556 = !DILocation(line: 1729, column: 33, scope: !16555)
!16557 = !DILocation(line: 1729, column: 48, scope: !16555)
!16558 = !DILocation(line: 1729, column: 6, scope: !16540)
!16559 = !DILocation(line: 0, scope: !14512, inlinedAt: !16560)
!16560 = distinct !DILocation(line: 1730, column: 3, scope: !16561)
!16561 = distinct !DILexicalBlock(scope: !16555, file: !2464, line: 1729, column: 54)
!16562 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !16560)
!16563 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !16560)
!16564 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !16560)
!16565 = !DILocation(line: 0, scope: !14526, inlinedAt: !16566)
!16566 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !16560)
!16567 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !16566)
!16568 = !DILocation(line: 1731, column: 3, scope: !16569)
!16569 = distinct !DILexicalBlock(scope: !16570, file: !2464, line: 1731, column: 3)
!16570 = distinct !DILexicalBlock(scope: !16571, file: !2464, line: 1731, column: 3)
!16571 = distinct !DILexicalBlock(scope: !16561, file: !2464, line: 1731, column: 3)
!16572 = !DILocation(line: 1736, column: 20, scope: !16573)
!16573 = distinct !DILexicalBlock(scope: !16540, file: !2464, line: 1736, column: 6)
!16574 = !DILocation(line: 1736, column: 33, scope: !16573)
!16575 = !DILocation(line: 1736, column: 49, scope: !16573)
!16576 = !DILocation(line: 1736, column: 6, scope: !16540)
!16577 = !DILocation(line: 0, scope: !14512, inlinedAt: !16578)
!16578 = distinct !DILocation(line: 1737, column: 3, scope: !16579)
!16579 = distinct !DILexicalBlock(scope: !16573, file: !2464, line: 1736, column: 56)
!16580 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !16578)
!16581 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !16578)
!16582 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !16578)
!16583 = !DILocation(line: 0, scope: !14526, inlinedAt: !16584)
!16584 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !16578)
!16585 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !16584)
!16586 = !DILocation(line: 1738, column: 3, scope: !16579)
!16587 = !DILocation(line: 1775, column: 2, scope: !16540)
!16588 = !DILocation(line: 1776, column: 16, scope: !16589)
!16589 = distinct !DILexicalBlock(scope: !16540, file: !2464, line: 1776, column: 6)
!16590 = !DILocation(line: 1776, column: 13, scope: !16589)
!16591 = !DILocation(line: 1776, column: 25, scope: !16589)
!16592 = !DILocation(line: 1031, column: 3, scope: !15205, inlinedAt: !16593)
!16593 = distinct !DILocation(line: 48, column: 10, scope: !15209, inlinedAt: !16594)
!16594 = distinct !DILocation(line: 1776, column: 29, scope: !16589)
!16595 = !DILocation(line: 0, scope: !15205, inlinedAt: !16593)
!16596 = !DILocation(line: 48, column: 9, scope: !15209, inlinedAt: !16594)
!16597 = !DILocation(line: 1776, column: 6, scope: !16540)
!16598 = !DILocation(line: 0, scope: !15156, inlinedAt: !16599)
!16599 = distinct !DILocation(line: 1777, column: 3, scope: !16600)
!16600 = distinct !DILexicalBlock(scope: !16589, file: !2464, line: 1776, column: 47)
!16601 = !DILocation(line: 0, scope: !15165, inlinedAt: !16602)
!16602 = distinct !DILocation(line: 195, column: 2, scope: !15156, inlinedAt: !16599)
!16603 = !DILocation(line: 225, column: 2, scope: !15172, inlinedAt: !16602)
!16604 = !DILocation(line: 225, column: 2, scope: !15173, inlinedAt: !16602)
!16605 = !DILocation(line: 225, column: 2, scope: !15176, inlinedAt: !16602)
!16606 = !DILocation(line: 196, column: 9, scope: !15156, inlinedAt: !16599)
!16607 = !DILocation(line: 1778, column: 3, scope: !16608)
!16608 = distinct !DILexicalBlock(scope: !16609, file: !2464, line: 1778, column: 3)
!16609 = distinct !DILexicalBlock(scope: !16610, file: !2464, line: 1778, column: 3)
!16610 = distinct !DILexicalBlock(scope: !16600, file: !2464, line: 1778, column: 3)
!16611 = !DILocation(line: 0, scope: !14512, inlinedAt: !16612)
!16612 = distinct !DILocation(line: 1780, column: 2, scope: !16540)
!16613 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !16612)
!16614 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !16612)
!16615 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !16612)
!16616 = !DILocation(line: 0, scope: !14526, inlinedAt: !16617)
!16617 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !16612)
!16618 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !16617)
!16619 = !DILocation(line: 1781, column: 1, scope: !16540)
!16620 = distinct !DISubprogram(name: "end_thread", scope: !2464, file: !2464, line: 1690, type: !14436, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16621)
!16621 = !{!16622}
!16622 = !DILocalVariable(name: "thread", arg: 1, scope: !16620, file: !2464, line: 1690, type: !2356)
!16623 = !DILocation(line: 0, scope: !16620)
!16624 = !DILocation(line: 1695, column: 20, scope: !16625)
!16625 = distinct !DILexicalBlock(scope: !16620, file: !2464, line: 1695, column: 6)
!16626 = !DILocation(line: 1695, column: 33, scope: !16625)
!16627 = !DILocation(line: 1695, column: 49, scope: !16625)
!16628 = !DILocation(line: 1695, column: 6, scope: !16620)
!16629 = !DILocation(line: 1697, column: 29, scope: !16630)
!16630 = distinct !DILexicalBlock(scope: !16625, file: !2464, line: 1695, column: 56)
!16631 = !DILocation(line: 1698, column: 7, scope: !16632)
!16632 = distinct !DILexicalBlock(scope: !16630, file: !2464, line: 1698, column: 7)
!16633 = !DILocation(line: 1698, column: 7, scope: !16630)
!16634 = !DILocation(line: 0, scope: !14670, inlinedAt: !16635)
!16635 = distinct !DILocation(line: 1699, column: 4, scope: !16636)
!16636 = distinct !DILexicalBlock(scope: !16632, file: !2464, line: 1698, column: 35)
!16637 = !DILocation(line: 266, column: 28, scope: !14670, inlinedAt: !16635)
!16638 = !DILocation(line: 0, scope: !14678, inlinedAt: !16639)
!16639 = distinct !DILocation(line: 268, column: 3, scope: !14682, inlinedAt: !16635)
!16640 = !DILocation(line: 234, column: 2, scope: !14678, inlinedAt: !16639)
!16641 = !DILocation(line: 1700, column: 3, scope: !16636)
!16642 = !DILocation(line: 1701, column: 20, scope: !16643)
!16643 = distinct !DILexicalBlock(scope: !16630, file: !2464, line: 1701, column: 7)
!16644 = !DILocation(line: 1701, column: 30, scope: !16643)
!16645 = !DILocation(line: 1701, column: 7, scope: !16630)
!16646 = !DILocation(line: 1702, column: 4, scope: !16647)
!16647 = distinct !DILexicalBlock(scope: !16643, file: !2464, line: 1701, column: 39)
!16648 = !DILocation(line: 1703, column: 3, scope: !16647)
!16649 = !DILocation(line: 1704, column: 9, scope: !16630)
!16650 = !DILocation(line: 1705, column: 23, scope: !16630)
!16651 = !DILocation(line: 1705, column: 3, scope: !16630)
!16652 = !DILocation(line: 1706, column: 3, scope: !16630)
!16653 = !DILocation(line: 1722, column: 2, scope: !16630)
!16654 = !DILocation(line: 1723, column: 1, scope: !16620)
!16655 = distinct !DISubprogram(name: "unpend_all", scope: !2464, file: !2464, line: 1674, type: !16656, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16658)
!16656 = !DISubroutineType(types: !16657)
!16657 = !{null, !2387}
!16658 = !{!16659, !16660}
!16659 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16655, file: !2464, line: 1674, type: !2387)
!16660 = !DILocalVariable(name: "thread", scope: !16655, file: !2464, line: 1676, type: !2356)
!16661 = !DILocation(line: 0, scope: !16655)
!16662 = !DILocation(line: 1678, column: 19, scope: !16655)
!16663 = !DILocation(line: 1678, column: 41, scope: !16655)
!16664 = !DILocation(line: 1678, column: 2, scope: !16655)
!16665 = !DILocation(line: 1679, column: 3, scope: !16666)
!16666 = distinct !DILexicalBlock(scope: !16655, file: !2464, line: 1678, column: 50)
!16667 = !DILocation(line: 1680, column: 9, scope: !16666)
!16668 = !DILocalVariable(name: "thread", arg: 1, scope: !16669, file: !13658, line: 65, type: !2356)
!16669 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13658, file: !13658, line: 65, type: !16670, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16672)
!16670 = !DISubroutineType(types: !16671)
!16671 = !{null, !2356, !32}
!16672 = !{!16668, !16673}
!16673 = !DILocalVariable(name: "value", arg: 2, scope: !16669, file: !13658, line: 65, type: !32)
!16674 = !DILocation(line: 0, scope: !16669, inlinedAt: !16675)
!16675 = distinct !DILocation(line: 1681, column: 3, scope: !16666)
!16676 = !DILocation(line: 67, column: 15, scope: !16669, inlinedAt: !16675)
!16677 = !DILocation(line: 67, column: 33, scope: !16669, inlinedAt: !16675)
!16678 = !DILocation(line: 1682, column: 3, scope: !16666)
!16679 = distinct !{!16679, !16664, !16680}
!16680 = !DILocation(line: 1683, column: 2, scope: !16655)
!16681 = !DILocation(line: 1684, column: 1, scope: !16655)
!16682 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2464, file: !2464, line: 1794, type: !16683, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16685)
!16683 = !DISubroutineType(types: !16684)
!16684 = !{!107, !2356, !15366}
!16685 = !{!16686, !16687, !16688, !16689}
!16686 = !DILocalVariable(name: "thread", arg: 1, scope: !16682, file: !2464, line: 1794, type: !2356)
!16687 = !DILocalVariable(name: "timeout", arg: 2, scope: !16682, file: !2464, line: 1794, type: !15366)
!16688 = !DILocalVariable(name: "key", scope: !16682, file: !2464, line: 1796, type: !14470)
!16689 = !DILocalVariable(name: "ret", scope: !16682, file: !2464, line: 1797, type: !107)
!16690 = !DILocation(line: 0, scope: !16682)
!16691 = !DILocation(line: 0, scope: !14478, inlinedAt: !16692)
!16692 = distinct !DILocation(line: 1796, column: 25, scope: !16682)
!16693 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !16694)
!16694 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !16692)
!16695 = !DILocation(line: 0, scope: !14487, inlinedAt: !16694)
!16696 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !16692)
!16697 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !16692)
!16698 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !16692)
!16699 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !16692)
!16700 = !DILocation(line: 1801, column: 20, scope: !16701)
!16701 = distinct !DILexicalBlock(scope: !16682, file: !2464, line: 1801, column: 6)
!16702 = !DILocation(line: 1801, column: 33, scope: !16701)
!16703 = !DILocation(line: 1801, column: 49, scope: !16701)
!16704 = !DILocation(line: 1801, column: 6, scope: !16682)
!16705 = !DILocation(line: 1803, column: 13, scope: !16706)
!16706 = distinct !DILexicalBlock(scope: !16701, file: !2464, line: 1803, column: 13)
!16707 = !DILocation(line: 1803, column: 13, scope: !16701)
!16708 = !DILocation(line: 1805, column: 24, scope: !16709)
!16709 = distinct !DILexicalBlock(scope: !16706, file: !2464, line: 1805, column: 13)
!16710 = !DILocation(line: 1805, column: 21, scope: !16709)
!16711 = !DILocation(line: 1805, column: 34, scope: !16709)
!16712 = !DILocation(line: 1806, column: 20, scope: !16709)
!16713 = !DILocation(line: 1806, column: 44, scope: !16709)
!16714 = !DILocation(line: 1806, column: 30, scope: !16709)
!16715 = !DILocation(line: 1805, column: 13, scope: !16706)
!16716 = !DILocation(line: 1031, column: 3, scope: !15205, inlinedAt: !16717)
!16717 = distinct !DILocation(line: 48, column: 10, scope: !15209, inlinedAt: !16718)
!16718 = distinct !DILocation(line: 1809, column: 3, scope: !16719)
!16719 = distinct !DILexicalBlock(scope: !16720, file: !2464, line: 1809, column: 3)
!16720 = distinct !DILexicalBlock(scope: !16721, file: !2464, line: 1809, column: 3)
!16721 = distinct !DILexicalBlock(scope: !16709, file: !2464, line: 1808, column: 9)
!16722 = !DILocation(line: 0, scope: !15205, inlinedAt: !16717)
!16723 = !DILocation(line: 48, column: 9, scope: !15209, inlinedAt: !16718)
!16724 = !DILocation(line: 1809, column: 3, scope: !16720)
!16725 = !DILocation(line: 1809, column: 3, scope: !16726)
!16726 = distinct !DILexicalBlock(scope: !16719, file: !2464, line: 1809, column: 3)
!16727 = !DILocation(line: 1810, column: 23, scope: !16721)
!16728 = !DILocation(line: 1810, column: 42, scope: !16721)
!16729 = !DILocation(line: 1810, column: 3, scope: !16721)
!16730 = !DILocation(line: 1811, column: 22, scope: !16721)
!16731 = !DILocation(line: 1811, column: 3, scope: !16721)
!16732 = !DILocation(line: 0, scope: !15156, inlinedAt: !16733)
!16733 = distinct !DILocation(line: 1814, column: 9, scope: !16721)
!16734 = !DILocation(line: 0, scope: !15165, inlinedAt: !16735)
!16735 = distinct !DILocation(line: 195, column: 2, scope: !15156, inlinedAt: !16733)
!16736 = !DILocation(line: 225, column: 2, scope: !15172, inlinedAt: !16735)
!16737 = !DILocation(line: 225, column: 2, scope: !15173, inlinedAt: !16735)
!16738 = !DILocation(line: 225, column: 2, scope: !15176, inlinedAt: !16735)
!16739 = !DILocation(line: 196, column: 9, scope: !15156, inlinedAt: !16733)
!16740 = !DILocation(line: 1817, column: 3, scope: !16721)
!16741 = !DILocation(line: 0, scope: !16701)
!16742 = !DILocation(line: 0, scope: !14512, inlinedAt: !16743)
!16743 = distinct !DILocation(line: 1822, column: 2, scope: !16682)
!16744 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !16743)
!16745 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !16743)
!16746 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !16743)
!16747 = !DILocation(line: 0, scope: !14526, inlinedAt: !16748)
!16748 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !16743)
!16749 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !16748)
!16750 = !DILocation(line: 1823, column: 2, scope: !16682)
!16751 = !DILocation(line: 1824, column: 1, scope: !16682)
!16752 = distinct !DISubprogram(name: "z_sched_wake", scope: !2464, file: !2464, line: 1882, type: !16753, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16755)
!16753 = !DISubroutineType(types: !16754)
!16754 = !{!145, !2387, !107, !106}
!16755 = !{!16756, !16757, !16758, !16759, !16760, !16761, !16763}
!16756 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16752, file: !2464, line: 1882, type: !2387)
!16757 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16752, file: !2464, line: 1882, type: !107)
!16758 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16752, file: !2464, line: 1882, type: !106)
!16759 = !DILocalVariable(name: "thread", scope: !16752, file: !2464, line: 1884, type: !2356)
!16760 = !DILocalVariable(name: "ret", scope: !16752, file: !2464, line: 1885, type: !145)
!16761 = !DILocalVariable(name: "__i", scope: !16762, file: !2464, line: 1887, type: !14470)
!16762 = distinct !DILexicalBlock(scope: !16752, file: !2464, line: 1887, column: 2)
!16763 = !DILocalVariable(name: "__key", scope: !16762, file: !2464, line: 1887, type: !14470)
!16764 = !DILocation(line: 0, scope: !16752)
!16765 = !DILocation(line: 0, scope: !16762)
!16766 = !DILocation(line: 0, scope: !14478, inlinedAt: !16767)
!16767 = distinct !DILocation(line: 1887, column: 2, scope: !16762)
!16768 = !DILocation(line: 55, column: 2, scope: !14487, inlinedAt: !16769)
!16769 = distinct !DILocation(line: 145, column: 10, scope: !14478, inlinedAt: !16767)
!16770 = !DILocation(line: 0, scope: !14487, inlinedAt: !16769)
!16771 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !16767)
!16772 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !16767)
!16773 = !DILocation(line: 148, column: 2, scope: !14499, inlinedAt: !16767)
!16774 = !DILocation(line: 160, column: 2, scope: !14478, inlinedAt: !16767)
!16775 = !DILocation(line: 1888, column: 12, scope: !16776)
!16776 = distinct !DILexicalBlock(scope: !16777, file: !2464, line: 1887, column: 26)
!16777 = distinct !DILexicalBlock(scope: !16762, file: !2464, line: 1887, column: 2)
!16778 = !DILocation(line: 1890, column: 14, scope: !16779)
!16779 = distinct !DILexicalBlock(scope: !16776, file: !2464, line: 1890, column: 7)
!16780 = !DILocation(line: 1890, column: 7, scope: !16776)
!16781 = !DILocalVariable(name: "thread", arg: 1, scope: !16782, file: !16783, line: 134, type: !2356)
!16782 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16783, file: !16783, line: 134, type: !16784, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16786)
!16783 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16784 = !DISubroutineType(types: !16785)
!16785 = !{null, !2356, !32, !106}
!16786 = !{!16781, !16787, !16788}
!16787 = !DILocalVariable(name: "value", arg: 2, scope: !16782, file: !16783, line: 135, type: !32)
!16788 = !DILocalVariable(name: "data", arg: 3, scope: !16782, file: !16783, line: 136, type: !106)
!16789 = !DILocation(line: 0, scope: !16782, inlinedAt: !16790)
!16790 = distinct !DILocation(line: 1891, column: 4, scope: !16791)
!16791 = distinct !DILexicalBlock(scope: !16779, file: !2464, line: 1890, column: 23)
!16792 = !DILocation(line: 0, scope: !16669, inlinedAt: !16793)
!16793 = distinct !DILocation(line: 138, column: 2, scope: !16782, inlinedAt: !16790)
!16794 = !DILocation(line: 67, column: 15, scope: !16669, inlinedAt: !16793)
!16795 = !DILocation(line: 67, column: 33, scope: !16669, inlinedAt: !16793)
!16796 = !DILocation(line: 139, column: 15, scope: !16782, inlinedAt: !16790)
!16797 = !DILocation(line: 139, column: 25, scope: !16782, inlinedAt: !16790)
!16798 = !DILocation(line: 1894, column: 4, scope: !16791)
!16799 = !DILocation(line: 1895, column: 10, scope: !16791)
!16800 = !DILocation(line: 1896, column: 4, scope: !16791)
!16801 = !DILocation(line: 1898, column: 3, scope: !16791)
!16802 = !DILocation(line: 0, scope: !14512, inlinedAt: !16803)
!16803 = distinct !DILocation(line: 1887, column: 2, scope: !16777)
!16804 = !DILocation(line: 194, column: 2, scope: !14520, inlinedAt: !16803)
!16805 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !16803)
!16806 = !DILocation(line: 194, column: 2, scope: !14524, inlinedAt: !16803)
!16807 = !DILocation(line: 0, scope: !14526, inlinedAt: !16808)
!16808 = distinct !DILocation(line: 215, column: 2, scope: !14512, inlinedAt: !16803)
!16809 = !DILocation(line: 95, column: 2, scope: !14526, inlinedAt: !16808)
!16810 = !DILocation(line: 1901, column: 2, scope: !16752)
!16811 = distinct !DISubprogram(name: "z_sched_wait", scope: !2464, file: !2464, line: 1904, type: !16812, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16815)
!16812 = !DISubroutineType(types: !16813)
!16813 = !{!107, !14481, !14470, !2387, !15366, !16814}
!16814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!16815 = !{!16816, !16817, !16818, !16819, !16820, !16821}
!16816 = !DILocalVariable(name: "lock", arg: 1, scope: !16811, file: !2464, line: 1904, type: !14481)
!16817 = !DILocalVariable(name: "key", arg: 2, scope: !16811, file: !2464, line: 1904, type: !14470)
!16818 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16811, file: !2464, line: 1905, type: !2387)
!16819 = !DILocalVariable(name: "timeout", arg: 4, scope: !16811, file: !2464, line: 1905, type: !15366)
!16820 = !DILocalVariable(name: "data", arg: 5, scope: !16811, file: !2464, line: 1905, type: !16814)
!16821 = !DILocalVariable(name: "ret", scope: !16811, file: !2464, line: 1907, type: !107)
!16822 = !DILocation(line: 0, scope: !16811)
!16823 = !DILocation(line: 1907, column: 12, scope: !16811)
!16824 = !DILocation(line: 1909, column: 11, scope: !16825)
!16825 = distinct !DILexicalBlock(scope: !16811, file: !2464, line: 1909, column: 6)
!16826 = !DILocation(line: 1909, column: 6, scope: !16811)
!16827 = !DILocation(line: 1910, column: 11, scope: !16828)
!16828 = distinct !DILexicalBlock(scope: !16825, file: !2464, line: 1909, column: 20)
!16829 = !DILocation(line: 1910, column: 26, scope: !16828)
!16830 = !DILocation(line: 1910, column: 9, scope: !16828)
!16831 = !DILocation(line: 1911, column: 2, scope: !16828)
!16832 = !DILocation(line: 1912, column: 2, scope: !16811)
!16833 = distinct !DISubprogram(name: "z_data_copy", scope: !16834, file: !16834, line: 22, type: !3089, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3072, retainedNodes: !2166)
!16834 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16835 = !DILocation(line: 24, column: 2, scope: !16833)
!16836 = !DILocation(line: 27, column: 2, scope: !16833)
!16837 = !DILocation(line: 31, column: 2, scope: !16833)
!16838 = !DILocation(line: 71, column: 1, scope: !16833)
!16839 = distinct !DISubprogram(name: "z_add_timeout", scope: !2501, file: !2501, line: 88, type: !16840, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16846)
!16840 = !DISubroutineType(types: !16841)
!16841 = !{null, !2474, !2493, !16842}
!16842 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !16843)
!16843 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !16844)
!16844 = !{!16845}
!16845 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16843, file: !565, line: 66, baseType: !564, size: 64)
!16846 = !{!16847, !16848, !16849, !16850, !16856, !16857, !16860, !16863}
!16847 = !DILocalVariable(name: "to", arg: 1, scope: !16839, file: !2501, line: 88, type: !2474)
!16848 = !DILocalVariable(name: "fn", arg: 2, scope: !16839, file: !2501, line: 88, type: !2493)
!16849 = !DILocalVariable(name: "timeout", arg: 3, scope: !16839, file: !2501, line: 89, type: !16842)
!16850 = !DILocalVariable(name: "__i", scope: !16851, file: !2501, line: 102, type: !16852)
!16851 = distinct !DILexicalBlock(scope: !16839, file: !2501, line: 102, column: 2)
!16852 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !16853)
!16853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !16854)
!16854 = !{!16855}
!16855 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16853, file: !420, line: 33, baseType: !107, size: 32)
!16856 = !DILocalVariable(name: "__key", scope: !16851, file: !2501, line: 102, type: !16852)
!16857 = !DILocalVariable(name: "t", scope: !16858, file: !2501, line: 103, type: !2474)
!16858 = distinct !DILexicalBlock(scope: !16859, file: !2501, line: 102, column: 24)
!16859 = distinct !DILexicalBlock(scope: !16851, file: !2501, line: 102, column: 2)
!16860 = !DILocalVariable(name: "ticks", scope: !16861, file: !2501, line: 107, type: !564)
!16861 = distinct !DILexicalBlock(scope: !16862, file: !2501, line: 106, column: 39)
!16862 = distinct !DILexicalBlock(scope: !16858, file: !2501, line: 105, column: 7)
!16863 = !DILocalVariable(name: "next_time", scope: !16864, file: !2501, line: 137, type: !896)
!16864 = distinct !DILexicalBlock(scope: !16865, file: !2501, line: 127, column: 22)
!16865 = distinct !DILexicalBlock(scope: !16858, file: !2501, line: 127, column: 7)
!16866 = !DILocation(line: 0, scope: !16839)
!16867 = !DILocation(line: 91, column: 6, scope: !16868)
!16868 = distinct !DILexicalBlock(scope: !16839, file: !2501, line: 91, column: 6)
!16869 = !DILocation(line: 91, column: 6, scope: !16839)
!16870 = !DILocation(line: 99, column: 2, scope: !16871)
!16871 = distinct !DILexicalBlock(scope: !16872, file: !2501, line: 99, column: 2)
!16872 = distinct !DILexicalBlock(scope: !16839, file: !2501, line: 99, column: 2)
!16873 = !DILocation(line: 99, column: 2, scope: !16872)
!16874 = !DILocation(line: 99, column: 2, scope: !16875)
!16875 = distinct !DILexicalBlock(scope: !16871, file: !2501, line: 99, column: 2)
!16876 = !DILocation(line: 100, column: 6, scope: !16839)
!16877 = !DILocation(line: 100, column: 9, scope: !16839)
!16878 = !DILocation(line: 0, scope: !16851)
!16879 = !DILocalVariable(name: "l", arg: 1, scope: !16880, file: !420, line: 136, type: !16883)
!16880 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !16881, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16884)
!16881 = !DISubroutineType(types: !16882)
!16882 = !{!16852, !16883}
!16883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2507, size: 32)
!16884 = !{!16879, !16885}
!16885 = !DILocalVariable(name: "k", scope: !16880, file: !420, line: 139, type: !16852)
!16886 = !DILocation(line: 0, scope: !16880, inlinedAt: !16887)
!16887 = distinct !DILocation(line: 102, column: 2, scope: !16851)
!16888 = !DILocation(line: 55, column: 2, scope: !16889, inlinedAt: !16893)
!16889 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5937, file: !5937, line: 42, type: !5938, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16890)
!16890 = !{!16891, !16892}
!16891 = !DILocalVariable(name: "key", scope: !16889, file: !5937, line: 44, type: !32)
!16892 = !DILocalVariable(name: "tmp", scope: !16889, file: !5937, line: 53, type: !32)
!16893 = distinct !DILocation(line: 145, column: 10, scope: !16880, inlinedAt: !16887)
!16894 = !{i64 2232401}
!16895 = !DILocation(line: 0, scope: !16889, inlinedAt: !16893)
!16896 = !DILocation(line: 148, column: 2, scope: !16897, inlinedAt: !16887)
!16897 = distinct !DILexicalBlock(scope: !16898, file: !420, line: 148, column: 2)
!16898 = distinct !DILexicalBlock(scope: !16880, file: !420, line: 148, column: 2)
!16899 = !DILocation(line: 148, column: 2, scope: !16898, inlinedAt: !16887)
!16900 = !DILocation(line: 148, column: 2, scope: !16901, inlinedAt: !16887)
!16901 = distinct !DILexicalBlock(scope: !16897, file: !420, line: 148, column: 2)
!16902 = !DILocation(line: 160, column: 2, scope: !16880, inlinedAt: !16887)
!16903 = !DILocation(line: 106, column: 33, scope: !16862)
!16904 = !DILocation(line: 105, column: 7, scope: !16858)
!16905 = !DILocation(line: 107, column: 50, scope: !16861)
!16906 = !DILocation(line: 107, column: 48, scope: !16861)
!16907 = !DILocation(line: 0, scope: !16861)
!16908 = !DILocation(line: 109, column: 17, scope: !16861)
!16909 = !DILocation(line: 110, column: 3, scope: !16861)
!16910 = !DILocation(line: 111, column: 31, scope: !16911)
!16911 = distinct !DILexicalBlock(scope: !16862, file: !2501, line: 110, column: 10)
!16912 = !DILocation(line: 111, column: 37, scope: !16911)
!16913 = !DILocation(line: 111, column: 35, scope: !16911)
!16914 = !DILocation(line: 0, scope: !16862)
!16915 = !DILocation(line: 109, column: 8, scope: !16861)
!16916 = !DILocation(line: 109, column: 15, scope: !16861)
!16917 = !DILocation(line: 114, column: 12, scope: !16918)
!16918 = distinct !DILexicalBlock(scope: !16858, file: !2501, line: 114, column: 3)
!16919 = !DILocation(line: 0, scope: !16858)
!16920 = !DILocation(line: 114, column: 3, scope: !16918)
!16921 = !DILocation(line: 115, column: 24, scope: !16922)
!16922 = distinct !DILexicalBlock(scope: !16923, file: !2501, line: 115, column: 8)
!16923 = distinct !DILexicalBlock(scope: !16924, file: !2501, line: 114, column: 45)
!16924 = distinct !DILexicalBlock(scope: !16918, file: !2501, line: 114, column: 3)
!16925 = !DILocation(line: 115, column: 11, scope: !16922)
!16926 = !DILocation(line: 115, column: 18, scope: !16922)
!16927 = !DILocation(line: 115, column: 8, scope: !16923)
!16928 = !DILocation(line: 116, column: 15, scope: !16929)
!16929 = distinct !DILexicalBlock(scope: !16922, file: !2501, line: 115, column: 32)
!16930 = !DILocation(line: 117, column: 26, scope: !16929)
!16931 = !DILocation(line: 117, column: 5, scope: !16929)
!16932 = !DILocation(line: 123, column: 7, scope: !16858)
!16933 = !DILocation(line: 120, column: 15, scope: !16923)
!16934 = !DILocation(line: 114, column: 36, scope: !16924)
!16935 = distinct !{!16935, !16920, !16936}
!16936 = !DILocation(line: 121, column: 3, scope: !16918)
!16937 = !DILocation(line: 124, column: 4, scope: !16938)
!16938 = distinct !DILexicalBlock(scope: !16939, file: !2501, line: 123, column: 18)
!16939 = distinct !DILexicalBlock(scope: !16858, file: !2501, line: 123, column: 7)
!16940 = !DILocation(line: 125, column: 3, scope: !16938)
!16941 = !DILocation(line: 127, column: 13, scope: !16865)
!16942 = !DILocation(line: 127, column: 10, scope: !16865)
!16943 = !DILocation(line: 127, column: 7, scope: !16858)
!16944 = !DILocation(line: 137, column: 24, scope: !16864)
!16945 = !DILocation(line: 0, scope: !16864)
!16946 = !DILocation(line: 139, column: 18, scope: !16947)
!16947 = distinct !DILexicalBlock(scope: !16864, file: !2501, line: 139, column: 8)
!16948 = !DILocation(line: 139, column: 23, scope: !16947)
!16949 = !DILocation(line: 141, column: 5, scope: !16950)
!16950 = distinct !DILexicalBlock(scope: !16947, file: !2501, line: 140, column: 48)
!16951 = !DILocation(line: 142, column: 4, scope: !16950)
!16952 = !DILocalVariable(name: "key", arg: 2, scope: !16953, file: !420, line: 190, type: !16852)
!16953 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !16954, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16956)
!16954 = !DISubroutineType(types: !16955)
!16955 = !{null, !16883, !16852}
!16956 = !{!16957, !16952}
!16957 = !DILocalVariable(name: "l", arg: 1, scope: !16953, file: !420, line: 189, type: !16883)
!16958 = !DILocation(line: 0, scope: !16953, inlinedAt: !16959)
!16959 = distinct !DILocation(line: 102, column: 2, scope: !16859)
!16960 = !DILocation(line: 194, column: 2, scope: !16961, inlinedAt: !16959)
!16961 = distinct !DILexicalBlock(scope: !16962, file: !420, line: 194, column: 2)
!16962 = distinct !DILexicalBlock(scope: !16953, file: !420, line: 194, column: 2)
!16963 = !DILocation(line: 194, column: 2, scope: !16962, inlinedAt: !16959)
!16964 = !DILocation(line: 194, column: 2, scope: !16965, inlinedAt: !16959)
!16965 = distinct !DILexicalBlock(scope: !16961, file: !420, line: 194, column: 2)
!16966 = !DILocalVariable(name: "key", arg: 1, scope: !16967, file: !5937, line: 84, type: !32)
!16967 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5937, file: !5937, line: 84, type: !5948, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16968)
!16968 = !{!16966}
!16969 = !DILocation(line: 0, scope: !16967, inlinedAt: !16970)
!16970 = distinct !DILocation(line: 215, column: 2, scope: !16953, inlinedAt: !16959)
!16971 = !DILocation(line: 95, column: 2, scope: !16967, inlinedAt: !16970)
!16972 = !{i64 2233218}
!16973 = !DILocation(line: 148, column: 1, scope: !16839)
!16974 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !319, file: !319, line: 225, type: !16975, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16979)
!16975 = !DISubroutineType(types: !16976)
!16976 = !{!145, !16977}
!16977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16978, size: 32)
!16978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2478)
!16979 = !{!16980}
!16980 = !DILocalVariable(name: "node", arg: 1, scope: !16974, file: !319, line: 225, type: !16977)
!16981 = !DILocation(line: 0, scope: !16974)
!16982 = !DILocation(line: 227, column: 15, scope: !16974)
!16983 = !DILocation(line: 227, column: 20, scope: !16974)
!16984 = !DILocation(line: 227, column: 2, scope: !16974)
!16985 = distinct !DISubprogram(name: "elapsed", scope: !2501, file: !2501, line: 62, type: !16986, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !2166)
!16986 = !DISubroutineType(types: !16987)
!16987 = !{!896}
!16988 = !DILocation(line: 64, column: 9, scope: !16985)
!16989 = !DILocation(line: 64, column: 28, scope: !16985)
!16990 = !DILocation(line: 64, column: 35, scope: !16985)
!16991 = !DILocation(line: 64, column: 2, scope: !16985)
!16992 = distinct !DISubprogram(name: "first", scope: !2501, file: !2501, line: 39, type: !16993, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16995)
!16993 = !DISubroutineType(types: !16994)
!16994 = !{!2474}
!16995 = !{!16996}
!16996 = !DILocalVariable(name: "t", scope: !16992, file: !2501, line: 41, type: !16997)
!16997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 32)
!16998 = !DILocation(line: 41, column: 19, scope: !16992)
!16999 = !DILocation(line: 0, scope: !16992)
!17000 = !DILocation(line: 43, column: 9, scope: !16992)
!17001 = !DILocation(line: 43, column: 2, scope: !16992)
!17002 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !319, file: !319, line: 443, type: !17003, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17005)
!17003 = !DISubroutineType(types: !17004)
!17004 = !{null, !16997, !16997}
!17005 = !{!17006, !17007, !17008}
!17006 = !DILocalVariable(name: "successor", arg: 1, scope: !17002, file: !319, line: 443, type: !16997)
!17007 = !DILocalVariable(name: "node", arg: 2, scope: !17002, file: !319, line: 443, type: !16997)
!17008 = !DILocalVariable(name: "prev", scope: !17002, file: !319, line: 445, type: !17009)
!17009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16997)
!17010 = !DILocation(line: 0, scope: !17002)
!17011 = !DILocation(line: 445, column: 39, scope: !17002)
!17012 = !DILocation(line: 447, column: 8, scope: !17002)
!17013 = !DILocation(line: 447, column: 13, scope: !17002)
!17014 = !DILocation(line: 448, column: 8, scope: !17002)
!17015 = !DILocation(line: 448, column: 13, scope: !17002)
!17016 = !DILocation(line: 449, column: 8, scope: !17002)
!17017 = !DILocation(line: 449, column: 13, scope: !17002)
!17018 = !DILocation(line: 450, column: 18, scope: !17002)
!17019 = !DILocation(line: 451, column: 1, scope: !17002)
!17020 = distinct !DISubprogram(name: "next", scope: !2501, file: !2501, line: 46, type: !17021, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17023)
!17021 = !DISubroutineType(types: !17022)
!17022 = !{!2474, !2474}
!17023 = !{!17024, !17025}
!17024 = !DILocalVariable(name: "t", arg: 1, scope: !17020, file: !2501, line: 46, type: !2474)
!17025 = !DILocalVariable(name: "n", scope: !17020, file: !2501, line: 48, type: !16997)
!17026 = !DILocation(line: 0, scope: !17020)
!17027 = !DILocation(line: 48, column: 58, scope: !17020)
!17028 = !DILocation(line: 48, column: 19, scope: !17020)
!17029 = !DILocation(line: 50, column: 9, scope: !17020)
!17030 = !DILocation(line: 50, column: 2, scope: !17020)
!17031 = distinct !DISubprogram(name: "sys_dlist_append", scope: !319, file: !319, line: 404, type: !17032, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17035)
!17032 = !DISubroutineType(types: !17033)
!17033 = !{null, !17034, !16997}
!17034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2506, size: 32)
!17035 = !{!17036, !17037, !17038}
!17036 = !DILocalVariable(name: "list", arg: 1, scope: !17031, file: !319, line: 404, type: !17034)
!17037 = !DILocalVariable(name: "node", arg: 2, scope: !17031, file: !319, line: 404, type: !16997)
!17038 = !DILocalVariable(name: "tail", scope: !17031, file: !319, line: 406, type: !17009)
!17039 = !DILocation(line: 0, scope: !17031)
!17040 = !DILocation(line: 406, column: 34, scope: !17031)
!17041 = !DILocation(line: 408, column: 8, scope: !17031)
!17042 = !DILocation(line: 408, column: 13, scope: !17031)
!17043 = !DILocation(line: 409, column: 8, scope: !17031)
!17044 = !DILocation(line: 409, column: 13, scope: !17031)
!17045 = !DILocation(line: 411, column: 8, scope: !17031)
!17046 = !DILocation(line: 411, column: 13, scope: !17031)
!17047 = !DILocation(line: 412, column: 13, scope: !17031)
!17048 = !DILocation(line: 413, column: 1, scope: !17031)
!17049 = distinct !DISubprogram(name: "next_timeout", scope: !2501, file: !2501, line: 67, type: !16986, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17050)
!17050 = !{!17051, !17052, !17053}
!17051 = !DILocalVariable(name: "to", scope: !17049, file: !2501, line: 69, type: !2474)
!17052 = !DILocalVariable(name: "ticks_elapsed", scope: !17049, file: !2501, line: 70, type: !896)
!17053 = !DILocalVariable(name: "ret", scope: !17049, file: !2501, line: 71, type: !896)
!17054 = !DILocation(line: 69, column: 24, scope: !17049)
!17055 = !DILocation(line: 0, scope: !17049)
!17056 = !DILocation(line: 70, column: 26, scope: !17049)
!17057 = !DILocation(line: 73, column: 10, scope: !17058)
!17058 = distinct !DILexicalBlock(scope: !17049, file: !2501, line: 73, column: 6)
!17059 = !DILocation(line: 73, column: 19, scope: !17058)
!17060 = !DILocation(line: 74, column: 21, scope: !17058)
!17061 = !DILocation(line: 74, column: 30, scope: !17058)
!17062 = !DILocation(line: 74, column: 28, scope: !17058)
!17063 = !DILocation(line: 74, column: 45, scope: !17058)
!17064 = !DILocation(line: 73, column: 6, scope: !17049)
!17065 = !DILocation(line: 77, column: 9, scope: !17066)
!17066 = distinct !DILexicalBlock(scope: !17058, file: !2501, line: 76, column: 9)
!17067 = !DILocation(line: 0, scope: !17058)
!17068 = !DILocation(line: 81, column: 20, scope: !17069)
!17069 = distinct !DILexicalBlock(scope: !17049, file: !2501, line: 81, column: 6)
!17070 = !DILocation(line: 81, column: 6, scope: !17069)
!17071 = !DILocation(line: 81, column: 32, scope: !17069)
!17072 = !DILocation(line: 85, column: 2, scope: !17049)
!17073 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !319, file: !319, line: 341, type: !17074, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17076)
!17074 = !DISubroutineType(types: !17075)
!17075 = !{!16997, !17034, !16997}
!17076 = !{!17077, !17078}
!17077 = !DILocalVariable(name: "list", arg: 1, scope: !17073, file: !319, line: 341, type: !17034)
!17078 = !DILocalVariable(name: "node", arg: 2, scope: !17073, file: !319, line: 342, type: !16997)
!17079 = !DILocation(line: 0, scope: !17073)
!17080 = !DILocation(line: 344, column: 15, scope: !17073)
!17081 = !DILocation(line: 344, column: 9, scope: !17073)
!17082 = !DILocation(line: 344, column: 26, scope: !17073)
!17083 = !DILocation(line: 344, column: 2, scope: !17073)
!17084 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !319, file: !319, line: 325, type: !17074, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17085)
!17085 = !{!17086, !17087}
!17086 = !DILocalVariable(name: "list", arg: 1, scope: !17084, file: !319, line: 325, type: !17034)
!17087 = !DILocalVariable(name: "node", arg: 2, scope: !17084, file: !319, line: 326, type: !16997)
!17088 = !DILocation(line: 0, scope: !17084)
!17089 = !DILocation(line: 328, column: 24, scope: !17084)
!17090 = !DILocation(line: 328, column: 15, scope: !17084)
!17091 = !DILocation(line: 328, column: 9, scope: !17084)
!17092 = !DILocation(line: 328, column: 45, scope: !17084)
!17093 = !DILocation(line: 328, column: 2, scope: !17084)
!17094 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !319, file: !319, line: 294, type: !17095, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17097)
!17095 = !DISubroutineType(types: !17096)
!17096 = !{!16997, !17034}
!17097 = !{!17098}
!17098 = !DILocalVariable(name: "list", arg: 1, scope: !17094, file: !319, line: 294, type: !17034)
!17099 = !DILocation(line: 0, scope: !17094)
!17100 = !DILocation(line: 296, column: 9, scope: !17094)
!17101 = !DILocation(line: 296, column: 2, scope: !17094)
!17102 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !319, file: !319, line: 266, type: !17103, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17105)
!17103 = !DISubroutineType(types: !17104)
!17104 = !{!145, !17034}
!17105 = !{!17106}
!17106 = !DILocalVariable(name: "list", arg: 1, scope: !17102, file: !319, line: 266, type: !17034)
!17107 = !DILocation(line: 0, scope: !17102)
!17108 = !DILocation(line: 268, column: 15, scope: !17102)
!17109 = !DILocation(line: 268, column: 20, scope: !17102)
!17110 = !DILocation(line: 268, column: 2, scope: !17102)
!17111 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2501, file: !2501, line: 150, type: !17112, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17114)
!17112 = !DISubroutineType(types: !17113)
!17113 = !{!107, !2474}
!17114 = !{!17115, !17116, !17117, !17119}
!17115 = !DILocalVariable(name: "to", arg: 1, scope: !17111, file: !2501, line: 150, type: !2474)
!17116 = !DILocalVariable(name: "ret", scope: !17111, file: !2501, line: 152, type: !107)
!17117 = !DILocalVariable(name: "__i", scope: !17118, file: !2501, line: 154, type: !16852)
!17118 = distinct !DILexicalBlock(scope: !17111, file: !2501, line: 154, column: 2)
!17119 = !DILocalVariable(name: "__key", scope: !17118, file: !2501, line: 154, type: !16852)
!17120 = !DILocation(line: 0, scope: !17111)
!17121 = !DILocation(line: 0, scope: !17118)
!17122 = !DILocation(line: 0, scope: !16880, inlinedAt: !17123)
!17123 = distinct !DILocation(line: 154, column: 2, scope: !17118)
!17124 = !DILocation(line: 55, column: 2, scope: !16889, inlinedAt: !17125)
!17125 = distinct !DILocation(line: 145, column: 10, scope: !16880, inlinedAt: !17123)
!17126 = !DILocation(line: 0, scope: !16889, inlinedAt: !17125)
!17127 = !DILocation(line: 148, column: 2, scope: !16897, inlinedAt: !17123)
!17128 = !DILocation(line: 148, column: 2, scope: !16898, inlinedAt: !17123)
!17129 = !DILocation(line: 148, column: 2, scope: !16901, inlinedAt: !17123)
!17130 = !DILocation(line: 160, column: 2, scope: !16880, inlinedAt: !17123)
!17131 = !DILocation(line: 155, column: 7, scope: !17132)
!17132 = distinct !DILexicalBlock(scope: !17133, file: !2501, line: 155, column: 7)
!17133 = distinct !DILexicalBlock(scope: !17134, file: !2501, line: 154, column: 24)
!17134 = distinct !DILexicalBlock(scope: !17118, file: !2501, line: 154, column: 2)
!17135 = !DILocation(line: 155, column: 7, scope: !17133)
!17136 = !DILocation(line: 156, column: 4, scope: !17137)
!17137 = distinct !DILexicalBlock(scope: !17132, file: !2501, line: 155, column: 39)
!17138 = !DILocation(line: 158, column: 3, scope: !17137)
!17139 = !DILocation(line: 0, scope: !16953, inlinedAt: !17140)
!17140 = distinct !DILocation(line: 154, column: 2, scope: !17134)
!17141 = !DILocation(line: 194, column: 2, scope: !16961, inlinedAt: !17140)
!17142 = !DILocation(line: 194, column: 2, scope: !16962, inlinedAt: !17140)
!17143 = !DILocation(line: 194, column: 2, scope: !16965, inlinedAt: !17140)
!17144 = !DILocation(line: 0, scope: !16967, inlinedAt: !17145)
!17145 = distinct !DILocation(line: 215, column: 2, scope: !16953, inlinedAt: !17140)
!17146 = !DILocation(line: 95, column: 2, scope: !16967, inlinedAt: !17145)
!17147 = !DILocation(line: 161, column: 2, scope: !17111)
!17148 = distinct !DISubprogram(name: "remove_timeout", scope: !2501, file: !2501, line: 53, type: !2495, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17149)
!17149 = !{!17150}
!17150 = !DILocalVariable(name: "t", arg: 1, scope: !17148, file: !2501, line: 53, type: !2474)
!17151 = !DILocation(line: 0, scope: !17148)
!17152 = !DILocation(line: 55, column: 6, scope: !17153)
!17153 = distinct !DILexicalBlock(scope: !17148, file: !2501, line: 55, column: 6)
!17154 = !DILocation(line: 55, column: 14, scope: !17153)
!17155 = !DILocation(line: 55, column: 6, scope: !17148)
!17156 = !DILocation(line: 56, column: 25, scope: !17157)
!17157 = distinct !DILexicalBlock(scope: !17153, file: !2501, line: 55, column: 23)
!17158 = !DILocation(line: 56, column: 12, scope: !17157)
!17159 = !DILocation(line: 56, column: 19, scope: !17157)
!17160 = !DILocation(line: 57, column: 2, scope: !17157)
!17161 = !DILocation(line: 59, column: 23, scope: !17148)
!17162 = !DILocation(line: 59, column: 2, scope: !17148)
!17163 = !DILocation(line: 60, column: 1, scope: !17148)
!17164 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !319, file: !319, line: 496, type: !17165, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17167)
!17165 = !DISubroutineType(types: !17166)
!17166 = !{null, !16997}
!17167 = !{!17168, !17169, !17170}
!17168 = !DILocalVariable(name: "node", arg: 1, scope: !17164, file: !319, line: 496, type: !16997)
!17169 = !DILocalVariable(name: "prev", scope: !17164, file: !319, line: 498, type: !17009)
!17170 = !DILocalVariable(name: "next", scope: !17164, file: !319, line: 499, type: !17009)
!17171 = !DILocation(line: 0, scope: !17164)
!17172 = !DILocation(line: 498, column: 34, scope: !17164)
!17173 = !DILocation(line: 499, column: 34, scope: !17164)
!17174 = !DILocation(line: 501, column: 8, scope: !17164)
!17175 = !DILocation(line: 501, column: 13, scope: !17164)
!17176 = !DILocation(line: 502, column: 8, scope: !17164)
!17177 = !DILocation(line: 502, column: 13, scope: !17164)
!17178 = !DILocation(line: 503, column: 2, scope: !17164)
!17179 = !DILocation(line: 504, column: 1, scope: !17164)
!17180 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !17165, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17181)
!17181 = !{!17182}
!17182 = !DILocalVariable(name: "node", arg: 1, scope: !17180, file: !319, line: 211, type: !16997)
!17183 = !DILocation(line: 0, scope: !17180)
!17184 = !DILocation(line: 213, column: 8, scope: !17180)
!17185 = !DILocation(line: 213, column: 13, scope: !17180)
!17186 = !DILocation(line: 214, column: 8, scope: !17180)
!17187 = !DILocation(line: 214, column: 13, scope: !17180)
!17188 = !DILocation(line: 215, column: 1, scope: !17180)
!17189 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2501, file: !2501, line: 183, type: !17190, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17194)
!17190 = !DISubroutineType(types: !17191)
!17191 = !{!564, !17192}
!17192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17193, size: 32)
!17193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2475)
!17194 = !{!17195, !17196, !17197, !17199}
!17195 = !DILocalVariable(name: "timeout", arg: 1, scope: !17189, file: !2501, line: 183, type: !17192)
!17196 = !DILocalVariable(name: "ticks", scope: !17189, file: !2501, line: 185, type: !564)
!17197 = !DILocalVariable(name: "__i", scope: !17198, file: !2501, line: 187, type: !16852)
!17198 = distinct !DILexicalBlock(scope: !17189, file: !2501, line: 187, column: 2)
!17199 = !DILocalVariable(name: "__key", scope: !17198, file: !2501, line: 187, type: !16852)
!17200 = !DILocation(line: 0, scope: !17189)
!17201 = !DILocation(line: 0, scope: !17198)
!17202 = !DILocation(line: 0, scope: !16880, inlinedAt: !17203)
!17203 = distinct !DILocation(line: 187, column: 2, scope: !17198)
!17204 = !DILocation(line: 55, column: 2, scope: !16889, inlinedAt: !17205)
!17205 = distinct !DILocation(line: 145, column: 10, scope: !16880, inlinedAt: !17203)
!17206 = !DILocation(line: 0, scope: !16889, inlinedAt: !17205)
!17207 = !DILocation(line: 148, column: 2, scope: !16897, inlinedAt: !17203)
!17208 = !DILocation(line: 148, column: 2, scope: !16898, inlinedAt: !17203)
!17209 = !DILocation(line: 148, column: 2, scope: !16901, inlinedAt: !17203)
!17210 = !DILocation(line: 160, column: 2, scope: !16880, inlinedAt: !17203)
!17211 = !DILocation(line: 188, column: 11, scope: !17212)
!17212 = distinct !DILexicalBlock(scope: !17213, file: !2501, line: 187, column: 24)
!17213 = distinct !DILexicalBlock(scope: !17198, file: !2501, line: 187, column: 2)
!17214 = !DILocation(line: 0, scope: !16953, inlinedAt: !17215)
!17215 = distinct !DILocation(line: 187, column: 2, scope: !17213)
!17216 = !DILocation(line: 194, column: 2, scope: !16961, inlinedAt: !17215)
!17217 = !DILocation(line: 194, column: 2, scope: !16962, inlinedAt: !17215)
!17218 = !DILocation(line: 194, column: 2, scope: !16965, inlinedAt: !17215)
!17219 = !DILocation(line: 0, scope: !16967, inlinedAt: !17220)
!17220 = distinct !DILocation(line: 215, column: 2, scope: !16953, inlinedAt: !17215)
!17221 = !DILocation(line: 95, column: 2, scope: !16967, inlinedAt: !17220)
!17222 = !DILocation(line: 191, column: 2, scope: !17189)
!17223 = distinct !DISubprogram(name: "timeout_rem", scope: !2501, file: !2501, line: 165, type: !17190, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17224)
!17224 = !{!17225, !17226, !17227}
!17225 = !DILocalVariable(name: "timeout", arg: 1, scope: !17223, file: !2501, line: 165, type: !17192)
!17226 = !DILocalVariable(name: "ticks", scope: !17223, file: !2501, line: 167, type: !564)
!17227 = !DILocalVariable(name: "t", scope: !17228, file: !2501, line: 173, type: !2474)
!17228 = distinct !DILexicalBlock(scope: !17223, file: !2501, line: 173, column: 2)
!17229 = !DILocation(line: 0, scope: !17223)
!17230 = !DILocation(line: 169, column: 6, scope: !17231)
!17231 = distinct !DILexicalBlock(scope: !17223, file: !2501, line: 169, column: 6)
!17232 = !DILocation(line: 169, column: 6, scope: !17223)
!17233 = !DILocation(line: 173, column: 28, scope: !17228)
!17234 = !DILocation(line: 0, scope: !17228)
!17235 = !DILocation(line: 173, column: 39, scope: !17236)
!17236 = distinct !DILexicalBlock(scope: !17228, file: !2501, line: 173, column: 2)
!17237 = !DILocation(line: 173, column: 2, scope: !17228)
!17238 = !DILocation(line: 174, column: 15, scope: !17239)
!17239 = distinct !DILexicalBlock(scope: !17236, file: !2501, line: 173, column: 61)
!17240 = !DILocation(line: 174, column: 9, scope: !17239)
!17241 = !DILocation(line: 175, column: 15, scope: !17242)
!17242 = distinct !DILexicalBlock(scope: !17239, file: !2501, line: 175, column: 7)
!17243 = !DILocation(line: 175, column: 7, scope: !17239)
!17244 = !DILocation(line: 173, column: 52, scope: !17236)
!17245 = distinct !{!17245, !17237, !17246}
!17246 = !DILocation(line: 178, column: 2, scope: !17228)
!17247 = !DILocation(line: 180, column: 17, scope: !17223)
!17248 = !DILocation(line: 180, column: 15, scope: !17223)
!17249 = !DILocation(line: 180, column: 2, scope: !17223)
!17250 = !DILocation(line: 181, column: 1, scope: !17223)
!17251 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14067, file: !14067, line: 35, type: !17252, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17254)
!17252 = !DISubroutineType(types: !17253)
!17253 = !{!145, !17192}
!17254 = !{!17255}
!17255 = !DILocalVariable(name: "to", arg: 1, scope: !17251, file: !14067, line: 35, type: !17192)
!17256 = !DILocation(line: 0, scope: !17251)
!17257 = !DILocation(line: 37, column: 35, scope: !17251)
!17258 = !DILocation(line: 37, column: 10, scope: !17251)
!17259 = !DILocation(line: 37, column: 9, scope: !17251)
!17260 = !DILocation(line: 37, column: 2, scope: !17251)
!17261 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2501, file: !2501, line: 194, type: !17190, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17262)
!17262 = !{!17263, !17264, !17265, !17267}
!17263 = !DILocalVariable(name: "timeout", arg: 1, scope: !17261, file: !2501, line: 194, type: !17192)
!17264 = !DILocalVariable(name: "ticks", scope: !17261, file: !2501, line: 196, type: !564)
!17265 = !DILocalVariable(name: "__i", scope: !17266, file: !2501, line: 198, type: !16852)
!17266 = distinct !DILexicalBlock(scope: !17261, file: !2501, line: 198, column: 2)
!17267 = !DILocalVariable(name: "__key", scope: !17266, file: !2501, line: 198, type: !16852)
!17268 = !DILocation(line: 0, scope: !17261)
!17269 = !DILocation(line: 0, scope: !17266)
!17270 = !DILocation(line: 0, scope: !16880, inlinedAt: !17271)
!17271 = distinct !DILocation(line: 198, column: 2, scope: !17266)
!17272 = !DILocation(line: 55, column: 2, scope: !16889, inlinedAt: !17273)
!17273 = distinct !DILocation(line: 145, column: 10, scope: !16880, inlinedAt: !17271)
!17274 = !DILocation(line: 0, scope: !16889, inlinedAt: !17273)
!17275 = !DILocation(line: 148, column: 2, scope: !16897, inlinedAt: !17271)
!17276 = !DILocation(line: 148, column: 2, scope: !16898, inlinedAt: !17271)
!17277 = !DILocation(line: 148, column: 2, scope: !16901, inlinedAt: !17271)
!17278 = !DILocation(line: 160, column: 2, scope: !16880, inlinedAt: !17271)
!17279 = !DILocation(line: 199, column: 11, scope: !17280)
!17280 = distinct !DILexicalBlock(scope: !17281, file: !2501, line: 198, column: 24)
!17281 = distinct !DILexicalBlock(scope: !17266, file: !2501, line: 198, column: 2)
!17282 = !DILocation(line: 199, column: 23, scope: !17280)
!17283 = !DILocation(line: 0, scope: !16953, inlinedAt: !17284)
!17284 = distinct !DILocation(line: 198, column: 2, scope: !17281)
!17285 = !DILocation(line: 194, column: 2, scope: !16961, inlinedAt: !17284)
!17286 = !DILocation(line: 194, column: 2, scope: !16962, inlinedAt: !17284)
!17287 = !DILocation(line: 194, column: 2, scope: !16965, inlinedAt: !17284)
!17288 = !DILocation(line: 0, scope: !16967, inlinedAt: !17289)
!17289 = distinct !DILocation(line: 215, column: 2, scope: !16953, inlinedAt: !17284)
!17290 = !DILocation(line: 95, column: 2, scope: !16967, inlinedAt: !17289)
!17291 = !DILocation(line: 199, column: 21, scope: !17280)
!17292 = !DILocation(line: 202, column: 2, scope: !17261)
!17293 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2501, file: !2501, line: 205, type: !16986, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17294)
!17294 = !{!17295, !17296, !17298}
!17295 = !DILocalVariable(name: "ret", scope: !17293, file: !2501, line: 207, type: !896)
!17296 = !DILocalVariable(name: "__i", scope: !17297, file: !2501, line: 209, type: !16852)
!17297 = distinct !DILexicalBlock(scope: !17293, file: !2501, line: 209, column: 2)
!17298 = !DILocalVariable(name: "__key", scope: !17297, file: !2501, line: 209, type: !16852)
!17299 = !DILocation(line: 0, scope: !17293)
!17300 = !DILocation(line: 0, scope: !17297)
!17301 = !DILocation(line: 0, scope: !16880, inlinedAt: !17302)
!17302 = distinct !DILocation(line: 209, column: 2, scope: !17297)
!17303 = !DILocation(line: 55, column: 2, scope: !16889, inlinedAt: !17304)
!17304 = distinct !DILocation(line: 145, column: 10, scope: !16880, inlinedAt: !17302)
!17305 = !DILocation(line: 0, scope: !16889, inlinedAt: !17304)
!17306 = !DILocation(line: 148, column: 2, scope: !16897, inlinedAt: !17302)
!17307 = !DILocation(line: 148, column: 2, scope: !16898, inlinedAt: !17302)
!17308 = !DILocation(line: 148, column: 2, scope: !16901, inlinedAt: !17302)
!17309 = !DILocation(line: 160, column: 2, scope: !16880, inlinedAt: !17302)
!17310 = !DILocation(line: 210, column: 9, scope: !17311)
!17311 = distinct !DILexicalBlock(scope: !17312, file: !2501, line: 209, column: 24)
!17312 = distinct !DILexicalBlock(scope: !17297, file: !2501, line: 209, column: 2)
!17313 = !DILocation(line: 0, scope: !16953, inlinedAt: !17314)
!17314 = distinct !DILocation(line: 209, column: 2, scope: !17312)
!17315 = !DILocation(line: 194, column: 2, scope: !16961, inlinedAt: !17314)
!17316 = !DILocation(line: 194, column: 2, scope: !16962, inlinedAt: !17314)
!17317 = !DILocation(line: 194, column: 2, scope: !16965, inlinedAt: !17314)
!17318 = !DILocation(line: 0, scope: !16967, inlinedAt: !17319)
!17319 = distinct !DILocation(line: 215, column: 2, scope: !16953, inlinedAt: !17314)
!17320 = !DILocation(line: 95, column: 2, scope: !16967, inlinedAt: !17319)
!17321 = !DILocation(line: 212, column: 2, scope: !17293)
!17322 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2501, file: !2501, line: 215, type: !11544, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17323)
!17323 = !{!17324, !17325, !17326, !17328, !17329, !17332, !17333}
!17324 = !DILocalVariable(name: "ticks", arg: 1, scope: !17322, file: !2501, line: 215, type: !896)
!17325 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17322, file: !2501, line: 215, type: !145)
!17326 = !DILocalVariable(name: "__i", scope: !17327, file: !2501, line: 217, type: !16852)
!17327 = distinct !DILexicalBlock(scope: !17322, file: !2501, line: 217, column: 2)
!17328 = !DILocalVariable(name: "__key", scope: !17327, file: !2501, line: 217, type: !16852)
!17329 = !DILocalVariable(name: "next_to", scope: !17330, file: !2501, line: 218, type: !107)
!17330 = distinct !DILexicalBlock(scope: !17331, file: !2501, line: 217, column: 24)
!17331 = distinct !DILexicalBlock(scope: !17327, file: !2501, line: 217, column: 2)
!17332 = !DILocalVariable(name: "sooner", scope: !17330, file: !2501, line: 219, type: !145)
!17333 = !DILocalVariable(name: "imminent", scope: !17330, file: !2501, line: 221, type: !145)
!17334 = !DILocation(line: 0, scope: !17322)
!17335 = !DILocation(line: 0, scope: !17327)
!17336 = !DILocation(line: 0, scope: !16880, inlinedAt: !17337)
!17337 = distinct !DILocation(line: 217, column: 2, scope: !17327)
!17338 = !DILocation(line: 55, column: 2, scope: !16889, inlinedAt: !17339)
!17339 = distinct !DILocation(line: 145, column: 10, scope: !16880, inlinedAt: !17337)
!17340 = !DILocation(line: 0, scope: !16889, inlinedAt: !17339)
!17341 = !DILocation(line: 148, column: 2, scope: !16897, inlinedAt: !17337)
!17342 = !DILocation(line: 148, column: 2, scope: !16898, inlinedAt: !17337)
!17343 = !DILocation(line: 148, column: 2, scope: !16901, inlinedAt: !17337)
!17344 = !DILocation(line: 160, column: 2, scope: !16880, inlinedAt: !17337)
!17345 = !DILocation(line: 218, column: 17, scope: !17330)
!17346 = !DILocation(line: 0, scope: !17330)
!17347 = !DILocation(line: 221, column: 27, scope: !17330)
!17348 = !DILocation(line: 233, column: 17, scope: !17349)
!17349 = distinct !DILexicalBlock(scope: !17330, file: !2501, line: 233, column: 7)
!17350 = !DILocation(line: 234, column: 26, scope: !17351)
!17351 = distinct !DILexicalBlock(scope: !17349, file: !2501, line: 233, column: 56)
!17352 = !DILocation(line: 234, column: 4, scope: !17351)
!17353 = !DILocation(line: 235, column: 3, scope: !17351)
!17354 = !DILocation(line: 0, scope: !16953, inlinedAt: !17355)
!17355 = distinct !DILocation(line: 217, column: 2, scope: !17331)
!17356 = !DILocation(line: 194, column: 2, scope: !16961, inlinedAt: !17355)
!17357 = !DILocation(line: 194, column: 2, scope: !16962, inlinedAt: !17355)
!17358 = !DILocation(line: 194, column: 2, scope: !16965, inlinedAt: !17355)
!17359 = !DILocation(line: 0, scope: !16967, inlinedAt: !17360)
!17360 = distinct !DILocation(line: 215, column: 2, scope: !16953, inlinedAt: !17355)
!17361 = !DILocation(line: 95, column: 2, scope: !16967, inlinedAt: !17360)
!17362 = !DILocation(line: 237, column: 1, scope: !17322)
!17363 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2501, file: !2501, line: 239, type: !17364, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17366)
!17364 = !DISubroutineType(types: !17365)
!17365 = !{null, !896}
!17366 = !{!17367, !17368, !17369, !17371}
!17367 = !DILocalVariable(name: "ticks", arg: 1, scope: !17363, file: !2501, line: 239, type: !896)
!17368 = !DILocalVariable(name: "key", scope: !17363, file: !2501, line: 245, type: !16852)
!17369 = !DILocalVariable(name: "t", scope: !17370, file: !2501, line: 262, type: !2474)
!17370 = distinct !DILexicalBlock(scope: !17363, file: !2501, line: 261, column: 67)
!17371 = !DILocalVariable(name: "dt", scope: !17370, file: !2501, line: 263, type: !107)
!17372 = !DILocation(line: 0, scope: !17363)
!17373 = !DILocation(line: 242, column: 2, scope: !17363)
!17374 = !DILocation(line: 0, scope: !16880, inlinedAt: !17375)
!17375 = distinct !DILocation(line: 245, column: 25, scope: !17363)
!17376 = !DILocation(line: 55, column: 2, scope: !16889, inlinedAt: !17377)
!17377 = distinct !DILocation(line: 145, column: 10, scope: !16880, inlinedAt: !17375)
!17378 = !DILocation(line: 0, scope: !16889, inlinedAt: !17377)
!17379 = !DILocation(line: 148, column: 2, scope: !16897, inlinedAt: !17375)
!17380 = !DILocation(line: 148, column: 2, scope: !16898, inlinedAt: !17375)
!17381 = !DILocation(line: 148, column: 2, scope: !16901, inlinedAt: !17375)
!17382 = !DILocation(line: 160, column: 2, scope: !16880, inlinedAt: !17375)
!17383 = !DILocation(line: 261, column: 9, scope: !17363)
!17384 = !DILocation(line: 261, column: 17, scope: !17363)
!17385 = !DILocation(line: 261, column: 25, scope: !17363)
!17386 = !DILocation(line: 261, column: 37, scope: !17363)
!17387 = !DILocation(line: 261, column: 47, scope: !17363)
!17388 = !DILocation(line: 261, column: 44, scope: !17363)
!17389 = !DILocation(line: 261, column: 2, scope: !17363)
!17390 = !DILocation(line: 0, scope: !17370)
!17391 = !DILocation(line: 263, column: 12, scope: !17370)
!17392 = !DILocation(line: 265, column: 16, scope: !17370)
!17393 = !DILocation(line: 265, column: 13, scope: !17370)
!17394 = !DILocation(line: 266, column: 13, scope: !17370)
!17395 = !DILocation(line: 267, column: 3, scope: !17370)
!17396 = !DILocation(line: 0, scope: !16953, inlinedAt: !17397)
!17397 = distinct !DILocation(line: 269, column: 3, scope: !17370)
!17398 = !DILocation(line: 194, column: 2, scope: !16961, inlinedAt: !17397)
!17399 = !DILocation(line: 194, column: 2, scope: !16962, inlinedAt: !17397)
!17400 = !DILocation(line: 194, column: 2, scope: !16965, inlinedAt: !17397)
!17401 = !DILocation(line: 0, scope: !16967, inlinedAt: !17402)
!17402 = distinct !DILocation(line: 215, column: 2, scope: !16953, inlinedAt: !17397)
!17403 = !DILocation(line: 95, column: 2, scope: !16967, inlinedAt: !17402)
!17404 = !DILocation(line: 270, column: 6, scope: !17370)
!17405 = !DILocation(line: 270, column: 3, scope: !17370)
!17406 = !DILocation(line: 0, scope: !16880, inlinedAt: !17407)
!17407 = distinct !DILocation(line: 271, column: 9, scope: !17370)
!17408 = !DILocation(line: 55, column: 2, scope: !16889, inlinedAt: !17409)
!17409 = distinct !DILocation(line: 145, column: 10, scope: !16880, inlinedAt: !17407)
!17410 = !DILocation(line: 0, scope: !16889, inlinedAt: !17409)
!17411 = !DILocation(line: 148, column: 2, scope: !16897, inlinedAt: !17407)
!17412 = !DILocation(line: 148, column: 2, scope: !16898, inlinedAt: !17407)
!17413 = !DILocation(line: 148, column: 2, scope: !16901, inlinedAt: !17407)
!17414 = !DILocation(line: 160, column: 2, scope: !16880, inlinedAt: !17407)
!17415 = !DILocation(line: 272, column: 22, scope: !17370)
!17416 = distinct !{!17416, !17389, !17417}
!17417 = !DILocation(line: 273, column: 2, scope: !17363)
!17418 = !DILocation(line: 276, column: 19, scope: !17419)
!17419 = distinct !DILexicalBlock(scope: !17420, file: !2501, line: 275, column: 23)
!17420 = distinct !DILexicalBlock(scope: !17363, file: !2501, line: 275, column: 6)
!17421 = !DILocation(line: 277, column: 2, scope: !17419)
!17422 = !DILocation(line: 279, column: 15, scope: !17363)
!17423 = !DILocation(line: 279, column: 12, scope: !17363)
!17424 = !DILocation(line: 280, column: 21, scope: !17363)
!17425 = !DILocation(line: 282, column: 24, scope: !17363)
!17426 = !DILocation(line: 282, column: 2, scope: !17363)
!17427 = !DILocation(line: 0, scope: !16953, inlinedAt: !17428)
!17428 = distinct !DILocation(line: 284, column: 2, scope: !17363)
!17429 = !DILocation(line: 194, column: 2, scope: !16961, inlinedAt: !17428)
!17430 = !DILocation(line: 194, column: 2, scope: !16962, inlinedAt: !17428)
!17431 = !DILocation(line: 194, column: 2, scope: !16965, inlinedAt: !17428)
!17432 = !DILocation(line: 0, scope: !16967, inlinedAt: !17433)
!17433 = distinct !DILocation(line: 215, column: 2, scope: !16953, inlinedAt: !17428)
!17434 = !DILocation(line: 95, column: 2, scope: !16967, inlinedAt: !17433)
!17435 = !DILocation(line: 285, column: 1, scope: !17363)
!17436 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2501, file: !2501, line: 287, type: !17437, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17439)
!17437 = !DISubroutineType(types: !17438)
!17438 = !{!376}
!17439 = !{!17440, !17441, !17443}
!17440 = !DILocalVariable(name: "t", scope: !17436, file: !2501, line: 289, type: !566)
!17441 = !DILocalVariable(name: "__i", scope: !17442, file: !2501, line: 291, type: !16852)
!17442 = distinct !DILexicalBlock(scope: !17436, file: !2501, line: 291, column: 2)
!17443 = !DILocalVariable(name: "__key", scope: !17442, file: !2501, line: 291, type: !16852)
!17444 = !DILocation(line: 0, scope: !17436)
!17445 = !DILocation(line: 0, scope: !17442)
!17446 = !DILocation(line: 0, scope: !16880, inlinedAt: !17447)
!17447 = distinct !DILocation(line: 291, column: 2, scope: !17442)
!17448 = !DILocation(line: 55, column: 2, scope: !16889, inlinedAt: !17449)
!17449 = distinct !DILocation(line: 145, column: 10, scope: !16880, inlinedAt: !17447)
!17450 = !DILocation(line: 0, scope: !16889, inlinedAt: !17449)
!17451 = !DILocation(line: 148, column: 2, scope: !16897, inlinedAt: !17447)
!17452 = !DILocation(line: 148, column: 2, scope: !16898, inlinedAt: !17447)
!17453 = !DILocation(line: 148, column: 2, scope: !16901, inlinedAt: !17447)
!17454 = !DILocation(line: 160, column: 2, scope: !16880, inlinedAt: !17447)
!17455 = !DILocation(line: 292, column: 7, scope: !17456)
!17456 = distinct !DILexicalBlock(scope: !17457, file: !2501, line: 291, column: 24)
!17457 = distinct !DILexicalBlock(scope: !17442, file: !2501, line: 291, column: 2)
!17458 = !DILocation(line: 292, column: 19, scope: !17456)
!17459 = !DILocation(line: 0, scope: !16953, inlinedAt: !17460)
!17460 = distinct !DILocation(line: 291, column: 2, scope: !17457)
!17461 = !DILocation(line: 194, column: 2, scope: !16961, inlinedAt: !17460)
!17462 = !DILocation(line: 194, column: 2, scope: !16962, inlinedAt: !17460)
!17463 = !DILocation(line: 194, column: 2, scope: !16965, inlinedAt: !17460)
!17464 = !DILocation(line: 0, scope: !16967, inlinedAt: !17465)
!17465 = distinct !DILocation(line: 215, column: 2, scope: !16953, inlinedAt: !17460)
!17466 = !DILocation(line: 95, column: 2, scope: !16967, inlinedAt: !17465)
!17467 = !DILocation(line: 292, column: 17, scope: !17456)
!17468 = !DILocation(line: 294, column: 2, scope: !17436)
!17469 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2501, file: !2501, line: 297, type: !6343, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !2166)
!17470 = !DILocation(line: 300, column: 19, scope: !17469)
!17471 = !DILocation(line: 300, column: 9, scope: !17469)
!17472 = !DILocation(line: 300, column: 2, scope: !17469)
!17473 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2501, file: !2501, line: 306, type: !17437, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !2166)
!17474 = !DILocation(line: 308, column: 9, scope: !17473)
!17475 = !DILocation(line: 308, column: 2, scope: !17473)
!17476 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2501, file: !2501, line: 319, type: !6353, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17477)
!17477 = !{!17478, !17479, !17480, !17481}
!17478 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17476, file: !2501, line: 319, type: !152)
!17479 = !DILocalVariable(name: "start_cycles", scope: !17476, file: !2501, line: 328, type: !152)
!17480 = !DILocalVariable(name: "cycles_to_wait", scope: !17476, file: !2501, line: 331, type: !152)
!17481 = !DILocalVariable(name: "current_cycles", scope: !17482, file: !2501, line: 338, type: !152)
!17482 = distinct !DILexicalBlock(scope: !17483, file: !2501, line: 337, column: 11)
!17483 = distinct !DILexicalBlock(scope: !17484, file: !2501, line: 337, column: 2)
!17484 = distinct !DILexicalBlock(scope: !17476, file: !2501, line: 337, column: 2)
!17485 = !DILocation(line: 0, scope: !17476)
!17486 = !DILocation(line: 322, column: 19, scope: !17487)
!17487 = distinct !DILexicalBlock(scope: !17476, file: !2501, line: 322, column: 6)
!17488 = !DILocation(line: 322, column: 6, scope: !17476)
!17489 = !DILocation(line: 328, column: 26, scope: !17476)
!17490 = !DILocation(line: 333, column: 43, scope: !17476)
!17491 = !DILocation(line: 337, column: 2, scope: !17476)
!17492 = !DILocation(line: 338, column: 29, scope: !17482)
!17493 = !DILocation(line: 0, scope: !17482)
!17494 = !DILocation(line: 341, column: 23, scope: !17495)
!17495 = distinct !DILexicalBlock(scope: !17482, file: !2501, line: 341, column: 7)
!17496 = !DILocation(line: 341, column: 39, scope: !17495)
!17497 = !DILocation(line: 349, column: 1, scope: !17476)
!17498 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !406, file: !406, line: 1675, type: !6343, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !2166)
!17499 = !DILocation(line: 1677, column: 9, scope: !17498)
!17500 = !DILocation(line: 1677, column: 2, scope: !17498)
!17501 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8756, file: !8756, line: 24, type: !6343, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !2166)
!17502 = !DILocation(line: 26, column: 9, scope: !17501)
!17503 = !DILocation(line: 26, column: 2, scope: !17501)
!17504 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2501, file: !2501, line: 364, type: !17505, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17507)
!17505 = !DISubroutineType(types: !17506)
!17506 = !{!566, !16842}
!17507 = !{!17508, !17509}
!17508 = !DILocalVariable(name: "timeout", arg: 1, scope: !17504, file: !2501, line: 364, type: !16842)
!17509 = !DILocalVariable(name: "dt", scope: !17504, file: !2501, line: 366, type: !564)
!17510 = !DILocation(line: 0, scope: !17504)
!17511 = !DILocation(line: 368, column: 6, scope: !17504)
!17512 = !DILocation(line: 371, column: 10, scope: !17513)
!17513 = distinct !DILexicalBlock(scope: !17514, file: !2501, line: 370, column: 47)
!17514 = distinct !DILexicalBlock(scope: !17515, file: !2501, line: 370, column: 13)
!17515 = distinct !DILexicalBlock(scope: !17504, file: !2501, line: 368, column: 6)
!17516 = !DILocation(line: 371, column: 3, scope: !17513)
!17517 = !DILocation(line: 376, column: 58, scope: !17518)
!17518 = distinct !DILexicalBlock(scope: !17519, file: !2501, line: 376, column: 7)
!17519 = distinct !DILexicalBlock(scope: !17514, file: !2501, line: 372, column: 9)
!17520 = !DILocation(line: 376, column: 7, scope: !17519)
!17521 = !DILocation(line: 376, column: 43, scope: !17518)
!17522 = !DILocation(line: 377, column: 4, scope: !17523)
!17523 = distinct !DILexicalBlock(scope: !17518, file: !2501, line: 376, column: 64)
!17524 = !DILocation(line: 379, column: 10, scope: !17519)
!17525 = !DILocation(line: 379, column: 33, scope: !17519)
!17526 = !DILocation(line: 379, column: 31, scope: !17519)
!17527 = !DILocation(line: 379, column: 3, scope: !17519)
!17528 = !DILocation(line: 0, scope: !17515)
!17529 = !DILocation(line: 381, column: 1, scope: !17504)
!17530 = distinct !DISubprogram(name: "boot_banner", scope: !17531, file: !17531, line: 26, type: !3089, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !2166)
!17531 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17532 = !DILocation(line: 34, column: 2, scope: !17530)
!17533 = !DILocation(line: 36, column: 1, scope: !17530)
