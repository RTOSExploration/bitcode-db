; ModuleID = 'build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.rtio_executor_api = type { i32 (%struct.rtio*)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)* }
%struct.rtio = type { %struct.rtio_executor*, i32, %struct.rtio_sq*, %struct.rtio_cq* }
%struct.rtio_executor = type { %struct.rtio_executor_api* }
%struct.rtio_sq = type { %struct.rtio_spsc, [0 x %struct.rtio_sqe] }
%struct.rtio_spsc = type { i32, i32, i32, i32, i32 }
%struct.rtio_sqe = type { i8, i8, i16, %struct.rtio_iodev*, i8*, %union.anon.3 }
%struct.rtio_iodev = type { %struct.rtio_iodev_api*, %struct.rtio_iodev_sq*, i8* }
%struct.rtio_iodev_api = type { void (%struct.rtio_sqe*, %struct.rtio*)* }
%struct.rtio_iodev_sq = type { %struct.rtio_spsc, [0 x %struct.rtio_iodev_sqe] }
%struct.rtio_iodev_sqe = type { %struct.rtio_sqe*, %struct.rtio* }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { i32, i8* }
%struct.rtio_cq = type { %struct.rtio_spsc, [0 x %struct.anon.4] }
%struct.rtio_simple_executor = type { %struct.rtio_executor }
%struct.rtio_spsc__sq_ez_io = type { %struct.rtio_spsc, [8 x %struct.rtio_sqe] }
%struct.rtio_spsc__cq_ez_io = type { %struct.rtio_spsc, [8 x %struct.anon.4] }
%struct.rtio_spsc_vnd_sensor_iodev_sq_0 = type { %struct.rtio_spsc, [8 x %struct.rtio_iodev_sqe] }
%struct.vnd_sensor_config = type { i32, i32 }
%struct.device_state = type { i8, i8 }
%struct.vnd_sensor_data = type { %struct.rtio_iodev, %struct.k_timer, %struct.device*, %struct.k_msgq, i32 }
%struct.k_timer = type { %struct._timeout, %struct._wait_q_t, void (%struct.k_timer*)*, void (%struct.k_timer*)*, %struct.k_timeout_t, i32, i8* }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._wait_q_t = type { %struct._dnode }
%struct.k_timeout_t = type { i64 }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct.k_spinlock = type {}
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.z_arm_mpu_partition = type { i32, i32, %union.anon }
%union.anon = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %union.anon }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %union.anon, i32*, i32, %struct.vnd_sensor_config }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %union.anon, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct.vnd_sensor_config*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct.vnd_sensor_config*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct.vnd_sensor_config }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %struct.k_timeout_t, %struct.conversion }
%struct.conversion = type { [3 x i8], i8, %union.anon, %union.anon }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, i32 }
%struct.rtio_concurrent_executor = type { %struct.rtio_executor, %struct.k_spinlock, i16, i16, i16, %struct.rtio_sqe*, %struct.rtio_sqe*, i8*, %struct.rtio_sqe** }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %union.anon*, %union.anon* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [82 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [82 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233420 to i8*), void (i8*)* inttoptr (i32 134231629 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233420 to i8*), void (i8*)* inttoptr (i32 134231609 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233420 to i8*), void (i8*)* inttoptr (i32 134231599 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233420 to i8*), void (i8*)* inttoptr (i32 134231699 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233420 to i8*), void (i8*)* inttoptr (i32 134231689 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233420 to i8*), void (i8*)* inttoptr (i32 134231679 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233420 to i8*), void (i8*)* inttoptr (i32 134231669 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233420 to i8*), void (i8*)* inttoptr (i32 134231659 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233420 to i8*), void (i8*)* inttoptr (i32 134231649 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233420 to i8*), void (i8*)* inttoptr (i32 134231639 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233420 to i8*), void (i8*)* inttoptr (i32 134231619 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [50 x i8*] [i8* bitcast (%struct.rtio* @ez_io to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_main to i8*), i8* bitcast (%struct.device* @__device_dts_ord_15 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_15 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_vnd_sensor to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_rtio_executor_simple to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_rtio_executor_concurrent to i8*), i8* bitcast (%struct.device* @__device_dts_ord_40 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_40 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_24 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_77 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_24 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_77 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [5 x i8] c"main\00", align 1
@log_const_main = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8 4 }, section ".log_const_main", align 4, !dbg !25
@z_rtio_simple_api = internal constant %struct.rtio_executor_api { i32 (%struct.rtio*)* @rtio_simple_submit, void (%struct.rtio*, %struct.rtio_sqe*, i32)* @rtio_simple_ok, void (%struct.rtio*, %struct.rtio_sqe*, i32)* @rtio_simple_err }, align 4, !dbg !235
@simple_exec = dso_local global %struct.rtio_simple_executor { %struct.rtio_executor { %struct.rtio_executor_api* @z_rtio_simple_api } }, align 4, !dbg !117
@_sq_ez_io = internal global %struct.rtio_spsc__sq_ez_io { %struct.rtio_spsc { i32 0, i32 0, i32 0, i32 0, i32 7 }, [8 x %struct.rtio_sqe] zeroinitializer }, align 4, !dbg !237
@_cq_ez_io = internal global %struct.rtio_spsc__cq_ez_io { %struct.rtio_spsc { i32 0, i32 0, i32 0, i32 0, i32 7 }, [8 x %struct.anon.4] zeroinitializer }, align 4, !dbg !245
@ez_io = dso_local global %struct.rtio { %struct.rtio_executor* getelementptr inbounds (%struct.rtio_simple_executor, %struct.rtio_simple_executor* @simple_exec, i32 0, i32 0), i32 0, %struct.rtio_sq* bitcast (%struct.rtio_spsc__sq_ez_io* @_sq_ez_io to %struct.rtio_sq*), %struct.rtio_cq* bitcast (%struct.rtio_spsc__cq_ez_io* @_cq_ez_io to %struct.rtio_cq*) }, section "._rtio.static.ez_io", align 4, !dbg !227
@bufs = internal global [8 x [16 x i8]] zeroinitializer, align 1, !dbg !229
@.str.1 = private unnamed_addr constant [33 x i8] c"%c: Submitting %d read requests\0A\00", align 1
@.str.2 = private unnamed_addr constant [36 x i8] c"%c: No completion events available\0A\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"%c: Consumed completion event %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"%c: Operation failed\0A\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"%c: Start processing %d samples\0A\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"Sample data:\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"%c: %s\0A\00", align 1
@.str.8 = private unnamed_addr constant [36 x i8] c"%c: Finished processing %d samples\0A\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"vnd_sensor\00", align 1
@log_const_vnd_sensor = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), i8 4 }, section ".log_const_vnd_sensor", align 4, !dbg !258
@vnd_sensor_iodev_sq_0 = dso_local global %struct.rtio_spsc_vnd_sensor_iodev_sq_0 { %struct.rtio_spsc { i32 0, i32 0, i32 0, i32 0, i32 7 }, [8 x %struct.rtio_iodev_sqe] zeroinitializer }, align 4, !dbg !451
@__devicehdl_dts_ord_15 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !494
@.str.1.12 = private unnamed_addr constant [9 x i8] c"sensor@0\00", align 1
@vnd_sensor_config_0 = internal constant %struct.vnd_sensor_config { i32 100, i32 16 }, align 4, !dbg !478
@__devstate_dts_ord_15 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !476
@vnd_sensor_data_0 = internal global %struct.vnd_sensor_data { %struct.rtio_iodev { %struct.rtio_iodev_api* @vnd_sensor_iodev_api, %struct.rtio_iodev_sq* bitcast (%struct.rtio_spsc_vnd_sensor_iodev_sq_0* @vnd_sensor_iodev_sq_0 to %struct.rtio_iodev_sq*), i8* null }, %struct.k_timer zeroinitializer, %struct.device* null, %struct.k_msgq zeroinitializer, i32 0 }, align 8, !dbg !485
@__device_dts_ord_15 = dso_local constant %struct.device { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.12, i32 0, i32 0), i8* bitcast (%struct.vnd_sensor_config* @vnd_sensor_config_0 to i8*), i8* null, %struct.device_state* @__devstate_dts_ord_15, i8* bitcast (%struct.vnd_sensor_data* @vnd_sensor_data_0 to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_15, i32 0, i32 0) }, section ".z_device_POST_KERNEL50_", align 4, !dbg !463
@__init___device_dts_ord_15 = internal constant %struct.init_entry { i32 (%struct.device*)* @vnd_sensor_init, %struct.device* @__device_dts_ord_15 }, section ".z_init_POST_KERNEL50_", align 4, !dbg !465
@vnd_sensor_iodev_api = internal constant %struct.rtio_iodev_api { void (%struct.rtio_sqe*, %struct.rtio*)* @vnd_sensor_iodev_submit }, align 4, !dbg !487
@.str.2.16 = private unnamed_addr constant [29 x i8] c"%c: %s: Could not put a msg\0A\00", align 1
@.str.3.19 = private unnamed_addr constant [29 x i8] c"%c: %s: Could not get a msg\0A\00", align 1
@.str.4.20 = private unnamed_addr constant [20 x i8] c"%c: %s: Invalid op\0A\00", align 1
@.str.5.21 = private unnamed_addr constant [32 x i8] c"%c: %s: buf_len = %d, buf = %p\0A\00", align 1
@.str.6.22 = private unnamed_addr constant [29 x i8] c"%c: %s: Buffer is too small\0A\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !530
@.str.1.25 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !551
@.str.28 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !561
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !604
@.str.36 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.38 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.39 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.37 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.41 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.42 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.40 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.43 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.44 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.45 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.46 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.60 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.1.55 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.2.56 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.3.57 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.4.58 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.5.59 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.6.52 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.7.53 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.8.51 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.9.54 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.11 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.12 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.15 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.17 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.18 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.19 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.21 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.22 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.23.50 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.24 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.25 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.26 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.27 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.28.49 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.29 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.66 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !633
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %union.anon { i32 101384192 } }], align 4, !dbg !774
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !639
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !783
@.str.72 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.1.73 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !819
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.84, i32 0, i32 0), %union.anon { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.85, i32 0, i32 0), %union.anon { i32 285933600 } }], align 4, !dbg !829
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !834
@.str.84 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.85 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.86 = private unnamed_addr constant [21 x i8] c"rtio_executor_simple\00", align 1
@log_const_rtio_executor_simple = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.86, i32 0, i32 0), i8 3 }, section ".log_const_rtio_executor_simple", align 4, !dbg !854
@.str.96 = private unnamed_addr constant [25 x i8] c"rtio_executor_concurrent\00", align 1
@log_const_rtio_executor_concurrent = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.96, i32 0, i32 0), i8 3 }, section ".log_const_rtio_executor_concurrent", align 4, !dbg !865
@.str.1.98 = private unnamed_addr constant [12 x i8] c"%c: submit\0A\00", align 1
@.str.2.100 = private unnamed_addr constant [26 x i8] c"%c: head SQE in chain %p\0A\00", align 1
@.str.3.101 = private unnamed_addr constant [24 x i8] c"%c: setting up task %d\0A\00", align 1
@.str.4.102 = private unnamed_addr constant [22 x i8] c"%c: submitted sqe %p\0A\00", align 1
@.str.5.103 = private unnamed_addr constant [26 x i8] c"%c: tail SQE in chain %p\0A\00", align 1
@.str.6.104 = private unnamed_addr constant [32 x i8] c"%c: resuming suspended task %d\0A\00", align 1
@.str.7.107 = private unnamed_addr constant [29 x i8] c"%c: sweeping oldest task %d\0A\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !982
@__devicehdl_dts_ord_40 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !505
@.str.110 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_40 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1134
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !1117
@__device_dts_ord_40 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.110, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_40, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_40, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1090
@__init___device_dts_ord_40 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_40 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1106
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_40 to i8*) }, section ".intList", align 4, !dbg !1136
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_40 to i8*) }, section ".intList", align 4, !dbg !1149
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_40 to i8*) }, section ".intList", align 4, !dbg !1151
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_40 to i8*) }, section ".intList", align 4, !dbg !1153
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_40 to i8*) }, section ".intList", align 4, !dbg !1155
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_40 to i8*) }, section ".intList", align 4, !dbg !1157
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_40 to i8*) }, section ".intList", align 4, !dbg !1159
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_40 to i8*) }, section ".intList", align 4, !dbg !1161
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_40 to i8*) }, section ".intList", align 4, !dbg !1163
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_40 to i8*) }, section ".intList", align 4, !dbg !1165
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_40 to i8*) }, section ".intList", align 4, !dbg !1167
@__devicehdl_dts_ord_9 = dso_local constant [13 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 32767], section ".__device_handles_pass2", align 2, !dbg !499
@.str.112 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !1172
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1266
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1255
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1307
@__devicehdl_dts_ord_77 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !526
@.str.121 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct.vnd_sensor_config { i32 48, i32 1 } }, align 4, !dbg !1373
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1659
@__devstate_dts_ord_77 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1625
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1611
@__init___device_dts_ord_77 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_77 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1550
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !524
@.str.1.122 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct.vnd_sensor_config { i32 48, i32 2 } }, align 4, !dbg !1661
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1629
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1627
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1567
@__devicehdl_dts_ord_24 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !522
@.str.2.123 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct.vnd_sensor_config { i32 48, i32 4 } }, align 4, !dbg !1674
@__devstate_dts_ord_24 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1633
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1631
@__init___device_dts_ord_24 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_24 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1573
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !520
@.str.3.124 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct.vnd_sensor_config { i32 48, i32 8 } }, align 4, !dbg !1676
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1637
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1635
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1579
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !518
@.str.4.125 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct.vnd_sensor_config { i32 48, i32 16 } }, align 4, !dbg !1678
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1641
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1639
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1585
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !516
@.str.5.126 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct.vnd_sensor_config { i32 48, i32 32 } }, align 4, !dbg !1680
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1645
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1643
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1591
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !514
@.str.6.127 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct.vnd_sensor_config { i32 48, i32 64 } }, align 4, !dbg !1682
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1649
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1647
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1597
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !512
@.str.7.128 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct.vnd_sensor_config { i32 48, i32 128 } }, align 4, !dbg !1684
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1653
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1651
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1603
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !510
@.str.8.129 = private unnamed_addr constant [14 x i8] c"gpio@40022000\00", align 1
@gpio_stm32_cfg_i = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073881088 to i32*), i32 8, %struct.vnd_sensor_config { i32 48, i32 256 } }, align 4, !dbg !1686
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1657
@gpio_stm32_data_i = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1655
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1609
@.str.133 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.133, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1688
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !528
@.str.1.136 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct.vnd_sensor_config* getelementptr inbounds ([1 x %struct.vnd_sensor_config], [1 x %struct.vnd_sensor_config]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48 }, align 4, !dbg !1842
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1897
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1840
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1899
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.136, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1831
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1833
@pclken_0 = internal constant [1 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 64, i32 262144 }], align 4, !dbg !1886
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !1889
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.vnd_sensor_config* getelementptr inbounds ([2 x %struct.vnd_sensor_config], [2 x %struct.vnd_sensor_config]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1891
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 839, i32 512 }, %struct.vnd_sensor_config { i32 871, i32 0 }], align 4, !dbg !1894
@.str.2.138 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.141 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.4.143 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.5.144 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.112, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([13 x i16], [13 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1239
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.6 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1910
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !2019
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !2021
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !2017
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1988
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_77, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_24, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* null, %struct.device* null], align 4, !dbg !2023
@__device_dts_ord_77 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.121, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_77, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_77, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1548
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.122, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1565
@__device_dts_ord_24 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.123, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_24, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_24, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1571
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.124, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1577
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.125, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1583
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.126, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1589
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.127, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1595
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.128, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1601
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.129, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_i to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_i to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1607
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !2113
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !2153
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2156
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2162
@.str.179 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.183 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.184 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.185 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.189 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.190 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.191 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.192 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.193 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.188 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.187 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.189, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.190, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.191, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.192, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.193, i32 0, i32 0)], align 4
@.str.195 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.195, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !2169
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@__ccm_bss_start = external dso_local global [0 x i8], align 1
@__ccm_bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2392
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2378
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2387
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2399
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2404
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.1.204 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.210, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.211, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.212, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.213, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.214, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.208, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.215, i32 0, i32 0)], align 4, !dbg !2432
@.str.209 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.210 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.211 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.212 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.213 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.214 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.208 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.215 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2544
@.str.8.207 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2557
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2665
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2668
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2670
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2397
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2389
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@__ccm_data_start = external dso_local global [0 x i8], align 1
@__ccm_data_rom_start = external dso_local global [0 x i8], align 1
@__ccm_data_end = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2672
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2708
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2256
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2706
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2711
@.str.288 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3411 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3415, !srcloc !3416
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3417, !srcloc !3418
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3419, !srcloc !3420
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3421, !srcloc !3422
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3423, !srcloc !3424
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3425, !srcloc !3426
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3427, !srcloc !3428
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3429, !srcloc !3430
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3431, !srcloc !3432
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3433, !srcloc !3434
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3435, !srcloc !3436
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3437, !srcloc !3438
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3439, !srcloc !3440
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3441, !srcloc !3442
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3443, !srcloc !3444
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3445, !srcloc !3446
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3447, !srcloc !3448
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #23, !dbg !3449, !srcloc !3450
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3451, !srcloc !3452
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3453, !srcloc !3454
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #23, !dbg !3455, !srcloc !3456
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #23, !dbg !3457, !srcloc !3458
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3459, !srcloc !3460
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3461, !srcloc !3462
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3463, !srcloc !3464
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3465, !srcloc !3466
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3467, !srcloc !3468
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3469, !srcloc !3472
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3473, !srcloc !3474
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3475, !srcloc !3476
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3477, !srcloc !3478
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3479, !srcloc !3480
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3481, !srcloc !3482
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3483, !srcloc !3484
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3485, !srcloc !3486
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3487, !srcloc !3488
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3489, !srcloc !3490
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3491, !srcloc !3492
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3493, !srcloc !3494
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3495, !srcloc !3496
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3497, !srcloc !3498
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3499, !srcloc !3500
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3501, !srcloc !3502
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3503, !srcloc !3504
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3505, !srcloc !3506
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3507, !srcloc !3508
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3509, !srcloc !3510
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3511, !srcloc !3512
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3513, !srcloc !3514
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3515, !srcloc !3516
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3517, !srcloc !3518
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #23, !dbg !3519, !srcloc !3520
  ret void, !dbg !3521
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !3524 {
  %1 = alloca [4 x i8*], align 4
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_15, metadata !3526, metadata !DIExpression()), !dbg !3578
  %2 = load %struct.rtio_iodev*, %struct.rtio_iodev** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_15, i32 0, i32 4) to %struct.rtio_iodev**), align 4, !dbg !3579
  call void @llvm.dbg.value(metadata %struct.rtio_iodev* %2, metadata !3543, metadata !DIExpression()), !dbg !3578
  call void @llvm.dbg.value(metadata i32 0, metadata !3545, metadata !DIExpression()), !dbg !3580
  %3 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3581
  br label %8, !dbg !3582

4:                                                ; preds = %46
  %5 = bitcast [4 x i8*]* %1 to i8*
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #24, !dbg !3578
  %7 = zext i8 %6 to i32
  br label %50, !dbg !3583

8:                                                ; preds = %0, %46
  %9 = phi %struct.rtio_sq* [ %3, %0 ], [ %47, %46 ], !dbg !3581
  %10 = phi i32 [ 0, %0 ], [ %48, %46 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !3545, metadata !DIExpression()), !dbg !3580
  %11 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 2, !dbg !3581
  %12 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %11) #24, !dbg !3581
  %13 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3581
  %14 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 0, !dbg !3581
  %15 = load i32, i32* %14, align 4, !dbg !3581
  %16 = add i32 %15, %12, !dbg !3581
  call void @llvm.dbg.value(metadata i32 %16, metadata !3551, metadata !DIExpression()), !dbg !3584
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 3, !dbg !3581
  %18 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %17) #24, !dbg !3581
  %19 = sub i32 %16, %18, !dbg !3581
  %20 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3581
  %21 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %20, i32 0, i32 0, i32 4, !dbg !3581
  %22 = load i32, i32* %21, align 4, !dbg !3581
  %23 = add i32 %22, 1, !dbg !3581
  %24 = icmp ult i32 %19, %23, !dbg !3581
  call void @llvm.dbg.value(metadata i1 %24, metadata !3553, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3584
  br i1 %24, label %25, label %34, !dbg !3581

25:                                               ; preds = %8
  %26 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %20, i32 0, i32 0, i32 0, !dbg !3585
  %27 = load i32, i32* %26, align 4, !dbg !3585
  %28 = add i32 %27, 1, !dbg !3585
  store i32 %28, i32* %26, align 4, !dbg !3585
  %29 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3581
  %30 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %29, i32 0, i32 0, i32 4, !dbg !3581
  %31 = load i32, i32* %30, align 4, !dbg !3581
  %32 = and i32 %31, %16, !dbg !3581
  %33 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %29, i32 0, i32 1, i32 %32, !dbg !3581
  br label %34, !dbg !3581

34:                                               ; preds = %8, %25
  %35 = phi %struct.rtio_sqe* [ %33, %25 ], [ null, %8 ], !dbg !3581
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %35, metadata !3547, metadata !DIExpression()), !dbg !3588
  %36 = getelementptr inbounds [8 x [16 x i8]], [8 x [16 x i8]]* @bufs, i32 0, i32 %10, i32 0, !dbg !3589
  tail call fastcc void @rtio_sqe_prep_read(%struct.rtio_sqe* noundef %35, %struct.rtio_iodev* noundef %2, i8* noundef nonnull %36, i8* noundef nonnull %36) #24, !dbg !3590
  %37 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3591
  %38 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 0, i32 0, !dbg !3591
  %39 = load i32, i32* %38, align 4, !dbg !3591
  %40 = icmp eq i32 %39, 0, !dbg !3591
  br i1 %40, label %46, label %41, !dbg !3594

41:                                               ; preds = %34
  %42 = add i32 %39, -1, !dbg !3595
  store i32 %42, i32* %38, align 4, !dbg !3595
  %43 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3595
  %44 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %43, i32 0, i32 0, i32 2, !dbg !3595
  tail call fastcc void @atomic_add(i32* noundef nonnull %44, i32 noundef 1) #24, !dbg !3595
  %45 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3581
  br label %46, !dbg !3595

46:                                               ; preds = %41, %34
  %47 = phi %struct.rtio_sq* [ %45, %41 ], [ %37, %34 ]
  %48 = add nuw nsw i32 %10, 1, !dbg !3597
  call void @llvm.dbg.value(metadata i32 %48, metadata !3545, metadata !DIExpression()), !dbg !3580
  %49 = icmp eq i32 %48, 8, !dbg !3598
  br i1 %49, label %4, label %8, !dbg !3582, !llvm.loop !3599

50:                                               ; preds = %4, %154
  call void @llvm.dbg.value(metadata i32 0, metadata !3554, metadata !DIExpression()), !dbg !3601
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #23, !dbg !3602
  call void @llvm.dbg.declare(metadata [4 x i8*]* %1, metadata !3556, metadata !DIExpression()), !dbg !3603
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i32 0, i32 0), i32 noundef %7, i32 noundef 4) #25, !dbg !3604
  tail call fastcc void @rtio_submit() #24, !dbg !3609
  call void @llvm.dbg.value(metadata i32 0, metadata !3554, metadata !DIExpression()), !dbg !3601
  br label %51, !dbg !3610

51:                                               ; preds = %50, %97
  %52 = phi i32 [ 0, %50 ], [ %98, %97 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !3554, metadata !DIExpression()), !dbg !3601
  %53 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3611
  %54 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %53, i32 0, i32 0, i32 3, !dbg !3611
  %55 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %54) #24, !dbg !3611
  %56 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3611
  %57 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %56, i32 0, i32 0, i32 1, !dbg !3611
  %58 = load i32, i32* %57, align 4, !dbg !3611
  %59 = add i32 %58, %55, !dbg !3611
  call void @llvm.dbg.value(metadata i32 %59, metadata !3561, metadata !DIExpression()), !dbg !3612
  %60 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %56, i32 0, i32 0, i32 2, !dbg !3611
  %61 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %60) #24, !dbg !3611
  %62 = icmp eq i32 %59, %61, !dbg !3611
  call void @llvm.dbg.value(metadata i1 %62, metadata !3563, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3612
  br i1 %62, label %63, label %66, !dbg !3611

63:                                               ; preds = %51
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %71, i32 %74), metadata !3558, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3613
  %64 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 4) #24, !dbg !3614
  %65 = zext i8 %64 to i32, !dbg !3614
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i32 0, i32 0), i32 noundef %65) #25, !dbg !3614
  tail call fastcc void @k_msleep(i32 noundef 100) #24, !dbg !3621
  br label %97, !dbg !3622, !llvm.loop !3623

66:                                               ; preds = %51
  %67 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3625
  %68 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %67, i32 0, i32 0, i32 1, !dbg !3625
  %69 = load i32, i32* %68, align 4, !dbg !3625
  %70 = add i32 %69, 1, !dbg !3625
  store i32 %70, i32* %68, align 4, !dbg !3625
  %71 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3611
  %72 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %71, i32 0, i32 0, i32 4, !dbg !3611
  %73 = load i32, i32* %72, align 4, !dbg !3611
  %74 = and i32 %73, %59, !dbg !3611
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %71, i32 %74), metadata !3558, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3613
  %75 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 4) #24, !dbg !3628
  %76 = zext i8 %75 to i32, !dbg !3628
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i32 0, i32 0), i32 noundef %76, i32 noundef %52) #25, !dbg !3628
  %77 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %71, i32 0, i32 1, i32 %74, i32 0, !dbg !3633
  %78 = load i32, i32* %77, align 4, !dbg !3633
  %79 = icmp slt i32 %78, 0, !dbg !3635
  br i1 %79, label %80, label %83, !dbg !3636

80:                                               ; preds = %66
  %81 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #24, !dbg !3637
  %82 = zext i8 %81 to i32, !dbg !3637
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i32 0, i32 0), i32 noundef %82) #25, !dbg !3637
  br label %83, !dbg !3643

83:                                               ; preds = %80, %66
  %84 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %71, i32 0, i32 1, i32 %74, i32 1, !dbg !3644
  %85 = load i8*, i8** %84, align 4, !dbg !3644
  %86 = getelementptr inbounds [4 x i8*], [4 x i8*]* %1, i32 0, i32 %52, !dbg !3645
  store i8* %85, i8** %86, align 4, !dbg !3646
  %87 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3647
  %88 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %87, i32 0, i32 0, i32 1, !dbg !3647
  %89 = load i32, i32* %88, align 4, !dbg !3647
  %90 = icmp eq i32 %89, 0, !dbg !3647
  br i1 %90, label %95, label %91, !dbg !3650

91:                                               ; preds = %83
  %92 = add i32 %89, -1, !dbg !3651
  store i32 %92, i32* %88, align 4, !dbg !3651
  %93 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3651
  %94 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %93, i32 0, i32 0, i32 3, !dbg !3651
  tail call fastcc void @atomic_add(i32* noundef nonnull %94, i32 noundef 1) #24, !dbg !3651
  br label %95, !dbg !3651

95:                                               ; preds = %91, %83
  %96 = add nsw i32 %52, 1, !dbg !3653
  call void @llvm.dbg.value(metadata i32 %96, metadata !3554, metadata !DIExpression()), !dbg !3601
  br label %97, !dbg !3624

97:                                               ; preds = %95, %63
  %98 = phi i32 [ %52, %63 ], [ %96, %95 ], !dbg !3601
  call void @llvm.dbg.value(metadata i32 %98, metadata !3554, metadata !DIExpression()), !dbg !3601
  %99 = icmp slt i32 %98, 4, !dbg !3654
  br i1 %99, label %51, label %100, !dbg !3610

100:                                              ; preds = %97
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i32 0, i32 0), i32 noundef %7, i32 noundef 4) #25, !dbg !3655
  call void @llvm.dbg.value(metadata i32 0, metadata !3554, metadata !DIExpression()), !dbg !3601
  %101 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 4) #24, !dbg !3578
  %102 = zext i8 %101 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !3554, metadata !DIExpression()), !dbg !3601
  br label %103, !dbg !3660

103:                                              ; preds = %100, %103
  %104 = phi i32 [ 0, %100 ], [ %107, %103 ]
  call void @llvm.dbg.value(metadata i32 %104, metadata !3554, metadata !DIExpression()), !dbg !3601
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i32 0, i32 0), metadata !3564, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.value(metadata i1 false, metadata !3569, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3661
  call void @llvm.dbg.value(metadata i32 0, metadata !3570, metadata !DIExpression()), !dbg !3661
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), i32 noundef %102, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i32 0, i32 0)) #25, !dbg !3662
  %105 = getelementptr inbounds [4 x i8*], [4 x i8*]* %1, i32 0, i32 %104, !dbg !3666
  %106 = load i8*, i8** %105, align 4, !dbg !3666
  tail call void @z_log_minimal_hexdump_print(i32 noundef 4, i8* noundef %106, i32 noundef 16) #25, !dbg !3666
  %107 = add nuw nsw i32 %104, 1, !dbg !3667
  call void @llvm.dbg.value(metadata i32 %107, metadata !3554, metadata !DIExpression()), !dbg !3601
  %108 = icmp eq i32 %107, 4, !dbg !3668
  br i1 %108, label %109, label %103, !dbg !3660, !llvm.loop !3669

109:                                              ; preds = %103
  tail call fastcc void @k_msleep(i32 noundef 300) #24, !dbg !3671
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i32 0, i32 0), i32 noundef %7, i32 noundef 4) #25, !dbg !3672
  call void @llvm.dbg.value(metadata i32 0, metadata !3554, metadata !DIExpression()), !dbg !3601
  %110 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3677
  br label %111, !dbg !3678

111:                                              ; preds = %109, %150
  %112 = phi %struct.rtio_sq* [ %110, %109 ], [ %151, %150 ], !dbg !3677
  %113 = phi i32 [ 0, %109 ], [ %152, %150 ]
  call void @llvm.dbg.value(metadata i32 %113, metadata !3554, metadata !DIExpression()), !dbg !3601
  %114 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %112, i32 0, i32 0, i32 2, !dbg !3677
  %115 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %114) #24, !dbg !3677
  %116 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3677
  %117 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %116, i32 0, i32 0, i32 0, !dbg !3677
  %118 = load i32, i32* %117, align 4, !dbg !3677
  %119 = add i32 %118, %115, !dbg !3677
  call void @llvm.dbg.value(metadata i32 %119, metadata !3575, metadata !DIExpression()), !dbg !3679
  %120 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %116, i32 0, i32 0, i32 3, !dbg !3677
  %121 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %120) #24, !dbg !3677
  %122 = sub i32 %119, %121, !dbg !3677
  %123 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3677
  %124 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %123, i32 0, i32 0, i32 4, !dbg !3677
  %125 = load i32, i32* %124, align 4, !dbg !3677
  %126 = add i32 %125, 1, !dbg !3677
  %127 = icmp ult i32 %122, %126, !dbg !3677
  call void @llvm.dbg.value(metadata i1 %127, metadata !3577, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3679
  br i1 %127, label %128, label %137, !dbg !3677

128:                                              ; preds = %111
  %129 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %123, i32 0, i32 0, i32 0, !dbg !3680
  %130 = load i32, i32* %129, align 4, !dbg !3680
  %131 = add i32 %130, 1, !dbg !3680
  store i32 %131, i32* %129, align 4, !dbg !3680
  %132 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3677
  %133 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %132, i32 0, i32 0, i32 4, !dbg !3677
  %134 = load i32, i32* %133, align 4, !dbg !3677
  %135 = and i32 %134, %119, !dbg !3677
  %136 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %132, i32 0, i32 1, i32 %135, !dbg !3677
  br label %137, !dbg !3677

137:                                              ; preds = %111, %128
  %138 = phi %struct.rtio_sqe* [ %136, %128 ], [ null, %111 ], !dbg !3677
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %138, metadata !3571, metadata !DIExpression()), !dbg !3683
  %139 = getelementptr inbounds [4 x i8*], [4 x i8*]* %1, i32 0, i32 %113, !dbg !3684
  %140 = load i8*, i8** %139, align 4, !dbg !3684
  tail call fastcc void @rtio_sqe_prep_read(%struct.rtio_sqe* noundef %138, %struct.rtio_iodev* noundef %2, i8* noundef %140, i8* noundef %140) #24, !dbg !3685
  %141 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3686
  %142 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %141, i32 0, i32 0, i32 0, !dbg !3686
  %143 = load i32, i32* %142, align 4, !dbg !3686
  %144 = icmp eq i32 %143, 0, !dbg !3686
  br i1 %144, label %150, label %145, !dbg !3689

145:                                              ; preds = %137
  %146 = add i32 %143, -1, !dbg !3690
  store i32 %146, i32* %142, align 4, !dbg !3690
  %147 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3690
  %148 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %147, i32 0, i32 0, i32 2, !dbg !3690
  tail call fastcc void @atomic_add(i32* noundef nonnull %148, i32 noundef 1) #24, !dbg !3690
  %149 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3677
  br label %150, !dbg !3690

150:                                              ; preds = %145, %137
  %151 = phi %struct.rtio_sq* [ %149, %145 ], [ %141, %137 ]
  %152 = add nuw nsw i32 %113, 1, !dbg !3692
  call void @llvm.dbg.value(metadata i32 %152, metadata !3554, metadata !DIExpression()), !dbg !3601
  %153 = icmp eq i32 %152, 4, !dbg !3693
  br i1 %153, label %154, label %111, !dbg !3678, !llvm.loop !3694

154:                                              ; preds = %150
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #23, !dbg !3696
  br label %50, !dbg !3583, !llvm.loop !3697
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #4 !dbg !3698 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3703, metadata !DIExpression()), !dbg !3704
  %2 = add i32 %0, -1, !dbg !3705
  %3 = icmp ult i32 %2, 4, !dbg !3705
  %4 = shl i32 %2, 3, !dbg !3705
  %5 = lshr i32 1145657157, %4, !dbg !3705
  %6 = trunc i32 %5 to i8, !dbg !3705
  %7 = select i1 %3, i8 %6, i8 63, !dbg !3705
  ret i8 %7, !dbg !3706
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !3707 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3715, metadata !DIExpression()), !dbg !3716
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !3717
  ret i32 %2, !dbg !3718
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @rtio_sqe_prep_read(%struct.rtio_sqe* nocapture noundef writeonly %0, %struct.rtio_iodev* noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #6 !dbg !3719 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !3723, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.value(metadata %struct.rtio_iodev* %1, metadata !3724, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.value(metadata i8 -1, metadata !3725, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.value(metadata i8* %2, metadata !3726, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.value(metadata i32 16, metadata !3727, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.value(metadata i8* %3, metadata !3728, metadata !DIExpression()), !dbg !3729
  %5 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 0, !dbg !3730
  store i8 1, i8* %5, align 4, !dbg !3731
  %6 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 1, !dbg !3732
  store i8 -1, i8* %6, align 1, !dbg !3733
  %7 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !3734
  store %struct.rtio_iodev* %1, %struct.rtio_iodev** %7, align 4, !dbg !3735
  %8 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 5, i32 0, i32 0, !dbg !3736
  store i32 16, i32* %8, align 4, !dbg !3737
  %9 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 5, i32 0, i32 1, !dbg !3738
  store i8* %2, i8** %9, align 4, !dbg !3739
  %10 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 4, !dbg !3740
  store i8* %3, i8** %10, align 4, !dbg !3741
  ret void, !dbg !3742
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add(i32* nocapture noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3743 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3748, metadata !DIExpression()), !dbg !3750
  call void @llvm.dbg.value(metadata i32 %1, metadata !3749, metadata !DIExpression()), !dbg !3750
  %3 = atomicrmw add i32* %0, i32 %1 seq_cst, align 4, !dbg !3751
  ret void, !dbg !3752
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_submit() unnamed_addr #1 !dbg !3753 {
  call void @llvm.dbg.value(metadata %struct.rtio* @ez_io, metadata !3758, metadata !DIExpression()), !dbg !3760
  call void @llvm.dbg.value(metadata i32 4, metadata !3759, metadata !DIExpression()), !dbg !3760
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3761, !srcloc !3763
  tail call fastcc void @z_impl_rtio_submit() #24, !dbg !3764
  ret void, !dbg !3765
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep(i32 noundef %0) unnamed_addr #1 !dbg !3766 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3770, metadata !DIExpression()), !dbg !3771
  %2 = zext i32 %0 to i64
  %3 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %2) #24, !dbg !3772
  %4 = insertvalue [1 x i64] poison, i64 %3, 0, !dbg !3773
  tail call fastcc void @k_sleep([1 x i64] %4) #24, !dbg !3773
  ret void, !dbg !3774
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !3775 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3780, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.value(metadata i64 %0, metadata !3782, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.value(metadata i32 1000, metadata !3787, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.value(metadata i32 10000, metadata !3788, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.value(metadata i8 1, metadata !3789, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.value(metadata i8 0, metadata !3790, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.value(metadata i8 1, metadata !3791, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.value(metadata i8 0, metadata !3792, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.value(metadata i8 1, metadata !3793, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.value(metadata i8 0, metadata !3794, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.value(metadata i64 0, metadata !3795, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.value(metadata i64 0, metadata !3795, metadata !DIExpression()), !dbg !3799
  %2 = mul i64 %0, 10, !dbg !3801
  ret i64 %2, !dbg !3807
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3808 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3817, metadata !DIExpression()), !dbg !3818
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3819, !srcloc !3821
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !3822
  ret void, !dbg !3823
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_rtio_submit() unnamed_addr #1 !dbg !3824 {
  call void @llvm.dbg.value(metadata %struct.rtio* @ez_io, metadata !3826, metadata !DIExpression()), !dbg !3833
  call void @llvm.dbg.value(metadata i32 4, metadata !3827, metadata !DIExpression()), !dbg !3833
  %1 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3834
  %2 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %1, i32 0, i32 0, i32 0, !dbg !3834
  %3 = load i32, i32* %2, align 4, !dbg !3834
  %4 = icmp eq i32 %3, 0, !dbg !3834
  br i1 %4, label %8, label %5, !dbg !3835

5:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 %3, metadata !3829, metadata !DIExpression()), !dbg !3836
  store i32 0, i32* %2, align 4, !dbg !3837
  %6 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3837
  %7 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 2, !dbg !3837
  tail call fastcc void @atomic_add(i32* noundef nonnull %7, i32 noundef %3) #24, !dbg !3837
  br label %8, !dbg !3837

8:                                                ; preds = %5, %0
  %9 = load %struct.rtio_executor*, %struct.rtio_executor** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 0), align 4, !dbg !3838
  %10 = getelementptr inbounds %struct.rtio_executor, %struct.rtio_executor* %9, i32 0, i32 0, !dbg !3839
  %11 = load %struct.rtio_executor_api*, %struct.rtio_executor_api** %10, align 4, !dbg !3839
  %12 = getelementptr inbounds %struct.rtio_executor_api, %struct.rtio_executor_api* %11, i32 0, i32 0, !dbg !3840
  %13 = load i32 (%struct.rtio*)*, i32 (%struct.rtio*)** %12, align 4, !dbg !3840
  %14 = tail call i32 %13(%struct.rtio* noundef nonnull @ez_io) #25, !dbg !3841
  call void @llvm.dbg.value(metadata i32 %14, metadata !3828, metadata !DIExpression()), !dbg !3833
  %15 = icmp eq i32 %14, 0, !dbg !3842
  br i1 %15, label %16, label %38, !dbg !3844

16:                                               ; preds = %8
  %17 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3845
  %18 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %17, i32 0, i32 0, i32 2, !dbg !3845
  %19 = load i32, i32* %18, align 4, !dbg !3845
  %20 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %17, i32 0, i32 0, i32 3, !dbg !3845
  %21 = load i32, i32* %20, align 4, !dbg !3845
  %22 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %17, i32 0, i32 0, i32 1, !dbg !3845
  %23 = load i32, i32* %22, align 4, !dbg !3845
  %24 = add i32 %21, %23, !dbg !3845
  %25 = sub i32 %19, %24, !dbg !3845
  %26 = icmp ult i32 %25, 4, !dbg !3847
  br i1 %26, label %27, label %38, !dbg !3848

27:                                               ; preds = %16, %27
  tail call fastcc void @k_yield() #24, !dbg !3849
  %28 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3845
  %29 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %28, i32 0, i32 0, i32 2, !dbg !3845
  %30 = load i32, i32* %29, align 4, !dbg !3845
  %31 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %28, i32 0, i32 0, i32 3, !dbg !3845
  %32 = load i32, i32* %31, align 4, !dbg !3845
  %33 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %28, i32 0, i32 0, i32 1, !dbg !3845
  %34 = load i32, i32* %33, align 4, !dbg !3845
  %35 = add i32 %32, %34, !dbg !3845
  %36 = sub i32 %30, %35, !dbg !3845
  %37 = icmp ult i32 %36, 4, !dbg !3847
  br i1 %37, label %27, label %38, !dbg !3848, !llvm.loop !3851

38:                                               ; preds = %27, %16, %8
  ret void, !dbg !3853
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !3854 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3855, !srcloc !3857
  tail call void @z_impl_k_yield() #25, !dbg !3858
  ret void, !dbg !3859
}

; Function Attrs: noinline nounwind optsize
define internal void @vnd_sensor_iodev_submit(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) #1 !dbg !3860 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !3862, metadata !DIExpression()), !dbg !3871
  call void @llvm.dbg.value(metadata %struct.rtio* %1, metadata !3863, metadata !DIExpression()), !dbg !3871
  %3 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !3872
  %4 = bitcast %struct.rtio_iodev** %3 to %struct.vnd_sensor_data**, !dbg !3872
  %5 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %4, align 4, !dbg !3872
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %5, metadata !3864, metadata !DIExpression()), !dbg !3871
  %6 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %5, i32 0, i32 2, !dbg !3873
  %7 = load %struct.device*, %struct.device** %6, align 8, !dbg !3873
  call void @llvm.dbg.value(metadata %struct.device* %7, metadata !3865, metadata !DIExpression()), !dbg !3871
  %8 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %5, i32 0, i32 0, i32 1, !dbg !3874
  %9 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3874
  %10 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %9, i32 0, i32 0, i32 2, !dbg !3874
  %11 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %10) #24, !dbg !3874
  %12 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3874
  %13 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %12, i32 0, i32 0, i32 0, !dbg !3874
  %14 = load i32, i32* %13, align 4, !dbg !3874
  %15 = add i32 %14, %11, !dbg !3874
  call void @llvm.dbg.value(metadata i32 %15, metadata !3868, metadata !DIExpression()), !dbg !3875
  %16 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %12, i32 0, i32 0, i32 3, !dbg !3874
  %17 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %16) #24, !dbg !3874
  %18 = sub i32 %15, %17, !dbg !3874
  %19 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3874
  %20 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %19, i32 0, i32 0, i32 4, !dbg !3874
  %21 = load i32, i32* %20, align 4, !dbg !3874
  %22 = add i32 %21, 1, !dbg !3874
  %23 = icmp ult i32 %18, %22, !dbg !3874
  call void @llvm.dbg.value(metadata i1 %23, metadata !3870, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3875
  br i1 %23, label %24, label %42, !dbg !3874

24:                                               ; preds = %2
  %25 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %19, i32 0, i32 0, i32 0, !dbg !3876
  %26 = load i32, i32* %25, align 4, !dbg !3876
  %27 = add i32 %26, 1, !dbg !3876
  store i32 %27, i32* %25, align 4, !dbg !3876
  %28 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3874
  %29 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %28, i32 0, i32 0, i32 4, !dbg !3874
  %30 = load i32, i32* %29, align 4, !dbg !3874
  %31 = and i32 %30, %15, !dbg !3874
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %28, i32 %31), metadata !3866, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3871
  %32 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %28, i32 0, i32 1, i32 %31, i32 0, !dbg !3879
  store %struct.rtio_sqe* %0, %struct.rtio_sqe** %32, align 4, !dbg !3882
  %33 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %28, i32 0, i32 1, i32 %31, i32 1, !dbg !3883
  store %struct.rtio* %1, %struct.rtio** %33, align 4, !dbg !3884
  %34 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3885
  %35 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %34, i32 0, i32 0, i32 0, !dbg !3885
  %36 = load i32, i32* %35, align 4, !dbg !3885
  %37 = icmp eq i32 %36, 0, !dbg !3885
  br i1 %37, label %47, label %38, !dbg !3888

38:                                               ; preds = %24
  %39 = add i32 %36, -1, !dbg !3889
  store i32 %39, i32* %35, align 4, !dbg !3889
  %40 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3889
  %41 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %40, i32 0, i32 0, i32 2, !dbg !3889
  tail call fastcc void @atomic_add.14(i32* noundef nonnull %41) #24, !dbg !3889
  br label %47, !dbg !3889

42:                                               ; preds = %2
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %28, i32 %31), metadata !3866, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3871
  %43 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !3891
  %44 = zext i8 %43 to i32, !dbg !3891
  %45 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 0, !dbg !3891
  %46 = load i8*, i8** %45, align 4, !dbg !3891
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef %44, i8* noundef %46) #25, !dbg !3891
  tail call fastcc void @rtio_sqe_err(%struct.rtio* noundef %1, %struct.rtio_sqe* noundef nonnull %0, i32 noundef -11) #24, !dbg !3897
  br label %47

47:                                               ; preds = %24, %38, %42
  ret void, !dbg !3898
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get.13(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !3899 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3901, metadata !DIExpression()), !dbg !3902
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !3903
  ret i32 %2, !dbg !3904
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add.14(i32* nocapture noundef %0) unnamed_addr #5 !dbg !3905 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3907, metadata !DIExpression()), !dbg !3909
  call void @llvm.dbg.value(metadata i32 1, metadata !3908, metadata !DIExpression()), !dbg !3909
  %2 = atomicrmw add i32* %0, i32 1 seq_cst, align 4, !dbg !3910
  ret void, !dbg !3911
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef %0) unnamed_addr #4 !dbg !3912 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3914, metadata !DIExpression()), !dbg !3915
  %2 = add i32 %0, -1, !dbg !3916
  %3 = icmp ult i32 %2, 4, !dbg !3916
  %4 = shl i32 %2, 3, !dbg !3916
  %5 = lshr i32 1145657157, %4, !dbg !3916
  %6 = trunc i32 %5 to i8, !dbg !3916
  %7 = select i1 %3, i8 %6, i8 63, !dbg !3916
  ret i8 %7, !dbg !3917
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_sqe_err(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !3918 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !3920, metadata !DIExpression()), !dbg !3923
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !3921, metadata !DIExpression()), !dbg !3923
  call void @llvm.dbg.value(metadata i32 %2, metadata !3922, metadata !DIExpression()), !dbg !3923
  %4 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 0, !dbg !3924
  %5 = load %struct.rtio_executor*, %struct.rtio_executor** %4, align 4, !dbg !3924
  %6 = getelementptr inbounds %struct.rtio_executor, %struct.rtio_executor* %5, i32 0, i32 0, !dbg !3925
  %7 = load %struct.rtio_executor_api*, %struct.rtio_executor_api** %6, align 4, !dbg !3925
  %8 = getelementptr inbounds %struct.rtio_executor_api, %struct.rtio_executor_api* %7, i32 0, i32 2, !dbg !3926
  %9 = load void (%struct.rtio*, %struct.rtio_sqe*, i32)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)** %8, align 4, !dbg !3926
  tail call void %9(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) #25, !dbg !3927
  ret void, !dbg !3928
}

; Function Attrs: noinline nounwind optsize
define internal i32 @vnd_sensor_init(%struct.device* noundef %0) #1 !dbg !3929 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3931, metadata !DIExpression()), !dbg !3936
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !3937
  %3 = bitcast i8** %2 to %struct.vnd_sensor_config**, !dbg !3937
  %4 = load %struct.vnd_sensor_config*, %struct.vnd_sensor_config** %3, align 4, !dbg !3937
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_config* %4, metadata !3932, metadata !DIExpression()), !dbg !3936
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !3938
  %6 = bitcast i8** %5 to %struct.vnd_sensor_data**, !dbg !3938
  %7 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %6, align 4, !dbg !3938
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %7, metadata !3934, metadata !DIExpression()), !dbg !3936
  %8 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %4, i32 0, i32 0, !dbg !3939
  %9 = load i32, i32* %8, align 4, !dbg !3939
  call void @llvm.dbg.value(metadata i32 %9, metadata !3935, metadata !DIExpression()), !dbg !3936
  %10 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %7, i32 0, i32 2, !dbg !3940
  store %struct.device* %0, %struct.device** %10, align 8, !dbg !3941
  %11 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %7, i32 0, i32 1, !dbg !3942
  tail call void @k_timer_init(%struct.k_timer* noundef nonnull %11, void (%struct.k_timer*)* noundef nonnull @vnd_sensor_timer_expiry, void (%struct.k_timer*)* noundef null) #25, !dbg !3943
  %12 = zext i32 %9 to i64, !dbg !3944
  %13 = tail call fastcc i64 @k_ms_to_ticks_ceil64.18(i64 noundef %12) #24, !dbg !3944
  %14 = insertvalue [1 x i64] poison, i64 %13, 0, !dbg !3945
  tail call fastcc void @k_timer_start(%struct.k_timer* noundef nonnull %11, [1 x i64] %14, [1 x i64] %14) #24, !dbg !3945
  ret i32 0, !dbg !3946
}

; Function Attrs: noinline nounwind optsize
define internal void @vnd_sensor_timer_expiry(%struct.k_timer* nocapture noundef readonly %0) #1 !dbg !3947 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !3949, metadata !DIExpression()), !dbg !3951
  %2 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 -1, i32 4, !dbg !3952
  call void @llvm.dbg.value(metadata %struct.k_timeout_t* %2, metadata !3950, metadata !DIExpression()), !dbg !3951
  %3 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %2, i32 9, !dbg !3953
  %4 = bitcast %struct.k_timeout_t* %3 to %struct.device**, !dbg !3953
  %5 = load %struct.device*, %struct.device** %4, align 8, !dbg !3953
  tail call fastcc void @vnd_sensor_handle_int(%struct.device* noundef %5) #24, !dbg !3954
  ret void, !dbg !3955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.18(i64 noundef %0) unnamed_addr #4 !dbg !3956 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3958, metadata !DIExpression()), !dbg !3959
  call void @llvm.dbg.value(metadata i64 %0, metadata !3960, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.value(metadata i32 1000, metadata !3963, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.value(metadata i32 10000, metadata !3964, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.value(metadata i8 1, metadata !3965, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.value(metadata i8 0, metadata !3966, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.value(metadata i8 1, metadata !3967, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.value(metadata i8 0, metadata !3968, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.value(metadata i8 1, metadata !3969, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.value(metadata i8 0, metadata !3970, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.value(metadata i64 0, metadata !3971, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.value(metadata i64 0, metadata !3971, metadata !DIExpression()), !dbg !3975
  %2 = mul i64 %0, 10, !dbg !3977
  ret i64 %2, !dbg !3983
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_timer_start(%struct.k_timer* noundef %0, [1 x i64] %1, [1 x i64] %2) unnamed_addr #1 !dbg !3984 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3989, metadata !DIExpression()), !dbg !3991
  call void @llvm.dbg.value(metadata i64 undef, metadata !3990, metadata !DIExpression()), !dbg !3991
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !3988, metadata !DIExpression()), !dbg !3991
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3992, !srcloc !3994
  tail call void @z_impl_k_timer_start(%struct.k_timer* noundef %0, [1 x i64] %1, [1 x i64] %2) #25, !dbg !3995
  ret void, !dbg !3996
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @vnd_sensor_handle_int(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !3997 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4001, metadata !DIExpression()), !dbg !4007
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !4008
  %3 = bitcast i8** %2 to %struct.vnd_sensor_data**, !dbg !4008
  %4 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %3, align 4, !dbg !4008
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %4, metadata !4002, metadata !DIExpression()), !dbg !4007
  %5 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %4, i32 0, i32 0, i32 1, !dbg !4009
  %6 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4009
  %7 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %6, i32 0, i32 0, i32 3, !dbg !4009
  %8 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %7) #24, !dbg !4009
  %9 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4009
  %10 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %9, i32 0, i32 0, i32 1, !dbg !4009
  %11 = load i32, i32* %10, align 4, !dbg !4009
  %12 = add i32 %11, %8, !dbg !4009
  call void @llvm.dbg.value(metadata i32 %12, metadata !4004, metadata !DIExpression()), !dbg !4010
  %13 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %9, i32 0, i32 0, i32 2, !dbg !4009
  %14 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %13) #24, !dbg !4009
  %15 = icmp eq i32 %12, %14, !dbg !4009
  call void @llvm.dbg.value(metadata i1 %15, metadata !4006, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4010
  br i1 %15, label %37, label %16, !dbg !4009

16:                                               ; preds = %1
  %17 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4011
  %18 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %17, i32 0, i32 0, i32 1, !dbg !4011
  %19 = load i32, i32* %18, align 4, !dbg !4011
  %20 = add i32 %19, 1, !dbg !4011
  store i32 %20, i32* %18, align 4, !dbg !4011
  %21 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4009
  %22 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %21, i32 0, i32 0, i32 4, !dbg !4009
  %23 = load i32, i32* %22, align 4, !dbg !4009
  %24 = and i32 %23, %12, !dbg !4009
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %21, i32 %24), metadata !4003, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !4007
  %25 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %21, i32 0, i32 1, i32 %24, i32 0, !dbg !4014
  %26 = load %struct.rtio_sqe*, %struct.rtio_sqe** %25, align 4, !dbg !4014
  %27 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %21, i32 0, i32 1, i32 %24, i32 1, !dbg !4017
  %28 = load %struct.rtio*, %struct.rtio** %27, align 4, !dbg !4017
  tail call fastcc void @vnd_sensor_iodev_execute(%struct.device* noundef nonnull %0, %struct.rtio_sqe* noundef %26, %struct.rtio* noundef %28) #24, !dbg !4018
  %29 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4019
  %30 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %29, i32 0, i32 0, i32 1, !dbg !4019
  %31 = load i32, i32* %30, align 4, !dbg !4019
  %32 = icmp eq i32 %31, 0, !dbg !4019
  br i1 %32, label %42, label %33, !dbg !4022

33:                                               ; preds = %16
  %34 = add i32 %31, -1, !dbg !4023
  store i32 %34, i32* %30, align 4, !dbg !4023
  %35 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4023
  %36 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %35, i32 0, i32 0, i32 3, !dbg !4023
  tail call fastcc void @atomic_add.14(i32* noundef nonnull %36) #24, !dbg !4023
  br label %42, !dbg !4023

37:                                               ; preds = %1
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %21, i32 %24), metadata !4003, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !4007
  %38 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !4025
  %39 = zext i8 %38 to i32, !dbg !4025
  %40 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !4025
  %41 = load i8*, i8** %40, align 4, !dbg !4025
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.19, i32 0, i32 0), i32 noundef %39, i8* noundef %41) #25, !dbg !4025
  br label %42

42:                                               ; preds = %16, %33, %37
  ret void, !dbg !4031
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @vnd_sensor_iodev_execute(%struct.device* nocapture noundef readonly %0, %struct.rtio_sqe* noundef %1, %struct.rtio* noundef %2) unnamed_addr #1 !dbg !4032 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4036, metadata !DIExpression()), !dbg !4040
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !4037, metadata !DIExpression()), !dbg !4040
  call void @llvm.dbg.value(metadata %struct.rtio* %2, metadata !4038, metadata !DIExpression()), !dbg !4040
  %4 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 0, !dbg !4041
  %5 = load i8, i8* %4, align 4, !dbg !4041
  %6 = icmp eq i8 %5, 1, !dbg !4043
  br i1 %6, label %12, label %7, !dbg !4044

7:                                                ; preds = %3
  %8 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !4045
  %9 = zext i8 %8 to i32, !dbg !4045
  %10 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !4045
  %11 = load i8*, i8** %10, align 4, !dbg !4045
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.20, i32 0, i32 0), i32 noundef %9, i8* noundef %11) #25, !dbg !4045
  call void @llvm.dbg.value(metadata i32 %17, metadata !4039, metadata !DIExpression()), !dbg !4040
  br label %19, !dbg !4051

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 5, i32 0, i32 1, !dbg !4052
  %14 = load i8*, i8** %13, align 4, !dbg !4052
  %15 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 5, i32 0, i32 0, !dbg !4054
  %16 = load i32, i32* %15, align 4, !dbg !4054
  %17 = tail call fastcc i32 @vnd_sensor_iodev_read(%struct.device* noundef %0, i8* noundef %14, i32 noundef %16) #24, !dbg !4055
  call void @llvm.dbg.value(metadata i32 %17, metadata !4039, metadata !DIExpression()), !dbg !4040
  %18 = icmp slt i32 %17, 0, !dbg !4056
  br i1 %18, label %19, label %21, !dbg !4051

19:                                               ; preds = %7, %12
  %20 = phi i32 [ -22, %7 ], [ %17, %12 ]
  tail call fastcc void @rtio_sqe_err(%struct.rtio* noundef %2, %struct.rtio_sqe* noundef nonnull %1, i32 noundef %20) #24, !dbg !4058
  br label %22, !dbg !4060

21:                                               ; preds = %12
  tail call fastcc void @rtio_sqe_ok(%struct.rtio* noundef %2, %struct.rtio_sqe* noundef nonnull %1) #24, !dbg !4061
  br label %22

22:                                               ; preds = %21, %19
  ret void, !dbg !4063
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @vnd_sensor_iodev_read(%struct.device* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !4064 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4068, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata i8* %1, metadata !4069, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata i32 %2, metadata !4070, metadata !DIExpression()), !dbg !4077
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !4078
  %5 = bitcast i8** %4 to %struct.vnd_sensor_config**, !dbg !4078
  %6 = load %struct.vnd_sensor_config*, %struct.vnd_sensor_config** %5, align 4, !dbg !4078
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_config* %6, metadata !4071, metadata !DIExpression()), !dbg !4077
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !4079
  %8 = bitcast i8** %7 to %struct.vnd_sensor_data**, !dbg !4079
  %9 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %8, align 4, !dbg !4079
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %9, metadata !4072, metadata !DIExpression()), !dbg !4077
  %10 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 4) #24, !dbg !4080
  %11 = zext i8 %10 to i32, !dbg !4080
  %12 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !4080
  %13 = load i8*, i8** %12, align 4, !dbg !4080
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5.21, i32 0, i32 0), i32 noundef %11, i8* noundef %13, i32 noundef %2, i8* noundef %1) #25, !dbg !4080
  %14 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !4085, !srcloc !4094
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !4085
  call void @llvm.dbg.value(metadata i32 %15, metadata !4091, metadata !DIExpression()) #23, !dbg !4095
  call void @llvm.dbg.value(metadata i32 undef, metadata !4092, metadata !DIExpression()) #23, !dbg !4095
  call void @llvm.dbg.value(metadata i32 %15, metadata !4074, metadata !DIExpression()), !dbg !4077
  %16 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %9, i32 0, i32 4, !dbg !4096
  %17 = load i32, i32* %16, align 4, !dbg !4097
  %18 = add i32 %17, 1, !dbg !4097
  store i32 %18, i32* %16, align 4, !dbg !4097
  call void @llvm.dbg.value(metadata i32 %17, metadata !4073, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata i32 %15, metadata !4098, metadata !DIExpression()) #23, !dbg !4103
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !4105, !srcloc !4106
  %19 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %6, i32 0, i32 1, !dbg !4107
  %20 = load i32, i32* %19, align 4, !dbg !4107
  %21 = icmp ugt i32 %20, %2, !dbg !4109
  br i1 %21, label %26, label %22, !dbg !4110

22:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !4075, metadata !DIExpression()), !dbg !4111
  %23 = icmp ult i32 %20, %2, !dbg !4112
  %24 = select i1 %23, i32 %20, i32 %2, !dbg !4112
  %25 = icmp eq i32 %24, 0, !dbg !4114
  br i1 %25, label %42, label %30, !dbg !4115

26:                                               ; preds = %3
  %27 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !4116
  %28 = zext i8 %27 to i32, !dbg !4116
  %29 = load i8*, i8** %12, align 4, !dbg !4116
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.22, i32 0, i32 0), i32 noundef %28, i8* noundef %29) #25, !dbg !4116
  br label %42, !dbg !4122

30:                                               ; preds = %22, %30
  %31 = phi i32 [ %38, %30 ], [ %20, %22 ]
  %32 = phi i32 [ %37, %30 ], [ 0, %22 ]
  call void @llvm.dbg.value(metadata i32 %32, metadata !4075, metadata !DIExpression()), !dbg !4111
  %33 = mul i32 %31, %17, !dbg !4123
  %34 = add i32 %33, %32, !dbg !4125
  %35 = trunc i32 %34 to i8, !dbg !4126
  %36 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !4127
  store i8 %35, i8* %36, align 1, !dbg !4128
  %37 = add nuw nsw i32 %32, 1, !dbg !4129
  call void @llvm.dbg.value(metadata i32 %37, metadata !4075, metadata !DIExpression()), !dbg !4111
  %38 = load i32, i32* %19, align 4, !dbg !4112
  %39 = icmp ult i32 %38, %2, !dbg !4112
  %40 = select i1 %39, i32 %38, i32 %2, !dbg !4112
  %41 = icmp ult i32 %37, %40, !dbg !4114
  br i1 %41, label %30, label %42, !dbg !4115, !llvm.loop !4130

42:                                               ; preds = %30, %22, %26
  %43 = phi i32 [ -12, %26 ], [ 0, %22 ], [ 0, %30 ], !dbg !4077
  ret i32 %43, !dbg !4132
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_sqe_ok(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1) unnamed_addr #1 !dbg !4133 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !4135, metadata !DIExpression()), !dbg !4138
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !4136, metadata !DIExpression()), !dbg !4138
  call void @llvm.dbg.value(metadata i32 0, metadata !4137, metadata !DIExpression()), !dbg !4138
  %3 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 0, !dbg !4139
  %4 = load %struct.rtio_executor*, %struct.rtio_executor** %3, align 4, !dbg !4139
  %5 = getelementptr inbounds %struct.rtio_executor, %struct.rtio_executor* %4, i32 0, i32 0, !dbg !4140
  %6 = load %struct.rtio_executor_api*, %struct.rtio_executor_api** %5, align 4, !dbg !4140
  %7 = getelementptr inbounds %struct.rtio_executor_api, %struct.rtio_executor_api* %6, i32 0, i32 1, !dbg !4141
  %8 = load void (%struct.rtio*, %struct.rtio_sqe*, i32)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)** %7, align 4, !dbg !4141
  tail call void %8(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef 0) #25, !dbg !4142
  ret void, !dbg !4143
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !4144 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4159, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8* %0, metadata !4155, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %1, metadata !4156, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %2, metadata !4157, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8* %3, metadata !4158, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8* %0, metadata !4160, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8* %0, metadata !4161, metadata !DIExpression()), !dbg !4222
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4223
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !4223
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !4164, metadata !DIExpression()), !dbg !4224
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4225
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !4225
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !4166, metadata !DIExpression()), !dbg !4226
  call void @llvm.dbg.value(metadata i32 0, metadata !4167, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 0, metadata !4168, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 0, metadata !4169, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 -1, metadata !4170, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8 0, metadata !4173, metadata !DIExpression()), !dbg !4222
  %12 = and i32 %2, 4, !dbg !4227
  %13 = icmp eq i32 %12, 0, !dbg !4228
  call void @llvm.dbg.value(metadata i1 %13, metadata !4174, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4222
  %14 = lshr i32 %2, 3, !dbg !4229
  %15 = and i32 %14, 7, !dbg !4229
  %16 = add nuw nsw i32 %15, 1, !dbg !4230
  call void @llvm.dbg.value(metadata i32 %16, metadata !4175, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8 0, metadata !4176, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8* %0, metadata !4177, metadata !DIExpression()), !dbg !4222
  %17 = ptrtoint i8* %0 to i32, !dbg !4231
  %18 = and i32 %17, 3, !dbg !4233
  %19 = icmp eq i32 %18, 0, !dbg !4233
  br i1 %19, label %20, label %316, !dbg !4234

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4235
  call void @llvm.dbg.value(metadata i8* %21, metadata !4161, metadata !DIExpression()), !dbg !4222
  %22 = icmp eq i8* %0, null, !dbg !4236
  %23 = and i32 %1, 7, !dbg !4238
  %24 = sub nuw nsw i32 8, %23, !dbg !4238
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4238
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4238
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4238
  call void @llvm.dbg.value(metadata i32 %27, metadata !4156, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8* %26, metadata !4161, metadata !DIExpression()), !dbg !4222
  br i1 %22, label %33, label %28, !dbg !4239

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4241
  %30 = sub i32 4, %17, !dbg !4241
  %31 = add i32 %30, %29, !dbg !4242
  %32 = icmp ugt i32 %31, %27, !dbg !4243
  br i1 %32, label %316, label %33, !dbg !4244

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4245
  call void @llvm.dbg.value(metadata i8* %34, metadata !4158, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8* %3, metadata !4172, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 4, metadata !4163, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 4, metadata !4162, metadata !DIExpression()), !dbg !4222
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4246

38:                                               ; preds = %63, %216
  %39 = phi i8 [ %221, %216 ], [ %64, %63 ]
  %40 = phi i8* [ %220, %216 ], [ %65, %63 ]
  %41 = phi i8* [ %218, %216 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %216 ], [ %67, %63 ]
  %43 = phi i8* [ %219, %216 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %216 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %216 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %216 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !4159, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8* %42, metadata !4158, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8* %43, metadata !4161, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %44, metadata !4162, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %45, metadata !4163, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %72, metadata !4170, metadata !DIExpression()), !dbg !4222
  br i1 %46, label %73, label %47, !dbg !4247

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4248
  %49 = zext i1 %48 to i32, !dbg !4252
  %50 = add nsw i32 %72, %49, !dbg !4252
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4252
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4252
  call void @llvm.dbg.value(metadata i32 %52, metadata !4162, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %51, metadata !4163, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8 poison, metadata !4173, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %50, metadata !4170, metadata !DIExpression()), !dbg !4222
  br label %53, !dbg !4253

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4159, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8* %40, metadata !4158, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8* %58, metadata !4161, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %57, metadata !4162, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %56, metadata !4163, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8 poison, metadata !4173, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %54, metadata !4170, metadata !DIExpression()), !dbg !4222
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4254
  call void @llvm.dbg.value(metadata i8* %60, metadata !4158, metadata !DIExpression()), !dbg !4222
  %61 = load i8, i8* %60, align 1, !dbg !4256
  %62 = icmp eq i8 %61, 0, !dbg !4257
  br i1 %62, label %223, label %63, !dbg !4258, !llvm.loop !4259

63:                                               ; preds = %190, %53
  %64 = phi i8 [ %61, %53 ], [ %197, %190 ]
  %65 = phi i8* [ %60, %53 ], [ %196, %190 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %190 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %190 ]
  %68 = phi i8* [ %58, %53 ], [ %195, %190 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %190 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %190 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %190 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %190 ]
  br label %38, !dbg !4247

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4262

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4173, metadata !DIExpression()), !dbg !4222
  %75 = add nsw i32 %72, -1, !dbg !4263
  call void @llvm.dbg.value(metadata i32 %75, metadata !4170, metadata !DIExpression()), !dbg !4222
  br label %53, !dbg !4264

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4265

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4163, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 4, metadata !4162, metadata !DIExpression()), !dbg !4222
  br label %53, !dbg !4266

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4163, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 4, metadata !4162, metadata !DIExpression()), !dbg !4222
  br label %53, !dbg !4267

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4268
  %81 = icmp eq i8 %80, 108, !dbg !4270
  br i1 %81, label %82, label %109, !dbg !4271

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4272
  %84 = load i8, i8* %83, align 1, !dbg !4272
  %85 = icmp eq i8 %84, 108, !dbg !4275
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4276
  %89 = add i32 %88, 7, !dbg !4276
  %90 = and i32 %89, -8, !dbg !4276
  %91 = inttoptr i32 %90 to i8*, !dbg !4276
  %92 = inttoptr i32 %90 to double*, !dbg !4276
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4276
  %94 = load double, double* %92, align 8, !dbg !4276
  call void @llvm.dbg.value(metadata i8* %93, metadata !4159, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 8, metadata !4162, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 8, metadata !4163, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata double %94, metadata !4190, metadata !DIExpression()), !dbg !4278
  %95 = ptrtoint i8* %43 to i32, !dbg !4279
  %96 = add i32 %95, 7, !dbg !4279
  %97 = and i32 %96, -8, !dbg !4279
  %98 = inttoptr i32 %97 to i8*, !dbg !4280
  call void @llvm.dbg.value(metadata i8* %98, metadata !4161, metadata !DIExpression()), !dbg !4222
  br i1 %22, label %104, label %99, !dbg !4281

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4282
  %101 = icmp ugt i32 %100, %194, !dbg !4286
  br i1 %101, label %316, label %102, !dbg !4287

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4288
  store double %94, double* %103, align 8, !dbg !4288
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4291
  call void @llvm.dbg.value(metadata i8* %105, metadata !4161, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8 poison, metadata !4173, metadata !DIExpression()), !dbg !4222
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4173, metadata !DIExpression()), !dbg !4222
  br label %53, !dbg !4292

107:                                              ; preds = %73, %73
  br label %109, !dbg !4293

108:                                              ; preds = %73
  br label %109, !dbg !4293

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4222
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4222
  call void @llvm.dbg.value(metadata i32 %113, metadata !4162, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %112, metadata !4163, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8 poison, metadata !4176, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8 poison, metadata !4173, metadata !DIExpression()), !dbg !4222
  %114 = ptrtoint i8* %43 to i32, !dbg !4293
  %115 = add i32 %114, -1, !dbg !4293
  %116 = add i32 %115, %112, !dbg !4293
  %117 = sub i32 0, %112, !dbg !4293
  %118 = and i32 %116, %117, !dbg !4293
  %119 = inttoptr i32 %118 to i8*, !dbg !4294
  call void @llvm.dbg.value(metadata i8* %119, metadata !4161, metadata !DIExpression()), !dbg !4222
  br i1 %22, label %124, label %120, !dbg !4295

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4297
  %122 = add i32 %121, %118, !dbg !4298
  %123 = icmp ugt i32 %122, %194, !dbg !4299
  br i1 %123, label %316, label %124, !dbg !4300

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %199, !dbg !4301

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4294
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4302
  call void @llvm.dbg.value(metadata i8* %127, metadata !4159, metadata !DIExpression()), !dbg !4222
  %128 = bitcast i8* %41 to i8**, !dbg !4302
  %129 = load i8*, i8** %128, align 4, !dbg !4302
  call void @llvm.dbg.value(metadata i8* %129, metadata !4172, metadata !DIExpression()), !dbg !4222
  br label %130, !dbg !4303

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %191, %125 ], !dbg !4304
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4305
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4222
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %192, %125 ], !dbg !4306
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4222
  %137 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4307
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4222
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4222
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4222
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4222
  %142 = phi i32 [ %27, %33 ], [ %194, %125 ], !dbg !4308
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !4159, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %142, metadata !4156, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8* %141, metadata !4158, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8* %140, metadata !4161, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %139, metadata !4162, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %138, metadata !4163, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %137, metadata !4167, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %136, metadata !4175, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %135, metadata !4168, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8 poison, metadata !4173, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8* %133, metadata !4172, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %132, metadata !4170, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %131, metadata !4169, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.label(metadata !4221), !dbg !4310
  br i1 %22, label %146, label %144, !dbg !4311

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4312
  store i8* %133, i8** %145, align 4, !dbg !4315
  br label %146, !dbg !4316

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4317
  call void @llvm.dbg.value(metadata i32 %147, metadata !4175, metadata !DIExpression()), !dbg !4222
  %148 = icmp sgt i32 %136, 0, !dbg !4318
  br i1 %148, label %152, label %149, !dbg !4319

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !4320
  %151 = zext i1 %150 to i32, !dbg !4320
  br label %152, !dbg !4319

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4319
  %154 = icmp eq i32 %153, 0, !dbg !4319
  call void @llvm.dbg.value(metadata i1 %154, metadata !4199, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4321
  call void @llvm.dbg.value(metadata i1 %36, metadata !4202, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4321
  %155 = or i1 %36, %154, !dbg !4322
  br i1 %155, label %156, label %190, !dbg !4322

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4323
  %158 = sub i32 %157, %17, !dbg !4323
  %159 = lshr i32 %158, 2, !dbg !4324
  call void @llvm.dbg.value(metadata i32 %159, metadata !4203, metadata !DIExpression()), !dbg !4325
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4326
  %162 = icmp ugt i32 %137, 15
  %163 = select i1 %161, i1 true, i1 %162, !dbg !4326
  br i1 %163, label %316, label %164, !dbg !4326

164:                                              ; preds = %156
  br i1 %22, label %175, label %165, !dbg !4328

165:                                              ; preds = %164
  %166 = trunc i32 %159 to i8, !dbg !4329
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4332
  store i8 %166, i8* %167, align 1, !dbg !4333
  %168 = trunc i32 %132 to i8, !dbg !4334
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4335
  store i8 %168, i8* %169, align 1, !dbg !4336
  br i1 %154, label %173, label %170, !dbg !4337

170:                                              ; preds = %165
  %171 = or i8 %166, -128, !dbg !4338
  store i8 %171, i8* %167, align 1, !dbg !4338
  %172 = add i32 %131, 1, !dbg !4341
  call void @llvm.dbg.value(metadata i32 %172, metadata !4169, metadata !DIExpression()), !dbg !4222
  br label %185, !dbg !4342

173:                                              ; preds = %165
  %174 = add i32 %135, 1, !dbg !4343
  call void @llvm.dbg.value(metadata i32 %174, metadata !4168, metadata !DIExpression()), !dbg !4222
  br label %185

175:                                              ; preds = %164
  br i1 %154, label %178, label %176, !dbg !4345

176:                                              ; preds = %175
  %177 = add i32 %142, 1, !dbg !4346
  call void @llvm.dbg.value(metadata i32 %177, metadata !4156, metadata !DIExpression()), !dbg !4222
  br label %185, !dbg !4349

178:                                              ; preds = %175
  br i1 %13, label %181, label %179, !dbg !4350

179:                                              ; preds = %178
  %180 = add i32 %142, 2, !dbg !4351
  call void @llvm.dbg.value(metadata i32 %180, metadata !4156, metadata !DIExpression()), !dbg !4222
  br label %185, !dbg !4354

181:                                              ; preds = %178
  %182 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !4355
  %183 = add i32 %142, 2, !dbg !4357
  %184 = add i32 %183, %182, !dbg !4358
  call void @llvm.dbg.value(metadata i32 %184, metadata !4156, metadata !DIExpression()), !dbg !4222
  br label %185

185:                                              ; preds = %173, %170, %179, %181, %176
  %186 = phi i32 [ %172, %170 ], [ %131, %173 ], [ %131, %176 ], [ %131, %179 ], [ %131, %181 ], !dbg !4222
  %187 = phi i32 [ %135, %170 ], [ %174, %173 ], [ %135, %176 ], [ %135, %179 ], [ %135, %181 ], !dbg !4222
  %188 = phi i32 [ %142, %170 ], [ %142, %173 ], [ %177, %176 ], [ %180, %179 ], [ %184, %181 ], !dbg !4222
  call void @llvm.dbg.value(metadata i32 %188, metadata !4156, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %187, metadata !4168, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %186, metadata !4169, metadata !DIExpression()), !dbg !4222
  %189 = add nuw nsw i32 %137, 1, !dbg !4359
  call void @llvm.dbg.value(metadata i32 undef, metadata !4156, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 undef, metadata !4167, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 undef, metadata !4168, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 undef, metadata !4169, metadata !DIExpression()), !dbg !4222
  br label %190

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %131, %152 ], [ %186, %185 ], !dbg !4304
  %192 = phi i32 [ %135, %152 ], [ %187, %185 ], !dbg !4306
  %193 = phi i32 [ %137, %152 ], [ %189, %185 ], !dbg !4307
  %194 = phi i32 [ %142, %152 ], [ %188, %185 ], !dbg !4308
  call void @llvm.dbg.value(metadata i32 %194, metadata !4156, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %193, metadata !4167, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %192, metadata !4168, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %191, metadata !4169, metadata !DIExpression()), !dbg !4222
  %195 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4360
  call void @llvm.dbg.value(metadata i8* %195, metadata !4161, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8* %143, metadata !4159, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8* %141, metadata !4158, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %139, metadata !4162, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %138, metadata !4163, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8 poison, metadata !4176, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8 poison, metadata !4173, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %132, metadata !4170, metadata !DIExpression()), !dbg !4222
  %196 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4254
  call void @llvm.dbg.value(metadata i8* %196, metadata !4158, metadata !DIExpression()), !dbg !4222
  %197 = load i8, i8* %196, align 1, !dbg !4256
  %198 = icmp eq i8 %197, 0, !dbg !4257
  br i1 %198, label %223, label %63, !dbg !4258

199:                                              ; preds = %124
  switch i32 %113, label %316 [
    i32 4, label %200
    i32 8, label %206
  ], !dbg !4361

200:                                              ; preds = %199
  %201 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4362
  call void @llvm.dbg.value(metadata i8* %201, metadata !4159, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 undef, metadata !4206, metadata !DIExpression()), !dbg !4363
  br i1 %22, label %216, label %202, !dbg !4364

202:                                              ; preds = %200
  %203 = bitcast i8* %41 to i32*, !dbg !4362
  %204 = load i32, i32* %203, align 4, !dbg !4362
  call void @llvm.dbg.value(metadata i32 %204, metadata !4206, metadata !DIExpression()), !dbg !4363
  %205 = inttoptr i32 %118 to i32*, !dbg !4365
  store i32 %204, i32* %205, align 4, !dbg !4368
  br label %216, !dbg !4369

206:                                              ; preds = %199
  %207 = ptrtoint i8* %41 to i32, !dbg !4370
  %208 = add i32 %207, 7, !dbg !4370
  %209 = and i32 %208, -8, !dbg !4370
  %210 = inttoptr i32 %209 to i8*, !dbg !4370
  %211 = getelementptr inbounds i8, i8* %210, i32 8, !dbg !4370
  call void @llvm.dbg.value(metadata i8* %211, metadata !4159, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i64 undef, metadata !4212, metadata !DIExpression()), !dbg !4371
  br i1 %22, label %216, label %212, !dbg !4372

212:                                              ; preds = %206
  %213 = inttoptr i32 %209 to i64*, !dbg !4370
  %214 = load i64, i64* %213, align 8, !dbg !4370
  call void @llvm.dbg.value(metadata i64 %214, metadata !4212, metadata !DIExpression()), !dbg !4371
  %215 = inttoptr i32 %118 to i64*, !dbg !4373
  store i64 %214, i64* %215, align 8, !dbg !4378
  br label %216, !dbg !4379

216:                                              ; preds = %206, %212, %200, %202
  %217 = phi i32 [ 4, %202 ], [ 4, %200 ], [ 8, %212 ], [ 8, %206 ]
  %218 = phi i8* [ %201, %202 ], [ %201, %200 ], [ %211, %212 ], [ %211, %206 ], !dbg !4380
  %219 = getelementptr inbounds i8, i8* %119, i32 %217, !dbg !4380
  call void @llvm.dbg.value(metadata i8* %218, metadata !4159, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8* %40, metadata !4158, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8* %219, metadata !4161, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %113, metadata !4162, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %112, metadata !4163, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8 poison, metadata !4176, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8 poison, metadata !4173, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %72, metadata !4170, metadata !DIExpression()), !dbg !4222
  %220 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4254
  call void @llvm.dbg.value(metadata i8* %220, metadata !4158, metadata !DIExpression()), !dbg !4222
  %221 = load i8, i8* %220, align 1, !dbg !4256
  %222 = icmp eq i8 %221, 0, !dbg !4257
  br i1 %222, label %223, label %38, !dbg !4258

223:                                              ; preds = %190, %216, %53
  %224 = phi i8* [ %219, %216 ], [ %58, %53 ], [ %195, %190 ], !dbg !4381
  %225 = ptrtoint i8* %224 to i32, !dbg !4382
  %226 = sub i32 %225, %17, !dbg !4382
  %227 = lshr i32 %226, 2, !dbg !4384
  %228 = icmp ugt i32 %226, 1023, !dbg !4385
  br i1 %228, label %316, label %229, !dbg !4386

229:                                              ; preds = %223
  br i1 %22, label %230, label %233, !dbg !4387

230:                                              ; preds = %229
  %231 = add i32 %194, -8, !dbg !4388
  %232 = add i32 %231, %226, !dbg !4391
  br label %316, !dbg !4392

233:                                              ; preds = %229
  %234 = trunc i32 %227 to i8, !dbg !4393
  store i8 %234, i8* %0, align 1, !dbg !4394
  %235 = trunc i32 %192 to i8, !dbg !4395
  %236 = select i1 %13, i8 %235, i8 0
  %237 = select i1 %13, i8 0, i8 %235
  %238 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4397
  store i8 %236, i8* %238, align 1, !dbg !4399
  %239 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4400
  store i8 %237, i8* %239, align 1, !dbg !4401
  %240 = trunc i32 %191 to i8, !dbg !4402
  %241 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4403
  store i8 %240, i8* %241, align 1, !dbg !4404
  %242 = icmp eq i32 %191, 0, !dbg !4405
  %243 = xor i1 %242, true, !dbg !4406
  %244 = icmp ne i32 %193, 0
  %245 = select i1 %243, i1 %244, i1 false, !dbg !4406
  call void @llvm.dbg.value(metadata i8* %224, metadata !4161, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 0, metadata !4171, metadata !DIExpression()), !dbg !4222
  br i1 %245, label %246, label %265, !dbg !4406

246:                                              ; preds = %233
  %247 = sub i32 1, %17
  br label %248, !dbg !4407

248:                                              ; preds = %246, %261
  %249 = phi i8* [ %224, %246 ], [ %262, %261 ]
  %250 = phi i32 [ 0, %246 ], [ %263, %261 ]
  call void @llvm.dbg.value(metadata i8* %249, metadata !4161, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %250, metadata !4171, metadata !DIExpression()), !dbg !4222
  %251 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %250, !dbg !4408
  %252 = load i8, i8* %251, align 1, !dbg !4408
  %253 = icmp sgt i8 %252, -1, !dbg !4410
  br i1 %253, label %261, label %254, !dbg !4411

254:                                              ; preds = %248
  call void @llvm.dbg.value(metadata i8 %252, metadata !4215, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4412
  %255 = ptrtoint i8* %249 to i32, !dbg !4413
  %256 = add i32 %247, %255, !dbg !4415
  %257 = icmp ugt i32 %256, %194, !dbg !4416
  br i1 %257, label %316, label %258, !dbg !4417

258:                                              ; preds = %254
  %259 = and i8 %252, 127, !dbg !4418
  call void @llvm.dbg.value(metadata i8 %259, metadata !4215, metadata !DIExpression()), !dbg !4412
  %260 = getelementptr inbounds i8, i8* %249, i32 1, !dbg !4419
  call void @llvm.dbg.value(metadata i8* %260, metadata !4161, metadata !DIExpression()), !dbg !4222
  store i8 %259, i8* %249, align 1, !dbg !4420
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i8* [ %260, %258 ], [ %249, %248 ], !dbg !4360
  call void @llvm.dbg.value(metadata i8* %262, metadata !4161, metadata !DIExpression()), !dbg !4222
  %263 = add nuw i32 %250, 1, !dbg !4421
  call void @llvm.dbg.value(metadata i32 %263, metadata !4171, metadata !DIExpression()), !dbg !4222
  %264 = icmp eq i32 %263, %193, !dbg !4422
  br i1 %264, label %265, label %248, !dbg !4407, !llvm.loop !4423

265:                                              ; preds = %261, %233
  %266 = phi i8* [ %224, %233 ], [ %262, %261 ], !dbg !4360
  call void @llvm.dbg.value(metadata i8* %266, metadata !4161, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 0, metadata !4171, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8* %133, metadata !4172, metadata !DIExpression()), !dbg !4222
  %267 = icmp eq i32 %193, 0, !dbg !4425
  br i1 %267, label %312, label %268, !dbg !4428

268:                                              ; preds = %265
  %269 = sub i32 1, %17
  br label %270, !dbg !4428

270:                                              ; preds = %268, %307
  %271 = phi i8* [ %266, %268 ], [ %309, %307 ]
  %272 = phi i8* [ %133, %268 ], [ %308, %307 ]
  %273 = phi i32 [ 0, %268 ], [ %310, %307 ]
  call void @llvm.dbg.value(metadata i8* %271, metadata !4161, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8* %272, metadata !4172, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %273, metadata !4171, metadata !DIExpression()), !dbg !4222
  br i1 %242, label %278, label %274, !dbg !4429

274:                                              ; preds = %270
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4432
  %276 = load i8, i8* %275, align 1, !dbg !4432
  %277 = icmp sgt i8 %276, -1, !dbg !4433
  br i1 %277, label %278, label %307, !dbg !4434

278:                                              ; preds = %274, %270
  br i1 %13, label %283, label %279, !dbg !4435

279:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 0, metadata !4162, metadata !DIExpression()), !dbg !4222
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %273, !dbg !4436
  %281 = load i8, i8* %280, align 1, !dbg !4436
  %282 = getelementptr inbounds i8, i8* %271, i32 1, !dbg !4439
  call void @llvm.dbg.value(metadata i8* %282, metadata !4161, metadata !DIExpression()), !dbg !4222
  store i8 %281, i8* %271, align 1, !dbg !4440
  br label %293, !dbg !4441

283:                                              ; preds = %278
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4442
  %285 = load i8, i8* %284, align 1, !dbg !4442
  %286 = zext i8 %285 to i32, !dbg !4442
  %287 = shl nuw nsw i32 %286, 2, !dbg !4444
  %288 = getelementptr inbounds i8, i8* %0, i32 %287, !dbg !4445
  %289 = bitcast i8* %288 to i8**, !dbg !4446
  %290 = load i8*, i8** %289, align 4, !dbg !4446
  call void @llvm.dbg.value(metadata i8* %290, metadata !4172, metadata !DIExpression()), !dbg !4222
  store i8* null, i8** %289, align 4, !dbg !4447
  %291 = tail call i32 @strlen(i8* noundef %290) #25, !dbg !4448
  %292 = add i32 %291, 1, !dbg !4449
  call void @llvm.dbg.value(metadata i32 %292, metadata !4162, metadata !DIExpression()), !dbg !4222
  br label %293

293:                                              ; preds = %283, %279
  %294 = phi i8* [ %272, %279 ], [ %290, %283 ], !dbg !4222
  %295 = phi i32 [ 0, %279 ], [ %292, %283 ], !dbg !4450
  %296 = phi i8* [ %282, %279 ], [ %271, %283 ], !dbg !4222
  call void @llvm.dbg.value(metadata i8* %296, metadata !4161, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %295, metadata !4162, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8* %294, metadata !4172, metadata !DIExpression()), !dbg !4222
  %297 = ptrtoint i8* %296 to i32, !dbg !4451
  %298 = add i32 %269, %295, !dbg !4453
  %299 = add i32 %298, %297, !dbg !4454
  %300 = icmp ugt i32 %299, %194, !dbg !4455
  br i1 %300, label %316, label %301, !dbg !4456

301:                                              ; preds = %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4457
  %303 = load i8, i8* %302, align 1, !dbg !4457
  %304 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !4458
  call void @llvm.dbg.value(metadata i8* %304, metadata !4161, metadata !DIExpression()), !dbg !4222
  store i8 %303, i8* %296, align 1, !dbg !4459
  %305 = tail call i8* @memcpy(i8* noundef nonnull %304, i8* noundef %294, i32 noundef %295) #25, !dbg !4460
  %306 = getelementptr inbounds i8, i8* %304, i32 %295, !dbg !4461
  call void @llvm.dbg.value(metadata i8* %306, metadata !4161, metadata !DIExpression()), !dbg !4222
  br label %307, !dbg !4462

307:                                              ; preds = %274, %301
  %308 = phi i8* [ %272, %274 ], [ %294, %301 ], !dbg !4463
  %309 = phi i8* [ %271, %274 ], [ %306, %301 ], !dbg !4222
  call void @llvm.dbg.value(metadata i8* %309, metadata !4161, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i8* %308, metadata !4172, metadata !DIExpression()), !dbg !4222
  %310 = add nuw i32 %273, 1, !dbg !4464
  call void @llvm.dbg.value(metadata i32 %310, metadata !4171, metadata !DIExpression()), !dbg !4222
  %311 = icmp eq i32 %310, %193, !dbg !4425
  br i1 %311, label %312, label %270, !dbg !4428, !llvm.loop !4465

312:                                              ; preds = %307, %265
  %313 = phi i8* [ %266, %265 ], [ %309, %307 ], !dbg !4360
  %314 = ptrtoint i8* %313 to i32, !dbg !4467
  %315 = sub i32 %314, %17, !dbg !4467
  br label %316, !dbg !4468

316:                                              ; preds = %156, %199, %120, %99, %254, %293, %223, %28, %5, %312, %230
  %317 = phi i32 [ %232, %230 ], [ %315, %312 ], [ -14, %5 ], [ -28, %28 ], [ -22, %223 ], [ -28, %293 ], [ -28, %254 ], [ -28, %120 ], [ -22, %199 ], [ -28, %99 ], [ -22, %156 ], !dbg !4222
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !4469
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !4469
  ret i32 %317, !dbg !4469
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !4470 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4474, metadata !DIExpression()), !dbg !4475
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !4476
  ret i1 %2, !dbg !4477
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !4478 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4483, metadata !DIExpression()), !dbg !4484
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4485
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4486
  %4 = and i1 %2, %3, !dbg !4486
  ret i1 %4, !dbg !4487
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4488 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4492, metadata !DIExpression()), !dbg !4498
  call void @llvm.dbg.value(metadata i32 %1, metadata !4493, metadata !DIExpression()), !dbg !4498
  call void @llvm.dbg.value(metadata i32 %2, metadata !4494, metadata !DIExpression()), !dbg !4498
  call void @llvm.dbg.value(metadata i8* %3, metadata !4495, metadata !DIExpression()), !dbg !4498
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4499
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !4499
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4496, metadata !DIExpression()), !dbg !4500
  call void @llvm.va_start(i8* nonnull %6), !dbg !4501
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4502
  %8 = load i32, i32* %7, align 4, !dbg !4502
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4502
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !4502
  call void @llvm.dbg.value(metadata i32 %10, metadata !4497, metadata !DIExpression()), !dbg !4498
  call void @llvm.va_end(i8* nonnull %6), !dbg !4503
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !4504
  ret i32 %10, !dbg !4505
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #8

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #8

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4506 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4518, metadata !DIExpression()), !dbg !4537
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4519, metadata !DIExpression()), !dbg !4537
  call void @llvm.dbg.value(metadata i8* %2, metadata !4520, metadata !DIExpression()), !dbg !4537
  call void @llvm.dbg.value(metadata i8* %3, metadata !4521, metadata !DIExpression()), !dbg !4537
  call void @llvm.dbg.value(metadata i8* %3, metadata !4522, metadata !DIExpression()), !dbg !4537
  call void @llvm.dbg.value(metadata i8* %3, metadata !4523, metadata !DIExpression()), !dbg !4537
  %5 = icmp eq i8* %3, null, !dbg !4538
  br i1 %5, label %45, label %6, !dbg !4540

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4532, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4537
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4541
  %8 = load i8, i8* %7, align 1, !dbg !4541
  %9 = zext i8 %8 to i32, !dbg !4542
  call void @llvm.dbg.value(metadata i32 %9, metadata !4533, metadata !DIExpression()), !dbg !4537
  call void @llvm.dbg.value(metadata i8 undef, metadata !4534, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4537
  call void @llvm.dbg.value(metadata i8 undef, metadata !4535, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4537
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4529, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4537
  call void @llvm.dbg.value(metadata i32 0, metadata !4531, metadata !DIExpression()), !dbg !4537
  %10 = icmp eq i8 %8, 0, !dbg !4543
  br i1 %10, label %39, label %11, !dbg !4546

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4547
  call void @llvm.dbg.value(metadata i8 %12, metadata !4532, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4537
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4529, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4537
  %13 = zext i8 %12 to i32, !dbg !4548
  call void @llvm.dbg.value(metadata i32 %13, metadata !4532, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4537
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4529, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4537
  %14 = shl nuw nsw i32 %13, 2, !dbg !4549
  call void @llvm.dbg.value(metadata i32 %14, metadata !4532, metadata !DIExpression()), !dbg !4537
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4529, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4537
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4550
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4529, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4537
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4551
  %17 = load i8, i8* %16, align 1, !dbg !4551
  call void @llvm.dbg.value(metadata i8 %17, metadata !4534, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4537
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4529, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4537
  %18 = zext i8 %17 to i32, !dbg !4552
  call void @llvm.dbg.value(metadata i32 %18, metadata !4534, metadata !DIExpression()), !dbg !4537
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4529, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4537
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4553
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4529, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4537
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4554
  %21 = load i8, i8* %20, align 1, !dbg !4554
  call void @llvm.dbg.value(metadata i8 %21, metadata !4535, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4537
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4529, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4537
  %22 = zext i8 %21 to i32, !dbg !4555
  call void @llvm.dbg.value(metadata i32 %22, metadata !4535, metadata !DIExpression()), !dbg !4537
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4529, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4537
  %23 = shl nuw nsw i32 %22, 1, !dbg !4556
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4529, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4537
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4557
  call void @llvm.dbg.value(metadata i8* %24, metadata !4529, metadata !DIExpression()), !dbg !4537
  br label %25, !dbg !4546

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4529, metadata !DIExpression()), !dbg !4537
  call void @llvm.dbg.value(metadata i32 %27, metadata !4531, metadata !DIExpression()), !dbg !4537
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4558
  call void @llvm.dbg.value(metadata i8* %28, metadata !4529, metadata !DIExpression()), !dbg !4537
  %29 = load i8, i8* %26, align 1, !dbg !4560
  %30 = zext i8 %29 to i32, !dbg !4560
  call void @llvm.dbg.value(metadata i32 %30, metadata !4536, metadata !DIExpression()), !dbg !4537
  %31 = shl nuw nsw i32 %30, 2, !dbg !4561
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4562
  %33 = bitcast i8* %32 to i8**, !dbg !4563
  call void @llvm.dbg.value(metadata i8** %33, metadata !4530, metadata !DIExpression()), !dbg !4537
  store i8* %28, i8** %33, align 4, !dbg !4564
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !4565
  %35 = add i32 %34, 1, !dbg !4566
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4567
  call void @llvm.dbg.value(metadata i8* %36, metadata !4529, metadata !DIExpression()), !dbg !4537
  %37 = add nuw nsw i32 %27, 1, !dbg !4568
  call void @llvm.dbg.value(metadata i32 %37, metadata !4531, metadata !DIExpression()), !dbg !4537
  %38 = icmp eq i32 %37, %9, !dbg !4543
  br i1 %38, label %39, label %25, !dbg !4546, !llvm.loop !4569

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4571
  call void @llvm.dbg.value(metadata i8* %40, metadata !4522, metadata !DIExpression()), !dbg !4537
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4572
  %42 = bitcast i8* %41 to i8**, !dbg !4572
  %43 = load i8*, i8** %42, align 1, !dbg !4572
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !4573
  br label %45, !dbg !4574

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4537
  ret i32 %46, !dbg !4575
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4576 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4580, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4581, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata i8* %2, metadata !4582, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata i8* %3, metadata !4583, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata i8* %4, metadata !4584, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata i8* %4, metadata !4585, metadata !DIExpression()), !dbg !4590
  %6 = ptrtoint i8* %4 to i32, !dbg !4591
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4591
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !4591
  ret i32 %8, !dbg !4592
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !4593 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4597, metadata !DIExpression()), !dbg !4602
  call void @llvm.dbg.value(metadata i32 %1, metadata !4598, metadata !DIExpression()), !dbg !4602
  call void @llvm.dbg.value(metadata i8 0, metadata !4600, metadata !DIExpression()), !dbg !4602
  call void @llvm.dbg.value(metadata i32 0, metadata !4601, metadata !DIExpression()), !dbg !4602
  call void @llvm.dbg.value(metadata i8 poison, metadata !4600, metadata !DIExpression()), !dbg !4602
  call void @llvm.dbg.value(metadata i8* %0, metadata !4597, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4602
  %3 = load i8, i8* %0, align 1, !dbg !4603
  call void @llvm.dbg.value(metadata i8 %3, metadata !4599, metadata !DIExpression()), !dbg !4602
  %4 = icmp eq i8 %3, 0, !dbg !4604
  br i1 %4, label %29, label %5, !dbg !4605

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4606
  call void @llvm.dbg.value(metadata i32 %8, metadata !4601, metadata !DIExpression()), !dbg !4602
  br i1 %9, label %11, label %22, !dbg !4607

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4609
  br i1 %12, label %13, label %17, !dbg !4613

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4614
  br i1 %14, label %29, label %15, !dbg !4617

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !4618
  br i1 %16, label %29, label %22, !dbg !4620

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !4621
  %19 = xor i1 %18, true, !dbg !4623
  %20 = zext i1 %18 to i32, !dbg !4623
  %21 = add nsw i32 %8, %20, !dbg !4623
  br label %22, !dbg !4623

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4602
  call void @llvm.dbg.value(metadata i32 %24, metadata !4601, metadata !DIExpression()), !dbg !4602
  call void @llvm.dbg.value(metadata i8 poison, metadata !4600, metadata !DIExpression()), !dbg !4602
  %25 = icmp eq i8 %6, 37, !dbg !4624
  %26 = xor i1 %25, %23, !dbg !4626
  call void @llvm.dbg.value(metadata i8* %10, metadata !4597, metadata !DIExpression()), !dbg !4602
  call void @llvm.dbg.value(metadata i8* %10, metadata !4597, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4602
  %27 = load i8, i8* %10, align 1, !dbg !4603
  call void @llvm.dbg.value(metadata i8 %27, metadata !4599, metadata !DIExpression()), !dbg !4602
  %28 = icmp eq i8 %27, 0, !dbg !4604
  br i1 %28, label %29, label %5, !dbg !4605, !llvm.loop !4627

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4602
  ret i1 %30, !dbg !4629
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #4 !dbg !4630 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4634, metadata !DIExpression()), !dbg !4635
  %2 = add i8 %0, -64, !dbg !4636
  %3 = icmp ult i8 %2, 59, !dbg !4636
  ret i1 %3, !dbg !4637
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4638 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4646, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i32 %1, metadata !4647, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4648, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i8* %3, metadata !4649, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i32 %4, metadata !4650, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i16* %5, metadata !4651, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i32 %6, metadata !4652, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i8* %0, metadata !4653, metadata !DIExpression()), !dbg !4715
  %11 = bitcast i8* %0 to i32*, !dbg !4716
  call void @llvm.dbg.value(metadata i32* %11, metadata !4654, metadata !DIExpression()), !dbg !4715
  %12 = and i32 %4, 8, !dbg !4717
  %13 = icmp eq i32 %12, 0, !dbg !4718
  call void @llvm.dbg.value(metadata i1 %13, metadata !4658, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4715
  call void @llvm.dbg.value(metadata i8* %0, metadata !4661, metadata !DIExpression()), !dbg !4715
  %14 = icmp eq i32 %1, 0, !dbg !4719
  br i1 %14, label %15, label %17, !dbg !4720

15:                                               ; preds = %7
  %16 = tail call fastcc i32 @get_package_len(i8* noundef %0) #24, !dbg !4721
  br label %17, !dbg !4720

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %1, %7 ], !dbg !4720
  call void @llvm.dbg.value(metadata i32 %18, metadata !4647, metadata !DIExpression()), !dbg !4715
  %19 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4722
  %20 = load i8, i8* %19, align 1, !dbg !4722
  %21 = zext i8 %20 to i32, !dbg !4723
  call void @llvm.dbg.value(metadata i32 %21, metadata !4656, metadata !DIExpression()), !dbg !4715
  %22 = icmp ne i8 %20, 0, !dbg !4724
  %23 = and i32 %4, 1, !dbg !4725
  %24 = icmp ne i32 %23, 0, !dbg !4725
  %25 = and i1 %24, %22, !dbg !4725
  call void @llvm.dbg.value(metadata i1 %25, metadata !4660, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4715
  %26 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4726
  %27 = load i8, i8* %26, align 1, !dbg !4726
  %28 = zext i8 %27 to i32, !dbg !4727
  call void @llvm.dbg.value(metadata i32 %28, metadata !4657, metadata !DIExpression()), !dbg !4715
  %29 = icmp ne i8 %27, 0, !dbg !4728
  %30 = and i32 %4, 2, !dbg !4729
  %31 = icmp ne i32 %30, 0, !dbg !4729
  %32 = and i1 %31, %29, !dbg !4729
  call void @llvm.dbg.value(metadata i1 %32, metadata !4659, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4715
  %33 = select i1 %32, i1 true, i1 %25, !dbg !4730
  br i1 %33, label %38, label %34, !dbg !4730

34:                                               ; preds = %17
  %35 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4732
  br i1 %35, label %267, label %36, !dbg !4735

36:                                               ; preds = %34
  %37 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %18, i8* noundef %3) #25, !dbg !4736
  br label %267, !dbg !4738

38:                                               ; preds = %17
  %39 = load i8, i8* %0, align 1, !dbg !4739
  %40 = zext i8 %39 to i32, !dbg !4740
  %41 = shl nuw nsw i32 %40, 2, !dbg !4741
  call void @llvm.dbg.value(metadata i32 %41, metadata !4655, metadata !DIExpression()), !dbg !4715
  %42 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4742
  %43 = bitcast i8* %42 to i8**, !dbg !4743
  %44 = load i8*, i8** %43, align 4, !dbg !4743
  call void @llvm.dbg.value(metadata i8* %44, metadata !4664, metadata !DIExpression()), !dbg !4715
  %45 = getelementptr inbounds i8, i8* %0, i32 %41, !dbg !4744
  call void @llvm.dbg.value(metadata i8* %45, metadata !4665, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i32 0, metadata !4666, metadata !DIExpression()), !dbg !4715
  %46 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4745
  br i1 %46, label %47, label %132, !dbg !4746

47:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %18, metadata !4663, metadata !DIExpression()), !dbg !4715
  br i1 %25, label %48, label %73, !dbg !4747

48:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %18, metadata !4663, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i8* %45, metadata !4665, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i32 0, metadata !4666, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i32 0, metadata !4667, metadata !DIExpression()), !dbg !4748
  %49 = icmp ne i16* %5, null
  br label %50, !dbg !4749

50:                                               ; preds = %48, %67
  %51 = phi i32 [ %18, %48 ], [ %69, %67 ]
  %52 = phi i8* [ %45, %48 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %48 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %48 ], [ %71, %67 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4663, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i8* %52, metadata !4665, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i32 %53, metadata !4666, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i32 %54, metadata !4667, metadata !DIExpression()), !dbg !4748
  %55 = load i8, i8* %52, align 1, !dbg !4750
  %56 = zext i8 %55 to i32, !dbg !4751
  %57 = getelementptr inbounds i32, i32* %11, i32 %56, !dbg !4751
  %58 = bitcast i32* %57 to i8**, !dbg !4752
  %59 = load i8*, i8** %58, align 4, !dbg !4752
  call void @llvm.dbg.value(metadata i8* %59, metadata !4673, metadata !DIExpression()), !dbg !4753
  %60 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %59, i16 noundef zeroext 0) #24, !dbg !4754
  call void @llvm.dbg.value(metadata i32 %60, metadata !4676, metadata !DIExpression()), !dbg !4753
  %61 = icmp ult i32 %53, %6
  %62 = select i1 %49, i1 %61, i1 false, !dbg !4755
  br i1 %62, label %63, label %67, !dbg !4755

63:                                               ; preds = %50
  %64 = trunc i32 %60 to i16, !dbg !4757
  %65 = add nuw i32 %53, 1, !dbg !4759
  call void @llvm.dbg.value(metadata i32 %65, metadata !4666, metadata !DIExpression()), !dbg !4715
  %66 = getelementptr inbounds i16, i16* %5, i32 %53, !dbg !4760
  store i16 %64, i16* %66, align 2, !dbg !4761
  br label %67, !dbg !4762

67:                                               ; preds = %63, %50
  %68 = phi i32 [ %65, %63 ], [ %53, %50 ], !dbg !4715
  call void @llvm.dbg.value(metadata i32 %68, metadata !4666, metadata !DIExpression()), !dbg !4715
  %69 = add nsw i32 %60, %51, !dbg !4763
  call void @llvm.dbg.value(metadata i32 %69, metadata !4663, metadata !DIExpression()), !dbg !4715
  %70 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !4764
  call void @llvm.dbg.value(metadata i8* %70, metadata !4665, metadata !DIExpression()), !dbg !4715
  %71 = add nuw nsw i32 %54, 1, !dbg !4765
  call void @llvm.dbg.value(metadata i32 %71, metadata !4667, metadata !DIExpression()), !dbg !4748
  %72 = icmp eq i32 %71, %21, !dbg !4766
  br i1 %72, label %79, label %50, !dbg !4749, !llvm.loop !4767

73:                                               ; preds = %47
  %74 = and i32 %4, 4
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %75, %22, !dbg !4769
  %77 = select i1 %76, i32 %21, i32 0, !dbg !4769
  %78 = getelementptr i8, i8* %45, i32 %77, !dbg !4769
  br label %79, !dbg !4769

79:                                               ; preds = %67, %73
  %80 = phi i32 [ 0, %73 ], [ %68, %67 ], !dbg !4772
  %81 = phi i8* [ %78, %73 ], [ %70, %67 ], !dbg !4715
  %82 = phi i32 [ %18, %73 ], [ %69, %67 ], !dbg !4773
  call void @llvm.dbg.value(metadata i1 undef, metadata !4677, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4774
  call void @llvm.dbg.value(metadata i32 0, metadata !4678, metadata !DIExpression()), !dbg !4775
  call void @llvm.dbg.value(metadata i32 %82, metadata !4663, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i8* %81, metadata !4665, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i32 %80, metadata !4666, metadata !DIExpression()), !dbg !4715
  %83 = icmp eq i8 %27, 0, !dbg !4776
  br i1 %83, label %267, label %84, !dbg !4777

84:                                               ; preds = %79
  %85 = and i32 %4, 5, !dbg !4778
  %86 = icmp eq i32 %85, 0, !dbg !4779
  call void @llvm.dbg.value(metadata i1 %86, metadata !4677, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4774
  %87 = icmp eq i32 %30, 0
  %88 = icmp eq i32 %23, 0
  %89 = icmp ne i16* %5, null
  %90 = select i1 %86, i32 -2, i32 -1
  br label %91, !dbg !4777

91:                                               ; preds = %84, %127
  %92 = phi i32 [ %82, %84 ], [ %129, %127 ]
  %93 = phi i8* [ %81, %84 ], [ %97, %127 ]
  %94 = phi i32 [ %80, %84 ], [ %128, %127 ]
  %95 = phi i32 [ 0, %84 ], [ %130, %127 ]
  call void @llvm.dbg.value(metadata i32 %92, metadata !4663, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i8* %93, metadata !4665, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i32 %94, metadata !4666, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i32 %95, metadata !4678, metadata !DIExpression()), !dbg !4775
  %96 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !4780
  call void @llvm.dbg.value(metadata i8* %96, metadata !4665, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i8 undef, metadata !4680, metadata !DIExpression()), !dbg !4781
  %97 = getelementptr inbounds i8, i8* %93, i32 2, !dbg !4782
  call void @llvm.dbg.value(metadata i8* %97, metadata !4665, metadata !DIExpression()), !dbg !4715
  %98 = load i8, i8* %96, align 1, !dbg !4783
  call void @llvm.dbg.value(metadata i8 %98, metadata !4683, metadata !DIExpression()), !dbg !4781
  %99 = zext i8 %98 to i32, !dbg !4784
  %100 = getelementptr inbounds i32, i32* %11, i32 %99, !dbg !4784
  %101 = bitcast i32* %100 to i8**, !dbg !4785
  %102 = load i8*, i8** %101, align 4, !dbg !4785
  call void @llvm.dbg.value(metadata i8* %102, metadata !4684, metadata !DIExpression()), !dbg !4781
  %103 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %102) #24, !dbg !4786
  call void @llvm.dbg.value(metadata i1 %103, metadata !4685, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4781
  br i1 %13, label %110, label %104, !dbg !4787

104:                                              ; preds = %91
  %105 = load i8, i8* %93, align 1, !dbg !4789
  call void @llvm.dbg.value(metadata i8 %105, metadata !4680, metadata !DIExpression()), !dbg !4781
  %106 = zext i8 %105 to i32, !dbg !4790
  %107 = tail call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %106) #24, !dbg !4791
  br i1 %107, label %108, label %110, !dbg !4792

108:                                              ; preds = %104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.1.25, i32 0, i32 0), i32 noundef 87, i8* noundef %44, i32 noundef %106) #25, !dbg !4793
  %109 = add nsw i32 %92, -2, !dbg !4799
  call void @llvm.dbg.value(metadata i32 %109, metadata !4663, metadata !DIExpression()), !dbg !4715
  br label %127, !dbg !4800

110:                                              ; preds = %104, %91
  br i1 %103, label %111, label %114, !dbg !4801

111:                                              ; preds = %110
  br i1 %88, label %112, label %115, !dbg !4802

112:                                              ; preds = %111
  %113 = add i32 %92, %90, !dbg !4804
  call void @llvm.dbg.value(metadata i32 %113, metadata !4663, metadata !DIExpression()), !dbg !4715
  br label %127, !dbg !4807

114:                                              ; preds = %110
  br i1 %87, label %127, label %115, !dbg !4808

115:                                              ; preds = %114, %111
  call void @llvm.dbg.label(metadata !4711), !dbg !4809
  %116 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %102, i16 noundef zeroext 0) #24, !dbg !4810
  call void @llvm.dbg.value(metadata i32 %116, metadata !4686, metadata !DIExpression()), !dbg !4781
  %117 = icmp ult i32 %94, %6
  %118 = select i1 %89, i1 %117, i1 false, !dbg !4811
  br i1 %118, label %119, label %123, !dbg !4811

119:                                              ; preds = %115
  %120 = trunc i32 %116 to i16, !dbg !4813
  %121 = add nuw i32 %94, 1, !dbg !4815
  call void @llvm.dbg.value(metadata i32 %121, metadata !4666, metadata !DIExpression()), !dbg !4715
  %122 = getelementptr inbounds i16, i16* %5, i32 %94, !dbg !4816
  store i16 %120, i16* %122, align 2, !dbg !4817
  br label %123, !dbg !4818

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %121, %119 ], [ %94, %115 ], !dbg !4715
  call void @llvm.dbg.value(metadata i32 %124, metadata !4666, metadata !DIExpression()), !dbg !4715
  %125 = add i32 %92, -1, !dbg !4819
  %126 = add i32 %125, %116, !dbg !4820
  call void @llvm.dbg.value(metadata i32 %126, metadata !4663, metadata !DIExpression()), !dbg !4715
  br label %127, !dbg !4821

127:                                              ; preds = %112, %123, %114, %108
  %128 = phi i32 [ %94, %108 ], [ %124, %123 ], [ %94, %112 ], [ %94, %114 ], !dbg !4715
  %129 = phi i32 [ %109, %108 ], [ %126, %123 ], [ %113, %112 ], [ %92, %114 ], !dbg !4781
  call void @llvm.dbg.value(metadata i32 %129, metadata !4663, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i32 %128, metadata !4666, metadata !DIExpression()), !dbg !4715
  %130 = add nuw nsw i32 %95, 1, !dbg !4822
  call void @llvm.dbg.value(metadata i8* %97, metadata !4665, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i32 %130, metadata !4678, metadata !DIExpression()), !dbg !4775
  %131 = icmp eq i32 %130, %28, !dbg !4776
  br i1 %131, label %267, label %91, !dbg !4777, !llvm.loop !4823

132:                                              ; preds = %38
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4688, metadata !DIExpression()), !dbg !4825
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4689, metadata !DIExpression()), !dbg !4826
  br i1 %25, label %133, label %135, !dbg !4827

133:                                              ; preds = %132
  call void @llvm.dbg.value(metadata i8 %20, metadata !4690, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i8 0, metadata !4691, metadata !DIExpression()), !dbg !4715
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4828
  call void @llvm.dbg.value(metadata i8* %134, metadata !4692, metadata !DIExpression()), !dbg !4715
  br label %140, !dbg !4831

135:                                              ; preds = %132
  %136 = and i32 %4, 4
  %137 = icmp ne i32 %136, 0
  %138 = and i1 %137, %22, !dbg !4832
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %138, label %140, label %145, !dbg !4832

140:                                              ; preds = %133, %135
  %141 = phi i8 [ 0, %135 ], [ %20, %133 ]
  %142 = phi i8 [ %20, %135 ], [ 0, %133 ]
  %143 = phi i8* [ %139, %135 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4692, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i8 undef, metadata !4691, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i8 0, metadata !4690, metadata !DIExpression()), !dbg !4715
  %144 = call i8* @memcpy(i8* noundef nonnull %143, i8* noundef nonnull %45, i32 noundef %21) #25, !dbg !4834
  br label %145, !dbg !4837

145:                                              ; preds = %135, %140
  %146 = phi i8 [ %142, %140 ], [ 0, %135 ]
  %147 = phi i8 [ %141, %140 ], [ 0, %135 ]
  %148 = getelementptr inbounds i8, i8* %45, i32 %21, !dbg !4838
  call void @llvm.dbg.value(metadata i8* %148, metadata !4665, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i32 0, metadata !4694, metadata !DIExpression()), !dbg !4839
  call void @llvm.dbg.value(metadata i8 %146, metadata !4691, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i8 %147, metadata !4690, metadata !DIExpression()), !dbg !4715
  %149 = icmp eq i8 %27, 0, !dbg !4840
  br i1 %149, label %150, label %152, !dbg !4841

150:                                              ; preds = %145
  %151 = and i32 %4, 4, !dbg !4842
  br label %157, !dbg !4841

152:                                              ; preds = %145
  %153 = icmp eq i32 %30, 0
  %154 = icmp eq i32 %23, 0
  %155 = and i32 %4, 4
  %156 = icmp eq i32 %155, 0
  br label %176, !dbg !4841

157:                                              ; preds = %215, %150
  %158 = phi i32 [ %151, %150 ], [ %155, %215 ], !dbg !4842
  %159 = phi i8 [ %147, %150 ], [ %216, %215 ], !dbg !4843
  %160 = phi i8 [ %146, %150 ], [ %217, %215 ], !dbg !4844
  %161 = phi i8* [ %148, %150 ], [ %183, %215 ], !dbg !4715
  call void @llvm.dbg.value(metadata i8 undef, metadata !4687, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4715
  %162 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4845
  %163 = load i8, i8* %162, align 1, !dbg !4845
  %164 = zext i8 %159 to i32, !dbg !4846
  %165 = add i8 %163, %159, !dbg !4847
  call void @llvm.dbg.value(metadata i8 %165, metadata !4687, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4715
  %166 = icmp eq i32 %30, 0, !dbg !4848
  %167 = lshr i8 %160, 1, !dbg !4849
  %168 = select i1 %166, i8 %167, i8 0, !dbg !4849
  call void @llvm.dbg.value(metadata i8 %168, metadata !4687, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4715
  %169 = icmp eq i32 %23, 0, !dbg !4850
  %170 = icmp eq i32 %158, 0, !dbg !4842
  %171 = select i1 %170, i8 0, i8 %160, !dbg !4842
  %172 = select i1 %169, i8 %171, i8 0, !dbg !4842
  call void @llvm.dbg.value(metadata i8 %172, metadata !4687, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4715
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4702, metadata !DIExpression()), !dbg !4851
  %173 = load i32, i32* %11, align 1, !dbg !4852
  store i8 %165, i8* %162, align 1, !dbg !4853
  store i8 %172, i8* %19, align 1, !dbg !4853
  store i8 %168, i8* %26, align 1, !dbg !4853
  %174 = call i32 %2(i8* noundef nonnull %0, i32 noundef %41, i8* noundef %3) #25, !dbg !4854
  call void @llvm.dbg.value(metadata i32 %174, metadata !4693, metadata !DIExpression()), !dbg !4715
  %175 = icmp slt i32 %174, 0, !dbg !4855
  br i1 %175, label %267, label %220, !dbg !4857

176:                                              ; preds = %152, %215
  %177 = phi i8* [ %148, %152 ], [ %183, %215 ]
  %178 = phi i32 [ 0, %152 ], [ %218, %215 ]
  %179 = phi i8 [ %146, %152 ], [ %217, %215 ]
  %180 = phi i8 [ %147, %152 ], [ %216, %215 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !4665, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i32 %178, metadata !4694, metadata !DIExpression()), !dbg !4839
  call void @llvm.dbg.value(metadata i8 %179, metadata !4691, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i8 %180, metadata !4690, metadata !DIExpression()), !dbg !4715
  %181 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !4858
  call void @llvm.dbg.value(metadata i8* %181, metadata !4665, metadata !DIExpression()), !dbg !4715
  %182 = load i8, i8* %177, align 1, !dbg !4859
  call void @llvm.dbg.value(metadata i8 %182, metadata !4696, metadata !DIExpression()), !dbg !4860
  %183 = getelementptr inbounds i8, i8* %177, i32 2, !dbg !4861
  call void @llvm.dbg.value(metadata i8* %183, metadata !4665, metadata !DIExpression()), !dbg !4715
  %184 = load i8, i8* %181, align 1, !dbg !4862
  call void @llvm.dbg.value(metadata i8 %184, metadata !4699, metadata !DIExpression()), !dbg !4860
  %185 = zext i8 %184 to i32, !dbg !4863
  %186 = getelementptr inbounds i32, i32* %11, i32 %185, !dbg !4863
  %187 = bitcast i32* %186 to i8**, !dbg !4864
  %188 = load i8*, i8** %187, align 4, !dbg !4864
  call void @llvm.dbg.value(metadata i8* %188, metadata !4700, metadata !DIExpression()), !dbg !4860
  %189 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %188) #24, !dbg !4865
  call void @llvm.dbg.value(metadata i1 %189, metadata !4701, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4860
  br i1 %13, label %193, label %190, !dbg !4866

190:                                              ; preds = %176
  %191 = zext i8 %182 to i32, !dbg !4868
  %192 = call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %191) #24, !dbg !4869
  br i1 %192, label %215, label %193, !dbg !4870

193:                                              ; preds = %190, %176
  br i1 %189, label %194, label %200, !dbg !4871

194:                                              ; preds = %193
  br i1 %154, label %197, label %195, !dbg !4872

195:                                              ; preds = %194
  %196 = add i8 %180, 1, !dbg !4875
  call void @llvm.dbg.value(metadata i8 %196, metadata !4690, metadata !DIExpression()), !dbg !4715
  br label %208, !dbg !4878

197:                                              ; preds = %194
  br i1 %156, label %215, label %198, !dbg !4879

198:                                              ; preds = %197
  %199 = add i8 %179, 1, !dbg !4880
  call void @llvm.dbg.value(metadata i8 %199, metadata !4691, metadata !DIExpression()), !dbg !4715
  br label %208, !dbg !4883

200:                                              ; preds = %193
  br i1 %153, label %203, label %201, !dbg !4884

201:                                              ; preds = %200
  %202 = add i8 %180, 1, !dbg !4886
  call void @llvm.dbg.value(metadata i8 %202, metadata !4690, metadata !DIExpression()), !dbg !4715
  br label %208, !dbg !4889

203:                                              ; preds = %200
  %204 = add i8 %179, 1, !dbg !4890
  call void @llvm.dbg.value(metadata i8 %204, metadata !4691, metadata !DIExpression()), !dbg !4715
  %205 = zext i8 %179 to i32, !dbg !4892
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %205, !dbg !4892
  store i8 %182, i8* %206, align 1, !dbg !4893
  %207 = add i8 %179, 2, !dbg !4894
  call void @llvm.dbg.value(metadata i8 %207, metadata !4691, metadata !DIExpression()), !dbg !4715
  br label %208

208:                                              ; preds = %201, %203, %195, %198
  %209 = phi i8 [ %179, %198 ], [ %180, %195 ], [ %204, %203 ], [ %180, %201 ]
  %210 = phi [16 x i8]* [ %9, %198 ], [ %8, %195 ], [ %9, %203 ], [ %8, %201 ]
  %211 = phi i8 [ %180, %198 ], [ %196, %195 ], [ %180, %203 ], [ %202, %201 ]
  %212 = phi i8 [ %199, %198 ], [ %179, %195 ], [ %207, %203 ], [ %179, %201 ]
  %213 = zext i8 %209 to i32, !dbg !4895
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %210, i32 0, i32 %213, !dbg !4895
  store i8 %184, i8* %214, align 1, !dbg !4895
  br label %215, !dbg !4896

215:                                              ; preds = %208, %197, %190
  %216 = phi i8 [ %180, %190 ], [ %180, %197 ], [ %211, %208 ], !dbg !4715
  %217 = phi i8 [ %179, %190 ], [ %179, %197 ], [ %212, %208 ], !dbg !4844
  call void @llvm.dbg.value(metadata i8 %217, metadata !4691, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i8 %216, metadata !4690, metadata !DIExpression()), !dbg !4715
  %218 = add nuw nsw i32 %178, 1, !dbg !4896
  call void @llvm.dbg.value(metadata i8* %183, metadata !4665, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i32 %218, metadata !4694, metadata !DIExpression()), !dbg !4839
  %219 = icmp eq i32 %218, %28, !dbg !4840
  br i1 %219, label %157, label %176, !dbg !4841, !llvm.loop !4897

220:                                              ; preds = %157
  %221 = zext i8 %160 to i32, !dbg !4849
  call void @llvm.dbg.value(metadata i32 %174, metadata !4663, metadata !DIExpression()), !dbg !4715
  store i32 %173, i32* %11, align 1, !dbg !4899
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4900
  %223 = call i32 %2(i8* noundef nonnull %222, i32 noundef %221, i8* noundef %3) #25, !dbg !4901
  call void @llvm.dbg.value(metadata i32 %223, metadata !4693, metadata !DIExpression()), !dbg !4715
  %224 = icmp slt i32 %223, 0, !dbg !4902
  br i1 %224, label %267, label %225, !dbg !4904

225:                                              ; preds = %220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %174, i32 %223), metadata !4663, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4715
  %226 = mul nsw i32 %28, -2
  %227 = add i32 %18, %226, !dbg !4905
  %228 = add nuw nsw i32 %41, %21, !dbg !4905
  %229 = sub i32 %227, %228, !dbg !4905
  call void @llvm.dbg.value(metadata i32 %229, metadata !4703, metadata !DIExpression()), !dbg !4715
  %230 = call i32 %2(i8* noundef %161, i32 noundef %229, i8* noundef %3) #25, !dbg !4906
  call void @llvm.dbg.value(metadata i32 %230, metadata !4693, metadata !DIExpression()), !dbg !4715
  %231 = icmp slt i32 %230, 0, !dbg !4907
  br i1 %231, label %267, label %232, !dbg !4909

232:                                              ; preds = %225
  %233 = add nuw nsw i32 %223, %174, !dbg !4910
  call void @llvm.dbg.value(metadata i32 %233, metadata !4663, metadata !DIExpression()), !dbg !4715
  %234 = add nuw nsw i32 %233, %230, !dbg !4911
  call void @llvm.dbg.value(metadata i32 %234, metadata !4663, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i32 0, metadata !4704, metadata !DIExpression()), !dbg !4912
  %235 = icmp eq i8 %159, 0, !dbg !4913
  br i1 %235, label %264, label %236, !dbg !4914

236:                                              ; preds = %232
  %237 = icmp eq i16* %5, null
  br label %238, !dbg !4914

238:                                              ; preds = %236, %259
  %239 = phi i32 [ 0, %236 ], [ %262, %259 ]
  %240 = phi i32 [ %234, %236 ], [ %261, %259 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !4704, metadata !DIExpression()), !dbg !4912
  call void @llvm.dbg.value(metadata i32 %240, metadata !4663, metadata !DIExpression()), !dbg !4715
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4915
  %241 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %239, !dbg !4916
  %242 = load i8, i8* %241, align 1, !dbg !4916
  call void @llvm.dbg.value(metadata i8 %242, metadata !4706, metadata !DIExpression()), !dbg !4917
  store i8 %242, i8* %10, align 1, !dbg !4918
  %243 = zext i8 %242 to i32, !dbg !4919
  %244 = getelementptr inbounds i32, i32* %11, i32 %243, !dbg !4919
  %245 = bitcast i32* %244 to i8**, !dbg !4920
  %246 = load i8*, i8** %245, align 4, !dbg !4920
  call void @llvm.dbg.value(metadata i8* %246, metadata !4709, metadata !DIExpression()), !dbg !4917
  br i1 %237, label %250, label %247, !dbg !4921

247:                                              ; preds = %238
  %248 = getelementptr inbounds i16, i16* %5, i32 %239, !dbg !4922
  %249 = load i16, i16* %248, align 2, !dbg !4922
  br label %250, !dbg !4921

250:                                              ; preds = %238, %247
  %251 = phi i16 [ %249, %247 ], [ 0, %238 ], !dbg !4921
  call void @llvm.dbg.value(metadata i32 undef, metadata !4710, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4917
  call void @llvm.dbg.value(metadata i8* %10, metadata !4706, metadata !DIExpression(DW_OP_deref)), !dbg !4917
  %252 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4923
  call void @llvm.dbg.value(metadata i32 %252, metadata !4693, metadata !DIExpression()), !dbg !4715
  %253 = icmp slt i32 %252, 0, !dbg !4924
  br i1 %253, label %257, label %254, !dbg !4926

254:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i16 %251, metadata !4710, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata !DIArgList(i32 %240, i32 %252), metadata !4663, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4715
  %255 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %246, i16 noundef zeroext %251) #24, !dbg !4927
  call void @llvm.dbg.value(metadata i32 %255, metadata !4693, metadata !DIExpression()), !dbg !4715
  %256 = icmp slt i32 %255, 0, !dbg !4928
  br i1 %256, label %257, label %259, !dbg !4930

257:                                              ; preds = %254, %250
  %258 = phi i32 [ %255, %254 ], [ %252, %250 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4663, metadata !DIExpression()), !dbg !4715
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4931
  call void @llvm.dbg.value(metadata i32 undef, metadata !4663, metadata !DIExpression()), !dbg !4715
  br label %267

259:                                              ; preds = %254
  %260 = add nsw i32 %252, %240, !dbg !4932
  call void @llvm.dbg.value(metadata i32 %260, metadata !4663, metadata !DIExpression()), !dbg !4715
  %261 = add nsw i32 %260, %255, !dbg !4933
  call void @llvm.dbg.value(metadata i32 %261, metadata !4663, metadata !DIExpression()), !dbg !4715
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4931
  %262 = add nuw nsw i32 %239, 1, !dbg !4934
  call void @llvm.dbg.value(metadata i32 %262, metadata !4704, metadata !DIExpression()), !dbg !4912
  %263 = icmp eq i32 %262, %164, !dbg !4913
  br i1 %263, label %264, label %238, !dbg !4914, !llvm.loop !4935

264:                                              ; preds = %259, %232
  %265 = phi i32 [ %234, %232 ], [ %261, %259 ], !dbg !4911
  call void @llvm.dbg.value(metadata i32 %265, metadata !4663, metadata !DIExpression()), !dbg !4715
  %266 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4937
  br label %267, !dbg !4938

267:                                              ; preds = %127, %79, %257, %264, %157, %220, %225, %34, %36
  %268 = phi i32 [ %18, %36 ], [ %18, %34 ], [ %265, %264 ], [ %174, %157 ], [ %223, %220 ], [ %230, %225 ], [ %258, %257 ], [ %82, %79 ], [ %129, %127 ], !dbg !4715
  ret i32 %268, !dbg !4939
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4940 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4944, metadata !DIExpression()), !dbg !4952
  call void @llvm.dbg.value(metadata i8* %0, metadata !4945, metadata !DIExpression()), !dbg !4952
  call void @llvm.dbg.value(metadata i8* %0, metadata !4946, metadata !DIExpression()), !dbg !4952
  %2 = load i8, i8* %0, align 1, !dbg !4953
  %3 = zext i8 %2 to i32, !dbg !4953
  %4 = shl nuw nsw i32 %3, 2, !dbg !4954
  call void @llvm.dbg.value(metadata i32 %4, metadata !4947, metadata !DIExpression()), !dbg !4952
  %5 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4955
  %6 = load i8, i8* %5, align 1, !dbg !4955
  %7 = zext i8 %6 to i32, !dbg !4955
  call void @llvm.dbg.value(metadata i32 %7, metadata !4948, metadata !DIExpression()), !dbg !4952
  %8 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4956
  %9 = load i8, i8* %8, align 1, !dbg !4956
  %10 = zext i8 %9 to i32, !dbg !4956
  call void @llvm.dbg.value(metadata i32 %10, metadata !4949, metadata !DIExpression()), !dbg !4952
  %11 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !4957
  call void @llvm.dbg.value(metadata i8* %11, metadata !4945, metadata !DIExpression()), !dbg !4952
  %12 = getelementptr inbounds i8, i8* %11, i32 %10, !dbg !4958
  call void @llvm.dbg.value(metadata i8* %12, metadata !4945, metadata !DIExpression()), !dbg !4952
  call void @llvm.dbg.value(metadata i32 0, metadata !4950, metadata !DIExpression()), !dbg !4959
  %13 = icmp eq i8 %6, 0, !dbg !4960
  br i1 %13, label %14, label %19, !dbg !4962

14:                                               ; preds = %19, %1
  %15 = phi i8* [ %12, %1 ], [ %25, %19 ], !dbg !4952
  %16 = ptrtoint i8* %15 to i32, !dbg !4963
  %17 = ptrtoint i8* %0 to i32, !dbg !4963
  %18 = sub i32 %16, %17, !dbg !4963
  ret i32 %18, !dbg !4964

19:                                               ; preds = %1, %19
  %20 = phi i32 [ %26, %19 ], [ 0, %1 ]
  %21 = phi i8* [ %25, %19 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4950, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.value(metadata i8* %21, metadata !4945, metadata !DIExpression()), !dbg !4952
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !4965
  call void @llvm.dbg.value(metadata i8* %22, metadata !4945, metadata !DIExpression()), !dbg !4952
  %23 = tail call i32 @strlen(i8* noundef nonnull %22) #25, !dbg !4967
  %24 = add i32 %23, 1, !dbg !4968
  %25 = getelementptr inbounds i8, i8* %22, i32 %24, !dbg !4969
  call void @llvm.dbg.value(metadata i8* %25, metadata !4945, metadata !DIExpression()), !dbg !4952
  %26 = add nuw nsw i32 %20, 1, !dbg !4970
  call void @llvm.dbg.value(metadata i32 %26, metadata !4950, metadata !DIExpression()), !dbg !4959
  %27 = icmp eq i32 %26, %7, !dbg !4960
  br i1 %27, label %14, label %19, !dbg !4962, !llvm.loop !4971
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4973 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4977, metadata !DIExpression()), !dbg !4981
  call void @llvm.dbg.value(metadata i8* %1, metadata !4978, metadata !DIExpression()), !dbg !4981
  call void @llvm.dbg.value(metadata i8* %2, metadata !4979, metadata !DIExpression()), !dbg !4981
  call void @llvm.dbg.value(metadata i16 %3, metadata !4980, metadata !DIExpression()), !dbg !4981
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4982
  br i1 %5, label %6, label %9, !dbg !4984

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4985
  %8 = add i32 %7, 1, !dbg !4987
  br label %20, !dbg !4988

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4989
  br i1 %10, label %13, label %11, !dbg !4990

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4990
  br label %16, !dbg !4990

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4991
  %15 = add i32 %14, 1, !dbg !4992
  br label %16, !dbg !4990

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4990
  %18 = and i32 %17, 65535, !dbg !4993
  call void @llvm.dbg.value(metadata i32 %17, metadata !4980, metadata !DIExpression()), !dbg !4981
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4994
  br label %20, !dbg !4995

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4981
  ret i32 %21, !dbg !4996
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4997 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4999, metadata !DIExpression()), !dbg !5000
  ret i32 0, !dbg !5001
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #6 !dbg !5002 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !5006, metadata !DIExpression()), !dbg !5007
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !5008
  ret void, !dbg !5009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #10 !dbg !5010 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !5013
  ret i8* %1, !dbg !5014
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !5015 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5026, metadata !DIExpression()), !dbg !5037
  call void @llvm.dbg.value(metadata i8* %0, metadata !5025, metadata !DIExpression()), !dbg !5037
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !5038
  ret void, !dbg !5040
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !5041 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5045, metadata !DIExpression()), !dbg !5047
  call void @llvm.dbg.value(metadata i8* %1, metadata !5046, metadata !DIExpression()), !dbg !5047
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5048
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !5048
  ret i32 %4, !dbg !5049
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !5050 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5057, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5054, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.value(metadata i8* %1, metadata !5055, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.value(metadata i8* %2, metadata !5056, metadata !DIExpression()), !dbg !5058
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !5059
  ret void, !dbg !5060
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5061 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5065, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.value(metadata i32 %1, metadata !5066, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.value(metadata i32 0, metadata !5067, metadata !DIExpression()), !dbg !5068
  %3 = icmp eq i32 %1, 0, !dbg !5069
  br i1 %3, label %13, label %4, !dbg !5072

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5067, metadata !DIExpression()), !dbg !5068
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5073
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !5075
  %8 = load i8, i8* %7, align 1, !dbg !5075
  %9 = zext i8 %8 to i32, !dbg !5075
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !5073
  %11 = add nuw i32 %5, 1, !dbg !5076
  call void @llvm.dbg.value(metadata i32 %11, metadata !5067, metadata !DIExpression()), !dbg !5068
  %12 = icmp eq i32 %11, %1, !dbg !5069
  br i1 %12, label %13, label %4, !dbg !5072, !llvm.loop !5077

13:                                               ; preds = %4, %2
  ret void, !dbg !5079
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5080 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5084, metadata !DIExpression()), !dbg !5086
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5087
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5087
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5085, metadata !DIExpression()), !dbg !5088
  call void @llvm.va_start(i8* nonnull %3), !dbg !5089
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5090
  %5 = load i32, i32* %4, align 4, !dbg !5090
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5090
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !5090
  call void @llvm.va_end(i8* nonnull %3), !dbg !5091
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5092
  ret void, !dbg !5092
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !5093 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5097, metadata !DIExpression()), !dbg !5102
  call void @llvm.dbg.value(metadata i32 %1, metadata !5098, metadata !DIExpression()), !dbg !5102
  call void @llvm.dbg.value(metadata i8* %2, metadata !5099, metadata !DIExpression()), !dbg !5102
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5103
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !5103
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5100, metadata !DIExpression()), !dbg !5104
  call void @llvm.va_start(i8* nonnull %5), !dbg !5105
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5106
  %7 = load i32, i32* %6, align 4, !dbg !5106
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5106
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !5106
  call void @llvm.dbg.value(metadata i32 %9, metadata !5101, metadata !DIExpression()), !dbg !5102
  call void @llvm.va_end(i8* nonnull %5), !dbg !5107
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !5108
  ret i32 %9, !dbg !5109
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !5110 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5117, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.value(metadata i8* %0, metadata !5114, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.value(metadata i32 %1, metadata !5115, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.value(metadata i8* %2, metadata !5116, metadata !DIExpression()), !dbg !5124
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5125
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !5125
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !5118, metadata !DIExpression()), !dbg !5126
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5127
  store i8* %0, i8** %7, align 4, !dbg !5127
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5127
  store i32 %1, i32* %8, align 4, !dbg !5127
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5127
  store i32 0, i32* %9, align 4, !dbg !5127
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !5128
  %10 = load i32, i32* %9, align 4, !dbg !5129
  %11 = load i32, i32* %8, align 4, !dbg !5131
  %12 = icmp slt i32 %10, %11, !dbg !5132
  br i1 %12, label %13, label %15, !dbg !5133

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5134
  store i8 0, i8* %14, align 1, !dbg !5136
  br label %15, !dbg !5137

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !5138
  ret i32 %10, !dbg !5139
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #11 !dbg !5140 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5145, metadata !DIExpression()), !dbg !5147
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5146, metadata !DIExpression()), !dbg !5147
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5148
  %4 = load i8*, i8** %3, align 4, !dbg !5148
  %5 = icmp eq i8* %4, null, !dbg !5150
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5151
  br i1 %5, label %12, label %8, !dbg !5152

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5153
  %10 = load i32, i32* %9, align 4, !dbg !5153
  %11 = icmp slt i32 %7, %10, !dbg !5154
  br i1 %11, label %15, label %12, !dbg !5155

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5156
  %14 = add nsw i32 %7, 1, !dbg !5158
  store i32 %14, i32* %13, align 4, !dbg !5158
  br label %25, !dbg !5159

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5160
  %17 = icmp eq i32 %7, %16, !dbg !5162
  br i1 %17, label %18, label %21, !dbg !5163

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5164
  store i32 %19, i32* %6, align 4, !dbg !5164
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5166
  store i8 0, i8* %20, align 1, !dbg !5167
  br label %25, !dbg !5168

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5169
  %23 = add nsw i32 %7, 1, !dbg !5171
  store i32 %23, i32* %6, align 4, !dbg !5171
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5172
  store i8 %22, i8* %24, align 1, !dbg !5173
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5174
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !5175 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5185, metadata !DIExpression()), !dbg !5189
  call void @llvm.dbg.value(metadata i8* %1, metadata !5186, metadata !DIExpression()), !dbg !5189
  call void @llvm.dbg.value(metadata i8* %2, metadata !5187, metadata !DIExpression()), !dbg !5189
  call void @llvm.dbg.value(metadata i8* %3, metadata !5188, metadata !DIExpression()), !dbg !5189
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !5190
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !5191
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !5192
  unreachable, !dbg !5193
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #12 !dbg !5194 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !5298
  ret %struct.k_thread* %1, !dbg !5299
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5300 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5304, metadata !DIExpression()), !dbg !5305
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5306, !srcloc !5308
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !5309
  ret void, !dbg !5310
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #12 !dbg !5311 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5312, !srcloc !5314
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !5315
  ret %struct.k_thread* %1, !dbg !5316
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5317 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5330, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5327, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.value(metadata i8* %1, metadata !5328, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.value(metadata i8* %2, metadata !5329, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.value(metadata i32 %4, metadata !5331, metadata !DIExpression()), !dbg !5456
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5457
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5457
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5332, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i32 0, metadata !5336, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.value(metadata i1 undef, metadata !5338, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5456
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5459

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5459

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5460
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5330, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.value(metadata i8* %30, metadata !5329, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.value(metadata i32 %29, metadata !5336, metadata !DIExpression()), !dbg !5456
  %31 = load i8, i8* %30, align 1, !dbg !5461
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5459

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5461
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5462
  call void @llvm.dbg.value(metadata i8* %34, metadata !5329, metadata !DIExpression()), !dbg !5456
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !5462
  call void @llvm.dbg.value(metadata i32 %35, metadata !5340, metadata !DIExpression()), !dbg !5463
  %36 = icmp slt i32 %35, 0, !dbg !5464
  %37 = add i32 %29, 1, !dbg !5462
  call void @llvm.dbg.value(metadata i32 undef, metadata !5336, metadata !DIExpression()), !dbg !5456
  br i1 %36, label %365, label %28, !llvm.loop !5466

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5468
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5345, metadata !DIExpression()), !dbg !5469
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5469
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5388, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5391, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata i8* %30, metadata !5394, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata i32 -1, metadata !5395, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata i32 -1, metadata !5396, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata i8* null, metadata !5397, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata i8* %14, metadata !5398, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata i8 0, metadata !5399, metadata !DIExpression()), !dbg !5470
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !5471
  call void @llvm.dbg.value(metadata i8* %39, metadata !5329, metadata !DIExpression()), !dbg !5456
  %40 = load i24, i24* %15, align 8, !dbg !5472
  %41 = and i24 %40, 256, !dbg !5472
  %42 = icmp eq i24 %41, 0, !dbg !5472
  br i1 %42, label %51, label %43, !dbg !5474

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5475
  call void @llvm.dbg.value(metadata i8* %44, metadata !5330, metadata !DIExpression()), !dbg !5456
  %45 = bitcast i8* %27 to i32*, !dbg !5475
  %46 = load i32, i32* %45, align 4, !dbg !5475
  call void @llvm.dbg.value(metadata i32 %46, metadata !5395, metadata !DIExpression()), !dbg !5470
  %47 = icmp slt i32 %46, 0, !dbg !5477
  br i1 %47, label %48, label %56, !dbg !5479

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5480
  store i24 %49, i24* %15, align 8, !dbg !5480
  %50 = sub nsw i32 0, %46, !dbg !5482
  call void @llvm.dbg.value(metadata i32 %50, metadata !5395, metadata !DIExpression()), !dbg !5470
  br label %56, !dbg !5483

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5484
  %53 = icmp eq i24 %52, 0, !dbg !5484
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5486
  br label %56, !dbg !5486

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5487
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5470
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5330, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.value(metadata i32 %58, metadata !5395, metadata !DIExpression()), !dbg !5470
  %60 = and i24 %57, 1024, !dbg !5487
  %61 = icmp eq i24 %60, 0, !dbg !5487
  br i1 %61, label %69, label %62, !dbg !5488

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5489
  call void @llvm.dbg.value(metadata i8* %63, metadata !5330, metadata !DIExpression()), !dbg !5456
  %64 = bitcast i8* %59 to i32*, !dbg !5489
  %65 = load i32, i32* %64, align 4, !dbg !5489
  call void @llvm.dbg.value(metadata i32 %65, metadata !5400, metadata !DIExpression()), !dbg !5490
  %66 = icmp slt i32 %65, 0, !dbg !5491
  br i1 %66, label %67, label %74, !dbg !5493

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5494
  store i24 %68, i24* %15, align 8, !dbg !5494
  br label %74, !dbg !5496

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5497
  %71 = icmp eq i24 %70, 0, !dbg !5497
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5499
  br label %74, !dbg !5499

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5500
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5470
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5470
  call void @llvm.dbg.value(metadata i8* %77, metadata !5330, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.value(metadata i32 %76, metadata !5396, metadata !DIExpression()), !dbg !5470
  store i32 0, i32* %16, align 4, !dbg !5501
  store i32 0, i32* %17, align 8, !dbg !5502
  %78 = lshr i24 %75, 16, !dbg !5500
  call void @llvm.dbg.value(metadata i24 %78, metadata !5403, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5470
  %79 = lshr i24 %75, 11, !dbg !5503
  %80 = and i24 %79, 15, !dbg !5503
  %81 = zext i24 %80 to i32, !dbg !5503
  call void @llvm.dbg.value(metadata i32 %81, metadata !5404, metadata !DIExpression()), !dbg !5470
  %82 = trunc i24 %78 to i3, !dbg !5504
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5504

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5505

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5508
  call void @llvm.dbg.value(metadata i8* %85, metadata !5330, metadata !DIExpression()), !dbg !5456
  %86 = bitcast i8* %77 to i32*, !dbg !5508
  %87 = load i32, i32* %86, align 4, !dbg !5508
  %88 = sext i32 %87 to i64, !dbg !5508
  store i64 %88, i64* %20, align 8, !dbg !5510
  br label %115, !dbg !5511

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5512
  call void @llvm.dbg.value(metadata i8* %90, metadata !5330, metadata !DIExpression()), !dbg !5456
  %91 = bitcast i8* %77 to i32*, !dbg !5512
  %92 = load i32, i32* %91, align 4, !dbg !5512
  %93 = sext i32 %92 to i64, !dbg !5512
  store i64 %93, i64* %20, align 8, !dbg !5515
  br label %115, !dbg !5516

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5517
  %96 = add i32 %95, 7, !dbg !5517
  %97 = and i32 %96, -8, !dbg !5517
  %98 = inttoptr i32 %97 to i8*, !dbg !5517
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5517
  call void @llvm.dbg.value(metadata i8* %99, metadata !5330, metadata !DIExpression()), !dbg !5456
  %100 = inttoptr i32 %97 to i64*, !dbg !5517
  %101 = load i64, i64* %100, align 8, !dbg !5517
  store i64 %101, i64* %20, align 8, !dbg !5518
  br label %115, !dbg !5519

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5520
  %104 = add i32 %103, 7, !dbg !5520
  %105 = and i32 %104, -8, !dbg !5520
  %106 = inttoptr i32 %105 to i8*, !dbg !5520
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5520
  call void @llvm.dbg.value(metadata i8* %107, metadata !5330, metadata !DIExpression()), !dbg !5456
  %108 = inttoptr i32 %105 to i64*, !dbg !5520
  %109 = load i64, i64* %108, align 8, !dbg !5520
  store i64 %109, i64* %20, align 8, !dbg !5521
  br label %115, !dbg !5522

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5523
  call void @llvm.dbg.value(metadata i8* %111, metadata !5330, metadata !DIExpression()), !dbg !5456
  %112 = bitcast i8* %77 to i32*, !dbg !5523
  %113 = load i32, i32* %112, align 4, !dbg !5523
  %114 = sext i32 %113 to i64, !dbg !5524
  store i64 %114, i64* %20, align 8, !dbg !5525
  br label %115, !dbg !5526

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5527
  call void @llvm.dbg.value(metadata i8* %117, metadata !5330, metadata !DIExpression()), !dbg !5456
  %118 = trunc i24 %79 to i4, !dbg !5528
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5528

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5529
  %121 = ashr exact i64 %120, 56, !dbg !5529
  store i64 %121, i64* %20, align 8, !dbg !5532
  br label %177, !dbg !5533

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5534
  %124 = ashr exact i64 %123, 48, !dbg !5534
  store i64 %124, i64* %20, align 8, !dbg !5537
  br label %177, !dbg !5538

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5539

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5542
  call void @llvm.dbg.value(metadata i8* %127, metadata !5330, metadata !DIExpression()), !dbg !5456
  %128 = bitcast i8* %77 to i32*, !dbg !5542
  %129 = load i32, i32* %128, align 4, !dbg !5542
  %130 = zext i32 %129 to i64, !dbg !5542
  store i64 %130, i64* %20, align 8, !dbg !5544
  br label %157, !dbg !5545

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5546
  call void @llvm.dbg.value(metadata i8* %132, metadata !5330, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.value(metadata i8* %132, metadata !5330, metadata !DIExpression()), !dbg !5456
  %133 = bitcast i8* %77 to i32*, !dbg !5546
  %134 = load i32, i32* %133, align 4, !dbg !5546
  %135 = zext i32 %134 to i64, !dbg !5546
  store i64 %135, i64* %20, align 8, !dbg !5546
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5548
  %138 = add i32 %137, 7, !dbg !5548
  %139 = and i32 %138, -8, !dbg !5548
  %140 = inttoptr i32 %139 to i8*, !dbg !5548
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5548
  call void @llvm.dbg.value(metadata i8* %141, metadata !5330, metadata !DIExpression()), !dbg !5456
  %142 = inttoptr i32 %139 to i64*, !dbg !5548
  %143 = load i64, i64* %142, align 8, !dbg !5548
  store i64 %143, i64* %20, align 8, !dbg !5549
  br label %157, !dbg !5550

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5551
  %146 = add i32 %145, 7, !dbg !5551
  %147 = and i32 %146, -8, !dbg !5551
  %148 = inttoptr i32 %147 to i8*, !dbg !5551
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5551
  call void @llvm.dbg.value(metadata i8* %149, metadata !5330, metadata !DIExpression()), !dbg !5456
  %150 = inttoptr i32 %147 to i64*, !dbg !5551
  %151 = load i64, i64* %150, align 8, !dbg !5551
  store i64 %151, i64* %20, align 8, !dbg !5552
  br label %157, !dbg !5553

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5554
  call void @llvm.dbg.value(metadata i8* %153, metadata !5330, metadata !DIExpression()), !dbg !5456
  %154 = bitcast i8* %77 to i32*, !dbg !5554
  %155 = load i32, i32* %154, align 4, !dbg !5554
  %156 = zext i32 %155 to i64, !dbg !5555
  store i64 %156, i64* %20, align 8, !dbg !5556
  br label %157, !dbg !5557

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5558
  call void @llvm.dbg.value(metadata i8* %159, metadata !5330, metadata !DIExpression()), !dbg !5456
  %160 = trunc i24 %79 to i4, !dbg !5559
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5559

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5560
  store i64 %162, i64* %20, align 8, !dbg !5563
  br label %177, !dbg !5564

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5565
  store i64 %164, i64* %20, align 8, !dbg !5568
  br label %177, !dbg !5569

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5570
  %167 = add i32 %166, 7, !dbg !5570
  %168 = and i32 %167, -8, !dbg !5570
  %169 = inttoptr i32 %168 to i8*, !dbg !5570
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5570
  call void @llvm.dbg.value(metadata i8* %170, metadata !5330, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.value(metadata i8* %170, metadata !5330, metadata !DIExpression()), !dbg !5456
  %171 = inttoptr i32 %168 to double*, !dbg !5570
  %172 = load double, double* %171, align 8, !dbg !5570
  store double %172, double* %19, align 8, !dbg !5570
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5574
  call void @llvm.dbg.value(metadata i8* %174, metadata !5330, metadata !DIExpression()), !dbg !5456
  %175 = bitcast i8* %77 to i8**, !dbg !5574
  %176 = load i8*, i8** %175, align 4, !dbg !5574
  store i8* %176, i8** %18, align 8, !dbg !5577
  br label %177, !dbg !5578

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5470
  call void @llvm.dbg.value(metadata i8* %178, metadata !5330, metadata !DIExpression()), !dbg !5456
  %179 = and i24 %75, 3, !dbg !5579
  %180 = icmp eq i24 %179, 0, !dbg !5579
  br i1 %180, label %185, label %181, !dbg !5579

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !5580
  call void @llvm.dbg.value(metadata i32 %182, metadata !5405, metadata !DIExpression()), !dbg !5581
  %183 = icmp slt i32 %182, 0, !dbg !5582
  %184 = add i32 %182, %29, !dbg !5580
  call void @llvm.dbg.value(metadata i32 undef, metadata !5336, metadata !DIExpression()), !dbg !5456
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5584
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5585

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !5586
  call void @llvm.dbg.value(metadata i32 %188, metadata !5409, metadata !DIExpression()), !dbg !5587
  %189 = icmp slt i32 %188, 0, !dbg !5588
  %190 = add i32 %29, 1, !dbg !5586
  call void @llvm.dbg.value(metadata i32 undef, metadata !5336, metadata !DIExpression()), !dbg !5456
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5590
  call void @llvm.dbg.value(metadata i8* %192, metadata !5397, metadata !DIExpression()), !dbg !5470
  %193 = icmp sgt i32 %76, -1, !dbg !5591
  br i1 %193, label %194, label %196, !dbg !5593

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !5594
  call void @llvm.dbg.value(metadata i32 %195, metadata !5412, metadata !DIExpression()), !dbg !5596
  br label %241, !dbg !5597

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !5598
  call void @llvm.dbg.value(metadata i32 %197, metadata !5412, metadata !DIExpression()), !dbg !5596
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5397, metadata !DIExpression()), !dbg !5470
  %199 = load i64, i64* %20, align 8, !dbg !5600
  %200 = trunc i64 %199 to i8, !dbg !5601
  store i8 %200, i8* %10, align 1, !dbg !5602
  call void @llvm.dbg.value(metadata i8* %23, metadata !5398, metadata !DIExpression()), !dbg !5470
  br label %245, !dbg !5603

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5604
  %203 = icmp eq i24 %202, 0, !dbg !5604
  %204 = trunc i24 %75 to i8, !dbg !5606
  %205 = shl i8 %204, 1, !dbg !5606
  %206 = and i8 %205, 32, !dbg !5606
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5606
  call void @llvm.dbg.value(metadata i8 %207, metadata !5399, metadata !DIExpression()), !dbg !5470
  %208 = load i64, i64* %20, align 8, !dbg !5607
  call void @llvm.dbg.value(metadata i64 %208, metadata !5337, metadata !DIExpression()), !dbg !5456
  %209 = icmp slt i64 %208, 0, !dbg !5608
  br i1 %209, label %210, label %212, !dbg !5610

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5399, metadata !DIExpression()), !dbg !5470
  %211 = sub nsw i64 0, %208, !dbg !5611
  store i64 %211, i64* %20, align 8, !dbg !5613
  br label %212, !dbg !5614

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5470
  call void @llvm.dbg.value(metadata i8 %213, metadata !5399, metadata !DIExpression()), !dbg !5470
  %214 = load i64, i64* %20, align 8, !dbg !5615
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !5616
  call void @llvm.dbg.value(metadata i8* %215, metadata !5397, metadata !DIExpression()), !dbg !5470
  br label %216, !dbg !5617

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5618
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5619
  call void @llvm.dbg.value(metadata i8* %218, metadata !5397, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata i8 %217, metadata !5399, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.label(metadata !5455), !dbg !5620
  %219 = icmp sgt i32 %76, -1, !dbg !5621
  br i1 %219, label %222, label %220, !dbg !5622

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5623
  br label %245, !dbg !5622

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5625
  %224 = sub i32 %22, %223, !dbg !5625
  call void @llvm.dbg.value(metadata i32 %224, metadata !5414, metadata !DIExpression()), !dbg !5626
  %225 = load i24, i24* %15, align 8, !dbg !5627
  %226 = and i24 %225, -65, !dbg !5627
  store i24 %226, i24* %15, align 8, !dbg !5627
  %227 = icmp ugt i32 %76, %224, !dbg !5628
  br i1 %227, label %228, label %245, !dbg !5630

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5631
  store i32 %229, i32* %16, align 4, !dbg !5633
  br label %245, !dbg !5634

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5635
  %232 = icmp eq i8* %231, null, !dbg !5637
  br i1 %232, label %245, label %233, !dbg !5638

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5639
  %235 = zext i32 %234 to i64, !dbg !5639
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !5641
  call void @llvm.dbg.value(metadata i8* %236, metadata !5397, metadata !DIExpression()), !dbg !5470
  %237 = load i24, i24* %15, align 8, !dbg !5642
  %238 = or i24 %237, 1048576, !dbg !5642
  store i24 %238, i24* %15, align 8, !dbg !5642
  store i8 120, i8* %21, align 1, !dbg !5643
  br label %216, !dbg !5644

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5645
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !5648
  br label %363, !dbg !5649

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5650
  call void @llvm.dbg.value(metadata i32 %242, metadata !5412, metadata !DIExpression()), !dbg !5596
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5651
  call void @llvm.dbg.value(metadata i32 -1, metadata !5396, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata i32 %29, metadata !5336, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.value(metadata i8* %192, metadata !5397, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata i8* %243, metadata !5398, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata i8 0, metadata !5399, metadata !DIExpression()), !dbg !5470
  %244 = icmp eq i8* %192, null, !dbg !5652
  br i1 %244, label %363, label %245, !dbg !5654, !llvm.loop !5466

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5623
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5417, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5470
  call void @llvm.dbg.value(metadata i32 0, metadata !5418, metadata !DIExpression()), !dbg !5470
  %250 = zext i8 %249 to i32, !dbg !5655
  %251 = icmp eq i8 %249, 0, !dbg !5657
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5417, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5470
  call void @llvm.dbg.value(metadata i32 undef, metadata !5417, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5417, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5470
  call void @llvm.dbg.value(metadata i32 undef, metadata !5417, metadata !DIExpression()), !dbg !5470
  %252 = icmp sgt i32 %58, 0, !dbg !5658
  br i1 %252, label %253, label %302, !dbg !5659

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5623
  %255 = icmp eq i24 %254, 0, !dbg !5623
  %256 = ptrtoint i8* %248 to i32, !dbg !5660
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5417, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5470
  %257 = ptrtoint i8* %247 to i32, !dbg !5660
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5417, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5470
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5417, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5470
  %258 = xor i1 %251, true, !dbg !5661
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5417, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5470
  %259 = sext i1 %258 to i32, !dbg !5661
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5417, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5470
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5417, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5470
  %260 = lshr i24 %246, 19, !dbg !5662
  %261 = and i24 %260, 1, !dbg !5662
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5662
  %263 = zext i24 %262 to i32, !dbg !5662
  %264 = add i32 %257, %259, !dbg !5662
  %265 = add i32 %256, %263, !dbg !5662
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5417, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5470
  %266 = and i24 %246, 4194304, !dbg !5663
  %267 = icmp eq i24 %266, 0, !dbg !5663
  %268 = load i32, i32* %16, align 4, !dbg !5665
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5417, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5470
  call void @llvm.dbg.value(metadata i32 undef, metadata !5417, metadata !DIExpression()), !dbg !5470
  %269 = load i32, i32* %17, align 8, !dbg !5666
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5666
  call void @llvm.dbg.value(metadata i32 undef, metadata !5417, metadata !DIExpression()), !dbg !5470
  %271 = add i32 %264, %58, !dbg !5666
  %272 = add i32 %265, %268, !dbg !5666
  %273 = add i32 %272, %270, !dbg !5667
  %274 = sub i32 %271, %273, !dbg !5667
  call void @llvm.dbg.value(metadata i32 %274, metadata !5395, metadata !DIExpression()), !dbg !5470
  %275 = and i24 %246, 4, !dbg !5668
  %276 = icmp eq i24 %275, 0, !dbg !5668
  br i1 %276, label %277, label %302, !dbg !5669

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5419, metadata !DIExpression()), !dbg !5670
  %278 = and i24 %246, 64, !dbg !5671
  %279 = icmp eq i24 %278, 0, !dbg !5671
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5672
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5672
  %282 = select i1 %279, i32 32, i32 48, !dbg !5672
  br i1 %280, label %287, label %283, !dbg !5672

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !5673
  call void @llvm.dbg.value(metadata i32 %284, metadata !5424, metadata !DIExpression()), !dbg !5674
  %285 = icmp slt i32 %284, 0, !dbg !5675
  %286 = add i32 %29, 1, !dbg !5673
  call void @llvm.dbg.value(metadata i32 undef, metadata !5336, metadata !DIExpression()), !dbg !5456
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5470
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5460
  call void @llvm.dbg.value(metadata i32 %290, metadata !5336, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.value(metadata i8 undef, metadata !5419, metadata !DIExpression()), !dbg !5670
  call void @llvm.dbg.value(metadata i8 %288, metadata !5399, metadata !DIExpression()), !dbg !5470
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5677
  %292 = add i32 %291, -1, !dbg !5677
  br label %293, !dbg !5677

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5678
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5460
  call void @llvm.dbg.value(metadata i32 %295, metadata !5336, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.value(metadata i32 %294, metadata !5395, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata i32 %294, metadata !5395, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5470
  %296 = icmp sgt i32 %294, 0, !dbg !5679
  br i1 %296, label %297, label %302, !dbg !5677

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5680
  call void @llvm.dbg.value(metadata i32 %298, metadata !5395, metadata !DIExpression()), !dbg !5470
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !5681
  call void @llvm.dbg.value(metadata i32 %299, metadata !5430, metadata !DIExpression()), !dbg !5682
  %300 = icmp slt i32 %299, 0, !dbg !5683
  %301 = add i32 %295, 1, !dbg !5681
  call void @llvm.dbg.value(metadata i32 undef, metadata !5336, metadata !DIExpression()), !dbg !5456
  br i1 %300, label %361, label %293, !llvm.loop !5685

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5470
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5470
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5460
  call void @llvm.dbg.value(metadata i32 %305, metadata !5336, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.value(metadata i32 %304, metadata !5395, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata i8 %303, metadata !5399, metadata !DIExpression()), !dbg !5470
  %306 = icmp eq i8 %303, 0, !dbg !5687
  br i1 %306, label %312, label %307, !dbg !5688

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5689
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !5690
  call void @llvm.dbg.value(metadata i32 %309, metadata !5433, metadata !DIExpression()), !dbg !5691
  %310 = icmp slt i32 %309, 0, !dbg !5692
  %311 = add i32 %305, 1, !dbg !5690
  call void @llvm.dbg.value(metadata i32 undef, metadata !5336, metadata !DIExpression()), !dbg !5456
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5460
  call void @llvm.dbg.value(metadata i32 %313, metadata !5336, metadata !DIExpression()), !dbg !5456
  %314 = lshr i24 %246, 20, !dbg !5694
  %315 = lshr i24 %246, 19, !dbg !5695
  %316 = or i24 %314, %315, !dbg !5696
  %317 = and i24 %316, 1, !dbg !5696
  %318 = icmp eq i24 %317, 0, !dbg !5696
  br i1 %318, label %323, label %319, !dbg !5697

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5698
  call void @llvm.dbg.value(metadata i32 %320, metadata !5437, metadata !DIExpression()), !dbg !5699
  %321 = icmp slt i32 %320, 0, !dbg !5700
  %322 = add i32 %313, 1, !dbg !5698
  call void @llvm.dbg.value(metadata i32 undef, metadata !5336, metadata !DIExpression()), !dbg !5456
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5460
  call void @llvm.dbg.value(metadata i32 %324, metadata !5336, metadata !DIExpression()), !dbg !5456
  %325 = and i24 %246, 1048576, !dbg !5702
  %326 = icmp eq i24 %325, 0, !dbg !5702
  br i1 %326, label %333, label %327, !dbg !5703

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5704
  %329 = zext i8 %328 to i32, !dbg !5704
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !5704
  call void @llvm.dbg.value(metadata i32 %330, metadata !5443, metadata !DIExpression()), !dbg !5705
  %331 = icmp slt i32 %330, 0, !dbg !5706
  %332 = add i32 %324, 1, !dbg !5704
  call void @llvm.dbg.value(metadata i32 undef, metadata !5336, metadata !DIExpression()), !dbg !5456
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5460
  call void @llvm.dbg.value(metadata i32 %334, metadata !5336, metadata !DIExpression()), !dbg !5456
  %335 = load i32, i32* %16, align 4, !dbg !5708
  call void @llvm.dbg.value(metadata i32 %335, metadata !5418, metadata !DIExpression()), !dbg !5470
  br label %336, !dbg !5709

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5710
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5460
  call void @llvm.dbg.value(metadata i32 %338, metadata !5336, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.value(metadata i32 %337, metadata !5418, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5470
  %339 = icmp sgt i32 %337, 0, !dbg !5711
  br i1 %339, label %340, label %345, !dbg !5709

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5712
  call void @llvm.dbg.value(metadata i32 %341, metadata !5418, metadata !DIExpression()), !dbg !5470
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5713
  call void @llvm.dbg.value(metadata i32 %342, metadata !5447, metadata !DIExpression()), !dbg !5714
  %343 = icmp slt i32 %342, 0, !dbg !5715
  %344 = add i32 %338, 1, !dbg !5713
  call void @llvm.dbg.value(metadata i32 undef, metadata !5336, metadata !DIExpression()), !dbg !5456
  br i1 %343, label %361, label %336, !llvm.loop !5717

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !5719
  call void @llvm.dbg.value(metadata i32 %346, metadata !5450, metadata !DIExpression()), !dbg !5720
  %347 = icmp slt i32 %346, 0, !dbg !5721
  call void @llvm.dbg.value(metadata i32 undef, metadata !5336, metadata !DIExpression()), !dbg !5456
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5719
  call void @llvm.dbg.value(metadata i32 %349, metadata !5336, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.value(metadata i32 %304, metadata !5395, metadata !DIExpression()), !dbg !5470
  %350 = icmp sgt i32 %304, 0, !dbg !5723
  br i1 %350, label %351, label %363, !dbg !5724

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5724
  %353 = add i32 %352, %338, !dbg !5724
  br label %354, !dbg !5724

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5336, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.value(metadata i32 %355, metadata !5395, metadata !DIExpression()), !dbg !5470
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !5725
  call void @llvm.dbg.value(metadata i32 %356, metadata !5452, metadata !DIExpression()), !dbg !5726
  %357 = icmp slt i32 %356, 0, !dbg !5727
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5729
  call void @llvm.dbg.value(metadata i32 undef, metadata !5336, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5456
  call void @llvm.dbg.value(metadata i32 %359, metadata !5395, metadata !DIExpression()), !dbg !5470
  %360 = icmp sgt i32 %355, 1, !dbg !5723
  br i1 %360, label %354, label %363, !dbg !5724, !llvm.loop !5730

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5336, metadata !DIExpression()), !dbg !5456
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5467
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5460
  call void @llvm.dbg.value(metadata i32 %364, metadata !5336, metadata !DIExpression()), !dbg !5456
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5467
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5456
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5732
  ret i32 %366, !dbg !5732
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5733 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5737, metadata !DIExpression()), !dbg !5739
  call void @llvm.dbg.value(metadata i8* %1, metadata !5738, metadata !DIExpression()), !dbg !5739
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5740
  store i24 0, i24* %3, align 4, !dbg !5740
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5740
  store i8 0, i8* %4, align 1, !dbg !5740
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5740
  store i32 0, i32* %5, align 4, !dbg !5740
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5740
  store i32 0, i32* %6, align 4, !dbg !5740
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5741
  call void @llvm.dbg.value(metadata i8* %7, metadata !5738, metadata !DIExpression()), !dbg !5739
  %8 = load i8, i8* %7, align 1, !dbg !5742
  %9 = icmp eq i8 %8, 37, !dbg !5744
  br i1 %9, label %10, label %12, !dbg !5745

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5746
  call void @llvm.dbg.value(metadata i8* %11, metadata !5738, metadata !DIExpression()), !dbg !5739
  store i8 37, i8* %4, align 1, !dbg !5748
  br label %18, !dbg !5749

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !5750
  call void @llvm.dbg.value(metadata i8* %13, metadata !5738, metadata !DIExpression()), !dbg !5739
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !5751
  call void @llvm.dbg.value(metadata i8* %14, metadata !5738, metadata !DIExpression()), !dbg !5739
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !5752
  call void @llvm.dbg.value(metadata i8* %15, metadata !5738, metadata !DIExpression()), !dbg !5739
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !5753
  call void @llvm.dbg.value(metadata i8* %16, metadata !5738, metadata !DIExpression()), !dbg !5739
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !5754
  call void @llvm.dbg.value(metadata i8* %17, metadata !5738, metadata !DIExpression()), !dbg !5739
  br label %18, !dbg !5755

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5739
  ret i8* %19, !dbg !5756
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5757 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5761, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata i8* %1, metadata !5762, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata i8* %2, metadata !5763, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata i8* %3, metadata !5764, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata i32 0, metadata !5765, metadata !DIExpression()), !dbg !5768
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5769

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5770
  call void @llvm.dbg.value(metadata i32 %9, metadata !5765, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata i8* %8, metadata !5763, metadata !DIExpression()), !dbg !5768
  %10 = icmp ult i8* %8, %3, !dbg !5771
  br i1 %10, label %11, label %13, !dbg !5772

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5773
  br label %17, !dbg !5772

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5774

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5775
  %16 = icmp eq i8 %15, 0, !dbg !5774
  br i1 %16, label %24, label %17, !dbg !5769

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5773
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5776
  call void @llvm.dbg.value(metadata i8* %19, metadata !5763, metadata !DIExpression()), !dbg !5768
  %20 = zext i8 %18 to i32, !dbg !5777
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5778
  call void @llvm.dbg.value(metadata i32 %21, metadata !5766, metadata !DIExpression()), !dbg !5779
  %22 = icmp slt i32 %21, 0, !dbg !5780
  %23 = add i32 %9, 1, !dbg !5782
  call void @llvm.dbg.value(metadata i32 undef, metadata !5765, metadata !DIExpression()), !dbg !5768
  br i1 %22, label %24, label %7, !llvm.loop !5783

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5768
  ret i32 %25, !dbg !5785
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5786 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5790, metadata !DIExpression()), !dbg !5800
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5791, metadata !DIExpression()), !dbg !5800
  call void @llvm.dbg.value(metadata i8* %2, metadata !5792, metadata !DIExpression()), !dbg !5800
  call void @llvm.dbg.value(metadata i8* %3, metadata !5793, metadata !DIExpression()), !dbg !5800
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5801
  %6 = load i8, i8* %5, align 1, !dbg !5801
  %7 = zext i8 %6 to i32, !dbg !5802
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !5803
  %9 = icmp eq i32 %8, 0, !dbg !5803
  call void @llvm.dbg.value(metadata i1 %9, metadata !5794, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5800
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !5804
  call void @llvm.dbg.value(metadata i32 %10, metadata !5795, metadata !DIExpression()), !dbg !5800
  %11 = ptrtoint i8* %3 to i32, !dbg !5805
  %12 = ptrtoint i8* %2 to i32, !dbg !5805
  %13 = sub i32 %11, %12, !dbg !5805
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5806
  call void @llvm.dbg.value(metadata i8* %14, metadata !5797, metadata !DIExpression()), !dbg !5800
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5807

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5800
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5790, metadata !DIExpression()), !dbg !5800
  call void @llvm.dbg.value(metadata i8* %18, metadata !5797, metadata !DIExpression()), !dbg !5800
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5808
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5809
  call void @llvm.dbg.value(metadata i32 %25, metadata !5798, metadata !DIExpression()), !dbg !5810
  %26 = icmp ult i32 %25, 10, !dbg !5811
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5812
  %28 = add i32 %27, %25, !dbg !5810
  %29 = trunc i32 %28 to i8, !dbg !5812
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5813
  call void @llvm.dbg.value(metadata i8* %30, metadata !5797, metadata !DIExpression()), !dbg !5800
  store i8 %29, i8* %30, align 1, !dbg !5814
  call void @llvm.dbg.value(metadata i64 %22, metadata !5790, metadata !DIExpression()), !dbg !5800
  %31 = icmp uge i64 %19, %15, !dbg !5815
  %32 = icmp ugt i8* %30, %2, !dbg !5816
  %33 = and i1 %31, %32, !dbg !5816
  br i1 %33, label %17, label %34, !dbg !5817, !llvm.loop !5818

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5820
  %36 = load i24, i24* %35, align 4, !dbg !5820
  %37 = and i24 %36, 32, !dbg !5820
  %38 = icmp eq i24 %37, 0, !dbg !5820
  br i1 %38, label %44, label %39, !dbg !5822

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5823

40:                                               ; preds = %39
  br label %41, !dbg !5825

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5829
  store i24 %43, i24* %35, align 4, !dbg !5829
  br label %44, !dbg !5830

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5830
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #11 !dbg !5831 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5837, metadata !DIExpression()), !dbg !5840
  call void @llvm.dbg.value(metadata i8* %1, metadata !5838, metadata !DIExpression()), !dbg !5840
  call void @llvm.dbg.value(metadata i32 %2, metadata !5839, metadata !DIExpression()), !dbg !5840
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5841
  %5 = load i24, i24* %4, align 4, !dbg !5841
  %6 = lshr i24 %5, 11, !dbg !5841
  %7 = and i24 %6, 15, !dbg !5841
  %8 = zext i24 %7 to i32, !dbg !5841
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5842

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5843
  store i32 %2, i32* %10, align 4, !dbg !5845
  br label %28, !dbg !5846

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5847
  store i8 %12, i8* %1, align 1, !dbg !5848
  br label %28, !dbg !5849

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5850
  %15 = bitcast i8* %1 to i16*, !dbg !5851
  store i16 %14, i16* %15, align 2, !dbg !5852
  br label %28, !dbg !5853

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5854
  store i32 %2, i32* %17, align 4, !dbg !5855
  br label %28, !dbg !5856

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5857
  %20 = bitcast i8* %1 to i64*, !dbg !5858
  store i64 %19, i64* %20, align 8, !dbg !5859
  br label %28, !dbg !5860

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5861
  %23 = bitcast i8* %1 to i64*, !dbg !5862
  store i64 %22, i64* %23, align 8, !dbg !5863
  br label %28, !dbg !5864

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5865
  store i32 %2, i32* %25, align 4, !dbg !5866
  br label %28, !dbg !5867

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5868
  store i32 %2, i32* %27, align 4, !dbg !5869
  br label %28, !dbg !5870

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5871
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !5872 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5875, metadata !DIExpression()), !dbg !5876
  %2 = add i32 %0, -65, !dbg !5877
  %3 = icmp ult i32 %2, 26, !dbg !5878
  %4 = zext i1 %3 to i32, !dbg !5878
  ret i32 %4, !dbg !5879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !5880 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5884, metadata !DIExpression()), !dbg !5885
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5886

2:                                                ; preds = %1
  br label %4, !dbg !5887

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5889

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5890
  ret i32 %5, !dbg !5891
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5892 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5894, metadata !DIExpression()), !dbg !5897
  call void @llvm.dbg.value(metadata i8* %1, metadata !5895, metadata !DIExpression()), !dbg !5897
  call void @llvm.dbg.value(metadata i8 1, metadata !5896, metadata !DIExpression()), !dbg !5897
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5898

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5896, metadata !DIExpression()), !dbg !5897
  call void @llvm.dbg.value(metadata i8* %5, metadata !5895, metadata !DIExpression()), !dbg !5897
  %6 = load i8, i8* %5, align 1, !dbg !5899
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5901

7:                                                ; preds = %4
  br label %11, !dbg !5902

8:                                                ; preds = %4
  br label %11, !dbg !5904

9:                                                ; preds = %4
  br label %11, !dbg !5905

10:                                               ; preds = %4
  br label %11, !dbg !5906

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5907
  %14 = or i24 %13, %12, !dbg !5907
  store i24 %14, i24* %3, align 4, !dbg !5907
  call void @llvm.dbg.value(metadata i8 poison, metadata !5896, metadata !DIExpression()), !dbg !5897
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5895, metadata !DIExpression()), !dbg !5897
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5896, metadata !DIExpression()), !dbg !5897
  call void @llvm.dbg.value(metadata i8* %15, metadata !5895, metadata !DIExpression()), !dbg !5897
  %17 = load i24, i24* %3, align 4, !dbg !5908
  %18 = and i24 %17, 68, !dbg !5910
  %19 = icmp eq i24 %18, 68, !dbg !5910
  br i1 %19, label %20, label %22, !dbg !5910

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5911
  store i24 %21, i24* %3, align 4, !dbg !5911
  br label %22, !dbg !5913

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5914
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5915 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5917, metadata !DIExpression()), !dbg !5921
  call void @llvm.dbg.value(metadata i8* %1, metadata !5918, metadata !DIExpression()), !dbg !5921
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5922
  %5 = load i24, i24* %4, align 4, !dbg !5923
  %6 = or i24 %5, 128, !dbg !5923
  store i24 %6, i24* %4, align 4, !dbg !5923
  call void @llvm.dbg.value(metadata i8* %1, metadata !5918, metadata !DIExpression()), !dbg !5921
  %7 = load i8, i8* %1, align 1, !dbg !5924
  %8 = icmp eq i8 %7, 42, !dbg !5926
  br i1 %8, label %9, label %12, !dbg !5927

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5928
  store i24 %10, i24* %4, align 4, !dbg !5928
  call void @llvm.dbg.value(metadata i8* %1, metadata !5918, metadata !DIExpression()), !dbg !5921
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5930
  call void @llvm.dbg.value(metadata i8* %11, metadata !5918, metadata !DIExpression()), !dbg !5921
  store i8* %11, i8** %3, align 4, !dbg !5930
  br label %29, !dbg !5931

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5919, metadata !DIExpression()), !dbg !5921
  call void @llvm.dbg.value(metadata i8** %3, metadata !5918, metadata !DIExpression(DW_OP_deref)), !dbg !5921
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5932
  call void @llvm.dbg.value(metadata i32 %13, metadata !5920, metadata !DIExpression()), !dbg !5921
  %14 = load i8*, i8** %3, align 4, !dbg !5933
  call void @llvm.dbg.value(metadata i8* %14, metadata !5918, metadata !DIExpression()), !dbg !5921
  %15 = icmp eq i8* %14, %1, !dbg !5935
  br i1 %15, label %29, label %16, !dbg !5936

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5937
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5939
  store i32 %13, i32* %18, align 4, !dbg !5940
  %19 = lshr i32 %13, 31, !dbg !5941
  %20 = lshr i24 %17, 1, !dbg !5942
  %21 = and i24 %20, 1, !dbg !5942
  %22 = zext i24 %21 to i32, !dbg !5942
  %23 = or i32 %19, %22, !dbg !5942
  %24 = trunc i32 %23 to i24, !dbg !5942
  %25 = shl nuw nsw i24 %24, 1, !dbg !5942
  %26 = and i24 %17, -131, !dbg !5942
  %27 = or i24 %26, 128, !dbg !5942
  %28 = or i24 %25, %27, !dbg !5942
  store i24 %28, i24* %4, align 4, !dbg !5942
  br label %29, !dbg !5943

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5921
  ret i8* %30, !dbg !5944
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5945 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5947, metadata !DIExpression()), !dbg !5950
  call void @llvm.dbg.value(metadata i8* %1, metadata !5948, metadata !DIExpression()), !dbg !5950
  %4 = load i8, i8* %1, align 1, !dbg !5951
  %5 = icmp eq i8 %4, 46, !dbg !5952
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5953
  %7 = load i24, i24* %6, align 4, !dbg !5954
  %8 = select i1 %5, i24 512, i24 0, !dbg !5954
  %9 = and i24 %7, -513, !dbg !5954
  %10 = or i24 %9, %8, !dbg !5954
  store i24 %10, i24* %6, align 4, !dbg !5954
  br i1 %5, label %11, label %32, !dbg !5955

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5948, metadata !DIExpression()), !dbg !5950
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5956
  call void @llvm.dbg.value(metadata i8* %12, metadata !5948, metadata !DIExpression()), !dbg !5950
  store i8* %12, i8** %3, align 4, !dbg !5956
  %13 = load i8, i8* %12, align 1, !dbg !5957
  %14 = icmp eq i8 %13, 42, !dbg !5959
  br i1 %14, label %15, label %18, !dbg !5960

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5961
  store i24 %16, i24* %6, align 4, !dbg !5961
  call void @llvm.dbg.value(metadata i8* %12, metadata !5948, metadata !DIExpression()), !dbg !5950
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5963
  call void @llvm.dbg.value(metadata i8* %17, metadata !5948, metadata !DIExpression()), !dbg !5950
  store i8* %17, i8** %3, align 4, !dbg !5963
  br label %32, !dbg !5964

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5948, metadata !DIExpression(DW_OP_deref)), !dbg !5950
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5965
  call void @llvm.dbg.value(metadata i32 %19, metadata !5949, metadata !DIExpression()), !dbg !5950
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5966
  store i32 %19, i32* %20, align 4, !dbg !5967
  %21 = lshr i32 %19, 31, !dbg !5968
  %22 = load i24, i24* %6, align 4, !dbg !5969
  %23 = lshr i24 %22, 1, !dbg !5969
  %24 = and i24 %23, 1, !dbg !5969
  %25 = zext i24 %24 to i32, !dbg !5969
  %26 = or i32 %21, %25, !dbg !5969
  %27 = trunc i32 %26 to i24, !dbg !5969
  %28 = shl nuw nsw i24 %27, 1, !dbg !5969
  %29 = and i24 %22, -3, !dbg !5969
  %30 = or i24 %28, %29, !dbg !5969
  store i24 %30, i24* %6, align 4, !dbg !5969
  %31 = load i8*, i8** %3, align 4, !dbg !5970
  call void @llvm.dbg.value(metadata i8* %31, metadata !5948, metadata !DIExpression()), !dbg !5950
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5950
  ret i8* %33, !dbg !5971
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !5972 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5974, metadata !DIExpression()), !dbg !5976
  call void @llvm.dbg.value(metadata i8* %1, metadata !5975, metadata !DIExpression()), !dbg !5976
  %3 = load i8, i8* %1, align 1, !dbg !5977
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5978

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5979
  call void @llvm.dbg.value(metadata i8* %5, metadata !5975, metadata !DIExpression()), !dbg !5976
  %6 = load i8, i8* %5, align 1, !dbg !5982
  %7 = icmp eq i8 %6, 104, !dbg !5983
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5984
  %9 = load i24, i24* %8, align 4, !dbg !5984
  %10 = and i24 %9, -30721, !dbg !5984
  br i1 %7, label %11, label %14, !dbg !5985

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5986
  store i24 %12, i24* %8, align 4, !dbg !5986
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5988
  call void @llvm.dbg.value(metadata i8* %13, metadata !5975, metadata !DIExpression()), !dbg !5976
  br label %56, !dbg !5989

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5990
  store i24 %15, i24* %8, align 4, !dbg !5990
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5992
  call void @llvm.dbg.value(metadata i8* %17, metadata !5975, metadata !DIExpression()), !dbg !5976
  %18 = load i8, i8* %17, align 1, !dbg !5994
  %19 = icmp eq i8 %18, 108, !dbg !5995
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5996
  %21 = load i24, i24* %20, align 4, !dbg !5996
  %22 = and i24 %21, -30721, !dbg !5996
  br i1 %19, label %23, label %26, !dbg !5997

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5998
  store i24 %24, i24* %20, align 4, !dbg !5998
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6000
  call void @llvm.dbg.value(metadata i8* %25, metadata !5975, metadata !DIExpression()), !dbg !5976
  br label %56, !dbg !6001

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6002
  store i24 %27, i24* %20, align 4, !dbg !6002
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6004
  %30 = load i24, i24* %29, align 4, !dbg !6005
  %31 = and i24 %30, -30721, !dbg !6005
  %32 = or i24 %31, 10240, !dbg !6005
  store i24 %32, i24* %29, align 4, !dbg !6005
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6006
  call void @llvm.dbg.value(metadata i8* %33, metadata !5975, metadata !DIExpression()), !dbg !5976
  br label %56, !dbg !6007

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6008
  %36 = load i24, i24* %35, align 4, !dbg !6009
  %37 = and i24 %36, -30721, !dbg !6009
  %38 = or i24 %37, 12288, !dbg !6009
  store i24 %38, i24* %35, align 4, !dbg !6009
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6010
  call void @llvm.dbg.value(metadata i8* %39, metadata !5975, metadata !DIExpression()), !dbg !5976
  br label %56, !dbg !6011

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6012
  %42 = load i24, i24* %41, align 4, !dbg !6013
  %43 = and i24 %42, -30721, !dbg !6013
  %44 = or i24 %43, 14336, !dbg !6013
  store i24 %44, i24* %41, align 4, !dbg !6013
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6014
  call void @llvm.dbg.value(metadata i8* %45, metadata !5975, metadata !DIExpression()), !dbg !5976
  br label %56, !dbg !6015

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6016
  %48 = load i24, i24* %47, align 4, !dbg !6017
  %49 = and i24 %48, -30723, !dbg !6017
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6018
  call void @llvm.dbg.value(metadata i8* %50, metadata !5975, metadata !DIExpression()), !dbg !5976
  %51 = or i24 %49, 16386, !dbg !6019
  store i24 %51, i24* %47, align 4, !dbg !6019
  br label %56, !dbg !6020

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6021
  %54 = load i24, i24* %53, align 4, !dbg !6022
  %55 = and i24 %54, -30721, !dbg !6022
  store i24 %55, i24* %53, align 4, !dbg !6022
  br label %56, !dbg !6023

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5975, metadata !DIExpression()), !dbg !5976
  ret i8* %57, !dbg !6024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !6025 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6027, metadata !DIExpression()), !dbg !6032
  call void @llvm.dbg.value(metadata i8* %1, metadata !6028, metadata !DIExpression()), !dbg !6032
  call void @llvm.dbg.value(metadata i8 0, metadata !6029, metadata !DIExpression()), !dbg !6032
  call void @llvm.dbg.value(metadata i8* %1, metadata !6028, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6032
  %3 = load i8, i8* %1, align 1, !dbg !6033
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6034
  store i8 %3, i8* %4, align 1, !dbg !6035
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6036

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6037

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6038
  %9 = load i24, i24* %8, align 4, !dbg !6038
  %10 = and i24 %9, -458753, !dbg !6038
  %11 = or i24 %10, %7, !dbg !6038
  call void @llvm.dbg.label(metadata !6030), !dbg !6039
  %12 = and i24 %9, 30720, !dbg !6040
  %13 = icmp eq i24 %12, 16384, !dbg !6040
  %14 = zext i1 %13 to i24, !dbg !6042
  %15 = or i24 %11, %14, !dbg !6042
  %16 = icmp eq i8 %3, 99, !dbg !6043
  br i1 %16, label %17, label %43, !dbg !6045

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6046
  %19 = icmp ne i24 %18, 0, !dbg !6046
  call void @llvm.dbg.value(metadata i1 %19, metadata !6029, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6032
  br label %43, !dbg !6048

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6049
  %22 = load i24, i24* %21, align 4, !dbg !6050
  %23 = and i24 %22, -458753, !dbg !6050
  %24 = or i24 %23, 262144, !dbg !6050
  call void @llvm.dbg.value(metadata i8 1, metadata !6029, metadata !DIExpression()), !dbg !6032
  br label %43, !dbg !6051

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6054
  %27 = load i24, i24* %26, align 4, !dbg !6055
  %28 = and i24 %27, -458753, !dbg !6055
  %29 = or i24 %28, 196608, !dbg !6055
  %30 = and i24 %27, 30720, !dbg !6056
  %31 = icmp eq i24 %30, 16384, !dbg !6056
  br label %43, !dbg !6058

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6059
  %34 = load i24, i24* %33, align 4, !dbg !6060
  %35 = and i24 %34, -458753, !dbg !6060
  %36 = or i24 %35, 196608, !dbg !6060
  %37 = and i24 %34, 30720, !dbg !6061
  %38 = icmp ne i24 %37, 0, !dbg !6061
  br label %43, !dbg !6063

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6064
  %41 = load i24, i24* %40, align 4, !dbg !6065
  %42 = or i24 %41, 1, !dbg !6065
  br label %43, !dbg !6066

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6067
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6068
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6069
  call void @llvm.dbg.value(metadata i8* %48, metadata !6028, metadata !DIExpression()), !dbg !6032
  call void @llvm.dbg.value(metadata i8 poison, metadata !6029, metadata !DIExpression()), !dbg !6032
  %49 = lshr i24 %44, 1, !dbg !6067
  %50 = and i24 %49, 1, !dbg !6067
  %51 = zext i24 %50 to i32, !dbg !6067
  %52 = or i32 %51, %47, !dbg !6067
  %53 = trunc i32 %52 to i24, !dbg !6067
  %54 = shl nuw nsw i24 %53, 1, !dbg !6067
  %55 = and i24 %44, -3, !dbg !6067
  %56 = or i24 %54, %55, !dbg !6067
  store i24 %56, i24* %46, align 4, !dbg !6067
  ret i8* %48, !dbg !6070
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !6071 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6075, metadata !DIExpression()), !dbg !6078
  %2 = load i8*, i8** %0, align 4, !dbg !6079
  call void @llvm.dbg.value(metadata i8* %2, metadata !6076, metadata !DIExpression()), !dbg !6078
  call void @llvm.dbg.value(metadata i32 0, metadata !6077, metadata !DIExpression()), !dbg !6078
  %3 = load i8, i8* %2, align 1, !dbg !6080
  %4 = zext i8 %3 to i32, !dbg !6081
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !6082
  %6 = icmp eq i32 %5, 0, !dbg !6083
  br i1 %6, label %19, label %7, !dbg !6083

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6077, metadata !DIExpression()), !dbg !6078
  call void @llvm.dbg.value(metadata i8* %10, metadata !6076, metadata !DIExpression()), !dbg !6078
  %11 = mul i32 %9, 10, !dbg !6084
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6086
  call void @llvm.dbg.value(metadata i8* %12, metadata !6076, metadata !DIExpression()), !dbg !6078
  %13 = add i32 %11, -48, !dbg !6087
  %14 = add i32 %13, %8, !dbg !6088
  call void @llvm.dbg.value(metadata i32 %14, metadata !6077, metadata !DIExpression()), !dbg !6078
  %15 = load i8, i8* %12, align 1, !dbg !6080
  %16 = zext i8 %15 to i32, !dbg !6081
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !6082
  %18 = icmp eq i32 %17, 0, !dbg !6083
  br i1 %18, label %19, label %7, !dbg !6083, !llvm.loop !6089

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6078
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6078
  store i8* %20, i8** %0, align 4, !dbg !6091
  ret i32 %21, !dbg !6092
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !6093 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6095, metadata !DIExpression()), !dbg !6096
  %2 = add i32 %0, -48, !dbg !6097
  %3 = icmp ult i32 %2, 10, !dbg !6098
  %4 = zext i1 %3 to i32, !dbg !6098
  ret i32 %4, !dbg !6099
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6100 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !6102, !srcloc !6103
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !6104, !srcloc !6105
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !6106, !srcloc !6107
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !6108, !srcloc !6109
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !6110, !srcloc !6111
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,82\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !6112, !srcloc !6113
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,168000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !6114, !srcloc !6115
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !6116, !srcloc !6117
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !6118, !srcloc !6119
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !6120, !srcloc !6121
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !6122, !srcloc !6123
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !6124, !srcloc !6125
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !6126, !srcloc !6127
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !6128, !srcloc !6129
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !6130, !srcloc !6131
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !6132, !srcloc !6133
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !6134, !srcloc !6135
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !6136, !srcloc !6137
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !6138, !srcloc !6139
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !6140, !srcloc !6141
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !6142, !srcloc !6143
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !6144, !srcloc !6145
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !6146, !srcloc !6147
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !6148, !srcloc !6149
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !6150, !srcloc !6151
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !6152, !srcloc !6153
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,%object", ""() #23, !dbg !6154, !srcloc !6155
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !6156, !srcloc !6157
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !6158, !srcloc !6159
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !6160, !srcloc !6161
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !6162, !srcloc !6163
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !6164, !srcloc !6165
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED\0A\09.equ\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,%object", ""() #23, !dbg !6166, !srcloc !6167
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !6168, !srcloc !6169
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !6170, !srcloc !6171
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,%object", ""() #23, !dbg !6172, !srcloc !6173
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !6174, !srcloc !6175
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !6176, !srcloc !6177
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !6178, !srcloc !6179
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !6180, !srcloc !6181
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !6182, !srcloc !6183
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !6184, !srcloc !6185
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #23, !dbg !6186, !srcloc !6187
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !6188, !srcloc !6189
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !6190, !srcloc !6191
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !6192, !srcloc !6193
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !6194, !srcloc !6195
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !6196, !srcloc !6197
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !6198, !srcloc !6199
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !6200, !srcloc !6201
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !6202, !srcloc !6203
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !6204, !srcloc !6205
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_VND_SENSOR_ENABLED\0A\09.equ\09CONFIG_DT_HAS_VND_SENSOR_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_VND_SENSOR_ENABLED,%object", ""() #23, !dbg !6206, !srcloc !6207
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,%object", ""() #23, !dbg !6208, !srcloc !6209
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !6210, !srcloc !6211
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !6212, !srcloc !6213
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !6214, !srcloc !6215
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !6216, !srcloc !6217
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !6218, !srcloc !6219
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !6220, !srcloc !6221
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !6222, !srcloc !6223
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !6224, !srcloc !6225
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !6226, !srcloc !6227
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !6228, !srcloc !6229
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !6230, !srcloc !6231
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !6232, !srcloc !6233
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !6234, !srcloc !6235
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !6236, !srcloc !6237
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !6238, !srcloc !6239
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !6240, !srcloc !6241
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !6242, !srcloc !6243
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !6244, !srcloc !6245
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !6246, !srcloc !6247
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !6248, !srcloc !6249
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !6250, !srcloc !6251
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !6252, !srcloc !6253
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !6254, !srcloc !6255
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !6256, !srcloc !6257
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !6258, !srcloc !6259
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !6260, !srcloc !6261
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !6262, !srcloc !6263
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !6264, !srcloc !6265
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !6266, !srcloc !6267
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !6268, !srcloc !6269
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !6270, !srcloc !6271
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !6272, !srcloc !6273
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !6274, !srcloc !6275
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !6276, !srcloc !6277
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !6278, !srcloc !6279
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405\0A\09.equ\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,1\0A\09.type\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,%object", ""() #23, !dbg !6280, !srcloc !6281
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !6282, !srcloc !6283
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !6284, !srcloc !6285
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !6286, !srcloc !6287
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !6288, !srcloc !6289
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !6290, !srcloc !6291
  tail call void asm sideeffect ".globl\09CONFIG_STM32_CCM\0A\09.equ\09CONFIG_STM32_CCM,1\0A\09.type\09CONFIG_STM32_CCM,%object", ""() #23, !dbg !6292, !srcloc !6293
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F405XG\0A\09.equ\09CONFIG_SOC_STM32F405XG,1\0A\09.type\09CONFIG_SOC_STM32F405XG,%object", ""() #23, !dbg !6294, !srcloc !6295
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6296, !srcloc !6297
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !6298, !srcloc !6299
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !6300, !srcloc !6301
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !6302, !srcloc !6303
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !6304, !srcloc !6305
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !6306, !srcloc !6307
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !6308, !srcloc !6309
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !6310, !srcloc !6311
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !6312, !srcloc !6313
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !6314, !srcloc !6315
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !6316, !srcloc !6317
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !6318, !srcloc !6319
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !6320, !srcloc !6321
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !6322, !srcloc !6323
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !6324, !srcloc !6325
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !6326, !srcloc !6327
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !6328, !srcloc !6329
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !6330, !srcloc !6331
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !6332, !srcloc !6333
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !6334, !srcloc !6335
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !6336, !srcloc !6337
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !6338, !srcloc !6339
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !6340, !srcloc !6341
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !6342, !srcloc !6343
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !6344, !srcloc !6345
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !6346, !srcloc !6347
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !6348, !srcloc !6349
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !6350, !srcloc !6351
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !6352, !srcloc !6353
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !6354, !srcloc !6355
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !6356, !srcloc !6357
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !6358, !srcloc !6359
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !6360, !srcloc !6361
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !6362, !srcloc !6363
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !6364, !srcloc !6365
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !6366, !srcloc !6367
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !6368, !srcloc !6369
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !6370, !srcloc !6371
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !6372, !srcloc !6373
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !6374, !srcloc !6375
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !6376, !srcloc !6377
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !6378, !srcloc !6379
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !6380, !srcloc !6381
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !6382, !srcloc !6383
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !6384, !srcloc !6385
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !6386, !srcloc !6387
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !6388, !srcloc !6389
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !6390, !srcloc !6391
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !6392, !srcloc !6393
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !6394, !srcloc !6395
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !6396, !srcloc !6397
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !6398, !srcloc !6399
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !6400, !srcloc !6401
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !6402, !srcloc !6403
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !6404, !srcloc !6405
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !6406, !srcloc !6407
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6408, !srcloc !6409
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !6410, !srcloc !6411
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !6412, !srcloc !6413
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !6414, !srcloc !6415
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !6416, !srcloc !6417
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !6418, !srcloc !6419
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !6420, !srcloc !6421
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !6422, !srcloc !6423
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !6424, !srcloc !6425
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !6426, !srcloc !6427
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !6428, !srcloc !6429
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !6430, !srcloc !6431
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6432, !srcloc !6433
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !6434, !srcloc !6435
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !6436, !srcloc !6437
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !6438, !srcloc !6439
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !6440, !srcloc !6441
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !6442, !srcloc !6443
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !6444, !srcloc !6445
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !6446, !srcloc !6447
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !6448, !srcloc !6449
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !6450, !srcloc !6451
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !6452, !srcloc !6453
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !6454, !srcloc !6455
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !6456, !srcloc !6457
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !6458, !srcloc !6459
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !6460, !srcloc !6461
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !6462, !srcloc !6463
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !6464, !srcloc !6465
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !6466, !srcloc !6467
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !6468, !srcloc !6469
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !6470, !srcloc !6471
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !6472, !srcloc !6473
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !6474, !srcloc !6475
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !6476, !srcloc !6477
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !6478, !srcloc !6479
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !6480, !srcloc !6481
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !6482, !srcloc !6483
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !6484, !srcloc !6485
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !6486, !srcloc !6487
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !6488, !srcloc !6489
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !6490, !srcloc !6491
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !6492, !srcloc !6493
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !6494, !srcloc !6495
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !6496, !srcloc !6497
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !6498, !srcloc !6499
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !6500, !srcloc !6501
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !6502, !srcloc !6503
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !6504, !srcloc !6505
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !6506, !srcloc !6507
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6508, !srcloc !6509
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !6510, !srcloc !6511
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !6512, !srcloc !6513
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !6514, !srcloc !6515
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !6516, !srcloc !6517
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !6518, !srcloc !6519
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !6520, !srcloc !6521
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !6522, !srcloc !6523
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !6524, !srcloc !6525
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !6526, !srcloc !6527
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !6528, !srcloc !6529
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !6530, !srcloc !6531
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !6532, !srcloc !6533
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !6534, !srcloc !6535
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !6536, !srcloc !6537
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !6538, !srcloc !6539
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !6540, !srcloc !6541
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6542, !srcloc !6543
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !6544, !srcloc !6545
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !6546, !srcloc !6547
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !6548, !srcloc !6549
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !6550, !srcloc !6551
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !6552, !srcloc !6553
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !6554, !srcloc !6555
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !6556, !srcloc !6557
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !6558, !srcloc !6559
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !6560, !srcloc !6561
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !6562, !srcloc !6563
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !6564, !srcloc !6565
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !6566, !srcloc !6567
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !6568, !srcloc !6569
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !6570, !srcloc !6571
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !6572, !srcloc !6573
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !6574, !srcloc !6575
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !6576, !srcloc !6577
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !6578, !srcloc !6579
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !6580, !srcloc !6581
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !6582, !srcloc !6583
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !6584, !srcloc !6585
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !6586, !srcloc !6587
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6588, !srcloc !6589
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !6590, !srcloc !6591
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,12000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !6592, !srcloc !6593
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !6594, !srcloc !6595
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !6596, !srcloc !6597
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6598, !srcloc !6599
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !6600, !srcloc !6601
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !6602, !srcloc !6603
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !6604, !srcloc !6605
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6606, !srcloc !6607
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !6608, !srcloc !6609
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !6610, !srcloc !6611
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !6612, !srcloc !6613
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !6614, !srcloc !6615
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !6616, !srcloc !6617
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !6618, !srcloc !6619
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !6620, !srcloc !6621
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !6622, !srcloc !6623
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !6624, !srcloc !6625
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !6626, !srcloc !6627
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !6628, !srcloc !6629
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !6630, !srcloc !6631
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !6632, !srcloc !6633
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !6634, !srcloc !6635
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !6636, !srcloc !6637
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !6638, !srcloc !6639
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !6640, !srcloc !6641
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !6642, !srcloc !6643
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !6644, !srcloc !6645
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !6646, !srcloc !6647
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !6648, !srcloc !6649
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !6650, !srcloc !6651
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !6652, !srcloc !6653
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !6654, !srcloc !6655
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !6656, !srcloc !6657
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !6658, !srcloc !6659
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !6660, !srcloc !6661
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !6662, !srcloc !6663
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !6664, !srcloc !6665
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,4\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !6666, !srcloc !6667
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !6668, !srcloc !6669
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !6670, !srcloc !6671
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !6672, !srcloc !6673
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !6674, !srcloc !6675
  tail call void asm sideeffect ".globl\09CONFIG_RTIO\0A\09.equ\09CONFIG_RTIO,1\0A\09.type\09CONFIG_RTIO,%object", ""() #23, !dbg !6676, !srcloc !6677
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_EXECUTOR_SIMPLE\0A\09.equ\09CONFIG_RTIO_EXECUTOR_SIMPLE,1\0A\09.type\09CONFIG_RTIO_EXECUTOR_SIMPLE,%object", ""() #23, !dbg !6678, !srcloc !6679
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_EXECUTOR_CONCURRENT\0A\09.equ\09CONFIG_RTIO_EXECUTOR_CONCURRENT,1\0A\09.type\09CONFIG_RTIO_EXECUTOR_CONCURRENT,%object", ""() #23, !dbg !6680, !srcloc !6681
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_RTIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_RTIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !6682, !srcloc !6683
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_LOG_LEVEL\0A\09.equ\09CONFIG_RTIO_LOG_LEVEL,3\0A\09.type\09CONFIG_RTIO_LOG_LEVEL,%object", ""() #23, !dbg !6684, !srcloc !6685
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !6686, !srcloc !6687
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6688, !srcloc !6689
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !6690, !srcloc !6691
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6692, !srcloc !6693
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6694, !srcloc !6695
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !6696, !srcloc !6697
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !6698, !srcloc !6699
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !6700, !srcloc !6701
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !6702, !srcloc !6703
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !6704, !srcloc !6705
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !6706, !srcloc !6707
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !6708, !srcloc !6709
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !6710, !srcloc !6711
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !6712, !srcloc !6713
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !6714, !srcloc !6715
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !6716, !srcloc !6717
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !6718, !srcloc !6719
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !6720, !srcloc !6721
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !6722, !srcloc !6723
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !6724, !srcloc !6725
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !6726, !srcloc !6727
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !6728, !srcloc !6729
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !6730, !srcloc !6731
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !6732, !srcloc !6733
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !6734, !srcloc !6735
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !6736, !srcloc !6737
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !6738, !srcloc !6739
  ret void, !dbg !6740
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6741 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6743, metadata !DIExpression()), !dbg !6745
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !6746
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !6747
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !6748, !srcloc !6754
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6748
  call void @llvm.dbg.value(metadata i32 %3, metadata !6751, metadata !DIExpression()) #23, !dbg !6755
  call void @llvm.dbg.value(metadata i32 undef, metadata !6752, metadata !DIExpression()) #23, !dbg !6755
  call void @llvm.dbg.value(metadata i32 %3, metadata !6744, metadata !DIExpression()), !dbg !6745
  call void @llvm.dbg.value(metadata i32 %3, metadata !6756, metadata !DIExpression()) #23, !dbg !6759
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6761, !srcloc !6762
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6763
  ret i32 0, !dbg !6764
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6765 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6767
  %2 = or i32 %1, 512, !dbg !6767
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6767
  ret void, !dbg !6768
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !6769 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6770
  %2 = or i32 %1, 1024, !dbg !6770
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6770
  ret void, !dbg !6771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !6772 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6774, metadata !DIExpression()), !dbg !6775
  ret i32 0, !dbg !6776
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6777 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6780, metadata !DIExpression()), !dbg !6788
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6789
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6789
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6781, metadata !DIExpression()), !dbg !6790
  call void @llvm.va_start(i8* nonnull %3), !dbg !6791
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6792
  %5 = load i32, i32* %4, align 4, !dbg !6792
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6792
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !6792
  call void @llvm.va_end(i8* nonnull %3), !dbg !6793
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6794
  ret void, !dbg !6794
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6795 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6800, metadata !DIExpression()), !dbg !6801
  call void @llvm.dbg.value(metadata i8* %0, metadata !6799, metadata !DIExpression()), !dbg !6801
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !6802
  ret void, !dbg !6803
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6804 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6808, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i8* %1, metadata !6809, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i32 %2, metadata !6810, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i8* %1, metadata !6811, metadata !DIExpression()), !dbg !6812
  %4 = icmp eq i32 %2, 0, !dbg !6813
  br i1 %4, label %14, label %5, !dbg !6814

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.35(i32 noundef %0) #24, !dbg !6812
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6814

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6811, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i32 %10, metadata !6810, metadata !DIExpression()), !dbg !6812
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i32 0, i32 0), i32 noundef %7) #25, !dbg !6815
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6817
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6818
  call void @llvm.dbg.value(metadata i32 %11, metadata !6810, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i8* %12, metadata !6811, metadata !DIExpression()), !dbg !6812
  br i1 %13, label %14, label %8, !dbg !6818, !llvm.loop !6819

14:                                               ; preds = %8, %3
  ret void, !dbg !6821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.35(i32 noundef %0) unnamed_addr #4 !dbg !6822 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6824, metadata !DIExpression()), !dbg !6825
  %2 = add i32 %0, -1, !dbg !6826
  %3 = icmp ult i32 %2, 4, !dbg !6826
  %4 = shl i32 %2, 3, !dbg !6826
  %5 = lshr i32 1145657157, %4, !dbg !6826
  %6 = trunc i32 %5 to i8, !dbg !6826
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6826
  ret i8 %7, !dbg !6827
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6828 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6832, metadata !DIExpression()), !dbg !6843
  call void @llvm.dbg.value(metadata i32 %1, metadata !6833, metadata !DIExpression()), !dbg !6843
  call void @llvm.dbg.value(metadata i32 0, metadata !6834, metadata !DIExpression()), !dbg !6844
  br label %4, !dbg !6845

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.37, i32 0, i32 0)) #25, !dbg !6846
  call void @llvm.dbg.value(metadata i32 0, metadata !6836, metadata !DIExpression()), !dbg !6847
  br label %16, !dbg !6848

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6834, metadata !DIExpression()), !dbg !6844
  %6 = icmp ult i32 %5, %1, !dbg !6849
  br i1 %6, label %7, label %11, !dbg !6853

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6854
  %9 = load i8, i8* %8, align 1, !dbg !6854
  %10 = zext i8 %9 to i32, !dbg !6856
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.38, i32 0, i32 0), i32 noundef %10) #25, !dbg !6857
  br label %12, !dbg !6858

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.39, i32 0, i32 0)) #25, !dbg !6859
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6861
  call void @llvm.dbg.value(metadata i32 %13, metadata !6834, metadata !DIExpression()), !dbg !6844
  %14 = icmp eq i32 %13, 8, !dbg !6862
  br i1 %14, label %3, label %4, !dbg !6845, !llvm.loop !6863

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.40, i32 0, i32 0)) #25, !dbg !6865
  ret void, !dbg !6866

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6836, metadata !DIExpression()), !dbg !6847
  %18 = icmp ult i32 %17, %1, !dbg !6867
  br i1 %18, label %19, label %26, !dbg !6868

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6869
  %21 = load i8, i8* %20, align 1, !dbg !6869
  call void @llvm.dbg.value(metadata i8 %21, metadata !6838, metadata !DIExpression()), !dbg !6870
  %22 = zext i8 %21 to i32, !dbg !6871
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6872
  %24 = icmp eq i32 %23, 0, !dbg !6873
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6872
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.41, i32 0, i32 0), i32 noundef %25) #25, !dbg !6874
  br label %27, !dbg !6875

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.42, i32 0, i32 0)) #25, !dbg !6876
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6878
  call void @llvm.dbg.value(metadata i32 %28, metadata !6836, metadata !DIExpression()), !dbg !6847
  %29 = icmp eq i32 %28, 8, !dbg !6879
  br i1 %29, label %15, label %16, !dbg !6848, !llvm.loop !6880
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #4 !dbg !6882 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6884, metadata !DIExpression()), !dbg !6885
  %2 = add i32 %0, -32, !dbg !6886
  %3 = icmp ult i32 %2, 95, !dbg !6886
  %4 = zext i1 %3 to i32, !dbg !6886
  ret i32 %4, !dbg !6887
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6888 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6937, metadata !DIExpression()), !dbg !6939
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6938, metadata !DIExpression()), !dbg !6939
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6940
  br i1 %3, label %5, label %4, !dbg !6942

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6943
  br label %5, !dbg !6945

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6946
  ret void, !dbg !6947
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6948 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6952, metadata !DIExpression()), !dbg !6953
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6954
  %3 = load i32, i32* %2, align 4, !dbg !6954
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6954
  %5 = load i32, i32* %4, align 4, !dbg !6954
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6954
  %7 = load i32, i32* %6, align 4, !dbg !6954
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.43, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6954
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6959
  %9 = load i32, i32* %8, align 4, !dbg !6959
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6959
  %11 = load i32, i32* %10, align 4, !dbg !6959
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6959
  %13 = load i32, i32* %12, align 4, !dbg !6959
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.44, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6959
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6964
  %15 = load i32, i32* %14, align 4, !dbg !6964
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6964
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6969
  %17 = load i32, i32* %16, align 4, !dbg !6969
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.46, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6969
  ret void, !dbg !6974
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6975 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6992, metadata !DIExpression()), !dbg !6995
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6993, metadata !DIExpression()), !dbg !6995
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6996
  %4 = load i32, i32* %3, align 4, !dbg !6996
  call void @llvm.dbg.value(metadata i32 %4, metadata !6994, metadata !DIExpression()), !dbg !6995
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6997
  ret void, !dbg !6998
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !6999 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7003, metadata !DIExpression()), !dbg !7006
  call void @llvm.dbg.value(metadata i8* %0, metadata !7004, metadata !DIExpression()), !dbg !7006
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7007
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !7007
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7005, metadata !DIExpression()), !dbg !7008
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7008
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7009
  %5 = bitcast i8* %4 to i32*, !dbg !7009
  %6 = load i32, i32* %5, align 4, !dbg !7009
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7010
  store i32 %6, i32* %7, align 4, !dbg !7011
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !7012
  unreachable, !dbg !7013
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7014 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7017, metadata !DIExpression()), !dbg !7018
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !7019
  ret void, !dbg !7020
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7021 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7025, metadata !DIExpression()), !dbg !7026
  %2 = icmp sgt i32 %0, -1, !dbg !7027
  br i1 %2, label %3, label %8, !dbg !7029

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7030, !srcloc !7032
  %4 = and i32 %0, 31, !dbg !7033
  %5 = shl nuw i32 1, %4, !dbg !7034
  %6 = lshr i32 %0, 5, !dbg !7035
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7036
  store volatile i32 %5, i32* %7, align 4, !dbg !7037
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7038, !srcloc !7039
  br label %8, !dbg !7040

8:                                                ; preds = %3, %1
  ret void, !dbg !7041
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7042 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7044, metadata !DIExpression()), !dbg !7045
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !7046
  ret void, !dbg !7047
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7048 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7050, metadata !DIExpression()), !dbg !7051
  %2 = icmp sgt i32 %0, -1, !dbg !7052
  br i1 %2, label %3, label %8, !dbg !7054

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7055
  %5 = shl nuw i32 1, %4, !dbg !7057
  %6 = lshr i32 %0, 5, !dbg !7058
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7059
  store volatile i32 %5, i32* %7, align 4, !dbg !7060
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7061, !srcloc !7065
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7066, !srcloc !7069
  br label %8, !dbg !7070

8:                                                ; preds = %3, %1
  ret void, !dbg !7071
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #5 !dbg !7072 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7076, metadata !DIExpression()), !dbg !7077
  %2 = lshr i32 %0, 5, !dbg !7078
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7079
  %4 = load volatile i32, i32* %3, align 4, !dbg !7079
  %5 = and i32 %0, 31, !dbg !7080
  %6 = shl nuw i32 1, %5, !dbg !7080
  %7 = and i32 %4, %6, !dbg !7081
  ret i32 %7, !dbg !7082
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !7083 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7087, metadata !DIExpression()), !dbg !7090
  call void @llvm.dbg.value(metadata i32 %1, metadata !7088, metadata !DIExpression()), !dbg !7090
  call void @llvm.dbg.value(metadata i32 %2, metadata !7089, metadata !DIExpression()), !dbg !7090
  %4 = add i32 %1, 1, !dbg !7091
  call void @llvm.dbg.value(metadata i32 %4, metadata !7088, metadata !DIExpression()), !dbg !7090
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !7094
  ret void, !dbg !7095
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !7096 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7100, metadata !DIExpression()), !dbg !7102
  call void @llvm.dbg.value(metadata i32 %1, metadata !7101, metadata !DIExpression()), !dbg !7102
  %3 = trunc i32 %1 to i8, !dbg !7103
  %4 = shl i8 %3, 4, !dbg !7103
  %5 = and i32 %0, 15, !dbg !7105
  %6 = add nsw i32 %5, -4, !dbg !7105
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7105
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7105
  %9 = icmp slt i32 %0, 0, !dbg !7105
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7105
  store volatile i8 %4, i8* %10, align 1, !dbg !7103
  ret void, !dbg !7106
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7107 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7109, metadata !DIExpression()), !dbg !7110
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !7111
  ret void, !dbg !7112
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7113 {
  tail call void @z_SysNmiOnReset() #25, !dbg !7115
  tail call void @z_arm_int_exit() #25, !dbg !7116
  ret void, !dbg !7117
}

; Function Attrs: optsize
declare !dbg !7118 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7119 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !7121 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !7123
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !7124
  tail call void @z_bss_zero() #25, !dbg !7125
  tail call void @z_data_copy() #25, !dbg !7126
  tail call void @z_arm_interrupt_init() #25, !dbg !7127
  tail call void @z_cstart() #27, !dbg !7128
  unreachable, !dbg !7128
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7129 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7130
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7131, !srcloc !7134
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7135, !srcloc !7138
  ret void, !dbg !7139
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !7140 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7141
  %2 = and i32 %1, -15728641, !dbg !7141
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7141
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !7142, !srcloc !7149
  call void @llvm.dbg.value(metadata i32 %3, metadata !7147, metadata !DIExpression()) #23, !dbg !7150
  %4 = and i32 %3, -5, !dbg !7151
  call void @llvm.dbg.value(metadata i32 %4, metadata !7152, metadata !DIExpression()) #23, !dbg !7157
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !7159, !srcloc !7160
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7161, !srcloc !7138
  ret void, !dbg !7163
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7164 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7167, metadata !DIExpression()), !dbg !7168
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7169
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7170
  store i32 %0, i32* %3, align 4, !dbg !7171
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7172
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7173
  store i32 %4, i32* %5, align 4, !dbg !7174
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7175
  %7 = or i32 %6, 268435456, !dbg !7175
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7175
  call void @llvm.dbg.value(metadata i32 0, metadata !7176, metadata !DIExpression()) #23, !dbg !7179
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !7181, !srcloc !7182
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7183
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7184
  %10 = load i32, i32* %9, align 4, !dbg !7184
  ret i32 %10, !dbg !7185
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #6 !dbg !7186 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7296, metadata !DIExpression()), !dbg !7304
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7297, metadata !DIExpression()), !dbg !7304
  call void @llvm.dbg.value(metadata i8* %2, metadata !7298, metadata !DIExpression()), !dbg !7304
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7299, metadata !DIExpression()), !dbg !7304
  call void @llvm.dbg.value(metadata i8* %4, metadata !7300, metadata !DIExpression()), !dbg !7304
  call void @llvm.dbg.value(metadata i8* %5, metadata !7301, metadata !DIExpression()), !dbg !7304
  call void @llvm.dbg.value(metadata i8* %6, metadata !7302, metadata !DIExpression()), !dbg !7304
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7305
  call void @llvm.dbg.value(metadata i8* %8, metadata !7303, metadata !DIExpression()), !dbg !7304
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7306
  %10 = bitcast i8* %9 to i32*, !dbg !7306
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7307
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7308
  %12 = bitcast i8* %8 to i32*, !dbg !7309
  store i32 %11, i32* %12, align 4, !dbg !7310
  %13 = ptrtoint i8* %4 to i32, !dbg !7311
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7312
  %15 = bitcast i8* %14 to i32*, !dbg !7312
  store i32 %13, i32* %15, align 4, !dbg !7313
  %16 = ptrtoint i8* %5 to i32, !dbg !7314
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7315
  %18 = bitcast i8* %17 to i32*, !dbg !7315
  store i32 %16, i32* %18, align 4, !dbg !7316
  %19 = ptrtoint i8* %6 to i32, !dbg !7317
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7318
  %21 = bitcast i8* %20 to i32*, !dbg !7318
  store i32 %19, i32* %21, align 4, !dbg !7319
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7320
  %23 = bitcast i8* %22 to i32*, !dbg !7320
  store i32 16777216, i32* %23, align 4, !dbg !7321
  %24 = ptrtoint i8* %8 to i32, !dbg !7322
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7323
  store i32 %24, i32* %25, align 8, !dbg !7324
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7325
  store i32 0, i32* %26, align 4, !dbg !7326
  ret void, !dbg !7327
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !7328 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7333, metadata !DIExpression()), !dbg !7339
  call void @llvm.dbg.value(metadata i32 %1, metadata !7334, metadata !DIExpression()), !dbg !7339
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7340
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !7335, metadata !DIExpression()), !dbg !7339
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !7341
  br i1 %4, label %19, label %5, !dbg !7343

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !7338, metadata !DIExpression()), !dbg !7339
  %6 = icmp eq i32 %0, -22, !dbg !7344
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !7344
  %8 = load i32, i32* %7, align 4, !dbg !7344
  br i1 %6, label %16, label %9, !dbg !7346

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !7344
  %11 = icmp ule i32 %10, %0, !dbg !7344
  %12 = icmp ugt i32 %8, %0, !dbg !7344
  %13 = and i1 %12, %11, !dbg !7344
  %14 = icmp ugt i32 %8, %1, !dbg !7344
  %15 = and i1 %14, %13, !dbg !7344
  br i1 %15, label %18, label %19, !dbg !7344

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !7344
  br i1 %17, label %18, label %19, !dbg !7346

18:                                               ; preds = %9, %16
  br label %19, !dbg !7347

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !7339
  ret i32 %20, !dbg !7349
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !7350 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7354, metadata !DIExpression()), !dbg !7357
  call void @llvm.dbg.value(metadata i8* %1, metadata !7355, metadata !DIExpression()), !dbg !7357
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7356, metadata !DIExpression()), !dbg !7357
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7358
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !7359
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !7360, !srcloc !7361
  unreachable, !dbg !7362
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7363 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7381, metadata !DIExpression()), !dbg !7391
  call void @llvm.dbg.value(metadata i32 %1, metadata !7382, metadata !DIExpression()), !dbg !7391
  call void @llvm.dbg.value(metadata i32 %2, metadata !7383, metadata !DIExpression()), !dbg !7391
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7384, metadata !DIExpression()), !dbg !7391
  call void @llvm.dbg.value(metadata i32 0, metadata !7385, metadata !DIExpression()), !dbg !7391
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7392
  %9 = and i32 %8, 511, !dbg !7393
  call void @llvm.dbg.value(metadata i32 %9, metadata !7386, metadata !DIExpression()), !dbg !7391
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !7394
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !7394
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7395
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23, !dbg !7395
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7390, metadata !DIExpression()), !dbg !7396
  call void @llvm.dbg.value(metadata i32 0, metadata !7397, metadata !DIExpression()) #23, !dbg !7400
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !7402, !srcloc !7403
  call void @llvm.dbg.value(metadata i8* %6, metadata !7388, metadata !DIExpression(DW_OP_deref)), !dbg !7391
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !7404
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7389, metadata !DIExpression()), !dbg !7391
  call void @llvm.dbg.value(metadata i8* %5, metadata !7387, metadata !DIExpression(DW_OP_deref)), !dbg !7391
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #24, !dbg !7405
  call void @llvm.dbg.value(metadata i32 %12, metadata !7385, metadata !DIExpression()), !dbg !7391
  %13 = load i8, i8* %5, align 1, !dbg !7406, !range !7408
  call void @llvm.dbg.value(metadata i8 %13, metadata !7387, metadata !DIExpression()), !dbg !7391
  %14 = icmp eq i8 %13, 0, !dbg !7406
  br i1 %14, label %15, label %32, !dbg !7409

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7410
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !7411
  %18 = load i8, i8* %6, align 1, !dbg !7412, !range !7408
  call void @llvm.dbg.value(metadata i8 %18, metadata !7388, metadata !DIExpression()), !dbg !7391
  %19 = icmp eq i8 %18, 0, !dbg !7412
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7414
  %21 = load i32, i32* %20, align 4, !dbg !7414
  br i1 %19, label %27, label %22, !dbg !7415

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7416
  %24 = icmp eq i32 %23, 0, !dbg !7419
  br i1 %24, label %25, label %31, !dbg !7420

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7421
  br label %29, !dbg !7423

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7424
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7414
  br label %31, !dbg !7426

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !7426
  br label %32, !dbg !7427

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23, !dbg !7427
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !7427
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !7427
  ret void, !dbg !7427
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !7428 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7433, metadata !DIExpression()), !dbg !7439
  call void @llvm.dbg.value(metadata i32 %1, metadata !7434, metadata !DIExpression()), !dbg !7439
  call void @llvm.dbg.value(metadata i32 %2, metadata !7435, metadata !DIExpression()), !dbg !7439
  call void @llvm.dbg.value(metadata i8* %3, metadata !7436, metadata !DIExpression()), !dbg !7439
  call void @llvm.dbg.value(metadata i8 0, metadata !7437, metadata !DIExpression()), !dbg !7439
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7438, metadata !DIExpression()), !dbg !7439
  store i8 0, i8* %3, align 1, !dbg !7440
  %5 = icmp ugt i32 %2, -16777217, !dbg !7441
  br i1 %5, label %6, label %17, !dbg !7443

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !7444
  %8 = icmp eq i32 %7, 8, !dbg !7444
  br i1 %8, label %9, label %10, !dbg !7444

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.60, i32 0, i32 0), i32 noundef 69) #25, !dbg !7446
  br label %17, !dbg !7452

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !7453
  %12 = icmp eq i32 %11, 0, !dbg !7453
  br i1 %12, label %13, label %14, !dbg !7454

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !7438, metadata !DIExpression()), !dbg !7439
  store i8 1, i8* %3, align 1, !dbg !7457
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !7439
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !7438, metadata !DIExpression()), !dbg !7439
  br label %17, !dbg !7460

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !7439
  ret %struct.__esf* %18, !dbg !7461
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7462 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7466, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.value(metadata i32 %1, metadata !7467, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.value(metadata i8* %2, metadata !7468, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.value(metadata i32 0, metadata !7469, metadata !DIExpression()), !dbg !7470
  store i8 0, i8* %2, align 1, !dbg !7471
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !7472

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !7473
  call void @llvm.dbg.value(metadata i32 %5, metadata !7469, metadata !DIExpression()), !dbg !7470
  br label %12, !dbg !7475

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !7476
  call void @llvm.dbg.value(metadata i32 %7, metadata !7469, metadata !DIExpression()), !dbg !7470
  br label %12, !dbg !7477

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !7478
  call void @llvm.dbg.value(metadata i32 0, metadata !7469, metadata !DIExpression()), !dbg !7470
  br label %12, !dbg !7479

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !7480
  call void @llvm.dbg.value(metadata i32 0, metadata !7469, metadata !DIExpression()), !dbg !7470
  br label %12, !dbg !7481

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !7482
  br label %12, !dbg !7483

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !7484
  br label %12, !dbg !7485

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !7470
  call void @llvm.dbg.value(metadata i32 %13, metadata !7469, metadata !DIExpression()), !dbg !7470
  ret i32 %13, !dbg !7486
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7487 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7491, metadata !DIExpression()), !dbg !7494
  call void @llvm.dbg.value(metadata i8* %1, metadata !7492, metadata !DIExpression()), !dbg !7494
  call void @llvm.dbg.value(metadata i32 0, metadata !7493, metadata !DIExpression()), !dbg !7494
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.55, i32 0, i32 0), i32 noundef 69) #25, !dbg !7495
  store i8 0, i8* %1, align 1, !dbg !7500
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7501
  %4 = and i32 %3, 2, !dbg !7503
  %5 = icmp eq i32 %4, 0, !dbg !7504
  br i1 %5, label %7, label %6, !dbg !7505

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.56, i32 0, i32 0), i32 noundef 69) #25, !dbg !7506
  br label %36, !dbg !7512

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7513
  %9 = icmp sgt i32 %8, -1, !dbg !7515
  br i1 %9, label %11, label %10, !dbg !7516

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.57, i32 0, i32 0), i32 noundef 69) #25, !dbg !7517
  br label %36, !dbg !7523

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7524
  %13 = and i32 %12, 1073741824, !dbg !7526
  %14 = icmp eq i32 %13, 0, !dbg !7527
  br i1 %14, label %36, label %15, !dbg !7528

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.58, i32 0, i32 0), i32 noundef 69) #25, !dbg !7529
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !7535
  br i1 %16, label %17, label %21, !dbg !7537

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7538
  %19 = load i32, i32* %18, align 4, !dbg !7538
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.59, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !7538
  %20 = load i32, i32* %18, align 4, !dbg !7544
  call void @llvm.dbg.value(metadata i32 %20, metadata !7493, metadata !DIExpression()), !dbg !7494
  br label %36, !dbg !7545

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7546
  %23 = and i32 %22, 255, !dbg !7548
  %24 = icmp eq i32 %23, 0, !dbg !7549
  br i1 %24, label %27, label %25, !dbg !7550

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !7551
  call void @llvm.dbg.value(metadata i32 %26, metadata !7493, metadata !DIExpression()), !dbg !7494
  br label %36, !dbg !7553

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7554
  %29 = and i32 %28, 65280, !dbg !7556
  %30 = icmp eq i32 %29, 0, !dbg !7557
  br i1 %30, label %32, label %31, !dbg !7558

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !7559
  call void @llvm.dbg.value(metadata i32 0, metadata !7493, metadata !DIExpression()), !dbg !7494
  br label %36, !dbg !7561

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7562
  %34 = icmp ult i32 %33, 65536, !dbg !7564
  br i1 %34, label %36, label %35, !dbg !7565

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !7566
  call void @llvm.dbg.value(metadata i32 0, metadata !7493, metadata !DIExpression()), !dbg !7494
  br label %36, !dbg !7568

36:                                               ; preds = %10, %11, %17, %31, %32, %35, %25, %6
  %37 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], [ 0, %32 ], [ 0, %11 ], !dbg !7494
  call void @llvm.dbg.value(metadata i32 %37, metadata !7493, metadata !DIExpression()), !dbg !7494
  ret i32 %37, !dbg !7569
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7570 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7572, metadata !DIExpression()), !dbg !7585
  call void @llvm.dbg.value(metadata i32 %1, metadata !7573, metadata !DIExpression()), !dbg !7585
  call void @llvm.dbg.value(metadata i8* %2, metadata !7574, metadata !DIExpression()), !dbg !7585
  call void @llvm.dbg.value(metadata i32 0, metadata !7575, metadata !DIExpression()), !dbg !7585
  call void @llvm.dbg.value(metadata i32 -22, metadata !7576, metadata !DIExpression()), !dbg !7585
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.52, i32 0, i32 0), i32 noundef 69) #25, !dbg !7586
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7591
  %5 = and i32 %4, 16, !dbg !7593
  %6 = icmp eq i32 %5, 0, !dbg !7594
  br i1 %6, label %8, label %7, !dbg !7595

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7.53, i32 0, i32 0), i32 noundef 69) #25, !dbg !7596
  br label %8, !dbg !7602

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7603
  %10 = and i32 %9, 8, !dbg !7605
  %11 = icmp eq i32 %10, 0, !dbg !7606
  br i1 %11, label %13, label %12, !dbg !7607

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.51, i32 0, i32 0), i32 noundef 69) #25, !dbg !7608
  br label %13, !dbg !7614

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7615
  %15 = and i32 %14, 2, !dbg !7616
  %16 = icmp eq i32 %15, 0, !dbg !7617
  br i1 %16, label %27, label %17, !dbg !7618

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.54, i32 0, i32 0), i32 noundef 69) #25, !dbg !7619
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7624
  call void @llvm.dbg.value(metadata i32 %18, metadata !7577, metadata !DIExpression()), !dbg !7625
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7626
  %20 = and i32 %19, 128, !dbg !7628
  %21 = icmp eq i32 %20, 0, !dbg !7629
  br i1 %21, label %27, label %22, !dbg !7630

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !7576, metadata !DIExpression()), !dbg !7585
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !7631
  %23 = icmp eq i32 %1, 0, !dbg !7637
  br i1 %23, label %27, label %24, !dbg !7639

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7640
  %26 = and i32 %25, -129, !dbg !7640
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7640
  br label %27, !dbg !7642

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !7585
  call void @llvm.dbg.value(metadata i32 %28, metadata !7576, metadata !DIExpression()), !dbg !7585
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7643
  %30 = and i32 %29, 1, !dbg !7645
  %31 = icmp eq i32 %30, 0, !dbg !7646
  br i1 %31, label %33, label %32, !dbg !7647

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i32 0, i32 0), i32 noundef 69) #25, !dbg !7648
  br label %33, !dbg !7654

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7655
  %35 = and i32 %34, 32, !dbg !7657
  %36 = icmp eq i32 %35, 0, !dbg !7658
  br i1 %36, label %38, label %37, !dbg !7659

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), i32 noundef 69) #25, !dbg !7660
  br label %38, !dbg !7666

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7667
  %40 = and i32 %39, 16, !dbg !7668
  %41 = icmp eq i32 %40, 0, !dbg !7668
  br i1 %41, label %42, label %46, !dbg !7669

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7670
  %44 = and i32 %43, 2, !dbg !7671
  %45 = icmp eq i32 %44, 0, !dbg !7671
  br i1 %45, label %55, label %46, !dbg !7672

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7673
  %48 = and i32 %47, 2048, !dbg !7674
  %49 = icmp eq i32 %48, 0, !dbg !7674
  br i1 %49, label %55, label %50, !dbg !7675

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !7676
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #25, !dbg !7677
  call void @llvm.dbg.value(metadata i32 %52, metadata !7580, metadata !DIExpression()), !dbg !7678
  %53 = icmp eq i32 %52, 0, !dbg !7679
  br i1 %53, label %55, label %54, !dbg !7681

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !7682, metadata !DIExpression()) #23, !dbg !7685
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !7688, !srcloc !7689
  call void @llvm.dbg.value(metadata i32 2, metadata !7575, metadata !DIExpression()), !dbg !7585
  br label %55, !dbg !7690

55:                                               ; preds = %54, %50, %46, %42
  %56 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %50 ], !dbg !7585
  call void @llvm.dbg.value(metadata i32 %56, metadata !7575, metadata !DIExpression()), !dbg !7585
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7691
  %58 = and i32 %57, 32, !dbg !7693
  %59 = icmp eq i32 %58, 0, !dbg !7694
  br i1 %59, label %63, label %60, !dbg !7695

60:                                               ; preds = %55
  %61 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7696
  %62 = and i32 %61, -8193, !dbg !7696
  store volatile i32 %62, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7696
  br label %63, !dbg !7698

63:                                               ; preds = %60, %55
  %64 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7699
  %65 = or i32 %64, 255, !dbg !7699
  store volatile i32 %65, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7699
  store i8 0, i8* %2, align 1, !dbg !7700
  ret i32 %56, !dbg !7701
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7702 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7706, metadata !DIExpression()), !dbg !7713
  call void @llvm.dbg.value(metadata i32 %0, metadata !7707, metadata !DIExpression()), !dbg !7713
  call void @llvm.dbg.value(metadata i8* %1, metadata !7708, metadata !DIExpression()), !dbg !7713
  call void @llvm.dbg.value(metadata i32 0, metadata !7709, metadata !DIExpression()), !dbg !7713
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef 69) #25, !dbg !7714
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7719
  %4 = and i32 %3, 4096, !dbg !7721
  %5 = icmp eq i32 %4, 0, !dbg !7721
  br i1 %5, label %7, label %6, !dbg !7722

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !7723
  br label %7, !dbg !7729

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7730
  %9 = and i32 %8, 2048, !dbg !7732
  %10 = icmp eq i32 %9, 0, !dbg !7732
  br i1 %10, label %12, label %11, !dbg !7733

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.51, i32 0, i32 0), i32 noundef 69) #25, !dbg !7734
  br label %12, !dbg !7740

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7741
  %14 = and i32 %13, 512, !dbg !7742
  %15 = icmp eq i32 %14, 0, !dbg !7742
  br i1 %15, label %26, label %16, !dbg !7743

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !7744
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7749
  call void @llvm.dbg.value(metadata i32 %17, metadata !7710, metadata !DIExpression()), !dbg !7750
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7751
  %19 = and i32 %18, 32768, !dbg !7753
  %20 = icmp eq i32 %19, 0, !dbg !7754
  br i1 %20, label %26, label %21, !dbg !7755

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7756
  %22 = icmp eq i32 %0, 0, !dbg !7762
  br i1 %22, label %26, label %23, !dbg !7764

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7765
  %25 = and i32 %24, -32769, !dbg !7765
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7765
  br label %26, !dbg !7767

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7768
  %28 = and i32 %27, 1024, !dbg !7770
  %29 = icmp eq i32 %28, 0, !dbg !7770
  br i1 %29, label %31, label %30, !dbg !7771

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69) #25, !dbg !7772
  br label %31, !dbg !7778

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7779
  %33 = and i32 %32, 256, !dbg !7781
  %34 = icmp eq i32 %33, 0, !dbg !7782
  br i1 %34, label %35, label %39, !dbg !7783

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7784
  %37 = and i32 %36, 8192, !dbg !7786
  %38 = icmp eq i32 %37, 0, !dbg !7786
  br i1 %38, label %41, label %39, !dbg !7787

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !7788
  br label %41, !dbg !7789

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7789
  %43 = or i32 %42, 65280, !dbg !7789
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7789
  store i8 0, i8* %1, align 1, !dbg !7790
  ret void, !dbg !7791
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7792 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7798, metadata !DIExpression()), !dbg !7800
  call void @llvm.dbg.value(metadata i32 0, metadata !7799, metadata !DIExpression()), !dbg !7800
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !7801
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7806
  %2 = and i32 %1, 33554432, !dbg !7808
  %3 = icmp eq i32 %2, 0, !dbg !7809
  br i1 %3, label %5, label %4, !dbg !7810

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i32 0, i32 0), i32 noundef 69) #25, !dbg !7811
  br label %5, !dbg !7817

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7818
  %7 = and i32 %6, 16777216, !dbg !7820
  %8 = icmp eq i32 %7, 0, !dbg !7821
  br i1 %8, label %10, label %9, !dbg !7822

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i32 0, i32 0), i32 noundef 69) #25, !dbg !7823
  br label %10, !dbg !7829

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7830
  %12 = and i32 %11, 524288, !dbg !7832
  %13 = icmp eq i32 %12, 0, !dbg !7833
  br i1 %13, label %15, label %14, !dbg !7834

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #25, !dbg !7835
  br label %15, !dbg !7841

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7842
  %17 = and i32 %16, 262144, !dbg !7844
  %18 = icmp eq i32 %17, 0, !dbg !7845
  br i1 %18, label %20, label %19, !dbg !7846

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23.50, i32 0, i32 0), i32 noundef 69) #25, !dbg !7847
  br label %20, !dbg !7853

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7854
  %22 = and i32 %21, 131072, !dbg !7856
  %23 = icmp eq i32 %22, 0, !dbg !7857
  br i1 %23, label %25, label %24, !dbg !7858

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !7859
  br label %25, !dbg !7865

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7866
  %27 = and i32 %26, 65536, !dbg !7868
  %28 = icmp eq i32 %27, 0, !dbg !7869
  br i1 %28, label %30, label %29, !dbg !7870

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69) #25, !dbg !7871
  br label %30, !dbg !7877

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7878
  %32 = or i32 %31, -65536, !dbg !7878
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7878
  ret void, !dbg !7879
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7880 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7884, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata i8* %0, metadata !7885, metadata !DIExpression()), !dbg !7886
  store i8 0, i8* %0, align 1, !dbg !7887
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #25, !dbg !7888
  ret void, !dbg !7893
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7894 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7898, metadata !DIExpression()), !dbg !7900
  call void @llvm.dbg.value(metadata i32 %0, metadata !7899, metadata !DIExpression()), !dbg !7900
  %2 = icmp slt i32 %0, 16, !dbg !7901
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28.49, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29, i32 0, i32 0), !dbg !7901
  %4 = add nsw i32 %0, -16, !dbg !7901
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7901
  ret void, !dbg !7906
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7907 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7911, metadata !DIExpression()), !dbg !7914
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7915
  %3 = load i32, i32* %2, align 4, !dbg !7915
  %4 = inttoptr i32 %3 to i16*, !dbg !7916
  call void @llvm.dbg.value(metadata i16* %4, metadata !7912, metadata !DIExpression()), !dbg !7914
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7917
  %6 = or i32 %5, 256, !dbg !7917
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7917
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7918, !srcloc !7921
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7922, !srcloc !7925
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7926
  %8 = load i16, i16* %7, align 2, !dbg !7927
  call void @llvm.dbg.value(metadata i16 %8, metadata !7913, metadata !DIExpression()), !dbg !7914
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7928
  %10 = and i32 %9, -257, !dbg !7928
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7928
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7929, !srcloc !7921
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7931, !srcloc !7925
  %11 = icmp eq i16 %8, -8446, !dbg !7933
  ret i1 %11, !dbg !7935
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7936 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7937
  %2 = or i32 %1, 16, !dbg !7937
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7937
  ret void, !dbg !7938
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7939 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7942, metadata !DIExpression()), !dbg !7943
  br label %1, !dbg !7944

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7942, metadata !DIExpression()), !dbg !7943
  tail call fastcc void @__NVIC_SetPriority.63(i32 noundef %2) #24, !dbg !7946
  %3 = add nuw nsw i32 %2, 1, !dbg !7949
  call void @llvm.dbg.value(metadata i32 %3, metadata !7942, metadata !DIExpression()), !dbg !7943
  %4 = icmp eq i32 %3, 82, !dbg !7950
  br i1 %4, label %5, label %1, !dbg !7944, !llvm.loop !7951

5:                                                ; preds = %1
  ret void, !dbg !7953
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.63(i32 noundef %0) unnamed_addr #15 !dbg !7954 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7956, metadata !DIExpression()), !dbg !7958
  call void @llvm.dbg.value(metadata i32 1, metadata !7957, metadata !DIExpression()), !dbg !7958
  %2 = and i32 %0, 15, !dbg !7959
  %3 = add nsw i32 %2, -4, !dbg !7959
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7959
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7959
  %6 = icmp slt i32 %0, 0, !dbg !7959
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7959
  store volatile i8 16, i8* %7, align 1, !dbg !7960
  ret void, !dbg !7962
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7963 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8069, metadata !DIExpression()), !dbg !8070
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8071
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8073
  br i1 %3, label %4, label %12, !dbg !8074

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !8075, !srcloc !8087
  call void @llvm.dbg.value(metadata i32 %5, metadata !8078, metadata !DIExpression()) #23, !dbg !8088
  %6 = icmp eq i32 %5, 0, !dbg !8089
  br i1 %6, label %12, label %7, !dbg !8090

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8091
  %9 = or i32 %8, 268435456, !dbg !8091
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8091
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8093
  %11 = and i32 %10, -32769, !dbg !8093
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8093
  br label %12, !dbg !8094

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !8095
  ret void, !dbg !8096
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !8097 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !8098
  ret void, !dbg !8099
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !641 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !756, metadata !DIExpression()), !dbg !8100
  call void @llvm.dbg.value(metadata i8 0, metadata !757, metadata !DIExpression()), !dbg !8100
  call void @llvm.dbg.value(metadata i32 64, metadata !759, metadata !DIExpression()), !dbg !8100
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !8101
  %3 = load i32, i32* %2, align 4, !dbg !8101
  %4 = add i32 %3, -64, !dbg !8103
  call void @llvm.dbg.value(metadata i32 %4, metadata !758, metadata !DIExpression()), !dbg !8100
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !8104
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !8105
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !8106
  call void @llvm.dbg.value(metadata i8 1, metadata !757, metadata !DIExpression()), !dbg !8100
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !8107
  ret void, !dbg !8108
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !8109 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8110
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !8111, !srcloc !8114
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !8115, !srcloc !8118
  ret void, !dbg !8119
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !8120 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !8121, !srcloc !8124
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8125
  ret void, !dbg !8126
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8127 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8142, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i8 %1, metadata !8143, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i32 %2, metadata !8144, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i32 %3, metadata !8145, metadata !DIExpression()), !dbg !8146
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !8147
  ret void, !dbg !8149
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8150 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8155, metadata !DIExpression()), !dbg !8160
  call void @llvm.dbg.value(metadata i8 %1, metadata !8156, metadata !DIExpression()), !dbg !8160
  call void @llvm.dbg.value(metadata i32 undef, metadata !8157, metadata !DIExpression()), !dbg !8160
  call void @llvm.dbg.value(metadata i32 undef, metadata !8158, metadata !DIExpression()), !dbg !8160
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8161
  call void @llvm.dbg.value(metadata i8 %3, metadata !8159, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8160
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !8162
  call void @llvm.dbg.value(metadata i32 %4, metadata !8159, metadata !DIExpression()), !dbg !8160
  %5 = trunc i32 %4 to i8, !dbg !8163
  store i8 %5, i8* @static_regions_num, align 1, !dbg !8164
  ret void, !dbg !8165
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !8166 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8170, metadata !DIExpression()), !dbg !8176
  call void @llvm.dbg.value(metadata i8 %1, metadata !8171, metadata !DIExpression()), !dbg !8176
  call void @llvm.dbg.value(metadata i8 %2, metadata !8172, metadata !DIExpression()), !dbg !8176
  call void @llvm.dbg.value(metadata i1 %3, metadata !8173, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8176
  %5 = zext i8 %2 to i32, !dbg !8177
  call void @llvm.dbg.value(metadata i32 %5, metadata !8175, metadata !DIExpression()), !dbg !8176
  call void @llvm.dbg.value(metadata i32 0, metadata !8174, metadata !DIExpression()), !dbg !8176
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !8175, metadata !DIExpression()), !dbg !8176
  call void @llvm.dbg.value(metadata i32 0, metadata !8174, metadata !DIExpression()), !dbg !8176
  %7 = icmp eq i8 %1, 0, !dbg !8178
  br i1 %7, label %30, label %8, !dbg !8181

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8175, metadata !DIExpression()), !dbg !8176
  call void @llvm.dbg.value(metadata i32 %10, metadata !8174, metadata !DIExpression()), !dbg !8176
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !8182
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !8185
  %13 = load i32, i32* %12, align 4, !dbg !8185
  %14 = icmp eq i32 %13, 0, !dbg !8186
  br i1 %14, label %26, label %15, !dbg !8187

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !8188

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !8190
  %18 = icmp eq i32 %17, 0, !dbg !8190
  br i1 %18, label %19, label %20, !dbg !8191

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.72, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !8192
  br label %30, !dbg !8198

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !8199
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !8200
  call void @llvm.dbg.value(metadata i32 %22, metadata !8175, metadata !DIExpression()), !dbg !8176
  %23 = icmp eq i32 %22, -22, !dbg !8201
  br i1 %23, label %30, label %24, !dbg !8203

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !8204
  call void @llvm.dbg.value(metadata i32 %25, metadata !8175, metadata !DIExpression()), !dbg !8176
  br label %26, !dbg !8205

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !8176
  call void @llvm.dbg.value(metadata i32 %27, metadata !8175, metadata !DIExpression()), !dbg !8176
  %28 = add nuw nsw i32 %10, 1, !dbg !8206
  call void @llvm.dbg.value(metadata i32 %28, metadata !8174, metadata !DIExpression()), !dbg !8176
  %29 = icmp eq i32 %28, %6, !dbg !8178
  br i1 %29, label %30, label %8, !dbg !8181, !llvm.loop !8207

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !8176
  ret i32 %31, !dbg !8209
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !8210 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8214, metadata !DIExpression()), !dbg !8216
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !8217
  %3 = load i32, i32* %2, align 4, !dbg !8217
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !8218, !range !8219
  %5 = icmp ult i32 %4, 2, !dbg !8218
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !8220
  br i1 %7, label %8, label %15, !dbg !8220

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !8221
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !8222
  %11 = load i32, i32* %10, align 4, !dbg !8222
  %12 = and i32 %11, %9, !dbg !8223
  %13 = icmp eq i32 %12, 0, !dbg !8224
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8215, metadata !DIExpression()), !dbg !8216
  ret i32 %16, !dbg !8225
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8226 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !8230, metadata !DIExpression()), !dbg !8233
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !8231, metadata !DIExpression()), !dbg !8233
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !8234
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !8234
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !8232, metadata !DIExpression()), !dbg !8235
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !8236
  %6 = load i32, i32* %5, align 4, !dbg !8236
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !8237
  store i32 %6, i32* %7, align 4, !dbg !8238
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !8239
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !8240
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !8241
  %11 = load i32, i32* %10, align 4, !dbg !8241
  call fastcc void @get_region_attr_from_mpu_partition_info(%union.anon* noundef nonnull %8, %union.anon* noundef nonnull %9, i32 noundef %11) #24, !dbg !8242
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !8243
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !8244
  ret i32 %12, !dbg !8245
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%union.anon* nocapture noundef writeonly %0, %union.anon* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !8246 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !8253, metadata !DIExpression()), !dbg !8257
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !8254, metadata !DIExpression()), !dbg !8257
  call void @llvm.dbg.value(metadata i32 undef, metadata !8255, metadata !DIExpression()), !dbg !8257
  call void @llvm.dbg.value(metadata i32 %2, metadata !8256, metadata !DIExpression()), !dbg !8257
  %4 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !8258
  %5 = load i32, i32* %4, align 4, !dbg !8258
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !8259
  %7 = or i32 %6, %5, !dbg !8260
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !8261
  store i32 %7, i32* %8, align 4, !dbg !8262
  ret void, !dbg !8263
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8264 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8268, metadata !DIExpression()), !dbg !8270
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8269, metadata !DIExpression()), !dbg !8270
  %3 = zext i8 %0 to i32, !dbg !8271
  %4 = icmp ugt i8 %0, 7, !dbg !8273
  br i1 %4, label %5, label %6, !dbg !8274

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.73, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !8275
  br label %7, !dbg !8281

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !8282
  br label %7, !dbg !8283

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !8270
  ret i32 %8, !dbg !8284
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !8285 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8289, metadata !DIExpression()), !dbg !8291
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8290, metadata !DIExpression()), !dbg !8291
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !8292
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !8293
  %4 = load i32, i32* %3, align 4, !dbg !8293
  %5 = and i32 %4, -32, !dbg !8294
  %6 = or i32 %5, %0, !dbg !8295
  %7 = or i32 %6, 16, !dbg !8295
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !8296
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !8297
  %9 = load i32, i32* %8, align 4, !dbg !8297
  %10 = or i32 %9, 1, !dbg !8298
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8299
  ret void, !dbg !8300
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !8301 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8304, metadata !DIExpression()), !dbg !8305
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8306
  ret void, !dbg !8307
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #12 !dbg !8308 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8312, metadata !DIExpression()), !dbg !8313
  %2 = icmp ult i32 %0, 33, !dbg !8314
  br i1 %2, label %11, label %3, !dbg !8316

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !8317
  br i1 %4, label %11, label %5, !dbg !8319

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !8320
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !8321, !range !8219
  %8 = mul nsw i32 %7, -2, !dbg !8322
  %9 = add nsw i32 %8, 62, !dbg !8322
  %10 = and i32 %9, 62, !dbg !8323
  br label %11, !dbg !8324

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !8313
  ret i32 %12, !dbg !8325
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !8326 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8330, metadata !DIExpression()), !dbg !8332
  call void @llvm.dbg.value(metadata i8 %1, metadata !8331, metadata !DIExpression()), !dbg !8332
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !8333
  ret void, !dbg !8335
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8336 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8340, metadata !DIExpression()), !dbg !8347
  call void @llvm.dbg.value(metadata i8 %1, metadata !8341, metadata !DIExpression()), !dbg !8347
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8348
  call void @llvm.dbg.value(metadata i8 %3, metadata !8342, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8347
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !8349
  call void @llvm.dbg.value(metadata i32 %4, metadata !8342, metadata !DIExpression()), !dbg !8347
  %5 = icmp ne i32 %4, -22, !dbg !8350
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !8351
  call void @llvm.dbg.value(metadata i32 %4, metadata !8343, metadata !DIExpression()), !dbg !8352
  br i1 %7, label %8, label %12, !dbg !8351

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8343, metadata !DIExpression()), !dbg !8352
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !8353
  %10 = add i32 %9, 1, !dbg !8356
  call void @llvm.dbg.value(metadata i32 %10, metadata !8343, metadata !DIExpression()), !dbg !8352
  %11 = icmp eq i32 %10, 8, !dbg !8357
  br i1 %11, label %12, label %8, !dbg !8358, !llvm.loop !8359

12:                                               ; preds = %8, %2
  ret void, !dbg !8361
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !8362 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8365, metadata !DIExpression()), !dbg !8366
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8367
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8368
  ret void, !dbg !8369
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !8370 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !8375
  %2 = icmp ugt i32 %1, 8, !dbg !8377
  br i1 %2, label %14, label %3, !dbg !8378

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !8379
  call void @llvm.dbg.value(metadata i32 0, metadata !8374, metadata !DIExpression()), !dbg !8380
  %4 = icmp eq i32 %1, 0, !dbg !8381
  br i1 %4, label %12, label %5, !dbg !8384

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !8384

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8374, metadata !DIExpression()), !dbg !8380
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !8385
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #24, !dbg !8387
  %10 = add nuw i32 %8, 1, !dbg !8388
  call void @llvm.dbg.value(metadata i32 %10, metadata !8374, metadata !DIExpression()), !dbg !8380
  %11 = icmp eq i32 %10, %1, !dbg !8381
  br i1 %11, label %12, label %7, !dbg !8384, !llvm.loop !8389

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !8391
  store i8 %13, i8* @static_regions_num, align 1, !dbg !8392
  tail call void @arm_core_mpu_enable() #24, !dbg !8393
  br label %14, !dbg !8394

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !8380
  ret i32 %15, !dbg !8395
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !8396 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8403, metadata !DIExpression()), !dbg !8406
  call void @llvm.dbg.value(metadata i8* %1, metadata !8404, metadata !DIExpression()), !dbg !8406
  call void @llvm.dbg.value(metadata i8* %0, metadata !8405, metadata !DIExpression()), !dbg !8406
  %3 = load i8, i8* %1, align 1, !dbg !8407
  %4 = icmp eq i8 %3, 0, !dbg !8408
  br i1 %4, label %13, label %5, !dbg !8409

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !8403, metadata !DIExpression()), !dbg !8406
  call void @llvm.dbg.value(metadata i8* %8, metadata !8404, metadata !DIExpression()), !dbg !8406
  store i8 %6, i8* %7, align 1, !dbg !8410
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8412
  call void @llvm.dbg.value(metadata i8* %9, metadata !8403, metadata !DIExpression()), !dbg !8406
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8413
  call void @llvm.dbg.value(metadata i8* %10, metadata !8404, metadata !DIExpression()), !dbg !8406
  %11 = load i8, i8* %10, align 1, !dbg !8407
  %12 = icmp eq i8 %11, 0, !dbg !8408
  br i1 %12, label %13, label %5, !dbg !8409, !llvm.loop !8414

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !8416
  ret i8* %0, !dbg !8417
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8418 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8422, metadata !DIExpression()), !dbg !8426
  call void @llvm.dbg.value(metadata i8* %1, metadata !8423, metadata !DIExpression()), !dbg !8426
  call void @llvm.dbg.value(metadata i32 %2, metadata !8424, metadata !DIExpression()), !dbg !8426
  call void @llvm.dbg.value(metadata i8* %0, metadata !8425, metadata !DIExpression()), !dbg !8426
  %4 = icmp eq i32 %2, 0, !dbg !8427
  br i1 %4, label %22, label %5, !dbg !8428

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8422, metadata !DIExpression()), !dbg !8426
  call void @llvm.dbg.value(metadata i32 %7, metadata !8424, metadata !DIExpression()), !dbg !8426
  call void @llvm.dbg.value(metadata i8* %8, metadata !8423, metadata !DIExpression()), !dbg !8426
  %9 = load i8, i8* %8, align 1, !dbg !8429
  %10 = icmp eq i8 %9, 0, !dbg !8430
  br i1 %10, label %16, label %11, !dbg !8431

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !8432
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8434
  call void @llvm.dbg.value(metadata i8* %12, metadata !8423, metadata !DIExpression()), !dbg !8426
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8435
  call void @llvm.dbg.value(metadata i8* %13, metadata !8422, metadata !DIExpression()), !dbg !8426
  %14 = add i32 %7, -1, !dbg !8436
  call void @llvm.dbg.value(metadata i32 %14, metadata !8424, metadata !DIExpression()), !dbg !8426
  %15 = icmp eq i32 %14, 0, !dbg !8427
  br i1 %15, label %22, label %5, !dbg !8428, !llvm.loop !8437

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !8422, metadata !DIExpression()), !dbg !8426
  call void @llvm.dbg.value(metadata i32 %18, metadata !8424, metadata !DIExpression()), !dbg !8426
  store i8 0, i8* %17, align 1, !dbg !8439
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8441
  call void @llvm.dbg.value(metadata i8* %19, metadata !8422, metadata !DIExpression()), !dbg !8426
  %20 = add i32 %18, -1, !dbg !8442
  call void @llvm.dbg.value(metadata i32 %20, metadata !8424, metadata !DIExpression()), !dbg !8426
  %21 = icmp eq i32 %20, 0, !dbg !8443
  br i1 %21, label %22, label %16, !dbg !8444, !llvm.loop !8445

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !8447
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !8448 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8452, metadata !DIExpression()), !dbg !8455
  call void @llvm.dbg.value(metadata i32 %1, metadata !8453, metadata !DIExpression()), !dbg !8455
  call void @llvm.dbg.value(metadata i32 %1, metadata !8454, metadata !DIExpression()), !dbg !8455
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8456

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !8452, metadata !DIExpression()), !dbg !8455
  %6 = load i8, i8* %5, align 1, !dbg !8457
  %7 = icmp eq i8 %6, %3, !dbg !8458
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !8459
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8460
  call void @llvm.dbg.value(metadata i8* %10, metadata !8452, metadata !DIExpression()), !dbg !8455
  br i1 %9, label %11, label %4, !dbg !8459, !llvm.loop !8462

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !8464
  ret i8* %12, !dbg !8465
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !8466 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8468, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.value(metadata i32 %1, metadata !8469, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.value(metadata i8* null, metadata !8470, metadata !DIExpression()), !dbg !8471
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8472

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !8471
  call void @llvm.dbg.value(metadata i8* %6, metadata !8470, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.value(metadata i8* %5, metadata !8468, metadata !DIExpression()), !dbg !8471
  %7 = load i8, i8* %5, align 1, !dbg !8473
  %8 = icmp eq i8 %7, %3, !dbg !8476
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !8477
  call void @llvm.dbg.value(metadata i8* %9, metadata !8470, metadata !DIExpression()), !dbg !8471
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8478
  call void @llvm.dbg.value(metadata i8* %10, metadata !8468, metadata !DIExpression()), !dbg !8471
  %11 = icmp eq i8 %7, 0, !dbg !8479
  br i1 %11, label %12, label %4, !dbg !8479, !llvm.loop !8480

12:                                               ; preds = %4
  ret i8* %9, !dbg !8482
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #9 !dbg !8483 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8487, metadata !DIExpression()), !dbg !8489
  call void @llvm.dbg.value(metadata i32 0, metadata !8488, metadata !DIExpression()), !dbg !8489
  %2 = load i8, i8* %0, align 1, !dbg !8490
  %3 = icmp eq i8 %2, 0, !dbg !8491
  br i1 %3, label %11, label %4, !dbg !8492

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8488, metadata !DIExpression()), !dbg !8489
  call void @llvm.dbg.value(metadata i8* %6, metadata !8487, metadata !DIExpression()), !dbg !8489
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8493
  call void @llvm.dbg.value(metadata i8* %7, metadata !8487, metadata !DIExpression()), !dbg !8489
  %8 = add i32 %5, 1, !dbg !8495
  call void @llvm.dbg.value(metadata i32 %8, metadata !8488, metadata !DIExpression()), !dbg !8489
  %9 = load i8, i8* %7, align 1, !dbg !8490
  %10 = icmp eq i8 %9, 0, !dbg !8491
  br i1 %10, label %11, label %4, !dbg !8492, !llvm.loop !8496

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8489
  ret i32 %12, !dbg !8498
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !8499 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8503, metadata !DIExpression()), !dbg !8506
  call void @llvm.dbg.value(metadata i32 %1, metadata !8504, metadata !DIExpression()), !dbg !8506
  call void @llvm.dbg.value(metadata i32 0, metadata !8505, metadata !DIExpression()), !dbg !8506
  %3 = load i8, i8* %0, align 1, !dbg !8507
  %4 = icmp ne i8 %3, 0, !dbg !8508
  %5 = icmp ne i32 %1, 0, !dbg !8509
  %6 = and i1 %4, %5, !dbg !8509
  br i1 %6, label %7, label %16, !dbg !8510

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8505, metadata !DIExpression()), !dbg !8506
  call void @llvm.dbg.value(metadata i8* %9, metadata !8503, metadata !DIExpression()), !dbg !8506
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8511
  call void @llvm.dbg.value(metadata i8* %10, metadata !8503, metadata !DIExpression()), !dbg !8506
  %11 = add nuw i32 %8, 1, !dbg !8513
  call void @llvm.dbg.value(metadata i32 %11, metadata !8505, metadata !DIExpression()), !dbg !8506
  %12 = load i8, i8* %10, align 1, !dbg !8507
  %13 = icmp ne i8 %12, 0, !dbg !8508
  %14 = icmp ult i32 %11, %1, !dbg !8509
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8509
  br i1 %15, label %7, label %16, !dbg !8510, !llvm.loop !8514

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8506
  ret i32 %17, !dbg !8516
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #9 !dbg !8517 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8521, metadata !DIExpression()), !dbg !8523
  call void @llvm.dbg.value(metadata i8* %1, metadata !8522, metadata !DIExpression()), !dbg !8523
  %3 = load i8, i8* %0, align 1, !dbg !8524
  %4 = load i8, i8* %1, align 1, !dbg !8525
  %5 = icmp ne i8 %3, %4, !dbg !8526
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8527
  br i1 %7, label %18, label %8, !dbg !8527

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8522, metadata !DIExpression()), !dbg !8523
  call void @llvm.dbg.value(metadata i8* %10, metadata !8521, metadata !DIExpression()), !dbg !8523
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8528
  call void @llvm.dbg.value(metadata i8* %11, metadata !8521, metadata !DIExpression()), !dbg !8523
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8530
  call void @llvm.dbg.value(metadata i8* %12, metadata !8522, metadata !DIExpression()), !dbg !8523
  %13 = load i8, i8* %11, align 1, !dbg !8524
  %14 = load i8, i8* %12, align 1, !dbg !8525
  %15 = icmp ne i8 %13, %14, !dbg !8526
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8527
  br i1 %17, label %18, label %8, !dbg !8527, !llvm.loop !8531

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8524
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8525
  %21 = zext i8 %19 to i32, !dbg !8534
  %22 = zext i8 %20 to i32, !dbg !8535
  %23 = sub nsw i32 %21, %22, !dbg !8536
  ret i32 %23, !dbg !8537
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #9 !dbg !8538 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8542, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.value(metadata i8* %1, metadata !8543, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.value(metadata i32 %2, metadata !8544, metadata !DIExpression()), !dbg !8545
  %4 = icmp eq i32 %2, 0, !dbg !8546
  br i1 %4, label %23, label %5, !dbg !8546

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8544, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.value(metadata i8* %7, metadata !8543, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.value(metadata i8* %8, metadata !8542, metadata !DIExpression()), !dbg !8545
  %9 = load i8, i8* %8, align 1, !dbg !8547
  %10 = load i8, i8* %7, align 1, !dbg !8548
  %11 = icmp ne i8 %9, %10, !dbg !8549
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8550
  br i1 %13, label %19, label %14, !dbg !8550

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8551
  call void @llvm.dbg.value(metadata i8* %15, metadata !8542, metadata !DIExpression()), !dbg !8545
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8553
  call void @llvm.dbg.value(metadata i8* %16, metadata !8543, metadata !DIExpression()), !dbg !8545
  %17 = add i32 %6, -1, !dbg !8554
  call void @llvm.dbg.value(metadata i32 %17, metadata !8544, metadata !DIExpression()), !dbg !8545
  %18 = icmp eq i32 %17, 0, !dbg !8546
  br i1 %18, label %23, label %5, !dbg !8546, !llvm.loop !8555

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8558
  %21 = zext i8 %10 to i32, !dbg !8559
  %22 = sub nsw i32 %20, %21, !dbg !8560
  br label %23, !dbg !8561

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8561
  ret i32 %24, !dbg !8562
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !8563 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8567, metadata !DIExpression()), !dbg !8572
  call void @llvm.dbg.value(metadata i8* %1, metadata !8568, metadata !DIExpression()), !dbg !8572
  call void @llvm.dbg.value(metadata i8** %2, metadata !8569, metadata !DIExpression()), !dbg !8572
  %4 = icmp eq i8* %0, null, !dbg !8573
  br i1 %4, label %5, label %7, !dbg !8573

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8574
  br label %7, !dbg !8573

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8573
  call void @llvm.dbg.value(metadata i8* %8, metadata !8570, metadata !DIExpression()), !dbg !8572
  %9 = load i8, i8* %8, align 1, !dbg !8575
  %10 = icmp eq i8 %9, 0, !dbg !8575
  br i1 %10, label %33, label %11, !dbg !8576

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8570, metadata !DIExpression()), !dbg !8572
  %14 = zext i8 %12 to i32, !dbg !8575
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !8577
  %16 = icmp eq i8* %15, null, !dbg !8576
  br i1 %16, label %21, label %17, !dbg !8578

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8579
  call void @llvm.dbg.value(metadata i8* %18, metadata !8570, metadata !DIExpression()), !dbg !8572
  %19 = load i8, i8* %18, align 1, !dbg !8575
  %20 = icmp eq i8 %19, 0, !dbg !8575
  br i1 %20, label %33, label %11, !dbg !8576, !llvm.loop !8581

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8571, metadata !DIExpression()), !dbg !8572
  %24 = zext i8 %22 to i32, !dbg !8583
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !8584
  %26 = icmp eq i8* %25, null, !dbg !8585
  br i1 %26, label %27, label %31, !dbg !8586

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8587
  call void @llvm.dbg.value(metadata i8* %28, metadata !8571, metadata !DIExpression()), !dbg !8572
  %29 = load i8, i8* %28, align 1, !dbg !8583
  %30 = icmp eq i8 %29, 0, !dbg !8583
  br i1 %30, label %33, label %21, !dbg !8589, !llvm.loop !8590

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8592
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8595
  br label %33, !dbg !8596

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8572
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8572
  store i8* %34, i8** %2, align 4, !dbg !8572
  ret i8* %35, !dbg !8597
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !8598 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8600, metadata !DIExpression()), !dbg !8602
  call void @llvm.dbg.value(metadata i8* %1, metadata !8601, metadata !DIExpression()), !dbg !8602
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8603
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8604
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !8605
  ret i8* %0, !dbg !8606
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8607 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8609, metadata !DIExpression()), !dbg !8614
  call void @llvm.dbg.value(metadata i8* %1, metadata !8610, metadata !DIExpression()), !dbg !8614
  call void @llvm.dbg.value(metadata i32 %2, metadata !8611, metadata !DIExpression()), !dbg !8614
  call void @llvm.dbg.value(metadata i8* %0, metadata !8612, metadata !DIExpression()), !dbg !8614
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8615
  call void @llvm.dbg.value(metadata i32 %4, metadata !8613, metadata !DIExpression()), !dbg !8614
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8616
  call void @llvm.dbg.value(metadata i8* %5, metadata !8609, metadata !DIExpression()), !dbg !8614
  call void @llvm.dbg.value(metadata i8* %1, metadata !8610, metadata !DIExpression()), !dbg !8614
  call void @llvm.dbg.value(metadata i32 %2, metadata !8611, metadata !DIExpression()), !dbg !8614
  call void @llvm.dbg.value(metadata i32 %2, metadata !8611, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8614
  %6 = icmp eq i32 %2, 0, !dbg !8617
  br i1 %6, label %18, label %7, !dbg !8618

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8619
  call void @llvm.dbg.value(metadata i8* %9, metadata !8609, metadata !DIExpression()), !dbg !8614
  call void @llvm.dbg.value(metadata i8* %10, metadata !8610, metadata !DIExpression()), !dbg !8614
  %12 = load i8, i8* %10, align 1, !dbg !8620
  %13 = icmp eq i8 %12, 0, !dbg !8621
  br i1 %13, label %18, label %14, !dbg !8622

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8623
  call void @llvm.dbg.value(metadata i8* %15, metadata !8610, metadata !DIExpression()), !dbg !8614
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8625
  call void @llvm.dbg.value(metadata i8* %16, metadata !8609, metadata !DIExpression()), !dbg !8614
  store i8 %12, i8* %9, align 1, !dbg !8626
  call void @llvm.dbg.value(metadata i32 %11, metadata !8611, metadata !DIExpression()), !dbg !8614
  call void @llvm.dbg.value(metadata i32 %11, metadata !8611, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8614
  %17 = icmp eq i32 %11, 0, !dbg !8617
  br i1 %17, label %18, label %7, !dbg !8618, !llvm.loop !8627

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8614
  store i8 0, i8* %19, align 1, !dbg !8629
  ret i8* %0, !dbg !8630
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #9 !dbg !8631 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8635, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.value(metadata i8* %1, metadata !8636, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.value(metadata i32 %2, metadata !8637, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.value(metadata i8* %0, metadata !8638, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.value(metadata i8* %1, metadata !8639, metadata !DIExpression()), !dbg !8640
  %4 = icmp eq i32 %2, 0, !dbg !8641
  br i1 %4, label %31, label %5, !dbg !8643

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8639, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.value(metadata i8* %0, metadata !8638, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.value(metadata i32 %2, metadata !8637, metadata !DIExpression()), !dbg !8640
  %6 = add i32 %2, -1, !dbg !8644
  call void @llvm.dbg.value(metadata i32 %6, metadata !8637, metadata !DIExpression()), !dbg !8640
  %7 = icmp eq i32 %6, 0, !dbg !8645
  br i1 %7, label %23, label %8, !dbg !8646

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8647
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8647
  br label %11, !dbg !8647

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8639, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.value(metadata i8* %14, metadata !8638, metadata !DIExpression()), !dbg !8640
  %15 = load i8, i8* %14, align 1, !dbg !8648
  %16 = load i8, i8* %13, align 1, !dbg !8649
  %17 = icmp eq i8 %15, %16, !dbg !8650
  br i1 %17, label %18, label %23, !dbg !8647

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8651
  call void @llvm.dbg.value(metadata i8* %19, metadata !8638, metadata !DIExpression()), !dbg !8640
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8653
  call void @llvm.dbg.value(metadata i8* %20, metadata !8639, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.value(metadata i32 %12, metadata !8637, metadata !DIExpression()), !dbg !8640
  %21 = add i32 %12, -1, !dbg !8644
  call void @llvm.dbg.value(metadata i32 %21, metadata !8637, metadata !DIExpression()), !dbg !8640
  %22 = icmp eq i32 %21, 0, !dbg !8645
  br i1 %22, label %23, label %11, !dbg !8646, !llvm.loop !8654

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8640
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8640
  %26 = load i8, i8* %24, align 1, !dbg !8656
  %27 = zext i8 %26 to i32, !dbg !8656
  %28 = load i8, i8* %25, align 1, !dbg !8657
  %29 = zext i8 %28 to i32, !dbg !8657
  %30 = sub nsw i32 %27, %29, !dbg !8658
  br label %31, !dbg !8659

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8640
  ret i32 %32, !dbg !8660
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8661 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8665, metadata !DIExpression()), !dbg !8670
  call void @llvm.dbg.value(metadata i8* %1, metadata !8666, metadata !DIExpression()), !dbg !8670
  call void @llvm.dbg.value(metadata i32 %2, metadata !8667, metadata !DIExpression()), !dbg !8670
  call void @llvm.dbg.value(metadata i8* %0, metadata !8668, metadata !DIExpression()), !dbg !8670
  call void @llvm.dbg.value(metadata i8* %1, metadata !8669, metadata !DIExpression()), !dbg !8670
  %4 = ptrtoint i8* %0 to i32, !dbg !8671
  %5 = ptrtoint i8* %1 to i32, !dbg !8671
  %6 = sub i32 %4, %5, !dbg !8671
  %7 = icmp ult i32 %6, %2, !dbg !8673
  br i1 %7, label %10, label %8, !dbg !8674

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8669, metadata !DIExpression()), !dbg !8670
  call void @llvm.dbg.value(metadata i8* %0, metadata !8668, metadata !DIExpression()), !dbg !8670
  call void @llvm.dbg.value(metadata i32 %2, metadata !8667, metadata !DIExpression()), !dbg !8670
  %9 = icmp eq i32 %2, 0, !dbg !8675
  br i1 %9, label %26, label %17, !dbg !8677

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8667, metadata !DIExpression()), !dbg !8670
  %12 = add i32 %11, -1, !dbg !8678
  call void @llvm.dbg.value(metadata i32 %12, metadata !8667, metadata !DIExpression()), !dbg !8670
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8681
  %14 = load i8, i8* %13, align 1, !dbg !8681
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8682
  store i8 %14, i8* %15, align 1, !dbg !8683
  %16 = icmp eq i32 %12, 0, !dbg !8684
  br i1 %16, label %26, label %10, !dbg !8685, !llvm.loop !8686

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8669, metadata !DIExpression()), !dbg !8670
  call void @llvm.dbg.value(metadata i8* %19, metadata !8668, metadata !DIExpression()), !dbg !8670
  call void @llvm.dbg.value(metadata i32 %20, metadata !8667, metadata !DIExpression()), !dbg !8670
  %21 = load i8, i8* %18, align 1, !dbg !8688
  store i8 %21, i8* %19, align 1, !dbg !8690
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8691
  call void @llvm.dbg.value(metadata i8* %22, metadata !8668, metadata !DIExpression()), !dbg !8670
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8692
  call void @llvm.dbg.value(metadata i8* %23, metadata !8669, metadata !DIExpression()), !dbg !8670
  %24 = add i32 %20, -1, !dbg !8693
  call void @llvm.dbg.value(metadata i32 %24, metadata !8667, metadata !DIExpression()), !dbg !8670
  %25 = icmp eq i32 %24, 0, !dbg !8675
  br i1 %25, label %26, label %17, !dbg !8677, !llvm.loop !8694

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8696
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8697 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8703, metadata !DIExpression()), !dbg !8708
  call void @llvm.dbg.value(metadata i8* %1, metadata !8704, metadata !DIExpression()), !dbg !8708
  call void @llvm.dbg.value(metadata i32 %2, metadata !8705, metadata !DIExpression()), !dbg !8708
  call void @llvm.dbg.value(metadata i8* %0, metadata !8706, metadata !DIExpression()), !dbg !8708
  call void @llvm.dbg.value(metadata i8* %1, metadata !8707, metadata !DIExpression()), !dbg !8708
  %4 = icmp eq i32 %2, 0, !dbg !8709
  br i1 %4, label %14, label %5, !dbg !8710

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8707, metadata !DIExpression()), !dbg !8708
  call void @llvm.dbg.value(metadata i8* %7, metadata !8706, metadata !DIExpression()), !dbg !8708
  call void @llvm.dbg.value(metadata i32 %8, metadata !8705, metadata !DIExpression()), !dbg !8708
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8711
  call void @llvm.dbg.value(metadata i8* %9, metadata !8707, metadata !DIExpression()), !dbg !8708
  %10 = load i8, i8* %6, align 1, !dbg !8713
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8714
  call void @llvm.dbg.value(metadata i8* %11, metadata !8706, metadata !DIExpression()), !dbg !8708
  store i8 %10, i8* %7, align 1, !dbg !8715
  %12 = add i32 %8, -1, !dbg !8716
  call void @llvm.dbg.value(metadata i32 %12, metadata !8705, metadata !DIExpression()), !dbg !8708
  %13 = icmp eq i32 %12, 0, !dbg !8709
  br i1 %13, label %14, label %5, !dbg !8710, !llvm.loop !8717

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8719
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !8720 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8724, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.value(metadata i32 %1, metadata !8725, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.value(metadata i32 %2, metadata !8726, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.value(metadata i8* %0, metadata !8727, metadata !DIExpression()), !dbg !8729
  %4 = trunc i32 %1 to i8, !dbg !8730
  call void @llvm.dbg.value(metadata i8 %4, metadata !8728, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.value(metadata i32 %2, metadata !8726, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.value(metadata i8* %0, metadata !8727, metadata !DIExpression()), !dbg !8729
  %5 = icmp eq i32 %2, 0, !dbg !8731
  br i1 %5, label %12, label %6, !dbg !8732

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8726, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.value(metadata i8* %8, metadata !8727, metadata !DIExpression()), !dbg !8729
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8733
  call void @llvm.dbg.value(metadata i8* %9, metadata !8727, metadata !DIExpression()), !dbg !8729
  store i8 %4, i8* %8, align 1, !dbg !8735
  %10 = add i32 %7, -1, !dbg !8736
  call void @llvm.dbg.value(metadata i32 %10, metadata !8726, metadata !DIExpression()), !dbg !8729
  %11 = icmp eq i32 %10, 0, !dbg !8731
  br i1 %11, label %12, label %6, !dbg !8732, !llvm.loop !8737

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8739
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #9 !dbg !8740 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8744, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.value(metadata i32 %1, metadata !8745, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.value(metadata i32 %2, metadata !8746, metadata !DIExpression()), !dbg !8750
  %4 = icmp eq i32 %2, 0, !dbg !8751
  br i1 %4, label %17, label %5, !dbg !8752

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8753

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8754
  call void @llvm.dbg.value(metadata i8* %9, metadata !8747, metadata !DIExpression()), !dbg !8754
  call void @llvm.dbg.value(metadata i32 %8, metadata !8746, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.value(metadata i8* %9, metadata !8747, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8754
  %10 = load i8, i8* %9, align 1, !dbg !8755
  %11 = icmp eq i8 %10, %6, !dbg !8758
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8759
  call void @llvm.dbg.value(metadata i8* %12, metadata !8747, metadata !DIExpression()), !dbg !8754
  call void @llvm.dbg.value(metadata i32 %13, metadata !8746, metadata !DIExpression()), !dbg !8750
  br i1 %15, label %16, label %7, !dbg !8759, !llvm.loop !8760

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8762

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8750
  ret i8* %19, !dbg !8763
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #6 !dbg !8764 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8766, metadata !DIExpression()), !dbg !8767
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8768
  ret void, !dbg !8769
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !8770 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8772, metadata !DIExpression()), !dbg !8773
  ret i32 -1, !dbg !8774
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8775 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8779, metadata !DIExpression()), !dbg !8781
  call void @llvm.dbg.value(metadata i32* %1, metadata !8780, metadata !DIExpression()), !dbg !8781
  %3 = ptrtoint i32* %1 to i32, !dbg !8782
  %4 = and i32 %3, -2, !dbg !8782
  %5 = icmp eq i32 %4, 2, !dbg !8782
  br i1 %5, label %6, label %9, !dbg !8782

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8783
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8783
  br label %9, !dbg !8784

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8784
  ret i32 %10, !dbg !8785
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8786 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8788, metadata !DIExpression()), !dbg !8790
  call void @llvm.dbg.value(metadata i32* %1, metadata !8789, metadata !DIExpression()), !dbg !8790
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8791
  ret i32 %3, !dbg !8792
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8793 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8796, metadata !DIExpression()), !dbg !8798
  call void @llvm.dbg.value(metadata i32* %1, metadata !8797, metadata !DIExpression()), !dbg !8798
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8799, !srcloc !8801
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8802
  ret i32 %3, !dbg !8803
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8804 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8809, metadata !DIExpression()), !dbg !8813
  call void @llvm.dbg.value(metadata i32* %1, metadata !8810, metadata !DIExpression()), !dbg !8813
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8814
  call void @llvm.dbg.value(metadata i32 %3, metadata !8811, metadata !DIExpression()), !dbg !8813
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8815
  call void @llvm.dbg.value(metadata i32 %4, metadata !8812, metadata !DIExpression()), !dbg !8813
  %5 = icmp ne i32 %3, %4, !dbg !8816
  %6 = sext i1 %5 to i32, !dbg !8817
  ret i32 %6, !dbg !8818
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8819 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8823, metadata !DIExpression()), !dbg !8827
  call void @llvm.dbg.value(metadata i32 %1, metadata !8824, metadata !DIExpression()), !dbg !8827
  call void @llvm.dbg.value(metadata i32 %2, metadata !8825, metadata !DIExpression()), !dbg !8827
  call void @llvm.dbg.value(metadata i32* %3, metadata !8826, metadata !DIExpression()), !dbg !8827
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8828
  ret i32 %5, !dbg !8829
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8830 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8832, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata i32 %1, metadata !8833, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata i32 %2, metadata !8834, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata i32* %3, metadata !8835, metadata !DIExpression()), !dbg !8836
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8837, !srcloc !8839
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8840
  ret i32 %5, !dbg !8841
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8842 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8844, metadata !DIExpression()), !dbg !8852
  call void @llvm.dbg.value(metadata i32 %1, metadata !8845, metadata !DIExpression()), !dbg !8852
  call void @llvm.dbg.value(metadata i32 %2, metadata !8846, metadata !DIExpression()), !dbg !8852
  call void @llvm.dbg.value(metadata i32* %3, metadata !8847, metadata !DIExpression()), !dbg !8852
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8853
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8855
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8855
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8855
  br i1 %11, label %33, label %12, !dbg !8855

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8852
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8852
  call void @llvm.dbg.value(metadata i8* %14, metadata !8850, metadata !DIExpression()), !dbg !8852
  call void @llvm.dbg.value(metadata i32 %13, metadata !8848, metadata !DIExpression()), !dbg !8852
  call void @llvm.dbg.value(metadata i32 %1, metadata !8849, metadata !DIExpression()), !dbg !8852
  br label %15, !dbg !8856

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8858
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8852
  call void @llvm.dbg.value(metadata i8* %17, metadata !8850, metadata !DIExpression()), !dbg !8852
  call void @llvm.dbg.value(metadata i32 %16, metadata !8849, metadata !DIExpression()), !dbg !8852
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8859
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8862
  call void @llvm.dbg.value(metadata i8* %19, metadata !8850, metadata !DIExpression()), !dbg !8852
  %20 = load i8, i8* %17, align 1, !dbg !8863
  %21 = zext i8 %20 to i32, !dbg !8864
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8859
  %23 = icmp eq i32 %22, -1, !dbg !8865
  br i1 %23, label %30, label %24, !dbg !8866

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8867
  call void @llvm.dbg.value(metadata i32 %25, metadata !8849, metadata !DIExpression()), !dbg !8852
  %26 = icmp eq i32 %25, 0, !dbg !8868
  br i1 %26, label %27, label %15, !dbg !8869, !llvm.loop !8870

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8872
  call void @llvm.dbg.value(metadata i32 %28, metadata !8848, metadata !DIExpression()), !dbg !8852
  %29 = icmp eq i32 %28, 0, !dbg !8873
  br i1 %29, label %30, label %12, !dbg !8874, !llvm.loop !8875

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8852
  call void @llvm.dbg.value(metadata i32 %31, metadata !8848, metadata !DIExpression()), !dbg !8852
  call void @llvm.dbg.label(metadata !8851), !dbg !8878
  %32 = sub i32 %2, %31, !dbg !8879
  br label %33, !dbg !8880

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8852
  ret i32 %34, !dbg !8881
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8882 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8886, metadata !DIExpression()), !dbg !8887
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8888
  %3 = icmp eq i32 %2, -1, !dbg !8890
  br i1 %3, label %8, label %4, !dbg !8891

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8892
  %6 = icmp eq i32 %5, -1, !dbg !8893
  %7 = sext i1 %6 to i32, !dbg !8892
  br label %8, !dbg !8894

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8887
  ret i32 %9, !dbg !8895
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @rtio_simple_submit(%struct.rtio* noundef %0) #1 !dbg !8896 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !8987, metadata !DIExpression()), !dbg !8993
  %2 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !8994
  %3 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !8994
  %4 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %3, i32 0, i32 0, i32 3, !dbg !8994
  %5 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %4) #24, !dbg !8994
  %6 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !8994
  %7 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 1, !dbg !8994
  %8 = load i32, i32* %7, align 4, !dbg !8994
  %9 = add i32 %8, %5, !dbg !8994
  call void @llvm.dbg.value(metadata i32 %9, metadata !8990, metadata !DIExpression()), !dbg !8995
  %10 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 2, !dbg !8994
  %11 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %10) #24, !dbg !8994
  %12 = icmp eq i32 %9, %11, !dbg !8994
  call void @llvm.dbg.value(metadata i1 %12, metadata !8992, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8995
  br i1 %12, label %23, label %13, !dbg !8994

13:                                               ; preds = %1
  %14 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !8996
  %15 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %14, i32 0, i32 0, i32 1, !dbg !8996
  %16 = load i32, i32* %15, align 4, !dbg !8996
  %17 = add i32 %16, 1, !dbg !8996
  store i32 %17, i32* %15, align 4, !dbg !8996
  %18 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !8994
  %19 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %18, i32 0, i32 0, i32 4, !dbg !8994
  %20 = load i32, i32* %19, align 4, !dbg !8994
  %21 = and i32 %20, %9, !dbg !8994
  %22 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %18, i32 0, i32 1, i32 %21, !dbg !8994
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %22, metadata !8988, metadata !DIExpression()), !dbg !8993
  tail call fastcc void @rtio_iodev_submit(%struct.rtio_sqe* noundef nonnull %22, %struct.rtio* noundef nonnull %0) #24, !dbg !8999
  br label %23, !dbg !9002

23:                                               ; preds = %1, %13
  ret i32 0, !dbg !9003
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get.90(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9004 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9006, metadata !DIExpression()), !dbg !9007
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !9008
  ret i32 %2, !dbg !9009
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_iodev_submit(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) unnamed_addr #1 !dbg !9010 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !9012, metadata !DIExpression()), !dbg !9014
  call void @llvm.dbg.value(metadata %struct.rtio* %1, metadata !9013, metadata !DIExpression()), !dbg !9014
  %3 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !9015
  %4 = load %struct.rtio_iodev*, %struct.rtio_iodev** %3, align 4, !dbg !9015
  %5 = getelementptr inbounds %struct.rtio_iodev, %struct.rtio_iodev* %4, i32 0, i32 0, !dbg !9016
  %6 = load %struct.rtio_iodev_api*, %struct.rtio_iodev_api** %5, align 4, !dbg !9016
  %7 = getelementptr inbounds %struct.rtio_iodev_api, %struct.rtio_iodev_api* %6, i32 0, i32 0, !dbg !9017
  %8 = load void (%struct.rtio_sqe*, %struct.rtio*)*, void (%struct.rtio_sqe*, %struct.rtio*)** %7, align 4, !dbg !9017
  tail call void %8(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) #25, !dbg !9018
  ret void, !dbg !9019
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_simple_ok(%struct.rtio* noundef %0, %struct.rtio_sqe* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !9020 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9022, metadata !DIExpression()), !dbg !9026
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9023, metadata !DIExpression()), !dbg !9026
  call void @llvm.dbg.value(metadata i32 %2, metadata !9024, metadata !DIExpression()), !dbg !9026
  %4 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !9027
  %5 = load i8*, i8** %4, align 4, !dbg !9027
  call void @llvm.dbg.value(metadata i8* %5, metadata !9025, metadata !DIExpression()), !dbg !9026
  %6 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9028
  %7 = load %struct.rtio_sq*, %struct.rtio_sq** %6, align 4, !dbg !9028
  %8 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %7, i32 0, i32 0, i32 1, !dbg !9028
  %9 = load i32, i32* %8, align 4, !dbg !9028
  %10 = icmp eq i32 %9, 0, !dbg !9028
  br i1 %10, label %15, label %11, !dbg !9031

11:                                               ; preds = %3
  %12 = add i32 %9, -1, !dbg !9032
  store i32 %12, i32* %8, align 4, !dbg !9032
  %13 = load %struct.rtio_sq*, %struct.rtio_sq** %6, align 4, !dbg !9032
  %14 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 3, !dbg !9032
  tail call fastcc void @atomic_add.93(i32* noundef nonnull %14) #24, !dbg !9032
  br label %15, !dbg !9032

15:                                               ; preds = %11, %3
  tail call fastcc void @rtio_cqe_submit(%struct.rtio* noundef nonnull %0, i32 noundef %2, i8* noundef %5) #24, !dbg !9034
  %16 = tail call i32 @rtio_simple_submit(%struct.rtio* noundef nonnull %0) #24, !dbg !9035
  ret void, !dbg !9036
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add.93(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9037 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9039, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.value(metadata i32 1, metadata !9040, metadata !DIExpression()), !dbg !9041
  %2 = atomicrmw add i32* %0, i32 1 seq_cst, align 4, !dbg !9042
  ret void, !dbg !9043
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @rtio_cqe_submit(%struct.rtio* nocapture noundef %0, i32 noundef %1, i8* noundef %2) unnamed_addr #5 !dbg !9044 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9048, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.value(metadata i32 %1, metadata !9049, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.value(metadata i8* %2, metadata !9050, metadata !DIExpression()), !dbg !9056
  %4 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 3, !dbg !9057
  %5 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9057
  %6 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %5, i32 0, i32 0, i32 2, !dbg !9057
  %7 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %6) #24, !dbg !9057
  %8 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9057
  %9 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 0, !dbg !9057
  %10 = load i32, i32* %9, align 4, !dbg !9057
  %11 = add i32 %10, %7, !dbg !9057
  call void @llvm.dbg.value(metadata i32 %11, metadata !9053, metadata !DIExpression()), !dbg !9058
  %12 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 3, !dbg !9057
  %13 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %12) #24, !dbg !9057
  %14 = sub i32 %11, %13, !dbg !9057
  %15 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9057
  %16 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 4, !dbg !9057
  %17 = load i32, i32* %16, align 4, !dbg !9057
  %18 = add i32 %17, 1, !dbg !9057
  %19 = icmp ult i32 %14, %18, !dbg !9057
  call void @llvm.dbg.value(metadata i1 %19, metadata !9055, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9058
  br i1 %19, label %22, label %20, !dbg !9057

20:                                               ; preds = %3
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9051, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9056
  %21 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 1, !dbg !9059
  tail call fastcc void @atomic_inc(i32* noundef nonnull %21) #24, !dbg !9062
  br label %40, !dbg !9063

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 0, !dbg !9064
  %24 = load i32, i32* %23, align 4, !dbg !9064
  %25 = add i32 %24, 1, !dbg !9064
  store i32 %25, i32* %23, align 4, !dbg !9064
  %26 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9057
  %27 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 0, i32 4, !dbg !9057
  %28 = load i32, i32* %27, align 4, !dbg !9057
  %29 = and i32 %28, %11, !dbg !9057
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9051, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9056
  %30 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 0, !dbg !9067
  store i32 %1, i32* %30, align 4, !dbg !9069
  %31 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 1, !dbg !9070
  store i8* %2, i8** %31, align 4, !dbg !9071
  %32 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9072
  %33 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %32, i32 0, i32 0, i32 0, !dbg !9072
  %34 = load i32, i32* %33, align 4, !dbg !9072
  %35 = icmp eq i32 %34, 0, !dbg !9072
  br i1 %35, label %40, label %36, !dbg !9075

36:                                               ; preds = %22
  %37 = add i32 %34, -1, !dbg !9076
  store i32 %37, i32* %33, align 4, !dbg !9076
  %38 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9076
  %39 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %38, i32 0, i32 0, i32 2, !dbg !9076
  tail call fastcc void @atomic_add.93(i32* noundef nonnull %39) #24, !dbg !9076
  br label %40, !dbg !9076

40:                                               ; preds = %22, %36, %20
  ret void, !dbg !9078
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_inc(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9079 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9083, metadata !DIExpression()), !dbg !9084
  tail call fastcc void @atomic_add.93(i32* noundef %0) #24, !dbg !9085
  ret void, !dbg !9086
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_simple_err(%struct.rtio* noundef %0, %struct.rtio_sqe* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !9087 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9089, metadata !DIExpression()), !dbg !9104
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9090, metadata !DIExpression()), !dbg !9104
  call void @llvm.dbg.value(metadata i32 %2, metadata !9091, metadata !DIExpression()), !dbg !9104
  %4 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !9105
  call void @llvm.dbg.value(metadata i8* undef, metadata !9093, metadata !DIExpression()), !dbg !9104
  %5 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 2, !dbg !9106
  %6 = load i16, i16* %5, align 2, !dbg !9106
  %7 = and i16 %6, 1, !dbg !9107
  %8 = icmp eq i16 %7, 0, !dbg !9108
  call void @llvm.dbg.value(metadata i1 %8, metadata !9094, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9104
  %9 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9109
  %10 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9109
  %11 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %10, i32 0, i32 0, i32 1, !dbg !9109
  %12 = load i32, i32* %11, align 4, !dbg !9109
  %13 = icmp eq i32 %12, 0, !dbg !9109
  br i1 %13, label %18, label %14, !dbg !9112

14:                                               ; preds = %3
  %15 = add i32 %12, -1, !dbg !9113
  store i32 %15, i32* %11, align 4, !dbg !9113
  %16 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9113
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 3, !dbg !9113
  tail call fastcc void @atomic_add.93(i32* noundef nonnull %17) #24, !dbg !9113
  br label %18, !dbg !9113

18:                                               ; preds = %14, %3
  %19 = load i8*, i8** %4, align 4, !dbg !9115
  tail call fastcc void @rtio_cqe_submit(%struct.rtio* noundef nonnull %0, i32 noundef %2, i8* noundef %19) #24, !dbg !9116
  br i1 %8, label %69, label %20, !dbg !9117

20:                                               ; preds = %18
  %21 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9118
  %22 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %21, i32 0, i32 0, i32 3, !dbg !9118
  %23 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %22) #24, !dbg !9118
  %24 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9118
  %25 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %24, i32 0, i32 0, i32 1, !dbg !9118
  %26 = load i32, i32* %25, align 4, !dbg !9118
  %27 = add i32 %26, %23, !dbg !9118
  call void @llvm.dbg.value(metadata i32 %27, metadata !9095, metadata !DIExpression()), !dbg !9119
  %28 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %24, i32 0, i32 0, i32 2, !dbg !9118
  %29 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %28) #24, !dbg !9118
  %30 = icmp eq i32 %27, %29, !dbg !9118
  call void @llvm.dbg.value(metadata i1 %30, metadata !9099, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9119
  br i1 %30, label %71, label %31, !dbg !9118

31:                                               ; preds = %20, %56
  %32 = phi i32 [ %63, %56 ], [ %27, %20 ]
  %33 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9120
  %34 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %33, i32 0, i32 0, i32 1, !dbg !9120
  %35 = load i32, i32* %34, align 4, !dbg !9120
  %36 = add i32 %35, 1, !dbg !9120
  store i32 %36, i32* %34, align 4, !dbg !9120
  %37 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9120
  %38 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 0, i32 4, !dbg !9120
  %39 = load i32, i32* %38, align 4, !dbg !9120
  %40 = and i32 %39, %32, !dbg !9120
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_sq* %37, i32 %40), metadata !9092, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 20, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9104
  %41 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 1, i32 %40, i32 2, !dbg !9121
  %42 = load i16, i16* %41, align 2, !dbg !9121
  %43 = and i16 %42, 1, !dbg !9122
  %44 = icmp eq i16 %43, 0, !dbg !9123
  br i1 %44, label %67, label %45, !dbg !9124

45:                                               ; preds = %31
  %46 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 1, i32 %40, i32 4, !dbg !9125
  %47 = load i8*, i8** %46, align 4, !dbg !9125
  call void @llvm.dbg.value(metadata i8* %47, metadata !9093, metadata !DIExpression()), !dbg !9104
  %48 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9126
  %49 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %48, i32 0, i32 0, i32 1, !dbg !9126
  %50 = load i32, i32* %49, align 4, !dbg !9126
  %51 = icmp eq i32 %50, 0, !dbg !9126
  br i1 %51, label %56, label %52, !dbg !9129

52:                                               ; preds = %45
  %53 = add i32 %50, -1, !dbg !9130
  store i32 %53, i32* %49, align 4, !dbg !9130
  %54 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9130
  %55 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %54, i32 0, i32 0, i32 3, !dbg !9130
  tail call fastcc void @atomic_add.93(i32* noundef nonnull %55) #24, !dbg !9130
  br label %56, !dbg !9130

56:                                               ; preds = %52, %45
  tail call fastcc void @rtio_cqe_submit(%struct.rtio* noundef nonnull %0, i32 noundef -140, i8* noundef %47) #24, !dbg !9132
  %57 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9133
  %58 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %57, i32 0, i32 0, i32 3, !dbg !9133
  %59 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %58) #24, !dbg !9133
  %60 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9133
  %61 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %60, i32 0, i32 0, i32 1, !dbg !9133
  %62 = load i32, i32* %61, align 4, !dbg !9133
  %63 = add i32 %62, %59, !dbg !9133
  call void @llvm.dbg.value(metadata i32 %63, metadata !9100, metadata !DIExpression()), !dbg !9134
  %64 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %60, i32 0, i32 0, i32 2, !dbg !9133
  %65 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %64) #24, !dbg !9133
  %66 = icmp eq i32 %63, %65, !dbg !9133
  call void @llvm.dbg.value(metadata i1 %66, metadata !9103, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9134
  br i1 %66, label %71, label %31, !dbg !9133

67:                                               ; preds = %31
  %68 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 1, i32 %40, !dbg !9120
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %68, metadata !9092, metadata !DIExpression()), !dbg !9104
  tail call fastcc void @rtio_iodev_submit(%struct.rtio_sqe* noundef nonnull %68, %struct.rtio* noundef nonnull %0) #24, !dbg !9135
  br label %71, !dbg !9138

69:                                               ; preds = %18
  %70 = tail call i32 @rtio_simple_submit(%struct.rtio* noundef nonnull %0) #24, !dbg !9139
  br label %71

71:                                               ; preds = %56, %20, %67, %69
  ret void, !dbg !9141
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @rtio_concurrent_submit(%struct.rtio* noundef %0) local_unnamed_addr #1 !dbg !9142 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9144, metadata !DIExpression()), !dbg !9175
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.98, i32 0, i32 0), i32 noundef 73) #25, !dbg !9176
  %2 = bitcast %struct.rtio* %0 to %struct.rtio_concurrent_executor**, !dbg !9181
  %3 = load %struct.rtio_concurrent_executor*, %struct.rtio_concurrent_executor** %2, align 4, !dbg !9181
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %3, metadata !9145, metadata !DIExpression()), !dbg !9175
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9182, metadata !DIExpression()) #23, !dbg !9189
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9191, !srcloc !9197
  call void @llvm.dbg.value(metadata i32 undef, metadata !9194, metadata !DIExpression()) #23, !dbg !9198
  call void @llvm.dbg.value(metadata i32 undef, metadata !9195, metadata !DIExpression()) #23, !dbg !9198
  call void @llvm.dbg.value(metadata i32 undef, metadata !9188, metadata !DIExpression()) #23, !dbg !9189
  call void @llvm.dbg.value(metadata i32 undef, metadata !9148, metadata !DIExpression()), !dbg !9175
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 6, !dbg !9199
  %6 = load %struct.rtio_sqe*, %struct.rtio_sqe** %5, align 4, !dbg !9199
  %7 = icmp eq %struct.rtio_sqe* %6, null, !dbg !9200
  %8 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9201
  %9 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9201
  br i1 %7, label %10, label %26, !dbg !9202

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 3, !dbg !9203
  %12 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %11) #24, !dbg !9203
  %13 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9203
  %14 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 1, !dbg !9203
  %15 = load i32, i32* %14, align 4, !dbg !9203
  %16 = add i32 %15, %12, !dbg !9203
  call void @llvm.dbg.value(metadata i32 %16, metadata !9153, metadata !DIExpression()), !dbg !9204
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 2, !dbg !9203
  %18 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %17) #24, !dbg !9203
  %19 = icmp eq i32 %16, %18, !dbg !9203
  call void @llvm.dbg.value(metadata i1 %19, metadata !9157, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9204
  br i1 %19, label %45, label %20, !dbg !9203

20:                                               ; preds = %10
  %21 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9203
  %22 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %21, i32 0, i32 0, i32 4, !dbg !9203
  %23 = load i32, i32* %22, align 4, !dbg !9203
  %24 = and i32 %23, %16, !dbg !9203
  %25 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %21, i32 0, i32 1, i32 %24, !dbg !9203
  br label %47, !dbg !9203

26:                                               ; preds = %1
  %27 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 1, i32 0, !dbg !9205
  %28 = ptrtoint %struct.rtio_sqe* %6 to i32, !dbg !9205
  %29 = ptrtoint %struct.rtio_sqe* %27 to i32, !dbg !9205
  %30 = sub i32 %28, %29, !dbg !9205
  %31 = sdiv exact i32 %30, 20, !dbg !9205
  call void @llvm.dbg.value(metadata i32 %31, metadata !9158, metadata !DIExpression()), !dbg !9206
  %32 = add nsw i32 %31, 1, !dbg !9205
  %33 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 4, !dbg !9205
  %34 = load i32, i32* %33, align 4, !dbg !9205
  %35 = and i32 %32, %34, !dbg !9205
  %36 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 2, !dbg !9205
  %37 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %36) #24, !dbg !9205
  %38 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9205
  %39 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %38, i32 0, i32 0, i32 4, !dbg !9205
  %40 = load i32, i32* %39, align 4, !dbg !9205
  %41 = and i32 %40, %37, !dbg !9205
  %42 = icmp eq i32 %35, %41, !dbg !9205
  call void @llvm.dbg.value(metadata i1 %42, metadata !9161, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9206
  %43 = and i32 %32, %40, !dbg !9205
  %44 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %38, i32 0, i32 1, i32 %43, !dbg !9205
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9146, metadata !DIExpression()), !dbg !9175
  br i1 %42, label %45, label %47

45:                                               ; preds = %26, %10
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9146, metadata !DIExpression()), !dbg !9175
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9147, metadata !DIExpression()), !dbg !9175
  %46 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 5, !dbg !9207
  store %struct.rtio_sqe* null, %struct.rtio_sqe** %46, align 4, !dbg !9208
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %112, metadata !9146, metadata !DIExpression()), !dbg !9175
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %111, metadata !9147, metadata !DIExpression()), !dbg !9175
  br label %140, !dbg !9209

47:                                               ; preds = %20, %26
  %48 = phi %struct.rtio_sqe* [ %44, %26 ], [ %25, %20 ], !dbg !9201
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9146, metadata !DIExpression()), !dbg !9175
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9147, metadata !DIExpression()), !dbg !9175
  %49 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 8
  %50 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 7
  %51 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9146, metadata !DIExpression()), !dbg !9175
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9147, metadata !DIExpression()), !dbg !9175
  %52 = tail call fastcc zeroext i1 @conex_task_free(%struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9210
  br i1 %52, label %55, label %110, !dbg !9211

53:                                               ; preds = %89
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %109, metadata !9146, metadata !DIExpression()), !dbg !9175
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %90, metadata !9147, metadata !DIExpression()), !dbg !9175
  %54 = tail call fastcc zeroext i1 @conex_task_free(%struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9210
  br i1 %54, label %55, label %110, !dbg !9211

55:                                               ; preds = %47, %53
  %56 = phi %struct.rtio_sqe* [ %109, %53 ], [ %48, %47 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %56, metadata !9146, metadata !DIExpression()), !dbg !9175
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.100, i32 0, i32 0), i32 noundef 73, %struct.rtio_sqe* noundef nonnull %56) #25, !dbg !9212
  %57 = tail call fastcc zeroext i16 @conex_task_next(%struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9217
  call void @llvm.dbg.value(metadata i16 %57, metadata !9162, metadata !DIExpression()), !dbg !9218
  %58 = zext i16 %57 to i32, !dbg !9219
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.101, i32 0, i32 0), i32 noundef 73, i32 noundef %58) #25, !dbg !9219
  %59 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %49, align 4, !dbg !9224
  %60 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %59, i32 %58, !dbg !9225
  store %struct.rtio_sqe* %56, %struct.rtio_sqe** %60, align 4, !dbg !9226
  %61 = load i8*, i8** %50, align 4, !dbg !9227
  %62 = getelementptr inbounds i8, i8* %61, i32 %58, !dbg !9228
  store i8 2, i8* %62, align 1, !dbg !9229
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.102, i32 0, i32 0), i32 noundef 73, %struct.rtio_sqe* noundef nonnull %56) #25, !dbg !9230
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %56, metadata !9146, metadata !DIExpression()), !dbg !9175
  br label %63, !dbg !9235

63:                                               ; preds = %55, %69
  %64 = phi %struct.rtio_sqe* [ %56, %55 ], [ %88, %69 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %64, metadata !9146, metadata !DIExpression()), !dbg !9175
  %65 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %64, i32 0, i32 2, !dbg !9236
  %66 = load i16, i16* %65, align 2, !dbg !9236
  %67 = and i16 %66, 1, !dbg !9237
  %68 = icmp eq i16 %67, 0, !dbg !9235
  br i1 %68, label %89, label %69, !dbg !9238

69:                                               ; preds = %63
  %70 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9239
  %71 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %70, i32 0, i32 1, i32 0, !dbg !9239
  %72 = ptrtoint %struct.rtio_sqe* %64 to i32, !dbg !9239
  %73 = ptrtoint %struct.rtio_sqe* %71 to i32, !dbg !9239
  %74 = sub i32 %72, %73, !dbg !9239
  %75 = sdiv exact i32 %74, 20, !dbg !9239
  call void @llvm.dbg.value(metadata i32 %75, metadata !9164, metadata !DIExpression()), !dbg !9240
  %76 = add nsw i32 %75, 1, !dbg !9239
  %77 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %70, i32 0, i32 0, i32 4, !dbg !9239
  %78 = load i32, i32* %77, align 4, !dbg !9239
  %79 = and i32 %76, %78, !dbg !9239
  %80 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %70, i32 0, i32 0, i32 2, !dbg !9239
  %81 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %80) #24, !dbg !9239
  %82 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9239
  %83 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %82, i32 0, i32 0, i32 4, !dbg !9239
  %84 = load i32, i32* %83, align 4, !dbg !9239
  %85 = and i32 %84, %81, !dbg !9239
  %86 = icmp eq i32 %79, %85, !dbg !9239
  call void @llvm.dbg.value(metadata i1 %86, metadata !9167, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9240
  %87 = and i32 %76, %84, !dbg !9239
  %88 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %82, i32 0, i32 1, i32 %87, !dbg !9239
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9146, metadata !DIExpression()), !dbg !9175
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9146, metadata !DIExpression()), !dbg !9175
  br i1 %86, label %89, label %63, !dbg !9235

89:                                               ; preds = %63, %69
  %90 = phi %struct.rtio_sqe* [ null, %69 ], [ %64, %63 ], !dbg !9175
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.103, i32 0, i32 0), i32 noundef 73, %struct.rtio_sqe* noundef %90) #25, !dbg !9241
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %90, metadata !9147, metadata !DIExpression()), !dbg !9175
  %91 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9246
  %92 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %91, i32 0, i32 1, i32 0, !dbg !9246
  %93 = ptrtoint %struct.rtio_sqe* %90 to i32, !dbg !9246
  %94 = ptrtoint %struct.rtio_sqe* %92 to i32, !dbg !9246
  %95 = sub i32 %93, %94, !dbg !9246
  %96 = sdiv exact i32 %95, 20, !dbg !9246
  call void @llvm.dbg.value(metadata i32 %96, metadata !9168, metadata !DIExpression()), !dbg !9247
  %97 = add nsw i32 %96, 1, !dbg !9246
  %98 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %91, i32 0, i32 0, i32 4, !dbg !9246
  %99 = load i32, i32* %98, align 4, !dbg !9246
  %100 = and i32 %97, %99, !dbg !9246
  %101 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %91, i32 0, i32 0, i32 2, !dbg !9246
  %102 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %101) #24, !dbg !9246
  %103 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9246
  %104 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %103, i32 0, i32 0, i32 4, !dbg !9246
  %105 = load i32, i32* %104, align 4, !dbg !9246
  %106 = and i32 %105, %102, !dbg !9246
  %107 = icmp eq i32 %100, %106, !dbg !9246
  call void @llvm.dbg.value(metadata i1 %107, metadata !9170, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9247
  %108 = and i32 %97, %105, !dbg !9246
  %109 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %103, i32 0, i32 1, i32 %108, !dbg !9246
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9146, metadata !DIExpression()), !dbg !9175
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9146, metadata !DIExpression()), !dbg !9175
  br i1 %107, label %110, label %53, !dbg !9248

110:                                              ; preds = %89, %53, %47
  %111 = phi %struct.rtio_sqe* [ %48, %47 ], [ %90, %53 ], [ %90, %89 ], !dbg !9175
  %112 = phi %struct.rtio_sqe* [ %48, %47 ], [ null, %89 ], [ %109, %53 ], !dbg !9175
  %113 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 5, !dbg !9207
  store %struct.rtio_sqe* %112, %struct.rtio_sqe** %113, align 4, !dbg !9208
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %112, metadata !9146, metadata !DIExpression()), !dbg !9175
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %111, metadata !9147, metadata !DIExpression()), !dbg !9175
  %114 = icmp eq %struct.rtio_sqe* %112, null, !dbg !9249
  br i1 %114, label %140, label %115, !dbg !9209

115:                                              ; preds = %110
  %116 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2
  %117 = load %struct.rtio_sq*, %struct.rtio_sq** %116, align 4, !dbg !9250
  %118 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %117, i32 0, i32 0, i32 4
  %119 = load i32, i32* %118, align 4, !dbg !9250
  br label %120, !dbg !9209

120:                                              ; preds = %115, %120
  %121 = phi i32 [ %119, %115 ], [ %135, %120 ], !dbg !9250
  %122 = phi %struct.rtio_sq* [ %117, %115 ], [ %133, %120 ], !dbg !9250
  %123 = phi %struct.rtio_sqe* [ %112, %115 ], [ %139, %120 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %123, metadata !9146, metadata !DIExpression()), !dbg !9175
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %123, metadata !9147, metadata !DIExpression()), !dbg !9175
  %124 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %122, i32 0, i32 1, i32 0, !dbg !9250
  %125 = ptrtoint %struct.rtio_sqe* %123 to i32, !dbg !9250
  %126 = ptrtoint %struct.rtio_sqe* %124 to i32, !dbg !9250
  %127 = sub i32 %125, %126, !dbg !9250
  %128 = sdiv exact i32 %127, 20, !dbg !9250
  call void @llvm.dbg.value(metadata i32 %128, metadata !9171, metadata !DIExpression()), !dbg !9251
  %129 = add nsw i32 %128, 1, !dbg !9250
  %130 = and i32 %129, %121, !dbg !9250
  %131 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %122, i32 0, i32 0, i32 2, !dbg !9250
  %132 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %131) #24, !dbg !9250
  %133 = load %struct.rtio_sq*, %struct.rtio_sq** %116, align 4, !dbg !9250
  %134 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %133, i32 0, i32 0, i32 4, !dbg !9250
  %135 = load i32, i32* %134, align 4, !dbg !9250
  %136 = and i32 %135, %132, !dbg !9250
  %137 = icmp eq i32 %130, %136, !dbg !9250
  call void @llvm.dbg.value(metadata i1 %137, metadata !9174, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9251
  %138 = and i32 %129, %135, !dbg !9250
  %139 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %133, i32 0, i32 1, i32 %138, !dbg !9250
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9146, metadata !DIExpression()), !dbg !9175
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9146, metadata !DIExpression()), !dbg !9175
  br i1 %137, label %140, label %120, !dbg !9209

140:                                              ; preds = %120, %45, %110
  %141 = phi %struct.rtio_sqe* [ %111, %110 ], [ null, %45 ], [ %123, %120 ], !dbg !9175
  %142 = extractvalue { i32, i32 } %4, 0, !dbg !9191
  call void @llvm.dbg.value(metadata i32 %142, metadata !9194, metadata !DIExpression()) #23, !dbg !9198
  call void @llvm.dbg.value(metadata i32 %142, metadata !9188, metadata !DIExpression()) #23, !dbg !9189
  call void @llvm.dbg.value(metadata i32 %142, metadata !9148, metadata !DIExpression()), !dbg !9175
  store %struct.rtio_sqe* %141, %struct.rtio_sqe** %5, align 4, !dbg !9252
  tail call fastcc void @conex_resume(%struct.rtio* noundef nonnull %0, %struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9253
  call void @llvm.dbg.value(metadata i32 undef, metadata !9254, metadata !DIExpression()) #23, !dbg !9260
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9259, metadata !DIExpression()) #23, !dbg !9260
  call void @llvm.dbg.value(metadata i32 undef, metadata !9262, metadata !DIExpression()) #23, !dbg !9265
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %142) #23, !dbg !9267, !srcloc !9268
  ret i32 0, !dbg !9269
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get.99(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9270 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9272, metadata !DIExpression()), !dbg !9273
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !9274
  ret i32 %2, !dbg !9275
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @conex_task_free(%struct.rtio_concurrent_executor* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9276 {
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %0, metadata !9280, metadata !DIExpression()), !dbg !9281
  %2 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 2, !dbg !9282
  %3 = load i16, i16* %2, align 4, !dbg !9282
  %4 = zext i16 %3 to i32, !dbg !9283
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 3, !dbg !9284
  %6 = load i16, i16* %5, align 2, !dbg !9284
  %7 = zext i16 %6 to i32, !dbg !9285
  %8 = sub nsw i32 %4, %7, !dbg !9286
  %9 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 4, !dbg !9287
  %10 = load i16, i16* %9, align 4, !dbg !9287
  %11 = zext i16 %10 to i32, !dbg !9288
  %12 = icmp sle i32 %8, %11, !dbg !9289
  ret i1 %12, !dbg !9290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc zeroext i16 @conex_task_next(%struct.rtio_concurrent_executor* nocapture noundef %0) unnamed_addr #11 !dbg !9291 {
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %0, metadata !9295, metadata !DIExpression()), !dbg !9297
  %2 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 2, !dbg !9298
  %3 = load i16, i16* %2, align 4, !dbg !9298
  call void @llvm.dbg.value(metadata i16 %3, metadata !9296, metadata !DIExpression()), !dbg !9297
  %4 = add i16 %3, 1, !dbg !9299
  store i16 %4, i16* %2, align 4, !dbg !9299
  ret i16 %3, !dbg !9300
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @conex_resume(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9301 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9305, metadata !DIExpression()), !dbg !9309
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %1, metadata !9306, metadata !DIExpression()), !dbg !9309
  %3 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 3, !dbg !9310
  %4 = load i16, i16* %3, align 2, !dbg !9310
  call void @llvm.dbg.value(metadata i16 %4, metadata !9307, metadata !DIExpression()), !dbg !9311
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 2
  call void @llvm.dbg.value(metadata i16 %4, metadata !9307, metadata !DIExpression()), !dbg !9311
  %6 = load i16, i16* %5, align 4, !dbg !9312
  %7 = icmp ult i16 %4, %6, !dbg !9314
  br i1 %7, label %8, label %13, !dbg !9315

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 7
  %10 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 4
  %11 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 8
  %12 = zext i16 %4 to i32, !dbg !9315
  br label %14, !dbg !9315

13:                                               ; preds = %35, %2
  ret void, !dbg !9316

14:                                               ; preds = %8, %35
  %15 = phi i16 [ %6, %8 ], [ %36, %35 ]
  %16 = phi i32 [ %12, %8 ], [ %37, %35 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !9307, metadata !DIExpression()), !dbg !9311
  %17 = load i8*, i8** %9, align 4, !dbg !9317
  %18 = load i16, i16* %10, align 4, !dbg !9320
  %19 = trunc i32 %16 to i16, !dbg !9321
  %20 = and i16 %18, %19, !dbg !9321
  %21 = zext i16 %20 to i32, !dbg !9321
  %22 = getelementptr inbounds i8, i8* %17, i32 %21, !dbg !9322
  %23 = load i8, i8* %22, align 1, !dbg !9322
  %24 = and i8 %23, 2, !dbg !9323
  %25 = icmp eq i8 %24, 0, !dbg !9323
  br i1 %25, label %35, label %26, !dbg !9324

26:                                               ; preds = %14
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6.104, i32 0, i32 0), i32 noundef 73, i32 noundef %16) #25, !dbg !9325
  %27 = load i8*, i8** %9, align 4, !dbg !9331
  %28 = getelementptr inbounds i8, i8* %27, i32 %16, !dbg !9332
  %29 = load i8, i8* %28, align 1, !dbg !9333
  %30 = and i8 %29, -3, !dbg !9333
  store i8 %30, i8* %28, align 1, !dbg !9333
  %31 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %11, align 4, !dbg !9334
  %32 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %31, i32 %16, !dbg !9335
  %33 = load %struct.rtio_sqe*, %struct.rtio_sqe** %32, align 4, !dbg !9335
  tail call fastcc void @rtio_iodev_submit.105(%struct.rtio_sqe* noundef %33, %struct.rtio* noundef %0) #24, !dbg !9336
  %34 = load i16, i16* %5, align 4, !dbg !9312
  br label %35, !dbg !9337

35:                                               ; preds = %14, %26
  %36 = phi i16 [ %15, %14 ], [ %34, %26 ], !dbg !9312
  %37 = add nuw nsw i32 %16, 1, !dbg !9338
  call void @llvm.dbg.value(metadata i32 %37, metadata !9307, metadata !DIExpression()), !dbg !9311
  %38 = zext i16 %36 to i32, !dbg !9314
  %39 = icmp ult i32 %37, %38, !dbg !9314
  br i1 %39, label %14, label %13, !dbg !9315, !llvm.loop !9339
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_iodev_submit.105(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) unnamed_addr #1 !dbg !9341 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !9343, metadata !DIExpression()), !dbg !9345
  call void @llvm.dbg.value(metadata %struct.rtio* %1, metadata !9344, metadata !DIExpression()), !dbg !9345
  %3 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !9346
  %4 = load %struct.rtio_iodev*, %struct.rtio_iodev** %3, align 4, !dbg !9346
  %5 = getelementptr inbounds %struct.rtio_iodev, %struct.rtio_iodev* %4, i32 0, i32 0, !dbg !9347
  %6 = load %struct.rtio_iodev_api*, %struct.rtio_iodev_api** %5, align 4, !dbg !9347
  %7 = getelementptr inbounds %struct.rtio_iodev_api, %struct.rtio_iodev_api* %6, i32 0, i32 0, !dbg !9348
  %8 = load void (%struct.rtio_sqe*, %struct.rtio*)*, void (%struct.rtio_sqe*, %struct.rtio*)** %7, align 4, !dbg !9348
  tail call void %8(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) #25, !dbg !9349
  ret void, !dbg !9350
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_concurrent_ok(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9351 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9353, metadata !DIExpression()), !dbg !9365
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9354, metadata !DIExpression()), !dbg !9365
  call void @llvm.dbg.value(metadata i32 %2, metadata !9355, metadata !DIExpression()), !dbg !9365
  %4 = bitcast %struct.rtio* %0 to %struct.rtio_concurrent_executor**, !dbg !9366
  %5 = load %struct.rtio_concurrent_executor*, %struct.rtio_concurrent_executor** %4, align 4, !dbg !9366
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %5, metadata !9358, metadata !DIExpression()), !dbg !9365
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9182, metadata !DIExpression()) #23, !dbg !9367
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9369, !srcloc !9197
  call void @llvm.dbg.value(metadata i32 undef, metadata !9194, metadata !DIExpression()) #23, !dbg !9371
  call void @llvm.dbg.value(metadata i32 undef, metadata !9195, metadata !DIExpression()) #23, !dbg !9371
  call void @llvm.dbg.value(metadata i32 undef, metadata !9188, metadata !DIExpression()) #23, !dbg !9367
  call void @llvm.dbg.value(metadata i32 undef, metadata !9357, metadata !DIExpression()), !dbg !9365
  %7 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !9372
  %8 = load i8*, i8** %7, align 4, !dbg !9372
  tail call fastcc void @rtio_cqe_submit.106(%struct.rtio* noundef %0, i32 noundef %2, i8* noundef %8) #24, !dbg !9373
  %9 = tail call fastcc zeroext i16 @conex_task_id(%struct.rtio_concurrent_executor* noundef %5, %struct.rtio_sqe* noundef %1) #24, !dbg !9374
  call void @llvm.dbg.value(metadata i16 %9, metadata !9359, metadata !DIExpression()), !dbg !9365
  %10 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 2, !dbg !9375
  %11 = load i16, i16* %10, align 2, !dbg !9375
  %12 = and i16 %11, 1, !dbg !9376
  %13 = icmp eq i16 %12, 0, !dbg !9376
  br i1 %13, label %40, label %14, !dbg !9377

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9378
  %16 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9378
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 1, i32 0, !dbg !9378
  %18 = ptrtoint %struct.rtio_sqe* %1 to i32, !dbg !9378
  %19 = ptrtoint %struct.rtio_sqe* %17 to i32, !dbg !9378
  %20 = sub i32 %18, %19, !dbg !9378
  %21 = sdiv exact i32 %20, 20, !dbg !9378
  call void @llvm.dbg.value(metadata i32 %21, metadata !9360, metadata !DIExpression()), !dbg !9379
  %22 = add nsw i32 %21, 1, !dbg !9378
  %23 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 4, !dbg !9378
  %24 = load i32, i32* %23, align 4, !dbg !9378
  %25 = and i32 %22, %24, !dbg !9378
  %26 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 2, !dbg !9378
  %27 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %26) #24, !dbg !9378
  %28 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9378
  %29 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 0, i32 4, !dbg !9378
  %30 = load i32, i32* %29, align 4, !dbg !9378
  %31 = and i32 %30, %27, !dbg !9378
  %32 = icmp eq i32 %25, %31, !dbg !9378
  call void @llvm.dbg.value(metadata i1 %32, metadata !9364, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9379
  %33 = and i32 %22, %30, !dbg !9378
  %34 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 1, i32 %33, !dbg !9378
  %35 = select i1 %32, %struct.rtio_sqe* null, %struct.rtio_sqe* %34, !dbg !9378
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %35, metadata !9356, metadata !DIExpression()), !dbg !9365
  tail call fastcc void @rtio_iodev_submit.105(%struct.rtio_sqe* noundef %35, %struct.rtio* noundef nonnull %0) #24, !dbg !9380
  %36 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %5, i32 0, i32 8, !dbg !9381
  %37 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %36, align 4, !dbg !9381
  %38 = zext i16 %9 to i32, !dbg !9382
  %39 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %37, i32 %38, !dbg !9382
  store %struct.rtio_sqe* %35, %struct.rtio_sqe** %39, align 4, !dbg !9383
  br label %47, !dbg !9384

40:                                               ; preds = %3
  %41 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %5, i32 0, i32 7, !dbg !9385
  %42 = load i8*, i8** %41, align 4, !dbg !9385
  %43 = zext i16 %9 to i32, !dbg !9387
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !9387
  %45 = load i8, i8* %44, align 1, !dbg !9388
  %46 = or i8 %45, 1, !dbg !9388
  store i8 %46, i8* %44, align 1, !dbg !9388
  br label %47

47:                                               ; preds = %40, %14
  %48 = extractvalue { i32, i32 } %6, 0, !dbg !9369
  call void @llvm.dbg.value(metadata i32 %48, metadata !9194, metadata !DIExpression()) #23, !dbg !9371
  call void @llvm.dbg.value(metadata i32 %48, metadata !9188, metadata !DIExpression()) #23, !dbg !9367
  call void @llvm.dbg.value(metadata i32 %48, metadata !9357, metadata !DIExpression()), !dbg !9365
  tail call fastcc void @conex_sweep_resume(%struct.rtio* noundef nonnull %0, %struct.rtio_concurrent_executor* noundef nonnull %5) #24, !dbg !9389
  call void @llvm.dbg.value(metadata i32 undef, metadata !9254, metadata !DIExpression()) #23, !dbg !9390
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9259, metadata !DIExpression()) #23, !dbg !9390
  call void @llvm.dbg.value(metadata i32 undef, metadata !9262, metadata !DIExpression()) #23, !dbg !9392
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %48) #23, !dbg !9394, !srcloc !9268
  ret void, !dbg !9395
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @rtio_cqe_submit.106(%struct.rtio* nocapture noundef %0, i32 noundef %1, i8* noundef %2) unnamed_addr #5 !dbg !9396 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9400, metadata !DIExpression()), !dbg !9408
  call void @llvm.dbg.value(metadata i32 %1, metadata !9401, metadata !DIExpression()), !dbg !9408
  call void @llvm.dbg.value(metadata i8* %2, metadata !9402, metadata !DIExpression()), !dbg !9408
  %4 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 3, !dbg !9409
  %5 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9409
  %6 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %5, i32 0, i32 0, i32 2, !dbg !9409
  %7 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %6) #24, !dbg !9409
  %8 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9409
  %9 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 0, !dbg !9409
  %10 = load i32, i32* %9, align 4, !dbg !9409
  %11 = add i32 %10, %7, !dbg !9409
  call void @llvm.dbg.value(metadata i32 %11, metadata !9405, metadata !DIExpression()), !dbg !9410
  %12 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 3, !dbg !9409
  %13 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %12) #24, !dbg !9409
  %14 = sub i32 %11, %13, !dbg !9409
  %15 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9409
  %16 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 4, !dbg !9409
  %17 = load i32, i32* %16, align 4, !dbg !9409
  %18 = add i32 %17, 1, !dbg !9409
  %19 = icmp ult i32 %14, %18, !dbg !9409
  call void @llvm.dbg.value(metadata i1 %19, metadata !9407, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9410
  br i1 %19, label %22, label %20, !dbg !9409

20:                                               ; preds = %3
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9403, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9408
  %21 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 1, !dbg !9411
  tail call fastcc void @atomic_inc.109(i32* noundef nonnull %21) #24, !dbg !9414
  br label %40, !dbg !9415

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 0, !dbg !9416
  %24 = load i32, i32* %23, align 4, !dbg !9416
  %25 = add i32 %24, 1, !dbg !9416
  store i32 %25, i32* %23, align 4, !dbg !9416
  %26 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9409
  %27 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 0, i32 4, !dbg !9409
  %28 = load i32, i32* %27, align 4, !dbg !9409
  %29 = and i32 %28, %11, !dbg !9409
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9403, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9408
  %30 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 0, !dbg !9419
  store i32 %1, i32* %30, align 4, !dbg !9421
  %31 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 1, !dbg !9422
  store i8* %2, i8** %31, align 4, !dbg !9423
  %32 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9424
  %33 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %32, i32 0, i32 0, i32 0, !dbg !9424
  %34 = load i32, i32* %33, align 4, !dbg !9424
  %35 = icmp eq i32 %34, 0, !dbg !9424
  br i1 %35, label %40, label %36, !dbg !9427

36:                                               ; preds = %22
  %37 = add i32 %34, -1, !dbg !9428
  store i32 %37, i32* %33, align 4, !dbg !9428
  %38 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9428
  %39 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %38, i32 0, i32 0, i32 2, !dbg !9428
  tail call fastcc void @atomic_add.108(i32* noundef nonnull %39) #24, !dbg !9428
  br label %40, !dbg !9428

40:                                               ; preds = %22, %36, %20
  ret void, !dbg !9430
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define internal fastcc zeroext i16 @conex_task_id(%struct.rtio_concurrent_executor* nocapture noundef readonly %0, %struct.rtio_sqe* noundef readnone %1) unnamed_addr #9 !dbg !9431 {
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %0, metadata !9435, metadata !DIExpression()), !dbg !9438
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9436, metadata !DIExpression()), !dbg !9438
  %3 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 3, !dbg !9439
  %4 = load i16, i16* %3, align 2, !dbg !9439
  call void @llvm.dbg.value(metadata i16 %4, metadata !9437, metadata !DIExpression()), !dbg !9438
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 2
  %6 = load i16, i16* %5, align 4
  call void @llvm.dbg.value(metadata i16 %4, metadata !9437, metadata !DIExpression()), !dbg !9438
  %7 = icmp ult i16 %4, %6, !dbg !9440
  br i1 %7, label %8, label %23, !dbg !9443

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 8, !dbg !9444
  %10 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %9, align 4
  %11 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 4
  %12 = load i16, i16* %11, align 4
  br label %13, !dbg !9443

13:                                               ; preds = %8, %20
  %14 = phi i16 [ %4, %8 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata i16 %14, metadata !9437, metadata !DIExpression()), !dbg !9438
  %15 = and i16 %12, %14, !dbg !9447
  %16 = zext i16 %15 to i32, !dbg !9447
  %17 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %10, i32 %16, !dbg !9448
  %18 = load %struct.rtio_sqe*, %struct.rtio_sqe** %17, align 4, !dbg !9448
  %19 = icmp eq %struct.rtio_sqe* %18, %1, !dbg !9449
  br i1 %19, label %23, label %20, !dbg !9450

20:                                               ; preds = %13
  %21 = add nuw i16 %14, 1, !dbg !9451
  call void @llvm.dbg.value(metadata i16 %21, metadata !9437, metadata !DIExpression()), !dbg !9438
  %22 = icmp ult i16 %21, %6, !dbg !9440
  br i1 %22, label %13, label %23, !dbg !9443, !llvm.loop !9452

23:                                               ; preds = %20, %13, %2
  %24 = phi i16 [ %4, %2 ], [ %14, %13 ], [ %6, %20 ], !dbg !9438
  ret i16 %24, !dbg !9454
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @conex_sweep_resume(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* nocapture noundef %1) unnamed_addr #1 !dbg !9455 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9457, metadata !DIExpression()), !dbg !9459
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %1, metadata !9458, metadata !DIExpression()), !dbg !9459
  tail call fastcc void @conex_sweep(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* noundef %1) #24, !dbg !9460
  tail call fastcc void @conex_resume(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* noundef %1) #24, !dbg !9461
  ret void, !dbg !9462
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @conex_sweep(%struct.rtio* nocapture noundef readonly %0, %struct.rtio_concurrent_executor* nocapture noundef %1) unnamed_addr #1 !dbg !9463 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9465, metadata !DIExpression()), !dbg !9469
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %1, metadata !9466, metadata !DIExpression()), !dbg !9469
  %3 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 3, !dbg !9470
  %4 = load i16, i16* %3, align 2, !dbg !9470
  call void @llvm.dbg.value(metadata i16 %4, metadata !9467, metadata !DIExpression()), !dbg !9471
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 7, !dbg !9472
  %6 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 2
  call void @llvm.dbg.value(metadata i16 %4, metadata !9467, metadata !DIExpression()), !dbg !9471
  %7 = load i16, i16* %6, align 4, !dbg !9476
  %8 = icmp ult i16 %4, %7, !dbg !9477
  br i1 %8, label %9, label %30, !dbg !9478

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 4
  %11 = zext i16 %4 to i32, !dbg !9478
  br label %12, !dbg !9478

12:                                               ; preds = %9, %23
  %13 = phi i32 [ %11, %9 ], [ %26, %23 ]
  call void @llvm.dbg.value(metadata i32 %13, metadata !9467, metadata !DIExpression()), !dbg !9471
  %14 = load i8*, i8** %5, align 4, !dbg !9472
  %15 = load i16, i16* %10, align 4, !dbg !9479
  %16 = trunc i32 %13 to i16, !dbg !9480
  %17 = and i16 %15, %16, !dbg !9480
  %18 = zext i16 %17 to i32, !dbg !9480
  %19 = getelementptr inbounds i8, i8* %14, i32 %18, !dbg !9481
  %20 = load i8, i8* %19, align 1, !dbg !9481
  %21 = and i8 %20, 1, !dbg !9482
  %22 = icmp eq i8 %21, 0, !dbg !9482
  br i1 %22, label %30, label %23, !dbg !9483

23:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.107, i32 0, i32 0), i32 noundef 73, i32 noundef %13) #25, !dbg !9484
  tail call fastcc void @conex_sweep_task(%struct.rtio* noundef %0) #24, !dbg !9490
  %24 = load i16, i16* %3, align 2, !dbg !9491
  %25 = add i16 %24, 1, !dbg !9491
  store i16 %25, i16* %3, align 2, !dbg !9491
  %26 = add nuw nsw i32 %13, 1, !dbg !9492
  call void @llvm.dbg.value(metadata i32 %26, metadata !9467, metadata !DIExpression()), !dbg !9471
  %27 = load i16, i16* %6, align 4, !dbg !9476
  %28 = zext i16 %27 to i32, !dbg !9477
  %29 = icmp ult i32 %26, %28, !dbg !9477
  br i1 %29, label %12, label %30, !dbg !9478, !llvm.loop !9493

30:                                               ; preds = %23, %12, %2
  ret void, !dbg !9495
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @conex_sweep_task(%struct.rtio* nocapture noundef readonly %0) unnamed_addr #15 !dbg !9496 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9498, metadata !DIExpression()), !dbg !9508
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* undef, metadata !9499, metadata !DIExpression()), !dbg !9508
  %2 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9509
  %3 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9509
  %4 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %3, i32 0, i32 0, i32 3, !dbg !9509
  %5 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %4) #24, !dbg !9509
  %6 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9509
  %7 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 1, !dbg !9509
  %8 = load i32, i32* %7, align 4, !dbg !9509
  %9 = add i32 %8, %5, !dbg !9509
  call void @llvm.dbg.value(metadata i32 %9, metadata !9501, metadata !DIExpression()), !dbg !9510
  %10 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 2, !dbg !9509
  %11 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %10) #24, !dbg !9509
  %12 = icmp eq i32 %9, %11, !dbg !9509
  call void @llvm.dbg.value(metadata i1 %12, metadata !9503, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9510
  br i1 %12, label %48, label %13, !dbg !9509

13:                                               ; preds = %1, %37
  %14 = phi i32 [ %44, %37 ], [ %9, %1 ]
  %15 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9508
  %16 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %15, i32 0, i32 0, i32 1, !dbg !9508
  %17 = load i32, i32* %16, align 4, !dbg !9508
  %18 = add i32 %17, 1, !dbg !9508
  store i32 %18, i32* %16, align 4, !dbg !9508
  %19 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9508
  %20 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %19, i32 0, i32 0, i32 4, !dbg !9508
  %21 = load i32, i32* %20, align 4, !dbg !9508
  %22 = and i32 %21, %14, !dbg !9508
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_sq* %19, i32 %22), metadata !9500, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 20, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9508
  %23 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %19, i32 0, i32 1, i32 %22, i32 2, !dbg !9511
  %24 = load i16, i16* %23, align 2, !dbg !9511
  %25 = and i16 %24, 1, !dbg !9512
  %26 = icmp eq i16 %25, 0, !dbg !9513
  br i1 %26, label %48, label %27, !dbg !9514

27:                                               ; preds = %13
  %28 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9515
  %29 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 0, i32 1, !dbg !9515
  %30 = load i32, i32* %29, align 4, !dbg !9515
  %31 = icmp eq i32 %30, 0, !dbg !9515
  br i1 %31, label %37, label %32, !dbg !9518

32:                                               ; preds = %27
  %33 = add i32 %30, -1, !dbg !9519
  store i32 %33, i32* %29, align 4, !dbg !9519
  %34 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9519
  %35 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %34, i32 0, i32 0, i32 3, !dbg !9519
  tail call fastcc void @atomic_add.108(i32* noundef nonnull %35) #24, !dbg !9519
  %36 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9521
  br label %37, !dbg !9519

37:                                               ; preds = %32, %27
  %38 = phi %struct.rtio_sq* [ %36, %32 ], [ %28, %27 ], !dbg !9521
  %39 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %38, i32 0, i32 0, i32 3, !dbg !9521
  %40 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %39) #24, !dbg !9521
  %41 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9521
  %42 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %41, i32 0, i32 0, i32 1, !dbg !9521
  %43 = load i32, i32* %42, align 4, !dbg !9521
  %44 = add i32 %43, %40, !dbg !9521
  call void @llvm.dbg.value(metadata i32 %44, metadata !9504, metadata !DIExpression()), !dbg !9522
  %45 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %41, i32 0, i32 0, i32 2, !dbg !9521
  %46 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %45) #24, !dbg !9521
  %47 = icmp eq i32 %44, %46, !dbg !9521
  call void @llvm.dbg.value(metadata i1 %47, metadata !9507, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9522
  br i1 %47, label %48, label %13, !dbg !9521

48:                                               ; preds = %37, %13, %1
  %49 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9523
  %50 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %49, i32 0, i32 0, i32 1, !dbg !9523
  %51 = load i32, i32* %50, align 4, !dbg !9523
  %52 = icmp eq i32 %51, 0, !dbg !9523
  br i1 %52, label %57, label %53, !dbg !9526

53:                                               ; preds = %48
  %54 = add i32 %51, -1, !dbg !9527
  store i32 %54, i32* %50, align 4, !dbg !9527
  %55 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9527
  %56 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %55, i32 0, i32 0, i32 3, !dbg !9527
  tail call fastcc void @atomic_add.108(i32* noundef nonnull %56) #24, !dbg !9527
  br label %57, !dbg !9527

57:                                               ; preds = %53, %48
  ret void, !dbg !9529
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add.108(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9530 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9532, metadata !DIExpression()), !dbg !9534
  call void @llvm.dbg.value(metadata i32 1, metadata !9533, metadata !DIExpression()), !dbg !9534
  %2 = atomicrmw add i32* %0, i32 1 seq_cst, align 4, !dbg !9535
  ret void, !dbg !9536
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_inc.109(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9537 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9539, metadata !DIExpression()), !dbg !9540
  tail call fastcc void @atomic_add.108(i32* noundef %0) #24, !dbg !9541
  ret void, !dbg !9542
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_concurrent_err(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9543 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9545, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9546, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata i32 %2, metadata !9547, metadata !DIExpression()), !dbg !9561
  %4 = bitcast %struct.rtio* %0 to %struct.rtio_concurrent_executor**, !dbg !9562
  %5 = load %struct.rtio_concurrent_executor*, %struct.rtio_concurrent_executor** %4, align 4, !dbg !9562
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %5, metadata !9550, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9182, metadata !DIExpression()) #23, !dbg !9563
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9565, !srcloc !9197
  call void @llvm.dbg.value(metadata i32 undef, metadata !9194, metadata !DIExpression()) #23, !dbg !9567
  call void @llvm.dbg.value(metadata i32 undef, metadata !9195, metadata !DIExpression()) #23, !dbg !9567
  call void @llvm.dbg.value(metadata i32 undef, metadata !9188, metadata !DIExpression()) #23, !dbg !9563
  call void @llvm.dbg.value(metadata i32 undef, metadata !9549, metadata !DIExpression()), !dbg !9561
  %7 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !9568
  %8 = load i8*, i8** %7, align 4, !dbg !9568
  tail call fastcc void @rtio_cqe_submit.106(%struct.rtio* noundef %0, i32 noundef %2, i8* noundef %8) #24, !dbg !9569
  %9 = tail call fastcc zeroext i16 @conex_task_id(%struct.rtio_concurrent_executor* noundef %5, %struct.rtio_sqe* noundef %1) #24, !dbg !9570
  call void @llvm.dbg.value(metadata i16 %9, metadata !9551, metadata !DIExpression()), !dbg !9561
  %10 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 2, !dbg !9571
  %11 = load i16, i16* %10, align 2, !dbg !9571
  %12 = and i16 %11, 1, !dbg !9572
  %13 = icmp eq i16 %12, 0, !dbg !9572
  br i1 %13, label %64, label %14, !dbg !9573

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9574
  %16 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9574
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 1, i32 0, !dbg !9574
  %18 = ptrtoint %struct.rtio_sqe* %1 to i32, !dbg !9574
  %19 = ptrtoint %struct.rtio_sqe* %17 to i32, !dbg !9574
  %20 = sub i32 %18, %19, !dbg !9574
  %21 = sdiv exact i32 %20, 20, !dbg !9574
  call void @llvm.dbg.value(metadata i32 %21, metadata !9552, metadata !DIExpression()), !dbg !9575
  %22 = add nsw i32 %21, 1, !dbg !9574
  %23 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 4, !dbg !9574
  %24 = load i32, i32* %23, align 4, !dbg !9574
  %25 = and i32 %22, %24, !dbg !9574
  %26 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 2, !dbg !9574
  %27 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %26) #24, !dbg !9574
  %28 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9574
  %29 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 0, i32 4, !dbg !9574
  %30 = load i32, i32* %29, align 4, !dbg !9574
  %31 = and i32 %30, %27, !dbg !9574
  %32 = icmp eq i32 %25, %31, !dbg !9574
  call void @llvm.dbg.value(metadata i1 %32, metadata !9556, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9575
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9548, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9548, metadata !DIExpression()), !dbg !9561
  br i1 %32, label %64, label %33, !dbg !9576

33:                                               ; preds = %14
  %34 = and i32 %22, %30, !dbg !9574
  %35 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 1, i32 %34, !dbg !9574
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %35, metadata !9548, metadata !DIExpression()), !dbg !9561
  br label %36, !dbg !9577

36:                                               ; preds = %33, %42
  %37 = phi %struct.rtio_sqe* [ %63, %42 ], [ %35, %33 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %37, metadata !9548, metadata !DIExpression()), !dbg !9561
  %38 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %37, i32 0, i32 2, !dbg !9578
  %39 = load i16, i16* %38, align 2, !dbg !9578
  %40 = and i16 %39, 1, !dbg !9579
  %41 = icmp eq i16 %40, 0, !dbg !9576
  br i1 %41, label %64, label %42, !dbg !9577

42:                                               ; preds = %36
  %43 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %37, i32 0, i32 4, !dbg !9580
  %44 = load i8*, i8** %43, align 4, !dbg !9580
  tail call fastcc void @rtio_cqe_submit.106(%struct.rtio* noundef nonnull %0, i32 noundef -140, i8* noundef %44) #24, !dbg !9581
  %45 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9582
  %46 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %45, i32 0, i32 1, i32 0, !dbg !9582
  %47 = ptrtoint %struct.rtio_sqe* %37 to i32, !dbg !9582
  %48 = ptrtoint %struct.rtio_sqe* %46 to i32, !dbg !9582
  %49 = sub i32 %47, %48, !dbg !9582
  %50 = sdiv exact i32 %49, 20, !dbg !9582
  call void @llvm.dbg.value(metadata i32 %50, metadata !9557, metadata !DIExpression()), !dbg !9583
  %51 = add nsw i32 %50, 1, !dbg !9582
  %52 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %45, i32 0, i32 0, i32 4, !dbg !9582
  %53 = load i32, i32* %52, align 4, !dbg !9582
  %54 = and i32 %51, %53, !dbg !9582
  %55 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %45, i32 0, i32 0, i32 2, !dbg !9582
  %56 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %55) #24, !dbg !9582
  %57 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9582
  %58 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %57, i32 0, i32 0, i32 4, !dbg !9582
  %59 = load i32, i32* %58, align 4, !dbg !9582
  %60 = and i32 %59, %56, !dbg !9582
  %61 = icmp eq i32 %54, %60, !dbg !9582
  call void @llvm.dbg.value(metadata i1 %61, metadata !9560, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9583
  %62 = and i32 %51, %59, !dbg !9582
  %63 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %57, i32 0, i32 1, i32 %62, !dbg !9582
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9548, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9548, metadata !DIExpression()), !dbg !9561
  br i1 %61, label %64, label %36, !dbg !9576

64:                                               ; preds = %42, %36, %14, %3
  %65 = extractvalue { i32, i32 } %6, 0, !dbg !9565
  call void @llvm.dbg.value(metadata i32 %65, metadata !9194, metadata !DIExpression()) #23, !dbg !9567
  call void @llvm.dbg.value(metadata i32 %65, metadata !9188, metadata !DIExpression()) #23, !dbg !9563
  call void @llvm.dbg.value(metadata i32 %65, metadata !9549, metadata !DIExpression()), !dbg !9561
  %66 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %5, i32 0, i32 7, !dbg !9584
  %67 = load i8*, i8** %66, align 4, !dbg !9584
  %68 = zext i16 %9 to i32, !dbg !9585
  %69 = getelementptr inbounds i8, i8* %67, i32 %68, !dbg !9585
  %70 = load i8, i8* %69, align 1, !dbg !9586
  %71 = or i8 %70, 1, !dbg !9586
  store i8 %71, i8* %69, align 1, !dbg !9586
  tail call fastcc void @conex_sweep_resume(%struct.rtio* noundef nonnull %0, %struct.rtio_concurrent_executor* noundef %5) #24, !dbg !9587
  call void @llvm.dbg.value(metadata i32 undef, metadata !9254, metadata !DIExpression()) #23, !dbg !9588
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9259, metadata !DIExpression()) #23, !dbg !9588
  call void @llvm.dbg.value(metadata i32 undef, metadata !9262, metadata !DIExpression()) #23, !dbg !9590
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %65) #23, !dbg !9592, !srcloc !9268
  ret void, !dbg !9593
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9594 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9596, metadata !DIExpression()), !dbg !9597
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !9598
  ret void, !dbg !9599
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9600 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9604, metadata !DIExpression()), !dbg !9610
  call void @llvm.dbg.value(metadata i32 %1, metadata !9605, metadata !DIExpression()), !dbg !9610
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9606, metadata !DIExpression()), !dbg !9610
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9611
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9611
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9611
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9607, metadata !DIExpression()), !dbg !9610
  call void @llvm.dbg.value(metadata i32 %0, metadata !9609, metadata !DIExpression()), !dbg !9610
  %7 = icmp slt i32 %0, %1, !dbg !9612
  br i1 %7, label %8, label %22, !dbg !9615

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9609, metadata !DIExpression()), !dbg !9610
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !9616
  %11 = icmp eq i32 %10, 0, !dbg !9616
  br i1 %11, label %19, label %12, !dbg !9619

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !9620
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9622
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9622
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9624
  br i1 %15, label %19, label %16, !dbg !9625

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9626
  %18 = load i8*, i8** %17, align 4, !dbg !9626
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !9627
  br label %19, !dbg !9628

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9629
  call void @llvm.dbg.value(metadata i32 %20, metadata !9609, metadata !DIExpression()), !dbg !9610
  %21 = icmp eq i32 %20, %1, !dbg !9612
  br i1 %21, label %22, label %8, !dbg !9615, !llvm.loop !9630

22:                                               ; preds = %19, %3
  ret void, !dbg !9632
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #5 !dbg !9633 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9635, metadata !DIExpression()), !dbg !9636
  %2 = shl nuw i32 1, %0, !dbg !9637
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !9640
  ret i32 %3, !dbg !9641
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !9642 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9646, metadata !DIExpression()), !dbg !9647
  %2 = shl nuw i32 1, %0, !dbg !9648
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !9651
  ret void, !dbg !9652
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9653 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9656, metadata !DIExpression()), !dbg !9657
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9658
  ret void, !dbg !9659
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #5 !dbg !9660 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9662, metadata !DIExpression()), !dbg !9663
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9664
  %3 = and i32 %2, %0, !dbg !9664
  %4 = icmp eq i32 %3, %0, !dbg !9665
  %5 = zext i1 %4 to i32, !dbg !9665
  ret i32 %5, !dbg !9666
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9667 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9669, metadata !DIExpression()), !dbg !9670
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !9671
  ret void, !dbg !9672
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9673 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9675, metadata !DIExpression()), !dbg !9676
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !9677
  ret void, !dbg !9678
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9679 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9681, metadata !DIExpression()), !dbg !9682
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !9683
  ret void, !dbg !9684
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9685 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9687, metadata !DIExpression()), !dbg !9688
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !9689
  ret void, !dbg !9690
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9691 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9693, metadata !DIExpression()), !dbg !9694
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !9695
  ret void, !dbg !9696
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9697 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9699, metadata !DIExpression()), !dbg !9700
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !9701
  ret void, !dbg !9702
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9703 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9705, metadata !DIExpression()), !dbg !9706
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !9707
  ret void, !dbg !9708
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9709 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9711, metadata !DIExpression()), !dbg !9712
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !9713
  ret void, !dbg !9714
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9715 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9717, metadata !DIExpression()), !dbg !9718
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !9719
  ret void, !dbg !9720
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9721 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9723, metadata !DIExpression()), !dbg !9724
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !9725
  ret void, !dbg !9726
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9727 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9729, metadata !DIExpression()), !dbg !9730
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !9731
  ret i32 0, !dbg !9732
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !1138 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !1142, metadata !DIExpression()), !dbg !9733
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !9734
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !9736
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !9738
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !9740
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !9742
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !9744
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !9746
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !9748
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !9750
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !9752
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !9754
  ret void, !dbg !9756
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9757 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9759, metadata !DIExpression()), !dbg !9761
  call void @llvm.dbg.value(metadata i32 0, metadata !9760, metadata !DIExpression()), !dbg !9761
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9762
  %3 = load i32, i32* %2, align 4, !dbg !9762
  call void @llvm.dbg.value(metadata i32 %3, metadata !9760, metadata !DIExpression()), !dbg !9761
  %4 = shl nuw i32 1, %0, !dbg !9763
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #24, !dbg !9764
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !9765
  ret void, !dbg !9766
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9767 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9769, metadata !DIExpression()), !dbg !9770
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9771
  %3 = or i32 %2, %0, !dbg !9771
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9771
  ret void, !dbg !9772
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !9773 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9775, metadata !DIExpression()), !dbg !9776
  %2 = icmp slt i32 %0, 32, !dbg !9777
  br i1 %2, label %3, label %5, !dbg !9779

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9780
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !9782
  br label %5, !dbg !9783

5:                                                ; preds = %1, %3
  ret void, !dbg !9784
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9785 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9787, metadata !DIExpression()), !dbg !9788
  %2 = xor i32 %0, -1, !dbg !9789
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9789
  %4 = and i32 %3, %2, !dbg !9789
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9789
  ret void, !dbg !9790
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !9791 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9795, metadata !DIExpression()), !dbg !9797
  call void @llvm.dbg.value(metadata i32 %1, metadata !9796, metadata !DIExpression()), !dbg !9797
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9798

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9799
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !9801
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !9802
  br label %11, !dbg !9803

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9804
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !9805
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !9806
  br label %11, !dbg !9807

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9808
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !9809
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !9810
  br label %11, !dbg !9811

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9812
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !9813
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !9814
  br label %11, !dbg !9815

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9816
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9817 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9819, metadata !DIExpression()), !dbg !9820
  %2 = xor i32 %0, -1, !dbg !9821
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9821
  %4 = and i32 %3, %2, !dbg !9821
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9821
  ret void, !dbg !9822
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9823 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9825, metadata !DIExpression()), !dbg !9826
  %2 = xor i32 %0, -1, !dbg !9827
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9827
  %4 = and i32 %3, %2, !dbg !9827
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9827
  ret void, !dbg !9828
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9829 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9831, metadata !DIExpression()), !dbg !9832
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9833
  %3 = or i32 %2, %0, !dbg !9833
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9833
  ret void, !dbg !9834
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9835 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9837, metadata !DIExpression()), !dbg !9838
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9839
  %3 = or i32 %2, %0, !dbg !9839
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9839
  ret void, !dbg !9840
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #11 !dbg !9841 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9845, metadata !DIExpression()), !dbg !9851
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9846, metadata !DIExpression()), !dbg !9851
  call void @llvm.dbg.value(metadata i8* %2, metadata !9847, metadata !DIExpression()), !dbg !9851
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_40, metadata !9848, metadata !DIExpression()), !dbg !9851
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9850, metadata !DIExpression()), !dbg !9851
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9852
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9852
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9854
  br i1 %6, label %7, label %9, !dbg !9855

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9856
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9857
  store i8* %2, i8** %8, align 4, !dbg !9858
  br label %9, !dbg !9859

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9851
  ret i32 %10, !dbg !9860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #6 !dbg !9861 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9863, metadata !DIExpression()), !dbg !9866
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_40, metadata !9864, metadata !DIExpression()), !dbg !9866
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9865, metadata !DIExpression()), !dbg !9866
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9867
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9868
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9869
  store i8* null, i8** %3, align 4, !dbg !9870
  ret void, !dbg !9871
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !9872 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9874, metadata !DIExpression()), !dbg !9879
  call void @llvm.dbg.value(metadata i8* %1, metadata !9875, metadata !DIExpression()), !dbg !9879
  call void @llvm.dbg.value(metadata i8* %1, metadata !9876, metadata !DIExpression()), !dbg !9879
  %3 = bitcast i8* %1 to i32*, !dbg !9880
  %4 = load i32, i32* %3, align 4, !dbg !9880
  %5 = add i32 %4, -169, !dbg !9880
  %6 = icmp ult i32 %5, -121, !dbg !9880
  br i1 %6, label %15, label %7, !dbg !9882

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9883
  %9 = inttoptr i32 %8 to i32*, !dbg !9884
  call void @llvm.dbg.value(metadata i32* %9, metadata !9877, metadata !DIExpression()), !dbg !9879
  %10 = load volatile i32, i32* %9, align 4, !dbg !9885
  call void @llvm.dbg.value(metadata i32 %10, metadata !9878, metadata !DIExpression()), !dbg !9879
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9886
  %12 = bitcast i8* %11 to i32*, !dbg !9886
  %13 = load i32, i32* %12, align 4, !dbg !9886
  %14 = or i32 %13, %10, !dbg !9887
  call void @llvm.dbg.value(metadata i32 %14, metadata !9878, metadata !DIExpression()), !dbg !9879
  store volatile i32 %14, i32* %9, align 4, !dbg !9888
  br label %15, !dbg !9889

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9879
  ret i32 %16, !dbg !9890
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !9891 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9893, metadata !DIExpression()), !dbg !9898
  call void @llvm.dbg.value(metadata i8* %1, metadata !9894, metadata !DIExpression()), !dbg !9898
  call void @llvm.dbg.value(metadata i8* %1, metadata !9895, metadata !DIExpression()), !dbg !9898
  %3 = bitcast i8* %1 to i32*, !dbg !9899
  %4 = load i32, i32* %3, align 4, !dbg !9899
  %5 = add i32 %4, -169, !dbg !9899
  %6 = icmp ult i32 %5, -121, !dbg !9899
  br i1 %6, label %16, label %7, !dbg !9901

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9902
  %9 = inttoptr i32 %8 to i32*, !dbg !9903
  call void @llvm.dbg.value(metadata i32* %9, metadata !9896, metadata !DIExpression()), !dbg !9898
  %10 = load volatile i32, i32* %9, align 4, !dbg !9904
  call void @llvm.dbg.value(metadata i32 %10, metadata !9897, metadata !DIExpression()), !dbg !9898
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9905
  %12 = bitcast i8* %11 to i32*, !dbg !9905
  %13 = load i32, i32* %12, align 4, !dbg !9905
  %14 = xor i32 %13, -1, !dbg !9906
  %15 = and i32 %10, %14, !dbg !9907
  call void @llvm.dbg.value(metadata i32 %15, metadata !9897, metadata !DIExpression()), !dbg !9898
  store volatile i32 %15, i32* %9, align 4, !dbg !9908
  br label %16, !dbg !9909

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9898
  ret i32 %17, !dbg !9910
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !9911 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9913, metadata !DIExpression()), !dbg !9921
  call void @llvm.dbg.value(metadata i8* %1, metadata !9914, metadata !DIExpression()), !dbg !9921
  call void @llvm.dbg.value(metadata i32* %2, metadata !9915, metadata !DIExpression()), !dbg !9921
  call void @llvm.dbg.value(metadata i8* %1, metadata !9916, metadata !DIExpression()), !dbg !9921
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !9922
  call void @llvm.dbg.value(metadata i32 %4, metadata !9917, metadata !DIExpression()), !dbg !9921
  call void @llvm.dbg.value(metadata i32 undef, metadata !9918, metadata !DIExpression()), !dbg !9921
  call void @llvm.dbg.value(metadata i32 undef, metadata !9919, metadata !DIExpression()), !dbg !9921
  call void @llvm.dbg.value(metadata i32 %4, metadata !9920, metadata !DIExpression()), !dbg !9921
  %5 = bitcast i8* %1 to i32*, !dbg !9923
  %6 = load i32, i32* %5, align 4, !dbg !9923
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !9924

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 4) #24, !dbg !9925
  call void @llvm.dbg.value(metadata i32 %8, metadata !9918, metadata !DIExpression()), !dbg !9921
  br label %19, !dbg !9926

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !9928
  call void @llvm.dbg.value(metadata i32 %10, metadata !9919, metadata !DIExpression()), !dbg !9921
  br label %19, !dbg !9929

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9930
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #24, !dbg !9931
  br label %19, !dbg !9932

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9933
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #24, !dbg !9934
  br label %19, !dbg !9935

17:                                               ; preds = %3
  br label %19, !dbg !9936

18:                                               ; preds = %3
  br label %19, !dbg !9937

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !9938
  br label %21, !dbg !9939

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !9921
  ret i32 %22, !dbg !9939
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !9940 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9942, metadata !DIExpression()), !dbg !9950
  call void @llvm.dbg.value(metadata i8* %1, metadata !9943, metadata !DIExpression()), !dbg !9950
  call void @llvm.dbg.value(metadata i8* %2, metadata !9944, metadata !DIExpression()), !dbg !9950
  call void @llvm.dbg.value(metadata i8* %1, metadata !9945, metadata !DIExpression()), !dbg !9950
  %4 = bitcast i8* %1 to i32*, !dbg !9951
  %5 = load i32, i32* %4, align 4, !dbg !9951
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !9952
  call void @llvm.dbg.value(metadata i32 %6, metadata !9949, metadata !DIExpression()), !dbg !9950
  %7 = icmp slt i32 %6, 0, !dbg !9953
  br i1 %7, label %22, label %8, !dbg !9955

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9945, metadata !DIExpression()), !dbg !9950
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9956
  %10 = bitcast i8* %9 to i32*, !dbg !9956
  %11 = load i32, i32* %10, align 4, !dbg !9956
  %12 = lshr i32 %11, 16, !dbg !9956
  %13 = and i32 %12, 7, !dbg !9956
  %14 = lshr i32 %11, 8, !dbg !9957
  %15 = and i32 %14, 31, !dbg !9957
  %16 = shl i32 %13, %15, !dbg !9958
  call void @llvm.dbg.value(metadata i32 %16, metadata !9948, metadata !DIExpression()), !dbg !9950
  %17 = and i32 %11, 255, !dbg !9959
  %18 = or i32 %17, 1073887232, !dbg !9960
  %19 = inttoptr i32 %18 to i32*, !dbg !9961
  call void @llvm.dbg.value(metadata i32* %19, metadata !9946, metadata !DIExpression()), !dbg !9950
  %20 = load volatile i32, i32* %19, align 4, !dbg !9962
  call void @llvm.dbg.value(metadata i32 %20, metadata !9947, metadata !DIExpression()), !dbg !9950
  %21 = or i32 %16, %20, !dbg !9963
  call void @llvm.dbg.value(metadata i32 %21, metadata !9947, metadata !DIExpression()), !dbg !9950
  store volatile i32 %21, i32* %19, align 4, !dbg !9964
  br label %22, !dbg !9965

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !9950
  ret i32 %23, !dbg !9966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !9967 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9971, metadata !DIExpression()), !dbg !9973
  call void @llvm.dbg.value(metadata i32 0, metadata !9972, metadata !DIExpression()), !dbg !9973
  %2 = add i32 %0, -1, !dbg !9974
  %3 = icmp ult i32 %2, 6, !dbg !9974
  br i1 %3, label %4, label %7, !dbg !9974

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !9974
  %6 = load i32, i32* %5, align 4, !dbg !9974
  call void @llvm.dbg.value(metadata i32 %6, metadata !9972, metadata !DIExpression()), !dbg !9973
  br label %7, !dbg !9975

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !9973
  ret i32 %8, !dbg !9976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9977 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9981, metadata !DIExpression()), !dbg !9983
  call void @llvm.dbg.value(metadata i32 %1, metadata !9982, metadata !DIExpression()), !dbg !9983
  %3 = udiv i32 %0, %1, !dbg !9984
  ret i32 %3, !dbg !9985
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9986 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9990, metadata !DIExpression()), !dbg !9994
  call void @llvm.dbg.value(metadata i32 12, metadata !9991, metadata !DIExpression()), !dbg !9994
  call void @llvm.dbg.value(metadata i32 336, metadata !9992, metadata !DIExpression()), !dbg !9994
  call void @llvm.dbg.value(metadata i32 %1, metadata !9993, metadata !DIExpression()), !dbg !9994
  %3 = mul i32 %0, 336, !dbg !9995
  %4 = mul nsw i32 %1, 12, !dbg !9996
  %5 = udiv i32 %3, %4, !dbg !9997
  ret i32 %5, !dbg !9998
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !9999 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !10001, metadata !DIExpression()), !dbg !10004
  tail call void @config_enable_default_clocks() #25, !dbg !10005
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !10006
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !10006
  %4 = lshr i32 %3, 4, !dbg !10006
  %5 = and i32 %4, 15, !dbg !10006
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !10006
  %7 = load i8, i8* %6, align 1, !dbg !10006
  %8 = zext i8 %7 to i32, !dbg !10006
  %9 = lshr i32 %2, %8, !dbg !10006
  call void @llvm.dbg.value(metadata i32 %9, metadata !10002, metadata !DIExpression()), !dbg !10004
  call void @llvm.dbg.value(metadata !DIArgList(i32 168000000, i8 undef), metadata !10003, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !10004
  %10 = icmp ult i32 %9, 168000000, !dbg !10007
  br i1 %10, label %11, label %13, !dbg !10009

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #25, !dbg !10010
  br label %13, !dbg !10012

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !10013
  tail call fastcc void @set_up_plls() #24, !dbg !10014
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !10015
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !10018
  br label %14, !dbg !10019

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !10020
  %16 = icmp eq i32 %15, 8, !dbg !10021
  br i1 %16, label %17, label %14, !dbg !10019, !llvm.loop !10022

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 167999999, !dbg !10024
  br i1 %18, label %19, label %21, !dbg !10026

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #25, !dbg !10027
  br label %21, !dbg !10029

21:                                               ; preds = %19, %17
  store i32 168000000, i32* @SystemCoreClock, align 4, !dbg !10030
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !10031
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !10032
  ret i32 0, !dbg !10033
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #5 !dbg !10034 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10036
  %2 = and i32 %1, 240, !dbg !10036
  ret i32 %2, !dbg !10037
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !10038 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !10039
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !10044
  br label %1, !dbg !10045

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !10046
  %3 = icmp eq i32 %2, 1, !dbg !10047
  br i1 %3, label %4, label %1, !dbg !10045, !llvm.loop !10048

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !10050
  br label %5, !dbg !10053

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !10054
  %7 = icmp eq i32 %6, 1, !dbg !10055
  br i1 %7, label %8, label %5, !dbg !10053, !llvm.loop !10056

8:                                                ; preds = %5
  ret void, !dbg !10058
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10059 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !10060
  %2 = icmp eq i32 %1, 8, !dbg !10062
  br i1 %2, label %3, label %4, !dbg !10063

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !10064
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !10066
  br label %4, !dbg !10067

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !10068
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10069
  %6 = and i32 %5, -196609, !dbg !10069
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10069
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10070
  %8 = and i32 %7, -251658241, !dbg !10070
  %9 = or i32 %8, 117440512, !dbg !10070
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10070
  tail call void @config_pll_sysclock() #25, !dbg !10071
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !10072
  br label %10, !dbg !10073

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !10074
  %12 = icmp eq i32 %11, 1, !dbg !10075
  br i1 %12, label %13, label %10, !dbg !10073, !llvm.loop !10076

13:                                               ; preds = %10
  ret void, !dbg !10078
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !10079 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10081, metadata !DIExpression()), !dbg !10082
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10083
  %2 = and i32 %1, -241, !dbg !10083
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10083
  ret void, !dbg !10084
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !10085 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10087, metadata !DIExpression()), !dbg !10088
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10089
  %3 = and i32 %2, -4, !dbg !10089
  %4 = or i32 %3, %0, !dbg !10089
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10089
  ret void, !dbg !10090
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #5 !dbg !10091 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10092
  %2 = and i32 %1, 12, !dbg !10092
  ret i32 %2, !dbg !10093
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !10094 {
  call void @llvm.dbg.value(metadata i32 5120, metadata !10096, metadata !DIExpression()), !dbg !10097
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10098
  %2 = and i32 %1, -7169, !dbg !10098
  %3 = or i32 %2, 5120, !dbg !10098
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10098
  ret void, !dbg !10099
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !10100 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !10102, metadata !DIExpression()), !dbg !10103
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10104
  %2 = and i32 %1, -57345, !dbg !10104
  %3 = or i32 %2, 32768, !dbg !10104
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10104
  ret void, !dbg !10105
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !10106 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !10107
  %2 = icmp eq i32 %1, 1, !dbg !10109
  br i1 %2, label %7, label %3, !dbg !10110

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !10111
  br label %4, !dbg !10113

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !10114
  %6 = icmp eq i32 %5, 1, !dbg !10115
  br i1 %6, label %7, label %4, !dbg !10113, !llvm.loop !10116

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !10118
  br label %8, !dbg !10119

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !10120
  %10 = icmp eq i32 %9, 0, !dbg !10121
  br i1 %10, label %11, label %8, !dbg !10119, !llvm.loop !10122

11:                                               ; preds = %8
  ret void, !dbg !10124
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !10125 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10126
  %2 = and i32 %1, -16777217, !dbg !10126
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10126
  ret void, !dbg !10127
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !10128 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10129
  %2 = or i32 %1, 16777216, !dbg !10129
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10129
  ret void, !dbg !10130
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #5 !dbg !10131 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10132
  %2 = lshr i32 %1, 25, !dbg !10133
  %3 = and i32 %2, 1, !dbg !10133
  ret i32 %3, !dbg !10134
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #5 !dbg !10135 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10136
  %2 = lshr i32 %1, 1, !dbg !10137
  %3 = and i32 %2, 1, !dbg !10137
  ret i32 %3, !dbg !10138
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !10139 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10140
  %2 = or i32 %1, 1, !dbg !10140
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10140
  ret void, !dbg !10141
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !10142 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10143
  %2 = and i32 %1, -262145, !dbg !10143
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10143
  ret void, !dbg !10144
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !10145 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10146
  %2 = or i32 %1, 65536, !dbg !10146
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10146
  ret void, !dbg !10147
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #5 !dbg !10148 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10149
  %2 = lshr i32 %1, 17, !dbg !10150
  %3 = and i32 %2, 1, !dbg !10150
  ret i32 %3, !dbg !10151
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !10152 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10153
  %2 = or i32 %1, 1, !dbg !10153
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10153
  ret void, !dbg !10154
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #5 !dbg !10155 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10156
  %2 = lshr i32 %1, 1, !dbg !10157
  %3 = and i32 %2, 1, !dbg !10157
  ret i32 %3, !dbg !10158
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !10159 {
  ret i32 12000000, !dbg !10161
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !10165 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !10166
  ret void, !dbg !10167
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !10168 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10172, metadata !DIExpression()), !dbg !10176
  call void @llvm.dbg.value(metadata i32 12, metadata !10173, metadata !DIExpression()), !dbg !10176
  call void @llvm.dbg.value(metadata i32 336, metadata !10174, metadata !DIExpression()), !dbg !10176
  call void @llvm.dbg.value(metadata i32 0, metadata !10175, metadata !DIExpression()), !dbg !10176
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10177
  %2 = and i32 %1, -4227072, !dbg !10177
  %3 = or i32 %2, 4215820, !dbg !10177
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10177
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10178
  %5 = and i32 %4, -196609, !dbg !10178
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10178
  ret void, !dbg !10179
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !10180 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !10181
  ret void, !dbg !10182
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !10183 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !10186, metadata !DIExpression()), !dbg !10188
  %2 = bitcast i32* %1 to i8*, !dbg !10189
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10189
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10187, metadata !DIExpression()), !dbg !10190
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10191
  %4 = or i32 %3, 268435456, !dbg !10191
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10191
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10192
  %6 = and i32 %5, 268435456, !dbg !10192
  store volatile i32 %6, i32* %1, align 4, !dbg !10193
  %7 = load volatile i32, i32* %1, align 4, !dbg !10194
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10195
  ret void, !dbg !10195
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10196 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10198, metadata !DIExpression()), !dbg !10199
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !10200
  br i1 %2, label %3, label %4, !dbg !10202

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !10203
  br label %4, !dbg !10204

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10199
  ret i32 %5, !dbg !10205
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10206 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10211, metadata !DIExpression()), !dbg !10212
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10213, !srcloc !10215
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !10216
  ret i1 %1, !dbg !10217
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10218 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !10219
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !10220
  ret void, !dbg !10221
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10222 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10224, metadata !DIExpression()), !dbg !10225
  %2 = icmp eq i32 %0, 10, !dbg !10226
  br i1 %2, label %3, label %4, !dbg !10228

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !10229
  br label %4, !dbg !10231

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10232
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !10233
  ret i32 %0, !dbg !10234
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10235 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10238, metadata !DIExpression()), !dbg !10240
  call void @llvm.dbg.value(metadata i8 %0, metadata !10239, metadata !DIExpression()), !dbg !10240
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10241, !srcloc !10243
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !10244
  ret void, !dbg !10245
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10246 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10248, metadata !DIExpression()), !dbg !10251
  call void @llvm.dbg.value(metadata i8 %0, metadata !10249, metadata !DIExpression()), !dbg !10251
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10252
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10250, metadata !DIExpression()), !dbg !10251
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10253
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10253
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #25, !dbg !10254
  ret void, !dbg !10255
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10256 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10258, metadata !DIExpression()), !dbg !10259
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #25, !dbg !10260
  ret i1 %1, !dbg !10261
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !10262 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10309, metadata !DIExpression()), !dbg !10312
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10310, metadata !DIExpression()), !dbg !10312
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10311, metadata !DIExpression()), !dbg !10312
  ret void, !dbg !10313
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10314 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10316, metadata !DIExpression()), !dbg !10321
  call void @llvm.dbg.value(metadata i8 %1, metadata !10317, metadata !DIExpression()), !dbg !10321
  call void @llvm.dbg.value(metadata i32 %2, metadata !10318, metadata !DIExpression()), !dbg !10321
  %5 = bitcast i32* %4 to i8*, !dbg !10322
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10322
  call void @llvm.dbg.value(metadata i32* %4, metadata !10320, metadata !DIExpression(DW_OP_deref)), !dbg !10321
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !10323
  call void @llvm.dbg.value(metadata i32 %6, metadata !10319, metadata !DIExpression()), !dbg !10321
  %7 = icmp eq i32 %6, 0, !dbg !10324
  br i1 %7, label %8, label %31, !dbg !10326

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !10319, metadata !DIExpression()), !dbg !10321
  %9 = and i32 %2, 131072, !dbg !10327
  %10 = icmp eq i32 %9, 0, !dbg !10329
  br i1 %10, label %28, label %11, !dbg !10330

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !10331
  %13 = icmp eq i32 %12, 0, !dbg !10334
  br i1 %13, label %18, label %14, !dbg !10335

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !10336
  %16 = shl nuw i32 1, %15, !dbg !10336
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !10338
  br label %25, !dbg !10339

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !10340
  %20 = icmp eq i32 %19, 0, !dbg !10342
  %21 = zext i8 %1 to i32, !dbg !10321
  br i1 %20, label %25, label %22, !dbg !10343

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !10344
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !10346
  br label %25, !dbg !10347

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !10348
  %27 = load i32, i32* %4, align 4, !dbg !10349
  call void @llvm.dbg.value(metadata i32 %30, metadata !10320, metadata !DIExpression()), !dbg !10321
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !10350
  br label %31, !dbg !10351

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !10348
  %30 = load i32, i32* %4, align 4, !dbg !10349
  call void @llvm.dbg.value(metadata i32 %30, metadata !10320, metadata !DIExpression()), !dbg !10321
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !10350
  call void @llvm.dbg.value(metadata i32 0, metadata !10319, metadata !DIExpression()), !dbg !10321
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10352
  ret i32 %6, !dbg !10352
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #5 !dbg !10353 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10357, metadata !DIExpression()), !dbg !10362
  call void @llvm.dbg.value(metadata i32* %1, metadata !10358, metadata !DIExpression()), !dbg !10362
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10363
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10363
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10363
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10359, metadata !DIExpression()), !dbg !10362
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10364
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10364
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10364
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10361, metadata !DIExpression()), !dbg !10362
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !10365
  store i32 %9, i32* %1, align 4, !dbg !10366
  ret i32 0, !dbg !10367
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !10368 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10370, metadata !DIExpression()), !dbg !10376
  call void @llvm.dbg.value(metadata i32 %1, metadata !10371, metadata !DIExpression()), !dbg !10376
  call void @llvm.dbg.value(metadata i32 %2, metadata !10372, metadata !DIExpression()), !dbg !10376
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10377
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !10377
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !10377
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !10373, metadata !DIExpression()), !dbg !10376
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !10378
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !10378
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !10378
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !10374, metadata !DIExpression()), !dbg !10376
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !10379
  call void @llvm.dbg.value(metadata i32 %10, metadata !10375, metadata !DIExpression()), !dbg !10376
  %11 = xor i32 %1, -1, !dbg !10380
  %12 = and i32 %10, %11, !dbg !10381
  %13 = and i32 %2, %1, !dbg !10382
  %14 = or i32 %12, %13, !dbg !10383
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !10384
  ret i32 0, !dbg !10385
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !10386 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10388, metadata !DIExpression()), !dbg !10392
  call void @llvm.dbg.value(metadata i32 %1, metadata !10389, metadata !DIExpression()), !dbg !10392
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10393
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10393
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10393
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10390, metadata !DIExpression()), !dbg !10392
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10394
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10394
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10394
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10391, metadata !DIExpression()), !dbg !10392
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !10395
  store volatile i32 %1, i32* %9, align 4, !dbg !10395
  ret i32 0, !dbg !10396
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !10397 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10399, metadata !DIExpression()), !dbg !10403
  call void @llvm.dbg.value(metadata i32 %1, metadata !10400, metadata !DIExpression()), !dbg !10403
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10404
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10404
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10404
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10401, metadata !DIExpression()), !dbg !10403
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10405
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10405
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10405
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10402, metadata !DIExpression()), !dbg !10403
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !10406
  ret i32 0, !dbg !10407
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !10408 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10410, metadata !DIExpression()), !dbg !10414
  call void @llvm.dbg.value(metadata i32 %1, metadata !10411, metadata !DIExpression()), !dbg !10414
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10415
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10415
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10415
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10412, metadata !DIExpression()), !dbg !10414
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10416
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10416
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10416
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10413, metadata !DIExpression()), !dbg !10414
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !10417
  %10 = load volatile i32, i32* %9, align 4, !dbg !10417
  %11 = xor i32 %10, %1, !dbg !10417
  store volatile i32 %11, i32* %9, align 4, !dbg !10417
  ret i32 0, !dbg !10418
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10419 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10421, metadata !DIExpression()), !dbg !10431
  call void @llvm.dbg.value(metadata i8 %1, metadata !10422, metadata !DIExpression()), !dbg !10431
  call void @llvm.dbg.value(metadata i32 %2, metadata !10423, metadata !DIExpression()), !dbg !10431
  call void @llvm.dbg.value(metadata i32 %3, metadata !10424, metadata !DIExpression()), !dbg !10431
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10432
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10432
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10432
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10425, metadata !DIExpression()), !dbg !10431
  call void @llvm.dbg.value(metadata i8* undef, metadata !10426, metadata !DIExpression()), !dbg !10431
  call void @llvm.dbg.value(metadata i32 0, metadata !10428, metadata !DIExpression()), !dbg !10431
  call void @llvm.dbg.value(metadata i32 0, metadata !10429, metadata !DIExpression()), !dbg !10431
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !10433

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !10434
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !10438
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10439
  %12 = load i32, i32* %11, align 4, !dbg !10439
  %13 = icmp eq i32 %10, %12, !dbg !10440
  br i1 %13, label %14, label %29, !dbg !10441

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !10442
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !10444
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !10445
  br label %29, !dbg !10446

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10447
  %17 = load i8*, i8** %16, align 4, !dbg !10447
  call void @llvm.dbg.value(metadata i8* %17, metadata !10426, metadata !DIExpression()), !dbg !10431
  %18 = zext i8 %1 to i32, !dbg !10448
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !10450
  %20 = icmp eq i32 %19, 0, !dbg !10451
  br i1 %20, label %21, label %29, !dbg !10452

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10453
  %23 = load i32, i32* %22, align 4, !dbg !10453
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !10454
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !10455

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !10428, metadata !DIExpression()), !dbg !10431
  br label %27, !dbg !10456

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !10428, metadata !DIExpression()), !dbg !10431
  br label %27, !dbg !10458

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !10428, metadata !DIExpression()), !dbg !10431
  br label %27, !dbg !10459

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !10431
  call void @llvm.dbg.value(metadata i32 %28, metadata !10428, metadata !DIExpression()), !dbg !10431
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !10460
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !10461
  br label %29, !dbg !10461

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !10431
  call void @llvm.dbg.value(metadata i32 %30, metadata !10429, metadata !DIExpression()), !dbg !10431
  call void @llvm.dbg.label(metadata !10430), !dbg !10462
  ret i32 %30, !dbg !10463
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !10464 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10466, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10467, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i1 %2, metadata !10468, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10470
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10471
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10471
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10471
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10469, metadata !DIExpression()), !dbg !10470
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10472
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !10473
  ret i32 %8, !dbg !10474
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !10475 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10481, metadata !DIExpression()), !dbg !10484
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10482, metadata !DIExpression()), !dbg !10484
  call void @llvm.dbg.value(metadata i1 %2, metadata !10483, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10484
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !10485
  br i1 %4, label %10, label %5, !dbg !10487

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10488
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #24, !dbg !10491
  %8 = or i1 %7, %2, !dbg !10492
  %9 = select i1 %8, i32 0, i32 -22, !dbg !10492
  br i1 %2, label %11, label %13, !dbg !10492

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !10493

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10494
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #24, !dbg !10497
  br label %13, !dbg !10498

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !10484
  ret i32 %14, !dbg !10499
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10500 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10504, metadata !DIExpression()), !dbg !10505
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10506
  %3 = icmp eq %struct._snode* %2, null, !dbg !10506
  ret i1 %3, !dbg !10506
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !10507 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10511, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10512, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10513, metadata !DIExpression()), !dbg !10515
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10516
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10514, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10513, metadata !DIExpression()), !dbg !10515
  %4 = icmp eq %struct._snode* %3, null, !dbg !10518
  br i1 %4, label %15, label %5, !dbg !10516

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10514, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10513, metadata !DIExpression()), !dbg !10515
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10520
  br i1 %6, label %9, label %11, !dbg !10523

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10514, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10513, metadata !DIExpression()), !dbg !10515
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10520
  br i1 %8, label %9, label %11, !dbg !10523, !llvm.loop !10524

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !10525
  br label %15, !dbg !10525

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10514, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10513, metadata !DIExpression()), !dbg !10515
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !10518
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10514, metadata !DIExpression()), !dbg !10515
  %14 = icmp eq %struct._snode* %13, null, !dbg !10518
  br i1 %14, label %15, label %7, !dbg !10516, !llvm.loop !10524

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10527
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !10528 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10532, metadata !DIExpression()), !dbg !10534
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10533, metadata !DIExpression()), !dbg !10534
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10535
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !10535
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !10535
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10536
  %5 = icmp eq %struct._snode* %4, null, !dbg !10536
  br i1 %5, label %6, label %8, !dbg !10535

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10538
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !10538
  br label %8, !dbg !10538

8:                                                ; preds = %6, %2
  ret void, !dbg !10535
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10540 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10544, metadata !DIExpression()), !dbg !10545
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10546
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10546
  ret %struct._snode* %3, !dbg !10547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !10548 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10552, metadata !DIExpression()), !dbg !10554
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10553, metadata !DIExpression()), !dbg !10554
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10555
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10556
  ret void, !dbg !10557
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !10558 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10560, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10561, metadata !DIExpression()), !dbg !10562
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10563
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10564
  ret void, !dbg !10565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10566 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10568, metadata !DIExpression()), !dbg !10569
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10570
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10570
  ret %struct._snode* %3, !dbg !10571
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !10572 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10574, metadata !DIExpression()), !dbg !10576
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10575, metadata !DIExpression()), !dbg !10576
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10577
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10578
  ret void, !dbg !10579
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #11 !dbg !10580 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10584, metadata !DIExpression()), !dbg !10587
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10585, metadata !DIExpression()), !dbg !10587
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10586, metadata !DIExpression()), !dbg !10587
  %4 = icmp eq %struct._snode* %1, null, !dbg !10588
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !10590
  br i1 %4, label %6, label %11, !dbg !10591

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !10592
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10594
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10594
  br i1 %8, label %9, label %15, !dbg !10592

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10596
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !10596
  br label %15, !dbg !10596

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !10598
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10600
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10600
  br i1 %13, label %14, label %15, !dbg !10598

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !10602
  br label %15, !dbg !10602

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !10591
  ret void, !dbg !10591
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !10604 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10608, metadata !DIExpression()), !dbg !10609
  %2 = icmp eq %struct._snode* %0, null, !dbg !10610
  br i1 %2, label %5, label %3, !dbg !10610

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !10610
  br label %5, !dbg !10610

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10610
  ret %struct._snode* %6, !dbg !10610
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10611 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10613, metadata !DIExpression()), !dbg !10614
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !10615
  ret %struct._snode* %2, !dbg !10615
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10616 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10618, metadata !DIExpression()), !dbg !10619
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10620
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10620
  ret %struct._snode* %3, !dbg !10621
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10622 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10624, metadata !DIExpression()), !dbg !10627
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !10628, !range !10629
  call void @llvm.dbg.value(metadata i32 %2, metadata !10625, metadata !DIExpression()), !dbg !10627
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !10630
  call void @llvm.dbg.value(metadata i32 %3, metadata !10626, metadata !DIExpression()), !dbg !10627
  ret i32 %3, !dbg !10631
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10632 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10634, metadata !DIExpression()), !dbg !10637
  call void @llvm.dbg.value(metadata i8* %1, metadata !10635, metadata !DIExpression()), !dbg !10637
  call void @llvm.dbg.value(metadata i8* %1, metadata !10636, metadata !DIExpression()), !dbg !10637
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10638
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10638
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10639
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10639
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10639
  %8 = shl nuw i32 1, %0, !dbg !10640
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !10641
  ret void, !dbg !10642
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10643 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10647, metadata !DIExpression()), !dbg !10653
  call void @llvm.dbg.value(metadata i32 %1, metadata !10648, metadata !DIExpression()), !dbg !10653
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10649, metadata !DIExpression()), !dbg !10653
  %4 = bitcast i64* %3 to i8*, !dbg !10654
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10654
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10651, metadata !DIExpression()), !dbg !10653
  store i64 70368744177732, i64* %3, align 8, !dbg !10655
  call void @llvm.dbg.value(metadata i64* %3, metadata !10651, metadata !DIExpression(DW_OP_deref)), !dbg !10653
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !10656
  call void @llvm.dbg.value(metadata i32 %5, metadata !10652, metadata !DIExpression()), !dbg !10653
  %6 = icmp eq i32 %5, 0, !dbg !10657
  br i1 %6, label %7, label %8, !dbg !10659

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !10660
  br label %8, !dbg !10661

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10662
  ret void, !dbg !10662
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10663 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10665, metadata !DIExpression()), !dbg !10668
  call void @llvm.dbg.value(metadata i8* %0, metadata !10666, metadata !DIExpression()), !dbg !10668
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10669
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10667, metadata !DIExpression()), !dbg !10668
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10670
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10670
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #25, !dbg !10671
  ret i32 %5, !dbg !10672
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10673 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10675, metadata !DIExpression()), !dbg !10678
  call void @llvm.dbg.value(metadata i32 %1, metadata !10676, metadata !DIExpression()), !dbg !10678
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !10679
  call void @llvm.dbg.value(metadata i32 %3, metadata !10677, metadata !DIExpression()), !dbg !10678
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !10680
  ret void, !dbg !10681
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !10682 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10686, metadata !DIExpression()), !dbg !10687
  %2 = sdiv i32 %0, 4, !dbg !10688
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10689
  %6 = add nsw i32 %5, 16, !dbg !10690
  %7 = shl i32 15, %6, !dbg !10691
  %8 = or i32 %7, %2, !dbg !10692
  ret i32 %8, !dbg !10693
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10694 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10698, metadata !DIExpression()), !dbg !10700
  call void @llvm.dbg.value(metadata i32 %1, metadata !10699, metadata !DIExpression()), !dbg !10700
  %3 = and i32 %1, 255, !dbg !10701
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10701
  %5 = load volatile i32, i32* %4, align 4, !dbg !10701
  %6 = lshr i32 %1, 16, !dbg !10701
  %7 = xor i32 %6, -1, !dbg !10701
  %8 = and i32 %5, %7, !dbg !10701
  call void @llvm.dbg.value(metadata i32 %6, metadata !10702, metadata !DIExpression()) #23, !dbg !10706
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10708, !srcloc !10709
  call void @llvm.dbg.value(metadata i32 %9, metadata !10705, metadata !DIExpression()) #23, !dbg !10706
  call void @llvm.dbg.value(metadata i32 %9, metadata !10710, metadata !DIExpression()) #23, !dbg !10715
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !10717, !range !8219
  %11 = shl i32 %0, %10, !dbg !10701
  %12 = or i32 %11, %8, !dbg !10701
  store volatile i32 %12, i32* %4, align 4, !dbg !10701
  ret void, !dbg !10718
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10719 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10723, metadata !DIExpression()), !dbg !10728
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10724, metadata !DIExpression()), !dbg !10728
  call void @llvm.dbg.value(metadata i32 %2, metadata !10725, metadata !DIExpression()), !dbg !10728
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10729
  %5 = icmp eq %struct._snode* %4, null, !dbg !10729
  br i1 %5, label %21, label %6, !dbg !10729

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !10731
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10727, metadata !DIExpression()), !dbg !10728
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !10726, metadata !DIExpression()), !dbg !10728
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10732
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !10732
  %11 = load i32, i32* %10, align 4, !dbg !10732
  %12 = and i32 %11, %2, !dbg !10736
  %13 = icmp eq i32 %12, 0, !dbg !10736
  br i1 %13, label %19, label %14, !dbg !10737

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !10726, metadata !DIExpression()), !dbg !10728
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10738
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10738
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10738
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !10740
  br label %19, !dbg !10741

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10726, metadata !DIExpression()), !dbg !10728
  %20 = icmp eq %struct._snode* %8, null, !dbg !10742
  br i1 %20, label %21, label %6, !dbg !10742

21:                                               ; preds = %19, %3
  ret void, !dbg !10743
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10744 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10746, metadata !DIExpression()), !dbg !10747
  %2 = and i32 %0, 255, !dbg !10748
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10748
  %4 = load volatile i32, i32* %3, align 4, !dbg !10748
  %5 = lshr i32 %0, 16, !dbg !10748
  %6 = and i32 %4, %5, !dbg !10748
  call void @llvm.dbg.value(metadata i32 %5, metadata !10702, metadata !DIExpression()) #23, !dbg !10749
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !10751, !srcloc !10709
  call void @llvm.dbg.value(metadata i32 %7, metadata !10705, metadata !DIExpression()) #23, !dbg !10749
  call void @llvm.dbg.value(metadata i32 %7, metadata !10710, metadata !DIExpression()) #23, !dbg !10752
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10754, !range !8219
  %9 = lshr i32 %6, %8, !dbg !10755
  ret i32 %9, !dbg !10756
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10757 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10762, metadata !DIExpression()), !dbg !10764
  call void @llvm.dbg.value(metadata i32 %1, metadata !10763, metadata !DIExpression()), !dbg !10764
  %3 = shl i32 %1, 16, !dbg !10765
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10765
  store volatile i32 %3, i32* %4, align 4, !dbg !10765
  ret void, !dbg !10766
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #5 !dbg !10767 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10771, metadata !DIExpression()), !dbg !10772
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10773
  %3 = load volatile i32, i32* %2, align 4, !dbg !10773
  ret i32 %3, !dbg !10774
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10775 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10777, metadata !DIExpression()), !dbg !10779
  call void @llvm.dbg.value(metadata i32 %1, metadata !10778, metadata !DIExpression()), !dbg !10779
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10780
  store volatile i32 %1, i32* %3, align 4, !dbg !10780
  ret void, !dbg !10781
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #5 !dbg !10782 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10784, metadata !DIExpression()), !dbg !10785
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10786
  %3 = load volatile i32, i32* %2, align 4, !dbg !10786
  ret i32 %3, !dbg !10787
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #11 !dbg !10788 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10792, metadata !DIExpression()), !dbg !10794
  call void @llvm.dbg.value(metadata i32* %1, metadata !10793, metadata !DIExpression()), !dbg !10794
  %3 = and i32 %0, 131072, !dbg !10795
  %4 = icmp eq i32 %3, 0, !dbg !10797
  br i1 %4, label %22, label %5, !dbg !10798

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10799
  %6 = and i32 %0, 2, !dbg !10801
  %7 = icmp eq i32 %6, 0, !dbg !10803
  br i1 %7, label %11, label %8, !dbg !10804

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10805
  %10 = icmp eq i32 %9, 0, !dbg !10805
  br i1 %10, label %33, label %11, !dbg !10808

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10809
  store i32 %12, i32* %1, align 4, !dbg !10809
  %13 = and i32 %0, 16, !dbg !10810
  %14 = icmp eq i32 %13, 0, !dbg !10812
  br i1 %14, label %17, label %15, !dbg !10813

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10814
  br label %31, !dbg !10816

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10817
  %19 = icmp eq i32 %18, 0, !dbg !10819
  br i1 %19, label %33, label %20, !dbg !10820

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10821
  br label %31, !dbg !10823

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10824
  %24 = icmp eq i32 %23, 0, !dbg !10826
  br i1 %24, label %31, label %25, !dbg !10827

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10828
  %27 = icmp eq i32 %26, 0, !dbg !10831
  br i1 %27, label %28, label %31, !dbg !10832

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10833
  br label %33, !dbg !10834

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10794
  ret i32 %34, !dbg !10834
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10835 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10839, metadata !DIExpression()), !dbg !10850
  call void @llvm.dbg.value(metadata i32 %1, metadata !10840, metadata !DIExpression()), !dbg !10850
  call void @llvm.dbg.value(metadata i32 %2, metadata !10841, metadata !DIExpression()), !dbg !10850
  call void @llvm.dbg.value(metadata i32 %3, metadata !10842, metadata !DIExpression()), !dbg !10850
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10851
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10851
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10851
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10843, metadata !DIExpression()), !dbg !10850
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10852
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10852
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10852
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10844, metadata !DIExpression()), !dbg !10850
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !10853
  call void @llvm.dbg.value(metadata i32 %11, metadata !10845, metadata !DIExpression()), !dbg !10850
  %12 = and i32 %2, 48, !dbg !10854
  call void @llvm.dbg.value(metadata i32 %12, metadata !10846, metadata !DIExpression()), !dbg !10850
  call void @llvm.dbg.value(metadata i32 %2, metadata !10847, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10850
  call void @llvm.dbg.value(metadata i32 %2, metadata !10848, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10850
  call void @llvm.dbg.value(metadata i32 %2, metadata !10849, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10850
  %13 = lshr i32 %2, 6, !dbg !10855
  %14 = and i32 %13, 1, !dbg !10855
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !10856
  %15 = lshr i32 %2, 7, !dbg !10857
  %16 = and i32 %15, 3, !dbg !10857
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !10858
  %17 = lshr i32 %2, 9, !dbg !10859
  %18 = and i32 %17, 3, !dbg !10859
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !10860
  %19 = icmp eq i32 %12, 32, !dbg !10861
  br i1 %19, label %20, label %24, !dbg !10863

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10864
  br i1 %21, label %22, label %23, !dbg !10867

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10868
  br label %24, !dbg !10870

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10871
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10873
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !10874
  ret void, !dbg !10875
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !10876 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10878, metadata !DIExpression()), !dbg !10880
  %2 = shl nuw i32 1, %0, !dbg !10881
  call void @llvm.dbg.value(metadata i32 %2, metadata !10879, metadata !DIExpression()), !dbg !10880
  ret i32 %2, !dbg !10882
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10883 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10887, metadata !DIExpression()), !dbg !10890
  call void @llvm.dbg.value(metadata i32 %1, metadata !10888, metadata !DIExpression()), !dbg !10890
  call void @llvm.dbg.value(metadata i32 %2, metadata !10889, metadata !DIExpression()), !dbg !10890
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10891
  %5 = load volatile i32, i32* %4, align 4, !dbg !10891
  %6 = xor i32 %1, -1, !dbg !10891
  %7 = and i32 %5, %6, !dbg !10891
  %8 = mul i32 %2, %1, !dbg !10891
  %9 = or i32 %7, %8, !dbg !10891
  store volatile i32 %9, i32* %4, align 4, !dbg !10891
  ret void, !dbg !10892
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10893 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10895, metadata !DIExpression()), !dbg !10898
  call void @llvm.dbg.value(metadata i32 %1, metadata !10896, metadata !DIExpression()), !dbg !10898
  call void @llvm.dbg.value(metadata i32 %2, metadata !10897, metadata !DIExpression()), !dbg !10898
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10899
  %5 = load volatile i32, i32* %4, align 4, !dbg !10899
  call void @llvm.dbg.value(metadata i32 %1, metadata !10702, metadata !DIExpression()) #23, !dbg !10900
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10902, !srcloc !10709
  call void @llvm.dbg.value(metadata i32 %6, metadata !10705, metadata !DIExpression()) #23, !dbg !10900
  call void @llvm.dbg.value(metadata i32 %6, metadata !10710, metadata !DIExpression()) #23, !dbg !10903
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10905, !range !8219
  %8 = shl nuw nsw i32 %7, 1, !dbg !10899
  %9 = shl i32 3, %8, !dbg !10899
  %10 = xor i32 %9, -1, !dbg !10899
  %11 = and i32 %5, %10, !dbg !10899
  call void @llvm.dbg.value(metadata i32 %1, metadata !10702, metadata !DIExpression()) #23, !dbg !10906
  call void @llvm.dbg.value(metadata i32 %6, metadata !10705, metadata !DIExpression()) #23, !dbg !10906
  call void @llvm.dbg.value(metadata i32 %6, metadata !10710, metadata !DIExpression()) #23, !dbg !10908
  %12 = shl i32 %2, %8, !dbg !10899
  %13 = or i32 %11, %12, !dbg !10899
  store volatile i32 %13, i32* %4, align 4, !dbg !10899
  ret void, !dbg !10910
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10911 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10913, metadata !DIExpression()), !dbg !10916
  call void @llvm.dbg.value(metadata i32 %1, metadata !10914, metadata !DIExpression()), !dbg !10916
  call void @llvm.dbg.value(metadata i32 %2, metadata !10915, metadata !DIExpression()), !dbg !10916
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10917
  %5 = load volatile i32, i32* %4, align 4, !dbg !10917
  call void @llvm.dbg.value(metadata i32 %1, metadata !10702, metadata !DIExpression()) #23, !dbg !10918
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10920, !srcloc !10709
  call void @llvm.dbg.value(metadata i32 %6, metadata !10705, metadata !DIExpression()) #23, !dbg !10918
  call void @llvm.dbg.value(metadata i32 %6, metadata !10710, metadata !DIExpression()) #23, !dbg !10921
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10923, !range !8219
  %8 = shl nuw nsw i32 %7, 1, !dbg !10917
  %9 = shl i32 3, %8, !dbg !10917
  %10 = xor i32 %9, -1, !dbg !10917
  %11 = and i32 %5, %10, !dbg !10917
  call void @llvm.dbg.value(metadata i32 %1, metadata !10702, metadata !DIExpression()) #23, !dbg !10924
  call void @llvm.dbg.value(metadata i32 %6, metadata !10705, metadata !DIExpression()) #23, !dbg !10924
  call void @llvm.dbg.value(metadata i32 %6, metadata !10710, metadata !DIExpression()) #23, !dbg !10926
  %12 = shl i32 %2, %8, !dbg !10917
  %13 = or i32 %11, %12, !dbg !10917
  store volatile i32 %13, i32* %4, align 4, !dbg !10917
  ret void, !dbg !10928
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10929 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10931, metadata !DIExpression()), !dbg !10934
  call void @llvm.dbg.value(metadata i32 %1, metadata !10932, metadata !DIExpression()), !dbg !10934
  call void @llvm.dbg.value(metadata i32 %2, metadata !10933, metadata !DIExpression()), !dbg !10934
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10935
  %5 = load volatile i32, i32* %4, align 4, !dbg !10935
  call void @llvm.dbg.value(metadata i32 %1, metadata !10702, metadata !DIExpression()) #23, !dbg !10936
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10938, !srcloc !10709
  call void @llvm.dbg.value(metadata i32 %6, metadata !10705, metadata !DIExpression()) #23, !dbg !10936
  call void @llvm.dbg.value(metadata i32 %6, metadata !10710, metadata !DIExpression()) #23, !dbg !10939
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10941, !range !8219
  %8 = shl nuw nsw i32 %7, 2, !dbg !10935
  %9 = shl i32 15, %8, !dbg !10935
  %10 = xor i32 %9, -1, !dbg !10935
  %11 = and i32 %5, %10, !dbg !10935
  call void @llvm.dbg.value(metadata i32 %1, metadata !10702, metadata !DIExpression()) #23, !dbg !10942
  call void @llvm.dbg.value(metadata i32 %6, metadata !10705, metadata !DIExpression()) #23, !dbg !10942
  call void @llvm.dbg.value(metadata i32 %6, metadata !10710, metadata !DIExpression()) #23, !dbg !10944
  %12 = shl i32 %2, %8, !dbg !10935
  %13 = or i32 %11, %12, !dbg !10935
  store volatile i32 %13, i32* %4, align 4, !dbg !10935
  ret void, !dbg !10946
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10947 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10949, metadata !DIExpression()), !dbg !10952
  call void @llvm.dbg.value(metadata i32 %1, metadata !10950, metadata !DIExpression()), !dbg !10952
  call void @llvm.dbg.value(metadata i32 %2, metadata !10951, metadata !DIExpression()), !dbg !10952
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10953
  %5 = load volatile i32, i32* %4, align 4, !dbg !10953
  %6 = lshr i32 %1, 8, !dbg !10953
  call void @llvm.dbg.value(metadata i32 %6, metadata !10702, metadata !DIExpression()) #23, !dbg !10954
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10956, !srcloc !10709
  call void @llvm.dbg.value(metadata i32 %7, metadata !10705, metadata !DIExpression()) #23, !dbg !10954
  call void @llvm.dbg.value(metadata i32 %7, metadata !10710, metadata !DIExpression()) #23, !dbg !10957
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10959, !range !8219
  %9 = shl nuw nsw i32 %8, 2, !dbg !10953
  %10 = shl i32 15, %9, !dbg !10953
  %11 = xor i32 %10, -1, !dbg !10953
  %12 = and i32 %5, %11, !dbg !10953
  call void @llvm.dbg.value(metadata i32 %6, metadata !10702, metadata !DIExpression()) #23, !dbg !10960
  call void @llvm.dbg.value(metadata i32 %7, metadata !10705, metadata !DIExpression()) #23, !dbg !10960
  call void @llvm.dbg.value(metadata i32 %7, metadata !10710, metadata !DIExpression()) #23, !dbg !10962
  %13 = shl i32 %2, %9, !dbg !10953
  %14 = or i32 %12, %13, !dbg !10953
  store volatile i32 %14, i32* %4, align 4, !dbg !10953
  ret void, !dbg !10964
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10965 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10967, metadata !DIExpression()), !dbg !10970
  call void @llvm.dbg.value(metadata i32 %1, metadata !10968, metadata !DIExpression()), !dbg !10970
  call void @llvm.dbg.value(metadata i32 %2, metadata !10969, metadata !DIExpression()), !dbg !10970
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10971
  %5 = load volatile i32, i32* %4, align 4, !dbg !10971
  call void @llvm.dbg.value(metadata i32 %1, metadata !10702, metadata !DIExpression()) #23, !dbg !10972
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10974, !srcloc !10709
  call void @llvm.dbg.value(metadata i32 %6, metadata !10705, metadata !DIExpression()) #23, !dbg !10972
  call void @llvm.dbg.value(metadata i32 %6, metadata !10710, metadata !DIExpression()) #23, !dbg !10975
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10977, !range !8219
  %8 = shl nuw nsw i32 %7, 1, !dbg !10971
  %9 = shl i32 3, %8, !dbg !10971
  %10 = xor i32 %9, -1, !dbg !10971
  %11 = and i32 %5, %10, !dbg !10971
  call void @llvm.dbg.value(metadata i32 %1, metadata !10702, metadata !DIExpression()) #23, !dbg !10978
  call void @llvm.dbg.value(metadata i32 %6, metadata !10705, metadata !DIExpression()) #23, !dbg !10978
  call void @llvm.dbg.value(metadata i32 %6, metadata !10710, metadata !DIExpression()) #23, !dbg !10980
  %12 = shl i32 %2, %8, !dbg !10971
  %13 = or i32 %11, %12, !dbg !10971
  store volatile i32 %13, i32* %4, align 4, !dbg !10971
  ret void, !dbg !10982
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10983 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10985, metadata !DIExpression()), !dbg !10988
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10989
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10989
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10989
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10986, metadata !DIExpression()), !dbg !10988
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10990
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10991
  %6 = tail call fastcc zeroext i1 @device_is_ready.131() #24, !dbg !10992
  br i1 %6, label %7, label %11, !dbg !10994

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !10995
  call void @llvm.dbg.value(metadata i32 %8, metadata !10987, metadata !DIExpression()), !dbg !10988
  %9 = icmp slt i32 %8, 0, !dbg !10996
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10998
  br label %11, !dbg !10998

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10988
  ret i32 %12, !dbg !10999
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.131() unnamed_addr #1 !dbg !11000 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11004, metadata !DIExpression()), !dbg !11005
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11006, !srcloc !11008
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.132() #24, !dbg !11009
  ret i1 %1, !dbg !11010
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11011 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11015, metadata !DIExpression()), !dbg !11020
  call void @llvm.dbg.value(metadata i8 1, metadata !11016, metadata !DIExpression()), !dbg !11020
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !11017, metadata !DIExpression()), !dbg !11020
  call void @llvm.dbg.value(metadata i32 0, metadata !11018, metadata !DIExpression()), !dbg !11020
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11019, metadata !DIExpression()), !dbg !11020
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11021
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !11021
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !11021
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !11017, metadata !DIExpression()), !dbg !11020
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !11022
  %6 = bitcast %struct.vnd_sensor_config* %5 to i8*, !dbg !11025
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !11026
  call void @llvm.dbg.value(metadata i32 %7, metadata !11018, metadata !DIExpression()), !dbg !11020
  call void @llvm.dbg.value(metadata i32 %7, metadata !11018, metadata !DIExpression()), !dbg !11020
  ret i32 %7, !dbg !11027
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.132() unnamed_addr #1 !dbg !11028 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11030, metadata !DIExpression()), !dbg !11031
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #25, !dbg !11032
  ret i1 %1, !dbg !11033
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !11034 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11038, metadata !DIExpression()), !dbg !11046
  call void @llvm.dbg.value(metadata i32 %1, metadata !11039, metadata !DIExpression()), !dbg !11046
  call void @llvm.dbg.value(metadata i32 %2, metadata !11040, metadata !DIExpression()), !dbg !11046
  call void @llvm.dbg.value(metadata i32 %3, metadata !11041, metadata !DIExpression()), !dbg !11046
  call void @llvm.dbg.value(metadata i32 0, metadata !11042, metadata !DIExpression()), !dbg !11046
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !11047
  %5 = icmp eq i32 %3, 17, !dbg !11048
  br i1 %5, label %6, label %14, !dbg !11049

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !11050
  call void @llvm.dbg.value(metadata i32 %7, metadata !11043, metadata !DIExpression()), !dbg !11051
  %8 = icmp eq i32 %7, 0, !dbg !11052
  %9 = shl nuw i32 1, %1, !dbg !11054
  br i1 %8, label %12, label %10, !dbg !11055

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !11056
  br label %14, !dbg !11058

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !11059
  br label %14, !dbg !11062

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !11063
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !11064 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11066, metadata !DIExpression()), !dbg !11070
  call void @llvm.dbg.value(metadata i8* %1, metadata !11067, metadata !DIExpression()), !dbg !11070
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11071
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11071
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11071
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11068, metadata !DIExpression()), !dbg !11070
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11072
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11072
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !11074
  %9 = icmp eq i32 %8, 0, !dbg !11074
  br i1 %9, label %12, label %10, !dbg !11075

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11076
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !11078
  br label %12, !dbg !11079

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11080
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !11082
  %15 = icmp eq i32 %14, 0, !dbg !11082
  br i1 %15, label %19, label %16, !dbg !11083

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11084
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !11085
  store i8 %18, i8* %1, align 1, !dbg !11086
  br label %19, !dbg !11087

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !11070
  ret i32 %20, !dbg !11088
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !11089 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11091, metadata !DIExpression()), !dbg !11095
  call void @llvm.dbg.value(metadata i8 %1, metadata !11092, metadata !DIExpression()), !dbg !11095
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11096
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11096
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11096
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11093, metadata !DIExpression()), !dbg !11095
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !11097

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11098
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !11101
  %10 = icmp eq i32 %9, 0, !dbg !11101
  br i1 %10, label %18, label %11, !dbg !11102

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11103, !srcloc !11110
  call void @llvm.dbg.value(metadata i32 undef, metadata !11106, metadata !DIExpression()) #23, !dbg !11111
  call void @llvm.dbg.value(metadata i32 undef, metadata !11107, metadata !DIExpression()) #23, !dbg !11111
  call void @llvm.dbg.value(metadata i32 undef, metadata !11094, metadata !DIExpression()), !dbg !11095
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11112
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !11114
  %15 = icmp eq i32 %14, 0, !dbg !11114
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !11103
  br i1 %15, label %17, label %19, !dbg !11115

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !11106, metadata !DIExpression()) #23, !dbg !11111
  call void @llvm.dbg.value(metadata i32 %16, metadata !11094, metadata !DIExpression()), !dbg !11095
  call void @llvm.dbg.value(metadata i32 undef, metadata !11116, metadata !DIExpression()) #23, !dbg !11119
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !11121, !srcloc !11122
  br label %18, !dbg !11123

18:                                               ; preds = %17, %7
  br label %7, !dbg !11098, !llvm.loop !11124

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !11103
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11126
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !11127
  call void @llvm.dbg.value(metadata i32 %20, metadata !11116, metadata !DIExpression()) #23, !dbg !11128
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !11130, !srcloc !11122
  ret void, !dbg !11131
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !11132 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11134, metadata !DIExpression()), !dbg !11137
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11138
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11138
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11138
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11135, metadata !DIExpression()), !dbg !11137
  call void @llvm.dbg.value(metadata i32 0, metadata !11136, metadata !DIExpression()), !dbg !11137
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11139
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11139
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !11141
  %8 = icmp ne i32 %7, 0, !dbg !11141
  %9 = zext i1 %8 to i32, !dbg !11142
  call void @llvm.dbg.value(metadata i32 %9, metadata !11136, metadata !DIExpression()), !dbg !11137
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11143
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !11145
  %12 = icmp eq i32 %11, 0, !dbg !11145
  %13 = or i32 %9, 2, !dbg !11146
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !11146
  call void @llvm.dbg.value(metadata i32 %14, metadata !11136, metadata !DIExpression()), !dbg !11137
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11147
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !11149
  %17 = icmp eq i32 %16, 0, !dbg !11149
  %18 = or i32 %14, 4, !dbg !11150
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !11150
  call void @llvm.dbg.value(metadata i32 %19, metadata !11136, metadata !DIExpression()), !dbg !11137
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11151
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !11153
  %22 = icmp eq i32 %21, 0, !dbg !11153
  %23 = or i32 %19, 8, !dbg !11154
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !11154
  call void @llvm.dbg.value(metadata i32 %24, metadata !11136, metadata !DIExpression()), !dbg !11137
  %25 = and i32 %24, 8, !dbg !11155
  %26 = icmp eq i32 %25, 0, !dbg !11155
  br i1 %26, label %29, label %27, !dbg !11157

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11158
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !11160
  br label %29, !dbg !11161

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !11162
  %31 = icmp eq i32 %30, 0, !dbg !11162
  br i1 %31, label %34, label %32, !dbg !11164

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11165
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !11167
  br label %34, !dbg !11168

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !11169
  %36 = icmp eq i32 %35, 0, !dbg !11169
  br i1 %36, label %39, label %37, !dbg !11171

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11172
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !11174
  br label %39, !dbg !11175

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !11176
  %41 = icmp eq i32 %40, 0, !dbg !11176
  br i1 %41, label %44, label %42, !dbg !11178

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11179
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !11181
  br label %44, !dbg !11182

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11183
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !11184
  ret i32 %24, !dbg !11185
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !11186 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11188, metadata !DIExpression()), !dbg !11197
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11189, metadata !DIExpression()), !dbg !11197
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11198
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11198
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11198
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11190, metadata !DIExpression()), !dbg !11197
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11199
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !11199
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !11199
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !11191, metadata !DIExpression()), !dbg !11197
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11200
  %10 = load i8, i8* %9, align 4, !dbg !11200
  %11 = zext i8 %10 to i32, !dbg !11201
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !11202
  call void @llvm.dbg.value(metadata i32 %12, metadata !11193, metadata !DIExpression()), !dbg !11197
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11203
  %14 = load i8, i8* %13, align 1, !dbg !11203
  %15 = zext i8 %14 to i32, !dbg !11204
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !11205
  call void @llvm.dbg.value(metadata i32 %16, metadata !11194, metadata !DIExpression()), !dbg !11197
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11206
  %18 = load i8, i8* %17, align 2, !dbg !11206
  %19 = zext i8 %18 to i32, !dbg !11207
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !11208
  call void @llvm.dbg.value(metadata i32 %20, metadata !11195, metadata !DIExpression()), !dbg !11197
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11209
  %22 = load i8, i8* %21, align 1, !dbg !11209
  %23 = zext i8 %22 to i32, !dbg !11210
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !11211
  call void @llvm.dbg.value(metadata i32 %24, metadata !11196, metadata !DIExpression()), !dbg !11197
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !11212

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !11214
  br i1 %26, label %69, label %27, !dbg !11216

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !11217

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !11218
  br i1 %29, label %65, label %30, !dbg !11218

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !11220
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !11197
  br i1 %31, label %38, label %34, !dbg !11222

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !11223
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073812480, label %36
  ], !dbg !11223

36:                                               ; preds = %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !11226
  br i1 %37, label %38, label %69, !dbg !11227

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11228
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !11229
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !11230
  %41 = icmp eq i32 %12, %40, !dbg !11232
  br i1 %41, label %43, label %42, !dbg !11233

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !11234
  br label %43, !dbg !11236

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !11237
  %45 = icmp eq i32 %16, %44, !dbg !11239
  br i1 %45, label %47, label %46, !dbg !11240

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !11241
  br label %47, !dbg !11243

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !11244
  %49 = icmp eq i32 %20, %48, !dbg !11246
  br i1 %49, label %51, label %50, !dbg !11247

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !11248
  br label %51, !dbg !11250

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !11251
  %53 = icmp eq i32 %24, %52, !dbg !11253
  br i1 %53, label %55, label %54, !dbg !11254

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !11255
  br label %55, !dbg !11257

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11258
  %57 = load i32, i32* %56, align 4, !dbg !11258
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !11260
  %59 = load i32, i32* %58, align 4, !dbg !11260
  %60 = icmp eq i32 %57, %59, !dbg !11261
  br i1 %60, label %63, label %61, !dbg !11262

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !11263
  %62 = load i32, i32* %56, align 4, !dbg !11265
  store i32 %62, i32* %58, align 4, !dbg !11266
  br label %63, !dbg !11267

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !11268
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !11269
  br label %69, !dbg !11270

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !11218
  %67 = and i8 %66, 1, !dbg !11218
  %68 = icmp eq i8 %67, 0, !dbg !11218
  br i1 %68, label %30, label %69, !dbg !11218

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !11197
  ret i32 %70, !dbg !11271
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !11272 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11274, metadata !DIExpression()), !dbg !11277
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11275, metadata !DIExpression()), !dbg !11277
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11278
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !11278
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !11278
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !11276, metadata !DIExpression()), !dbg !11277
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !11279
  %7 = load i32, i32* %6, align 4, !dbg !11279
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11280
  store i32 %7, i32* %8, align 4, !dbg !11281
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !11282, !range !11283
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !11284
  %11 = trunc i32 %10 to i8, !dbg !11284
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11285
  store i8 %11, i8* %12, align 4, !dbg !11286
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !11287, !range !11288
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !11289
  %15 = trunc i32 %14 to i8, !dbg !11289
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11290
  store i8 %15, i8* %16, align 1, !dbg !11291
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !11292
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !11293, !range !11283
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !11294
  %20 = trunc i32 %19 to i8, !dbg !11294
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11295
  store i8 %20, i8* %21, align 2, !dbg !11296
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !11297, !range !11298
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !11299
  %24 = trunc i32 %23 to i8, !dbg !11299
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11300
  store i8 %24, i8* %25, align 1, !dbg !11301
  ret i32 0, !dbg !11302
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11303 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11307, metadata !DIExpression()), !dbg !11309
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11310
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11310
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11310
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11308, metadata !DIExpression()), !dbg !11309
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11311
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11311
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !11312
  ret i32 %7, !dbg !11313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !11314 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11318, metadata !DIExpression()), !dbg !11319
  %2 = icmp eq i32 %0, 1024, !dbg !11320
  %3 = select i1 %2, i32 2, i32 0, !dbg !11320
  %4 = icmp eq i32 %0, 1536, !dbg !11320
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11320
  ret i32 %5, !dbg !11321
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11322 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11324, metadata !DIExpression()), !dbg !11326
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11327
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11327
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11327
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11325, metadata !DIExpression()), !dbg !11326
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11328
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11328
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !11329
  ret i32 %7, !dbg !11330
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #12 !dbg !11331 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11335, metadata !DIExpression()), !dbg !11336
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11337
  %3 = icmp ult i32 %2, 4, !dbg !11337
  br i1 %3, label %4, label %7, !dbg !11337

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11337
  %6 = load i32, i32* %5, align 4, !dbg !11337
  br label %7, !dbg !11337

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11338
  ret i32 %8, !dbg !11340
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11341 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11343, metadata !DIExpression()), !dbg !11345
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11346
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11346
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11346
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11344, metadata !DIExpression()), !dbg !11345
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11347
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11347
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !11348
  ret i32 %7, !dbg !11349
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !11350 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11354, metadata !DIExpression()), !dbg !11356
  call void @llvm.dbg.value(metadata i32 %1, metadata !11355, metadata !DIExpression()), !dbg !11356
  %3 = icmp eq i32 %0, 4096, !dbg !11357
  %4 = icmp eq i32 %1, 0, !dbg !11357
  %5 = select i1 %4, i32 4, i32 3, !dbg !11357
  %6 = select i1 %4, i32 3, i32 2, !dbg !11357
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11357
  ret i32 %7, !dbg !11358
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11359 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11361, metadata !DIExpression()), !dbg !11363
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11364
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11364
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11364
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11362, metadata !DIExpression()), !dbg !11363
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11365
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11365
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !11366
  ret i32 %7, !dbg !11367
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !11368 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11372, metadata !DIExpression()), !dbg !11373
  %2 = icmp eq i32 %0, 768, !dbg !11374
  %3 = zext i1 %2 to i32, !dbg !11373
  ret i32 %3, !dbg !11376
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11377 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11382, metadata !DIExpression()), !dbg !11383
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11384
  %3 = load volatile i32, i32* %2, align 4, !dbg !11384
  %4 = and i32 %3, 768, !dbg !11384
  ret i32 %4, !dbg !11385
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11386 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11388, metadata !DIExpression()), !dbg !11389
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11390
  %3 = load volatile i32, i32* %2, align 4, !dbg !11390
  %4 = and i32 %3, 4096, !dbg !11390
  ret i32 %4, !dbg !11391
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11392 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11394, metadata !DIExpression()), !dbg !11395
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11396
  %3 = load volatile i32, i32* %2, align 4, !dbg !11396
  %4 = and i32 %3, 12288, !dbg !11396
  ret i32 %4, !dbg !11397
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11398 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11400, metadata !DIExpression()), !dbg !11401
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11402
  %3 = load volatile i32, i32* %2, align 4, !dbg !11402
  %4 = and i32 %3, 1536, !dbg !11402
  ret i32 %4, !dbg !11403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !11404 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11408, metadata !DIExpression()), !dbg !11409
  %2 = icmp eq i32 %0, 2, !dbg !11410
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11410
  %4 = icmp eq i32 %0, 1, !dbg !11410
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11410
  ret i32 %5, !dbg !11411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !11412 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11416, metadata !DIExpression()), !dbg !11417
  %2 = icmp ult i32 %0, 3, !dbg !11418
  br i1 %2, label %3, label %6, !dbg !11418

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11418
  %5 = load i32, i32* %4, align 4, !dbg !11418
  br label %6, !dbg !11418

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11419
  ret i32 %7, !dbg !11421
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !11422 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11426, metadata !DIExpression()), !dbg !11428
  call void @llvm.dbg.value(metadata i32 %1, metadata !11427, metadata !DIExpression()), !dbg !11428
  %3 = icmp eq i32 %0, 4, !dbg !11429
  %4 = icmp eq i32 %1, 0, !dbg !11429
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11429
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11429
  ret i32 %6, !dbg !11430
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !11431 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11435, metadata !DIExpression()), !dbg !11436
  %2 = icmp eq i32 %0, 1, !dbg !11437
  %3 = select i1 %2, i32 768, i32 0, !dbg !11436
  ret i32 %3, !dbg !11439
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11440 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11444, metadata !DIExpression()), !dbg !11445
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11446
  %3 = load volatile i32, i32* %2, align 4, !dbg !11446
  %4 = and i32 %3, -8193, !dbg !11446
  store volatile i32 %4, i32* %2, align 4, !dbg !11446
  ret void, !dbg !11447
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11448 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11452, metadata !DIExpression()), !dbg !11455
  call void @llvm.dbg.value(metadata i32 %1, metadata !11453, metadata !DIExpression()), !dbg !11455
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11456
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11456
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11456
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11454, metadata !DIExpression()), !dbg !11455
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11457
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11457
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11458
  ret void, !dbg !11459
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11460 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11462, metadata !DIExpression()), !dbg !11465
  call void @llvm.dbg.value(metadata i32 %1, metadata !11463, metadata !DIExpression()), !dbg !11465
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11466
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11466
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11466
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11464, metadata !DIExpression()), !dbg !11465
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11467
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11467
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11468
  ret void, !dbg !11469
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11470 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11472, metadata !DIExpression()), !dbg !11475
  call void @llvm.dbg.value(metadata i32 %1, metadata !11473, metadata !DIExpression()), !dbg !11475
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11476
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11476
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11476
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11474, metadata !DIExpression()), !dbg !11475
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11477
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11477
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11478
  ret void, !dbg !11479
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11480 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11482, metadata !DIExpression()), !dbg !11485
  call void @llvm.dbg.value(metadata i32 %1, metadata !11483, metadata !DIExpression()), !dbg !11485
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11486
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11486
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11486
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11484, metadata !DIExpression()), !dbg !11485
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11487
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11487
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11488
  ret void, !dbg !11489
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11490 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11492, metadata !DIExpression()), !dbg !11497
  call void @llvm.dbg.value(metadata i32 %1, metadata !11493, metadata !DIExpression()), !dbg !11497
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11498
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11498
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11498
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11494, metadata !DIExpression()), !dbg !11497
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11499
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11499
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11499
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11495, metadata !DIExpression()), !dbg !11497
  %10 = bitcast i32* %3 to i8*, !dbg !11500
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11500
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11501
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11501
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11505
  %14 = bitcast %struct.vnd_sensor_config** %13 to i8**, !dbg !11505
  %15 = load i8*, i8** %14, align 4, !dbg !11505
  call void @llvm.dbg.value(metadata i32* %3, metadata !11496, metadata !DIExpression(DW_OP_deref)), !dbg !11497
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !11506
  %17 = icmp slt i32 %16, 0, !dbg !11507
  br i1 %17, label %18, label %21, !dbg !11508

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.137(i32 noundef 1) #24, !dbg !11509
  %20 = zext i8 %19 to i32, !dbg !11509
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.138, i32 0, i32 0), i32 noundef %20) #25, !dbg !11509
  br label %26, !dbg !11515

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11516
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11516
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !11517
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11518
  %25 = load i32, i32* %3, align 4, !dbg !11519
  call void @llvm.dbg.value(metadata i32 %25, metadata !11496, metadata !DIExpression()), !dbg !11497
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !11520
  br label %26, !dbg !11521

26:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11521
  ret void, !dbg !11521
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11522 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11524, metadata !DIExpression()), !dbg !11525
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11526
  %3 = load volatile i32, i32* %2, align 4, !dbg !11526
  %4 = or i32 %3, 8192, !dbg !11526
  store volatile i32 %4, i32* %2, align 4, !dbg !11526
  ret void, !dbg !11527
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11528 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11530, metadata !DIExpression()), !dbg !11534
  call void @llvm.dbg.value(metadata i8* %1, metadata !11531, metadata !DIExpression()), !dbg !11534
  call void @llvm.dbg.value(metadata i32* %2, metadata !11532, metadata !DIExpression()), !dbg !11534
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11535
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11535
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11535
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11533, metadata !DIExpression()), !dbg !11534
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11536
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11536
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11538
  br i1 %9, label %12, label %10, !dbg !11539

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11540
  br label %12, !dbg !11541

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11534
  ret i32 %13, !dbg !11542
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.137(i32 noundef %0) unnamed_addr #4 !dbg !11543 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11545, metadata !DIExpression()), !dbg !11546
  %2 = icmp eq i32 %0, 2, !dbg !11547
  %3 = select i1 %2, i8 87, i8 63, !dbg !11547
  %4 = icmp eq i32 %0, 1, !dbg !11547
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11547
  ret i8 %5, !dbg !11548
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11549 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11553, metadata !DIExpression()), !dbg !11555
  call void @llvm.dbg.value(metadata i32 0, metadata !11554, metadata !DIExpression()), !dbg !11555
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11556
  %3 = load volatile i32, i32* %2, align 4, !dbg !11556
  %4 = and i32 %3, -32769, !dbg !11556
  store volatile i32 %4, i32* %2, align 4, !dbg !11556
  ret void, !dbg !11557
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11558 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11562, metadata !DIExpression()), !dbg !11566
  call void @llvm.dbg.value(metadata i32 %1, metadata !11563, metadata !DIExpression()), !dbg !11566
  call void @llvm.dbg.value(metadata i32 0, metadata !11564, metadata !DIExpression()), !dbg !11566
  call void @llvm.dbg.value(metadata i32 %2, metadata !11565, metadata !DIExpression()), !dbg !11566
  %4 = zext i32 %1 to i64, !dbg !11567
  %5 = mul nuw nsw i64 %4, 25, !dbg !11567
  %6 = zext i32 %2 to i64, !dbg !11567
  %7 = shl nuw nsw i64 %6, 2, !dbg !11567
  %8 = udiv i64 %5, %7, !dbg !11567
  %9 = trunc i64 %8 to i32, !dbg !11567
  %10 = udiv i32 %9, 100, !dbg !11567
  %11 = shl nuw nsw i32 %10, 4, !dbg !11567
  %12 = mul i32 %10, -100, !dbg !11567
  %13 = add i32 %12, %9, !dbg !11567
  %14 = shl i32 %13, 4, !dbg !11567
  %15 = add i32 %14, 50, !dbg !11567
  %16 = udiv i32 %15, 100, !dbg !11567
  %17 = and i32 %16, 240, !dbg !11567
  %18 = add nuw nsw i32 %17, %11, !dbg !11567
  %19 = and i32 %16, 15, !dbg !11567
  %20 = and i32 %18, 65520, !dbg !11570
  %21 = or i32 %20, %19, !dbg !11570
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11571
  store volatile i32 %21, i32* %22, align 4, !dbg !11572
  ret void, !dbg !11573
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11574 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11576, metadata !DIExpression()), !dbg !11578
  call void @llvm.dbg.value(metadata i32 %1, metadata !11577, metadata !DIExpression()), !dbg !11578
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11579
  %4 = load volatile i32, i32* %3, align 4, !dbg !11579
  %5 = and i32 %4, -769, !dbg !11579
  %6 = or i32 %5, %1, !dbg !11579
  store volatile i32 %6, i32* %3, align 4, !dbg !11579
  ret void, !dbg !11580
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11581 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11583, metadata !DIExpression()), !dbg !11585
  call void @llvm.dbg.value(metadata i32 %1, metadata !11584, metadata !DIExpression()), !dbg !11585
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11586
  %4 = load volatile i32, i32* %3, align 4, !dbg !11586
  %5 = and i32 %4, -4097, !dbg !11586
  %6 = or i32 %5, %1, !dbg !11586
  store volatile i32 %6, i32* %3, align 4, !dbg !11586
  ret void, !dbg !11587
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11588 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11590, metadata !DIExpression()), !dbg !11592
  call void @llvm.dbg.value(metadata i32 %1, metadata !11591, metadata !DIExpression()), !dbg !11592
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11593
  %4 = load volatile i32, i32* %3, align 4, !dbg !11593
  %5 = and i32 %4, -12289, !dbg !11593
  %6 = or i32 %5, %1, !dbg !11593
  store volatile i32 %6, i32* %3, align 4, !dbg !11593
  ret void, !dbg !11594
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11595 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11597, metadata !DIExpression()), !dbg !11599
  call void @llvm.dbg.value(metadata i32 %1, metadata !11598, metadata !DIExpression()), !dbg !11599
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11600
  %4 = load volatile i32, i32* %3, align 4, !dbg !11600
  %5 = and i32 %4, -1537, !dbg !11600
  %6 = or i32 %5, %1, !dbg !11600
  store volatile i32 %6, i32* %3, align 4, !dbg !11600
  ret void, !dbg !11601
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11602 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11604, metadata !DIExpression()), !dbg !11605
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11606
  %3 = load volatile i32, i32* %2, align 4, !dbg !11606
  %4 = lshr i32 %3, 3, !dbg !11607
  %5 = and i32 %4, 1, !dbg !11607
  ret i32 %5, !dbg !11608
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11609 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11611, metadata !DIExpression()), !dbg !11612
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11613
  %3 = load volatile i32, i32* %2, align 4, !dbg !11613
  %4 = and i32 %3, 1, !dbg !11613
  ret i32 %4, !dbg !11614
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11615 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11617, metadata !DIExpression()), !dbg !11618
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11619
  %3 = load volatile i32, i32* %2, align 4, !dbg !11619
  %4 = lshr i32 %3, 1, !dbg !11620
  %5 = and i32 %4, 1, !dbg !11620
  ret i32 %5, !dbg !11621
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11622 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11624, metadata !DIExpression()), !dbg !11625
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11626
  %3 = load volatile i32, i32* %2, align 4, !dbg !11626
  %4 = lshr i32 %3, 8, !dbg !11627
  %5 = and i32 %4, 1, !dbg !11627
  ret i32 %5, !dbg !11628
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11629 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11631, metadata !DIExpression()), !dbg !11632
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11633
  store volatile i32 -257, i32* %2, align 4, !dbg !11633
  ret void, !dbg !11634
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11635 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11637, metadata !DIExpression()), !dbg !11639
  %3 = bitcast i32* %2 to i8*, !dbg !11640
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11640
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11638, metadata !DIExpression()), !dbg !11641
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11642
  %5 = load volatile i32, i32* %4, align 4, !dbg !11642
  store volatile i32 %5, i32* %2, align 4, !dbg !11643
  %6 = load volatile i32, i32* %2, align 4, !dbg !11644
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11645
  %8 = load volatile i32, i32* %7, align 4, !dbg !11645
  store volatile i32 %8, i32* %2, align 4, !dbg !11646
  %9 = load volatile i32, i32* %2, align 4, !dbg !11647
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11648
  ret void, !dbg !11648
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11649 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11651, metadata !DIExpression()), !dbg !11653
  %3 = bitcast i32* %2 to i8*, !dbg !11654
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11654
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11652, metadata !DIExpression()), !dbg !11655
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11656
  %5 = load volatile i32, i32* %4, align 4, !dbg !11656
  store volatile i32 %5, i32* %2, align 4, !dbg !11657
  %6 = load volatile i32, i32* %2, align 4, !dbg !11658
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11659
  %8 = load volatile i32, i32* %7, align 4, !dbg !11659
  store volatile i32 %8, i32* %2, align 4, !dbg !11660
  %9 = load volatile i32, i32* %2, align 4, !dbg !11661
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11662
  ret void, !dbg !11662
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11663 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11665, metadata !DIExpression()), !dbg !11667
  %3 = bitcast i32* %2 to i8*, !dbg !11668
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11668
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11666, metadata !DIExpression()), !dbg !11669
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11670
  %5 = load volatile i32, i32* %4, align 4, !dbg !11670
  store volatile i32 %5, i32* %2, align 4, !dbg !11671
  %6 = load volatile i32, i32* %2, align 4, !dbg !11672
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11673
  %8 = load volatile i32, i32* %7, align 4, !dbg !11673
  store volatile i32 %8, i32* %2, align 4, !dbg !11674
  %9 = load volatile i32, i32* %2, align 4, !dbg !11675
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11676
  ret void, !dbg !11676
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11677 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11679, metadata !DIExpression()), !dbg !11681
  %3 = bitcast i32* %2 to i8*, !dbg !11682
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11682
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11680, metadata !DIExpression()), !dbg !11683
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11684
  %5 = load volatile i32, i32* %4, align 4, !dbg !11684
  store volatile i32 %5, i32* %2, align 4, !dbg !11685
  %6 = load volatile i32, i32* %2, align 4, !dbg !11686
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11687
  %8 = load volatile i32, i32* %7, align 4, !dbg !11687
  store volatile i32 %8, i32* %2, align 4, !dbg !11688
  %9 = load volatile i32, i32* %2, align 4, !dbg !11689
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11690
  ret void, !dbg !11690
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11691 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11693, metadata !DIExpression()), !dbg !11694
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11695
  %3 = load volatile i32, i32* %2, align 4, !dbg !11695
  %4 = lshr i32 %3, 7, !dbg !11696
  %5 = and i32 %4, 1, !dbg !11696
  ret i32 %5, !dbg !11697
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !11698 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11702, metadata !DIExpression()), !dbg !11704
  call void @llvm.dbg.value(metadata i8 %1, metadata !11703, metadata !DIExpression()), !dbg !11704
  %3 = zext i8 %1 to i32, !dbg !11705
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11706
  store volatile i32 %3, i32* %4, align 4, !dbg !11707
  ret void, !dbg !11708
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11709 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11711, metadata !DIExpression()), !dbg !11712
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11713
  %3 = load volatile i32, i32* %2, align 4, !dbg !11713
  %4 = lshr i32 %3, 5, !dbg !11714
  %5 = and i32 %4, 1, !dbg !11714
  ret i32 %5, !dbg !11715
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11716 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11720, metadata !DIExpression()), !dbg !11721
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11722
  %3 = load volatile i32, i32* %2, align 4, !dbg !11722
  %4 = trunc i32 %3 to i8, !dbg !11723
  ret i8 %4, !dbg !11724
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11725 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11727, metadata !DIExpression()), !dbg !11733
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11734
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11734
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11734
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11728, metadata !DIExpression()), !dbg !11733
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11735
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11735
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11735
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11729, metadata !DIExpression()), !dbg !11733
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !11736
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11737
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11737
  %10 = tail call fastcc zeroext i1 @device_is_ready.140(%struct.device* noundef %9) #24, !dbg !11739
  br i1 %10, label %14, label %11, !dbg !11740

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.137(i32 noundef 1) #24, !dbg !11741
  %13 = zext i8 %12 to i32, !dbg !11741
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3.141, i32 0, i32 0), i32 noundef %13) #25, !dbg !11741
  br label %62, !dbg !11747

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11748
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11749
  %17 = bitcast %struct.vnd_sensor_config** %16 to i8**, !dbg !11749
  %18 = load i8*, i8** %17, align 4, !dbg !11749
  %19 = tail call fastcc i32 @clock_control_on.142(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !11750
  call void @llvm.dbg.value(metadata i32 %19, metadata !11732, metadata !DIExpression()), !dbg !11733
  %20 = icmp eq i32 %19, 0, !dbg !11751
  br i1 %20, label %24, label %21, !dbg !11753

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.137(i32 noundef 1) #24, !dbg !11754
  %23 = zext i8 %22 to i32, !dbg !11754
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4.143, i32 0, i32 0), i32 noundef %23) #25, !dbg !11754
  br label %62, !dbg !11760

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11761
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11761
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !11762
  call void @llvm.dbg.value(metadata i32 %27, metadata !11732, metadata !DIExpression()), !dbg !11733
  %28 = icmp slt i32 %27, 0, !dbg !11763
  br i1 %28, label %62, label %29, !dbg !11765

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11766
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11766
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !11767
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11768
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !11769
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11770
  %34 = load i32, i32* %33, align 4, !dbg !11770
  %35 = icmp ult i32 %34, 3, !dbg !11772
  br i1 %35, label %39, label %36, !dbg !11772

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.137(i32 noundef 2) #24, !dbg !11773
  %38 = zext i8 %37 to i32, !dbg !11773
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5.144, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !11773
  call void @llvm.dbg.value(metadata i32 0, metadata !11730, metadata !DIExpression()), !dbg !11733
  call void @llvm.dbg.value(metadata i32 0, metadata !11731, metadata !DIExpression()), !dbg !11733
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11772
  %41 = load i32, i32* %40, align 4, !dbg !11772
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.6, i32 0, i32 %34, !dbg !11772
  %43 = load i32, i32* %42, align 4, !dbg !11772
  br label %44, !dbg !11772

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11782
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11782
  call void @llvm.dbg.value(metadata i32 %46, metadata !11731, metadata !DIExpression()), !dbg !11733
  call void @llvm.dbg.value(metadata i32 %45, metadata !11730, metadata !DIExpression()), !dbg !11733
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11783
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !11784
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11785
  %49 = load i8, i8* %48, align 4, !dbg !11785, !range !7408
  %50 = icmp eq i8 %49, 0, !dbg !11785
  br i1 %50, label %52, label %51, !dbg !11787

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !11788
  br label %52, !dbg !11790

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11791
  %54 = load i32, i32* %53, align 4, !dbg !11791
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !11792
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11793
  %56 = load i8, i8* %55, align 4, !dbg !11793, !range !7408
  %57 = icmp eq i8 %56, 0, !dbg !11793
  br i1 %57, label %60, label %58, !dbg !11795

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11796
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !11798
  br label %60, !dbg !11799

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11800
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !11801
  br label %62, !dbg !11802

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11733
  ret i32 %63, !dbg !11803
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #11 !dbg !11804 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11808, metadata !DIExpression()), !dbg !11812
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11813
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11813
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11813
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11809, metadata !DIExpression()), !dbg !11812
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11810, metadata !DIExpression()), !dbg !11812
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11814
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !11815
  ret void, !dbg !11816
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.140(%struct.device* noundef %0) unnamed_addr #1 !dbg !11817 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11821, metadata !DIExpression()), !dbg !11822
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11823, !srcloc !11825
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.145(%struct.device* noundef %0) #24, !dbg !11826
  ret i1 %2, !dbg !11827
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.142(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11828 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11830, metadata !DIExpression()), !dbg !11833
  call void @llvm.dbg.value(metadata i8* %1, metadata !11831, metadata !DIExpression()), !dbg !11833
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11834
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11834
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11834
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11832, metadata !DIExpression()), !dbg !11833
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11835
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11835
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11836
  ret i32 %8, !dbg !11837
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11838 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11842, metadata !DIExpression()), !dbg !11846
  call void @llvm.dbg.value(metadata i8 0, metadata !11843, metadata !DIExpression()), !dbg !11846
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11847
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11847
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11845, metadata !DIExpression(DW_OP_deref)), !dbg !11846
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11848
  call void @llvm.dbg.value(metadata i32 %4, metadata !11844, metadata !DIExpression()), !dbg !11846
  %5 = icmp slt i32 %4, 0, !dbg !11849
  br i1 %5, label %9, label %6, !dbg !11851

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11852
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11845, metadata !DIExpression()), !dbg !11846
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !11853
  br label %9, !dbg !11854

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11846
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11855
  ret i32 %10, !dbg !11855
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11856 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11858, metadata !DIExpression()), !dbg !11862
  call void @llvm.dbg.value(metadata i32 12, metadata !11859, metadata !DIExpression()), !dbg !11862
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11863

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11864, metadata !DIExpression()) #23, !dbg !11870
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !11873, !srcloc !11874
  call void @llvm.dbg.value(metadata i32 %4, metadata !11869, metadata !DIExpression()) #23, !dbg !11870
  %5 = or i32 %4, 12, !dbg !11875
  call void @llvm.dbg.value(metadata i32 %5, metadata !11860, metadata !DIExpression()), !dbg !11876
  call void @llvm.dbg.value(metadata i32 %5, metadata !11877, metadata !DIExpression()) #23, !dbg !11884
  call void @llvm.dbg.value(metadata i32* %2, metadata !11882, metadata !DIExpression()) #23, !dbg !11884
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !11886, !srcloc !11887
  call void @llvm.dbg.value(metadata i32 %6, metadata !11883, metadata !DIExpression()) #23, !dbg !11884
  %7 = icmp eq i32 %6, 0, !dbg !11863
  br i1 %7, label %8, label %3, !dbg !11875, !llvm.loop !11888

8:                                                ; preds = %3
  ret void, !dbg !11889
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11890 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11892, metadata !DIExpression()), !dbg !11896
  call void @llvm.dbg.value(metadata i32 %1, metadata !11893, metadata !DIExpression()), !dbg !11896
  call void @llvm.dbg.value(metadata i32 %2, metadata !11894, metadata !DIExpression()), !dbg !11896
  call void @llvm.dbg.value(metadata i32 0, metadata !11895, metadata !DIExpression()), !dbg !11896
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11897
  %5 = load volatile i32, i32* %4, align 4, !dbg !11897
  %6 = and i32 %5, -5633, !dbg !11897
  %7 = or i32 %2, %1, !dbg !11897
  %8 = or i32 %7, %6, !dbg !11897
  store volatile i32 %8, i32* %4, align 4, !dbg !11897
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11898
  %10 = load volatile i32, i32* %9, align 4, !dbg !11898
  %11 = and i32 %10, -12289, !dbg !11898
  store volatile i32 %11, i32* %9, align 4, !dbg !11898
  ret void, !dbg !11899
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11900 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11902, metadata !DIExpression()), !dbg !11903
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11904
  %3 = load volatile i32, i32* %2, align 4, !dbg !11904
  %4 = or i32 %3, 8, !dbg !11904
  store volatile i32 %4, i32* %2, align 4, !dbg !11904
  ret void, !dbg !11905
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11906 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11910, metadata !DIExpression()), !dbg !11913
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11911, metadata !DIExpression()), !dbg !11913
  call void @llvm.dbg.value(metadata i32 0, metadata !11912, metadata !DIExpression()), !dbg !11913
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11914
  %3 = load %struct.vnd_sensor_config*, %struct.vnd_sensor_config** %2, align 4, !dbg !11914
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11915
  %5 = load i8, i8* %4, align 4, !dbg !11915
  %6 = tail call i32 @pinctrl_configure_pins(%struct.vnd_sensor_config* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11916
  ret i32 %6, !dbg !11917
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.145(%struct.device* noundef %0) unnamed_addr #1 !dbg !11918 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11920, metadata !DIExpression()), !dbg !11921
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11922
  ret i1 %2, !dbg !11923
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !11924 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11926, metadata !DIExpression()), !dbg !11927
  tail call fastcc void @__NVIC_SetPriority.147() #24, !dbg !11928
  store i32 16799, i32* @last_load, align 4, !dbg !11929
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11930
  store volatile i32 16799, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11931
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11932
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11933
  %3 = or i32 %2, 7, !dbg !11933
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11933
  ret i32 0, !dbg !11934
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.147() unnamed_addr #15 !dbg !11935 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11937, metadata !DIExpression()), !dbg !11939
  call void @llvm.dbg.value(metadata i32 1, metadata !11938, metadata !DIExpression()), !dbg !11939
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11940
  ret void, !dbg !11943
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11944 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11946, metadata !DIExpression()), !dbg !11948
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !11949
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11950
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11951
  %5 = add i32 %4, %3, !dbg !11951
  store i32 %5, i32* @cycle_count, align 4, !dbg !11951
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11952
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11953
  %7 = sub i32 %5, %6, !dbg !11956
  %8 = udiv i32 %7, 16800, !dbg !11957
  call void @llvm.dbg.value(metadata i32 %8, metadata !11947, metadata !DIExpression()), !dbg !11948
  %9 = mul nuw i32 %8, 16800, !dbg !11958
  %10 = add i32 %9, %6, !dbg !11959
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11959
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11960
  tail call void @z_arm_int_exit() #25, !dbg !11961
  ret void, !dbg !11962
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !11963 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11968
  call void @llvm.dbg.value(metadata i32 %1, metadata !11965, metadata !DIExpression()), !dbg !11969
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11970
  call void @llvm.dbg.value(metadata i32 %2, metadata !11966, metadata !DIExpression()), !dbg !11969
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11971
  call void @llvm.dbg.value(metadata i32 %3, metadata !11967, metadata !DIExpression()), !dbg !11969
  %4 = and i32 %2, 65536, !dbg !11972
  %5 = icmp ne i32 %4, 0, !dbg !11972
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11974
  %8 = load i32, i32* @last_load, align 4, !dbg !11969
  br i1 %7, label %9, label %13, !dbg !11974

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11975
  %11 = add i32 %10, %8, !dbg !11975
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11975
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11977
  br label %13, !dbg !11978

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11979
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11980
  %16 = add i32 %14, %15, !dbg !11981
  ret i32 %16, !dbg !11982
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11983 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11987, metadata !DIExpression()), !dbg !12000
  call void @llvm.dbg.value(metadata i1 %1, metadata !11988, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12000
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !12001
  br i1 %4, label %5, label %8, !dbg !12001

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12003
  %7 = and i32 %6, -2, !dbg !12003
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12003
  store i32 -16777216, i32* @last_load, align 4, !dbg !12005
  br label %54, !dbg !12006

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !12007
  call void @llvm.dbg.value(metadata i32 %9, metadata !11992, metadata !DIExpression()), !dbg !12000
  br i1 %3, label %18, label %10, !dbg !12008

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !12008
  call void @llvm.dbg.value(metadata i32 undef, metadata !11987, metadata !DIExpression()), !dbg !12000
  %12 = icmp slt i32 %11, 1, !dbg !12009
  br i1 %12, label %18, label %13, !dbg !12009

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 997, !dbg !12009
  %15 = select i1 %14, i32 %11, i32 997, !dbg !12009
  %16 = mul nuw nsw i32 %15, 16800, !dbg !12009
  %17 = add nuw nsw i32 %16, 16799, !dbg !12009
  br label %18, !dbg !12009

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 16799, %10 ], [ 16749599, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11987, metadata !DIExpression()), !dbg !12000
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12010, metadata !DIExpression()) #23, !dbg !12017
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12019, !srcloc !12025
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !12019
  call void @llvm.dbg.value(metadata i32 %21, metadata !12022, metadata !DIExpression()) #23, !dbg !12026
  call void @llvm.dbg.value(metadata i32 undef, metadata !12023, metadata !DIExpression()) #23, !dbg !12026
  call void @llvm.dbg.value(metadata i32 %21, metadata !12016, metadata !DIExpression()) #23, !dbg !12017
  call void @llvm.dbg.value(metadata i32 %21, metadata !11993, metadata !DIExpression()), !dbg !12000
  %22 = tail call fastcc i32 @elapsed() #24, !dbg !12027
  call void @llvm.dbg.value(metadata i32 %22, metadata !11998, metadata !DIExpression()), !dbg !12000
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12028
  call void @llvm.dbg.value(metadata i32 %23, metadata !11990, metadata !DIExpression()), !dbg !12000
  %24 = load i32, i32* @cycle_count, align 4, !dbg !12029
  %25 = add i32 %24, %22, !dbg !12029
  store i32 %25, i32* @cycle_count, align 4, !dbg !12029
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12030
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !12031
  %27 = sub i32 %25, %26, !dbg !12032
  call void @llvm.dbg.value(metadata i32 %27, metadata !11999, metadata !DIExpression()), !dbg !12000
  %28 = icmp slt i32 %27, 0, !dbg !12033
  br i1 %28, label %38, label %29, !dbg !12035

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !11989, metadata !DIExpression()), !dbg !12000
  call void @llvm.dbg.value(metadata i32 undef, metadata !11989, metadata !DIExpression()), !dbg !12000
  %30 = add nuw i32 %19, %27, !dbg !12036
  %31 = urem i32 %30, 16800, !dbg !12038
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !11989, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12000
  %32 = sub nuw nsw i32 %19, %31, !dbg !12039
  call void @llvm.dbg.value(metadata i32 %32, metadata !11989, metadata !DIExpression()), !dbg !12000
  %33 = icmp ugt i32 %32, 1050, !dbg !12040
  br i1 %33, label %34, label %36, !dbg !12040

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !11989, metadata !DIExpression()), !dbg !12000
  %35 = icmp ugt i32 %32, 16749600, !dbg !12041
  br i1 %35, label %38, label %36, !dbg !12043

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1050, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1050, %18 ], [ 16749600, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !12044
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12045
  call void @llvm.dbg.value(metadata i32 %40, metadata !11991, metadata !DIExpression()), !dbg !12000
  %41 = add nsw i32 %39, -1, !dbg !12046
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12047
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12048
  %42 = icmp ult i32 %23, %40, !dbg !12049
  br i1 %42, label %43, label %48, !dbg !12051

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !12052
  %45 = add i32 %23, %9, !dbg !12054
  %46 = sub i32 %45, %40, !dbg !12055
  %47 = add i32 %46, %44, !dbg !12052
  br label %52, !dbg !12056

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !12057
  %50 = load i32, i32* @cycle_count, align 4, !dbg !12059
  %51 = add i32 %49, %50, !dbg !12059
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !12060
  store i32 %53, i32* @cycle_count, align 4, !dbg !12060
  call void @llvm.dbg.value(metadata i32 %21, metadata !12061, metadata !DIExpression()) #23, !dbg !12067
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12066, metadata !DIExpression()) #23, !dbg !12067
  call void @llvm.dbg.value(metadata i32 %21, metadata !12069, metadata !DIExpression()) #23, !dbg !12072
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !12074, !srcloc !12075
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !12076
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !12077 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12010, metadata !DIExpression()) #23, !dbg !12081
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12083, !srcloc !12025
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12083
  call void @llvm.dbg.value(metadata i32 %2, metadata !12022, metadata !DIExpression()) #23, !dbg !12085
  call void @llvm.dbg.value(metadata i32 undef, metadata !12023, metadata !DIExpression()) #23, !dbg !12085
  call void @llvm.dbg.value(metadata i32 %2, metadata !12016, metadata !DIExpression()) #23, !dbg !12081
  call void @llvm.dbg.value(metadata i32 %2, metadata !12079, metadata !DIExpression()), !dbg !12086
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !12087
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12088
  %5 = add i32 %4, %3, !dbg !12089
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12090
  %7 = sub i32 %5, %6, !dbg !12091
  call void @llvm.dbg.value(metadata i32 %7, metadata !12080, metadata !DIExpression()), !dbg !12086
  call void @llvm.dbg.value(metadata i32 %2, metadata !12061, metadata !DIExpression()) #23, !dbg !12092
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12066, metadata !DIExpression()) #23, !dbg !12092
  call void @llvm.dbg.value(metadata i32 %2, metadata !12069, metadata !DIExpression()) #23, !dbg !12094
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !12096, !srcloc !12075
  %8 = udiv i32 %7, 16800, !dbg !12097
  ret i32 %8, !dbg !12098
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !12099 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12010, metadata !DIExpression()) #23, !dbg !12103
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12105, !srcloc !12025
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12105
  call void @llvm.dbg.value(metadata i32 %2, metadata !12022, metadata !DIExpression()) #23, !dbg !12107
  call void @llvm.dbg.value(metadata i32 undef, metadata !12023, metadata !DIExpression()) #23, !dbg !12107
  call void @llvm.dbg.value(metadata i32 %2, metadata !12016, metadata !DIExpression()) #23, !dbg !12103
  call void @llvm.dbg.value(metadata i32 %2, metadata !12101, metadata !DIExpression()), !dbg !12108
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !12109
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12110
  %5 = add i32 %4, %3, !dbg !12111
  call void @llvm.dbg.value(metadata i32 %5, metadata !12102, metadata !DIExpression()), !dbg !12108
  call void @llvm.dbg.value(metadata i32 %2, metadata !12061, metadata !DIExpression()) #23, !dbg !12112
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12066, metadata !DIExpression()) #23, !dbg !12112
  call void @llvm.dbg.value(metadata i32 %2, metadata !12069, metadata !DIExpression()) #23, !dbg !12114
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !12116, !srcloc !12075
  ret i32 %5, !dbg !12117
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !12118 {
  %1 = load i32, i32* @last_load, align 4, !dbg !12119
  %2 = icmp eq i32 %1, -16777216, !dbg !12121
  br i1 %2, label %3, label %6, !dbg !12122

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12123
  %5 = or i32 %4, 1, !dbg !12123
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12123
  br label %6, !dbg !12125

6:                                                ; preds = %3, %0
  ret void, !dbg !12126
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !12127 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12128
  %2 = and i32 %1, -2, !dbg !12128
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12128
  ret void, !dbg !12129
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !12130 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12156, metadata !DIExpression()), !dbg !12159
  call void @llvm.dbg.value(metadata i8 %1, metadata !12157, metadata !DIExpression()), !dbg !12159
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12158, metadata !DIExpression()), !dbg !12159
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12160
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12160
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12159
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12161
  %8 = load i8, i8* %6, align 4, !dbg !12162
  %9 = zext i8 %8 to i32, !dbg !12163
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12163
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12164
  br i1 %11, label %18, label %24, !dbg !12165

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12159
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12161
  %14 = load i8, i8* %6, align 4, !dbg !12162
  %15 = zext i8 %14 to i32, !dbg !12163
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12163
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12164
  br i1 %17, label %18, label %24, !dbg !12165, !llvm.loop !12166

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12168
  %21 = load i8, i8* %20, align 1, !dbg !12168
  %22 = icmp eq i8 %21, %1, !dbg !12171
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12172
  br i1 %22, label %24, label %12, !dbg !12173

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12159
  ret i32 %25, !dbg !12174
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct.vnd_sensor_config* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12175 {
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_config* %0, metadata !12186, metadata !DIExpression()), !dbg !12202
  call void @llvm.dbg.value(metadata i8 %1, metadata !12187, metadata !DIExpression()), !dbg !12202
  call void @llvm.dbg.value(metadata i32 %2, metadata !12188, metadata !DIExpression()), !dbg !12202
  call void @llvm.dbg.value(metadata i32 0, metadata !12191, metadata !DIExpression()), !dbg !12202
  call void @llvm.dbg.value(metadata i32 0, metadata !12192, metadata !DIExpression()), !dbg !12202
  call void @llvm.dbg.value(metadata i8 0, metadata !12193, metadata !DIExpression()), !dbg !12203
  %4 = icmp eq i8 %1, 0, !dbg !12204
  br i1 %4, label %35, label %5, !dbg !12205

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12204
  br label %9, !dbg !12205

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !12193, metadata !DIExpression()), !dbg !12203
  call void @llvm.dbg.value(metadata i32 %29, metadata !12191, metadata !DIExpression()), !dbg !12202
  %8 = icmp eq i32 %34, %6, !dbg !12204
  br i1 %8, label %35, label %9, !dbg !12205, !llvm.loop !12206

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12193, metadata !DIExpression()), !dbg !12203
  call void @llvm.dbg.value(metadata i32 %11, metadata !12191, metadata !DIExpression()), !dbg !12202
  %12 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %0, i32 %10, i32 0, !dbg !12208
  %13 = load i32, i32* %12, align 4, !dbg !12208
  call void @llvm.dbg.value(metadata i32 %13, metadata !12190, metadata !DIExpression()), !dbg !12202
  %14 = and i32 %13, 31, !dbg !12209
  %15 = icmp ult i32 %14, 16, !dbg !12210
  br i1 %15, label %16, label %20, !dbg !12211

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %0, i32 %10, i32 1, !dbg !12212
  %18 = load i32, i32* %17, align 4, !dbg !12212
  %19 = or i32 %18, 32, !dbg !12214
  call void @llvm.dbg.value(metadata i32 %19, metadata !12191, metadata !DIExpression()), !dbg !12202
  br label %28, !dbg !12215

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12216

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %0, i32 %10, i32 1, !dbg !12217
  %23 = load i32, i32* %22, align 4, !dbg !12217
  call void @llvm.dbg.value(metadata i32 %23, metadata !12195, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12218
  %24 = lshr i32 %23, 7, !dbg !12219
  %25 = and i32 %24, 16, !dbg !12219
  %26 = or i32 %25, %23, !dbg !12219
  call void @llvm.dbg.value(metadata i32 %26, metadata !12191, metadata !DIExpression()), !dbg !12202
  br label %28, !dbg !12220

27:                                               ; preds = %20
  br label %28, !dbg !12221

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !12202
  call void @llvm.dbg.value(metadata i32 %29, metadata !12191, metadata !DIExpression()), !dbg !12202
  %30 = lshr i32 %13, 5, !dbg !12221
  %31 = and i32 %30, 255, !dbg !12221
  call void @llvm.dbg.value(metadata i32 %31, metadata !12189, metadata !DIExpression()), !dbg !12202
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !12222
  call void @llvm.dbg.value(metadata i32 %32, metadata !12192, metadata !DIExpression()), !dbg !12202
  %33 = icmp slt i32 %32, 0, !dbg !12223
  %34 = add nuw nsw i32 %10, 1, !dbg !12225
  call void @llvm.dbg.value(metadata i32 %34, metadata !12193, metadata !DIExpression()), !dbg !12203
  br i1 %33, label %35, label %7, !dbg !12226

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12227
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12228 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12232, metadata !DIExpression()), !dbg !12236
  call void @llvm.dbg.value(metadata i32 %1, metadata !12233, metadata !DIExpression()), !dbg !12236
  call void @llvm.dbg.value(metadata i32 %2, metadata !12234, metadata !DIExpression()), !dbg !12236
  %4 = icmp ugt i32 %0, 175, !dbg !12237
  br i1 %4, label %16, label %5, !dbg !12239

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12240
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12241
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12241
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12235, metadata !DIExpression()), !dbg !12236
  %9 = add nsw i32 %6, -9, !dbg !12242
  %10 = icmp ult i32 %9, 2, !dbg !12242
  br i1 %10, label %16, label %11, !dbg !12244

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.152(%struct.device* noundef %8) #24, !dbg !12245
  br i1 %12, label %13, label %16, !dbg !12246

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !12247
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !12248
  br label %16, !dbg !12249

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !12236
  ret i32 %17, !dbg !12250
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.152(%struct.device* noundef %0) unnamed_addr #1 !dbg !12251 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12255, metadata !DIExpression()), !dbg !12256
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12257, !srcloc !12259
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.153(%struct.device* noundef %0) #24, !dbg !12260
  ret i1 %2, !dbg !12261
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.153(%struct.device* noundef %0) unnamed_addr #1 !dbg !12262 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12264, metadata !DIExpression()), !dbg !12265
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !12266
  ret i1 %2, !dbg !12267
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !12268 {
  ret void, !dbg !12269
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #5 !dbg !12270 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12272, metadata !DIExpression()), !dbg !12277
  call void @llvm.dbg.value(metadata i32 0, metadata !12273, metadata !DIExpression()), !dbg !12277
  call void @llvm.dbg.value(metadata i32 2, metadata !12274, metadata !DIExpression()), !dbg !12277
  call void @llvm.dbg.value(metadata i32 0, metadata !12275, metadata !DIExpression()), !dbg !12277
  call void @llvm.dbg.value(metadata i32 2, metadata !12276, metadata !DIExpression()), !dbg !12277
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12278
  %2 = and i32 %1, 12, !dbg !12279
  call void @llvm.dbg.value(metadata i32 %2, metadata !12272, metadata !DIExpression()), !dbg !12277
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12280

3:                                                ; preds = %0
  br label %21, !dbg !12281

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12283
  call void @llvm.dbg.value(metadata i32 %5, metadata !12275, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12277
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12284
  %7 = and i32 %6, 63, !dbg !12285
  call void @llvm.dbg.value(metadata i32 %7, metadata !12276, metadata !DIExpression()), !dbg !12277
  %8 = and i32 %5, 4194304, !dbg !12286
  %9 = icmp eq i32 %8, 0, !dbg !12286
  %10 = select i1 %9, i32 16000000, i32 12000000
  %11 = udiv i32 %10, %7, !dbg !12288
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12288
  %13 = lshr i32 %12, 6, !dbg !12288
  %14 = and i32 %13, 511, !dbg !12288
  %15 = mul i32 %14, %11, !dbg !12288
  call void @llvm.dbg.value(metadata i32 %15, metadata !12273, metadata !DIExpression()), !dbg !12277
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12289
  %17 = lshr i32 %16, 15, !dbg !12290
  %18 = and i32 %17, 6, !dbg !12290
  %19 = add nuw nsw i32 %18, 2, !dbg !12290
  call void @llvm.dbg.value(metadata i32 %19, metadata !12274, metadata !DIExpression()), !dbg !12277
  %20 = udiv i32 %15, %19, !dbg !12291
  br label %21, !dbg !12292

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 12000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !12293
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12294
  %24 = lshr i32 %23, 4, !dbg !12295
  %25 = and i32 %24, 15, !dbg !12295
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !12296
  %27 = load i8, i8* %26, align 1, !dbg !12296
  %28 = zext i8 %27 to i32, !dbg !12296
  call void @llvm.dbg.value(metadata i32 %28, metadata !12272, metadata !DIExpression()), !dbg !12277
  %29 = lshr i32 %22, %28, !dbg !12297
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !12297
  ret void, !dbg !12298
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12299 {
  ret i32 0, !dbg !12304
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12305 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12331, metadata !DIExpression()), !dbg !12342
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12343
  br i1 %3, label %311, label %4, !dbg !12345

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12346
  %6 = load i32, i32* %5, align 4, !dbg !12346
  %7 = and i32 %6, 1, !dbg !12348
  %8 = icmp eq i32 %7, 0, !dbg !12349
  br i1 %8, label %66, label %9, !dbg !12350

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12351
  %11 = and i32 %10, 12, !dbg !12351
  %12 = icmp eq i32 %11, 4, !dbg !12354
  br i1 %12, label %21, label %13, !dbg !12355

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12356
  %15 = and i32 %14, 12, !dbg !12356
  %16 = icmp eq i32 %15, 8, !dbg !12357
  br i1 %16, label %17, label %29, !dbg !12358

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12359
  %19 = and i32 %18, 4194304, !dbg !12360
  %20 = icmp eq i32 %19, 0, !dbg !12361
  br i1 %20, label %29, label %21, !dbg !12362

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12363
  %23 = and i32 %22, 131072, !dbg !12363
  %24 = icmp eq i32 %23, 0, !dbg !12363
  br i1 %24, label %66, label %25, !dbg !12366

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12367
  %27 = load i32, i32* %26, align 4, !dbg !12367
  %28 = icmp eq i32 %27, 0, !dbg !12368
  br i1 %28, label %311, label %66, !dbg !12369

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12370
  %31 = load i32, i32* %30, align 4, !dbg !12370
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !12374

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12375
  %34 = or i32 %33, 65536, !dbg !12375
  br label %45, !dbg !12375

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12377
  %37 = or i32 %36, 262144, !dbg !12377
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12377
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12377
  %39 = or i32 %38, 65536, !dbg !12377
  br label %45, !dbg !12377

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12380
  %42 = and i32 %41, -65537, !dbg !12380
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12380
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12380
  %44 = and i32 %43, -262145, !dbg !12380
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12382
  %47 = load i32, i32* %30, align 4, !dbg !12383
  %48 = icmp eq i32 %47, 0, !dbg !12385
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !12386
  call void @llvm.dbg.value(metadata i32 %49, metadata !12332, metadata !DIExpression()), !dbg !12342
  call void @llvm.dbg.value(metadata i32 %49, metadata !12332, metadata !DIExpression()), !dbg !12342
  br i1 %48, label %58, label %50, !dbg !12387

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12388
  %52 = and i32 %51, 131072, !dbg !12390
  %53 = icmp eq i32 %52, 0, !dbg !12390
  br i1 %53, label %54, label %66, !dbg !12391

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !12392
  %56 = sub i32 %55, %49, !dbg !12395
  %57 = icmp ugt i32 %56, 100, !dbg !12396
  br i1 %57, label %311, label %50, !dbg !12397, !llvm.loop !12398

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12400
  %60 = and i32 %59, 131072, !dbg !12400
  %61 = icmp eq i32 %60, 0, !dbg !12400
  br i1 %61, label %66, label %62, !dbg !12402

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !12403
  %64 = sub i32 %63, %49, !dbg !12406
  %65 = icmp ugt i32 %64, 100, !dbg !12407
  br i1 %65, label %311, label %58, !dbg !12408, !llvm.loop !12409

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !12411
  %68 = and i32 %67, 2, !dbg !12413
  %69 = icmp eq i32 %68, 0, !dbg !12414
  br i1 %69, label %121, label %70, !dbg !12415

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12416
  %72 = and i32 %71, 12, !dbg !12416
  %73 = icmp eq i32 %72, 0, !dbg !12419
  br i1 %73, label %82, label %74, !dbg !12420

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12421
  %76 = and i32 %75, 12, !dbg !12421
  %77 = icmp eq i32 %76, 8, !dbg !12422
  br i1 %77, label %78, label %90, !dbg !12423

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12424
  %80 = and i32 %79, 4194304, !dbg !12425
  %81 = icmp eq i32 %80, 0, !dbg !12426
  br i1 %81, label %82, label %90, !dbg !12427

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12428
  %84 = and i32 %83, 2, !dbg !12428
  %85 = icmp eq i32 %84, 0, !dbg !12428
  br i1 %85, label %114, label %86, !dbg !12431

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12432
  %88 = load i32, i32* %87, align 4, !dbg !12432
  %89 = icmp eq i32 %88, 1, !dbg !12433
  br i1 %89, label %114, label %311, !dbg !12434

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12435
  %92 = load i32, i32* %91, align 4, !dbg !12435
  %93 = icmp eq i32 %92, 0, !dbg !12438
  br i1 %93, label %104, label %94, !dbg !12439

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12440
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !12442
  call void @llvm.dbg.value(metadata i32 %95, metadata !12332, metadata !DIExpression()), !dbg !12342
  br label %96, !dbg !12443

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12444
  %98 = and i32 %97, 2, !dbg !12445
  %99 = icmp eq i32 %98, 0, !dbg !12445
  br i1 %99, label %100, label %114, !dbg !12443

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !12446
  %102 = sub i32 %101, %95, !dbg !12449
  %103 = icmp ugt i32 %102, 2, !dbg !12450
  br i1 %103, label %311, label %96, !dbg !12451, !llvm.loop !12452

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12454
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !12456
  call void @llvm.dbg.value(metadata i32 %105, metadata !12332, metadata !DIExpression()), !dbg !12342
  br label %106, !dbg !12457

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12458
  %108 = and i32 %107, 2, !dbg !12458
  %109 = icmp eq i32 %108, 0, !dbg !12458
  br i1 %109, label %121, label %110, !dbg !12457

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !12459
  %112 = sub i32 %111, %105, !dbg !12462
  %113 = icmp ugt i32 %112, 2, !dbg !12463
  br i1 %113, label %311, label %106, !dbg !12464, !llvm.loop !12465

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12467
  %116 = and i32 %115, -249, !dbg !12467
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12467
  %118 = load i32, i32* %117, align 4, !dbg !12467
  %119 = shl i32 %118, 3, !dbg !12467
  %120 = or i32 %119, %116, !dbg !12467
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12467
  br label %121, !dbg !12468

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12468
  %123 = and i32 %122, 8, !dbg !12470
  %124 = icmp eq i32 %123, 0, !dbg !12471
  br i1 %124, label %149, label %125, !dbg !12472

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12473
  %127 = load i32, i32* %126, align 4, !dbg !12473
  %128 = icmp eq i32 %127, 0, !dbg !12476
  br i1 %128, label %139, label %129, !dbg !12477

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12478
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !12480
  call void @llvm.dbg.value(metadata i32 %130, metadata !12332, metadata !DIExpression()), !dbg !12342
  br label %131, !dbg !12481

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12482
  %133 = and i32 %132, 2, !dbg !12483
  %134 = icmp eq i32 %133, 0, !dbg !12483
  br i1 %134, label %135, label %149, !dbg !12481

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !12484
  %137 = sub i32 %136, %130, !dbg !12487
  %138 = icmp ugt i32 %137, 2, !dbg !12488
  br i1 %138, label %311, label %131, !dbg !12489, !llvm.loop !12490

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12492
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !12494
  call void @llvm.dbg.value(metadata i32 %140, metadata !12332, metadata !DIExpression()), !dbg !12342
  br label %141, !dbg !12495

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12496
  %143 = and i32 %142, 2, !dbg !12496
  %144 = icmp eq i32 %143, 0, !dbg !12496
  br i1 %144, label %149, label %145, !dbg !12495

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !12497
  %147 = sub i32 %146, %140, !dbg !12500
  %148 = icmp ugt i32 %147, 2, !dbg !12501
  br i1 %148, label %311, label %141, !dbg !12502, !llvm.loop !12503

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12505
  %151 = and i32 %150, 4, !dbg !12506
  %152 = icmp eq i32 %151, 0, !dbg !12507
  br i1 %152, label %221, label %153, !dbg !12508

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !12334, metadata !DIExpression()), !dbg !12509
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12510
  %155 = and i32 %154, 268435456, !dbg !12510
  %156 = icmp eq i32 %155, 0, !dbg !12510
  br i1 %156, label %157, label %164, !dbg !12511

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12512
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12512
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12338, metadata !DIExpression()), !dbg !12512
  store volatile i32 0, i32* %2, align 4, !dbg !12512
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12512
  %160 = or i32 %159, 268435456, !dbg !12512
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12512
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12512
  %162 = and i32 %161, 268435456, !dbg !12512
  store volatile i32 %162, i32* %2, align 4, !dbg !12512
  %163 = load volatile i32, i32* %2, align 4, !dbg !12512
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12513
  call void @llvm.dbg.value(metadata i32 1, metadata !12334, metadata !DIExpression()), !dbg !12509
  br label %164, !dbg !12514

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !12334, metadata !DIExpression()), !dbg !12509
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12515
  %166 = and i32 %165, 256, !dbg !12515
  %167 = icmp eq i32 %166, 0, !dbg !12515
  br i1 %167, label %168, label %180, !dbg !12517

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12518
  %170 = or i32 %169, 256, !dbg !12518
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12518
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !12520
  call void @llvm.dbg.value(metadata i32 %171, metadata !12332, metadata !DIExpression()), !dbg !12342
  br label %172, !dbg !12521

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12522
  %174 = and i32 %173, 256, !dbg !12522
  %175 = icmp eq i32 %174, 0, !dbg !12522
  br i1 %175, label %176, label %180, !dbg !12521

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !12523
  %178 = sub i32 %177, %171, !dbg !12526
  %179 = icmp ugt i32 %178, 2, !dbg !12527
  br i1 %179, label %311, label %172, !dbg !12528, !llvm.loop !12529

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12531
  %182 = load i32, i32* %181, align 4, !dbg !12531
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12534

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12535
  %185 = or i32 %184, 1, !dbg !12535
  br label %196, !dbg !12535

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12537
  %188 = or i32 %187, 4, !dbg !12537
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12537
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12537
  %190 = or i32 %189, 1, !dbg !12537
  br label %196, !dbg !12537

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12540
  %193 = and i32 %192, -2, !dbg !12540
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12540
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12540
  %195 = and i32 %194, -5, !dbg !12540
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12542
  %198 = load i32, i32* %181, align 4, !dbg !12543
  %199 = icmp eq i32 %198, 0, !dbg !12545
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !12546
  call void @llvm.dbg.value(metadata i32 %200, metadata !12332, metadata !DIExpression()), !dbg !12342
  call void @llvm.dbg.value(metadata i32 %200, metadata !12332, metadata !DIExpression()), !dbg !12342
  br i1 %199, label %209, label %201, !dbg !12547

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12548
  %203 = and i32 %202, 2, !dbg !12550
  %204 = icmp eq i32 %203, 0, !dbg !12550
  br i1 %204, label %205, label %217, !dbg !12551

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !12552
  %207 = sub i32 %206, %200, !dbg !12555
  %208 = icmp ugt i32 %207, 5000, !dbg !12556
  br i1 %208, label %311, label %201, !dbg !12557, !llvm.loop !12558

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12560
  %211 = and i32 %210, 2, !dbg !12560
  %212 = icmp eq i32 %211, 0, !dbg !12560
  br i1 %212, label %217, label %213, !dbg !12562

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !12563
  %215 = sub i32 %214, %200, !dbg !12566
  %216 = icmp ugt i32 %215, 5000, !dbg !12567
  br i1 %216, label %311, label %209, !dbg !12568, !llvm.loop !12569

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12571

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12572
  %220 = and i32 %219, -268435457, !dbg !12572
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12572
  br label %221, !dbg !12575

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12576
  %223 = load i32, i32* %222, align 4, !dbg !12576
  %224 = icmp eq i32 %223, 0, !dbg !12578
  br i1 %224, label %310, label %225, !dbg !12579

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12580
  %227 = and i32 %226, 12, !dbg !12580
  %228 = icmp eq i32 %227, 8, !dbg !12583
  br i1 %228, label %277, label %229, !dbg !12584

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12585
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12588
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !12588
  call void @llvm.dbg.value(metadata i32 %231, metadata !12332, metadata !DIExpression()), !dbg !12342
  call void @llvm.dbg.value(metadata i32 %231, metadata !12332, metadata !DIExpression()), !dbg !12342
  br i1 %230, label %232, label %269, !dbg !12589

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12590
  %234 = and i32 %233, 33554432, !dbg !12590
  %235 = icmp eq i32 %234, 0, !dbg !12590
  br i1 %235, label %240, label %236, !dbg !12592

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !12593
  %238 = sub i32 %237, %231, !dbg !12596
  %239 = icmp ugt i32 %238, 2, !dbg !12597
  br i1 %239, label %311, label %232, !dbg !12598, !llvm.loop !12599

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12601
  %242 = load i32, i32* %241, align 4, !dbg !12601
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12601
  %244 = load i32, i32* %243, align 4, !dbg !12601
  %245 = or i32 %244, %242, !dbg !12601
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12601
  %247 = load i32, i32* %246, align 4, !dbg !12601
  %248 = shl i32 %247, 6, !dbg !12601
  %249 = or i32 %245, %248, !dbg !12601
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12601
  %251 = load i32, i32* %250, align 4, !dbg !12601
  %252 = shl i32 %251, 15, !dbg !12601
  %253 = add i32 %252, -65536, !dbg !12601
  %254 = and i32 %253, -65536, !dbg !12601
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12601
  %256 = load i32, i32* %255, align 4, !dbg !12601
  %257 = shl i32 %256, 24, !dbg !12601
  %258 = or i32 %249, %257, !dbg !12601
  %259 = or i32 %258, %254, !dbg !12601
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12601
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12602
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !12603
  call void @llvm.dbg.value(metadata i32 %260, metadata !12332, metadata !DIExpression()), !dbg !12342
  br label %261, !dbg !12604

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12605
  %263 = and i32 %262, 33554432, !dbg !12606
  %264 = icmp eq i32 %263, 0, !dbg !12606
  br i1 %264, label %265, label %310, !dbg !12604

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !12607
  %267 = sub i32 %266, %260, !dbg !12610
  %268 = icmp ugt i32 %267, 2, !dbg !12611
  br i1 %268, label %311, label %261, !dbg !12612, !llvm.loop !12613

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12615
  %271 = and i32 %270, 33554432, !dbg !12615
  %272 = icmp eq i32 %271, 0, !dbg !12615
  br i1 %272, label %310, label %273, !dbg !12617

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !12618
  %275 = sub i32 %274, %231, !dbg !12621
  %276 = icmp ugt i32 %275, 2, !dbg !12622
  br i1 %276, label %311, label %269, !dbg !12623, !llvm.loop !12624

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12626
  br i1 %278, label %311, label %279, !dbg !12629

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12630
  call void @llvm.dbg.value(metadata i32 %280, metadata !12333, metadata !DIExpression()), !dbg !12342
  %281 = and i32 %280, 4194304, !dbg !12632
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12634
  %283 = load i32, i32* %282, align 4, !dbg !12634
  %284 = icmp eq i32 %281, %283, !dbg !12635
  br i1 %284, label %285, label %311, !dbg !12636

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12637
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12638
  %288 = load i32, i32* %287, align 4, !dbg !12638
  %289 = icmp eq i32 %286, %288, !dbg !12639
  br i1 %289, label %290, label %311, !dbg !12640

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12641
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12642
  %293 = load i32, i32* %292, align 4, !dbg !12642
  %294 = shl i32 %293, 6, !dbg !12643
  %295 = icmp eq i32 %291, %294, !dbg !12644
  br i1 %295, label %296, label %311, !dbg !12645

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12646
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12647
  %299 = load i32, i32* %298, align 4, !dbg !12647
  %300 = shl i32 %299, 15, !dbg !12648
  %301 = add i32 %300, -65536, !dbg !12648
  %302 = and i32 %301, -65536, !dbg !12648
  %303 = icmp eq i32 %297, %302, !dbg !12649
  br i1 %303, label %304, label %311, !dbg !12650

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12651
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12652
  %307 = load i32, i32* %306, align 4, !dbg !12652
  %308 = shl i32 %307, 24, !dbg !12653
  %309 = icmp eq i32 %305, %308, !dbg !12654
  br i1 %309, label %310, label %311, !dbg !12655

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !12656

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !12342
  ret i32 %312, !dbg !12657
}

; Function Attrs: optsize
declare !dbg !12658 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.rtio_spsc* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12660 {
  call void @llvm.dbg.value(metadata %struct.rtio_spsc* %0, metadata !12673, metadata !DIExpression()), !dbg !12676
  call void @llvm.dbg.value(metadata i32 %1, metadata !12674, metadata !DIExpression()), !dbg !12676
  %3 = icmp eq %struct.rtio_spsc* %0, null, !dbg !12677
  br i1 %3, label %115, label %4, !dbg !12679

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12680
  %6 = and i32 %5, 7, !dbg !12680
  %7 = icmp ult i32 %6, %1, !dbg !12682
  br i1 %7, label %8, label %13, !dbg !12683

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12684
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12684
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12686
  %11 = and i32 %10, 7, !dbg !12686
  %12 = icmp eq i32 %11, %1, !dbg !12688
  br i1 %12, label %13, label %115, !dbg !12689

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 0, !dbg !12690
  %15 = load i32, i32* %14, align 4, !dbg !12690
  %16 = and i32 %15, 2, !dbg !12692
  %17 = icmp eq i32 %16, 0, !dbg !12693
  br i1 %17, label %39, label %18, !dbg !12694

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12695
  %20 = icmp eq i32 %19, 0, !dbg !12698
  br i1 %20, label %25, label %21, !dbg !12699

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12700
  %23 = or i32 %22, 7168, !dbg !12700
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12700
  %24 = load i32, i32* %14, align 4, !dbg !12702
  br label %25, !dbg !12704

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12702
  %27 = and i32 %26, 8, !dbg !12705
  %28 = icmp eq i32 %27, 0, !dbg !12706
  br i1 %28, label %32, label %29, !dbg !12707

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12708
  %31 = or i32 %30, 57344, !dbg !12708
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12708
  br label %32, !dbg !12710

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12711
  %34 = and i32 %33, -241, !dbg !12711
  %35 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 2, !dbg !12711
  %36 = load i32, i32* %35, align 4, !dbg !12711
  %37 = or i32 %34, %36, !dbg !12711
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12711
  %38 = load i32, i32* %14, align 4, !dbg !12712
  br label %39, !dbg !12714

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12712
  %41 = and i32 %40, 1, !dbg !12715
  %42 = icmp eq i32 %41, 0, !dbg !12716
  br i1 %42, label %73, label %43, !dbg !12717

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 1, !dbg !12718
  %45 = load i32, i32* %44, align 4, !dbg !12718
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12721

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12722
  %48 = and i32 %47, 131072, !dbg !12725
  %49 = icmp eq i32 %48, 0, !dbg !12725
  br i1 %49, label %115, label %58, !dbg !12726

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12727
  %52 = and i32 %51, 33554432, !dbg !12731
  %53 = icmp eq i32 %52, 0, !dbg !12731
  br i1 %53, label %115, label %58, !dbg !12732

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12733
  %56 = and i32 %55, 2, !dbg !12736
  %57 = icmp eq i32 %56, 0, !dbg !12736
  br i1 %57, label %115, label %58, !dbg !12737

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12738
  %60 = and i32 %59, -4, !dbg !12738
  %61 = or i32 %60, %45, !dbg !12738
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12738
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !12739
  call void @llvm.dbg.value(metadata i32 %62, metadata !12675, metadata !DIExpression()), !dbg !12676
  br label %63, !dbg !12740

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12741
  %65 = and i32 %64, 12, !dbg !12741
  %66 = load i32, i32* %44, align 4, !dbg !12742
  %67 = shl i32 %66, 2, !dbg !12743
  %68 = icmp eq i32 %65, %67, !dbg !12744
  br i1 %68, label %73, label %69, !dbg !12740

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !12745
  %71 = sub i32 %70, %62, !dbg !12748
  %72 = icmp ugt i32 %71, 5000, !dbg !12749
  br i1 %72, label %115, label %63, !dbg !12750, !llvm.loop !12751

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12753
  %75 = and i32 %74, 7, !dbg !12753
  %76 = icmp ugt i32 %75, %1, !dbg !12755
  br i1 %76, label %77, label %82, !dbg !12756

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12757
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12757
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12759
  %80 = and i32 %79, 7, !dbg !12759
  %81 = icmp eq i32 %80, %1, !dbg !12761
  br i1 %81, label %82, label %115, !dbg !12762

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12763
  %84 = and i32 %83, 4, !dbg !12765
  %85 = icmp eq i32 %84, 0, !dbg !12766
  br i1 %85, label %93, label %86, !dbg !12767

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12768
  %88 = and i32 %87, -7169, !dbg !12768
  %89 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 3, !dbg !12768
  %90 = load i32, i32* %89, align 4, !dbg !12768
  %91 = or i32 %88, %90, !dbg !12768
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12768
  %92 = load i32, i32* %14, align 4, !dbg !12770
  br label %93, !dbg !12772

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12770
  %95 = and i32 %94, 8, !dbg !12773
  %96 = icmp eq i32 %95, 0, !dbg !12774
  br i1 %96, label %104, label %97, !dbg !12775

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12776
  %99 = and i32 %98, -57345, !dbg !12776
  %100 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 4, !dbg !12776
  %101 = load i32, i32* %100, align 4, !dbg !12776
  %102 = shl i32 %101, 3, !dbg !12776
  %103 = or i32 %102, %99, !dbg !12776
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12776
  br label %104, !dbg !12778

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !12779
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12780
  %107 = lshr i32 %106, 4, !dbg !12781
  %108 = and i32 %107, 15, !dbg !12781
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12782
  %110 = load i8, i8* %109, align 1, !dbg !12782
  %111 = zext i8 %110 to i32, !dbg !12782
  %112 = lshr i32 %105, %111, !dbg !12783
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12784
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12785
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !12786
  br label %115, !dbg !12787

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12676
  ret i32 %116, !dbg !12788
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12789 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12791, metadata !DIExpression()), !dbg !12795
  call void @llvm.dbg.value(metadata i32 0, metadata !12792, metadata !DIExpression()), !dbg !12795
  call void @llvm.dbg.value(metadata i32 0, metadata !12793, metadata !DIExpression()), !dbg !12795
  call void @llvm.dbg.value(metadata i32 0, metadata !12794, metadata !DIExpression()), !dbg !12795
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12796
  %2 = and i32 %1, 12, !dbg !12797
  switch i32 %2, label %24 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12798

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 12000000, metadata !12794, metadata !DIExpression()), !dbg !12795
  br label %24, !dbg !12799

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12802
  %6 = and i32 %5, 63, !dbg !12804
  call void @llvm.dbg.value(metadata i32 %6, metadata !12791, metadata !DIExpression()), !dbg !12795
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12805
  %8 = and i32 %7, 4194304, !dbg !12805
  %9 = icmp eq i32 %8, 0, !dbg !12807
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12808
  %11 = lshr i32 %10, 6, !dbg !12808
  %12 = and i32 %11, 511, !dbg !12808
  %13 = zext i32 %12 to i64, !dbg !12808
  %14 = select i1 %9, i64 16000000, i64 12000000
  %15 = mul nuw nsw i64 %14, %13, !dbg !12808
  %16 = zext i32 %6 to i64, !dbg !12808
  %17 = udiv i64 %15, %16, !dbg !12808
  %18 = trunc i64 %17 to i32, !dbg !12808
  call void @llvm.dbg.value(metadata i32 %18, metadata !12792, metadata !DIExpression()), !dbg !12795
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12809
  %20 = lshr i32 %19, 15, !dbg !12810
  %21 = and i32 %20, 6, !dbg !12810
  %22 = add nuw nsw i32 %21, 2, !dbg !12810
  call void @llvm.dbg.value(metadata i32 %22, metadata !12793, metadata !DIExpression()), !dbg !12795
  %23 = udiv i32 %18, %22, !dbg !12811
  call void @llvm.dbg.value(metadata i32 %23, metadata !12794, metadata !DIExpression()), !dbg !12795
  br label %24, !dbg !12812

24:                                               ; preds = %0, %4, %3
  %25 = phi i32 [ %23, %4 ], [ 12000000, %3 ], [ 16000000, %0 ], !dbg !12813
  call void @llvm.dbg.value(metadata i32 %25, metadata !12794, metadata !DIExpression()), !dbg !12795
  ret i32 %25, !dbg !12814
}

; Function Attrs: optsize
declare !dbg !12815 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12818 {
  %4 = alloca %struct.rtio_spsc, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12822, metadata !DIExpression()), !dbg !12842
  call void @llvm.dbg.value(metadata i32 %1, metadata !12823, metadata !DIExpression()), !dbg !12842
  call void @llvm.dbg.value(metadata i32 %2, metadata !12824, metadata !DIExpression()), !dbg !12842
  %7 = bitcast %struct.rtio_spsc* %4 to i8*, !dbg !12843
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #23, !dbg !12843
  call void @llvm.dbg.declare(metadata %struct.rtio_spsc* %4, metadata !12825, metadata !DIExpression()), !dbg !12844
  %8 = icmp eq i32 %0, 0, !dbg !12845
  br i1 %8, label %9, label %23, !dbg !12846

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !12847
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !12847
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12835, metadata !DIExpression()), !dbg !12847
  store volatile i32 0, i32* %5, align 4, !dbg !12847
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12847
  %12 = or i32 %11, 1, !dbg !12847
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12847
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12847
  %14 = and i32 %13, 1, !dbg !12847
  store volatile i32 %14, i32* %5, align 4, !dbg !12847
  %15 = load volatile i32, i32* %5, align 4, !dbg !12847
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !12848
  %16 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 0, !dbg !12849
  store i32 256, i32* %16, align 4, !dbg !12850
  %17 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 1, !dbg !12851
  store i32 2, i32* %17, align 4, !dbg !12852
  %18 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 3, !dbg !12853
  store i32 3, i32* %18, align 4, !dbg !12854
  %19 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 2, !dbg !12855
  store i32 0, i32* %19, align 4, !dbg !12856
  %20 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 4, !dbg !12857
  store i32 0, i32* %20, align 4, !dbg !12858
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.rtio_spsc* noundef nonnull %4) #25, !dbg !12859
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12860
  %22 = and i32 %21, -123731969, !dbg !12860
  br label %38, !dbg !12861

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !12862
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !12862
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12839, metadata !DIExpression()), !dbg !12862
  store volatile i32 0, i32* %6, align 4, !dbg !12862
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12862
  %26 = or i32 %25, 4, !dbg !12862
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12862
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12862
  %28 = and i32 %27, 4, !dbg !12862
  store volatile i32 %28, i32* %6, align 4, !dbg !12862
  %29 = load volatile i32, i32* %6, align 4, !dbg !12862
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !12863
  %30 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 0, !dbg !12864
  store i32 512, i32* %30, align 4, !dbg !12865
  %31 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 1, !dbg !12866
  store i32 2, i32* %31, align 4, !dbg !12867
  %32 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 3, !dbg !12868
  store i32 3, i32* %32, align 4, !dbg !12869
  %33 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 2, !dbg !12870
  store i32 0, i32* %33, align 4, !dbg !12871
  %34 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 4, !dbg !12872
  store i32 0, i32* %34, align 4, !dbg !12873
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.rtio_spsc* noundef nonnull %4) #25, !dbg !12874
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12875
  %36 = and i32 %35, 134217727, !dbg !12875
  %37 = shl i32 %2, 3, !dbg !12875
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !12876
  %42 = or i32 %41, %40, !dbg !12876
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12876
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #23, !dbg !12877
  ret void, !dbg !12877
}

; Function Attrs: optsize
declare !dbg !12878 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.rtio_spsc* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !12882 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12883
  ret void, !dbg !12884
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !12885 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12886
  ret void, !dbg !12887
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #10 !dbg !12888 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12889
  ret i32 %1, !dbg !12890
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #5 !dbg !12891 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12892
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12893
  %3 = lshr i32 %2, 10, !dbg !12894
  %4 = and i32 %3, 7, !dbg !12894
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12895
  %6 = load i8, i8* %5, align 1, !dbg !12895
  %7 = zext i8 %6 to i32, !dbg !12895
  %8 = lshr i32 %1, %7, !dbg !12896
  ret i32 %8, !dbg !12897
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #5 !dbg !12898 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12899
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12900
  %3 = lshr i32 %2, 13, !dbg !12901
  %4 = and i32 %3, 7, !dbg !12901
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12902
  %6 = load i8, i8* %5, align 1, !dbg !12902
  %7 = zext i8 %6 to i32, !dbg !12902
  %8 = lshr i32 %1, %7, !dbg !12903
  ret i32 %8, !dbg !12904
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12905 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12909, metadata !DIExpression()), !dbg !12910
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12911
  store i32 15, i32* %2, align 4, !dbg !12912
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12913
  %4 = and i32 %3, 262144, !dbg !12915
  %5 = icmp eq i32 %4, 0, !dbg !12916
  br i1 %5, label %8, label %6, !dbg !12917

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12918
  store i32 327680, i32* %7, align 4, !dbg !12920
  br label %15, !dbg !12921

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12922
  %10 = and i32 %9, 65536, !dbg !12924
  %11 = icmp eq i32 %10, 0, !dbg !12925
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12926
  br i1 %11, label %14, label %13, !dbg !12927

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12928
  br label %15, !dbg !12930

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12931
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12933
  %17 = and i32 %16, 1, !dbg !12935
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12936
  store i32 %17, i32* %18, align 4, !dbg !12938
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12939
  %20 = lshr i32 %19, 3, !dbg !12940
  %21 = and i32 %20, 31, !dbg !12940
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12941
  store i32 %21, i32* %22, align 4, !dbg !12942
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12943
  %24 = and i32 %23, 4, !dbg !12945
  %25 = icmp eq i32 %24, 0, !dbg !12946
  br i1 %25, label %28, label %26, !dbg !12947

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12948
  store i32 5, i32* %27, align 4, !dbg !12950
  br label %35, !dbg !12951

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12952
  %30 = and i32 %29, 1, !dbg !12954
  %31 = icmp eq i32 %30, 0, !dbg !12955
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12956
  br i1 %31, label %34, label %33, !dbg !12957

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12958
  br label %35, !dbg !12960

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12961
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12963
  %37 = and i32 %36, 1, !dbg !12965
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12966
  store i32 %37, i32* %38, align 4, !dbg !12968
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12969
  %40 = and i32 %39, 16777216, !dbg !12971
  %41 = icmp eq i32 %40, 0, !dbg !12972
  %42 = select i1 %41, i32 1, i32 2, !dbg !12973
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12974
  store i32 %42, i32* %43, align 4, !dbg !12976
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12977
  %45 = and i32 %44, 4194304, !dbg !12978
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12979
  store i32 %45, i32* %46, align 4, !dbg !12980
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12981
  %48 = and i32 %47, 63, !dbg !12982
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12983
  store i32 %48, i32* %49, align 4, !dbg !12984
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12985
  %51 = lshr i32 %50, 6, !dbg !12986
  %52 = and i32 %51, 511, !dbg !12986
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12987
  store i32 %52, i32* %53, align 4, !dbg !12988
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12989
  %55 = shl i32 %54, 1, !dbg !12990
  %56 = and i32 %55, 393216, !dbg !12990
  %57 = add nuw nsw i32 %56, 131072, !dbg !12990
  %58 = lshr exact i32 %57, 16, !dbg !12991
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12992
  store i32 %58, i32* %59, align 4, !dbg !12993
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12994
  %61 = lshr i32 %60, 24, !dbg !12995
  %62 = and i32 %61, 15, !dbg !12995
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12996
  store i32 %62, i32* %63, align 4, !dbg !12997
  ret void, !dbg !12998
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.rtio_spsc* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #5 !dbg !12999 {
  call void @llvm.dbg.value(metadata %struct.rtio_spsc* %0, metadata !13003, metadata !DIExpression()), !dbg !13005
  call void @llvm.dbg.value(metadata i32* %1, metadata !13004, metadata !DIExpression()), !dbg !13005
  %3 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 0, !dbg !13006
  store i32 15, i32* %3, align 4, !dbg !13007
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13008
  %5 = and i32 %4, 3, !dbg !13009
  %6 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 1, !dbg !13010
  store i32 %5, i32* %6, align 4, !dbg !13011
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13012
  %8 = and i32 %7, 240, !dbg !13013
  %9 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 2, !dbg !13014
  store i32 %8, i32* %9, align 4, !dbg !13015
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13016
  %11 = and i32 %10, 7168, !dbg !13017
  %12 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 3, !dbg !13018
  store i32 %11, i32* %12, align 4, !dbg !13019
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13020
  %14 = lshr i32 %13, 3, !dbg !13021
  %15 = and i32 %14, 7168, !dbg !13021
  %16 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 4, !dbg !13022
  store i32 %15, i32* %16, align 4, !dbg !13023
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13024
  %18 = and i32 %17, 7, !dbg !13025
  store i32 %18, i32* %1, align 4, !dbg !13026
  ret void, !dbg !13027
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !13028 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13029
  %2 = and i32 %1, 128, !dbg !13029
  %3 = icmp eq i32 %2, 0, !dbg !13029
  br i1 %3, label %5, label %4, !dbg !13031

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !13032
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !13034
  br label %5, !dbg !13035

5:                                                ; preds = %4, %0
  ret void, !dbg !13036
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !13037 {
  ret void, !dbg !13038
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !13039 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13042, metadata !DIExpression()), !dbg !13043
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !13044
  ret void, !dbg !13045
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !13046 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13049, metadata !DIExpression()), !dbg !13051
  call void @llvm.dbg.value(metadata i32 1000, metadata !13050, metadata !DIExpression()), !dbg !13051
  %2 = udiv i32 %0, 1000, !dbg !13052
  %3 = add nsw i32 %2, -1, !dbg !13053
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13054
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13055
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13056
  ret void, !dbg !13057
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !13058 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13060, metadata !DIExpression()), !dbg !13062
  %3 = bitcast i32* %2 to i8*, !dbg !13063
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13063
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13061, metadata !DIExpression()), !dbg !13064
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13065
  store volatile i32 %4, i32* %2, align 4, !dbg !13064
  %5 = load volatile i32, i32* %2, align 4, !dbg !13066
  %6 = icmp eq i32 %0, -1, !dbg !13067
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13060, metadata !DIExpression()), !dbg !13062
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !13062
  call void @llvm.dbg.value(metadata i32 %8, metadata !13060, metadata !DIExpression()), !dbg !13062
  br label %9, !dbg !13069

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13060, metadata !DIExpression()), !dbg !13062
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13070
  call void @llvm.dbg.value(metadata i32 undef, metadata !13060, metadata !DIExpression()), !dbg !13062
  %12 = shl i32 %11, 15, !dbg !13062
  %13 = ashr i32 %12, 31, !dbg !13062
  %14 = add i32 %13, %10, !dbg !13062
  call void @llvm.dbg.value(metadata i32 %14, metadata !13060, metadata !DIExpression()), !dbg !13062
  %15 = icmp eq i32 %14, 0, !dbg !13069
  br i1 %15, label %16, label %9, !dbg !13069

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13073
  ret void, !dbg !13073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #6 !dbg !13074 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13076, metadata !DIExpression()), !dbg !13077
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !13078
  ret void, !dbg !13079
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !13080 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13085, metadata !DIExpression()), !dbg !13090
  call void @llvm.dbg.value(metadata i32 0, metadata !13088, metadata !DIExpression()), !dbg !13090
  call void @llvm.dbg.value(metadata i32 0, metadata !13089, metadata !DIExpression()), !dbg !13090
  %2 = icmp eq i32 %0, 0, !dbg !13091
  br i1 %2, label %52, label %3, !dbg !13093

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !13094
  %5 = icmp eq i32 %4, 16384, !dbg !13097
  br i1 %5, label %6, label %21, !dbg !13098

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !13099
  %8 = select i1 %7, i32 0, i32 5, !dbg !13102
  call void @llvm.dbg.value(metadata i32 %8, metadata !13088, metadata !DIExpression()), !dbg !13090
  %9 = add i32 %0, -120000001, !dbg !13103
  %10 = icmp ult i32 %9, 30000000, !dbg !13103
  %11 = select i1 %10, i32 4, i32 %8, !dbg !13103
  call void @llvm.dbg.value(metadata i32 %11, metadata !13088, metadata !DIExpression()), !dbg !13090
  %12 = icmp ult i32 %9, -30000000, !dbg !13105
  %13 = select i1 %12, i32 %11, i32 3, !dbg !13105
  call void @llvm.dbg.value(metadata i32 %13, metadata !13088, metadata !DIExpression()), !dbg !13090
  %14 = icmp ugt i32 %0, 60000000, !dbg !13107
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !13109
  br i1 %16, label %21, label %17, !dbg !13109

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !13110
  %19 = and i1 %18, %15, !dbg !13113
  %20 = select i1 %19, i32 1, i32 %13, !dbg !13113
  br label %21, !dbg !13113

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !13090
  call void @llvm.dbg.value(metadata i32 %22, metadata !13088, metadata !DIExpression()), !dbg !13090
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !13114
  %24 = icmp eq i32 %23, 0, !dbg !13116
  br i1 %24, label %25, label %41, !dbg !13117

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 12000000, !dbg !13118
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !13121
  %29 = select i1 %28, i32 4, i32 %22, !dbg !13121
  call void @llvm.dbg.value(metadata i32 %29, metadata !13088, metadata !DIExpression()), !dbg !13090
  %30 = icmp ugt i32 %0, 90000000, !dbg !13122
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !13124
  %33 = select i1 %32, i32 3, i32 %29, !dbg !13124
  call void @llvm.dbg.value(metadata i32 %33, metadata !13088, metadata !DIExpression()), !dbg !13090
  %34 = icmp ugt i32 %0, 60000000, !dbg !13125
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !13127
  br i1 %36, label %41, label %37, !dbg !13127

37:                                               ; preds = %25
  %38 = icmp ugt i32 %0, 30000000, !dbg !13128
  %39 = and i1 %38, %35, !dbg !13131
  %40 = select i1 %39, i32 1, i32 %33, !dbg !13131
  br label %41, !dbg !13131

41:                                               ; preds = %37, %25, %21
  %42 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %40, %37 ], !dbg !13132
  call void @llvm.dbg.value(metadata i32 %42, metadata !13088, metadata !DIExpression()), !dbg !13090
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %42) #24, !dbg !13133
  call void @llvm.dbg.value(metadata i32 2, metadata !13086, metadata !DIExpression()), !dbg !13090
  br label %43, !dbg !13134

43:                                               ; preds = %43, %41
  %44 = phi i32 [ 2, %41 ], [ %46, %43 ], !dbg !13132
  call void @llvm.dbg.value(metadata i32 %44, metadata !13086, metadata !DIExpression()), !dbg !13090
  %45 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !13135
  call void @llvm.dbg.value(metadata i32 %45, metadata !13087, metadata !DIExpression()), !dbg !13090
  %46 = add nsw i32 %44, -1, !dbg !13137
  call void @llvm.dbg.value(metadata i32 %46, metadata !13086, metadata !DIExpression()), !dbg !13090
  %47 = icmp ne i32 %45, %42, !dbg !13138
  %48 = icmp ne i32 %46, 0, !dbg !13139
  %49 = select i1 %47, i1 %48, i1 false, !dbg !13139
  br i1 %49, label %43, label %50, !dbg !13140, !llvm.loop !13141

50:                                               ; preds = %43
  %51 = zext i1 %47 to i32
  br label %52

52:                                               ; preds = %50, %1
  %53 = phi i32 [ 1, %1 ], [ %51, %50 ], !dbg !13143
  call void @llvm.dbg.value(metadata i32 %53, metadata !13089, metadata !DIExpression()), !dbg !13090
  ret i32 %53, !dbg !13144
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #5 !dbg !13145 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13147
  %2 = and i32 %1, 16384, !dbg !13147
  ret i32 %2, !dbg !13148
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !13149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13151, metadata !DIExpression()), !dbg !13152
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13153
  %3 = and i32 %2, -8, !dbg !13153
  %4 = or i32 %3, %0, !dbg !13153
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13153
  ret void, !dbg !13154
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #5 !dbg !13155 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13156
  %2 = and i32 %1, 7, !dbg !13156
  ret i32 %2, !dbg !13157
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !13158 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !13176, metadata !DIExpression()), !dbg !13180
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13177, metadata !DIExpression()), !dbg !13180
  call void @llvm.dbg.value(metadata i32 0, metadata !13178, metadata !DIExpression()), !dbg !13180
  call void @llvm.dbg.value(metadata i32 0, metadata !13179, metadata !DIExpression()), !dbg !13180
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !13181
  %4 = icmp eq i32 %3, 0, !dbg !13183
  br i1 %4, label %5, label %21, !dbg !13184

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #24, !dbg !13185
  call void @llvm.dbg.value(metadata i32 %6, metadata !13179, metadata !DIExpression()), !dbg !13180
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.162() #24, !dbg !13187
  %8 = icmp eq i32 %7, 1, !dbg !13189
  br i1 %8, label %13, label %9, !dbg !13190

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.163() #24, !dbg !13191
  br label %10, !dbg !13193

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.162() #24, !dbg !13194
  %12 = icmp eq i32 %11, 1, !dbg !13195
  br i1 %12, label %13, label %10, !dbg !13193, !llvm.loop !13196

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !13198
  %15 = load i32, i32* %14, align 4, !dbg !13198
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !13199
  %17 = load i32, i32* %16, align 4, !dbg !13199
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !13200
  %19 = load i32, i32* %18, align 4, !dbg !13200
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.164(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !13201
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !13202
  call void @llvm.dbg.value(metadata i32 %20, metadata !13178, metadata !DIExpression()), !dbg !13180
  br label %21, !dbg !13203

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !13204
  call void @llvm.dbg.value(metadata i32 %22, metadata !13178, metadata !DIExpression()), !dbg !13180
  ret i32 %22, !dbg !13205
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #5 !dbg !13206 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13210, metadata !DIExpression()), !dbg !13211
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.166() #24, !dbg !13212
  %2 = icmp ne i32 %1, 0, !dbg !13214
  call void @llvm.dbg.value(metadata i1 %2, metadata !13210, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13211
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !13215
  %4 = icmp ne i32 %3, 0, !dbg !13217
  %5 = select i1 %4, i1 true, i1 %2, !dbg !13218
  %6 = zext i1 %5 to i32, !dbg !13218
  call void @llvm.dbg.value(metadata i32 %6, metadata !13210, metadata !DIExpression()), !dbg !13211
  ret i32 %6, !dbg !13219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #10 !dbg !13220 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13224, metadata !DIExpression()), !dbg !13227
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13225, metadata !DIExpression()), !dbg !13227
  call void @llvm.dbg.value(metadata i32 0, metadata !13226, metadata !DIExpression()), !dbg !13227
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13228
  %4 = load i32, i32* %3, align 4, !dbg !13228
  %5 = and i32 %4, 63, !dbg !13229
  %6 = udiv i32 %0, %5, !dbg !13230
  call void @llvm.dbg.value(metadata i32 %6, metadata !13226, metadata !DIExpression()), !dbg !13227
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13231
  %8 = load i32, i32* %7, align 4, !dbg !13231
  %9 = and i32 %8, 511, !dbg !13232
  %10 = mul i32 %9, %6, !dbg !13233
  call void @llvm.dbg.value(metadata i32 %10, metadata !13226, metadata !DIExpression()), !dbg !13227
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13234
  %12 = load i32, i32* %11, align 4, !dbg !13234
  %13 = lshr i32 %12, 15, !dbg !13235
  %14 = and i32 %13, 131070, !dbg !13235
  %15 = add nuw nsw i32 %14, 2, !dbg !13235
  %16 = udiv i32 %10, %15, !dbg !13236
  call void @llvm.dbg.value(metadata i32 %16, metadata !13226, metadata !DIExpression()), !dbg !13227
  ret i32 %16, !dbg !13237
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.162() unnamed_addr #5 !dbg !13238 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13239
  %2 = lshr i32 %1, 1, !dbg !13240
  %3 = and i32 %2, 1, !dbg !13240
  ret i32 %3, !dbg !13241
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.163() unnamed_addr #15 !dbg !13242 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13243
  %2 = or i32 %1, 1, !dbg !13243
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13243
  ret void, !dbg !13244
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.164(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !13245 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13247, metadata !DIExpression()), !dbg !13251
  call void @llvm.dbg.value(metadata i32 %1, metadata !13248, metadata !DIExpression()), !dbg !13251
  call void @llvm.dbg.value(metadata i32 %2, metadata !13249, metadata !DIExpression()), !dbg !13251
  call void @llvm.dbg.value(metadata i32 %3, metadata !13250, metadata !DIExpression()), !dbg !13251
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13252
  %6 = and i32 %5, -4227072, !dbg !13252
  %7 = or i32 %1, %0, !dbg !13252
  %8 = shl i32 %2, 6, !dbg !13252
  %9 = or i32 %7, %8, !dbg !13252
  %10 = or i32 %9, %6, !dbg !13252
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13252
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13253
  %12 = and i32 %11, -196609, !dbg !13253
  %13 = or i32 %12, %3, !dbg !13253
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13253
  ret void, !dbg !13254
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !13255 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13259, metadata !DIExpression()), !dbg !13263
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13260, metadata !DIExpression()), !dbg !13263
  call void @llvm.dbg.value(metadata i32 0, metadata !13261, metadata !DIExpression()), !dbg !13263
  call void @llvm.dbg.value(metadata i32 0, metadata !13262, metadata !DIExpression()), !dbg !13263
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13264
  %4 = load i32, i32* %3, align 4, !dbg !13264
  %5 = lshr i32 %4, 4, !dbg !13264
  %6 = and i32 %5, 15, !dbg !13264
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13264
  %8 = load i8, i8* %7, align 1, !dbg !13264
  %9 = zext i8 %8 to i32, !dbg !13264
  %10 = lshr i32 %0, %9, !dbg !13264
  call void @llvm.dbg.value(metadata i32 %10, metadata !13262, metadata !DIExpression()), !dbg !13263
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13265
  %12 = icmp ult i32 %11, %10, !dbg !13267
  br i1 %12, label %13, label %16, !dbg !13268

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !13269
  call void @llvm.dbg.value(metadata i32 %14, metadata !13261, metadata !DIExpression()), !dbg !13263
  %15 = icmp eq i32 %14, 0, !dbg !13271
  br i1 %15, label %16, label %30, !dbg !13273

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.165() #24, !dbg !13274
  br label %17, !dbg !13276

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.166() #24, !dbg !13277
  %19 = icmp eq i32 %18, 1, !dbg !13278
  br i1 %19, label %20, label %17, !dbg !13276, !llvm.loop !13279

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13281
  tail call fastcc void @LL_RCC_SetAHBPrescaler.167(i32 noundef %21) #24, !dbg !13282
  tail call fastcc void @LL_RCC_SetSysClkSource.168() #24, !dbg !13283
  br label %22, !dbg !13284

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.169() #24, !dbg !13285
  %24 = icmp eq i32 %23, 8, !dbg !13286
  br i1 %24, label %25, label %22, !dbg !13284, !llvm.loop !13287

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13289
  %27 = load i32, i32* %26, align 4, !dbg !13289
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.170(i32 noundef %27) #24, !dbg !13290
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13291
  %29 = load i32, i32* %28, align 4, !dbg !13291
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.171(i32 noundef %29) #24, !dbg !13292
  br label %30, !dbg !13293

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13294
  %33 = icmp ugt i32 %32, %10, !dbg !13296
  br i1 %33, label %34, label %36, !dbg !13297

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !13298
  call void @llvm.dbg.value(metadata i32 %35, metadata !13261, metadata !DIExpression()), !dbg !13263
  br label %36, !dbg !13300

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13263
  call void @llvm.dbg.value(metadata i32 %37, metadata !13261, metadata !DIExpression()), !dbg !13263
  %38 = icmp eq i32 %37, 0, !dbg !13301
  br i1 %38, label %39, label %40, !dbg !13303

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !13304
  br label %40, !dbg !13306

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13307
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.165() unnamed_addr #15 !dbg !13308 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13309
  %2 = or i32 %1, 16777216, !dbg !13309
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13309
  ret void, !dbg !13310
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.166() unnamed_addr #5 !dbg !13311 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13312
  %2 = lshr i32 %1, 25, !dbg !13313
  %3 = and i32 %2, 1, !dbg !13313
  ret i32 %3, !dbg !13314
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.167(i32 noundef %0) unnamed_addr #15 !dbg !13315 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13317, metadata !DIExpression()), !dbg !13318
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13319
  %3 = and i32 %2, -241, !dbg !13319
  %4 = or i32 %3, %0, !dbg !13319
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13319
  ret void, !dbg !13320
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.168() unnamed_addr #15 !dbg !13321 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13323, metadata !DIExpression()), !dbg !13324
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13325
  %2 = and i32 %1, -4, !dbg !13325
  %3 = or i32 %2, 2, !dbg !13325
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13325
  ret void, !dbg !13326
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.169() unnamed_addr #5 !dbg !13327 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13328
  %2 = and i32 %1, 12, !dbg !13328
  ret i32 %2, !dbg !13329
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.170(i32 noundef %0) unnamed_addr #15 !dbg !13330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13332, metadata !DIExpression()), !dbg !13333
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13334
  %3 = and i32 %2, -7169, !dbg !13334
  %4 = or i32 %3, %0, !dbg !13334
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13334
  ret void, !dbg !13335
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.171(i32 noundef %0) unnamed_addr #15 !dbg !13336 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13338, metadata !DIExpression()), !dbg !13339
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13340
  %3 = and i32 %2, -57345, !dbg !13340
  %4 = or i32 %3, %0, !dbg !13340
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13340
  ret void, !dbg !13341
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #5 !dbg !13342 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13343
  %2 = lshr i32 %1, 27, !dbg !13344
  %3 = and i32 %2, 1, !dbg !13344
  ret i32 %3, !dbg !13345
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !13346 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13350, metadata !DIExpression()), !dbg !13356
  call void @llvm.dbg.value(metadata i32 %1, metadata !13351, metadata !DIExpression()), !dbg !13356
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !13352, metadata !DIExpression()), !dbg !13356
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13353, metadata !DIExpression()), !dbg !13356
  call void @llvm.dbg.value(metadata i32 0, metadata !13354, metadata !DIExpression()), !dbg !13356
  call void @llvm.dbg.value(metadata i32 0, metadata !13355, metadata !DIExpression()), !dbg !13356
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !13357
  %6 = icmp eq i32 %5, 0, !dbg !13359
  br i1 %6, label %7, label %27, !dbg !13360

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #24, !dbg !13361
  call void @llvm.dbg.value(metadata i32 %8, metadata !13355, metadata !DIExpression()), !dbg !13356
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.172() #24, !dbg !13363
  %10 = icmp eq i32 %9, 1, !dbg !13365
  br i1 %10, label %19, label %11, !dbg !13366

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13367
  br i1 %12, label %13, label %14, !dbg !13370

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !13371
  br label %15, !dbg !13373

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.173() #24, !dbg !13374
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.174() #24, !dbg !13376
  br label %16, !dbg !13377

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.172() #24, !dbg !13378
  %18 = icmp eq i32 %17, 1, !dbg !13379
  br i1 %18, label %19, label %16, !dbg !13377, !llvm.loop !13380

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !13382
  %21 = load i32, i32* %20, align 4, !dbg !13382
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !13383
  %23 = load i32, i32* %22, align 4, !dbg !13383
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !13384
  %25 = load i32, i32* %24, align 4, !dbg !13384
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.164(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !13385
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !13386
  call void @llvm.dbg.value(metadata i32 %26, metadata !13354, metadata !DIExpression()), !dbg !13356
  br label %27, !dbg !13387

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !13388
  call void @llvm.dbg.value(metadata i32 %28, metadata !13354, metadata !DIExpression()), !dbg !13356
  ret i32 %28, !dbg !13389
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.172() unnamed_addr #5 !dbg !13390 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13391
  %2 = lshr i32 %1, 17, !dbg !13392
  %3 = and i32 %2, 1, !dbg !13392
  ret i32 %3, !dbg !13393
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !13394 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13395
  %2 = or i32 %1, 262144, !dbg !13395
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13395
  ret void, !dbg !13396
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.173() unnamed_addr #15 !dbg !13397 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13398
  %2 = and i32 %1, -262145, !dbg !13398
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13398
  ret void, !dbg !13399
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.174() unnamed_addr #15 !dbg !13400 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13401
  %2 = or i32 %1, 65536, !dbg !13401
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13401
  ret void, !dbg !13402
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !13403 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13406, metadata !DIExpression()), !dbg !13422
  call void @llvm.dbg.value(metadata i32 undef, metadata !13406, metadata !DIExpression()), !dbg !13422
  call void @llvm.dbg.value(metadata i32 undef, metadata !13406, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13422
  ret void, !dbg !13423
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13424 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13428, metadata !DIExpression()), !dbg !13430
  %2 = icmp eq i8* %0, null, !dbg !13431
  br i1 %2, label %29, label %3, !dbg !13433

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13434
  %5 = icmp eq i8 %4, 0, !dbg !13435
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13436
  br i1 %6, label %29, label %8, !dbg !13436

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13429, metadata !DIExpression()), !dbg !13430
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13437

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13429, metadata !DIExpression()), !dbg !13430
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !13439
  br i1 %10, label %11, label %15, !dbg !13444

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13445
  %13 = load i8*, i8** %12, align 4, !dbg !13445
  %14 = icmp eq i8* %13, %0, !dbg !13446
  br i1 %14, label %29, label %15, !dbg !13447

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13448
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13429, metadata !DIExpression()), !dbg !13430
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13449
  br i1 %17, label %7, label %8, !dbg !13450, !llvm.loop !13451

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13429, metadata !DIExpression()), !dbg !13430
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !13453
  br i1 %20, label %21, label %26, !dbg !13457

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13458
  %23 = load i8*, i8** %22, align 4, !dbg !13458
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13459
  %25 = icmp eq i32 %24, 0, !dbg !13460
  br i1 %25, label %29, label %26, !dbg !13461

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13462
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13429, metadata !DIExpression()), !dbg !13430
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13463
  br i1 %28, label %29, label %18, !dbg !13437, !llvm.loop !13464

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13430
  ret %struct.device* %30, !dbg !13466
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #10 !dbg !13467 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13471, metadata !DIExpression()), !dbg !13472
  %2 = icmp eq %struct.device* %0, null, !dbg !13473
  br i1 %2, label %14, label %3, !dbg !13475

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13476
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13476
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13477
  %7 = load i8, i8* %6, align 1, !dbg !13477
  %8 = and i8 %7, 1, !dbg !13477
  %9 = icmp eq i8 %8, 0, !dbg !13477
  br i1 %9, label %14, label %10, !dbg !13478

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13479
  %12 = load i8, i8* %11, align 1, !dbg !13479
  %13 = icmp eq i8 %12, 0, !dbg !13480
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13472
  ret i1 %15, !dbg !13481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #6 !dbg !13482 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13487, metadata !DIExpression()), !dbg !13488
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13489
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13490
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13491 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13499, metadata !DIExpression()), !dbg !13504
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13500, metadata !DIExpression()), !dbg !13504
  call void @llvm.dbg.value(metadata i8* %2, metadata !13501, metadata !DIExpression()), !dbg !13504
  %5 = bitcast i32* %4 to i8*, !dbg !13505
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13505
  call void @llvm.dbg.value(metadata i32 0, metadata !13502, metadata !DIExpression()), !dbg !13504
  store i32 0, i32* %4, align 4, !dbg !13506
  call void @llvm.dbg.value(metadata i32* %4, metadata !13502, metadata !DIExpression(DW_OP_deref)), !dbg !13504
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13507
  call void @llvm.dbg.value(metadata i16* %6, metadata !13503, metadata !DIExpression()), !dbg !13504
  %7 = load i32, i32* %4, align 4, !dbg !13508
  call void @llvm.dbg.value(metadata i32 %7, metadata !13502, metadata !DIExpression()), !dbg !13504
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13509
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13510
  ret i32 %8, !dbg !13511
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13512 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13516, metadata !DIExpression()), !dbg !13522
  call void @llvm.dbg.value(metadata i32* %1, metadata !13517, metadata !DIExpression()), !dbg !13522
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13523
  %4 = load i16*, i16** %3, align 4, !dbg !13523
  call void @llvm.dbg.value(metadata i16* %4, metadata !13518, metadata !DIExpression()), !dbg !13522
  %5 = icmp eq i16* %4, null, !dbg !13524
  br i1 %5, label %14, label %6, !dbg !13525

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13526
  call void @llvm.dbg.value(metadata i32 %7, metadata !13519, metadata !DIExpression()), !dbg !13526
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13527
  %9 = load i16, i16* %8, align 2, !dbg !13527
  %10 = add i16 %9, -32767, !dbg !13528
  %11 = icmp ult i16 %10, 2, !dbg !13528
  %12 = add i32 %7, 1, !dbg !13529
  call void @llvm.dbg.value(metadata i32 %12, metadata !13519, metadata !DIExpression()), !dbg !13526
  br i1 %11, label %13, label %6, !dbg !13528, !llvm.loop !13531

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13534
  br label %14, !dbg !13535

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13536
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13537 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13541, metadata !DIExpression()), !dbg !13552
  call void @llvm.dbg.value(metadata i32 %1, metadata !13542, metadata !DIExpression()), !dbg !13552
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13543, metadata !DIExpression()), !dbg !13552
  call void @llvm.dbg.value(metadata i8* %3, metadata !13544, metadata !DIExpression()), !dbg !13552
  call void @llvm.dbg.value(metadata i32 0, metadata !13545, metadata !DIExpression()), !dbg !13553
  %5 = icmp eq i32 %1, 0, !dbg !13554
  br i1 %5, label %16, label %8, !dbg !13555

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13545, metadata !DIExpression()), !dbg !13553
  %7 = icmp eq i32 %15, %1, !dbg !13554
  br i1 %7, label %16, label %8, !dbg !13555, !llvm.loop !13556

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13545, metadata !DIExpression()), !dbg !13553
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13558
  %11 = load i16, i16* %10, align 2, !dbg !13558
  call void @llvm.dbg.value(metadata i16 %11, metadata !13547, metadata !DIExpression()), !dbg !13559
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !13560
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13550, metadata !DIExpression()), !dbg !13559
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !13561
  call void @llvm.dbg.value(metadata i32 %13, metadata !13551, metadata !DIExpression()), !dbg !13559
  %14 = icmp slt i32 %13, 0, !dbg !13562
  %15 = add nuw i32 %9, 1, !dbg !13564
  call void @llvm.dbg.value(metadata i32 %15, metadata !13545, metadata !DIExpression()), !dbg !13553
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !13566 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13570, metadata !DIExpression()), !dbg !13573
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13571, metadata !DIExpression()), !dbg !13573
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13572, metadata !DIExpression()), !dbg !13573
  %2 = sext i16 %0 to i32, !dbg !13574
  %3 = icmp slt i16 %0, 1, !dbg !13576
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13577
  %6 = add nsw i32 %2, -1, !dbg !13577
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13577
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13577
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13571, metadata !DIExpression()), !dbg !13573
  ret %struct.device* %8, !dbg !13578
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13579 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13581, metadata !DIExpression()), !dbg !13586
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13582, metadata !DIExpression()), !dbg !13586
  call void @llvm.dbg.value(metadata i8* %2, metadata !13583, metadata !DIExpression()), !dbg !13586
  %5 = bitcast i32* %4 to i8*, !dbg !13587
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13587
  call void @llvm.dbg.value(metadata i32 0, metadata !13584, metadata !DIExpression()), !dbg !13586
  store i32 0, i32* %4, align 4, !dbg !13588
  call void @llvm.dbg.value(metadata i32* %4, metadata !13584, metadata !DIExpression(DW_OP_deref)), !dbg !13586
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13589
  call void @llvm.dbg.value(metadata i16* %6, metadata !13585, metadata !DIExpression()), !dbg !13586
  %7 = load i32, i32* %4, align 4, !dbg !13590
  call void @llvm.dbg.value(metadata i32 %7, metadata !13584, metadata !DIExpression()), !dbg !13586
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13591
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13592
  ret i32 %8, !dbg !13593
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13594 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13596, metadata !DIExpression()), !dbg !13601
  call void @llvm.dbg.value(metadata i32* %1, metadata !13597, metadata !DIExpression()), !dbg !13601
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13602
  %4 = load i16*, i16** %3, align 4, !dbg !13602
  call void @llvm.dbg.value(metadata i16* %4, metadata !13598, metadata !DIExpression()), !dbg !13601
  call void @llvm.dbg.value(metadata i32 0, metadata !13599, metadata !DIExpression()), !dbg !13601
  call void @llvm.dbg.value(metadata i32 0, metadata !13600, metadata !DIExpression()), !dbg !13601
  %5 = icmp eq i16* %4, null, !dbg !13603
  br i1 %5, label %22, label %6, !dbg !13605

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13599, metadata !DIExpression()), !dbg !13601
  call void @llvm.dbg.value(metadata i16* %8, metadata !13598, metadata !DIExpression()), !dbg !13601
  %9 = load i16, i16* %8, align 2, !dbg !13606
  %10 = icmp eq i16 %9, -32768, !dbg !13610
  call void @llvm.dbg.value(metadata i32 undef, metadata !13599, metadata !DIExpression()), !dbg !13601
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13611
  call void @llvm.dbg.value(metadata i16* %11, metadata !13598, metadata !DIExpression()), !dbg !13601
  %12 = zext i1 %10 to i32, !dbg !13612
  %13 = add i32 %7, %12, !dbg !13612
  call void @llvm.dbg.value(metadata i32 %13, metadata !13599, metadata !DIExpression()), !dbg !13601
  %14 = icmp eq i32 %13, 2, !dbg !13613
  br i1 %14, label %15, label %6, !dbg !13614

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13601
  call void @llvm.dbg.value(metadata i32 %16, metadata !13600, metadata !DIExpression()), !dbg !13601
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13615
  %18 = load i16, i16* %17, align 2, !dbg !13615
  %19 = icmp eq i16 %18, 32767, !dbg !13616
  %20 = add i32 %16, 1, !dbg !13617
  call void @llvm.dbg.value(metadata i32 %20, metadata !13600, metadata !DIExpression()), !dbg !13601
  br i1 %19, label %21, label %15, !dbg !13619, !llvm.loop !13620

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13622
  br label %22, !dbg !13623

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13624
  call void @llvm.dbg.value(metadata i16* %23, metadata !13598, metadata !DIExpression()), !dbg !13601
  ret i16* %23, !dbg !13625
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #10 !dbg !13626 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13629
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13630
  ret i32* %2, !dbg !13631
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !13632 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13780, metadata !DIExpression()), !dbg !13783
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13781, metadata !DIExpression()), !dbg !13783
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13782, metadata !DIExpression()), !dbg !13783
  ret void, !dbg !13784
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13785 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13789, metadata !DIExpression()), !dbg !13791
  call void @llvm.dbg.value(metadata i32 %1, metadata !13790, metadata !DIExpression()), !dbg !13791
  ret void, !dbg !13792
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13793 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13797, metadata !DIExpression()), !dbg !13799
  call void @llvm.dbg.value(metadata i32 %1, metadata !13798, metadata !DIExpression()), !dbg !13799
  ret void, !dbg !13800
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !13801 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13805, metadata !DIExpression()), !dbg !13807
  call void @llvm.dbg.value(metadata i8* %1, metadata !13806, metadata !DIExpression()), !dbg !13807
  ret i32 -134, !dbg !13808
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !13809 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13813, metadata !DIExpression()), !dbg !13815
  call void @llvm.dbg.value(metadata i8* %1, metadata !13814, metadata !DIExpression()), !dbg !13815
  ret i32 -134, !dbg !13816
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13817 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13820, metadata !DIExpression()), !dbg !13821
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13822, !srcloc !13828
  call void @llvm.dbg.value(metadata i32 undef, metadata !13825, metadata !DIExpression()) #23, !dbg !13829
  call void @llvm.dbg.value(metadata i32 undef, metadata !13826, metadata !DIExpression()) #23, !dbg !13829
  br label %3, !dbg !13830

3:                                                ; preds = %3, %1
  br label %3, !dbg !13831, !llvm.loop !13834
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13837 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13841, metadata !DIExpression()), !dbg !13843
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13842, metadata !DIExpression()), !dbg !13843
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.179, i32 0, i32 0), i32 noundef 69) #25, !dbg !13844
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13849
  unreachable, !dbg !13849
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13850 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13852, metadata !DIExpression()), !dbg !13853
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13854
  unreachable, !dbg !13854
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13855 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13857, metadata !DIExpression()), !dbg !13861
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13858, metadata !DIExpression()), !dbg !13861
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13862, !srcloc !13828
  call void @llvm.dbg.value(metadata i32 undef, metadata !13825, metadata !DIExpression()) #23, !dbg !13864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13826, metadata !DIExpression()) #23, !dbg !13864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13859, metadata !DIExpression()), !dbg !13861
  %4 = tail call fastcc %struct.k_thread* @k_current_get.182() #26, !dbg !13865
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13860, metadata !DIExpression()), !dbg !13861
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !13866
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.183, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #25, !dbg !13866
  %6 = icmp eq %struct.__esf* %1, null, !dbg !13871
  br i1 %6, label %15, label %7, !dbg !13873

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13874, metadata !DIExpression()), !dbg !13879
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !13881
  %9 = load i32, i32* %8, align 4, !dbg !13881
  %10 = and i32 %9, 511, !dbg !13882
  %11 = icmp eq i32 %10, 0, !dbg !13883
  br i1 %11, label %13, label %12, !dbg !13884

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.184, i32 0, i32 0), i32 noundef 69) #25, !dbg !13885
  br label %13, !dbg !13891

13:                                               ; preds = %7, %12
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #24, !dbg !13892
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.185, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #25, !dbg !13892
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !13897
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13874, metadata !DIExpression()), !dbg !13898
  br label %17, !dbg !13903

15:                                               ; preds = %2
  %16 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #24, !dbg !13892
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.185, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %16) #25, !dbg !13892
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !13897
  br label %17, !dbg !13904

17:                                               ; preds = %15, %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !13862
  call void @llvm.dbg.value(metadata i32 %18, metadata !13825, metadata !DIExpression()) #23, !dbg !13864
  call void @llvm.dbg.value(metadata i32 %18, metadata !13859, metadata !DIExpression()), !dbg !13861
  call void @llvm.dbg.value(metadata i32 undef, metadata !13905, metadata !DIExpression()) #23, !dbg !13908
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !13910, !srcloc !13911
  tail call fastcc void @k_thread_abort.186(%struct.k_thread* noundef %4) #24, !dbg !13912
  ret void, !dbg !13915
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.182() unnamed_addr #12 !dbg !13916 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.194() #26, !dbg !13920
  ret %struct.k_thread* %1, !dbg !13921
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #4 !dbg !13922 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13926, metadata !DIExpression()), !dbg !13927
  %2 = icmp ult i32 %0, 5, !dbg !13928
  br i1 %2, label %3, label %6, !dbg !13928

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !13928
  %5 = load i8*, i8** %4, align 4, !dbg !13928
  br label %6, !dbg !13928

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.188, i32 0, i32 0), %1 ], !dbg !13929
  ret i8* %7, !dbg !13931
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13932 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13936, metadata !DIExpression()), !dbg !13938
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !13939
  br i1 %2, label %9, label %3, !dbg !13940

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !13941
  call void @llvm.dbg.value(metadata i8* %4, metadata !13937, metadata !DIExpression()), !dbg !13938
  %5 = icmp eq i8* %4, null, !dbg !13942
  br i1 %5, label %9, label %6, !dbg !13944

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !13945
  %8 = icmp eq i8 %7, 0, !dbg !13946
  br i1 %8, label %9, label %10, !dbg !13947

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.187, i32 0, i32 0), metadata !13937, metadata !DIExpression()), !dbg !13938
  br label %10, !dbg !13948

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.187, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !13938
  call void @llvm.dbg.value(metadata i8* %11, metadata !13937, metadata !DIExpression()), !dbg !13938
  ret i8* %11, !dbg !13950
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.186(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13951 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13955, metadata !DIExpression()), !dbg !13956
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13957, !srcloc !13959
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !13960
  ret void, !dbg !13961
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.194() unnamed_addr #12 !dbg !13962 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13963, !srcloc !13965
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !13966
  ret %struct.k_thread* %1, !dbg !13967
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13968 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13972, metadata !DIExpression()), !dbg !13975
  call void @llvm.dbg.value(metadata i32 %1, metadata !13973, metadata !DIExpression()), !dbg !13975
  call void @llvm.dbg.value(metadata i32 %2, metadata !13974, metadata !DIExpression()), !dbg !13975
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !13976
  ret void, !dbg !13977
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13978 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13982, metadata !DIExpression()), !dbg !13985
  call void @llvm.dbg.value(metadata i8* %1, metadata !13983, metadata !DIExpression()), !dbg !13985
  call void @llvm.dbg.value(metadata i32 %2, metadata !13984, metadata !DIExpression()), !dbg !13985
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !13986
  ret void, !dbg !13987
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13988 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !13989
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_bss_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_bss_start to i32))) #24, !dbg !13990
  ret void, !dbg !13991
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13992 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13994, metadata !DIExpression()), !dbg !13995
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !13996
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13997
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13998
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13999
  %4 = trunc i32 %0 to i8, !dbg !14000
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !14001
  store i8 %4, i8* %5, align 4, !dbg !14002
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !14003
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !14004
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !14005
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !14006
  store i8* %8, i8** %9, align 4, !dbg !14007
  ret void, !dbg !14008
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !14009 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14011, metadata !DIExpression()), !dbg !14017
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14018
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14012, metadata !DIExpression()), !dbg !14017
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !14019
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !14013, metadata !DIExpression()), !dbg !14017
  call void @llvm.dbg.value(metadata i8* null, metadata !14016, metadata !DIExpression()), !dbg !14017
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !14020
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !14021
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !14022
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !14023
  ret void, !dbg !14024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !14025 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14029, metadata !DIExpression()), !dbg !14030
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14031
  ret i8* %2, !dbg !14032
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14033 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14038, metadata !DIExpression()), !dbg !14039
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14040
  %3 = load i8, i8* %2, align 1, !dbg !14041
  %4 = and i8 %3, -5, !dbg !14041
  store i8 %4, i8* %2, align 1, !dbg !14041
  ret void, !dbg !14042
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !14043 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !14046
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !14047
  %3 = ptrtoint i8* %2 to i32, !dbg !14056
  %4 = add i32 %3, 2048, !dbg !14057
  call void @llvm.dbg.value(metadata i32 %4, metadata !14051, metadata !DIExpression()) #23, !dbg !14058
  call void @llvm.dbg.value(metadata i32 %4, metadata !14059, metadata !DIExpression()) #23, !dbg !14062
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !14064, !srcloc !14065
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14066
  %6 = or i32 %5, 512, !dbg !14066
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14066
  tail call fastcc void @__NVIC_SetPriority.203(i32 noundef -2, i32 noundef 255) #25, !dbg !14067
  tail call fastcc void @__NVIC_SetPriority.203(i32 noundef -5, i32 noundef 0) #25, !dbg !14070
  tail call fastcc void @__NVIC_SetPriority.203(i32 noundef -12, i32 noundef 0) #25, !dbg !14071
  tail call fastcc void @__NVIC_SetPriority.203(i32 noundef -11, i32 noundef 0) #25, !dbg !14072
  tail call fastcc void @__NVIC_SetPriority.203(i32 noundef -10, i32 noundef 0) #25, !dbg !14073
  tail call fastcc void @__NVIC_SetPriority.203(i32 noundef -4, i32 noundef 0) #25, !dbg !14074
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14075
  %8 = or i32 %7, 458752, !dbg !14075
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14075
  tail call void @z_arm_fault_init() #25, !dbg !14076
  tail call void @z_arm_cpu_idle_init() #25, !dbg !14077
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14078
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !14081
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !14082
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !14083
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !14084
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #23, !dbg !14084
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !14045, metadata !DIExpression()), !dbg !14085
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !14086
  call void @z_device_state_init() #25, !dbg !14087
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !14088
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !14089
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !14090
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !14091
  unreachable, !dbg !14091
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2406 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2410, metadata !DIExpression()), !dbg !14092
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !14093
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !14093
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2411, metadata !DIExpression()), !dbg !14092
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2411, metadata !DIExpression()), !dbg !14092
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !14094
  br i1 %7, label %8, label %35, !dbg !14095

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2411, metadata !DIExpression()), !dbg !14092
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !14096
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !14096
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2421, metadata !DIExpression()), !dbg !14097
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !14098
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !14098
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !14099
  call void @llvm.dbg.value(metadata i32 %14, metadata !2425, metadata !DIExpression()), !dbg !14097
  %15 = icmp eq %struct.device* %11, null, !dbg !14100
  br i1 %15, label %32, label %16, !dbg !14102

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !14103
  br i1 %17, label %26, label %18, !dbg !14106

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !14107
  call void @llvm.dbg.value(metadata i32 %19, metadata !2425, metadata !DIExpression()), !dbg !14097
  %20 = icmp ult i32 %19, 255, !dbg !14109
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14109
  call void @llvm.dbg.value(metadata i32 %21, metadata !2425, metadata !DIExpression()), !dbg !14097
  %22 = trunc i32 %21 to i8, !dbg !14110
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14111
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14111
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14112
  store i8 %22, i8* %25, align 1, !dbg !14113
  br label %26, !dbg !14114

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14115
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14115
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14116
  %30 = load i8, i8* %29, align 1, !dbg !14117
  %31 = or i8 %30, 1, !dbg !14117
  store i8 %31, i8* %29, align 1, !dbg !14117
  br label %32, !dbg !14118

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14119
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2411, metadata !DIExpression()), !dbg !14092
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !14094
  br i1 %34, label %8, label %35, !dbg !14095, !llvm.loop !14120

35:                                               ; preds = %32, %1
  ret void, !dbg !14122
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.203(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !14123 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14125, metadata !DIExpression()), !dbg !14127
  call void @llvm.dbg.value(metadata i32 %1, metadata !14126, metadata !DIExpression()), !dbg !14127
  %3 = trunc i32 %1 to i8, !dbg !14128
  %4 = shl i8 %3, 4, !dbg !14128
  %5 = and i32 %0, 15, !dbg !14131
  %6 = add nsw i32 %5, -4, !dbg !14132
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14133
  store volatile i8 %4, i8* %7, align 1, !dbg !14134
  ret void, !dbg !14135
}

; Function Attrs: optsize
declare !dbg !14136 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #6 !dbg !14137 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14140, metadata !DIExpression()), !dbg !14141
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14142
  store i8 1, i8* %2, align 1, !dbg !14143
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14144
  store i8 1, i8* %3, align 4, !dbg !14145
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14146
  store i32 0, i32* %4, align 4, !dbg !14147
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14148
  store i32 0, i32* %5, align 4, !dbg !14149
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14150
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !14151
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14152
  ret void, !dbg !14153
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !14154 {
  tail call void @z_sched_init() #25, !dbg !14159
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14160
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.204, i32 0, i32 0)) #25, !dbg !14161
  call void @llvm.dbg.value(metadata i8* %1, metadata !14158, metadata !DIExpression()), !dbg !14162
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !14163
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !14164
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !14165
  ret i8* %1, !dbg !14166
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !14167 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14171, metadata !DIExpression()), !dbg !14172
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !14173
  unreachable, !dbg !14174
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !14175 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14177, metadata !DIExpression()), !dbg !14180
  call void @llvm.dbg.value(metadata i8* %1, metadata !14178, metadata !DIExpression()), !dbg !14180
  call void @llvm.dbg.value(metadata i8* %2, metadata !14179, metadata !DIExpression()), !dbg !14180
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !14181
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !14182
  tail call void @boot_banner() #25, !dbg !14183
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !14184
  tail call void @z_init_static_threads() #25, !dbg !14185
  tail call void @main() #25, !dbg !14186
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14187
  %5 = and i8 %4, -2, !dbg !14187
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14187
  ret void, !dbg !14188
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !14189 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14199, metadata !DIExpression()), !dbg !14201
  call void @llvm.dbg.value(metadata i8* %1, metadata !14200, metadata !DIExpression()), !dbg !14201
  ret void, !dbg !14202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !14203 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14205, metadata !DIExpression()), !dbg !14207
  call void @llvm.dbg.value(metadata i8* %1, metadata !14206, metadata !DIExpression()), !dbg !14207
  ret void, !dbg !14208
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !14209 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14210, !srcloc !14217
  call void @llvm.dbg.value(metadata i32 %1, metadata !14213, metadata !DIExpression()) #23, !dbg !14218
  %2 = icmp ne i32 %1, 0, !dbg !14219
  ret i1 %2, !dbg !14220
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #11 !dbg !14221 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14222
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14223
  %3 = load i8, i8* %2, align 4, !dbg !14224
  %4 = or i8 %3, 1, !dbg !14224
  store i8 %4, i8* %2, align 4, !dbg !14224
  ret void, !dbg !14225
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #11 !dbg !14226 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14227
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14228
  %3 = load i8, i8* %2, align 4, !dbg !14229
  %4 = and i8 %3, -2, !dbg !14229
  store i8 %4, i8* %2, align 4, !dbg !14229
  ret void, !dbg !14230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #10 !dbg !14231 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14232
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14233
  %3 = load i8, i8* %2, align 4, !dbg !14233
  %4 = and i8 %3, 1, !dbg !14234
  %5 = icmp ne i8 %4, 0, !dbg !14235
  ret i1 %5, !dbg !14236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !14237 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14241, metadata !DIExpression()), !dbg !14243
  call void @llvm.dbg.value(metadata i8* %1, metadata !14242, metadata !DIExpression()), !dbg !14243
  ret i32 -88, !dbg !14244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !14245 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14249, metadata !DIExpression()), !dbg !14250
  ret i8* null, !dbg !14251
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #4 !dbg !14252 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14256, metadata !DIExpression()), !dbg !14259
  call void @llvm.dbg.value(metadata i8* %1, metadata !14257, metadata !DIExpression()), !dbg !14259
  call void @llvm.dbg.value(metadata i32 %2, metadata !14258, metadata !DIExpression()), !dbg !14259
  ret i32 -88, !dbg !14260
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2434 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2548, metadata !DIExpression()), !dbg !14261
  call void @llvm.dbg.value(metadata i8* %1, metadata !2549, metadata !DIExpression()), !dbg !14261
  call void @llvm.dbg.value(metadata i32 %2, metadata !2550, metadata !DIExpression()), !dbg !14261
  call void @llvm.dbg.value(metadata i32 0, metadata !2551, metadata !DIExpression()), !dbg !14261
  call void @llvm.dbg.value(metadata i8 undef, metadata !2553, metadata !DIExpression()), !dbg !14261
  %4 = icmp eq i8* %1, null, !dbg !14262
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14264
  br i1 %6, label %46, label %7, !dbg !14264

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14265
  %9 = load i8, i8* %8, align 1, !dbg !14265
  call void @llvm.dbg.value(metadata i8 %9, metadata !2553, metadata !DIExpression()), !dbg !14261
  %10 = add i32 %2, -1, !dbg !14266
  call void @llvm.dbg.value(metadata i32 %10, metadata !2550, metadata !DIExpression()), !dbg !14261
  call void @llvm.dbg.value(metadata i8 0, metadata !2554, metadata !DIExpression()), !dbg !14267
  call void @llvm.dbg.value(metadata i8 %9, metadata !2553, metadata !DIExpression()), !dbg !14261
  call void @llvm.dbg.value(metadata i32 0, metadata !2551, metadata !DIExpression()), !dbg !14261
  %11 = icmp eq i8 %9, 0, !dbg !14268
  br i1 %11, label %12, label %15, !dbg !14270

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14271
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14272
  store i8 0, i8* %14, align 1, !dbg !14273
  br label %46, !dbg !14274

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2554, metadata !DIExpression()), !dbg !14267
  call void @llvm.dbg.value(metadata i8 %17, metadata !2553, metadata !DIExpression()), !dbg !14261
  call void @llvm.dbg.value(metadata i32 %18, metadata !2551, metadata !DIExpression()), !dbg !14261
  %19 = zext i8 %17 to i32, !dbg !14275
  %20 = zext i8 %16 to i32, !dbg !14276
  %21 = shl nuw i32 1, %20, !dbg !14276
  call void @llvm.dbg.value(metadata i32 %21, metadata !2552, metadata !DIExpression()), !dbg !14261
  %22 = and i32 %21, %19, !dbg !14278
  %23 = icmp eq i32 %22, 0, !dbg !14280
  br i1 %23, label %42, label %24, !dbg !14281

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14282
  %26 = sub i32 %10, %18, !dbg !14283
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14284
  %28 = load i8*, i8** %27, align 4, !dbg !14284
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14285
  %30 = load i32, i32* %29, align 4, !dbg !14285
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !14286
  %32 = add i32 %31, %18, !dbg !14287
  call void @llvm.dbg.value(metadata i32 %32, metadata !2551, metadata !DIExpression()), !dbg !14261
  %33 = trunc i32 %21 to i8, !dbg !14288
  %34 = xor i8 %33, -1, !dbg !14288
  %35 = and i8 %17, %34, !dbg !14288
  call void @llvm.dbg.value(metadata i8 %35, metadata !2553, metadata !DIExpression()), !dbg !14261
  %36 = icmp eq i8 %35, 0, !dbg !14289
  br i1 %36, label %12, label %37, !dbg !14291

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14292
  %39 = sub i32 %10, %32, !dbg !14294
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.207, i32 0, i32 0), i32 noundef 1) #24, !dbg !14295
  %41 = add i32 %40, %32, !dbg !14296
  call void @llvm.dbg.value(metadata i32 %41, metadata !2551, metadata !DIExpression()), !dbg !14261
  br label %42, !dbg !14297

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14261
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14261
  call void @llvm.dbg.value(metadata i8 %44, metadata !2553, metadata !DIExpression()), !dbg !14261
  call void @llvm.dbg.value(metadata i32 %43, metadata !2551, metadata !DIExpression()), !dbg !14261
  %45 = add i8 %16, 1, !dbg !14298
  call void @llvm.dbg.value(metadata i8 %45, metadata !2554, metadata !DIExpression()), !dbg !14267
  br label %15, !dbg !14270

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.208, i32 0, i32 0), %3 ], !dbg !14261
  ret i8* %47, !dbg !14299
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14300 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14304, metadata !DIExpression()), !dbg !14309
  call void @llvm.dbg.value(metadata i32 %1, metadata !14305, metadata !DIExpression()), !dbg !14309
  call void @llvm.dbg.value(metadata i8* %2, metadata !14306, metadata !DIExpression()), !dbg !14309
  call void @llvm.dbg.value(metadata i32 %3, metadata !14307, metadata !DIExpression()), !dbg !14309
  %5 = icmp ult i32 %1, %3, !dbg !14310
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14310
  call void @llvm.dbg.value(metadata i32 %6, metadata !14308, metadata !DIExpression()), !dbg !14309
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !14311
  ret i32 %6, !dbg !14312
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14313 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14317, metadata !DIExpression()), !dbg !14318
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !14319
  ret void, !dbg !14320
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14321 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14330, metadata !DIExpression()), !dbg !14341
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14331, metadata !DIExpression()), !dbg !14341
  call void @llvm.dbg.value(metadata i32 %2, metadata !14332, metadata !DIExpression()), !dbg !14341
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14333, metadata !DIExpression()), !dbg !14341
  call void @llvm.dbg.value(metadata i8* %4, metadata !14334, metadata !DIExpression()), !dbg !14341
  call void @llvm.dbg.value(metadata i8* %5, metadata !14335, metadata !DIExpression()), !dbg !14341
  call void @llvm.dbg.value(metadata i8* %6, metadata !14336, metadata !DIExpression()), !dbg !14341
  call void @llvm.dbg.value(metadata i32 %7, metadata !14337, metadata !DIExpression()), !dbg !14341
  call void @llvm.dbg.value(metadata i32 %8, metadata !14338, metadata !DIExpression()), !dbg !14341
  call void @llvm.dbg.value(metadata i8* undef, metadata !14339, metadata !DIExpression()), !dbg !14341
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14342
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %11) #24, !dbg !14343
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14344
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !14345
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !14346
  call void @llvm.dbg.value(metadata i8* %13, metadata !14340, metadata !DIExpression()), !dbg !14341
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !14347
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14348
  store i8* null, i8** %14, align 4, !dbg !14349
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14350
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !14350
  br i1 %16, label %20, label %17, !dbg !14352

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !14353
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !14353
  br label %20, !dbg !14354

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !14341
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14355
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !14357
  ret i8* %13, !dbg !14358
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !14359 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14364, metadata !DIExpression()), !dbg !14365
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14366
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !14367
  ret void, !dbg !14368
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #6 !dbg !14369 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14374, metadata !DIExpression()), !dbg !14378
  call void @llvm.dbg.value(metadata i32 %1, metadata !14375, metadata !DIExpression()), !dbg !14378
  call void @llvm.dbg.value(metadata i32 %2, metadata !14376, metadata !DIExpression()), !dbg !14378
  call void @llvm.dbg.value(metadata i32 %3, metadata !14377, metadata !DIExpression()), !dbg !14378
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14379
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !14380
  %6 = trunc i32 %3 to i8, !dbg !14381
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14382
  store i8 %6, i8* %7, align 4, !dbg !14383
  %8 = trunc i32 %2 to i8, !dbg !14384
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14385
  store i8 %8, i8* %9, align 1, !dbg !14386
  %10 = trunc i32 %1 to i8, !dbg !14387
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14388
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14388
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14388
  store i8 %10, i8* %13, align 2, !dbg !14389
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14390
  store i8 0, i8* %14, align 1, !dbg !14391
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !14392
  ret void, !dbg !14393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !14394 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14398, metadata !DIExpression()), !dbg !14406
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14399, metadata !DIExpression()), !dbg !14406
  call void @llvm.dbg.value(metadata i32 %2, metadata !14400, metadata !DIExpression()), !dbg !14406
  call void @llvm.dbg.value(metadata i32 0, metadata !14405, metadata !DIExpression()), !dbg !14406
  %4 = add i32 %2, 7, !dbg !14407
  %5 = and i32 %4, -8, !dbg !14407
  %6 = add i32 %5, 64, !dbg !14407
  call void @llvm.dbg.value(metadata i32 %6, metadata !14401, metadata !DIExpression()), !dbg !14406
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.218(%struct.z_thread_stack_element* noundef %1) #24, !dbg !14409
  call void @llvm.dbg.value(metadata i8* %7, metadata !14404, metadata !DIExpression()), !dbg !14406
  call void @llvm.dbg.value(metadata i32 %5, metadata !14402, metadata !DIExpression()), !dbg !14406
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14410
  call void @llvm.dbg.value(metadata i8* %8, metadata !14403, metadata !DIExpression()), !dbg !14406
  call void @llvm.dbg.value(metadata i32 0, metadata !14405, metadata !DIExpression()), !dbg !14406
  %9 = ptrtoint i8* %7 to i32, !dbg !14411
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14412
  store i32 %9, i32* %10, align 4, !dbg !14413
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14414
  store i32 %5, i32* %11, align 4, !dbg !14415
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14416
  store i32 0, i32* %12, align 4, !dbg !14417
  call void @llvm.dbg.value(metadata i8* %8, metadata !14403, metadata !DIExpression()), !dbg !14406
  ret i8* %8, !dbg !14418
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.218(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !14419 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14423, metadata !DIExpression()), !dbg !14424
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14425
  ret i8* %2, !dbg !14426
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !14427 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14432, metadata !DIExpression()), !dbg !14433
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14434
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14435
  ret void, !dbg !14436
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !14437 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14439, metadata !DIExpression()), !dbg !14440
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14441
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !14442
  ret void, !dbg !14443
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !14444 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14448, metadata !DIExpression()), !dbg !14449
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14450
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14451
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14452
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14453
  ret void, !dbg !14454
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !14455 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14460, metadata !DIExpression()), !dbg !14461
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14462
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14463
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14464
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14465
  ret void, !dbg !14466
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14467 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14484, metadata !DIExpression()), !dbg !14485
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14475, metadata !DIExpression()), !dbg !14485
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14476, metadata !DIExpression()), !dbg !14485
  call void @llvm.dbg.value(metadata i32 %2, metadata !14477, metadata !DIExpression()), !dbg !14485
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14478, metadata !DIExpression()), !dbg !14485
  call void @llvm.dbg.value(metadata i8* %4, metadata !14479, metadata !DIExpression()), !dbg !14485
  call void @llvm.dbg.value(metadata i8* %5, metadata !14480, metadata !DIExpression()), !dbg !14485
  call void @llvm.dbg.value(metadata i8* %6, metadata !14481, metadata !DIExpression()), !dbg !14485
  call void @llvm.dbg.value(metadata i32 %7, metadata !14482, metadata !DIExpression()), !dbg !14485
  call void @llvm.dbg.value(metadata i32 %8, metadata !14483, metadata !DIExpression()), !dbg !14485
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #24, !dbg !14486
  %13 = icmp eq i64 %11, -1, !dbg !14487
  br i1 %13, label %15, label %14, !dbg !14489

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !14490
  br label %15, !dbg !14492

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !14493
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14494 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14499, metadata !DIExpression()), !dbg !14500
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14498, metadata !DIExpression()), !dbg !14500
  %4 = icmp eq i64 %3, 0, !dbg !14501
  br i1 %4, label %5, label %6, !dbg !14503

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14504
  br label %7, !dbg !14506

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14507
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14509
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14510 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14514, metadata !DIExpression()), !dbg !14515
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14516, !srcloc !14518
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14519
  ret void, !dbg !14520
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14521 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14524, metadata !DIExpression()), !dbg !14525
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14523, metadata !DIExpression()), !dbg !14525
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14526
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14527
  ret void, !dbg !14528
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14529 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14531, metadata !DIExpression()), !dbg !14551
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !14552

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14553
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14549, metadata !DIExpression()), !dbg !14554
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !14555

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14531, metadata !DIExpression()), !dbg !14551
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14556
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14556
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14559
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !14559
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14560
  %9 = load i32, i32* %8, align 4, !dbg !14560
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14561
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !14561
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14562
  %13 = load i8*, i8** %12, align 4, !dbg !14562
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14563
  %15 = load i8*, i8** %14, align 4, !dbg !14563
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14564
  %17 = load i8*, i8** %16, align 4, !dbg !14564
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14565
  %19 = load i32, i32* %18, align 4, !dbg !14565
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14566
  %21 = load i32, i32* %20, align 4, !dbg !14566
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #24, !dbg !14567
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14568
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !14569
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !14570
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !14570
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14571
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !14531, metadata !DIExpression()), !dbg !14551
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14572
  br i1 %27, label %2, label %1, !dbg !14552, !llvm.loop !14574

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !14553
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14549, metadata !DIExpression()), !dbg !14554
  br label %29, !dbg !14555

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !14576
  ret void, !dbg !14577

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14549, metadata !DIExpression()), !dbg !14554
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !14578
  %33 = load i32, i32* %32, align 4, !dbg !14578
  %34 = icmp eq i32 %33, -1, !dbg !14582
  br i1 %34, label %43, label %35, !dbg !14583

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !14584
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !14584
  %38 = icmp sgt i32 %33, 0, !dbg !14586
  %39 = select i1 %38, i32 %33, i32 0, !dbg !14586
  %40 = zext i32 %39 to i64, !dbg !14586
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.221(i64 noundef %40) #24, !dbg !14586
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !14587
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #24, !dbg !14587
  br label %43, !dbg !14588

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !14589
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !14549, metadata !DIExpression()), !dbg !14554
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14590
  br i1 %45, label %30, label %29, !dbg !14555, !llvm.loop !14592
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.221(i64 noundef %0) unnamed_addr #4 !dbg !14594 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14596, metadata !DIExpression()), !dbg !14597
  call void @llvm.dbg.value(metadata i64 %0, metadata !14598, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata i32 1000, metadata !14601, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata i32 10000, metadata !14602, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata i8 1, metadata !14603, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata i8 0, metadata !14604, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata i8 1, metadata !14605, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata i8 0, metadata !14606, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata i8 1, metadata !14607, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata i8 0, metadata !14608, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata i64 0, metadata !14609, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata i64 0, metadata !14609, metadata !DIExpression()), !dbg !14613
  %2 = mul i64 %0, 10, !dbg !14615
  ret i64 %2, !dbg !14621
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !14622 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14624, metadata !DIExpression()), !dbg !14628
  call void @llvm.dbg.value(metadata i8* %1, metadata !14625, metadata !DIExpression()), !dbg !14628
  call void @llvm.dbg.value(metadata i8* %2, metadata !14626, metadata !DIExpression()), !dbg !14628
  call void @llvm.dbg.value(metadata i8* %3, metadata !14627, metadata !DIExpression()), !dbg !14628
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14629
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14630
  %7 = load i8, i8* %6, align 4, !dbg !14631
  %8 = or i8 %7, 4, !dbg !14631
  store i8 %8, i8* %6, align 4, !dbg !14631
  tail call void @z_thread_essential_clear() #24, !dbg !14632
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !14633
  unreachable, !dbg !14633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !14634 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14638, metadata !DIExpression()), !dbg !14639
  ret i32 -134, !dbg !14640
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !14641 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14645, metadata !DIExpression()), !dbg !14647
  call void @llvm.dbg.value(metadata i32 %1, metadata !14646, metadata !DIExpression()), !dbg !14647
  ret i32 -134, !dbg !14648
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #4 !dbg !14649 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14656, metadata !DIExpression()), !dbg !14658
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !14657, metadata !DIExpression()), !dbg !14658
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14659
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !14661
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14658
  ret i32 %6, !dbg !14662
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #4 !dbg !14663 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14667, metadata !DIExpression()), !dbg !14668
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !14669
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14668
  ret i32 %3, !dbg !14671
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14672 {
  tail call void @sys_clock_idle_exit() #25, !dbg !14674
  ret void, !dbg !14675
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !14676 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14678, metadata !DIExpression()), !dbg !14681
  call void @llvm.dbg.value(metadata i8* %1, metadata !14679, metadata !DIExpression()), !dbg !14681
  call void @llvm.dbg.value(metadata i8* %2, metadata !14680, metadata !DIExpression()), !dbg !14681
  br label %4, !dbg !14682

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14683, !srcloc !14690
  call void @llvm.dbg.value(metadata i32 undef, metadata !14686, metadata !DIExpression()) #23, !dbg !14691
  call void @llvm.dbg.value(metadata i32 undef, metadata !14687, metadata !DIExpression()) #23, !dbg !14691
  tail call fastcc void @k_cpu_idle() #24, !dbg !14692
  br label %4, !dbg !14682, !llvm.loop !14693
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14695 {
  tail call void @arch_cpu_idle() #25, !dbg !14696
  ret void, !dbg !14697
}

; Function Attrs: optsize
declare !dbg !14698 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !14699 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14703, metadata !DIExpression()), !dbg !14707
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14704, metadata !DIExpression()), !dbg !14707
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14708
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14708
  %5 = load i8, i8* %4, align 2, !dbg !14708
  call void @llvm.dbg.value(metadata i8 %5, metadata !14705, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14707
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14709
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14709
  %8 = load i8, i8* %7, align 2, !dbg !14709
  call void @llvm.dbg.value(metadata i8 %8, metadata !14706, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14707
  %9 = icmp eq i8 %8, %5, !dbg !14710
  %10 = sext i8 %5 to i32, !dbg !14712
  %11 = sext i8 %8 to i32, !dbg !14712
  %12 = sub nsw i32 %11, %10, !dbg !14712
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14712
  ret i32 %13, !dbg !14713
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14714 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14718, metadata !DIExpression()), !dbg !14719
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !14720
  %3 = icmp eq i32 %2, 0, !dbg !14722
  br i1 %3, label %8, label %4, !dbg !14723

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14724
  %6 = add i32 %5, %2, !dbg !14726
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14727
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !14728
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14729
  br label %8, !dbg !14730

8:                                                ; preds = %4, %1
  ret void, !dbg !14731
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #10 !dbg !14732 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14736, metadata !DIExpression()), !dbg !14738
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14739
  call void @llvm.dbg.value(metadata i32 %1, metadata !14737, metadata !DIExpression()), !dbg !14738
  ret i32 %1, !dbg !14740
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14741 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14745, metadata !DIExpression()), !dbg !14754
  call void @llvm.dbg.value(metadata i32 %1, metadata !14746, metadata !DIExpression()), !dbg !14754
  call void @llvm.dbg.value(metadata i32 0, metadata !14747, metadata !DIExpression()), !dbg !14755
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14756, metadata !DIExpression()) #23, !dbg !14763
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14765, !srcloc !14771
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14765
  call void @llvm.dbg.value(metadata i32 %4, metadata !14768, metadata !DIExpression()) #23, !dbg !14772
  call void @llvm.dbg.value(metadata i32 undef, metadata !14769, metadata !DIExpression()) #23, !dbg !14772
  call void @llvm.dbg.value(metadata i32 %4, metadata !14762, metadata !DIExpression()) #23, !dbg !14763
  call void @llvm.dbg.value(metadata i32 %4, metadata !14753, metadata !DIExpression()), !dbg !14755
  call void @llvm.dbg.value(metadata i32 undef, metadata !14747, metadata !DIExpression()), !dbg !14755
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14773
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14776
  %6 = icmp sgt i32 %0, 0, !dbg !14777
  %7 = icmp sgt i32 %5, 2, !dbg !14779
  %8 = select i1 %7, i32 %5, i32 2, !dbg !14779
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !14779
  store i32 %9, i32* @slice_ticks, align 4, !dbg !14780
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14781
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14782
  call void @llvm.dbg.value(metadata i32 %4, metadata !14783, metadata !DIExpression()) #23, !dbg !14789
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14788, metadata !DIExpression()) #23, !dbg !14789
  call void @llvm.dbg.value(metadata i32 %4, metadata !14791, metadata !DIExpression()) #23, !dbg !14794
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !14796, !srcloc !14797
  call void @llvm.dbg.value(metadata i32 1, metadata !14747, metadata !DIExpression()), !dbg !14755
  call void @llvm.dbg.value(metadata i32 undef, metadata !14747, metadata !DIExpression()), !dbg !14755
  ret void, !dbg !14798
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !14799 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14801, metadata !DIExpression()), !dbg !14802
  call void @llvm.dbg.value(metadata i32 %0, metadata !14803, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14818
  call void @llvm.dbg.value(metadata i32 1000, metadata !14806, metadata !DIExpression()), !dbg !14818
  call void @llvm.dbg.value(metadata i32 10000, metadata !14807, metadata !DIExpression()), !dbg !14818
  call void @llvm.dbg.value(metadata i8 1, metadata !14808, metadata !DIExpression()), !dbg !14818
  call void @llvm.dbg.value(metadata i1 true, metadata !14809, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14818
  call void @llvm.dbg.value(metadata i1 true, metadata !14810, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14818
  call void @llvm.dbg.value(metadata i8 0, metadata !14811, metadata !DIExpression()), !dbg !14818
  call void @llvm.dbg.value(metadata i1 true, metadata !14812, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14818
  call void @llvm.dbg.value(metadata i1 false, metadata !14813, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14818
  call void @llvm.dbg.value(metadata i64 0, metadata !14814, metadata !DIExpression()), !dbg !14818
  call void @llvm.dbg.value(metadata i64 0, metadata !14814, metadata !DIExpression()), !dbg !14818
  %2 = mul i32 %0, 10, !dbg !14820
  ret i32 %2, !dbg !14826
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14827 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14829, metadata !DIExpression()), !dbg !14831
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14756, metadata !DIExpression()) #23, !dbg !14832
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14834, !srcloc !14771
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14834
  call void @llvm.dbg.value(metadata i32 %3, metadata !14768, metadata !DIExpression()) #23, !dbg !14836
  call void @llvm.dbg.value(metadata i32 undef, metadata !14769, metadata !DIExpression()) #23, !dbg !14836
  call void @llvm.dbg.value(metadata i32 %3, metadata !14762, metadata !DIExpression()) #23, !dbg !14832
  call void @llvm.dbg.value(metadata i32 %3, metadata !14830, metadata !DIExpression()), !dbg !14831
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14837
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14839
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !14840
  br i1 %6, label %7, label %8, !dbg !14841

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14842
  call void @llvm.dbg.value(metadata i32 %3, metadata !14783, metadata !DIExpression()) #23, !dbg !14844
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14788, metadata !DIExpression()) #23, !dbg !14844
  call void @llvm.dbg.value(metadata i32 %3, metadata !14791, metadata !DIExpression()) #23, !dbg !14846
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14848, !srcloc !14797
  br label %24, !dbg !14849

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14850
  %9 = tail call fastcc i32 @slice_time() #24, !dbg !14851
  %10 = icmp eq i32 %9, 0, !dbg !14851
  br i1 %10, label %21, label %11, !dbg !14853

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #24, !dbg !14854
  br i1 %12, label %13, label %21, !dbg !14855

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14856
  %15 = icmp sgt i32 %14, %0, !dbg !14859
  br i1 %15, label %19, label %16, !dbg !14860

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14861
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #24, !dbg !14861
  call void @llvm.dbg.value(metadata i32 %18, metadata !14830, metadata !DIExpression()), !dbg !14831
  br label %22, !dbg !14863

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !14864
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14864
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14866
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !14831
  call void @llvm.dbg.value(metadata i32 %23, metadata !14830, metadata !DIExpression()), !dbg !14831
  call void @llvm.dbg.value(metadata i32 %23, metadata !14783, metadata !DIExpression()) #23, !dbg !14868
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14788, metadata !DIExpression()) #23, !dbg !14868
  call void @llvm.dbg.value(metadata i32 %23, metadata !14791, metadata !DIExpression()) #23, !dbg !14870
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !14872, !srcloc !14797
  br label %24, !dbg !14873

24:                                               ; preds = %22, %7
  ret void, !dbg !14873
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #10 !dbg !14874 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14878, metadata !DIExpression()), !dbg !14880
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14881
  %3 = icmp eq i32 %2, 0, !dbg !14881
  br i1 %3, label %16, label %4, !dbg !14882

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14883
  br i1 %5, label %16, label %6, !dbg !14884

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14885
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14885
  %9 = load i8, i8* %8, align 2, !dbg !14885
  %10 = sext i8 %9 to i32, !dbg !14886
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14887
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !14888
  br i1 %12, label %16, label %13, !dbg !14889

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14890
  %15 = xor i1 %14, true, !dbg !14891
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14880
  call void @llvm.dbg.value(metadata i1 %17, metadata !14879, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14880
  ret i1 %17, !dbg !14892
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14893 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14897, metadata !DIExpression()), !dbg !14899
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14900
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14898, metadata !DIExpression()), !dbg !14899
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !14901
  br i1 %3, label %5, label %4, !dbg !14903

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !14904
  br label %5, !dbg !14906

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14897, metadata !DIExpression()), !dbg !14899
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14907
  ret i32 %6, !dbg !14908
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14909 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14911, metadata !DIExpression()), !dbg !14913
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14914
  %3 = load i8, i8* %2, align 1, !dbg !14914
  call void @llvm.dbg.value(metadata i8 %3, metadata !14912, metadata !DIExpression()), !dbg !14913
  %4 = and i8 %3, 31, !dbg !14915
  %5 = icmp ne i8 %4, 0, !dbg !14916
  ret i1 %5, !dbg !14917
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14918 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14920, metadata !DIExpression()), !dbg !14921
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14922
  br i1 %2, label %3, label %7, !dbg !14924

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14925, metadata !DIExpression()) #23, !dbg !14928
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14931
  %5 = load i8, i8* %4, align 1, !dbg !14932
  %6 = and i8 %5, 127, !dbg !14932
  store i8 %6, i8* %4, align 1, !dbg !14932
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14933, metadata !DIExpression()) #23, !dbg !14936
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14940
  br label %7, !dbg !14941

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14942, metadata !DIExpression()) #23, !dbg !14945
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14947
  %9 = load i8, i8* %8, align 1, !dbg !14948
  %10 = or i8 %9, -128, !dbg !14948
  store i8 %10, i8* %8, align 1, !dbg !14948
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14949, metadata !DIExpression()) #23, !dbg !14952
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14956, metadata !DIExpression()) #23, !dbg !14964
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14962, metadata !DIExpression()) #23, !dbg !14964
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14966
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !14963, metadata !DIExpression()) #23, !dbg !14964
  %12 = icmp eq %struct._dnode* %11, null, !dbg !14968
  br i1 %12, label %23, label %13, !dbg !14966

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14963, metadata !DIExpression()) #23, !dbg !14964
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !14970
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14963, metadata !DIExpression()) #23, !dbg !14964
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !14971
  %17 = icmp sgt i32 %16, 0, !dbg !14974
  br i1 %17, label %18, label %20, !dbg !14975

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14976
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !14978
  br label %25, !dbg !14979

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !14968
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14963, metadata !DIExpression()) #23, !dbg !14964
  %22 = icmp eq %struct._dnode* %21, null, !dbg !14968
  br i1 %22, label %23, label %13, !dbg !14966, !llvm.loop !14980

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14982
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !14983
  br label %25, !dbg !14984

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14985
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !14986
  %28 = zext i1 %27 to i32, !dbg !14986
  tail call fastcc void @update_cache(i32 noundef %28) #24, !dbg !14987
  ret void, !dbg !14988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14989 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14991, metadata !DIExpression()), !dbg !14992
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #24, !dbg !14993
  ret i1 %2, !dbg !14994
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #11 !dbg !14995 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14997, metadata !DIExpression()), !dbg !14999
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14998, metadata !DIExpression()), !dbg !14999
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !15000
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #24, !dbg !15001
  ret void, !dbg !15002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !15003 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15007, metadata !DIExpression()), !dbg !15008
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !15009
  br i1 %2, label %6, label %3, !dbg !15009

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15010
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15010
  br label %6, !dbg !15009

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15009
  ret %struct._dnode* %7, !dbg !15011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !15012 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15016, metadata !DIExpression()), !dbg !15020
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15017, metadata !DIExpression()), !dbg !15020
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15021
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15021
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15018, metadata !DIExpression()), !dbg !15020
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15022
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15023
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15024
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15025
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15026
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15027
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15028
  ret void, !dbg !15029
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !15030 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15034, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15035, metadata !DIExpression()), !dbg !15036
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15037
  br i1 %3, label %6, label %4, !dbg !15038

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !15039
  br label %6, !dbg !15038

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15038
  ret %struct._dnode* %7, !dbg !15040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !15041 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15045, metadata !DIExpression()), !dbg !15048
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15046, metadata !DIExpression()), !dbg !15048
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15049
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15049
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15047, metadata !DIExpression()), !dbg !15048
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15050
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15051
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15052
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15053
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15054
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15055
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15056
  ret void, !dbg !15057
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15058 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15060, metadata !DIExpression()), !dbg !15062
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15063
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15070, metadata !DIExpression()) #23, !dbg !15072
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15073
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15074
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15074
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15061, metadata !DIExpression()), !dbg !15062
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15075, metadata !DIExpression()) #23, !dbg !15081
  call void @llvm.dbg.value(metadata i32 %0, metadata !15080, metadata !DIExpression()) #23, !dbg !15081
  %6 = icmp eq i32 %0, 0, !dbg !15084
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15086
  br i1 %6, label %8, label %15, !dbg !15087

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !15088
  br i1 %9, label %15, label %10, !dbg !15090

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !15091
  br i1 %11, label %15, label %12, !dbg !15093

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !15094
  %14 = icmp eq i32 %13, 0, !dbg !15094
  br i1 %14, label %18, label %15, !dbg !15096

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !15097
  br i1 %16, label %18, label %17, !dbg !15100

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !15101
  br label %18, !dbg !15103

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !15086
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15086
  ret void, !dbg !15104
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #10 !dbg !15105 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15109, metadata !DIExpression()), !dbg !15112
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15110, metadata !DIExpression()), !dbg !15112
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !15113
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15111, metadata !DIExpression()), !dbg !15112
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15110, metadata !DIExpression()), !dbg !15112
  ret %struct.k_thread* %3, !dbg !15114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15115 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15117, metadata !DIExpression()), !dbg !15118
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15119
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !15120
  %4 = xor i1 %3, true, !dbg !15121
  ret i1 %4, !dbg !15122
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15123 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15125, metadata !DIExpression()), !dbg !15126
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15127
  %3 = load i16, i16* %2, align 2, !dbg !15127
  %4 = icmp ult i16 %3, 128, !dbg !15128
  %5 = zext i1 %4 to i32, !dbg !15128
  ret i32 %5, !dbg !15129
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15130 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15136, metadata !DIExpression()), !dbg !15137
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15138
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !15139
  %4 = xor i1 %3, true, !dbg !15140
  ret i1 %4, !dbg !15141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15142 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15148, metadata !DIExpression()), !dbg !15149
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15150
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15150
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15151
  ret i1 %4, !dbg !15152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !15153 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15155, metadata !DIExpression()), !dbg !15157
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15156, metadata !DIExpression()), !dbg !15157
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15158
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15158
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15159
  br i1 %5, label %9, label %6, !dbg !15160

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15161
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15161
  br label %9, !dbg !15160

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15160
  ret %struct._dnode* %10, !dbg !15162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !15163 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15167, metadata !DIExpression()), !dbg !15168
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15169
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15169
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15170
  ret i1 %4, !dbg !15171
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !15172 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15176, metadata !DIExpression()), !dbg !15179
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15180
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15180
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15177, metadata !DIExpression()), !dbg !15179
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15181
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15181
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15178, metadata !DIExpression()), !dbg !15179
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15182
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15183
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15184
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15185
  tail call fastcc void @sys_dnode_init.224(%struct._dnode* noundef %0) #24, !dbg !15186
  ret void, !dbg !15187
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.224(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !15188 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15190, metadata !DIExpression()), !dbg !15191
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15192
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15193
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15194
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15195
  ret void, !dbg !15196
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15197 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15201, metadata !DIExpression()), !dbg !15203
  call void @llvm.dbg.value(metadata i32 128, metadata !15202, metadata !DIExpression()), !dbg !15203
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15204
  %3 = load i8, i8* %2, align 1, !dbg !15204
  %4 = icmp slt i8 %3, 0, !dbg !15205
  ret i1 %4, !dbg !15206
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !15207 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15211, metadata !DIExpression()), !dbg !15213
  call void @llvm.dbg.value(metadata i32 %1, metadata !15212, metadata !DIExpression()), !dbg !15213
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !15214
  ret i1 %3, !dbg !15215
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !15216 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15218, metadata !DIExpression()), !dbg !15219
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !15220
  ret i1 %2, !dbg !15221
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !15222 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15224, metadata !DIExpression()), !dbg !15226
  call void @llvm.dbg.value(metadata i32 %1, metadata !15225, metadata !DIExpression()), !dbg !15226
  %3 = icmp slt i32 %0, %1, !dbg !15227
  ret i1 %3, !dbg !15228
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15229 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15231, metadata !DIExpression()), !dbg !15235
  call void @llvm.dbg.value(metadata i32 0, metadata !15232, metadata !DIExpression()), !dbg !15236
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14756, metadata !DIExpression()) #23, !dbg !15237
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15239, !srcloc !14771
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15239
  call void @llvm.dbg.value(metadata i32 %3, metadata !14768, metadata !DIExpression()) #23, !dbg !15241
  call void @llvm.dbg.value(metadata i32 undef, metadata !14769, metadata !DIExpression()) #23, !dbg !15241
  call void @llvm.dbg.value(metadata i32 %3, metadata !14762, metadata !DIExpression()) #23, !dbg !15237
  call void @llvm.dbg.value(metadata i32 %3, metadata !15234, metadata !DIExpression()), !dbg !15236
  call void @llvm.dbg.value(metadata i32 undef, metadata !15232, metadata !DIExpression()), !dbg !15236
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15242
  call void @llvm.dbg.value(metadata i32 %3, metadata !14783, metadata !DIExpression()) #23, !dbg !15247
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14788, metadata !DIExpression()) #23, !dbg !15247
  call void @llvm.dbg.value(metadata i32 %3, metadata !14791, metadata !DIExpression()) #23, !dbg !15249
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15251, !srcloc !14797
  call void @llvm.dbg.value(metadata i32 1, metadata !15232, metadata !DIExpression()), !dbg !15236
  call void @llvm.dbg.value(metadata i32 undef, metadata !15232, metadata !DIExpression()), !dbg !15236
  ret void, !dbg !15252
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15253 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15255, metadata !DIExpression()), !dbg !15256
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15257
  br i1 %2, label %24, label %3, !dbg !15259

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15260
  br i1 %4, label %5, label %24, !dbg !15261

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14942, metadata !DIExpression()) #23, !dbg !15262
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15265
  %7 = load i8, i8* %6, align 1, !dbg !15266
  %8 = or i8 %7, -128, !dbg !15266
  store i8 %8, i8* %6, align 1, !dbg !15266
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14949, metadata !DIExpression()) #23, !dbg !15267
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14956, metadata !DIExpression()) #23, !dbg !15269
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14962, metadata !DIExpression()) #23, !dbg !15269
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15271
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !14963, metadata !DIExpression()) #23, !dbg !15269
  %10 = icmp eq %struct._dnode* %9, null, !dbg !15272
  br i1 %10, label %21, label %11, !dbg !15271

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14963, metadata !DIExpression()) #23, !dbg !15269
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !15273
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14963, metadata !DIExpression()) #23, !dbg !15269
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !15274
  %15 = icmp sgt i32 %14, 0, !dbg !15275
  br i1 %15, label %16, label %18, !dbg !15276

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15277
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !15278
  br label %23, !dbg !15279

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !15272
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !14963, metadata !DIExpression()) #23, !dbg !15269
  %20 = icmp eq %struct._dnode* %19, null, !dbg !15272
  br i1 %20, label %21, label %11, !dbg !15271, !llvm.loop !15280

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15282
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !15283
  br label %23, !dbg !15284

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15285
  br label %24, !dbg !15286

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !15287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15288 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15290, metadata !DIExpression()), !dbg !15291
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !15292
  br i1 %2, label %6, label %3, !dbg !15293

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !15294
  %5 = xor i1 %4, true, !dbg !15293
  br label %6, !dbg !15293

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15295
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15296 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15298, metadata !DIExpression()), !dbg !15302
  call void @llvm.dbg.value(metadata i32 0, metadata !15299, metadata !DIExpression()), !dbg !15303
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14756, metadata !DIExpression()) #23, !dbg !15304
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15306, !srcloc !14771
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15306
  call void @llvm.dbg.value(metadata i32 %3, metadata !14768, metadata !DIExpression()) #23, !dbg !15308
  call void @llvm.dbg.value(metadata i32 undef, metadata !14769, metadata !DIExpression()) #23, !dbg !15308
  call void @llvm.dbg.value(metadata i32 %3, metadata !14762, metadata !DIExpression()) #23, !dbg !15304
  call void @llvm.dbg.value(metadata i32 %3, metadata !15301, metadata !DIExpression()), !dbg !15303
  call void @llvm.dbg.value(metadata i32 undef, metadata !15299, metadata !DIExpression()), !dbg !15303
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !15309
  call void @llvm.dbg.value(metadata i32 %3, metadata !14783, metadata !DIExpression()) #23, !dbg !15312
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14788, metadata !DIExpression()) #23, !dbg !15312
  call void @llvm.dbg.value(metadata i32 %3, metadata !14791, metadata !DIExpression()) #23, !dbg !15314
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15316, !srcloc !14797
  call void @llvm.dbg.value(metadata i32 1, metadata !15299, metadata !DIExpression()), !dbg !15303
  call void @llvm.dbg.value(metadata i32 undef, metadata !15299, metadata !DIExpression()), !dbg !15303
  ret void, !dbg !15317
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15318 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15320, metadata !DIExpression()), !dbg !15322
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14756, metadata !DIExpression()) #23, !dbg !15323
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15325, !srcloc !14771
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15325
  call void @llvm.dbg.value(metadata i32 %3, metadata !14768, metadata !DIExpression()) #23, !dbg !15327
  call void @llvm.dbg.value(metadata i32 undef, metadata !14769, metadata !DIExpression()) #23, !dbg !15327
  call void @llvm.dbg.value(metadata i32 %3, metadata !14762, metadata !DIExpression()) #23, !dbg !15323
  call void @llvm.dbg.value(metadata i32 %3, metadata !15321, metadata !DIExpression()), !dbg !15322
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !15328
  br i1 %4, label %5, label %6, !dbg !15330

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14783, metadata !DIExpression()) #23, !dbg !15331
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14788, metadata !DIExpression()) #23, !dbg !15331
  call void @llvm.dbg.value(metadata i32 %3, metadata !14791, metadata !DIExpression()) #23, !dbg !15334
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15336, !srcloc !14797
  br label %8, !dbg !15337

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.229(%struct.k_thread* noundef %0) #24, !dbg !15338
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15339
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15340
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !15340
  br label %8, !dbg !15341

8:                                                ; preds = %6, %5
  ret void, !dbg !15341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15342 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15344, metadata !DIExpression()), !dbg !15345
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15346
  %3 = load i8, i8* %2, align 1, !dbg !15346
  %4 = and i8 %3, 4, !dbg !15347
  %5 = icmp eq i8 %4, 0, !dbg !15348
  ret i1 %5, !dbg !15349
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.229(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15350 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15352, metadata !DIExpression()), !dbg !15353
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15354
  %3 = load i8, i8* %2, align 1, !dbg !15355
  %4 = and i8 %3, -5, !dbg !15355
  store i8 %4, i8* %2, align 1, !dbg !15355
  ret void, !dbg !15356
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15357 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15360, metadata !DIExpression()), !dbg !15361
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15359, metadata !DIExpression()), !dbg !15361
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !15362
  br i1 %4, label %5, label %9, !dbg !15364

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !15365
  br i1 %6, label %7, label %9, !dbg !15366

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !15367, metadata !DIExpression()) #23, !dbg !15373
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15372, metadata !DIExpression()) #23, !dbg !15373
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15376
  br label %10, !dbg !15377

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !14783, metadata !DIExpression()) #23, !dbg !15378
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14788, metadata !DIExpression()) #23, !dbg !15378
  call void @llvm.dbg.value(metadata i32 %3, metadata !14791, metadata !DIExpression()) #23, !dbg !15381
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15383, !srcloc !14797
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !15384
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15385 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15389, metadata !DIExpression()), !dbg !15390
  call void @llvm.dbg.value(metadata i32 %0, metadata !15391, metadata !DIExpression()), !dbg !15396
  %2 = icmp eq i32 %0, 0, !dbg !15398
  br i1 %2, label %3, label %6, !dbg !15399

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15400, !srcloc !15407
  call void @llvm.dbg.value(metadata i32 %4, metadata !15403, metadata !DIExpression()) #23, !dbg !15408
  %5 = icmp eq i32 %4, 0, !dbg !15409
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15390
  ret i1 %7, !dbg !15410
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #10 !dbg !15411 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15414
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15413, metadata !DIExpression()), !dbg !15415
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15416
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15417
  ret i1 %3, !dbg !15418
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15419 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15421, metadata !DIExpression()), !dbg !15423
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15424
  call void @llvm.dbg.value(metadata i32 %2, metadata !15422, metadata !DIExpression()), !dbg !15423
  ret i32 %2, !dbg !15425
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15426 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15428, metadata !DIExpression()), !dbg !15432
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15433
  call void @llvm.dbg.value(metadata i32 0, metadata !15429, metadata !DIExpression()), !dbg !15434
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14756, metadata !DIExpression()) #23, !dbg !15435
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15437, !srcloc !14771
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15437
  call void @llvm.dbg.value(metadata i32 %4, metadata !14768, metadata !DIExpression()) #23, !dbg !15439
  call void @llvm.dbg.value(metadata i32 undef, metadata !14769, metadata !DIExpression()) #23, !dbg !15439
  call void @llvm.dbg.value(metadata i32 %4, metadata !14762, metadata !DIExpression()) #23, !dbg !15435
  call void @llvm.dbg.value(metadata i32 %4, metadata !15431, metadata !DIExpression()), !dbg !15434
  call void @llvm.dbg.value(metadata i32 undef, metadata !15429, metadata !DIExpression()), !dbg !15434
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15440
  br i1 %5, label %6, label %10, !dbg !15444

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14925, metadata !DIExpression()) #23, !dbg !15445
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15448
  %8 = load i8, i8* %7, align 1, !dbg !15449
  %9 = and i8 %8, 127, !dbg !15449
  store i8 %9, i8* %7, align 1, !dbg !15449
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14933, metadata !DIExpression()) #23, !dbg !15450
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15452
  br label %10, !dbg !15453

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !15454
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15455
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !15456
  %13 = zext i1 %12 to i32, !dbg !15456
  tail call fastcc void @update_cache(i32 noundef %13) #24, !dbg !15457
  call void @llvm.dbg.value(metadata i32 %4, metadata !14783, metadata !DIExpression()) #23, !dbg !15458
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14788, metadata !DIExpression()) #23, !dbg !15458
  call void @llvm.dbg.value(metadata i32 %4, metadata !14791, metadata !DIExpression()) #23, !dbg !15460
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !15462, !srcloc !14797
  call void @llvm.dbg.value(metadata i32 1, metadata !15429, metadata !DIExpression()), !dbg !15434
  call void @llvm.dbg.value(metadata i32 undef, metadata !15429, metadata !DIExpression()), !dbg !15434
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15463
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15465
  br i1 %15, label %16, label %17, !dbg !15466

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15467
  br label %17, !dbg !15469

17:                                               ; preds = %16, %10
  ret void, !dbg !15470
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15471 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15473, metadata !DIExpression()), !dbg !15474
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15475
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15476
  ret i32 %3, !dbg !15477
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15478 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15480, metadata !DIExpression()), !dbg !15481
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15482
  %3 = load i8, i8* %2, align 1, !dbg !15483
  %4 = or i8 %3, 16, !dbg !15483
  store i8 %4, i8* %2, align 1, !dbg !15483
  ret void, !dbg !15484
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15485 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15486, !srcloc !14771
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15486
  call void @llvm.dbg.value(metadata i32 %2, metadata !14768, metadata !DIExpression()) #23, !dbg !15488
  call void @llvm.dbg.value(metadata i32 undef, metadata !14769, metadata !DIExpression()) #23, !dbg !15488
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !15489
  ret void, !dbg !15490
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15491 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15493, metadata !DIExpression()), !dbg !15494
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !15495
  br i1 %2, label %3, label %5, !dbg !15497

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15498
  br label %6, !dbg !15500

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14791, metadata !DIExpression()) #23, !dbg !15501
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !15504, !srcloc !14797
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15505
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15506 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15508, metadata !DIExpression()), !dbg !15510
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14756, metadata !DIExpression()) #23, !dbg !15511
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15513, !srcloc !14771
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15513
  call void @llvm.dbg.value(metadata i32 %3, metadata !14768, metadata !DIExpression()) #23, !dbg !15515
  call void @llvm.dbg.value(metadata i32 undef, metadata !14769, metadata !DIExpression()) #23, !dbg !15515
  call void @llvm.dbg.value(metadata i32 %3, metadata !14762, metadata !DIExpression()) #23, !dbg !15511
  call void @llvm.dbg.value(metadata i32 %3, metadata !15509, metadata !DIExpression()), !dbg !15510
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !15516
  br i1 %4, label %6, label %5, !dbg !15518

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14783, metadata !DIExpression()) #23, !dbg !15519
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14788, metadata !DIExpression()) #23, !dbg !15519
  call void @llvm.dbg.value(metadata i32 %3, metadata !14791, metadata !DIExpression()) #23, !dbg !15522
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15524, !srcloc !14797
  br label %8, !dbg !15525

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !15526
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15527
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15528
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !15528
  br label %8, !dbg !15529

8:                                                ; preds = %6, %5
  ret void, !dbg !15529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15530 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15532, metadata !DIExpression()), !dbg !15533
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15534
  %3 = load i8, i8* %2, align 1, !dbg !15534
  %4 = and i8 %3, 16, !dbg !15535
  %5 = icmp ne i8 %4, 0, !dbg !15536
  ret i1 %5, !dbg !15537
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15538 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15540, metadata !DIExpression()), !dbg !15541
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15542
  %3 = load i8, i8* %2, align 1, !dbg !15543
  %4 = and i8 %3, -17, !dbg !15543
  store i8 %4, i8* %2, align 1, !dbg !15543
  ret void, !dbg !15544
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15545 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15555, metadata !DIExpression()), !dbg !15559
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15553, metadata !DIExpression()), !dbg !15559
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15554, metadata !DIExpression()), !dbg !15559
  call void @llvm.dbg.value(metadata i32 0, metadata !15556, metadata !DIExpression()), !dbg !15560
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14756, metadata !DIExpression()) #23, !dbg !15561
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15563, !srcloc !14771
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15563
  call void @llvm.dbg.value(metadata i32 %5, metadata !14768, metadata !DIExpression()) #23, !dbg !15565
  call void @llvm.dbg.value(metadata i32 undef, metadata !14769, metadata !DIExpression()) #23, !dbg !15565
  call void @llvm.dbg.value(metadata i32 %5, metadata !14762, metadata !DIExpression()) #23, !dbg !15561
  call void @llvm.dbg.value(metadata i32 %5, metadata !15558, metadata !DIExpression()), !dbg !15560
  call void @llvm.dbg.value(metadata i32 undef, metadata !15556, metadata !DIExpression()), !dbg !15560
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15566
  call void @llvm.dbg.value(metadata i32 %5, metadata !14783, metadata !DIExpression()) #23, !dbg !15569
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14788, metadata !DIExpression()) #23, !dbg !15569
  call void @llvm.dbg.value(metadata i32 %5, metadata !14791, metadata !DIExpression()) #23, !dbg !15571
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !15573, !srcloc !14797
  call void @llvm.dbg.value(metadata i32 1, metadata !15556, metadata !DIExpression()), !dbg !15560
  call void @llvm.dbg.value(metadata i32 undef, metadata !15556, metadata !DIExpression()), !dbg !15560
  ret void, !dbg !15574
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15575 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15579, metadata !DIExpression()), !dbg !15580
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15577, metadata !DIExpression()), !dbg !15580
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15578, metadata !DIExpression()), !dbg !15580
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #24, !dbg !15581
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !15582
  ret void, !dbg !15583
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !15584 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15588, metadata !DIExpression()), !dbg !15590
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15589, metadata !DIExpression()), !dbg !15590
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !15591
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !15592
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !15593
  br i1 %3, label %21, label %4, !dbg !15595

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15596
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !15598
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !15599
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14956, metadata !DIExpression()) #23, !dbg !15600
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14962, metadata !DIExpression()) #23, !dbg !15600
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !15602
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14963, metadata !DIExpression()) #23, !dbg !15600
  %8 = icmp eq %struct._dnode* %7, null, !dbg !15603
  br i1 %8, label %19, label %9, !dbg !15602

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14963, metadata !DIExpression()) #23, !dbg !15600
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !15604
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !14963, metadata !DIExpression()) #23, !dbg !15600
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !15605
  %13 = icmp sgt i32 %12, 0, !dbg !15606
  br i1 %13, label %14, label %16, !dbg !15607

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15608
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !15609
  br label %21, !dbg !15610

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !15603
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14963, metadata !DIExpression()) #23, !dbg !15600
  %18 = icmp eq %struct._dnode* %17, null, !dbg !15603
  br i1 %18, label %19, label %9, !dbg !15602, !llvm.loop !15611

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15613
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !15614
  br label %21, !dbg !15615

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !15616
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15617 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15622, metadata !DIExpression()), !dbg !15623
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15621, metadata !DIExpression()), !dbg !15623
  %4 = icmp eq i64 %3, -1, !dbg !15624
  br i1 %4, label %6, label %5, !dbg !15626

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.230(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15627
  br label %6, !dbg !15629

6:                                                ; preds = %5, %2
  ret void, !dbg !15630
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.230(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15631 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15634, metadata !DIExpression()), !dbg !15635
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15633, metadata !DIExpression()), !dbg !15635
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15636
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15637
  ret void, !dbg !15638
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15639 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15641, metadata !DIExpression()), !dbg !15649
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15650
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15650
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15642, metadata !DIExpression()), !dbg !15649
  call void @llvm.dbg.value(metadata i32 0, metadata !15643, metadata !DIExpression()), !dbg !15651
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14756, metadata !DIExpression()) #23, !dbg !15652
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15654, !srcloc !14771
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #23, !dbg !15656
  call void @llvm.dbg.value(metadata i32 undef, metadata !14769, metadata !DIExpression()) #23, !dbg !15656
  call void @llvm.dbg.value(metadata i32 undef, metadata !14762, metadata !DIExpression()) #23, !dbg !15652
  call void @llvm.dbg.value(metadata i32 undef, metadata !15645, metadata !DIExpression()), !dbg !15651
  call void @llvm.dbg.value(metadata i32 undef, metadata !15643, metadata !DIExpression()), !dbg !15651
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15657
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !15658
  %7 = load i8, i8* %6, align 1, !dbg !15658
  %8 = and i8 %7, 40, !dbg !15659
  %9 = icmp eq i8 %8, 0, !dbg !15659
  call void @llvm.dbg.value(metadata i1 %9, metadata !15646, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15660
  br i1 %9, label %10, label %17, !dbg !15661

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15662
  %12 = bitcast void (%struct._timeout*)** %11 to %struct._wait_q_t**, !dbg !15662
  %13 = load %struct._wait_q_t*, %struct._wait_q_t** %12, align 8, !dbg !15662
  %14 = icmp eq %struct._wait_q_t* %13, null, !dbg !15666
  br i1 %14, label %16, label %15, !dbg !15667

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15668
  br label %16, !dbg !15670

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.229(%struct.k_thread* noundef nonnull %3) #24, !dbg !15671
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15672
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15673
  br label %17, !dbg !15674

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !15654
  call void @llvm.dbg.value(metadata i32 %18, metadata !14768, metadata !DIExpression()) #23, !dbg !15656
  call void @llvm.dbg.value(metadata i32 %18, metadata !14762, metadata !DIExpression()) #23, !dbg !15652
  call void @llvm.dbg.value(metadata i32 %18, metadata !15645, metadata !DIExpression()), !dbg !15651
  call void @llvm.dbg.value(metadata i32 undef, metadata !14783, metadata !DIExpression()) #23, !dbg !15675
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14788, metadata !DIExpression()) #23, !dbg !15675
  call void @llvm.dbg.value(metadata i32 undef, metadata !14791, metadata !DIExpression()) #23, !dbg !15677
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !15679, !srcloc !14797
  call void @llvm.dbg.value(metadata i32 1, metadata !15643, metadata !DIExpression()), !dbg !15651
  call void @llvm.dbg.value(metadata i32 undef, metadata !15643, metadata !DIExpression()), !dbg !15651
  ret void, !dbg !15680
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15681 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15683, metadata !DIExpression()), !dbg !15684
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15685
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15686
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15687
  store %struct._wait_q_t* null, %struct._wait_q_t** %2, align 8, !dbg !15688
  ret void, !dbg !15689
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15690 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15692, metadata !DIExpression()), !dbg !15693
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15694
  %3 = load i8, i8* %2, align 1, !dbg !15695
  %4 = and i8 %3, -3, !dbg !15695
  store i8 %4, i8* %2, align 1, !dbg !15695
  ret void, !dbg !15696
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15697 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15699, metadata !DIExpression()), !dbg !15700
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15701
  br i1 %2, label %3, label %7, !dbg !15703

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14925, metadata !DIExpression()) #23, !dbg !15704
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15707
  %5 = load i8, i8* %4, align 1, !dbg !15708
  %6 = and i8 %5, 127, !dbg !15708
  store i8 %6, i8* %4, align 1, !dbg !15708
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14933, metadata !DIExpression()) #23, !dbg !15709
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15711
  br label %7, !dbg !15712

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15713
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15714
  %10 = zext i1 %9 to i32, !dbg !15714
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15715
  ret void, !dbg !15716
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15717 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15719, metadata !DIExpression()), !dbg !15720
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15721
  %3 = load i8, i8* %2, align 1, !dbg !15722
  %4 = or i8 %3, 2, !dbg !15722
  store i8 %4, i8* %2, align 1, !dbg !15722
  ret void, !dbg !15723
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #22 !dbg !15724 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15726, metadata !DIExpression()), !dbg !15730
  call void @llvm.dbg.value(metadata i32 0, metadata !15727, metadata !DIExpression()), !dbg !15731
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14756, metadata !DIExpression()) #23, !dbg !15732
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15734, !srcloc !14771
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15734
  call void @llvm.dbg.value(metadata i32 %3, metadata !14768, metadata !DIExpression()) #23, !dbg !15736
  call void @llvm.dbg.value(metadata i32 undef, metadata !14769, metadata !DIExpression()) #23, !dbg !15736
  call void @llvm.dbg.value(metadata i32 %3, metadata !14762, metadata !DIExpression()) #23, !dbg !15732
  call void @llvm.dbg.value(metadata i32 %3, metadata !15729, metadata !DIExpression()), !dbg !15731
  call void @llvm.dbg.value(metadata i32 undef, metadata !15727, metadata !DIExpression()), !dbg !15731
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15737
  call void @llvm.dbg.value(metadata i32 %3, metadata !14783, metadata !DIExpression()) #23, !dbg !15740
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14788, metadata !DIExpression()) #23, !dbg !15740
  call void @llvm.dbg.value(metadata i32 %3, metadata !14791, metadata !DIExpression()) #23, !dbg !15742
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15744, !srcloc !14797
  call void @llvm.dbg.value(metadata i32 1, metadata !15727, metadata !DIExpression()), !dbg !15731
  call void @llvm.dbg.value(metadata i32 undef, metadata !15727, metadata !DIExpression()), !dbg !15731
  ret void, !dbg !15745
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15746 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15752, metadata !DIExpression()), !dbg !15757
  call void @llvm.dbg.value(metadata i32 %0, metadata !15750, metadata !DIExpression()), !dbg !15757
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15751, metadata !DIExpression()), !dbg !15757
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15758
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15759
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15760
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15761
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15762
  call void @llvm.dbg.value(metadata i32 %6, metadata !15753, metadata !DIExpression()), !dbg !15757
  call void @llvm.dbg.value(metadata i32 0, metadata !15754, metadata !DIExpression()), !dbg !15763
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14756, metadata !DIExpression()) #23, !dbg !15764
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15766, !srcloc !14771
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #23, !dbg !15768
  call void @llvm.dbg.value(metadata i32 undef, metadata !14769, metadata !DIExpression()) #23, !dbg !15768
  call void @llvm.dbg.value(metadata i32 undef, metadata !14762, metadata !DIExpression()) #23, !dbg !15764
  call void @llvm.dbg.value(metadata i32 undef, metadata !15756, metadata !DIExpression()), !dbg !15763
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()), !dbg !15763
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15769
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15773
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !15774
  br i1 %10, label %11, label %12, !dbg !15775

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15776
  br label %12, !dbg !15778

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !15766
  call void @llvm.dbg.value(metadata i32 %13, metadata !14768, metadata !DIExpression()) #23, !dbg !15768
  call void @llvm.dbg.value(metadata i32 %13, metadata !14762, metadata !DIExpression()) #23, !dbg !15764
  call void @llvm.dbg.value(metadata i32 %13, metadata !15756, metadata !DIExpression()), !dbg !15763
  call void @llvm.dbg.value(metadata i32 undef, metadata !14783, metadata !DIExpression()) #23, !dbg !15779
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14788, metadata !DIExpression()) #23, !dbg !15779
  call void @llvm.dbg.value(metadata i32 undef, metadata !14791, metadata !DIExpression()) #23, !dbg !15781
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !15783, !srcloc !14797
  call void @llvm.dbg.value(metadata i32 1, metadata !15754, metadata !DIExpression()), !dbg !15763
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()), !dbg !15763
  ret i32 %6, !dbg !15784
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15785 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15790, metadata !DIExpression()), !dbg !15793
  call void @llvm.dbg.value(metadata i64 undef, metadata !15792, metadata !DIExpression()), !dbg !15793
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15789, metadata !DIExpression()), !dbg !15793
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15791, metadata !DIExpression()), !dbg !15793
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15794
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15795
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14756, metadata !DIExpression()) #23, !dbg !15796
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15798, !srcloc !14771
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #23, !dbg !15800
  call void @llvm.dbg.value(metadata i32 undef, metadata !14769, metadata !DIExpression()) #23, !dbg !15800
  call void @llvm.dbg.value(metadata i32 undef, metadata !14762, metadata !DIExpression()) #23, !dbg !15796
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15801
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !15802
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !15367, metadata !DIExpression()) #23, !dbg !15803
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15372, metadata !DIExpression()) #23, !dbg !15803
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !15805
  ret i32 %9, !dbg !15806
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15807 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15811, metadata !DIExpression()), !dbg !15816
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15812, metadata !DIExpression()), !dbg !15816
  call void @llvm.dbg.value(metadata i32 0, metadata !15813, metadata !DIExpression()), !dbg !15817
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14756, metadata !DIExpression()) #23, !dbg !15818
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15820, !srcloc !14771
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #23, !dbg !15822
  call void @llvm.dbg.value(metadata i32 undef, metadata !14769, metadata !DIExpression()) #23, !dbg !15822
  call void @llvm.dbg.value(metadata i32 undef, metadata !14762, metadata !DIExpression()) #23, !dbg !15818
  call void @llvm.dbg.value(metadata i32 undef, metadata !15815, metadata !DIExpression()), !dbg !15817
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15812, metadata !DIExpression()), !dbg !15816
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()), !dbg !15817
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !15823
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15812, metadata !DIExpression()), !dbg !15816
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15826
  br i1 %5, label %7, label %6, !dbg !15828

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !15829
  br label %7, !dbg !15831

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15820
  call void @llvm.dbg.value(metadata i32 %8, metadata !14768, metadata !DIExpression()) #23, !dbg !15822
  call void @llvm.dbg.value(metadata i32 %8, metadata !14762, metadata !DIExpression()) #23, !dbg !15818
  call void @llvm.dbg.value(metadata i32 %8, metadata !15815, metadata !DIExpression()), !dbg !15817
  call void @llvm.dbg.value(metadata i32 undef, metadata !14783, metadata !DIExpression()) #23, !dbg !15832
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14788, metadata !DIExpression()) #23, !dbg !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !14791, metadata !DIExpression()) #23, !dbg !15834
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15836, !srcloc !14797
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15812, metadata !DIExpression()), !dbg !15816
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()), !dbg !15817
  ret %struct.k_thread* %4, !dbg !15837
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15838 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15840, metadata !DIExpression()), !dbg !15845
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15841, metadata !DIExpression()), !dbg !15845
  call void @llvm.dbg.value(metadata i32 0, metadata !15842, metadata !DIExpression()), !dbg !15846
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14756, metadata !DIExpression()) #23, !dbg !15847
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15849, !srcloc !14771
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #23, !dbg !15851
  call void @llvm.dbg.value(metadata i32 undef, metadata !14769, metadata !DIExpression()) #23, !dbg !15851
  call void @llvm.dbg.value(metadata i32 undef, metadata !14762, metadata !DIExpression()) #23, !dbg !15847
  call void @llvm.dbg.value(metadata i32 undef, metadata !15844, metadata !DIExpression()), !dbg !15846
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15841, metadata !DIExpression()), !dbg !15845
  call void @llvm.dbg.value(metadata i32 undef, metadata !15842, metadata !DIExpression()), !dbg !15846
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !15852
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15841, metadata !DIExpression()), !dbg !15845
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15855
  br i1 %5, label %8, label %6, !dbg !15857

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !15858
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !15860
  br label %8, !dbg !15861

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15849
  call void @llvm.dbg.value(metadata i32 %9, metadata !14768, metadata !DIExpression()) #23, !dbg !15851
  call void @llvm.dbg.value(metadata i32 %9, metadata !14762, metadata !DIExpression()) #23, !dbg !15847
  call void @llvm.dbg.value(metadata i32 %9, metadata !15844, metadata !DIExpression()), !dbg !15846
  call void @llvm.dbg.value(metadata i32 undef, metadata !14783, metadata !DIExpression()) #23, !dbg !15862
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14788, metadata !DIExpression()) #23, !dbg !15862
  call void @llvm.dbg.value(metadata i32 undef, metadata !14791, metadata !DIExpression()) #23, !dbg !15864
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15866, !srcloc !14797
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15841, metadata !DIExpression()), !dbg !15845
  call void @llvm.dbg.value(metadata i32 undef, metadata !15842, metadata !DIExpression()), !dbg !15846
  ret %struct.k_thread* %4, !dbg !15867
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15868 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15870, metadata !DIExpression()), !dbg !15871
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15726, metadata !DIExpression()) #23, !dbg !15872
  call void @llvm.dbg.value(metadata i32 0, metadata !15727, metadata !DIExpression()) #23, !dbg !15874
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14756, metadata !DIExpression()) #23, !dbg !15875
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15877, !srcloc !14771
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15877
  call void @llvm.dbg.value(metadata i32 %3, metadata !14768, metadata !DIExpression()) #23, !dbg !15879
  call void @llvm.dbg.value(metadata i32 undef, metadata !14769, metadata !DIExpression()) #23, !dbg !15879
  call void @llvm.dbg.value(metadata i32 %3, metadata !14762, metadata !DIExpression()) #23, !dbg !15875
  call void @llvm.dbg.value(metadata i32 %3, metadata !15729, metadata !DIExpression()) #23, !dbg !15874
  call void @llvm.dbg.value(metadata i32 undef, metadata !15727, metadata !DIExpression()) #23, !dbg !15874
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15880
  call void @llvm.dbg.value(metadata i32 %3, metadata !14783, metadata !DIExpression()) #23, !dbg !15881
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14788, metadata !DIExpression()) #23, !dbg !15881
  call void @llvm.dbg.value(metadata i32 %3, metadata !14791, metadata !DIExpression()) #23, !dbg !15883
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15885, !srcloc !14797
  call void @llvm.dbg.value(metadata i32 1, metadata !15727, metadata !DIExpression()) #23, !dbg !15874
  call void @llvm.dbg.value(metadata i32 undef, metadata !15727, metadata !DIExpression()) #23, !dbg !15874
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15886
  ret void, !dbg !15887
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15888 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15890, metadata !DIExpression()), !dbg !15896
  call void @llvm.dbg.value(metadata i32 %1, metadata !15891, metadata !DIExpression()), !dbg !15896
  call void @llvm.dbg.value(metadata i8 0, metadata !15892, metadata !DIExpression()), !dbg !15896
  call void @llvm.dbg.value(metadata i32 0, metadata !15893, metadata !DIExpression()), !dbg !15897
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14756, metadata !DIExpression()) #23, !dbg !15898
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15900, !srcloc !14771
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #23, !dbg !15902
  call void @llvm.dbg.value(metadata i32 undef, metadata !14769, metadata !DIExpression()) #23, !dbg !15902
  call void @llvm.dbg.value(metadata i32 undef, metadata !14762, metadata !DIExpression()) #23, !dbg !15898
  call void @llvm.dbg.value(metadata i32 undef, metadata !15895, metadata !DIExpression()), !dbg !15897
  call void @llvm.dbg.value(metadata i8 poison, metadata !15892, metadata !DIExpression()), !dbg !15896
  call void @llvm.dbg.value(metadata i32 undef, metadata !15893, metadata !DIExpression()), !dbg !15897
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15903
  call void @llvm.dbg.value(metadata i1 %6, metadata !15892, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15896
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !15906

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14925, metadata !DIExpression()) #23, !dbg !15907
  %11 = load i8, i8* %4, align 1, !dbg !15913
  %12 = and i8 %11, 127, !dbg !15913
  store i8 %12, i8* %4, align 1, !dbg !15913
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14933, metadata !DIExpression()) #23, !dbg !15914
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15916
  store i8 %9, i8* %8, align 2, !dbg !15917
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14942, metadata !DIExpression()) #23, !dbg !15918
  %13 = load i8, i8* %4, align 1, !dbg !15920
  %14 = or i8 %13, -128, !dbg !15920
  store i8 %14, i8* %4, align 1, !dbg !15920
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14949, metadata !DIExpression()) #23, !dbg !15921
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14956, metadata !DIExpression()) #23, !dbg !15923
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14962, metadata !DIExpression()) #23, !dbg !15923
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15925
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14963, metadata !DIExpression()) #23, !dbg !15923
  %16 = icmp eq %struct._dnode* %15, null, !dbg !15926
  br i1 %16, label %26, label %17, !dbg !15925

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !14963, metadata !DIExpression()) #23, !dbg !15923
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !15927
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !14963, metadata !DIExpression()) #23, !dbg !15923
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !15928
  %21 = icmp sgt i32 %20, 0, !dbg !15929
  br i1 %21, label %22, label %23, !dbg !15930

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !15931
  br label %27, !dbg !15932

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !15926
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14963, metadata !DIExpression()) #23, !dbg !15923
  %25 = icmp eq %struct._dnode* %24, null, !dbg !15926
  br i1 %25, label %26, label %17, !dbg !15925, !llvm.loop !15933

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !15935
  br label %27, !dbg !15936

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15937
  br label %29, !dbg !15938

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !15939
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !15900
  call void @llvm.dbg.value(metadata i32 %30, metadata !14768, metadata !DIExpression()) #23, !dbg !15902
  call void @llvm.dbg.value(metadata i32 %30, metadata !14762, metadata !DIExpression()) #23, !dbg !15898
  call void @llvm.dbg.value(metadata i32 %30, metadata !15895, metadata !DIExpression()), !dbg !15897
  call void @llvm.dbg.value(metadata i32 undef, metadata !14783, metadata !DIExpression()) #23, !dbg !15941
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14788, metadata !DIExpression()) #23, !dbg !15941
  call void @llvm.dbg.value(metadata i32 undef, metadata !14791, metadata !DIExpression()) #23, !dbg !15943
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #23, !dbg !15945, !srcloc !14797
  call void @llvm.dbg.value(metadata i8 poison, metadata !15892, metadata !DIExpression()), !dbg !15896
  call void @llvm.dbg.value(metadata i32 undef, metadata !15893, metadata !DIExpression()), !dbg !15897
  ret i1 %6, !dbg !15946
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15947 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15951, metadata !DIExpression()), !dbg !15954
  call void @llvm.dbg.value(metadata i32 %1, metadata !15952, metadata !DIExpression()), !dbg !15954
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15955
  call void @llvm.dbg.value(metadata i1 %3, metadata !15953, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15954
  br i1 %3, label %4, label %12, !dbg !15956

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15958
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15959
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15959
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15959
  %9 = load i8, i8* %8, align 1, !dbg !15959
  %10 = icmp eq i8 %9, 0, !dbg !15960
  br i1 %10, label %11, label %12, !dbg !15961

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15962
  br label %12, !dbg !15964

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15965
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15966 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15968, metadata !DIExpression()), !dbg !15971
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14756, metadata !DIExpression()) #23, !dbg !15972
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15974, !srcloc !14771
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15974
  call void @llvm.dbg.value(metadata i32 %2, metadata !14768, metadata !DIExpression()) #23, !dbg !15976
  call void @llvm.dbg.value(metadata i32 undef, metadata !14769, metadata !DIExpression()) #23, !dbg !15976
  call void @llvm.dbg.value(metadata i32 %2, metadata !14762, metadata !DIExpression()) #23, !dbg !15972
  call void @llvm.dbg.value(metadata i32 %2, metadata !15970, metadata !DIExpression()), !dbg !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()), !dbg !15971
  tail call fastcc void @z_sched_lock() #24, !dbg !15977
  call void @llvm.dbg.value(metadata i32 %2, metadata !14783, metadata !DIExpression()) #23, !dbg !15980
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14788, metadata !DIExpression()) #23, !dbg !15980
  call void @llvm.dbg.value(metadata i32 %2, metadata !14791, metadata !DIExpression()) #23, !dbg !15982
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !15984, !srcloc !14797
  call void @llvm.dbg.value(metadata i32 1, metadata !15968, metadata !DIExpression()), !dbg !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()), !dbg !15971
  ret void, !dbg !15985
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15986 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15987
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15988
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !15988
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !15988
  %5 = load i8, i8* %4, align 1, !dbg !15989
  %6 = add i8 %5, -1, !dbg !15989
  store i8 %6, i8* %4, align 1, !dbg !15989
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15990, !srcloc !15992
  ret void, !dbg !15993
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15994 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15996, metadata !DIExpression()), !dbg !15999
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14756, metadata !DIExpression()) #23, !dbg !16000
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16002, !srcloc !14771
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16002
  call void @llvm.dbg.value(metadata i32 %2, metadata !14768, metadata !DIExpression()) #23, !dbg !16004
  call void @llvm.dbg.value(metadata i32 undef, metadata !14769, metadata !DIExpression()) #23, !dbg !16004
  call void @llvm.dbg.value(metadata i32 %2, metadata !14762, metadata !DIExpression()) #23, !dbg !16000
  call void @llvm.dbg.value(metadata i32 %2, metadata !15998, metadata !DIExpression()), !dbg !15999
  call void @llvm.dbg.value(metadata i32 undef, metadata !15996, metadata !DIExpression()), !dbg !15999
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16005
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !16008
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !16008
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !16008
  %7 = load i8, i8* %6, align 1, !dbg !16009
  %8 = add i8 %7, 1, !dbg !16009
  store i8 %8, i8* %6, align 1, !dbg !16009
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !16010
  call void @llvm.dbg.value(metadata i32 %2, metadata !14783, metadata !DIExpression()) #23, !dbg !16011
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14788, metadata !DIExpression()) #23, !dbg !16011
  call void @llvm.dbg.value(metadata i32 %2, metadata !14791, metadata !DIExpression()) #23, !dbg !16013
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !16015, !srcloc !14797
  call void @llvm.dbg.value(metadata i32 1, metadata !15996, metadata !DIExpression()), !dbg !15999
  call void @llvm.dbg.value(metadata i32 undef, metadata !15996, metadata !DIExpression()), !dbg !15999
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16016
  ret void, !dbg !16017
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #10 !dbg !16018 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16019
  ret %struct.k_thread* %1, !dbg !16020
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !16021 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16025, metadata !DIExpression()), !dbg !16030
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16026, metadata !DIExpression()), !dbg !16030
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16031
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16027, metadata !DIExpression()), !dbg !16030
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16032
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16028, metadata !DIExpression()), !dbg !16030
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !16033
  call void @llvm.dbg.value(metadata i32 %5, metadata !16029, metadata !DIExpression()), !dbg !16030
  %6 = icmp sgt i32 %5, 0, !dbg !16034
  br i1 %6, label %17, label %7, !dbg !16036

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16037
  br i1 %8, label %17, label %9, !dbg !16039

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16040
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16040
  %12 = load i32, i32* %11, align 8, !dbg !16040
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16042
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16042
  %15 = load i32, i32* %14, align 8, !dbg !16042
  %16 = icmp ult i32 %12, %15, !dbg !16043
  br label %17, !dbg !16044

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16045
  ret i1 %18, !dbg !16046
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16047 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16064, metadata !DIExpression()), !dbg !16079
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16065, metadata !DIExpression()), !dbg !16079
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16080
  %5 = load i32, i32* %4, align 4, !dbg !16081
  %6 = add nsw i32 %5, 1, !dbg !16081
  store i32 %6, i32* %4, align 4, !dbg !16081
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16082
  store i32 %5, i32* %7, align 8, !dbg !16083
  %8 = load i32, i32* %4, align 4, !dbg !16084
  %9 = icmp eq i32 %8, 0, !dbg !16085
  br i1 %9, label %10, label %32, !dbg !16086

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16087
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #23, !dbg !16087
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16067, metadata !DIExpression()), !dbg !16087
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16087
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16087
  %14 = load i32, i32* %13, align 4, !dbg !16087
  %15 = shl i32 %14, 2, !dbg !16087
  %16 = alloca i8, i32 %15, align 8, !dbg !16087
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16087
  store i8* %16, i8** %17, align 4, !dbg !16087
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16087
  %19 = alloca i8, i32 %14, align 8, !dbg !16087
  store i8* %19, i8** %18, align 4, !dbg !16087
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16087
  store i32 -1, i32* %20, align 4, !dbg !16087
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16088
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16076, metadata !DIExpression()), !dbg !16089
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16066, metadata !DIExpression()), !dbg !16079
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !16090
  br i1 %22, label %23, label %24, !dbg !16087

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #23, !dbg !16090
  br label %32, !dbg !16091

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !16066, metadata !DIExpression()), !dbg !16079
  %26 = load i32, i32* %4, align 4, !dbg !16092
  %27 = add nsw i32 %26, 1, !dbg !16092
  store i32 %27, i32* %4, align 4, !dbg !16092
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !16094
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !16094
  store i32 %26, i32* %29, align 8, !dbg !16095
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16088
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16076, metadata !DIExpression()), !dbg !16089
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16066, metadata !DIExpression()), !dbg !16079
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !16090
  br i1 %31, label %23, label %24, !dbg !16087, !llvm.loop !16096

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16098
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16099
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !16100
  ret void, !dbg !16101
}

; Function Attrs: optsize
declare !dbg !16102 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16107 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16110 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16112, metadata !DIExpression()), !dbg !16114
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16113, metadata !DIExpression()), !dbg !16114
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16115
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16116
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !16117
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16118
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !16118
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !16120
  br i1 %7, label %8, label %10, !dbg !16121

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16122
  store i32 0, i32* %9, align 4, !dbg !16124
  br label %10, !dbg !16125

10:                                               ; preds = %8, %2
  ret void, !dbg !16126
}

; Function Attrs: optsize
declare !dbg !16127 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16128 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16132, metadata !DIExpression()), !dbg !16135
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16133, metadata !DIExpression()), !dbg !16135
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16136
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !16137
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16134, metadata !DIExpression()), !dbg !16135
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16133, metadata !DIExpression()), !dbg !16135
  ret %struct.k_thread* %4, !dbg !16138
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16139 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16143, metadata !DIExpression()), !dbg !16144
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16145
  ret %struct.rbnode* %2, !dbg !16146
}

; Function Attrs: optsize
declare !dbg !16147 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !16150 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16162, metadata !DIExpression()), !dbg !16166
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16167
  %3 = load i32, i32* %2, align 4, !dbg !16167
  %4 = icmp eq i32 %3, 0, !dbg !16169
  br i1 %4, label %10, label %5, !dbg !16170

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16163, metadata !DIExpression()), !dbg !16166
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16171, !range !8219
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16172
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16164, metadata !DIExpression()), !dbg !16166
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !16173
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16165, metadata !DIExpression()), !dbg !16166
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16163, metadata !DIExpression()), !dbg !16166
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16166
  ret %struct.k_thread* %11, !dbg !16174
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16175 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16179, metadata !DIExpression()), !dbg !16182
  call void @llvm.dbg.value(metadata i32 0, metadata !16180, metadata !DIExpression()), !dbg !16182
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !16183
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16181, metadata !DIExpression()), !dbg !16182
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16184
  br i1 %3, label %8, label %4, !dbg !16185

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16186
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16188
  call void @llvm.dbg.value(metadata i32 1, metadata !16180, metadata !DIExpression()), !dbg !16182
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !16183
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16181, metadata !DIExpression()), !dbg !16182
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16184
  br i1 %7, label %8, label %4, !dbg !16185, !llvm.loop !16189

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16182
  ret i32 %9, !dbg !16191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #10 !dbg !16192 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16194, metadata !DIExpression()), !dbg !16195
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16196
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !16197
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16198
  ret %struct.k_thread* %4, !dbg !16199
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #6 !dbg !16200 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16209, metadata !DIExpression()), !dbg !16210
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16211
  tail call fastcc void @sys_dlist_init.237(%struct._dnode* noundef nonnull %2) #24, !dbg !16212
  ret void, !dbg !16213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.237(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !16214 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16218, metadata !DIExpression()), !dbg !16219
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16220
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16221
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16222
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16223
  ret void, !dbg !16224
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16225 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !16226
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !16227
  ret void, !dbg !16228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !16229 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16234, metadata !DIExpression()), !dbg !16235
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16236
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16236
  %4 = load i8, i8* %3, align 2, !dbg !16236
  %5 = sext i8 %4 to i32, !dbg !16237
  ret i32 %5, !dbg !16238
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16239 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16243, metadata !DIExpression()), !dbg !16246
  call void @llvm.dbg.value(metadata i32 %1, metadata !16244, metadata !DIExpression()), !dbg !16246
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16245, metadata !DIExpression()), !dbg !16246
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16247
  ret void, !dbg !16248
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16249 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !16250
  br i1 %1, label %8, label %2, !dbg !16251

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16252
  br i1 %3, label %8, label %4, !dbg !16253

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16254
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !16255
  %7 = xor i1 %6, true, !dbg !16253
  br label %8, !dbg !16253

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16256
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #10 !dbg !16257 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16258, !range !7408
  %2 = icmp eq i8 %1, 0, !dbg !16258
  ret i1 %2, !dbg !16259
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16260 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14756, metadata !DIExpression()) #23, !dbg !16263
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16265, !srcloc !14771
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #23, !dbg !16267
  call void @llvm.dbg.value(metadata i32 undef, metadata !14769, metadata !DIExpression()) #23, !dbg !16267
  call void @llvm.dbg.value(metadata i32 undef, metadata !14762, metadata !DIExpression()) #23, !dbg !16263
  call void @llvm.dbg.value(metadata i32 undef, metadata !16262, metadata !DIExpression()), !dbg !16268
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16269
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14925, metadata !DIExpression()) #23, !dbg !16272
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !16274
  %4 = load i8, i8* %3, align 1, !dbg !16275
  %5 = and i8 %4, 127, !dbg !16275
  store i8 %5, i8* %3, align 1, !dbg !16275
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14933, metadata !DIExpression()) #23, !dbg !16276
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !16278
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16279
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14942, metadata !DIExpression()) #23, !dbg !16280
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !16282
  %8 = load i8, i8* %7, align 1, !dbg !16283
  %9 = or i8 %8, -128, !dbg !16283
  store i8 %9, i8* %7, align 1, !dbg !16283
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14949, metadata !DIExpression()) #23, !dbg !16284
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14956, metadata !DIExpression()) #23, !dbg !16286
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14962, metadata !DIExpression()) #23, !dbg !16286
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16288
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14963, metadata !DIExpression()) #23, !dbg !16286
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16289
  br i1 %11, label %22, label %12, !dbg !16288

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14963, metadata !DIExpression()) #23, !dbg !16286
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16290
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14963, metadata !DIExpression()) #23, !dbg !16286
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !16291
  %16 = icmp sgt i32 %15, 0, !dbg !16292
  br i1 %16, label %17, label %19, !dbg !16293

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16294
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !16295
  br label %24, !dbg !16296

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !16289
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14963, metadata !DIExpression()) #23, !dbg !16286
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16289
  br i1 %21, label %22, label %12, !dbg !16288, !llvm.loop !16297

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16299
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !16300
  br label %24, !dbg !16301

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !16265
  call void @llvm.dbg.value(metadata i32 %25, metadata !14768, metadata !DIExpression()) #23, !dbg !16267
  call void @llvm.dbg.value(metadata i32 %25, metadata !14762, metadata !DIExpression()) #23, !dbg !16263
  call void @llvm.dbg.value(metadata i32 %25, metadata !16262, metadata !DIExpression()), !dbg !16268
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16302
  call void @llvm.dbg.value(metadata i32 undef, metadata !15367, metadata !DIExpression()) #23, !dbg !16303
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15372, metadata !DIExpression()) #23, !dbg !16303
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !16305
  ret void, !dbg !16306
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16307 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16311, metadata !DIExpression()), !dbg !16314
  %3 = icmp eq i64 %2, -1, !dbg !16315
  br i1 %3, label %4, label %6, !dbg !16317

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16318
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #24, !dbg !16320
  br label %11, !dbg !16321

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16312, metadata !DIExpression()), !dbg !16314
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !16322
  %8 = sext i32 %7 to i64, !dbg !16322
  call void @llvm.dbg.value(metadata i64 %8, metadata !16312, metadata !DIExpression()), !dbg !16314
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #24, !dbg !16323
  %10 = trunc i64 %9 to i32, !dbg !16323
  call void @llvm.dbg.value(metadata i32 %10, metadata !16313, metadata !DIExpression()), !dbg !16314
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !16314
  ret i32 %12, !dbg !16324
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16325 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16329, metadata !DIExpression()), !dbg !16330
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16331, !srcloc !16333
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !16334
  ret void, !dbg !16335
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16336 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16340, metadata !DIExpression()), !dbg !16344
  %2 = icmp eq i64 %0, 0, !dbg !16345
  br i1 %2, label %3, label %4, !dbg !16347

3:                                                ; preds = %1
  tail call fastcc void @k_yield.244() #24, !dbg !16348
  br label %29, !dbg !16350

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !16342, metadata !DIExpression()), !dbg !16344
  %5 = icmp sgt i64 %0, -3, !dbg !16351
  br i1 %5, label %6, label %10, !dbg !16353

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16354
  %8 = trunc i64 %0 to i32, !dbg !16356
  %9 = add i32 %7, %8, !dbg !16356
  call void @llvm.dbg.value(metadata i32 %9, metadata !16341, metadata !DIExpression()), !dbg !16344
  br label %13, !dbg !16357

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !16358
  %12 = sub i32 -2, %11, !dbg !16358
  call void @llvm.dbg.value(metadata i32 %12, metadata !16341, metadata !DIExpression()), !dbg !16344
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !16360
  call void @llvm.dbg.value(metadata i32 %14, metadata !16341, metadata !DIExpression()), !dbg !16344
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14756, metadata !DIExpression()) #23, !dbg !16361
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16363, !srcloc !14771
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !16363
  call void @llvm.dbg.value(metadata i32 %16, metadata !14768, metadata !DIExpression()) #23, !dbg !16365
  call void @llvm.dbg.value(metadata i32 undef, metadata !14769, metadata !DIExpression()) #23, !dbg !16365
  call void @llvm.dbg.value(metadata i32 %16, metadata !14762, metadata !DIExpression()) #23, !dbg !16361
  call void @llvm.dbg.value(metadata i32 %16, metadata !16343, metadata !DIExpression()), !dbg !16344
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16366
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !16367
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #24, !dbg !16368
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16369
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16370
  tail call fastcc void @z_add_thread_timeout.230(%struct.k_thread* noundef %18, [1 x i64] %19) #24, !dbg !16370
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16371
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #24, !dbg !16372
  call void @llvm.dbg.value(metadata i32 %16, metadata !15367, metadata !DIExpression()) #23, !dbg !16373
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15372, metadata !DIExpression()) #23, !dbg !16373
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !16375
  %22 = zext i32 %14 to i64, !dbg !16376
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16377
  %24 = zext i32 %23 to i64, !dbg !16377
  %25 = sub nsw i64 %22, %24, !dbg !16378
  call void @llvm.dbg.value(metadata i64 %25, metadata !16340, metadata !DIExpression()), !dbg !16344
  %26 = icmp sgt i64 %25, 0, !dbg !16379
  %27 = select i1 %26, i64 %25, i64 0, !dbg !16379
  %28 = trunc i64 %27 to i32, !dbg !16379
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !16344
  ret i32 %30, !dbg !16380
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16381 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16383, metadata !DIExpression()), !dbg !16384
  call void @llvm.dbg.value(metadata i64 %0, metadata !14803, metadata !DIExpression()), !dbg !16385
  call void @llvm.dbg.value(metadata i32 10000, metadata !14806, metadata !DIExpression()), !dbg !16385
  call void @llvm.dbg.value(metadata i32 1000, metadata !14807, metadata !DIExpression()), !dbg !16385
  call void @llvm.dbg.value(metadata i8 1, metadata !14808, metadata !DIExpression()), !dbg !16385
  call void @llvm.dbg.value(metadata i1 false, metadata !14809, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16385
  call void @llvm.dbg.value(metadata i1 false, metadata !14810, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16385
  call void @llvm.dbg.value(metadata i8 0, metadata !14811, metadata !DIExpression()), !dbg !16385
  call void @llvm.dbg.value(metadata i1 false, metadata !14812, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16385
  call void @llvm.dbg.value(metadata i1 true, metadata !14813, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16385
  call void @llvm.dbg.value(metadata i64 0, metadata !14814, metadata !DIExpression()), !dbg !16385
  call void @llvm.dbg.value(metadata i64 0, metadata !14814, metadata !DIExpression()), !dbg !16385
  call void @llvm.dbg.value(metadata i64 %0, metadata !14803, metadata !DIExpression()), !dbg !16385
  %2 = udiv i64 %0, 10, !dbg !16387
  ret i64 %2, !dbg !16391
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield.244() unnamed_addr #1 !dbg !16392 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16393, !srcloc !16395
  tail call void @z_impl_k_yield() #24, !dbg !16396
  ret void, !dbg !16397
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16398 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16402, metadata !DIExpression()), !dbg !16404
  %2 = sext i32 %0 to i64, !dbg !16405
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !16406
  call void @llvm.dbg.value(metadata i64 %3, metadata !16403, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16404
  %4 = shl i64 %3, 32, !dbg !16407
  %5 = ashr exact i64 %4, 32, !dbg !16407
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !16408
  call void @llvm.dbg.value(metadata i32 %6, metadata !16403, metadata !DIExpression()), !dbg !16404
  %7 = sext i32 %6 to i64, !dbg !16409
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !16410
  %9 = trunc i64 %8 to i32, !dbg !16410
  ret i32 %9, !dbg !16411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !16412 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16414, metadata !DIExpression()), !dbg !16415
  call void @llvm.dbg.value(metadata i64 %0, metadata !14803, metadata !DIExpression()), !dbg !16416
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14806, metadata !DIExpression()), !dbg !16416
  call void @llvm.dbg.value(metadata i32 10000, metadata !14807, metadata !DIExpression()), !dbg !16416
  call void @llvm.dbg.value(metadata i8 1, metadata !14808, metadata !DIExpression()), !dbg !16416
  call void @llvm.dbg.value(metadata i1 false, metadata !14809, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16416
  call void @llvm.dbg.value(metadata i1 true, metadata !14810, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16416
  call void @llvm.dbg.value(metadata i8 0, metadata !14811, metadata !DIExpression()), !dbg !16416
  call void @llvm.dbg.value(metadata i1 false, metadata !14812, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16416
  call void @llvm.dbg.value(metadata i1 true, metadata !14813, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16416
  call void @llvm.dbg.value(metadata i64 0, metadata !14814, metadata !DIExpression()), !dbg !16416
  call void @llvm.dbg.value(metadata i64 0, metadata !14814, metadata !DIExpression()), !dbg !16416
  %2 = add i64 %0, 99, !dbg !16418
  call void @llvm.dbg.value(metadata i64 %2, metadata !14803, metadata !DIExpression()), !dbg !16416
  %3 = udiv i64 %2, 100, !dbg !16419
  ret i64 %3, !dbg !16420
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16421 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16423, metadata !DIExpression()), !dbg !16424
  call void @llvm.dbg.value(metadata i64 %0, metadata !14803, metadata !DIExpression()), !dbg !16425
  call void @llvm.dbg.value(metadata i32 10000, metadata !14806, metadata !DIExpression()), !dbg !16425
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14807, metadata !DIExpression()), !dbg !16425
  call void @llvm.dbg.value(metadata i8 1, metadata !14808, metadata !DIExpression()), !dbg !16425
  call void @llvm.dbg.value(metadata i1 false, metadata !14809, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16425
  call void @llvm.dbg.value(metadata i1 false, metadata !14810, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16425
  call void @llvm.dbg.value(metadata i8 0, metadata !14811, metadata !DIExpression()), !dbg !16425
  call void @llvm.dbg.value(metadata i1 true, metadata !14812, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16425
  call void @llvm.dbg.value(metadata i1 false, metadata !14813, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16425
  call void @llvm.dbg.value(metadata i64 0, metadata !14814, metadata !DIExpression()), !dbg !16425
  call void @llvm.dbg.value(metadata i64 0, metadata !14814, metadata !DIExpression()), !dbg !16425
  %2 = mul i64 %0, 100, !dbg !16427
  ret i64 %2, !dbg !16429
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16430 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16432, metadata !DIExpression()), !dbg !16433
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16434
  br i1 %2, label %14, label %3, !dbg !16436

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16437
  %5 = icmp slt i32 %4, 0, !dbg !16439
  br i1 %5, label %6, label %10, !dbg !16440

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16441
  %8 = load i8, i8* %7, align 1, !dbg !16441
  %9 = icmp eq i8 %8, 16, !dbg !16444
  br i1 %9, label %10, label %14, !dbg !16445

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16446
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16447
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16448, !srcloc !15407
  call void @llvm.dbg.value(metadata i32 %11, metadata !15403, metadata !DIExpression()) #23, !dbg !16452
  %12 = icmp eq i32 %11, 0, !dbg !16453
  br i1 %12, label %13, label %14, !dbg !16454

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16455
  br label %14, !dbg !16457

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16459 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16461, metadata !DIExpression()), !dbg !16462
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16463
  %3 = load i8, i8* %2, align 1, !dbg !16463
  %4 = and i8 %3, 2, !dbg !16464
  %5 = icmp ne i8 %4, 0, !dbg !16465
  ret i1 %5, !dbg !16466
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #10 !dbg !16467 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16472
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16471, metadata !DIExpression()), !dbg !16473
  ret %struct.k_thread* %1, !dbg !16474
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16475 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16476, !srcloc !15407
  call void @llvm.dbg.value(metadata i32 %1, metadata !15403, metadata !DIExpression()) #23, !dbg !16479
  %2 = icmp eq i32 %1, 0, !dbg !16480
  br i1 %2, label %3, label %8, !dbg !16481

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16482
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16483
  %6 = icmp ne i32 %5, 0, !dbg !16481
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16484
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16485 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16487, metadata !DIExpression()), !dbg !16489
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14756, metadata !DIExpression()) #23, !dbg !16490
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16492, !srcloc !14771
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16492
  call void @llvm.dbg.value(metadata i32 %3, metadata !14768, metadata !DIExpression()) #23, !dbg !16494
  call void @llvm.dbg.value(metadata i32 undef, metadata !14769, metadata !DIExpression()) #23, !dbg !16494
  call void @llvm.dbg.value(metadata i32 %3, metadata !14762, metadata !DIExpression()) #23, !dbg !16490
  call void @llvm.dbg.value(metadata i32 %3, metadata !16488, metadata !DIExpression()), !dbg !16489
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16495
  %5 = load i8, i8* %4, align 4, !dbg !16495
  %6 = and i8 %5, 1, !dbg !16497
  %7 = icmp eq i8 %6, 0, !dbg !16498
  br i1 %7, label %9, label %8, !dbg !16499

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14783, metadata !DIExpression()) #23, !dbg !16500
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14788, metadata !DIExpression()) #23, !dbg !16500
  call void @llvm.dbg.value(metadata i32 %3, metadata !14791, metadata !DIExpression()) #23, !dbg !16503
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !16505, !srcloc !14797
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !16506, !srcloc !16508
  br label %24, !dbg !16509

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16510
  %11 = load i8, i8* %10, align 1, !dbg !16510
  %12 = and i8 %11, 8, !dbg !16512
  %13 = icmp eq i8 %12, 0, !dbg !16513
  br i1 %13, label %15, label %14, !dbg !16514

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !14783, metadata !DIExpression()) #23, !dbg !16515
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14788, metadata !DIExpression()) #23, !dbg !16515
  call void @llvm.dbg.value(metadata i32 %3, metadata !14791, metadata !DIExpression()) #23, !dbg !16518
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !16520, !srcloc !14797
  br label %24, !dbg !16521

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16522
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16523
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16525
  br i1 %17, label %18, label %23, !dbg !16526

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16527, !srcloc !15407
  call void @llvm.dbg.value(metadata i32 %19, metadata !15403, metadata !DIExpression()) #23, !dbg !16530
  %20 = icmp eq i32 %19, 0, !dbg !16531
  br i1 %20, label %21, label %23, !dbg !16532

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !15367, metadata !DIExpression()) #23, !dbg !16533
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15372, metadata !DIExpression()) #23, !dbg !16533
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !16536
  br label %23, !dbg !16537

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !14783, metadata !DIExpression()) #23, !dbg !16538
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14788, metadata !DIExpression()) #23, !dbg !16538
  call void @llvm.dbg.value(metadata i32 %3, metadata !14791, metadata !DIExpression()) #23, !dbg !16540
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !16542, !srcloc !14797
  br label %24, !dbg !16543

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !16543
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16544 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16546, metadata !DIExpression()), !dbg !16547
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16548
  %3 = load i8, i8* %2, align 1, !dbg !16548
  %4 = and i8 %3, 8, !dbg !16550
  %5 = icmp eq i8 %4, 0, !dbg !16551
  br i1 %5, label %6, label %20, !dbg !16552

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16553
  %8 = or i8 %7, 8, !dbg !16553
  store i8 %8, i8* %2, align 1, !dbg !16553
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16555
  br i1 %9, label %10, label %12, !dbg !16557

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14925, metadata !DIExpression()) #23, !dbg !16558
  %11 = and i8 %8, 95, !dbg !16561
  store i8 %11, i8* %2, align 1, !dbg !16561
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14933, metadata !DIExpression()) #23, !dbg !16562
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16564
  br label %12, !dbg !16565

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16566
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !16566
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !16568
  br i1 %15, label %17, label %16, !dbg !16569

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16570
  br label %17, !dbg !16572

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16573
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16574
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #24, !dbg !16575
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16576
  br label %20, !dbg !16577

20:                                               ; preds = %17, %1
  ret void, !dbg !16578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !16579 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16583, metadata !DIExpression()), !dbg !16585
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !16586
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16584, metadata !DIExpression()), !dbg !16585
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16587
  br i1 %3, label %10, label %4, !dbg !16588

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16589
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16591
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16592, metadata !DIExpression()), !dbg !16598
  call void @llvm.dbg.value(metadata i32 0, metadata !16597, metadata !DIExpression()), !dbg !16598
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16600
  store i32 0, i32* %7, align 4, !dbg !16601
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16602
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !16586
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16584, metadata !DIExpression()), !dbg !16585
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16587
  br i1 %9, label %10, label %4, !dbg !16588, !llvm.loop !16603

10:                                               ; preds = %4, %1
  ret void, !dbg !16605
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16606 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16611, metadata !DIExpression()), !dbg !16614
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16610, metadata !DIExpression()), !dbg !16614
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14756, metadata !DIExpression()) #23, !dbg !16615
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16617, !srcloc !14771
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16617
  call void @llvm.dbg.value(metadata i32 %4, metadata !14768, metadata !DIExpression()) #23, !dbg !16619
  call void @llvm.dbg.value(metadata i32 undef, metadata !14769, metadata !DIExpression()) #23, !dbg !16619
  call void @llvm.dbg.value(metadata i32 %4, metadata !14762, metadata !DIExpression()) #23, !dbg !16615
  call void @llvm.dbg.value(metadata i32 %4, metadata !16612, metadata !DIExpression()), !dbg !16614
  call void @llvm.dbg.value(metadata i32 0, metadata !16613, metadata !DIExpression()), !dbg !16614
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16620
  %6 = load i8, i8* %5, align 1, !dbg !16620
  %7 = and i8 %6, 8, !dbg !16622
  %8 = icmp eq i8 %7, 0, !dbg !16623
  br i1 %8, label %9, label %24, !dbg !16624

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !16611, metadata !DIExpression()), !dbg !16614
  %11 = icmp eq i64 %10, 0, !dbg !16625
  br i1 %11, label %24, label %12, !dbg !16627

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16628
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !16630
  br i1 %14, label %24, label %15, !dbg !16631

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16632
  %17 = load %struct._wait_q_t*, %struct._wait_q_t** %16, align 8, !dbg !16632
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !16633
  %19 = icmp eq %struct._wait_q_t* %17, %18, !dbg !16634
  br i1 %19, label %24, label %20, !dbg !16635

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16636
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef nonnull %21) #24, !dbg !16638
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16639
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #24, !dbg !16640
  call void @llvm.dbg.value(metadata i32 %4, metadata !15367, metadata !DIExpression()) #23, !dbg !16641
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15372, metadata !DIExpression()) #23, !dbg !16641
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !16643
  call void @llvm.dbg.value(metadata i32 %23, metadata !16613, metadata !DIExpression()), !dbg !16614
  br label %26, !dbg !16644

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !16645
  call void @llvm.dbg.value(metadata i32 %25, metadata !16613, metadata !DIExpression()), !dbg !16614
  call void @llvm.dbg.value(metadata i32 %4, metadata !14783, metadata !DIExpression()) #23, !dbg !16646
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14788, metadata !DIExpression()) #23, !dbg !16646
  call void @llvm.dbg.value(metadata i32 %4, metadata !14791, metadata !DIExpression()) #23, !dbg !16648
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !16650, !srcloc !14797
  br label %26, !dbg !16651

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !16614
  ret i32 %27, !dbg !16652
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16653 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16657, metadata !DIExpression()), !dbg !16665
  call void @llvm.dbg.value(metadata i32 %1, metadata !16658, metadata !DIExpression()), !dbg !16665
  call void @llvm.dbg.value(metadata i8* %2, metadata !16659, metadata !DIExpression()), !dbg !16665
  call void @llvm.dbg.value(metadata i8 0, metadata !16661, metadata !DIExpression()), !dbg !16665
  call void @llvm.dbg.value(metadata i32 0, metadata !16662, metadata !DIExpression()), !dbg !16666
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14756, metadata !DIExpression()) #23, !dbg !16667
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16669, !srcloc !14771
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #23, !dbg !16671
  call void @llvm.dbg.value(metadata i32 undef, metadata !14769, metadata !DIExpression()) #23, !dbg !16671
  call void @llvm.dbg.value(metadata i32 undef, metadata !14762, metadata !DIExpression()) #23, !dbg !16667
  call void @llvm.dbg.value(metadata i32 undef, metadata !16664, metadata !DIExpression()), !dbg !16666
  call void @llvm.dbg.value(metadata i8 poison, metadata !16661, metadata !DIExpression()), !dbg !16665
  call void @llvm.dbg.value(metadata i32 undef, metadata !16662, metadata !DIExpression()), !dbg !16666
  %5 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #24, !dbg !16672
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16660, metadata !DIExpression()), !dbg !16665
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16675
  br i1 %7, label %12, label %8, !dbg !16677

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16678, metadata !DIExpression()), !dbg !16686
  call void @llvm.dbg.value(metadata i32 %1, metadata !16684, metadata !DIExpression()), !dbg !16686
  call void @llvm.dbg.value(metadata i8* %2, metadata !16685, metadata !DIExpression()), !dbg !16686
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16592, metadata !DIExpression()), !dbg !16689
  call void @llvm.dbg.value(metadata i32 %1, metadata !16597, metadata !DIExpression()), !dbg !16689
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !16691
  store i32 %1, i32* %9, align 4, !dbg !16692
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !16693
  store i8* %2, i8** %10, align 4, !dbg !16694
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !16695
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !16696
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #24, !dbg !16697
  call void @llvm.dbg.value(metadata i8 1, metadata !16661, metadata !DIExpression()), !dbg !16665
  br label %12, !dbg !16698

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !16669
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !16669
  call void @llvm.dbg.value(metadata i32 %14, metadata !14768, metadata !DIExpression()) #23, !dbg !16671
  call void @llvm.dbg.value(metadata i32 %14, metadata !14762, metadata !DIExpression()) #23, !dbg !16667
  call void @llvm.dbg.value(metadata i32 %14, metadata !16664, metadata !DIExpression()), !dbg !16666
  call void @llvm.dbg.value(metadata i8 poison, metadata !16661, metadata !DIExpression()), !dbg !16665
  call void @llvm.dbg.value(metadata i32 undef, metadata !14783, metadata !DIExpression()) #23, !dbg !16699
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14788, metadata !DIExpression()) #23, !dbg !16699
  call void @llvm.dbg.value(metadata i32 undef, metadata !14791, metadata !DIExpression()) #23, !dbg !16701
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !16703, !srcloc !14797
  call void @llvm.dbg.value(metadata i32 undef, metadata !16662, metadata !DIExpression()), !dbg !16666
  ret i1 %13, !dbg !16704
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16705 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16711, metadata !DIExpression()), !dbg !16716
  call void @llvm.dbg.value(metadata i64 undef, metadata !16713, metadata !DIExpression()), !dbg !16716
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16710, metadata !DIExpression()), !dbg !16716
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16712, metadata !DIExpression()), !dbg !16716
  call void @llvm.dbg.value(metadata i8** %4, metadata !16714, metadata !DIExpression()), !dbg !16716
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !16717
  call void @llvm.dbg.value(metadata i32 %6, metadata !16715, metadata !DIExpression()), !dbg !16716
  %7 = icmp eq i8** %4, null, !dbg !16718
  br i1 %7, label %12, label %8, !dbg !16720

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16721
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16723
  %11 = load i8*, i8** %10, align 4, !dbg !16723
  store i8* %11, i8** %4, align 4, !dbg !16724
  br label %12, !dbg !16725

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16726
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16727 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16729
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16730
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_rom_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_data_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_data_start to i32))) #25, !dbg !16731
  ret void, !dbg !16732
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16733 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16743, metadata !DIExpression()), !dbg !16760
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16741, metadata !DIExpression()), !dbg !16760
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16742, metadata !DIExpression()), !dbg !16760
  %5 = icmp eq i64 %4, -1, !dbg !16761
  br i1 %5, label %55, label %6, !dbg !16763

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16764
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !16765
  call void @llvm.dbg.value(metadata i32 0, metadata !16744, metadata !DIExpression()), !dbg !16766
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16767, metadata !DIExpression()) #23, !dbg !16774
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16776, !srcloc !16782
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !16776
  call void @llvm.dbg.value(metadata i32 %9, metadata !16779, metadata !DIExpression()) #23, !dbg !16783
  call void @llvm.dbg.value(metadata i32 undef, metadata !16780, metadata !DIExpression()) #23, !dbg !16783
  call void @llvm.dbg.value(metadata i32 %9, metadata !16773, metadata !DIExpression()) #23, !dbg !16774
  call void @llvm.dbg.value(metadata i32 %9, metadata !16750, metadata !DIExpression()), !dbg !16766
  call void @llvm.dbg.value(metadata i32 undef, metadata !16744, metadata !DIExpression()), !dbg !16766
  %10 = icmp slt i64 %4, -1, !dbg !16784
  br i1 %10, label %11, label %17, !dbg !16785

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !16786
  %13 = add i64 %4, %12, !dbg !16787
  %14 = sub i64 -2, %13, !dbg !16787
  call void @llvm.dbg.value(metadata i64 %14, metadata !16754, metadata !DIExpression()), !dbg !16788
  %15 = icmp sgt i64 %14, 1, !dbg !16789
  %16 = select i1 %15, i64 %14, i64 1, !dbg !16789
  br label %22, !dbg !16790

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !16791
  %19 = tail call fastcc i32 @elapsed.253() #24, !dbg !16793
  %20 = sext i32 %19 to i64, !dbg !16793
  %21 = add nsw i64 %18, %20, !dbg !16794
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !16795
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16796
  store i64 %23, i64* %24, align 8, !dbg !16797
  %25 = tail call fastcc %struct._timeout* @first() #24, !dbg !16798
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !16751, metadata !DIExpression()), !dbg !16800
  %26 = icmp eq %struct._timeout* %25, null, !dbg !16801
  br i1 %26, label %42, label %27, !dbg !16801

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !16802
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !16751, metadata !DIExpression()), !dbg !16800
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16806
  %31 = load i64, i64* %30, align 8, !dbg !16806
  %32 = icmp slt i64 %28, %31, !dbg !16807
  br i1 %32, label %33, label %38, !dbg !16808

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16806
  %35 = sub nsw i64 %31, %28, !dbg !16809
  store i64 %35, i64* %34, align 8, !dbg !16809
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !16811
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16812
  tail call fastcc void @sys_dlist_insert.254(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #24, !dbg !16813
  br label %44, !dbg !16814

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !16815
  store i64 %39, i64* %24, align 8, !dbg !16815
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #24, !dbg !16816
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !16751, metadata !DIExpression()), !dbg !16800
  %41 = icmp eq %struct._timeout* %40, null, !dbg !16801
  br i1 %41, label %42, label %27, !dbg !16801, !llvm.loop !16817

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16819
  tail call fastcc void @sys_dlist_append.255(%struct._dnode* noundef %43) #24, !dbg !16822
  br label %44, !dbg !16823

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #24, !dbg !16824
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !16825
  br i1 %46, label %47, label %54, !dbg !16826

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #24, !dbg !16827
  call void @llvm.dbg.value(metadata i32 %48, metadata !16757, metadata !DIExpression()), !dbg !16828
  %49 = icmp ne i32 %48, 0, !dbg !16829
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !16831
  br i1 %52, label %54, label %53, !dbg !16831

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !16832
  br label %54, !dbg !16834

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !16835, metadata !DIExpression()) #23, !dbg !16841
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16840, metadata !DIExpression()) #23, !dbg !16841
  call void @llvm.dbg.value(metadata i32 %9, metadata !16843, metadata !DIExpression()) #23, !dbg !16846
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !16848, !srcloc !16849
  call void @llvm.dbg.value(metadata i32 undef, metadata !16744, metadata !DIExpression()), !dbg !16766
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !16850
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.253() unnamed_addr #1 !dbg !16851 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16854
  %2 = icmp eq i32 %1, 0, !dbg !16855
  br i1 %2, label %3, label %5, !dbg !16854

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16856
  br label %5, !dbg !16854

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16854
  ret i32 %6, !dbg !16857
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #10 !dbg !16858 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.258() #24, !dbg !16864
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16862, metadata !DIExpression()), !dbg !16865
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16866
  ret %struct._timeout* %2, !dbg !16867
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.254(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !16868 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16872, metadata !DIExpression()), !dbg !16876
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16873, metadata !DIExpression()), !dbg !16876
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16877
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16877
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16874, metadata !DIExpression()), !dbg !16876
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16878
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16879
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16880
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16881
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16882
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16883
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16884
  ret void, !dbg !16885
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #10 !dbg !16886 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16890, metadata !DIExpression()), !dbg !16892
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16893
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.256(%struct._dnode* noundef %2) #24, !dbg !16894
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16891, metadata !DIExpression()), !dbg !16892
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16895
  ret %struct._timeout* %4, !dbg !16896
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.255(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !16897 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16902, metadata !DIExpression()), !dbg !16905
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16903, metadata !DIExpression()), !dbg !16905
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16906
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16904, metadata !DIExpression()), !dbg !16905
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16907
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16908
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16909
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16910
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16911
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16912
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16913
  ret void, !dbg !16914
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16915 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !16920
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16917, metadata !DIExpression()), !dbg !16921
  %2 = tail call fastcc i32 @elapsed.253() #24, !dbg !16922
  call void @llvm.dbg.value(metadata i32 %2, metadata !16918, metadata !DIExpression()), !dbg !16921
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16923
  br i1 %3, label %14, label %4, !dbg !16925

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16926
  %6 = load i64, i64* %5, align 8, !dbg !16926
  %7 = sext i32 %2 to i64, !dbg !16927
  %8 = sub nsw i64 %6, %7, !dbg !16928
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16929
  br i1 %9, label %14, label %10, !dbg !16930

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16931
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16931
  %13 = trunc i64 %12 to i32, !dbg !16931
  call void @llvm.dbg.value(metadata i32 %13, metadata !16919, metadata !DIExpression()), !dbg !16921
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16933
  call void @llvm.dbg.value(metadata i32 %15, metadata !16919, metadata !DIExpression()), !dbg !16921
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16934
  %17 = icmp ne i32 %16, 0, !dbg !16936
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16937
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16937
  call void @llvm.dbg.value(metadata i32 %20, metadata !16919, metadata !DIExpression()), !dbg !16921
  ret i32 %20, !dbg !16938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.256(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16939 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16943, metadata !DIExpression()), !dbg !16945
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16944, metadata !DIExpression()), !dbg !16945
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16946
  br i1 %2, label %5, label %3, !dbg !16947

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.257(%struct._dnode* noundef nonnull %0) #24, !dbg !16948
  br label %5, !dbg !16947

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16947
  ret %struct._dnode* %6, !dbg !16949
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.257(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16950 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16952, metadata !DIExpression()), !dbg !16954
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16953, metadata !DIExpression()), !dbg !16954
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16955
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16956
  br i1 %3, label %7, label %4, !dbg !16957

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16958
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16958
  br label %7, !dbg !16957

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16957
  ret %struct._dnode* %8, !dbg !16959
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.258() unnamed_addr #10 !dbg !16960 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16964, metadata !DIExpression()), !dbg !16965
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.259() #24, !dbg !16966
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16966
  ret %struct._dnode* %3, !dbg !16967
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.259() unnamed_addr #10 !dbg !16968 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16972, metadata !DIExpression()), !dbg !16973
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16974
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16975
  ret i1 %2, !dbg !16976
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16977 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16981, metadata !DIExpression()), !dbg !16986
  call void @llvm.dbg.value(metadata i32 -22, metadata !16982, metadata !DIExpression()), !dbg !16986
  call void @llvm.dbg.value(metadata i32 0, metadata !16983, metadata !DIExpression()), !dbg !16987
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16767, metadata !DIExpression()) #23, !dbg !16988
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16990, !srcloc !16782
  call void @llvm.dbg.value(metadata i32 undef, metadata !16779, metadata !DIExpression()) #23, !dbg !16992
  call void @llvm.dbg.value(metadata i32 undef, metadata !16780, metadata !DIExpression()) #23, !dbg !16992
  call void @llvm.dbg.value(metadata i32 undef, metadata !16773, metadata !DIExpression()) #23, !dbg !16988
  call void @llvm.dbg.value(metadata i32 undef, metadata !16985, metadata !DIExpression()), !dbg !16987
  call void @llvm.dbg.value(metadata i32 -22, metadata !16982, metadata !DIExpression()), !dbg !16986
  call void @llvm.dbg.value(metadata i32 undef, metadata !16983, metadata !DIExpression()), !dbg !16987
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16982, metadata !DIExpression()), !dbg !16986
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.262(%struct._dnode* noundef %3) #24, !dbg !16993
  br i1 %4, label %5, label %6, !dbg !16997

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !16998
  call void @llvm.dbg.value(metadata i32 0, metadata !16982, metadata !DIExpression()), !dbg !16986
  br label %6, !dbg !17000

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !16986
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16990
  call void @llvm.dbg.value(metadata i32 %8, metadata !16779, metadata !DIExpression()) #23, !dbg !16992
  call void @llvm.dbg.value(metadata i32 %8, metadata !16773, metadata !DIExpression()) #23, !dbg !16988
  call void @llvm.dbg.value(metadata i32 %8, metadata !16985, metadata !DIExpression()), !dbg !16987
  call void @llvm.dbg.value(metadata i32 %7, metadata !16982, metadata !DIExpression()), !dbg !16986
  call void @llvm.dbg.value(metadata i32 undef, metadata !16835, metadata !DIExpression()) #23, !dbg !17001
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16840, metadata !DIExpression()) #23, !dbg !17001
  call void @llvm.dbg.value(metadata i32 undef, metadata !16843, metadata !DIExpression()) #23, !dbg !17003
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !17005, !srcloc !16849
  call void @llvm.dbg.value(metadata i32 undef, metadata !16983, metadata !DIExpression()), !dbg !16987
  ret i32 %7, !dbg !17006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.262(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17007 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17013, metadata !DIExpression()), !dbg !17014
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17015
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17015
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17016
  ret i1 %4, !dbg !17017
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #11 !dbg !17018 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17020, metadata !DIExpression()), !dbg !17021
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !17022
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17024
  br i1 %3, label %10, label %4, !dbg !17025

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17026
  %6 = load i64, i64* %5, align 8, !dbg !17026
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17028
  %8 = load i64, i64* %7, align 8, !dbg !17029
  %9 = add nsw i64 %8, %6, !dbg !17029
  store i64 %9, i64* %7, align 8, !dbg !17029
  br label %10, !dbg !17030

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17031
  tail call fastcc void @sys_dlist_remove.263(%struct._dnode* noundef %11) #24, !dbg !17032
  ret void, !dbg !17033
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.263(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !17034 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17038, metadata !DIExpression()), !dbg !17041
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17042
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17042
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17039, metadata !DIExpression()), !dbg !17041
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17043
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17043
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17040, metadata !DIExpression()), !dbg !17041
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17044
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17045
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17046
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17047
  tail call fastcc void @sys_dnode_init.264(%struct._dnode* noundef %0) #24, !dbg !17048
  ret void, !dbg !17049
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.264(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !17050 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17052, metadata !DIExpression()), !dbg !17053
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17054
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17055
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17056
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17057
  ret void, !dbg !17058
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17059 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17065, metadata !DIExpression()), !dbg !17070
  call void @llvm.dbg.value(metadata i64 0, metadata !17066, metadata !DIExpression()), !dbg !17070
  call void @llvm.dbg.value(metadata i32 0, metadata !17067, metadata !DIExpression()), !dbg !17071
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16767, metadata !DIExpression()) #23, !dbg !17072
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17074, !srcloc !16782
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17074
  call void @llvm.dbg.value(metadata i32 %3, metadata !16779, metadata !DIExpression()) #23, !dbg !17076
  call void @llvm.dbg.value(metadata i32 undef, metadata !16780, metadata !DIExpression()) #23, !dbg !17076
  call void @llvm.dbg.value(metadata i32 %3, metadata !16773, metadata !DIExpression()) #23, !dbg !17072
  call void @llvm.dbg.value(metadata i32 %3, metadata !17069, metadata !DIExpression()), !dbg !17071
  call void @llvm.dbg.value(metadata i64 0, metadata !17066, metadata !DIExpression()), !dbg !17070
  call void @llvm.dbg.value(metadata i32 undef, metadata !17067, metadata !DIExpression()), !dbg !17071
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17077
  call void @llvm.dbg.value(metadata i64 %4, metadata !17066, metadata !DIExpression()), !dbg !17070
  call void @llvm.dbg.value(metadata i32 %3, metadata !16835, metadata !DIExpression()) #23, !dbg !17080
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16840, metadata !DIExpression()) #23, !dbg !17080
  call void @llvm.dbg.value(metadata i32 %3, metadata !16843, metadata !DIExpression()) #23, !dbg !17082
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !17084, !srcloc !16849
  call void @llvm.dbg.value(metadata i32 undef, metadata !17067, metadata !DIExpression()), !dbg !17071
  ret i64 %4, !dbg !17085
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17086 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17088, metadata !DIExpression()), !dbg !17092
  call void @llvm.dbg.value(metadata i64 0, metadata !17089, metadata !DIExpression()), !dbg !17092
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.265(%struct._timeout* noundef %0) #24, !dbg !17093
  br i1 %2, label %21, label %3, !dbg !17095

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17096
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17090, metadata !DIExpression()), !dbg !17097
  call void @llvm.dbg.value(metadata i64 0, metadata !17089, metadata !DIExpression()), !dbg !17092
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17098
  br i1 %5, label %16, label %6, !dbg !17100

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17090, metadata !DIExpression()), !dbg !17097
  call void @llvm.dbg.value(metadata i64 %8, metadata !17089, metadata !DIExpression()), !dbg !17092
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17101
  %10 = load i64, i64* %9, align 8, !dbg !17101
  %11 = add nsw i64 %10, %8, !dbg !17103
  call void @llvm.dbg.value(metadata i64 %11, metadata !17089, metadata !DIExpression()), !dbg !17092
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17104
  br i1 %12, label %16, label %13, !dbg !17106

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17107
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17090, metadata !DIExpression()), !dbg !17097
  call void @llvm.dbg.value(metadata i64 %11, metadata !17089, metadata !DIExpression()), !dbg !17092
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17098
  br i1 %15, label %16, label %6, !dbg !17100, !llvm.loop !17108

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17092
  call void @llvm.dbg.value(metadata i64 %17, metadata !17089, metadata !DIExpression()), !dbg !17092
  %18 = tail call fastcc i32 @elapsed.253() #24, !dbg !17110
  %19 = sext i32 %18 to i64, !dbg !17110
  %20 = sub nsw i64 %17, %19, !dbg !17111
  br label %21, !dbg !17112

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17092
  ret i64 %22, !dbg !17113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.265(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17114 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17118, metadata !DIExpression()), !dbg !17119
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17120
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.262(%struct._dnode* noundef %2) #24, !dbg !17121
  %4 = xor i1 %3, true, !dbg !17122
  ret i1 %4, !dbg !17123
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17124 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17126, metadata !DIExpression()), !dbg !17131
  call void @llvm.dbg.value(metadata i64 0, metadata !17127, metadata !DIExpression()), !dbg !17131
  call void @llvm.dbg.value(metadata i32 0, metadata !17128, metadata !DIExpression()), !dbg !17132
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16767, metadata !DIExpression()) #23, !dbg !17133
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17135, !srcloc !16782
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17135
  call void @llvm.dbg.value(metadata i32 %3, metadata !16779, metadata !DIExpression()) #23, !dbg !17137
  call void @llvm.dbg.value(metadata i32 undef, metadata !16780, metadata !DIExpression()) #23, !dbg !17137
  call void @llvm.dbg.value(metadata i32 %3, metadata !16773, metadata !DIExpression()) #23, !dbg !17133
  call void @llvm.dbg.value(metadata i32 %3, metadata !17130, metadata !DIExpression()), !dbg !17132
  call void @llvm.dbg.value(metadata i64 0, metadata !17127, metadata !DIExpression()), !dbg !17131
  call void @llvm.dbg.value(metadata i32 undef, metadata !17128, metadata !DIExpression()), !dbg !17132
  %4 = load i64, i64* @curr_tick, align 8, !dbg !17138
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17141
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !17127, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17131
  call void @llvm.dbg.value(metadata i32 %3, metadata !16835, metadata !DIExpression()) #23, !dbg !17142
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16840, metadata !DIExpression()) #23, !dbg !17142
  call void @llvm.dbg.value(metadata i32 %3, metadata !16843, metadata !DIExpression()) #23, !dbg !17144
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !17146, !srcloc !16849
  call void @llvm.dbg.value(metadata i32 undef, metadata !17128, metadata !DIExpression()), !dbg !17132
  %6 = add i64 %5, %4, !dbg !17147
  ret i64 %6, !dbg !17148
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17149 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17151, metadata !DIExpression()), !dbg !17155
  call void @llvm.dbg.value(metadata i32 0, metadata !17152, metadata !DIExpression()), !dbg !17156
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16767, metadata !DIExpression()) #23, !dbg !17157
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17159, !srcloc !16782
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17159
  call void @llvm.dbg.value(metadata i32 %2, metadata !16779, metadata !DIExpression()) #23, !dbg !17161
  call void @llvm.dbg.value(metadata i32 undef, metadata !16780, metadata !DIExpression()) #23, !dbg !17161
  call void @llvm.dbg.value(metadata i32 %2, metadata !16773, metadata !DIExpression()) #23, !dbg !17157
  call void @llvm.dbg.value(metadata i32 %2, metadata !17154, metadata !DIExpression()), !dbg !17156
  call void @llvm.dbg.value(metadata i32 -1, metadata !17151, metadata !DIExpression()), !dbg !17155
  call void @llvm.dbg.value(metadata i32 undef, metadata !17152, metadata !DIExpression()), !dbg !17156
  %3 = tail call fastcc i32 @next_timeout() #24, !dbg !17162
  call void @llvm.dbg.value(metadata i32 %3, metadata !17151, metadata !DIExpression()), !dbg !17155
  call void @llvm.dbg.value(metadata i32 %2, metadata !16835, metadata !DIExpression()) #23, !dbg !17165
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16840, metadata !DIExpression()) #23, !dbg !17165
  call void @llvm.dbg.value(metadata i32 %2, metadata !16843, metadata !DIExpression()) #23, !dbg !17167
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !17169, !srcloc !16849
  call void @llvm.dbg.value(metadata i32 undef, metadata !17152, metadata !DIExpression()), !dbg !17156
  ret i32 %3, !dbg !17170
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17171 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17173, metadata !DIExpression()), !dbg !17183
  call void @llvm.dbg.value(metadata i1 %1, metadata !17174, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17183
  call void @llvm.dbg.value(metadata i32 0, metadata !17175, metadata !DIExpression()), !dbg !17184
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16767, metadata !DIExpression()) #23, !dbg !17185
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17187, !srcloc !16782
  call void @llvm.dbg.value(metadata i32 undef, metadata !16779, metadata !DIExpression()) #23, !dbg !17189
  call void @llvm.dbg.value(metadata i32 undef, metadata !16780, metadata !DIExpression()) #23, !dbg !17189
  call void @llvm.dbg.value(metadata i32 undef, metadata !16773, metadata !DIExpression()) #23, !dbg !17185
  call void @llvm.dbg.value(metadata i32 undef, metadata !17177, metadata !DIExpression()), !dbg !17184
  call void @llvm.dbg.value(metadata i32 undef, metadata !17175, metadata !DIExpression()), !dbg !17184
  %4 = tail call fastcc i32 @next_timeout() #24, !dbg !17190
  call void @llvm.dbg.value(metadata i32 %4, metadata !17178, metadata !DIExpression()), !dbg !17191
  call void @llvm.dbg.value(metadata i1 undef, metadata !17181, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17191
  %5 = icmp slt i32 %4, 2, !dbg !17192
  call void @llvm.dbg.value(metadata i1 %5, metadata !17182, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17191
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !17193
  call void @llvm.dbg.value(metadata i1 %6, metadata !17181, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17191
  br i1 %7, label %11, label %8, !dbg !17193

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !17195
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !17195
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !17197
  br label %11, !dbg !17198

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !17187
  call void @llvm.dbg.value(metadata i32 %12, metadata !16779, metadata !DIExpression()) #23, !dbg !17189
  call void @llvm.dbg.value(metadata i32 %12, metadata !16773, metadata !DIExpression()) #23, !dbg !17185
  call void @llvm.dbg.value(metadata i32 %12, metadata !17177, metadata !DIExpression()), !dbg !17184
  call void @llvm.dbg.value(metadata i32 undef, metadata !16835, metadata !DIExpression()) #23, !dbg !17199
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16840, metadata !DIExpression()) #23, !dbg !17199
  call void @llvm.dbg.value(metadata i32 undef, metadata !16843, metadata !DIExpression()) #23, !dbg !17201
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17203, !srcloc !16849
  call void @llvm.dbg.value(metadata i32 1, metadata !17175, metadata !DIExpression()), !dbg !17184
  call void @llvm.dbg.value(metadata i32 undef, metadata !17175, metadata !DIExpression()), !dbg !17184
  ret void, !dbg !17204
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17205 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17209, metadata !DIExpression()), !dbg !17214
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17215
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16767, metadata !DIExpression()) #23, !dbg !17216
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17218, !srcloc !16782
  call void @llvm.dbg.value(metadata i32 undef, metadata !16779, metadata !DIExpression()) #23, !dbg !17220
  call void @llvm.dbg.value(metadata i32 undef, metadata !16780, metadata !DIExpression()) #23, !dbg !17220
  call void @llvm.dbg.value(metadata i32 undef, metadata !16773, metadata !DIExpression()) #23, !dbg !17216
  call void @llvm.dbg.value(metadata i32 undef, metadata !17210, metadata !DIExpression()), !dbg !17214
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17214
  call void @llvm.dbg.value(metadata i32 undef, metadata !17210, metadata !DIExpression()), !dbg !17214
  %3 = tail call fastcc %struct._timeout* @first() #24, !dbg !17221
  %4 = icmp eq %struct._timeout* %3, null, !dbg !17222
  br i1 %4, label %28, label %5, !dbg !17223

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !17224
  %10 = load i64, i64* %9, align 8, !dbg !17224
  %11 = sext i32 %8 to i64, !dbg !17225
  %12 = icmp sgt i64 %10, %11, !dbg !17226
  br i1 %12, label %26, label %13, !dbg !17227

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !17214
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !17211, metadata !DIExpression()), !dbg !17228
  %15 = trunc i64 %10 to i32, !dbg !17229
  call void @llvm.dbg.value(metadata i32 %15, metadata !17213, metadata !DIExpression()), !dbg !17228
  %16 = sext i32 %15 to i64, !dbg !17230
  %17 = load i64, i64* @curr_tick, align 8, !dbg !17231
  %18 = add i64 %17, %16, !dbg !17231
  store i64 %18, i64* @curr_tick, align 8, !dbg !17231
  store i64 0, i64* %9, align 8, !dbg !17232
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #24, !dbg !17233
  call void @llvm.dbg.value(metadata i32 %14, metadata !16835, metadata !DIExpression()) #23, !dbg !17234
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16840, metadata !DIExpression()) #23, !dbg !17234
  call void @llvm.dbg.value(metadata i32 %14, metadata !16843, metadata !DIExpression()) #23, !dbg !17236
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17238, !srcloc !16849
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !17239
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !17239
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !17240
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16767, metadata !DIExpression()) #23, !dbg !17241
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17243, !srcloc !16782
  call void @llvm.dbg.value(metadata i32 undef, metadata !16779, metadata !DIExpression()) #23, !dbg !17245
  call void @llvm.dbg.value(metadata i32 undef, metadata !16780, metadata !DIExpression()) #23, !dbg !17245
  call void @llvm.dbg.value(metadata i32 undef, metadata !16773, metadata !DIExpression()) #23, !dbg !17241
  call void @llvm.dbg.value(metadata i32 undef, metadata !17210, metadata !DIExpression()), !dbg !17214
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !17246
  %23 = sub nsw i32 %22, %15, !dbg !17246
  store i32 %23, i32* @announce_remaining, align 4, !dbg !17214
  call void @llvm.dbg.value(metadata i32 undef, metadata !17210, metadata !DIExpression()), !dbg !17214
  %24 = tail call fastcc %struct._timeout* @first() #24, !dbg !17221
  %25 = icmp eq %struct._timeout* %24, null, !dbg !17222
  br i1 %25, label %28, label %5, !dbg !17223, !llvm.loop !17247

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !17249
  store i64 %27, i64* %9, align 8, !dbg !17249
  br label %32, !dbg !17252

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !17214
  %31 = sext i32 %30 to i64, !dbg !17253
  br label %32, !dbg !17253

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !17253
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !17214
  %36 = load i64, i64* @curr_tick, align 8, !dbg !17254
  %37 = add i64 %36, %33, !dbg !17254
  store i64 %37, i64* @curr_tick, align 8, !dbg !17254
  store i32 0, i32* @announce_remaining, align 4, !dbg !17255
  %38 = tail call fastcc i32 @next_timeout() #24, !dbg !17256
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !17257
  call void @llvm.dbg.value(metadata i32 %35, metadata !16835, metadata !DIExpression()) #23, !dbg !17258
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16840, metadata !DIExpression()) #23, !dbg !17258
  call void @llvm.dbg.value(metadata i32 %35, metadata !16843, metadata !DIExpression()) #23, !dbg !17260
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !17262, !srcloc !16849
  ret void, !dbg !17263
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17264 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17268, metadata !DIExpression()), !dbg !17272
  call void @llvm.dbg.value(metadata i32 0, metadata !17269, metadata !DIExpression()), !dbg !17273
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16767, metadata !DIExpression()) #23, !dbg !17274
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17276, !srcloc !16782
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17276
  call void @llvm.dbg.value(metadata i32 %2, metadata !16779, metadata !DIExpression()) #23, !dbg !17278
  call void @llvm.dbg.value(metadata i32 undef, metadata !16780, metadata !DIExpression()) #23, !dbg !17278
  call void @llvm.dbg.value(metadata i32 %2, metadata !16773, metadata !DIExpression()) #23, !dbg !17274
  call void @llvm.dbg.value(metadata i32 %2, metadata !17271, metadata !DIExpression()), !dbg !17273
  call void @llvm.dbg.value(metadata i64 0, metadata !17268, metadata !DIExpression()), !dbg !17272
  call void @llvm.dbg.value(metadata i32 undef, metadata !17269, metadata !DIExpression()), !dbg !17273
  %3 = load i64, i64* @curr_tick, align 8, !dbg !17279
  %4 = tail call fastcc i32 @elapsed.253() #24, !dbg !17282
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !17268, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17272
  call void @llvm.dbg.value(metadata i32 %2, metadata !16835, metadata !DIExpression()) #23, !dbg !17283
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16840, metadata !DIExpression()) #23, !dbg !17283
  call void @llvm.dbg.value(metadata i32 %2, metadata !16843, metadata !DIExpression()) #23, !dbg !17285
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !17287, !srcloc !16849
  call void @llvm.dbg.value(metadata i32 undef, metadata !17269, metadata !DIExpression()), !dbg !17273
  %5 = sext i32 %4 to i64, !dbg !17282
  %6 = add i64 %3, %5, !dbg !17288
  ret i64 %6, !dbg !17289
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17290 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17291
  %2 = trunc i64 %1 to i32, !dbg !17292
  ret i32 %2, !dbg !17293
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17294 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17295
  ret i64 %1, !dbg !17296
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17297 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17299, metadata !DIExpression()), !dbg !17306
  %2 = icmp eq i32 %0, 0, !dbg !17307
  br i1 %2, label %10, label %3, !dbg !17309

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17310
  call void @llvm.dbg.value(metadata i32 %4, metadata !17300, metadata !DIExpression()), !dbg !17306
  %5 = mul i32 %0, 168, !dbg !17311
  call void @llvm.dbg.value(metadata i32 %5, metadata !17301, metadata !DIExpression()), !dbg !17306
  br label %6, !dbg !17312

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17313
  call void @llvm.dbg.value(metadata i32 %7, metadata !17302, metadata !DIExpression()), !dbg !17314
  %8 = sub i32 %7, %4, !dbg !17315
  %9 = icmp ult i32 %8, %5, !dbg !17317
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17318
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17319 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !17320
  ret i32 %1, !dbg !17321
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17322 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17324
  ret i32 %1, !dbg !17325
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17326 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17330, metadata !DIExpression()), !dbg !17332
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17333

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17334
  br label %14, !dbg !17338

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17331, metadata !DIExpression()), !dbg !17332
  %6 = icmp slt i64 %2, -1, !dbg !17339
  br i1 %6, label %7, label %9, !dbg !17342

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17343
  br label %14, !dbg !17344

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !17346
  %11 = icmp ugt i64 %2, 1, !dbg !17347
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17347
  %13 = add nsw i64 %10, %12, !dbg !17348
  br label %14, !dbg !17349

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17350
  ret i64 %15, !dbg !17351
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_timer_expiration_handler(%struct._timeout* noundef %0) #1 !dbg !17352 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17354, metadata !DIExpression()), !dbg !17365
  %2 = bitcast %struct._timeout* %0 to %struct.k_timer*, !dbg !17366
  call void @llvm.dbg.value(metadata %struct.k_timer* %2, metadata !17355, metadata !DIExpression()), !dbg !17365
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17367, metadata !DIExpression()) #23, !dbg !17374
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17376, !srcloc !17382
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17376
  call void @llvm.dbg.value(metadata i32 %4, metadata !17379, metadata !DIExpression()) #23, !dbg !17383
  call void @llvm.dbg.value(metadata i32 undef, metadata !17380, metadata !DIExpression()) #23, !dbg !17383
  call void @llvm.dbg.value(metadata i32 %4, metadata !17373, metadata !DIExpression()) #23, !dbg !17374
  call void @llvm.dbg.value(metadata i32 %4, metadata !17357, metadata !DIExpression()), !dbg !17365
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 1, i32 2, !dbg !17384
  %6 = load i64, i64* %5, align 8, !dbg !17384
  switch i64 %6, label %7 [
    i64 0, label %21
    i64 -1, label %21
  ], !dbg !17385

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 undef, metadata !17362, metadata !DIExpression()), !dbg !17386
  %8 = tail call fastcc i64 @k_uptime_ticks() #24, !dbg !17387
  %9 = add nsw i64 %8, 1, !dbg !17387
  %10 = load i64, i64* %5, align 8, !dbg !17387
  %11 = add nsw i64 %9, %10, !dbg !17387
  %12 = icmp sgt i64 %11, 0, !dbg !17387
  br i1 %12, label %13, label %18, !dbg !17387

13:                                               ; preds = %7
  %14 = tail call fastcc i64 @k_uptime_ticks() #24, !dbg !17387
  %15 = load i64, i64* %5, align 8, !dbg !17387
  %16 = add i64 %14, %15, !dbg !17387
  %17 = sub i64 -3, %16, !dbg !17387
  br label %18, !dbg !17387

18:                                               ; preds = %7, %13
  %19 = phi i64 [ %17, %13 ], [ -2, %7 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !17362, metadata !DIExpression()), !dbg !17386
  %20 = insertvalue [1 x i64] poison, i64 %19, 0, !dbg !17388
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %0, void (%struct._timeout*)* noundef nonnull @z_timer_expiration_handler, [1 x i64] %20) #25, !dbg !17388
  br label %21, !dbg !17389

21:                                               ; preds = %1, %1, %18
  %22 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 2, !dbg !17390
  %23 = bitcast %struct._timeout* %22 to i32*, !dbg !17390
  %24 = load i32, i32* %23, align 8, !dbg !17391
  %25 = add i32 %24, 1, !dbg !17391
  store i32 %25, i32* %23, align 8, !dbg !17391
  %26 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 1, i32 1, !dbg !17392
  %27 = bitcast void (%struct._timeout*)** %26 to void (%struct.k_timer*)**, !dbg !17392
  %28 = load void (%struct.k_timer*)*, void (%struct.k_timer*)** %27, align 8, !dbg !17392
  %29 = icmp eq void (%struct.k_timer*)* %28, null, !dbg !17394
  br i1 %29, label %34, label %30, !dbg !17395

30:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 %4, metadata !17396, metadata !DIExpression()) #23, !dbg !17402
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17401, metadata !DIExpression()) #23, !dbg !17402
  call void @llvm.dbg.value(metadata i32 %4, metadata !17405, metadata !DIExpression()) #23, !dbg !17408
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !17410, !srcloc !17411
  %31 = load void (%struct.k_timer*)*, void (%struct.k_timer*)** %27, align 8, !dbg !17412
  tail call void %31(%struct.k_timer* noundef nonnull %2) #25, !dbg !17413
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17367, metadata !DIExpression()) #23, !dbg !17414
  %32 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17416, !srcloc !17382
  %33 = extractvalue { i32, i32 } %32, 0, !dbg !17416
  call void @llvm.dbg.value(metadata i32 %33, metadata !17379, metadata !DIExpression()) #23, !dbg !17418
  call void @llvm.dbg.value(metadata i32 undef, metadata !17380, metadata !DIExpression()) #23, !dbg !17418
  call void @llvm.dbg.value(metadata i32 %33, metadata !17373, metadata !DIExpression()) #23, !dbg !17414
  call void @llvm.dbg.value(metadata i32 %33, metadata !17357, metadata !DIExpression()), !dbg !17365
  br label %34, !dbg !17419

34:                                               ; preds = %30, %21
  %35 = phi i32 [ %33, %30 ], [ %4, %21 ], !dbg !17365
  call void @llvm.dbg.value(metadata i32 %35, metadata !17357, metadata !DIExpression()), !dbg !17365
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 1, !dbg !17420
  %37 = bitcast %struct._timeout* %36 to %struct._wait_q_t*, !dbg !17420
  %38 = tail call fastcc %struct.k_thread* @z_waitq_head.272(%struct._wait_q_t* noundef nonnull %37) #24, !dbg !17421
  call void @llvm.dbg.value(metadata %struct.k_thread* %38, metadata !17356, metadata !DIExpression()), !dbg !17365
  %39 = icmp eq %struct.k_thread* %38, null, !dbg !17422
  br i1 %39, label %40, label %41, !dbg !17424

40:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %35, metadata !17396, metadata !DIExpression()) #23, !dbg !17425
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17401, metadata !DIExpression()) #23, !dbg !17425
  call void @llvm.dbg.value(metadata i32 %35, metadata !17405, metadata !DIExpression()) #23, !dbg !17428
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !17430, !srcloc !17411
  br label %43, !dbg !17431

41:                                               ; preds = %34
  tail call void @z_unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %38) #25, !dbg !17432
  call void @llvm.dbg.value(metadata %struct.k_thread* %38, metadata !17433, metadata !DIExpression()), !dbg !17439
  call void @llvm.dbg.value(metadata i32 0, metadata !17438, metadata !DIExpression()), !dbg !17439
  %42 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %38, i32 0, i32 7, i32 1, !dbg !17441
  store i32 0, i32* %42, align 4, !dbg !17442
  call void @llvm.dbg.value(metadata i32 %35, metadata !17396, metadata !DIExpression()) #23, !dbg !17443
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17401, metadata !DIExpression()) #23, !dbg !17443
  call void @llvm.dbg.value(metadata i32 %35, metadata !17405, metadata !DIExpression()) #23, !dbg !17445
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !17447, !srcloc !17411
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %38) #25, !dbg !17448
  br label %43, !dbg !17449

43:                                               ; preds = %41, %40
  ret void, !dbg !17449
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_ticks() unnamed_addr #1 !dbg !17450 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !17451, !srcloc !17453
  %1 = tail call i64 @z_impl_k_uptime_ticks() #25, !dbg !17454
  ret i64 %1, !dbg !17455
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.272(%struct._wait_q_t* noundef readonly %0) unnamed_addr #10 !dbg !17456 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17460, metadata !DIExpression()), !dbg !17461
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17462
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.273(%struct._dnode* noundef %2) #24, !dbg !17463
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !17464
  ret %struct.k_thread* %4, !dbg !17465
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.273(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !17466 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17471, metadata !DIExpression()), !dbg !17472
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.274(%struct._dnode* noundef %0) #24, !dbg !17473
  br i1 %2, label %6, label %3, !dbg !17473

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17474
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17474
  br label %6, !dbg !17473

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !17473
  ret %struct._dnode* %7, !dbg !17475
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.274(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !17476 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17480, metadata !DIExpression()), !dbg !17481
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17482
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17482
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !17483
  ret i1 %4, !dbg !17484
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_timer_init(%struct.k_timer* noundef %0, void (%struct.k_timer*)* noundef %1, void (%struct.k_timer*)* noundef %2) local_unnamed_addr #6 !dbg !17485 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17491, metadata !DIExpression()), !dbg !17494
  call void @llvm.dbg.value(metadata void (%struct.k_timer*)* %1, metadata !17492, metadata !DIExpression()), !dbg !17494
  call void @llvm.dbg.value(metadata void (%struct.k_timer*)* %2, metadata !17493, metadata !DIExpression()), !dbg !17494
  %4 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 2, !dbg !17495
  store void (%struct.k_timer*)* %1, void (%struct.k_timer*)** %4, align 8, !dbg !17496
  %5 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 3, !dbg !17497
  store void (%struct.k_timer*)* %2, void (%struct.k_timer*)** %5, align 4, !dbg !17498
  %6 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17499
  store i32 0, i32* %6, align 8, !dbg !17500
  %7 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 1, !dbg !17501
  tail call fastcc void @z_waitq_init.277(%struct._wait_q_t* noundef nonnull %7) #24, !dbg !17504
  %8 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17505
  tail call fastcc void @z_init_timeout.278(%struct._timeout* noundef %8) #24, !dbg !17506
  %9 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 6, !dbg !17507
  store i8* null, i8** %9, align 4, !dbg !17508
  ret void, !dbg !17509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.277(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !17510 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17514, metadata !DIExpression()), !dbg !17515
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17516
  tail call fastcc void @sys_dlist_init.280(%struct._dnode* noundef %2) #24, !dbg !17517
  ret void, !dbg !17518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout.278(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !17519 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17521, metadata !DIExpression()), !dbg !17522
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17523
  tail call fastcc void @sys_dnode_init.279(%struct._dnode* noundef %2) #24, !dbg !17524
  ret void, !dbg !17525
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.279(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !17526 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17530, metadata !DIExpression()), !dbg !17531
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17532
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17533
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17534
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17535
  ret void, !dbg !17536
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.280(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !17537 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17541, metadata !DIExpression()), !dbg !17542
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17543
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17544
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17545
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17546
  ret void, !dbg !17547
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_timer_start(%struct.k_timer* noundef %0, [1 x i64] %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17548 {
  %4 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17553, metadata !DIExpression()), !dbg !17555
  %5 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !17554, metadata !DIExpression()), !dbg !17555
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17552, metadata !DIExpression()), !dbg !17555
  %6 = icmp eq i64 %4, -1, !dbg !17556
  br i1 %6, label %23, label %7, !dbg !17558

7:                                                ; preds = %3
  %8 = icmp sgt i64 %5, 0, !dbg !17559
  %9 = icmp sgt i64 %5, 2, !dbg !17559
  %10 = select i1 %9, i64 %5, i64 2, !dbg !17559
  %11 = add nsw i64 %10, -1, !dbg !17559
  %12 = select i1 %8, i64 %11, i64 %5, !dbg !17559
  call void @llvm.dbg.value(metadata i64 %12, metadata !17554, metadata !DIExpression()), !dbg !17555
  %13 = icmp sgt i64 %4, -2, !dbg !17561
  %14 = icmp sgt i64 %4, 1, !dbg !17563
  %15 = select i1 %14, i64 %4, i64 1, !dbg !17563
  %16 = add nsw i64 %15, -1, !dbg !17563
  %17 = select i1 %13, i64 %16, i64 %4, !dbg !17563
  call void @llvm.dbg.value(metadata i64 %17, metadata !17553, metadata !DIExpression()), !dbg !17555
  %18 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17564
  %19 = tail call i32 @z_abort_timeout(%struct._timeout* noundef %18) #25, !dbg !17565
  %20 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 4, i32 0, !dbg !17566
  store i64 %12, i64* %20, align 8, !dbg !17566
  %21 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17567
  store i32 0, i32* %21, align 8, !dbg !17568
  %22 = insertvalue [1 x i64] poison, i64 %17, 0, !dbg !17569
  tail call void @z_add_timeout(%struct._timeout* noundef %18, void (%struct._timeout*)* noundef nonnull @z_timer_expiration_handler, [1 x i64] %22) #25, !dbg !17569
  br label %23, !dbg !17570

23:                                               ; preds = %3, %7
  ret void, !dbg !17570
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_timer_stop(%struct.k_timer* noundef %0) local_unnamed_addr #1 !dbg !17571 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17573, metadata !DIExpression()), !dbg !17578
  %2 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17579
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef %2) #25, !dbg !17580
  %4 = icmp eq i32 %3, 0, !dbg !17581
  call void @llvm.dbg.value(metadata i1 %4, metadata !17574, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17578
  br i1 %4, label %5, label %15, !dbg !17582

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 3, !dbg !17583
  %7 = load void (%struct.k_timer*)*, void (%struct.k_timer*)** %6, align 4, !dbg !17583
  %8 = icmp eq void (%struct.k_timer*)* %7, null, !dbg !17585
  br i1 %8, label %10, label %9, !dbg !17586

9:                                                ; preds = %5
  tail call void %7(%struct.k_timer* noundef nonnull %0) #25, !dbg !17587
  br label %10, !dbg !17589

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 1, !dbg !17590
  %12 = tail call %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef nonnull %11) #25, !dbg !17591
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !17575, metadata !DIExpression()), !dbg !17592
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !17593
  br i1 %13, label %15, label %14, !dbg !17595

14:                                               ; preds = %10
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %12) #25, !dbg !17596
  tail call fastcc void @z_reschedule_unlocked.283() #24, !dbg !17598
  br label %15, !dbg !17599

15:                                               ; preds = %10, %14, %1
  ret void, !dbg !17600
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked.283() unnamed_addr #1 !dbg !17601 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17602, !srcloc !17382
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17602
  call void @llvm.dbg.value(metadata i32 %2, metadata !17379, metadata !DIExpression()) #23, !dbg !17604
  call void @llvm.dbg.value(metadata i32 undef, metadata !17380, metadata !DIExpression()) #23, !dbg !17604
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !17605
  ret void, !dbg !17606
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_timer_status_get(%struct.k_timer* nocapture noundef %0) local_unnamed_addr #1 !dbg !17607 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17611, metadata !DIExpression()), !dbg !17614
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17367, metadata !DIExpression()) #23, !dbg !17615
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17617, !srcloc !17382
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17617
  call void @llvm.dbg.value(metadata i32 %3, metadata !17379, metadata !DIExpression()) #23, !dbg !17619
  call void @llvm.dbg.value(metadata i32 undef, metadata !17380, metadata !DIExpression()) #23, !dbg !17619
  call void @llvm.dbg.value(metadata i32 %3, metadata !17373, metadata !DIExpression()) #23, !dbg !17615
  call void @llvm.dbg.value(metadata i32 %3, metadata !17612, metadata !DIExpression()), !dbg !17614
  %4 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17620
  %5 = load i32, i32* %4, align 8, !dbg !17620
  call void @llvm.dbg.value(metadata i32 %5, metadata !17613, metadata !DIExpression()), !dbg !17614
  store i32 0, i32* %4, align 8, !dbg !17621
  call void @llvm.dbg.value(metadata i32 %3, metadata !17396, metadata !DIExpression()) #23, !dbg !17622
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17401, metadata !DIExpression()) #23, !dbg !17622
  call void @llvm.dbg.value(metadata i32 %3, metadata !17405, metadata !DIExpression()) #23, !dbg !17624
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !17626, !srcloc !17411
  ret i32 %5, !dbg !17627
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_timer_status_sync(%struct.k_timer* noundef %0) local_unnamed_addr #1 !dbg !17628 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17630, metadata !DIExpression()), !dbg !17633
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17367, metadata !DIExpression()) #23, !dbg !17634
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17636, !srcloc !17382
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17636
  call void @llvm.dbg.value(metadata i32 %3, metadata !17379, metadata !DIExpression()) #23, !dbg !17638
  call void @llvm.dbg.value(metadata i32 undef, metadata !17380, metadata !DIExpression()) #23, !dbg !17638
  call void @llvm.dbg.value(metadata i32 %3, metadata !17373, metadata !DIExpression()) #23, !dbg !17634
  call void @llvm.dbg.value(metadata i32 %3, metadata !17631, metadata !DIExpression()), !dbg !17633
  %4 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17639
  %5 = load i32, i32* %4, align 8, !dbg !17639
  call void @llvm.dbg.value(metadata i32 %5, metadata !17632, metadata !DIExpression()), !dbg !17633
  %6 = icmp eq i32 %5, 0, !dbg !17640
  br i1 %6, label %7, label %17, !dbg !17642

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17643
  %9 = tail call fastcc zeroext i1 @z_is_inactive_timeout.284(%struct._timeout* noundef %8) #24, !dbg !17646
  br i1 %9, label %17, label %10, !dbg !17647

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 1, !dbg !17648
  %12 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !17650
  %13 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %12, %struct._wait_q_t* noundef nonnull %11, [1 x i64] [i64 -1]) #25, !dbg !17650
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17367, metadata !DIExpression()) #23, !dbg !17651
  %14 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17653, !srcloc !17382
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !17653
  call void @llvm.dbg.value(metadata i32 %15, metadata !17379, metadata !DIExpression()) #23, !dbg !17655
  call void @llvm.dbg.value(metadata i32 undef, metadata !17380, metadata !DIExpression()) #23, !dbg !17655
  call void @llvm.dbg.value(metadata i32 %15, metadata !17373, metadata !DIExpression()) #23, !dbg !17651
  call void @llvm.dbg.value(metadata i32 %15, metadata !17631, metadata !DIExpression()), !dbg !17633
  %16 = load i32, i32* %4, align 8, !dbg !17656
  call void @llvm.dbg.value(metadata i32 %16, metadata !17632, metadata !DIExpression()), !dbg !17633
  br label %17, !dbg !17657

17:                                               ; preds = %1, %10, %7
  %18 = phi i32 [ 0, %7 ], [ %16, %10 ], [ %5, %1 ], !dbg !17633
  %19 = phi i32 [ %3, %7 ], [ %15, %10 ], [ %3, %1 ], !dbg !17633
  call void @llvm.dbg.value(metadata i32 %19, metadata !17631, metadata !DIExpression()), !dbg !17633
  call void @llvm.dbg.value(metadata i32 %18, metadata !17632, metadata !DIExpression()), !dbg !17633
  store i32 0, i32* %4, align 8, !dbg !17658
  call void @llvm.dbg.value(metadata i32 %19, metadata !17396, metadata !DIExpression()) #23, !dbg !17659
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17401, metadata !DIExpression()) #23, !dbg !17659
  call void @llvm.dbg.value(metadata i32 %19, metadata !17405, metadata !DIExpression()) #23, !dbg !17661
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !17663, !srcloc !17411
  ret i32 %18, !dbg !17664
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.284(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17665 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17671, metadata !DIExpression()), !dbg !17672
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17673
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.285(%struct._dnode* noundef %2) #24, !dbg !17674
  %4 = xor i1 %3, true, !dbg !17675
  ret i1 %4, !dbg !17676
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.285(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17677 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17683, metadata !DIExpression()), !dbg !17684
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17685
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17685
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17686
  ret i1 %4, !dbg !17687
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17688 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.288, i32 0, i32 0)) #25, !dbg !17690
  ret void, !dbg !17691
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { argmemonly nofree nosync nounwind willreturn }
attributes #8 = { nofree nosync nounwind willreturn }
attributes #9 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!496, !2, !2836, !27, !260, !532, !553, !2838, !2840, !2874, !563, !606, !2876, !2879, !2890, !2936, !2938, !2966, !2994, !3037, !3109, !3154, !635, !785, !3182, !821, !831, !856, !867, !984, !1174, !3187, !1309, !1375, !1690, !1912, !3224, !2025, !2115, !3226, !3310, !3373, !2164, !3376, !2171, !2539, !3394, !2559, !3396, !2674, !2713, !3399}
!llvm.ident = !{!3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401, !3401}
!llvm.module.flags = !{!3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 94, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5248, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 82)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2624, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "log_const_main", scope: !27, file: !119, line: 12, type: !252, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !103, globals: !116, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/rtio/sensor_batch_processing/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_RTIO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_RTIO_IODEV", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 66)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 67)
!102 = !DIEnumerator(name: "K_OBJ_LAST", value: 68)
!103 = !{!104, !105, !108, !109, !113, !114}
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!107 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!108 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !110, line: 46, baseType: !111)
!110 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !112)
!112 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !115)
!115 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!116 = !{!25, !117, !227, !229, !235, !237, !245}
!117 = !DIGlobalVariableExpression(var: !118, expr: !DIExpression())
!118 = distinct !DIGlobalVariable(name: "simple_exec", scope: !27, file: !119, line: 24, type: !120, isLocal: false, isDefinition: true)
!119 = !DIFile(filename: "zephyr/samples/subsys/rtio/sensor_batch_processing/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_simple_executor", file: !121, line: 57, size: 32, elements: !122)
!121 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio_executor_simple.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!122 = !{!123}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !120, file: !121, line: 58, baseType: !124, size: 32)
!124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !126)
!125 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!126 = !{!127}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !124, file: !125, line: 211, baseType: !128, size: 32)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !130)
!130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !131)
!131 = !{!132, !222, !226}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !130, file: !125, line: 177, baseType: !133, size: 32)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 32)
!134 = !DISubroutineType(types: !135)
!135 = !{!108, !136}
!136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 32)
!137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !138)
!138 = !{!139, !141, !145, !210}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !137, file: !125, line: 228, baseType: !140, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !137, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!142 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !143, line: 22, baseType: !144)
!143 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!144 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !137, file: !125, line: 254, baseType: !146, size: 32, offset: 64)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !148)
!148 = !{!149, !159}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !147, file: !125, line: 143, baseType: !150, size: 160)
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !152)
!151 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio_spsc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!152 = !{!153, !154, !155, !156, !157}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !150, file: !151, line: 60, baseType: !24, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !150, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !150, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !150, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !150, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !24)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !147, file: !125, line: 144, baseType: !160, offset: 160)
!160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, elements: !197)
!161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !162)
!162 = !{!163, !166, !167, !170, !200, !201}
!163 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !161, file: !125, line: 110, baseType: !164, size: 8)
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !165)
!165 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !161, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !161, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!168 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !169)
!169 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !161, file: !125, line: 116, baseType: !171, size: 32, offset: 32)
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 32)
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !174)
!174 = !{!175, !186, !199}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !173, file: !125, line: 308, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !178)
!178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !179)
!179 = !{!180}
!180 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !178, file: !125, line: 271, baseType: !181, size: 32)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 32)
!182 = !DISubroutineType(types: !183)
!183 = !{null, !184, !136}
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !161)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !173, file: !125, line: 311, baseType: !187, size: 32, offset: 32)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !189)
!189 = !{!190, !191}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !188, file: !125, line: 299, baseType: !150, size: 160)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !188, file: !125, line: 300, baseType: !192, offset: 160)
!192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !193, elements: !197)
!193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !194)
!194 = !{!195, !196}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !193, file: !125, line: 289, baseType: !184, size: 32)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !193, file: !125, line: 290, baseType: !136, size: 32, offset: 32)
!197 = !{!198}
!198 = !DISubrange(count: -1)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !173, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !161, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!201 = !DIDerivedType(tag: DW_TAG_member, scope: !161, file: !125, line: 127, baseType: !202, size: 64, offset: 96)
!202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !161, file: !125, line: 127, size: 64, elements: !203)
!203 = !{!204}
!204 = !DIDerivedType(tag: DW_TAG_member, scope: !202, file: !125, line: 128, baseType: !205, size: 64)
!205 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !202, file: !125, line: 128, size: 64, elements: !206)
!206 = !{!207, !208}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !205, file: !125, line: 129, baseType: !113, size: 32)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !205, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !137, file: !125, line: 257, baseType: !211, size: 32, offset: 96)
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !212, size: 32)
!212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !213)
!213 = !{!214, !215}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !212, file: !125, line: 162, baseType: !150, size: 160)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !212, file: !125, line: 163, baseType: !216, offset: 160)
!216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !217, elements: !197)
!217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !218)
!218 = !{!219, !221}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !217, file: !125, line: 151, baseType: !220, size: 32)
!220 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !108)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !217, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !130, file: !125, line: 182, baseType: !223, size: 32, offset: 32)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 32)
!224 = !DISubroutineType(types: !225)
!225 = !{null, !136, !184, !108}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !130, file: !125, line: 187, baseType: !223, size: 32, offset: 64)
!227 = !DIGlobalVariableExpression(var: !228, expr: !DIExpression())
!228 = distinct !DIGlobalVariable(name: "ez_io", scope: !27, file: !119, line: 25, type: !137, isLocal: false, isDefinition: true, align: 32)
!229 = !DIGlobalVariableExpression(var: !230, expr: !DIExpression())
!230 = distinct !DIGlobalVariable(name: "bufs", scope: !27, file: !119, line: 27, type: !231, isLocal: true, isDefinition: true)
!231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 1024, elements: !232)
!232 = !{!233, !234}
!233 = !DISubrange(count: 8)
!234 = !DISubrange(count: 16)
!235 = !DIGlobalVariableExpression(var: !236, expr: !DIExpression())
!236 = distinct !DIGlobalVariable(name: "z_rtio_simple_api", scope: !27, file: !121, line: 64, type: !129, isLocal: true, isDefinition: true)
!237 = !DIGlobalVariableExpression(var: !238, expr: !DIExpression())
!238 = distinct !DIGlobalVariable(name: "_sq_ez_io", scope: !27, file: !119, line: 25, type: !239, isLocal: true, isDefinition: true)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc__sq_ez_io", file: !119, line: 25, size: 1440, elements: !240)
!240 = !{!241, !242}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !239, file: !119, line: 25, baseType: !150, size: 160)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !239, file: !119, line: 25, baseType: !243, size: 1280, offset: 160)
!243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 1280, elements: !244)
!244 = !{!233}
!245 = !DIGlobalVariableExpression(var: !246, expr: !DIExpression())
!246 = distinct !DIGlobalVariable(name: "_cq_ez_io", scope: !27, file: !119, line: 25, type: !247, isLocal: true, isDefinition: true)
!247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc__cq_ez_io", file: !119, line: 25, size: 672, elements: !248)
!248 = !{!249, !250}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !247, file: !119, line: 25, baseType: !150, size: 160)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !247, file: !119, line: 25, baseType: !251, size: 512, offset: 160)
!251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !217, size: 512, elements: !244)
!252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !253)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !255)
!254 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!255 = !{!256, !257}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !253, file: !254, line: 17, baseType: !105, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !253, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!258 = !DIGlobalVariableExpression(var: !259, expr: !DIExpression())
!259 = distinct !DIGlobalVariable(name: "log_const_vnd_sensor", scope: !260, file: !265, line: 14, type: !489, isLocal: false, isDefinition: true)
!260 = distinct !DICompileUnit(language: DW_LANG_C99, file: !261, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !262, globals: !450, splitDebugInlining: false, nameTableKind: None)
!261 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/rtio/sensor_batch_processing/src/vnd_sensor.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!262 = !{!104, !108, !263, !109, !443, !113, !114}
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 32)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vnd_sensor_data", file: !265, line: 21, size: 960, elements: !266)
!265 = !DIFile(filename: "zephyr/samples/subsys/rtio/sensor_batch_processing/src/vnd_sensor.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!266 = !{!267, !357, !407, !430, !449}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !264, file: !265, line: 22, baseType: !268, size: 96)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !269)
!269 = !{!270, !345, !356}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !268, file: !125, line: 308, baseType: !271, size: 32)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 32)
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !273)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !274)
!274 = !{!275}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !273, file: !125, line: 271, baseType: !276, size: 32)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DISubroutineType(types: !278)
!278 = !{null, !279, !298}
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !281)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !282)
!282 = !{!283, !284, !285, !286, !289, !290}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !281, file: !125, line: 110, baseType: !164, size: 8)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !281, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !281, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !281, file: !125, line: 116, baseType: !287, size: 32, offset: 32)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !268)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !281, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!290 = !DIDerivedType(tag: DW_TAG_member, scope: !281, file: !125, line: 127, baseType: !291, size: 64, offset: 96)
!291 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !281, file: !125, line: 127, size: 64, elements: !292)
!292 = !{!293}
!293 = !DIDerivedType(tag: DW_TAG_member, scope: !291, file: !125, line: 128, baseType: !294, size: 64)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !291, file: !125, line: 128, size: 64, elements: !295)
!295 = !{!296, !297}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !294, file: !125, line: 129, baseType: !113, size: 32)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !294, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 32)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !300)
!300 = !{!301, !319, !320, !334}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !299, file: !125, line: 228, baseType: !302, size: 32)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 32)
!303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !304)
!304 = !{!305}
!305 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !303, file: !125, line: 211, baseType: !306, size: 32)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !308)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !309)
!309 = !{!310, !314, !318}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !308, file: !125, line: 177, baseType: !311, size: 32)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 32)
!312 = !DISubroutineType(types: !313)
!313 = !{!108, !298}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !308, file: !125, line: 182, baseType: !315, size: 32, offset: 32)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 32)
!316 = !DISubroutineType(types: !317)
!317 = !{null, !298, !279, !108}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !308, file: !125, line: 187, baseType: !315, size: 32, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !299, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !299, file: !125, line: 254, baseType: !321, size: 32, offset: 64)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 32)
!322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !323)
!323 = !{!324, !332}
!324 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !322, file: !125, line: 143, baseType: !325, size: 160)
!325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !326)
!326 = !{!327, !328, !329, !330, !331}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !325, file: !151, line: 60, baseType: !24, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !325, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !325, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !325, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !325, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !322, file: !125, line: 144, baseType: !333, offset: 160)
!333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !281, elements: !197)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !299, file: !125, line: 257, baseType: !335, size: 32, offset: 96)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 32)
!336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !337)
!337 = !{!338, !339}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !336, file: !125, line: 162, baseType: !325, size: 160)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !336, file: !125, line: 163, baseType: !340, offset: 160)
!340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, elements: !197)
!341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !342)
!342 = !{!343, !344}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !341, file: !125, line: 151, baseType: !220, size: 32)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !341, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !268, file: !125, line: 311, baseType: !346, size: 32, offset: 32)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 32)
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !348)
!348 = !{!349, !350}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !347, file: !125, line: 299, baseType: !325, size: 160)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !347, file: !125, line: 300, baseType: !351, offset: 160)
!351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !352, elements: !197)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !353)
!353 = !{!354, !355}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !352, file: !125, line: 289, baseType: !279, size: 32)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !352, file: !125, line: 290, baseType: !298, size: 32, offset: 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !268, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !264, file: !265, line: 23, baseType: !358, size: 448, offset: 128)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_timer", file: !359, line: 1318, size: 448, elements: !360)
!359 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!360 = !{!361, !388, !394, !399, !400, !405, !406}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !358, file: !359, line: 1324, baseType: !362, size: 192)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !364)
!363 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!364 = !{!365, !381, !387}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !362, file: !363, line: 245, baseType: !366, size: 64)
!366 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !368)
!367 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !369)
!369 = !{!370, !376}
!370 = !DIDerivedType(tag: DW_TAG_member, scope: !368, file: !367, line: 38, baseType: !371, size: 32)
!371 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !368, file: !367, line: 38, size: 32, elements: !372)
!372 = !{!373, !375}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !371, file: !367, line: 39, baseType: !374, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !371, file: !367, line: 40, baseType: !374, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, scope: !368, file: !367, line: 42, baseType: !377, size: 32, offset: 32)
!377 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !368, file: !367, line: 42, size: 32, elements: !378)
!378 = !{!379, !380}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !377, file: !367, line: 43, baseType: !374, size: 32)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !377, file: !367, line: 44, baseType: !374, size: 32)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !362, file: !363, line: 246, baseType: !382, size: 32, offset: 64)
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !383)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 32)
!384 = !DISubroutineType(types: !385)
!385 = !{null, !386}
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !362, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !358, file: !359, line: 1327, baseType: !389, size: 64, offset: 192)
!389 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !390)
!390 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !391)
!391 = !{!392}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !390, file: !363, line: 232, baseType: !393, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !368)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_fn", scope: !358, file: !359, line: 1330, baseType: !395, size: 32, offset: 256)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 32)
!396 = !DISubroutineType(types: !397)
!397 = !{null, !398}
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 32)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "stop_fn", scope: !358, file: !359, line: 1333, baseType: !395, size: 32, offset: 288)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !358, file: !359, line: 1336, baseType: !401, size: 64, offset: 320)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !402)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !403)
!403 = !{!404}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !402, file: !110, line: 66, baseType: !109, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !358, file: !359, line: 1339, baseType: !113, size: 32, offset: 384)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !358, file: !359, line: 1342, baseType: !104, size: 32, offset: 416)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !264, file: !265, line: 24, baseType: !408, size: 32, offset: 576)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !410)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !412)
!411 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!412 = !{!413, !414, !415, !416, !423, !424}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !410, file: !411, line: 380, baseType: !105, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !410, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !410, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !410, file: !411, line: 386, baseType: !417, size: 32, offset: 96)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !419)
!419 = !{!420, !421}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !418, file: !411, line: 359, baseType: !164, size: 8)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !418, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!422 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !410, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !410, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 32)
!426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !427)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !411, line: 43, baseType: !428)
!428 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !429)
!429 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "msgq", scope: !264, file: !265, line: 25, baseType: !431, size: 320, offset: 608)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !359, line: 4204, size: 320, elements: !432)
!432 = !{!433, !434, !438, !441, !442, !444, !445, !446, !447, !448}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !431, file: !359, line: 4206, baseType: !389, size: 64)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !431, file: !359, line: 4208, baseType: !435, offset: 64)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!436 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!437 = !{}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !431, file: !359, line: 4210, baseType: !439, size: 32, offset: 64)
!439 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !440, line: 214, baseType: !32)
!440 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!441 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !431, file: !359, line: 4212, baseType: !113, size: 32, offset: 96)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !431, file: !359, line: 4214, baseType: !443, size: 32, offset: 128)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !431, file: !359, line: 4216, baseType: !443, size: 32, offset: 160)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !431, file: !359, line: 4218, baseType: !443, size: 32, offset: 192)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !431, file: !359, line: 4220, baseType: !443, size: 32, offset: 224)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !431, file: !359, line: 4222, baseType: !113, size: 32, offset: 256)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !431, file: !359, line: 4227, baseType: !164, size: 8, offset: 288)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "sample_number", scope: !264, file: !265, line: 26, baseType: !113, size: 32, offset: 928)
!450 = !{!258, !451, !458, !463, !465, !476, !478, !485, !487}
!451 = !DIGlobalVariableExpression(var: !452, expr: !DIExpression())
!452 = distinct !DIGlobalVariable(name: "vnd_sensor_iodev_sq_0", scope: !260, file: !265, line: 152, type: !453, isLocal: false, isDefinition: true)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc_vnd_sensor_iodev_sq_0", file: !265, line: 152, size: 672, elements: !454)
!454 = !{!455, !456}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !453, file: !265, line: 152, baseType: !325, size: 160)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !453, file: !265, line: 152, baseType: !457, size: 512, offset: 160)
!457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !352, size: 512, elements: !244)
!458 = !DIGlobalVariableExpression(var: !459, expr: !DIExpression())
!459 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !260, file: !265, line: 152, type: !460, isLocal: false, isDefinition: true, align: 16)
!460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 64, elements: !461)
!461 = !{!462}
!462 = !DISubrange(count: 4)
!463 = !DIGlobalVariableExpression(var: !464, expr: !DIExpression())
!464 = distinct !DIGlobalVariable(name: "__device_dts_ord_15", scope: !260, file: !265, line: 152, type: !409, isLocal: false, isDefinition: true, align: 32)
!465 = !DIGlobalVariableExpression(var: !466, expr: !DIExpression())
!466 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_15", scope: !260, file: !265, line: 152, type: !467, isLocal: true, isDefinition: true, align: 32)
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !468)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !470)
!469 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!470 = !{!471, !475}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !468, file: !469, line: 60, baseType: !472, size: 32)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 32)
!473 = !DISubroutineType(types: !474)
!474 = !{!108, !408}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !468, file: !469, line: 65, baseType: !408, size: 32, offset: 32)
!476 = !DIGlobalVariableExpression(var: !477, expr: !DIExpression())
!477 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_15", scope: !260, file: !265, line: 152, type: !418, isLocal: true, isDefinition: true, align: 8)
!478 = !DIGlobalVariableExpression(var: !479, expr: !DIExpression())
!479 = distinct !DIGlobalVariable(name: "vnd_sensor_config_0", scope: !260, file: !265, line: 152, type: !480, isLocal: true, isDefinition: true)
!480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !481)
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vnd_sensor_config", file: !265, line: 16, size: 64, elements: !482)
!482 = !{!483, !484}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "sample_period", scope: !481, file: !265, line: 17, baseType: !113, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "sample_size", scope: !481, file: !265, line: 18, baseType: !439, size: 32, offset: 32)
!485 = !DIGlobalVariableExpression(var: !486, expr: !DIExpression())
!486 = distinct !DIGlobalVariable(name: "vnd_sensor_data_0", scope: !260, file: !265, line: 152, type: !264, isLocal: true, isDefinition: true)
!487 = !DIGlobalVariableExpression(var: !488, expr: !DIExpression())
!488 = distinct !DIGlobalVariable(name: "vnd_sensor_iodev_api", scope: !260, file: !265, line: 127, type: !272, isLocal: true, isDefinition: true)
!489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !490)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !491)
!491 = !{!492, !493}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !490, file: !254, line: 17, baseType: !105, size: 32)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !490, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!494 = !DIGlobalVariableExpression(var: !495, expr: !DIExpression())
!495 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !496, file: !501, line: 98, type: !507, isLocal: false, isDefinition: true, align: 16)
!496 = distinct !DICompileUnit(language: DW_LANG_C99, file: !497, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !498, splitDebugInlining: false, nameTableKind: None)
!497 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!498 = !{!499, !505, !510, !512, !514, !516, !518, !520, !522, !524, !526, !528, !494}
!499 = !DIGlobalVariableExpression(var: !500, expr: !DIExpression())
!500 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !496, file: !501, line: 18, type: !502, isLocal: false, isDefinition: true, align: 16)
!501 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 208, elements: !503)
!503 = !{!504}
!504 = !DISubrange(count: 13)
!505 = !DIGlobalVariableExpression(var: !506, expr: !DIExpression())
!506 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_40", scope: !496, file: !501, line: 23, type: !507, isLocal: false, isDefinition: true, align: 16)
!507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 48, elements: !508)
!508 = !{!509}
!509 = !DISubrange(count: 3)
!510 = !DIGlobalVariableExpression(var: !511, expr: !DIExpression())
!511 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !496, file: !501, line: 30, type: !460, isLocal: false, isDefinition: true, align: 16)
!512 = !DIGlobalVariableExpression(var: !513, expr: !DIExpression())
!513 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !496, file: !501, line: 37, type: !460, isLocal: false, isDefinition: true, align: 16)
!514 = !DIGlobalVariableExpression(var: !515, expr: !DIExpression())
!515 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !496, file: !501, line: 44, type: !460, isLocal: false, isDefinition: true, align: 16)
!516 = !DIGlobalVariableExpression(var: !517, expr: !DIExpression())
!517 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !496, file: !501, line: 51, type: !460, isLocal: false, isDefinition: true, align: 16)
!518 = !DIGlobalVariableExpression(var: !519, expr: !DIExpression())
!519 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !496, file: !501, line: 58, type: !460, isLocal: false, isDefinition: true, align: 16)
!520 = !DIGlobalVariableExpression(var: !521, expr: !DIExpression())
!521 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !496, file: !501, line: 65, type: !460, isLocal: false, isDefinition: true, align: 16)
!522 = !DIGlobalVariableExpression(var: !523, expr: !DIExpression())
!523 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !496, file: !501, line: 72, type: !460, isLocal: false, isDefinition: true, align: 16)
!524 = !DIGlobalVariableExpression(var: !525, expr: !DIExpression())
!525 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !496, file: !501, line: 79, type: !460, isLocal: false, isDefinition: true, align: 16)
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !496, file: !501, line: 86, type: !460, isLocal: false, isDefinition: true, align: 16)
!528 = !DIGlobalVariableExpression(var: !529, expr: !DIExpression())
!529 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !496, file: !501, line: 93, type: !460, isLocal: false, isDefinition: true, align: 16)
!530 = !DIGlobalVariableExpression(var: !531, expr: !DIExpression())
!531 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !532, file: !545, line: 18, type: !546, isLocal: false, isDefinition: true)
!532 = distinct !DICompileUnit(language: DW_LANG_C99, file: !533, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !534, globals: !544, splitDebugInlining: false, nameTableKind: None)
!533 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!534 = !{!22, !104, !24, !535, !537, !539, !439, !108, !540, !541, !542, !543, !443, !209, !168, !105}
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 32)
!536 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 32)
!538 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !112, size: 32)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 32)
!544 = !{!530}
!545 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !547)
!547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !548)
!548 = !{!549, !550}
!549 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !547, file: !254, line: 17, baseType: !105, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !547, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!551 = !DIGlobalVariableExpression(var: !552, expr: !DIExpression())
!552 = distinct !DIGlobalVariable(name: "_char_out", scope: !553, file: !557, line: 54, type: !558, isLocal: false, isDefinition: true)
!553 = distinct !DICompileUnit(language: DW_LANG_C99, file: !554, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !555, globals: !556, splitDebugInlining: false, nameTableKind: None)
!554 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!555 = !{!104, !108}
!556 = !{!551}
!557 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 32)
!559 = !DISubroutineType(types: !560)
!560 = !{!108, !108}
!561 = !DIGlobalVariableExpression(var: !562, expr: !DIExpression())
!562 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !563, file: !580, line: 56, type: !581, isLocal: true, isDefinition: true, align: 32)
!563 = distinct !DICompileUnit(language: DW_LANG_C99, file: !564, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !565, globals: !579, splitDebugInlining: false, nameTableKind: None)
!564 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!565 = !{!566}
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 32)
!567 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !568, line: 369, baseType: !569)
!568 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f405xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !568, line: 360, size: 224, elements: !570)
!570 = !{!571, !573, !574, !575, !576, !577, !578}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !569, file: !568, line: 362, baseType: !572, size: 32)
!572 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !113)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !569, file: !568, line: 363, baseType: !572, size: 32, offset: 32)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !569, file: !568, line: 364, baseType: !572, size: 32, offset: 64)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !569, file: !568, line: 365, baseType: !572, size: 32, offset: 96)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !569, file: !568, line: 366, baseType: !572, size: 32, offset: 128)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !569, file: !568, line: 367, baseType: !572, size: 32, offset: 160)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !569, file: !568, line: 368, baseType: !572, size: 32, offset: 192)
!579 = !{!561}
!580 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!581 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !582)
!582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !583)
!583 = !{!584, !603}
!584 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !582, file: !469, line: 60, baseType: !585, size: 32)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 32)
!586 = !DISubroutineType(types: !587)
!587 = !{!108, !588}
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 32)
!589 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !590)
!590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !591)
!591 = !{!592, !593, !594, !595, !601, !602}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !590, file: !411, line: 380, baseType: !105, size: 32)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !590, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !590, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !590, file: !411, line: 386, baseType: !596, size: 32, offset: 96)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 32)
!597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !598)
!598 = !{!599, !600}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !597, file: !411, line: 359, baseType: !164, size: 8)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !597, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !590, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !590, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !582, file: !469, line: 65, baseType: !588, size: 32, offset: 32)
!604 = !DIGlobalVariableExpression(var: !605, expr: !DIExpression())
!605 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !606, file: !609, line: 71, type: !610, isLocal: true, isDefinition: true, align: 32)
!606 = distinct !DICompileUnit(language: DW_LANG_C99, file: !607, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !608, splitDebugInlining: false, nameTableKind: None)
!607 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!608 = !{!604}
!609 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !611)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !612)
!612 = !{!613, !632}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !611, file: !469, line: 60, baseType: !614, size: 32)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 32)
!615 = !DISubroutineType(types: !616)
!616 = !{!108, !617}
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 32)
!618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !619)
!619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !620)
!620 = !{!621, !622, !623, !624, !630, !631}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !619, file: !411, line: 380, baseType: !105, size: 32)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !619, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !619, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !619, file: !411, line: 386, baseType: !625, size: 32, offset: 96)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 32)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !627)
!627 = !{!628, !629}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !626, file: !411, line: 359, baseType: !164, size: 8)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !626, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !619, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !619, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !611, file: !469, line: 65, baseType: !617, size: 32, offset: 32)
!633 = !DIGlobalVariableExpression(var: !634, expr: !DIExpression())
!634 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !635, file: !642, line: 17, type: !778, isLocal: false, isDefinition: true)
!635 = distinct !DICompileUnit(language: DW_LANG_C99, file: !636, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !637, globals: !638, splitDebugInlining: false, nameTableKind: None)
!636 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!637 = !{!439, !108, !113, !104}
!638 = !{!633, !639, !774}
!639 = !DIGlobalVariableExpression(var: !640, expr: !DIExpression())
!640 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !641, file: !642, line: 198, type: !760, isLocal: true, isDefinition: true)
!641 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !642, file: !642, line: 175, type: !643, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !635, retainedNodes: !755)
!642 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!643 = !DISubroutineType(types: !644)
!644 = !{null, !645}
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 32)
!646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !647, line: 245, size: 1024, elements: !648)
!647 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!648 = !{!649, !712, !725, !726, !727, !728, !734, !750}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !646, file: !647, line: 247, baseType: !650, size: 384)
!650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !647, line: 57, size: 384, elements: !651)
!651 = !{!652, !679, !686, !687, !688, !699, !700, !701}
!652 = !DIDerivedType(tag: DW_TAG_member, scope: !650, file: !647, line: 60, baseType: !653, size: 64)
!653 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !650, file: !647, line: 60, size: 64, elements: !654)
!654 = !{!655, !670}
!655 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !653, file: !647, line: 61, baseType: !656, size: 64)
!656 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !657)
!657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !658)
!658 = !{!659, !665}
!659 = !DIDerivedType(tag: DW_TAG_member, scope: !657, file: !367, line: 38, baseType: !660, size: 32)
!660 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !657, file: !367, line: 38, size: 32, elements: !661)
!661 = !{!662, !664}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !660, file: !367, line: 39, baseType: !663, size: 32)
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 32)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !660, file: !367, line: 40, baseType: !663, size: 32)
!665 = !DIDerivedType(tag: DW_TAG_member, scope: !657, file: !367, line: 42, baseType: !666, size: 32, offset: 32)
!666 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !657, file: !367, line: 42, size: 32, elements: !667)
!667 = !{!668, !669}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !666, file: !367, line: 43, baseType: !663, size: 32)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !666, file: !367, line: 44, baseType: !663, size: 32)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !653, file: !647, line: 62, baseType: !671, size: 64)
!671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !672, line: 49, size: 64, elements: !673)
!672 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!673 = !{!674}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !671, file: !672, line: 50, baseType: !675, size: 64)
!675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !676, size: 64, elements: !677)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 32)
!677 = !{!678}
!678 = !DISubrange(count: 2)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !650, file: !647, line: 68, baseType: !680, size: 32, offset: 64)
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !681, size: 32)
!681 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !682)
!682 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !683)
!683 = !{!684}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !682, file: !363, line: 232, baseType: !685, size: 64)
!685 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !657)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !650, file: !647, line: 71, baseType: !164, size: 8, offset: 96)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !650, file: !647, line: 74, baseType: !164, size: 8, offset: 104)
!688 = !DIDerivedType(tag: DW_TAG_member, scope: !650, file: !647, line: 90, baseType: !689, size: 16, offset: 112)
!689 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !650, file: !647, line: 90, size: 16, elements: !690)
!690 = !{!691, !698}
!691 = !DIDerivedType(tag: DW_TAG_member, scope: !689, file: !647, line: 91, baseType: !692, size: 16)
!692 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !689, file: !647, line: 91, size: 16, elements: !693)
!693 = !{!694, !697}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !692, file: !647, line: 96, baseType: !695, size: 8)
!695 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !696)
!696 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !692, file: !647, line: 97, baseType: !164, size: 8, offset: 8)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !689, file: !647, line: 100, baseType: !168, size: 16)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !650, file: !647, line: 107, baseType: !113, size: 32, offset: 128)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !650, file: !647, line: 127, baseType: !104, size: 32, offset: 160)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !650, file: !647, line: 131, baseType: !702, size: 192, offset: 192)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !703)
!703 = !{!704, !705, !711}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !702, file: !363, line: 245, baseType: !656, size: 64)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !702, file: !363, line: 246, baseType: !706, size: 32, offset: 64)
!706 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !707)
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 32)
!708 = !DISubroutineType(types: !709)
!709 = !{null, !710}
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 32)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !702, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !646, file: !647, line: 250, baseType: !713, size: 288, offset: 384)
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !714, line: 25, size: 288, elements: !715)
!714 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!715 = !{!716, !717, !718, !719, !720, !721, !722, !723, !724}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !713, file: !714, line: 26, baseType: !113, size: 32)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !713, file: !714, line: 27, baseType: !113, size: 32, offset: 32)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !713, file: !714, line: 28, baseType: !113, size: 32, offset: 64)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !713, file: !714, line: 29, baseType: !113, size: 32, offset: 96)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !713, file: !714, line: 30, baseType: !113, size: 32, offset: 128)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !713, file: !714, line: 31, baseType: !113, size: 32, offset: 160)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !713, file: !714, line: 32, baseType: !113, size: 32, offset: 192)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !713, file: !714, line: 33, baseType: !113, size: 32, offset: 224)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !713, file: !714, line: 34, baseType: !113, size: 32, offset: 256)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !646, file: !647, line: 253, baseType: !104, size: 32, offset: 672)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !646, file: !647, line: 256, baseType: !681, size: 64, offset: 704)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !646, file: !647, line: 294, baseType: !108, size: 32, offset: 768)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !646, file: !647, line: 300, baseType: !729, size: 96, offset: 800)
!729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !647, line: 149, size: 96, elements: !730)
!730 = !{!731, !732, !733}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !729, file: !647, line: 153, baseType: !22, size: 32)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !729, file: !647, line: 162, baseType: !439, size: 32, offset: 32)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !729, file: !647, line: 168, baseType: !439, size: 32, offset: 64)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !646, file: !647, line: 325, baseType: !735, size: 32, offset: 896)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 32)
!736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !737)
!737 = !{!738, !747, !748}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !736, file: !359, line: 5074, baseType: !739, size: 96)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !740, line: 56, size: 96, elements: !741)
!740 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!741 = !{!742, !745, !746}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !739, file: !740, line: 57, baseType: !743, size: 32)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 32)
!744 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !740, line: 57, flags: DIFlagFwdDecl)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !739, file: !740, line: 58, baseType: !104, size: 32, offset: 32)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !739, file: !740, line: 59, baseType: !439, size: 32, offset: 64)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !736, file: !359, line: 5075, baseType: !681, size: 64, offset: 96)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !736, file: !359, line: 5076, baseType: !749, offset: 160)
!749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !646, file: !647, line: 343, baseType: !751, size: 64, offset: 928)
!751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !714, line: 60, size: 64, elements: !752)
!752 = !{!753, !754}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !751, file: !714, line: 63, baseType: !113, size: 32)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !751, file: !714, line: 66, baseType: !113, size: 32, offset: 32)
!755 = !{!756, !757, !758, !759}
!756 = !DILocalVariable(name: "thread", arg: 1, scope: !641, file: !642, line: 175, type: !645)
!757 = !DILocalVariable(name: "region_num", scope: !641, file: !642, line: 200, type: !164)
!758 = !DILocalVariable(name: "guard_start", scope: !641, file: !642, line: 265, type: !22)
!759 = !DILocalVariable(name: "guard_size", scope: !641, file: !642, line: 266, type: !439)
!760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !761, size: 96, elements: !772)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !762, line: 52, size: 96, elements: !763)
!762 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!763 = !{!764, !765, !766}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !761, file: !762, line: 53, baseType: !22, size: 32)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !761, file: !762, line: 54, baseType: !439, size: 32, offset: 32)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !761, file: !762, line: 55, baseType: !767, size: 32, offset: 64)
!767 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !768, line: 151, baseType: !769)
!768 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !768, line: 149, size: 32, elements: !770)
!770 = !{!771}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !769, file: !768, line: 150, baseType: !113, size: 32)
!772 = !{!773}
!773 = !DISubrange(count: 1)
!774 = !DIGlobalVariableExpression(var: !775, expr: !DIExpression())
!775 = distinct !DIGlobalVariable(name: "static_regions", scope: !635, file: !642, line: 62, type: !776, isLocal: true, isDefinition: true)
!776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !777, size: 96, elements: !772)
!777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !761)
!778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !779)
!779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !780)
!780 = !{!781, !782}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !779, file: !254, line: 17, baseType: !105, size: 32)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !779, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!783 = !DIGlobalVariableExpression(var: !784, expr: !DIExpression())
!784 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !785, file: !818, line: 39, type: !164, isLocal: true, isDefinition: true)
!785 = distinct !DICompileUnit(language: DW_LANG_C99, file: !786, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !787, globals: !817, splitDebugInlining: false, nameTableKind: None)
!786 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!787 = !{!788, !104, !108, !805, !164}
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 32)
!789 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !790, line: 1226, baseType: !791)
!790 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!791 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !790, line: 1213, size: 352, elements: !792)
!792 = !{!793, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !791, file: !790, line: 1215, baseType: !794, size: 32)
!794 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !572)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !791, file: !790, line: 1216, baseType: !572, size: 32, offset: 32)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !791, file: !790, line: 1217, baseType: !572, size: 32, offset: 64)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !791, file: !790, line: 1218, baseType: !572, size: 32, offset: 96)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !791, file: !790, line: 1219, baseType: !572, size: 32, offset: 128)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !791, file: !790, line: 1220, baseType: !572, size: 32, offset: 160)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !791, file: !790, line: 1221, baseType: !572, size: 32, offset: 192)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !791, file: !790, line: 1222, baseType: !572, size: 32, offset: 224)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !791, file: !790, line: 1223, baseType: !572, size: 32, offset: 256)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !791, file: !790, line: 1224, baseType: !572, size: 32, offset: 288)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !791, file: !790, line: 1225, baseType: !572, size: 32, offset: 320)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 32)
!806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !807)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !808, line: 27, size: 96, elements: !809)
!808 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!809 = !{!810, !811, !812}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !807, file: !808, line: 29, baseType: !113, size: 32)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !807, file: !808, line: 31, baseType: !105, size: 32, offset: 32)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !807, file: !808, line: 37, baseType: !813, size: 32, offset: 64)
!813 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !768, line: 146, baseType: !814)
!814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !768, line: 141, size: 32, elements: !815)
!815 = !{!816}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !814, file: !768, line: 143, baseType: !113, size: 32)
!817 = !{!783}
!818 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!819 = !DIGlobalVariableExpression(var: !820, expr: !DIExpression())
!820 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !821, file: !828, line: 21, type: !558, isLocal: true, isDefinition: true)
!821 = distinct !DICompileUnit(language: DW_LANG_C99, file: !822, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !823, globals: !827, splitDebugInlining: false, nameTableKind: None)
!822 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!823 = !{!824, !108, !104}
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 32)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !826, line: 22, baseType: !108)
!826 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!827 = !{!819}
!828 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!829 = !DIGlobalVariableExpression(var: !830, expr: !DIExpression())
!830 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !831, file: !836, line: 13, type: !853, isLocal: true, isDefinition: true)
!831 = distinct !DICompileUnit(language: DW_LANG_C99, file: !832, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !833, splitDebugInlining: false, nameTableKind: None)
!832 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!833 = !{!834, !829}
!834 = !DIGlobalVariableExpression(var: !835, expr: !DIExpression())
!835 = distinct !DIGlobalVariable(name: "mpu_config", scope: !831, file: !836, line: 37, type: !837, isLocal: false, isDefinition: true)
!836 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !838)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !808, line: 41, size: 64, elements: !839)
!839 = !{!840, !841}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !838, file: !808, line: 43, baseType: !113, size: 32)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !838, file: !808, line: 45, baseType: !842, size: 32, offset: 32)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 32)
!843 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !844)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !808, line: 27, size: 96, elements: !845)
!845 = !{!846, !847, !848}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !844, file: !808, line: 29, baseType: !113, size: 32)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !844, file: !808, line: 31, baseType: !105, size: 32, offset: 32)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !844, file: !808, line: 37, baseType: !849, size: 32, offset: 64)
!849 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !768, line: 146, baseType: !850)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !768, line: 141, size: 32, elements: !851)
!851 = !{!852}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !850, file: !768, line: 143, baseType: !113, size: 32)
!853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !843, size: 192, elements: !677)
!854 = !DIGlobalVariableExpression(var: !855, expr: !DIExpression())
!855 = distinct !DIGlobalVariable(name: "log_const_rtio_executor_simple", scope: !856, file: !859, line: 12, type: !860, isLocal: false, isDefinition: true)
!856 = distinct !DICompileUnit(language: DW_LANG_C99, file: !857, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !555, globals: !858, splitDebugInlining: false, nameTableKind: None)
!857 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/rtio/rtio_executor_simple.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!858 = !{!854}
!859 = !DIFile(filename: "zephyr/subsys/rtio/rtio_executor_simple.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !861)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !862)
!862 = !{!863, !864}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !861, file: !254, line: 17, baseType: !105, size: 32)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !861, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(name: "log_const_rtio_executor_concurrent", scope: !867, file: !976, line: 13, type: !977, isLocal: false, isDefinition: true)
!867 = distinct !DICompileUnit(language: DW_LANG_C99, file: !868, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !869, globals: !975, splitDebugInlining: false, nameTableKind: None)
!868 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/rtio/rtio_executor_concurrent.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!869 = !{!870, !104, !108}
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 32)
!871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_concurrent_executor", file: !872, line: 61, size: 224, elements: !873)
!872 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio_executor_concurrent.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!873 = !{!874, !964, !966, !967, !968, !969, !971, !972, !973}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !871, file: !872, line: 62, baseType: !875, size: 32)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !876)
!876 = !{!877}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !875, file: !125, line: 211, baseType: !878, size: 32)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 32)
!879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !880)
!880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !881)
!881 = !{!882, !959, !963}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !880, file: !125, line: 177, baseType: !883, size: 32)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 32)
!884 = !DISubroutineType(types: !885)
!885 = !{!108, !886}
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 32)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !888)
!888 = !{!889, !891, !892, !948}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !887, file: !125, line: 228, baseType: !890, size: 32)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 32)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !887, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !887, file: !125, line: 254, baseType: !893, size: 32, offset: 64)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 32)
!894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !895)
!895 = !{!896, !904}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !894, file: !125, line: 143, baseType: !897, size: 160)
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !898)
!898 = !{!899, !900, !901, !902, !903}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !897, file: !151, line: 60, baseType: !24, size: 32)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !897, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !897, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !897, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !897, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !894, file: !125, line: 144, baseType: !905, offset: 160)
!905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !906, elements: !197)
!906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !907)
!907 = !{!908, !909, !910, !911, !939, !940}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !906, file: !125, line: 110, baseType: !164, size: 8)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !906, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !906, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !906, file: !125, line: 116, baseType: !912, size: 32, offset: 32)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 32)
!913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !914)
!914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !915)
!915 = !{!916, !927, !938}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !914, file: !125, line: 308, baseType: !917, size: 32)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 32)
!918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !919)
!919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !920)
!920 = !{!921}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !919, file: !125, line: 271, baseType: !922, size: 32)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 32)
!923 = !DISubroutineType(types: !924)
!924 = !{null, !925, !886}
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 32)
!926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !906)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !914, file: !125, line: 311, baseType: !928, size: 32, offset: 32)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 32)
!929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !930)
!930 = !{!931, !932}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !929, file: !125, line: 299, baseType: !897, size: 160)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !929, file: !125, line: 300, baseType: !933, offset: 160)
!933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !934, elements: !197)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !935)
!935 = !{!936, !937}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !934, file: !125, line: 289, baseType: !925, size: 32)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !934, file: !125, line: 290, baseType: !886, size: 32, offset: 32)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !914, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !906, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!940 = !DIDerivedType(tag: DW_TAG_member, scope: !906, file: !125, line: 127, baseType: !941, size: 64, offset: 96)
!941 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !906, file: !125, line: 127, size: 64, elements: !942)
!942 = !{!943}
!943 = !DIDerivedType(tag: DW_TAG_member, scope: !941, file: !125, line: 128, baseType: !944, size: 64)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !941, file: !125, line: 128, size: 64, elements: !945)
!945 = !{!946, !947}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !944, file: !125, line: 129, baseType: !113, size: 32)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !944, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !887, file: !125, line: 257, baseType: !949, size: 32, offset: 96)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 32)
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !951)
!951 = !{!952, !953}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !950, file: !125, line: 162, baseType: !897, size: 160)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !950, file: !125, line: 163, baseType: !954, offset: 160)
!954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !955, elements: !197)
!955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !956)
!956 = !{!957, !958}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !955, file: !125, line: 151, baseType: !220, size: 32)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !955, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !880, file: !125, line: 182, baseType: !960, size: 32, offset: 32)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 32)
!961 = !DISubroutineType(types: !962)
!962 = !{null, !886, !925, !108}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !880, file: !125, line: 187, baseType: !960, size: 32, offset: 64)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !871, file: !872, line: 65, baseType: !965, offset: 32)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "task_in", scope: !871, file: !872, line: 68, baseType: !168, size: 16, offset: 32)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "task_out", scope: !871, file: !872, line: 68, baseType: !168, size: 16, offset: 48)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "task_mask", scope: !871, file: !872, line: 68, baseType: !168, size: 16, offset: 64)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "pending_sqe", scope: !871, file: !872, line: 71, baseType: !970, size: 32, offset: 96)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 32)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "last_sqe", scope: !871, file: !872, line: 74, baseType: !970, size: 32, offset: 128)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "task_status", scope: !871, file: !872, line: 77, baseType: !209, size: 32, offset: 160)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "task_cur", scope: !871, file: !872, line: 80, baseType: !974, size: 32, offset: 192)
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 32)
!975 = !{!865}
!976 = !DIFile(filename: "zephyr/subsys/rtio/rtio_executor_concurrent.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !978)
!978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !979)
!979 = !{!980, !981}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !978, file: !254, line: 17, baseType: !105, size: 32)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !978, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!982 = !DIGlobalVariableExpression(var: !983, expr: !DIExpression())
!983 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !984, file: !1089, line: 72, type: !1169, isLocal: true, isDefinition: true)
!984 = distinct !DICompileUnit(language: DW_LANG_C99, file: !985, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !986, retainedTypes: !1075, globals: !1086, splitDebugInlining: false, nameTableKind: None)
!985 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!986 = !{!30, !987}
!987 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !568, line: 65, baseType: !108, size: 32, elements: !988)
!988 = !{!989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074}
!989 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!990 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!991 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!992 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!993 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!994 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!995 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!996 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!997 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!998 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!999 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!1000 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!1001 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!1002 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!1003 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!1004 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!1005 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!1006 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!1007 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!1008 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!1009 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!1010 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!1011 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!1012 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!1013 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!1014 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!1015 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!1016 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!1017 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!1018 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!1019 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!1020 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!1021 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!1022 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!1023 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!1024 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!1025 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!1026 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!1027 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!1028 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!1029 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!1030 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!1031 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!1032 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!1033 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!1034 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!1035 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!1036 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!1037 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!1038 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!1039 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!1040 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!1041 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!1042 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!1043 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!1044 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!1045 = !DIEnumerator(name: "FSMC_IRQn", value: 48)
!1046 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!1047 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!1048 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!1049 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!1050 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!1051 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!1052 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!1053 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!1054 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!1055 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!1056 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!1057 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!1058 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!1059 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!1060 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!1061 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!1062 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!1063 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!1064 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!1065 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!1066 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!1067 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!1068 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!1069 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!1070 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!1071 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!1072 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!1073 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!1074 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!1075 = !{!439, !108, !104, !1076}
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 32)
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !568, line: 354, baseType: !1078)
!1078 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !568, line: 346, size: 192, elements: !1079)
!1079 = !{!1080, !1081, !1082, !1083, !1084, !1085}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1078, file: !568, line: 348, baseType: !572, size: 32)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !1078, file: !568, line: 349, baseType: !572, size: 32, offset: 32)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !1078, file: !568, line: 350, baseType: !572, size: 32, offset: 64)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !1078, file: !568, line: 351, baseType: !572, size: 32, offset: 96)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !1078, file: !568, line: 352, baseType: !572, size: 32, offset: 128)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !1078, file: !568, line: 353, baseType: !572, size: 32, offset: 160)
!1086 = !{!1087, !1090, !1106, !1117, !1134, !982, !1136, !1149, !1151, !1153, !1155, !1157, !1159, !1161, !1163, !1165, !1167}
!1087 = !DIGlobalVariableExpression(var: !1088, expr: !DIExpression())
!1088 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_40", scope: !984, file: !1089, line: 424, type: !460, isLocal: false, isDefinition: true, align: 16)
!1089 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1090 = !DIGlobalVariableExpression(var: !1091, expr: !DIExpression())
!1091 = distinct !DIGlobalVariable(name: "__device_dts_ord_40", scope: !984, file: !1089, line: 424, type: !1092, isLocal: false, isDefinition: true, align: 32)
!1092 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1093)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1094)
!1094 = !{!1095, !1096, !1097, !1098, !1104, !1105}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1093, file: !411, line: 380, baseType: !105, size: 32)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1093, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1093, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1093, file: !411, line: 386, baseType: !1099, size: 32, offset: 96)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 32)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1101)
!1101 = !{!1102, !1103}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1100, file: !411, line: 359, baseType: !164, size: 8)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1100, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1093, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1093, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1106 = !DIGlobalVariableExpression(var: !1107, expr: !DIExpression())
!1107 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_40", scope: !984, file: !1089, line: 424, type: !1108, isLocal: true, isDefinition: true, align: 32)
!1108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1109)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1110)
!1110 = !{!1111, !1116}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1109, file: !469, line: 60, baseType: !1112, size: 32)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 32)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{!108, !1115}
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 32)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1109, file: !469, line: 65, baseType: !1115, size: 32, offset: 32)
!1117 = !DIGlobalVariableExpression(var: !1118, expr: !DIExpression())
!1118 = distinct !DIGlobalVariable(name: "exti_data", scope: !984, file: !1089, line: 423, type: !1119, isLocal: true, isDefinition: true)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !1089, line: 107, size: 1472, elements: !1120)
!1120 = !{!1121}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1119, file: !1089, line: 109, baseType: !1122, size: 1472)
!1122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1123, size: 1472, elements: !1132)
!1123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !1089, line: 101, size: 64, elements: !1124)
!1124 = !{!1125, !1131}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1123, file: !1089, line: 102, baseType: !1126, size: 32)
!1126 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !1127, line: 63, baseType: !1128)
!1127 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 32)
!1129 = !DISubroutineType(types: !1130)
!1130 = !{null, !108, !104}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1123, file: !1089, line: 103, baseType: !104, size: 32, offset: 32)
!1132 = !{!1133}
!1133 = !DISubrange(count: 23)
!1134 = !DIGlobalVariableExpression(var: !1135, expr: !DIExpression())
!1135 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_40", scope: !984, file: !1089, line: 424, type: !1100, isLocal: true, isDefinition: true, align: 8)
!1136 = !DIGlobalVariableExpression(var: !1137, expr: !DIExpression())
!1137 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !1138, file: !1089, line: 493, type: !1143, isLocal: true, isDefinition: true, align: 32)
!1138 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !1089, file: !1089, line: 460, type: !1139, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !1141)
!1139 = !DISubroutineType(types: !1140)
!1140 = !{null, !1115}
!1141 = !{!1142}
!1142 = !DILocalVariable(name: "dev", arg: 1, scope: !1138, file: !1089, line: 460, type: !1115)
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1144)
!1144 = !{!1145, !1146, !1147, !1148}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1143, file: !10, line: 55, baseType: !220, size: 32)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1143, file: !10, line: 57, baseType: !220, size: 32, offset: 32)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1143, file: !10, line: 59, baseType: !104, size: 32, offset: 64)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1143, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !1138, file: !1089, line: 497, type: !1143, isLocal: true, isDefinition: true, align: 32)
!1151 = !DIGlobalVariableExpression(var: !1152, expr: !DIExpression())
!1152 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !1138, file: !1089, line: 507, type: !1143, isLocal: true, isDefinition: true, align: 32)
!1153 = !DIGlobalVariableExpression(var: !1154, expr: !DIExpression())
!1154 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !1138, file: !1089, line: 512, type: !1143, isLocal: true, isDefinition: true, align: 32)
!1155 = !DIGlobalVariableExpression(var: !1156, expr: !DIExpression())
!1156 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !1138, file: !1089, line: 516, type: !1143, isLocal: true, isDefinition: true, align: 32)
!1157 = !DIGlobalVariableExpression(var: !1158, expr: !DIExpression())
!1158 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !1138, file: !1089, line: 523, type: !1143, isLocal: true, isDefinition: true, align: 32)
!1159 = !DIGlobalVariableExpression(var: !1160, expr: !DIExpression())
!1160 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !1138, file: !1089, line: 527, type: !1143, isLocal: true, isDefinition: true, align: 32)
!1161 = !DIGlobalVariableExpression(var: !1162, expr: !DIExpression())
!1162 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !1138, file: !1089, line: 581, type: !1143, isLocal: true, isDefinition: true, align: 32)
!1163 = !DIGlobalVariableExpression(var: !1164, expr: !DIExpression())
!1164 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !1138, file: !1089, line: 586, type: !1143, isLocal: true, isDefinition: true, align: 32)
!1165 = !DIGlobalVariableExpression(var: !1166, expr: !DIExpression())
!1166 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !1138, file: !1089, line: 591, type: !1143, isLocal: true, isDefinition: true, align: 32)
!1167 = !DIGlobalVariableExpression(var: !1168, expr: !DIExpression())
!1168 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !1138, file: !1089, line: 595, type: !1143, isLocal: true, isDefinition: true, align: 32)
!1169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1170, size: 736, elements: !1132)
!1170 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1171)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !568, line: 155, baseType: !987)
!1172 = !DIGlobalVariableExpression(var: !1173, expr: !DIExpression())
!1173 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !1174, file: !1235, line: 398, type: !1268, isLocal: true, isDefinition: true)
!1174 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1175, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1176, retainedTypes: !1189, globals: !1232, splitDebugInlining: false, nameTableKind: None)
!1175 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!1176 = !{!1177, !30, !1182}
!1177 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1178, line: 197, baseType: !32, size: 32, elements: !1179)
!1178 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1179 = !{!1180, !1181}
!1180 = !DIEnumerator(name: "SUCCESS", value: 0)
!1181 = !DIEnumerator(name: "ERROR", value: 1)
!1182 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !1183, line: 44, baseType: !32, size: 32, elements: !1184)
!1183 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1184 = !{!1185, !1186, !1187, !1188}
!1185 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!1186 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!1187 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!1188 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!1189 = !{!104, !108, !113, !1190, !1225, !1231}
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 32)
!1191 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !568, line: 532, baseType: !1192)
!1192 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !568, line: 500, size: 1088, elements: !1193)
!1193 = !{!1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1192, file: !568, line: 502, baseType: !572, size: 32)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1192, file: !568, line: 503, baseType: !572, size: 32, offset: 32)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1192, file: !568, line: 504, baseType: !572, size: 32, offset: 64)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1192, file: !568, line: 505, baseType: !572, size: 32, offset: 96)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1192, file: !568, line: 506, baseType: !572, size: 32, offset: 128)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1192, file: !568, line: 507, baseType: !572, size: 32, offset: 160)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1192, file: !568, line: 508, baseType: !572, size: 32, offset: 192)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1192, file: !568, line: 509, baseType: !113, size: 32, offset: 224)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1192, file: !568, line: 510, baseType: !572, size: 32, offset: 256)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1192, file: !568, line: 511, baseType: !572, size: 32, offset: 288)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1192, file: !568, line: 512, baseType: !1205, size: 64, offset: 320)
!1205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 64, elements: !677)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1192, file: !568, line: 513, baseType: !572, size: 32, offset: 384)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1192, file: !568, line: 514, baseType: !572, size: 32, offset: 416)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1192, file: !568, line: 515, baseType: !572, size: 32, offset: 448)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1192, file: !568, line: 516, baseType: !113, size: 32, offset: 480)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1192, file: !568, line: 517, baseType: !572, size: 32, offset: 512)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1192, file: !568, line: 518, baseType: !572, size: 32, offset: 544)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1192, file: !568, line: 519, baseType: !1205, size: 64, offset: 576)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1192, file: !568, line: 520, baseType: !572, size: 32, offset: 640)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1192, file: !568, line: 521, baseType: !572, size: 32, offset: 672)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1192, file: !568, line: 522, baseType: !572, size: 32, offset: 704)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1192, file: !568, line: 523, baseType: !113, size: 32, offset: 736)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1192, file: !568, line: 524, baseType: !572, size: 32, offset: 768)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1192, file: !568, line: 525, baseType: !572, size: 32, offset: 800)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1192, file: !568, line: 526, baseType: !1205, size: 64, offset: 832)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1192, file: !568, line: 527, baseType: !572, size: 32, offset: 896)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1192, file: !568, line: 528, baseType: !572, size: 32, offset: 928)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1192, file: !568, line: 529, baseType: !1205, size: 64, offset: 960)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1192, file: !568, line: 530, baseType: !572, size: 32, offset: 1024)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1192, file: !568, line: 531, baseType: !572, size: 32, offset: 1056)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 32)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1227, line: 343, size: 64, elements: !1228)
!1227 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1228 = !{!1229, !1230}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1226, file: !1227, line: 344, baseType: !113, size: 32)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1226, file: !1227, line: 345, baseType: !113, size: 32, offset: 32)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!1232 = !{!1233, !1239, !1255, !1266, !1172}
!1233 = !DIGlobalVariableExpression(var: !1234, expr: !DIExpression())
!1234 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !1174, file: !1235, line: 752, type: !1236, isLocal: false, isDefinition: true, align: 16)
!1235 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 928, elements: !1237)
!1237 = !{!1238}
!1238 = !DISubrange(count: 58)
!1239 = !DIGlobalVariableExpression(var: !1240, expr: !DIExpression())
!1240 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !1174, file: !1235, line: 752, type: !1241, isLocal: false, isDefinition: true, align: 32)
!1241 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1242)
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1243)
!1243 = !{!1244, !1245, !1246, !1247, !1253, !1254}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1242, file: !411, line: 380, baseType: !105, size: 32)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1242, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1242, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1242, file: !411, line: 386, baseType: !1248, size: 32, offset: 96)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 32)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1250)
!1250 = !{!1251, !1252}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1249, file: !411, line: 359, baseType: !164, size: 8)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1249, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1242, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1242, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1255 = !DIGlobalVariableExpression(var: !1256, expr: !DIExpression())
!1256 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !1174, file: !1235, line: 752, type: !1257, isLocal: true, isDefinition: true, align: 32)
!1257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1258)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1259)
!1259 = !{!1260, !1265}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1258, file: !469, line: 60, baseType: !1261, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 32)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!108, !1264}
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 32)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1258, file: !469, line: 65, baseType: !1264, size: 32, offset: 32)
!1266 = !DIGlobalVariableExpression(var: !1267, expr: !DIExpression())
!1267 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !1174, file: !1235, line: 752, type: !1249, isLocal: true, isDefinition: true, align: 8)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1183, line: 100, size: 224, elements: !1269)
!1269 = !{!1270, !1276, !1277, !1286, !1291, !1296, !1302}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1268, file: !1183, line: 101, baseType: !1271, size: 32)
!1271 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1183, line: 76, baseType: !1272)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 32)
!1273 = !DISubroutineType(types: !1274)
!1274 = !{!108, !1264, !1275}
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !1183, line: 56, baseType: !104)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1268, file: !1183, line: 102, baseType: !1271, size: 32, offset: 32)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1268, file: !1183, line: 103, baseType: !1278, size: 32, offset: 64)
!1278 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1183, line: 83, baseType: !1279)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 32)
!1280 = !DISubroutineType(types: !1281)
!1281 = !{!108, !1264, !1275, !1282, !104}
!1282 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1183, line: 72, baseType: !1283)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 32)
!1284 = !DISubroutineType(types: !1285)
!1285 = !{null, !1264, !1275, !104}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1268, file: !1183, line: 104, baseType: !1287, size: 32, offset: 96)
!1287 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1183, line: 79, baseType: !1288)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 32)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{!108, !1264, !1275, !1231}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1268, file: !1183, line: 105, baseType: !1292, size: 32, offset: 128)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1183, line: 88, baseType: !1293)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 32)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!1182, !1264, !1275}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1268, file: !1183, line: 106, baseType: !1297, size: 32, offset: 160)
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1183, line: 92, baseType: !1298)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 32)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{!108, !1264, !1275, !1301}
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !1183, line: 64, baseType: !104)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1268, file: !1183, line: 107, baseType: !1303, size: 32, offset: 192)
!1303 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1183, line: 96, baseType: !1304)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 32)
!1305 = !DISubroutineType(types: !1306)
!1306 = !{!108, !1264, !1275, !104}
!1307 = !DIGlobalVariableExpression(var: !1308, expr: !DIExpression())
!1308 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1309, file: !1366, line: 603, type: !1368, isLocal: true, isDefinition: true, align: 32)
!1309 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1310, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1311, globals: !1363, splitDebugInlining: false, nameTableKind: None)
!1310 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!1311 = !{!104, !108, !1312}
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 32)
!1313 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1314)
!1314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1315, line: 336, size: 160, elements: !1316)
!1315 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1316 = !{!1317, !1337, !1341, !1345, !1358}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1314, file: !1315, line: 365, baseType: !1318, size: 32)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 32)
!1319 = !DISubroutineType(types: !1320)
!1320 = !{!108, !1321, !1336}
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 32)
!1322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1323)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1324)
!1324 = !{!1325, !1326, !1327, !1328, !1334, !1335}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1323, file: !411, line: 380, baseType: !105, size: 32)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1323, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1323, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1323, file: !411, line: 386, baseType: !1329, size: 32, offset: 96)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 32)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1331)
!1331 = !{!1332, !1333}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1330, file: !411, line: 359, baseType: !164, size: 8)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1330, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1323, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1323, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 32)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1314, file: !1315, line: 366, baseType: !1338, size: 32, offset: 32)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 32)
!1339 = !DISubroutineType(types: !1340)
!1340 = !{null, !1321, !165}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1314, file: !1315, line: 374, baseType: !1342, size: 32, offset: 64)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 32)
!1343 = !DISubroutineType(types: !1344)
!1344 = !{!108, !1321}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1314, file: !1315, line: 377, baseType: !1346, size: 32, offset: 96)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 32)
!1347 = !DISubroutineType(types: !1348)
!1348 = !{!108, !1321, !1349}
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 32)
!1350 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1351)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1315, line: 122, size: 64, elements: !1352)
!1352 = !{!1353, !1354, !1355, !1356, !1357}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1351, file: !1315, line: 123, baseType: !113, size: 32)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1351, file: !1315, line: 124, baseType: !164, size: 8, offset: 32)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1351, file: !1315, line: 125, baseType: !164, size: 8, offset: 40)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1351, file: !1315, line: 126, baseType: !164, size: 8, offset: 48)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1351, file: !1315, line: 127, baseType: !164, size: 8, offset: 56)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1314, file: !1315, line: 379, baseType: !1359, size: 32, offset: 128)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 32)
!1360 = !DISubroutineType(types: !1361)
!1361 = !{!108, !1321, !1362}
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 32)
!1363 = !{!1307, !1364}
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1309, file: !1366, line: 38, type: !1367, isLocal: true, isDefinition: true)
!1366 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1367 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1321)
!1368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1369)
!1369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1370)
!1370 = !{!1371, !1372}
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1369, file: !469, line: 60, baseType: !1342, size: 32)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1369, file: !469, line: 65, baseType: !1321, size: 32, offset: 32)
!1373 = !DIGlobalVariableExpression(var: !1374, expr: !DIExpression())
!1374 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1375, file: !1544, line: 762, type: !1663, isLocal: true, isDefinition: true)
!1375 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1376, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1377, retainedTypes: !1395, globals: !1541, splitDebugInlining: false, nameTableKind: None)
!1376 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!1377 = !{!30, !1378, !1384, !1389, !1182}
!1378 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1379, line: 506, baseType: !32, size: 32, elements: !1380)
!1379 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1380 = !{!1381, !1382, !1383}
!1381 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1382 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1383 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1379, line: 512, baseType: !32, size: 32, elements: !1385)
!1385 = !{!1386, !1387, !1388}
!1386 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1387 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1388 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1389 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !1127, line: 43, baseType: !32, size: 32, elements: !1390)
!1390 = !{!1391, !1392, !1393, !1394}
!1391 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1392 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1393 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1394 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1395 = !{!104, !108, !1396, !1466, !1471, !1431, !1384, !1378, !1476, !1477, !113, !1491, !1446, !443, !1501, !1502}
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 32)
!1397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1398)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1379, line: 523, size: 288, elements: !1399)
!1399 = !{!1400, !1421, !1427, !1432, !1436, !1437, !1438, !1442, !1462}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1398, file: !1379, line: 524, baseType: !1401, size: 32)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 32)
!1402 = !DISubroutineType(types: !1403)
!1403 = !{!108, !1404, !1419, !1420}
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 32)
!1405 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1406)
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1407)
!1407 = !{!1408, !1409, !1410, !1411, !1417, !1418}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1406, file: !411, line: 380, baseType: !105, size: 32)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1406, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1406, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1406, file: !411, line: 386, baseType: !1412, size: 32, offset: 96)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 32)
!1413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1414)
!1414 = !{!1415, !1416}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1413, file: !411, line: 359, baseType: !164, size: 8)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1413, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1406, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1406, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1419 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1379, line: 237, baseType: !164)
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1379, line: 257, baseType: !113)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1398, file: !1379, line: 530, baseType: !1422, size: 32, offset: 32)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 32)
!1423 = !DISubroutineType(types: !1424)
!1424 = !{!108, !1404, !1425}
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 32)
!1426 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1379, line: 229, baseType: !113)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1398, file: !1379, line: 532, baseType: !1428, size: 32, offset: 64)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 32)
!1429 = !DISubroutineType(types: !1430)
!1430 = !{!108, !1404, !1431, !1426}
!1431 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1379, line: 216, baseType: !113)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1398, file: !1379, line: 535, baseType: !1433, size: 32, offset: 96)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 32)
!1434 = !DISubroutineType(types: !1435)
!1435 = !{!108, !1404, !1431}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1398, file: !1379, line: 537, baseType: !1433, size: 32, offset: 128)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1398, file: !1379, line: 539, baseType: !1433, size: 32, offset: 160)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1398, file: !1379, line: 541, baseType: !1439, size: 32, offset: 192)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 32)
!1440 = !DISubroutineType(types: !1441)
!1441 = !{!108, !1404, !1419, !1378, !1384}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1398, file: !1379, line: 544, baseType: !1443, size: 32, offset: 224)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 32)
!1444 = !DISubroutineType(types: !1445)
!1445 = !{!108, !1404, !1446, !422}
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 32)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1379, line: 478, size: 96, elements: !1448)
!1448 = !{!1449, !1456, !1461}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1447, file: !1379, line: 482, baseType: !1450, size: 32)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1451, line: 33, baseType: !1452)
!1451 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1451, line: 29, size: 32, elements: !1453)
!1453 = !{!1454}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1452, file: !1451, line: 30, baseType: !1455, size: 32)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 32)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1447, file: !1379, line: 485, baseType: !1457, size: 32, offset: 32)
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1379, line: 464, baseType: !1458)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 32)
!1459 = !DISubroutineType(types: !1460)
!1460 = !{null, !1404, !1446, !1431}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1447, file: !1379, line: 493, baseType: !1431, size: 32, offset: 64)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1398, file: !1379, line: 547, baseType: !1463, size: 32, offset: 256)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 32)
!1464 = !DISubroutineType(types: !1465)
!1465 = !{!113, !1404}
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 32)
!1467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1468)
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1379, line: 428, size: 32, elements: !1469)
!1469 = !{!1470}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1468, file: !1379, line: 434, baseType: !1431, size: 32)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 32)
!1472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1473)
!1473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1379, line: 441, size: 32, elements: !1474)
!1474 = !{!1475}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1473, file: !1379, line: 447, baseType: !1431, size: 32)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 32)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 32)
!1478 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !568, line: 441, baseType: !1479)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !568, line: 430, size: 320, elements: !1480)
!1480 = !{!1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1479, file: !568, line: 432, baseType: !572, size: 32)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1479, file: !568, line: 433, baseType: !572, size: 32, offset: 32)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1479, file: !568, line: 434, baseType: !572, size: 32, offset: 64)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1479, file: !568, line: 435, baseType: !572, size: 32, offset: 96)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1479, file: !568, line: 436, baseType: !572, size: 32, offset: 128)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1479, file: !568, line: 437, baseType: !572, size: 32, offset: 160)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1479, file: !568, line: 438, baseType: !572, size: 32, offset: 192)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1479, file: !568, line: 439, baseType: !572, size: 32, offset: 224)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1479, file: !568, line: 440, baseType: !1490, size: 64, offset: 256)
!1490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !572, size: 64, elements: !677)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 32)
!1492 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !568, line: 454, baseType: !1493)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !568, line: 447, size: 288, elements: !1494)
!1494 = !{!1495, !1496, !1497, !1499, !1500}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1493, file: !568, line: 449, baseType: !572, size: 32)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1493, file: !568, line: 450, baseType: !572, size: 32, offset: 32)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1493, file: !568, line: 451, baseType: !1498, size: 128, offset: 64)
!1498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !572, size: 128, elements: !461)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1493, file: !568, line: 452, baseType: !1205, size: 64, offset: 192)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1493, file: !568, line: 453, baseType: !572, size: 32, offset: 256)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 32)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 32)
!1503 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1504)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1183, line: 100, size: 224, elements: !1505)
!1505 = !{!1506, !1511, !1512, !1521, !1526, !1531, !1536}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1504, file: !1183, line: 101, baseType: !1507, size: 32)
!1507 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1183, line: 76, baseType: !1508)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 32)
!1509 = !DISubroutineType(types: !1510)
!1510 = !{!108, !1404, !1275}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1504, file: !1183, line: 102, baseType: !1507, size: 32, offset: 32)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1504, file: !1183, line: 103, baseType: !1513, size: 32, offset: 64)
!1513 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1183, line: 83, baseType: !1514)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 32)
!1515 = !DISubroutineType(types: !1516)
!1516 = !{!108, !1404, !1275, !1517, !104}
!1517 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1183, line: 72, baseType: !1518)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 32)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{null, !1404, !1275, !104}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1504, file: !1183, line: 104, baseType: !1522, size: 32, offset: 96)
!1522 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1183, line: 79, baseType: !1523)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 32)
!1524 = !DISubroutineType(types: !1525)
!1525 = !{!108, !1404, !1275, !1231}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1504, file: !1183, line: 105, baseType: !1527, size: 32, offset: 128)
!1527 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1183, line: 88, baseType: !1528)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 32)
!1529 = !DISubroutineType(types: !1530)
!1530 = !{!1182, !1404, !1275}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1504, file: !1183, line: 106, baseType: !1532, size: 32, offset: 160)
!1532 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1183, line: 92, baseType: !1533)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 32)
!1534 = !DISubroutineType(types: !1535)
!1535 = !{!108, !1404, !1275, !1301}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1504, file: !1183, line: 107, baseType: !1537, size: 32, offset: 192)
!1537 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1183, line: 96, baseType: !1538)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 32)
!1539 = !DISubroutineType(types: !1540)
!1540 = !{!108, !1404, !1275, !104}
!1541 = !{!1542, !1548, !1550, !1560, !1565, !1567, !1569, !1571, !1573, !1575, !1577, !1579, !1581, !1583, !1585, !1587, !1589, !1591, !1593, !1595, !1597, !1599, !1601, !1603, !1605, !1607, !1609, !1611, !1625, !1627, !1629, !1631, !1633, !1635, !1637, !1639, !1641, !1643, !1645, !1647, !1649, !1651, !1653, !1655, !1657, !1373, !1659, !1661, !1674, !1676, !1678, !1680, !1682, !1684, !1686}
!1542 = !DIGlobalVariableExpression(var: !1543, expr: !DIExpression())
!1543 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !1375, file: !1544, line: 762, type: !1545, isLocal: false, isDefinition: true, align: 16)
!1544 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 96, elements: !1546)
!1546 = !{!1547}
!1547 = !DISubrange(count: 6)
!1548 = !DIGlobalVariableExpression(var: !1549, expr: !DIExpression())
!1549 = distinct !DIGlobalVariable(name: "__device_dts_ord_77", scope: !1375, file: !1544, line: 762, type: !1405, isLocal: false, isDefinition: true, align: 32)
!1550 = !DIGlobalVariableExpression(var: !1551, expr: !DIExpression())
!1551 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_77", scope: !1375, file: !1544, line: 762, type: !1552, isLocal: true, isDefinition: true, align: 32)
!1552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1553)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1554)
!1554 = !{!1555, !1559}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1553, file: !469, line: 60, baseType: !1556, size: 32)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 32)
!1557 = !DISubroutineType(types: !1558)
!1558 = !{!108, !1404}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1553, file: !469, line: 65, baseType: !1404, size: 32, offset: 32)
!1560 = !DIGlobalVariableExpression(var: !1561, expr: !DIExpression())
!1561 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1375, file: !1544, line: 766, type: !1562, isLocal: false, isDefinition: true, align: 16)
!1562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 80, elements: !1563)
!1563 = !{!1564}
!1564 = !DISubrange(count: 5)
!1565 = !DIGlobalVariableExpression(var: !1566, expr: !DIExpression())
!1566 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1375, file: !1544, line: 766, type: !1405, isLocal: false, isDefinition: true, align: 32)
!1567 = !DIGlobalVariableExpression(var: !1568, expr: !DIExpression())
!1568 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1375, file: !1544, line: 766, type: !1552, isLocal: true, isDefinition: true, align: 32)
!1569 = !DIGlobalVariableExpression(var: !1570, expr: !DIExpression())
!1570 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !1375, file: !1544, line: 770, type: !1545, isLocal: false, isDefinition: true, align: 16)
!1571 = !DIGlobalVariableExpression(var: !1572, expr: !DIExpression())
!1572 = distinct !DIGlobalVariable(name: "__device_dts_ord_24", scope: !1375, file: !1544, line: 770, type: !1405, isLocal: false, isDefinition: true, align: 32)
!1573 = !DIGlobalVariableExpression(var: !1574, expr: !DIExpression())
!1574 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_24", scope: !1375, file: !1544, line: 770, type: !1552, isLocal: true, isDefinition: true, align: 32)
!1575 = !DIGlobalVariableExpression(var: !1576, expr: !DIExpression())
!1576 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1375, file: !1544, line: 774, type: !1562, isLocal: false, isDefinition: true, align: 16)
!1577 = !DIGlobalVariableExpression(var: !1578, expr: !DIExpression())
!1578 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1375, file: !1544, line: 774, type: !1405, isLocal: false, isDefinition: true, align: 32)
!1579 = !DIGlobalVariableExpression(var: !1580, expr: !DIExpression())
!1580 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1375, file: !1544, line: 774, type: !1552, isLocal: true, isDefinition: true, align: 32)
!1581 = !DIGlobalVariableExpression(var: !1582, expr: !DIExpression())
!1582 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1375, file: !1544, line: 778, type: !1562, isLocal: false, isDefinition: true, align: 16)
!1583 = !DIGlobalVariableExpression(var: !1584, expr: !DIExpression())
!1584 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1375, file: !1544, line: 778, type: !1405, isLocal: false, isDefinition: true, align: 32)
!1585 = !DIGlobalVariableExpression(var: !1586, expr: !DIExpression())
!1586 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1375, file: !1544, line: 778, type: !1552, isLocal: true, isDefinition: true, align: 32)
!1587 = !DIGlobalVariableExpression(var: !1588, expr: !DIExpression())
!1588 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1375, file: !1544, line: 782, type: !1562, isLocal: false, isDefinition: true, align: 16)
!1589 = !DIGlobalVariableExpression(var: !1590, expr: !DIExpression())
!1590 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1375, file: !1544, line: 782, type: !1405, isLocal: false, isDefinition: true, align: 32)
!1591 = !DIGlobalVariableExpression(var: !1592, expr: !DIExpression())
!1592 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1375, file: !1544, line: 782, type: !1552, isLocal: true, isDefinition: true, align: 32)
!1593 = !DIGlobalVariableExpression(var: !1594, expr: !DIExpression())
!1594 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !1375, file: !1544, line: 786, type: !1562, isLocal: false, isDefinition: true, align: 16)
!1595 = !DIGlobalVariableExpression(var: !1596, expr: !DIExpression())
!1596 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !1375, file: !1544, line: 786, type: !1405, isLocal: false, isDefinition: true, align: 32)
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !1375, file: !1544, line: 786, type: !1552, isLocal: true, isDefinition: true, align: 32)
!1599 = !DIGlobalVariableExpression(var: !1600, expr: !DIExpression())
!1600 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1375, file: !1544, line: 790, type: !1562, isLocal: false, isDefinition: true, align: 16)
!1601 = !DIGlobalVariableExpression(var: !1602, expr: !DIExpression())
!1602 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1375, file: !1544, line: 790, type: !1405, isLocal: false, isDefinition: true, align: 32)
!1603 = !DIGlobalVariableExpression(var: !1604, expr: !DIExpression())
!1604 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1375, file: !1544, line: 790, type: !1552, isLocal: true, isDefinition: true, align: 32)
!1605 = !DIGlobalVariableExpression(var: !1606, expr: !DIExpression())
!1606 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1375, file: !1544, line: 794, type: !1562, isLocal: false, isDefinition: true, align: 16)
!1607 = !DIGlobalVariableExpression(var: !1608, expr: !DIExpression())
!1608 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1375, file: !1544, line: 794, type: !1405, isLocal: false, isDefinition: true, align: 32)
!1609 = !DIGlobalVariableExpression(var: !1610, expr: !DIExpression())
!1610 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1375, file: !1544, line: 794, type: !1552, isLocal: true, isDefinition: true, align: 32)
!1611 = !DIGlobalVariableExpression(var: !1612, expr: !DIExpression())
!1612 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1375, file: !1544, line: 762, type: !1613, isLocal: true, isDefinition: true)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1614, line: 237, size: 128, elements: !1615)
!1614 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1615 = !{!1616, !1617, !1618}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1613, file: !1614, line: 239, baseType: !1473, size: 32)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1613, file: !1614, line: 241, baseType: !1404, size: 32, offset: 32)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1613, file: !1614, line: 243, baseType: !1619, size: 64, offset: 64)
!1619 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1451, line: 40, baseType: !1620)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1451, line: 35, size: 64, elements: !1621)
!1621 = !{!1622, !1624}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1620, file: !1451, line: 36, baseType: !1623, size: 32)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 32)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1620, file: !1451, line: 37, baseType: !1623, size: 32, offset: 32)
!1625 = !DIGlobalVariableExpression(var: !1626, expr: !DIExpression())
!1626 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_77", scope: !1375, file: !1544, line: 762, type: !1413, isLocal: true, isDefinition: true, align: 8)
!1627 = !DIGlobalVariableExpression(var: !1628, expr: !DIExpression())
!1628 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1375, file: !1544, line: 766, type: !1613, isLocal: true, isDefinition: true)
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1375, file: !1544, line: 766, type: !1413, isLocal: true, isDefinition: true, align: 8)
!1631 = !DIGlobalVariableExpression(var: !1632, expr: !DIExpression())
!1632 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1375, file: !1544, line: 770, type: !1613, isLocal: true, isDefinition: true)
!1633 = !DIGlobalVariableExpression(var: !1634, expr: !DIExpression())
!1634 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_24", scope: !1375, file: !1544, line: 770, type: !1413, isLocal: true, isDefinition: true, align: 8)
!1635 = !DIGlobalVariableExpression(var: !1636, expr: !DIExpression())
!1636 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1375, file: !1544, line: 774, type: !1613, isLocal: true, isDefinition: true)
!1637 = !DIGlobalVariableExpression(var: !1638, expr: !DIExpression())
!1638 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1375, file: !1544, line: 774, type: !1413, isLocal: true, isDefinition: true, align: 8)
!1639 = !DIGlobalVariableExpression(var: !1640, expr: !DIExpression())
!1640 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1375, file: !1544, line: 778, type: !1613, isLocal: true, isDefinition: true)
!1641 = !DIGlobalVariableExpression(var: !1642, expr: !DIExpression())
!1642 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1375, file: !1544, line: 778, type: !1413, isLocal: true, isDefinition: true, align: 8)
!1643 = !DIGlobalVariableExpression(var: !1644, expr: !DIExpression())
!1644 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1375, file: !1544, line: 782, type: !1613, isLocal: true, isDefinition: true)
!1645 = !DIGlobalVariableExpression(var: !1646, expr: !DIExpression())
!1646 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1375, file: !1544, line: 782, type: !1413, isLocal: true, isDefinition: true, align: 8)
!1647 = !DIGlobalVariableExpression(var: !1648, expr: !DIExpression())
!1648 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1375, file: !1544, line: 786, type: !1613, isLocal: true, isDefinition: true)
!1649 = !DIGlobalVariableExpression(var: !1650, expr: !DIExpression())
!1650 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !1375, file: !1544, line: 786, type: !1413, isLocal: true, isDefinition: true, align: 8)
!1651 = !DIGlobalVariableExpression(var: !1652, expr: !DIExpression())
!1652 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1375, file: !1544, line: 790, type: !1613, isLocal: true, isDefinition: true)
!1653 = !DIGlobalVariableExpression(var: !1654, expr: !DIExpression())
!1654 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1375, file: !1544, line: 790, type: !1413, isLocal: true, isDefinition: true, align: 8)
!1655 = !DIGlobalVariableExpression(var: !1656, expr: !DIExpression())
!1656 = distinct !DIGlobalVariable(name: "gpio_stm32_data_i", scope: !1375, file: !1544, line: 794, type: !1613, isLocal: true, isDefinition: true)
!1657 = !DIGlobalVariableExpression(var: !1658, expr: !DIExpression())
!1658 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1375, file: !1544, line: 794, type: !1413, isLocal: true, isDefinition: true, align: 8)
!1659 = !DIGlobalVariableExpression(var: !1660, expr: !DIExpression())
!1660 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1375, file: !1544, line: 656, type: !1397, isLocal: true, isDefinition: true)
!1661 = !DIGlobalVariableExpression(var: !1662, expr: !DIExpression())
!1662 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1375, file: !1544, line: 766, type: !1663, isLocal: true, isDefinition: true)
!1663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1664)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1614, line: 224, size: 160, elements: !1665)
!1665 = !{!1666, !1667, !1668, !1669}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1664, file: !1614, line: 226, baseType: !1468, size: 32)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1664, file: !1614, line: 228, baseType: !1231, size: 32, offset: 32)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1664, file: !1614, line: 230, baseType: !108, size: 32, offset: 64)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1664, file: !1614, line: 231, baseType: !1670, size: 64, offset: 96)
!1670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1227, line: 343, size: 64, elements: !1671)
!1671 = !{!1672, !1673}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1670, file: !1227, line: 344, baseType: !113, size: 32)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1670, file: !1227, line: 345, baseType: !113, size: 32, offset: 32)
!1674 = !DIGlobalVariableExpression(var: !1675, expr: !DIExpression())
!1675 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1375, file: !1544, line: 770, type: !1663, isLocal: true, isDefinition: true)
!1676 = !DIGlobalVariableExpression(var: !1677, expr: !DIExpression())
!1677 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1375, file: !1544, line: 774, type: !1663, isLocal: true, isDefinition: true)
!1678 = !DIGlobalVariableExpression(var: !1679, expr: !DIExpression())
!1679 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1375, file: !1544, line: 778, type: !1663, isLocal: true, isDefinition: true)
!1680 = !DIGlobalVariableExpression(var: !1681, expr: !DIExpression())
!1681 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1375, file: !1544, line: 782, type: !1663, isLocal: true, isDefinition: true)
!1682 = !DIGlobalVariableExpression(var: !1683, expr: !DIExpression())
!1683 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1375, file: !1544, line: 786, type: !1663, isLocal: true, isDefinition: true)
!1684 = !DIGlobalVariableExpression(var: !1685, expr: !DIExpression())
!1685 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1375, file: !1544, line: 790, type: !1663, isLocal: true, isDefinition: true)
!1686 = !DIGlobalVariableExpression(var: !1687, expr: !DIExpression())
!1687 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_i", scope: !1375, file: !1544, line: 794, type: !1663, isLocal: true, isDefinition: true)
!1688 = !DIGlobalVariableExpression(var: !1689, expr: !DIExpression())
!1689 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1690, file: !1829, line: 44, type: !1905, isLocal: false, isDefinition: true)
!1690 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1691, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1692, retainedTypes: !1725, globals: !1826, splitDebugInlining: false, nameTableKind: None)
!1691 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!1692 = !{!30, !1693, !1700, !1707, !1714, !1720, !1182}
!1693 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1315, line: 47, baseType: !32, size: 32, elements: !1694)
!1694 = !{!1695, !1696, !1697, !1698, !1699}
!1695 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1696 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1697 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1698 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1699 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1700 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1315, line: 75, baseType: !32, size: 32, elements: !1701)
!1701 = !{!1702, !1703, !1704, !1705, !1706}
!1702 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1703 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1704 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1705 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1706 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1707 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1315, line: 92, baseType: !32, size: 32, elements: !1708)
!1708 = !{!1709, !1710, !1711, !1712, !1713}
!1709 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1710 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1711 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1712 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1713 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1714 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1315, line: 84, baseType: !32, size: 32, elements: !1715)
!1715 = !{!1716, !1717, !1718, !1719}
!1716 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1717 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1718 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1719 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1720 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1315, line: 107, baseType: !32, size: 32, elements: !1721)
!1721 = !{!1722, !1723, !1724}
!1722 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1723 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1724 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1725 = !{!104, !108, !1726, !165, !164, !1775, !113, !1275, !1786, !168, !114, !1825}
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 32)
!1727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1728)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1315, line: 336, size: 160, elements: !1729)
!1729 = !{!1730, !1749, !1753, !1757, !1770}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1728, file: !1315, line: 365, baseType: !1731, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 32)
!1732 = !DISubroutineType(types: !1733)
!1733 = !{!108, !1734, !1336}
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 32)
!1735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1736)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1737)
!1737 = !{!1738, !1739, !1740, !1741, !1747, !1748}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1736, file: !411, line: 380, baseType: !105, size: 32)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1736, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1736, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1736, file: !411, line: 386, baseType: !1742, size: 32, offset: 96)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 32)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1744)
!1744 = !{!1745, !1746}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1743, file: !411, line: 359, baseType: !164, size: 8)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1743, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1736, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1736, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1728, file: !1315, line: 366, baseType: !1750, size: 32, offset: 32)
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 32)
!1751 = !DISubroutineType(types: !1752)
!1752 = !{null, !1734, !165}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1728, file: !1315, line: 374, baseType: !1754, size: 32, offset: 64)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 32)
!1755 = !DISubroutineType(types: !1756)
!1756 = !{!108, !1734}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1728, file: !1315, line: 377, baseType: !1758, size: 32, offset: 96)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 32)
!1759 = !DISubroutineType(types: !1760)
!1760 = !{!108, !1734, !1761}
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 32)
!1762 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1763)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1315, line: 122, size: 64, elements: !1764)
!1764 = !{!1765, !1766, !1767, !1768, !1769}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1763, file: !1315, line: 123, baseType: !113, size: 32)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1763, file: !1315, line: 124, baseType: !164, size: 8, offset: 32)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1763, file: !1315, line: 125, baseType: !164, size: 8, offset: 40)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1763, file: !1315, line: 126, baseType: !164, size: 8, offset: 48)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1763, file: !1315, line: 127, baseType: !164, size: 8, offset: 56)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1728, file: !1315, line: 379, baseType: !1771, size: 32, offset: 128)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 32)
!1772 = !DISubroutineType(types: !1773)
!1773 = !{!108, !1734, !1774}
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 32)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 32)
!1776 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !568, line: 670, baseType: !1777)
!1777 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !568, line: 661, size: 224, elements: !1778)
!1778 = !{!1779, !1780, !1781, !1782, !1783, !1784, !1785}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1777, file: !568, line: 663, baseType: !572, size: 32)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1777, file: !568, line: 664, baseType: !572, size: 32, offset: 32)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1777, file: !568, line: 665, baseType: !572, size: 32, offset: 64)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1777, file: !568, line: 666, baseType: !572, size: 32, offset: 96)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1777, file: !568, line: 667, baseType: !572, size: 32, offset: 128)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1777, file: !568, line: 668, baseType: !572, size: 32, offset: 160)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1777, file: !568, line: 669, baseType: !572, size: 32, offset: 192)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 32)
!1787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1788)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1183, line: 100, size: 224, elements: !1789)
!1789 = !{!1790, !1795, !1796, !1805, !1810, !1815, !1820}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1788, file: !1183, line: 101, baseType: !1791, size: 32)
!1791 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1183, line: 76, baseType: !1792)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 32)
!1793 = !DISubroutineType(types: !1794)
!1794 = !{!108, !1734, !1275}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1788, file: !1183, line: 102, baseType: !1791, size: 32, offset: 32)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1788, file: !1183, line: 103, baseType: !1797, size: 32, offset: 64)
!1797 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1183, line: 83, baseType: !1798)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 32)
!1799 = !DISubroutineType(types: !1800)
!1800 = !{!108, !1734, !1275, !1801, !104}
!1801 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1183, line: 72, baseType: !1802)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 32)
!1803 = !DISubroutineType(types: !1804)
!1804 = !{null, !1734, !1275, !104}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1788, file: !1183, line: 104, baseType: !1806, size: 32, offset: 96)
!1806 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1183, line: 79, baseType: !1807)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 32)
!1808 = !DISubroutineType(types: !1809)
!1809 = !{!108, !1734, !1275, !1231}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1788, file: !1183, line: 105, baseType: !1811, size: 32, offset: 128)
!1811 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1183, line: 88, baseType: !1812)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 32)
!1813 = !DISubroutineType(types: !1814)
!1814 = !{!1182, !1734, !1275}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1788, file: !1183, line: 106, baseType: !1816, size: 32, offset: 160)
!1816 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1183, line: 92, baseType: !1817)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 32)
!1818 = !DISubroutineType(types: !1819)
!1819 = !{!108, !1734, !1275, !1301}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1788, file: !1183, line: 107, baseType: !1821, size: 32, offset: 192)
!1821 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1183, line: 96, baseType: !1822)
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 32)
!1823 = !DISubroutineType(types: !1824)
!1824 = !{!108, !1734, !1275, !104}
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 32)
!1826 = !{!1688, !1827, !1831, !1833, !1840, !1842, !1886, !1889, !1891, !1894, !1897, !1899}
!1827 = !DIGlobalVariableExpression(var: !1828, expr: !DIExpression())
!1828 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1690, file: !1829, line: 1914, type: !1830, isLocal: false, isDefinition: true, align: 16)
!1829 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 128, elements: !244)
!1831 = !DIGlobalVariableExpression(var: !1832, expr: !DIExpression())
!1832 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !1690, file: !1829, line: 1914, type: !1735, isLocal: false, isDefinition: true, align: 32)
!1833 = !DIGlobalVariableExpression(var: !1834, expr: !DIExpression())
!1834 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !1690, file: !1829, line: 1914, type: !1835, isLocal: true, isDefinition: true, align: 32)
!1835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1836)
!1836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1837)
!1837 = !{!1838, !1839}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1836, file: !469, line: 60, baseType: !1754, size: 32)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1836, file: !469, line: 65, baseType: !1734, size: 32, offset: 32)
!1840 = !DIGlobalVariableExpression(var: !1841, expr: !DIExpression())
!1841 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !1690, file: !1829, line: 1914, type: !1743, isLocal: true, isDefinition: true, align: 8)
!1842 = !DIGlobalVariableExpression(var: !1843, expr: !DIExpression())
!1843 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1690, file: !1829, line: 1914, type: !1844, isLocal: true, isDefinition: true)
!1844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1845)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1846, line: 22, size: 224, elements: !1847)
!1846 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1847 = !{!1848, !1849, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1845, file: !1846, line: 24, baseType: !1775, size: 32)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1845, file: !1846, line: 26, baseType: !1850, size: 32, offset: 32)
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 32)
!1851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1852)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1227, line: 343, size: 64, elements: !1853)
!1853 = !{!1854, !1855}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1852, file: !1227, line: 344, baseType: !113, size: 32)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1852, file: !1227, line: 345, baseType: !113, size: 32, offset: 32)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1845, file: !1846, line: 28, baseType: !439, size: 32, offset: 64)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1845, file: !1846, line: 30, baseType: !422, size: 8, offset: 96)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1845, file: !1846, line: 32, baseType: !108, size: 32, offset: 128)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1845, file: !1846, line: 34, baseType: !422, size: 8, offset: 160)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1845, file: !1846, line: 36, baseType: !422, size: 8, offset: 168)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1845, file: !1846, line: 38, baseType: !422, size: 8, offset: 176)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1845, file: !1846, line: 40, baseType: !422, size: 8, offset: 184)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1845, file: !1846, line: 41, baseType: !1864, size: 32, offset: 192)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 32)
!1865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1866)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1867, line: 60, size: 64, elements: !1868)
!1867 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1868 = !{!1869, !1885}
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1866, file: !1867, line: 69, baseType: !1870, size: 32)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 32)
!1871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1872)
!1872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1867, line: 50, size: 64, elements: !1873)
!1873 = !{!1874, !1883, !1884}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1872, file: !1867, line: 52, baseType: !1875, size: 32)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 32)
!1876 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1877)
!1877 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1878, line: 37, baseType: !1879)
!1878 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1878, line: 32, size: 64, elements: !1880)
!1880 = !{!1881, !1882}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1879, file: !1878, line: 34, baseType: !113, size: 32)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1879, file: !1878, line: 36, baseType: !113, size: 32, offset: 32)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1872, file: !1867, line: 54, baseType: !164, size: 8, offset: 32)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1872, file: !1867, line: 56, baseType: !164, size: 8, offset: 40)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1866, file: !1867, line: 71, baseType: !164, size: 8, offset: 32)
!1886 = !DIGlobalVariableExpression(var: !1887, expr: !DIExpression())
!1887 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1690, file: !1829, line: 1914, type: !1888, isLocal: true, isDefinition: true)
!1888 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1851, size: 64, elements: !772)
!1889 = !DIGlobalVariableExpression(var: !1890, expr: !DIExpression())
!1890 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !1690, file: !1829, line: 1914, type: !1865, isLocal: true, isDefinition: true)
!1891 = !DIGlobalVariableExpression(var: !1892, expr: !DIExpression())
!1892 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !1690, file: !1829, line: 1914, type: !1893, isLocal: true, isDefinition: true)
!1893 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1871, size: 64, elements: !772)
!1894 = !DIGlobalVariableExpression(var: !1895, expr: !DIExpression())
!1895 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !1690, file: !1829, line: 1914, type: !1896, isLocal: true, isDefinition: true)
!1896 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1876, size: 128, elements: !677)
!1897 = !DIGlobalVariableExpression(var: !1898, expr: !DIExpression())
!1898 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1690, file: !1829, line: 1539, type: !1727, isLocal: true, isDefinition: true)
!1899 = !DIGlobalVariableExpression(var: !1900, expr: !DIExpression())
!1900 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1690, file: !1829, line: 1914, type: !1901, isLocal: true, isDefinition: true)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1846, line: 74, size: 64, elements: !1902)
!1902 = !{!1903, !1904}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1901, file: !1846, line: 76, baseType: !113, size: 32)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1901, file: !1846, line: 78, baseType: !1734, size: 32, offset: 32)
!1905 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1906)
!1906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !1907)
!1907 = !{!1908, !1909}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1906, file: !254, line: 17, baseType: !105, size: 32)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1906, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!1910 = !DIGlobalVariableExpression(var: !1911, expr: !DIExpression())
!1911 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1912, file: !1990, line: 65, type: !572, isLocal: true, isDefinition: true)
!1912 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1913, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1914, retainedTypes: !1915, globals: !1987, splitDebugInlining: false, nameTableKind: None)
!1913 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!1914 = !{!987}
!1915 = !{!109, !1916, !220, !164, !113, !1924, !1955}
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 32)
!1917 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !790, line: 770, baseType: !1918)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !790, line: 764, size: 128, elements: !1919)
!1919 = !{!1920, !1921, !1922, !1923}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1918, file: !790, line: 766, baseType: !572, size: 32)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1918, file: !790, line: 767, baseType: !572, size: 32, offset: 32)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1918, file: !790, line: 768, baseType: !572, size: 32, offset: 64)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1918, file: !790, line: 769, baseType: !794, size: 32, offset: 96)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 32)
!1925 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !790, line: 426, baseType: !1926)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !790, line: 411, size: 28704, elements: !1927)
!1927 = !{!1928, !1930, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1945, !1950, !1954}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1926, file: !790, line: 413, baseType: !1929, size: 256)
!1929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !572, size: 256, elements: !244)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1926, file: !790, line: 414, baseType: !1931, size: 768, offset: 256)
!1931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 768, elements: !1932)
!1932 = !{!1933}
!1933 = !DISubrange(count: 24)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1926, file: !790, line: 415, baseType: !1929, size: 256, offset: 1024)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1926, file: !790, line: 416, baseType: !1931, size: 768, offset: 1280)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1926, file: !790, line: 417, baseType: !1929, size: 256, offset: 2048)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1926, file: !790, line: 418, baseType: !1931, size: 768, offset: 2304)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1926, file: !790, line: 419, baseType: !1929, size: 256, offset: 3072)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1926, file: !790, line: 420, baseType: !1931, size: 768, offset: 3328)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1926, file: !790, line: 421, baseType: !1929, size: 256, offset: 4096)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1926, file: !790, line: 422, baseType: !1942, size: 1792, offset: 4352)
!1942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 1792, elements: !1943)
!1943 = !{!1944}
!1944 = !DISubrange(count: 56)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1926, file: !790, line: 423, baseType: !1946, size: 1920, offset: 6144)
!1946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1947, size: 1920, elements: !1948)
!1947 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !164)
!1948 = !{!1949}
!1949 = !DISubrange(count: 240)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1926, file: !790, line: 424, baseType: !1951, size: 20608, offset: 8064)
!1951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 20608, elements: !1952)
!1952 = !{!1953}
!1953 = !DISubrange(count: 644)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1926, file: !790, line: 425, baseType: !572, size: 32, offset: 28672)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 32)
!1956 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !790, line: 468, baseType: !1957)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !790, line: 445, size: 1120, elements: !1958)
!1958 = !{!1959, !1960, !1961, !1962, !1963, !1964, !1965, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1978, !1979, !1980, !1982, !1984, !1986}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1957, file: !790, line: 447, baseType: !794, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1957, file: !790, line: 448, baseType: !572, size: 32, offset: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1957, file: !790, line: 449, baseType: !572, size: 32, offset: 64)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1957, file: !790, line: 450, baseType: !572, size: 32, offset: 96)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1957, file: !790, line: 451, baseType: !572, size: 32, offset: 128)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1957, file: !790, line: 452, baseType: !572, size: 32, offset: 160)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1957, file: !790, line: 453, baseType: !1966, size: 96, offset: 192)
!1966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1947, size: 96, elements: !1967)
!1967 = !{!1968}
!1968 = !DISubrange(count: 12)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1957, file: !790, line: 454, baseType: !572, size: 32, offset: 288)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1957, file: !790, line: 455, baseType: !572, size: 32, offset: 320)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1957, file: !790, line: 456, baseType: !572, size: 32, offset: 352)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1957, file: !790, line: 457, baseType: !572, size: 32, offset: 384)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1957, file: !790, line: 458, baseType: !572, size: 32, offset: 416)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1957, file: !790, line: 459, baseType: !572, size: 32, offset: 448)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1957, file: !790, line: 460, baseType: !572, size: 32, offset: 480)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1957, file: !790, line: 461, baseType: !1977, size: 64, offset: 512)
!1977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 64, elements: !677)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1957, file: !790, line: 462, baseType: !794, size: 32, offset: 576)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1957, file: !790, line: 463, baseType: !794, size: 32, offset: 608)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1957, file: !790, line: 464, baseType: !1981, size: 128, offset: 640)
!1981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 128, elements: !461)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1957, file: !790, line: 465, baseType: !1983, size: 160, offset: 768)
!1983 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 160, elements: !1563)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1957, file: !790, line: 466, baseType: !1985, size: 160, offset: 928)
!1985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 160, elements: !1563)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1957, file: !790, line: 467, baseType: !572, size: 32, offset: 1088)
!1987 = !{!1988, !2014, !2017, !2019, !2021, !1910}
!1988 = !DIGlobalVariableExpression(var: !1989, expr: !DIExpression())
!1989 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1912, file: !1990, line: 285, type: !1991, isLocal: true, isDefinition: true, align: 32)
!1990 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1992)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1993)
!1993 = !{!1994, !2013}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1992, file: !469, line: 60, baseType: !1995, size: 32)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 32)
!1996 = !DISubroutineType(types: !1997)
!1997 = !{!108, !1998}
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 32)
!1999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2000)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !2001)
!2001 = !{!2002, !2003, !2004, !2005, !2011, !2012}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2000, file: !411, line: 380, baseType: !105, size: 32)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2000, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2000, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2000, file: !411, line: 386, baseType: !2006, size: 32, offset: 96)
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 32)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !2008)
!2008 = !{!2009, !2010}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2007, file: !411, line: 359, baseType: !164, size: 8)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2007, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2000, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2000, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1992, file: !469, line: 65, baseType: !1998, size: 32, offset: 32)
!2014 = !DIGlobalVariableExpression(var: !2015, expr: !DIExpression())
!2015 = distinct !DIGlobalVariable(name: "lock", scope: !1912, file: !1990, line: 34, type: !2016, isLocal: true, isDefinition: true)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2017 = !DIGlobalVariableExpression(var: !2018, expr: !DIExpression())
!2018 = distinct !DIGlobalVariable(name: "last_load", scope: !1912, file: !1990, line: 36, type: !113, isLocal: true, isDefinition: true)
!2019 = !DIGlobalVariableExpression(var: !2020, expr: !DIExpression())
!2020 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1912, file: !1990, line: 48, type: !113, isLocal: true, isDefinition: true)
!2021 = !DIGlobalVariableExpression(var: !2022, expr: !DIExpression())
!2022 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1912, file: !1990, line: 54, type: !113, isLocal: true, isDefinition: true)
!2023 = !DIGlobalVariableExpression(var: !2024, expr: !DIExpression())
!2024 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !2025, file: !2107, line: 22, type: !2109, isLocal: true, isDefinition: true)
!2025 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2026, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2027, retainedTypes: !2028, globals: !2104, splitDebugInlining: false, nameTableKind: None)
!2026 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!2027 = !{!1378, !1384}
!2028 = !{!2029, !2093, !2098, !1431, !1384, !1378, !2103, !104}
!2029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 32)
!2030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2031)
!2031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1379, line: 523, size: 288, elements: !2032)
!2032 = !{!2033, !2052, !2056, !2060, !2064, !2065, !2066, !2070, !2089}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !2031, file: !1379, line: 524, baseType: !2034, size: 32)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 32)
!2035 = !DISubroutineType(types: !2036)
!2036 = !{!108, !2037, !1419, !1420}
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 32)
!2038 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2039)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !2040)
!2040 = !{!2041, !2042, !2043, !2044, !2050, !2051}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2039, file: !411, line: 380, baseType: !105, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2039, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2039, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2039, file: !411, line: 386, baseType: !2045, size: 32, offset: 96)
!2045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 32)
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !2047)
!2047 = !{!2048, !2049}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2046, file: !411, line: 359, baseType: !164, size: 8)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2046, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2039, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2039, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !2031, file: !1379, line: 530, baseType: !2053, size: 32, offset: 32)
!2053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 32)
!2054 = !DISubroutineType(types: !2055)
!2055 = !{!108, !2037, !1425}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !2031, file: !1379, line: 532, baseType: !2057, size: 32, offset: 64)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 32)
!2058 = !DISubroutineType(types: !2059)
!2059 = !{!108, !2037, !1431, !1426}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !2031, file: !1379, line: 535, baseType: !2061, size: 32, offset: 96)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 32)
!2062 = !DISubroutineType(types: !2063)
!2063 = !{!108, !2037, !1431}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !2031, file: !1379, line: 537, baseType: !2061, size: 32, offset: 128)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !2031, file: !1379, line: 539, baseType: !2061, size: 32, offset: 160)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !2031, file: !1379, line: 541, baseType: !2067, size: 32, offset: 192)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 32)
!2068 = !DISubroutineType(types: !2069)
!2069 = !{!108, !2037, !1419, !1378, !1384}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !2031, file: !1379, line: 544, baseType: !2071, size: 32, offset: 224)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 32)
!2072 = !DISubroutineType(types: !2073)
!2073 = !{!108, !2037, !2074, !422}
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2075, size: 32)
!2075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1379, line: 478, size: 96, elements: !2076)
!2076 = !{!2077, !2083, !2088}
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2075, file: !1379, line: 482, baseType: !2078, size: 32)
!2078 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1451, line: 33, baseType: !2079)
!2079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1451, line: 29, size: 32, elements: !2080)
!2080 = !{!2081}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2079, file: !1451, line: 30, baseType: !2082, size: 32)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2075, file: !1379, line: 485, baseType: !2084, size: 32, offset: 32)
!2084 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1379, line: 464, baseType: !2085)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 32)
!2086 = !DISubroutineType(types: !2087)
!2087 = !{null, !2037, !2074, !1431}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !2075, file: !1379, line: 493, baseType: !1431, size: 32, offset: 64)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !2031, file: !1379, line: 547, baseType: !2090, size: 32, offset: 256)
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 32)
!2091 = !DISubroutineType(types: !2092)
!2092 = !{!113, !2037}
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 32)
!2094 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2095)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1379, line: 428, size: 32, elements: !2096)
!2096 = !{!2097}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !2095, file: !1379, line: 434, baseType: !1431, size: 32)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 32)
!2099 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2100)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1379, line: 441, size: 32, elements: !2101)
!2101 = !{!2102}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2100, file: !1379, line: 447, baseType: !1431, size: 32)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 32)
!2104 = !{!2105, !2023}
!2105 = !DIGlobalVariableExpression(var: !2106, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!2106 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !2025, file: !2107, line: 37, type: !2108, isLocal: true, isDefinition: true)
!2107 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !439)
!2109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2110, size: 352, elements: !2111)
!2110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2037)
!2111 = !{!2112}
!2112 = !DISubrange(count: 11)
!2113 = !DIGlobalVariableExpression(var: !2114, expr: !DIExpression())
!2114 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !2115, file: !2155, line: 139, type: !2161, isLocal: false, isDefinition: true)
!2115 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2116, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2117, globals: !2152, splitDebugInlining: false, nameTableKind: None)
!2116 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!2117 = !{!2118}
!2118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 32)
!2119 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !568, line: 532, baseType: !2120)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !568, line: 500, size: 1088, elements: !2121)
!2121 = !{!2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2120, file: !568, line: 502, baseType: !572, size: 32)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2120, file: !568, line: 503, baseType: !572, size: 32, offset: 32)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2120, file: !568, line: 504, baseType: !572, size: 32, offset: 64)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2120, file: !568, line: 505, baseType: !572, size: 32, offset: 96)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2120, file: !568, line: 506, baseType: !572, size: 32, offset: 128)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2120, file: !568, line: 507, baseType: !572, size: 32, offset: 160)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2120, file: !568, line: 508, baseType: !572, size: 32, offset: 192)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2120, file: !568, line: 509, baseType: !113, size: 32, offset: 224)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2120, file: !568, line: 510, baseType: !572, size: 32, offset: 256)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2120, file: !568, line: 511, baseType: !572, size: 32, offset: 288)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2120, file: !568, line: 512, baseType: !1205, size: 64, offset: 320)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2120, file: !568, line: 513, baseType: !572, size: 32, offset: 384)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2120, file: !568, line: 514, baseType: !572, size: 32, offset: 416)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2120, file: !568, line: 515, baseType: !572, size: 32, offset: 448)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2120, file: !568, line: 516, baseType: !113, size: 32, offset: 480)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2120, file: !568, line: 517, baseType: !572, size: 32, offset: 512)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2120, file: !568, line: 518, baseType: !572, size: 32, offset: 544)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2120, file: !568, line: 519, baseType: !1205, size: 64, offset: 576)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2120, file: !568, line: 520, baseType: !572, size: 32, offset: 640)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2120, file: !568, line: 521, baseType: !572, size: 32, offset: 672)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2120, file: !568, line: 522, baseType: !572, size: 32, offset: 704)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2120, file: !568, line: 523, baseType: !113, size: 32, offset: 736)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2120, file: !568, line: 524, baseType: !572, size: 32, offset: 768)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2120, file: !568, line: 525, baseType: !572, size: 32, offset: 800)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2120, file: !568, line: 526, baseType: !1205, size: 64, offset: 832)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2120, file: !568, line: 527, baseType: !572, size: 32, offset: 896)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2120, file: !568, line: 528, baseType: !572, size: 32, offset: 928)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2120, file: !568, line: 529, baseType: !1205, size: 64, offset: 960)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2120, file: !568, line: 530, baseType: !572, size: 32, offset: 1024)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2120, file: !568, line: 531, baseType: !572, size: 32, offset: 1056)
!2152 = !{!2153, !2156, !2113}
!2153 = !DIGlobalVariableExpression(var: !2154, expr: !DIExpression())
!2154 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2115, file: !2155, line: 137, type: !113, isLocal: false, isDefinition: true)
!2155 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2156 = !DIGlobalVariableExpression(var: !2157, expr: !DIExpression())
!2157 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !2115, file: !2155, line: 138, type: !2158, isLocal: false, isDefinition: true)
!2158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2159, size: 128, elements: !2160)
!2159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !164)
!2160 = !{!234}
!2161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2159, size: 64, elements: !244)
!2162 = !DIGlobalVariableExpression(var: !2163, expr: !DIExpression())
!2163 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2164, file: !2167, line: 23, type: !2168, isLocal: false, isDefinition: true)
!2164 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2165, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !555, globals: !2166, splitDebugInlining: false, nameTableKind: None)
!2165 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!2166 = !{!2162}
!2167 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!2169 = !DIGlobalVariableExpression(var: !2170, expr: !DIExpression())
!2170 = distinct !DIGlobalVariable(name: "log_const_os", scope: !2171, file: !2175, line: 37, type: !2427, isLocal: false, isDefinition: true)
!2171 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2172, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2173, retainedTypes: !2182, globals: !2255, splitDebugInlining: false, nameTableKind: None)
!2172 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!2173 = !{!2174, !30, !987}
!2174 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2175, line: 63, baseType: !32, size: 32, elements: !2176)
!2175 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2176 = !{!2177, !2178, !2179, !2180, !2181}
!2177 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2178 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2179 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2180 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2181 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2182 = !{!22, !439, !104, !108, !2183, !443, !113, !2213, !220, !164, !2238}
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 32)
!2184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2185)
!2185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2186, line: 51, size: 64, elements: !2187)
!2186 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2187 = !{!2188, !2208}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2185, file: !2186, line: 52, baseType: !2189, size: 32)
!2189 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2186, line: 38, baseType: !2190)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 32)
!2191 = !DISubroutineType(types: !2192)
!2192 = !{!108, !2193, !209, !168}
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 32)
!2194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2195)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !2196)
!2196 = !{!2197, !2198, !2199, !2200, !2206, !2207}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2195, file: !411, line: 380, baseType: !105, size: 32)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2195, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2195, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2195, file: !411, line: 386, baseType: !2201, size: 32, offset: 96)
!2201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2202, size: 32)
!2202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !2203)
!2203 = !{!2204, !2205}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2202, file: !411, line: 359, baseType: !164, size: 8)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2202, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2195, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2195, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2185, file: !2186, line: 53, baseType: !2209, size: 32, offset: 32)
!2209 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2186, line: 47, baseType: !2210)
!2210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2211, size: 32)
!2211 = !DISubroutineType(types: !2212)
!2212 = !{!108, !2193, !209, !168, !113}
!2213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2214, size: 32)
!2214 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !790, line: 468, baseType: !2215)
!2215 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !790, line: 445, size: 1120, elements: !2216)
!2216 = !{!2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2215, file: !790, line: 447, baseType: !794, size: 32)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2215, file: !790, line: 448, baseType: !572, size: 32, offset: 32)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2215, file: !790, line: 449, baseType: !572, size: 32, offset: 64)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2215, file: !790, line: 450, baseType: !572, size: 32, offset: 96)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2215, file: !790, line: 451, baseType: !572, size: 32, offset: 128)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2215, file: !790, line: 452, baseType: !572, size: 32, offset: 160)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2215, file: !790, line: 453, baseType: !1966, size: 96, offset: 192)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2215, file: !790, line: 454, baseType: !572, size: 32, offset: 288)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2215, file: !790, line: 455, baseType: !572, size: 32, offset: 320)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2215, file: !790, line: 456, baseType: !572, size: 32, offset: 352)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2215, file: !790, line: 457, baseType: !572, size: 32, offset: 384)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2215, file: !790, line: 458, baseType: !572, size: 32, offset: 416)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2215, file: !790, line: 459, baseType: !572, size: 32, offset: 448)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2215, file: !790, line: 460, baseType: !572, size: 32, offset: 480)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2215, file: !790, line: 461, baseType: !1977, size: 64, offset: 512)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2215, file: !790, line: 462, baseType: !794, size: 32, offset: 576)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2215, file: !790, line: 463, baseType: !794, size: 32, offset: 608)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2215, file: !790, line: 464, baseType: !1981, size: 128, offset: 640)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2215, file: !790, line: 465, baseType: !1983, size: 160, offset: 768)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2215, file: !790, line: 466, baseType: !1985, size: 160, offset: 928)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2215, file: !790, line: 467, baseType: !572, size: 32, offset: 1088)
!2238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 32)
!2239 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !790, line: 426, baseType: !2240)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !790, line: 411, size: 28704, elements: !2241)
!2241 = !{!2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2240, file: !790, line: 413, baseType: !1929, size: 256)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2240, file: !790, line: 414, baseType: !1931, size: 768, offset: 256)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2240, file: !790, line: 415, baseType: !1929, size: 256, offset: 1024)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2240, file: !790, line: 416, baseType: !1931, size: 768, offset: 1280)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2240, file: !790, line: 417, baseType: !1929, size: 256, offset: 2048)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2240, file: !790, line: 418, baseType: !1931, size: 768, offset: 2304)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2240, file: !790, line: 419, baseType: !1929, size: 256, offset: 3072)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2240, file: !790, line: 420, baseType: !1931, size: 768, offset: 3328)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2240, file: !790, line: 421, baseType: !1929, size: 256, offset: 4096)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2240, file: !790, line: 422, baseType: !1942, size: 1792, offset: 4352)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2240, file: !790, line: 423, baseType: !1946, size: 1920, offset: 6144)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2240, file: !790, line: 424, baseType: !1951, size: 20608, offset: 8064)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2240, file: !790, line: 425, baseType: !572, size: 32, offset: 28672)
!2255 = !{!2169, !2256, !2378, !2387, !2389, !2392, !2397, !2399, !2404}
!2256 = !DIGlobalVariableExpression(var: !2257, expr: !DIExpression())
!2257 = distinct !DIGlobalVariable(name: "_kernel", scope: !2171, file: !2175, line: 40, type: !2258, isLocal: false, isDefinition: true)
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !363, line: 158, size: 288, elements: !2259)
!2259 = !{!2260, !2373}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2258, file: !363, line: 159, baseType: !2261, size: 192)
!2261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2262, size: 192, elements: !772)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !363, line: 100, size: 192, elements: !2263)
!2263 = !{!2264, !2265, !2266, !2367, !2368, !2369, !2370}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2262, file: !363, line: 102, baseType: !113, size: 32)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2262, file: !363, line: 105, baseType: !443, size: 32, offset: 32)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2262, file: !363, line: 108, baseType: !2267, size: 32, offset: 64)
!2267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2268, size: 32)
!2268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !647, line: 245, size: 1024, elements: !2269)
!2269 = !{!2270, !2328, !2340, !2341, !2342, !2343, !2349, !2362}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2268, file: !647, line: 247, baseType: !2271, size: 384)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !647, line: 57, size: 384, elements: !2272)
!2272 = !{!2273, !2297, !2304, !2305, !2306, !2315, !2316, !2317}
!2273 = !DIDerivedType(tag: DW_TAG_member, scope: !2271, file: !647, line: 60, baseType: !2274, size: 64)
!2274 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2271, file: !647, line: 60, size: 64, elements: !2275)
!2275 = !{!2276, !2291}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2274, file: !647, line: 61, baseType: !2277, size: 64)
!2277 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2278)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2279)
!2279 = !{!2280, !2286}
!2280 = !DIDerivedType(tag: DW_TAG_member, scope: !2278, file: !367, line: 38, baseType: !2281, size: 32)
!2281 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2278, file: !367, line: 38, size: 32, elements: !2282)
!2282 = !{!2283, !2285}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2281, file: !367, line: 39, baseType: !2284, size: 32)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 32)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2281, file: !367, line: 40, baseType: !2284, size: 32)
!2286 = !DIDerivedType(tag: DW_TAG_member, scope: !2278, file: !367, line: 42, baseType: !2287, size: 32, offset: 32)
!2287 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2278, file: !367, line: 42, size: 32, elements: !2288)
!2288 = !{!2289, !2290}
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2287, file: !367, line: 43, baseType: !2284, size: 32)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2287, file: !367, line: 44, baseType: !2284, size: 32)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2274, file: !647, line: 62, baseType: !2292, size: 64)
!2292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !672, line: 49, size: 64, elements: !2293)
!2293 = !{!2294}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2292, file: !672, line: 50, baseType: !2295, size: 64)
!2295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2296, size: 64, elements: !677)
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 32)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2271, file: !647, line: 68, baseType: !2298, size: 32, offset: 64)
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2299, size: 32)
!2299 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2300)
!2300 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2301)
!2301 = !{!2302}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2300, file: !363, line: 232, baseType: !2303, size: 64)
!2303 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2278)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2271, file: !647, line: 71, baseType: !164, size: 8, offset: 96)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2271, file: !647, line: 74, baseType: !164, size: 8, offset: 104)
!2306 = !DIDerivedType(tag: DW_TAG_member, scope: !2271, file: !647, line: 90, baseType: !2307, size: 16, offset: 112)
!2307 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2271, file: !647, line: 90, size: 16, elements: !2308)
!2308 = !{!2309, !2314}
!2309 = !DIDerivedType(tag: DW_TAG_member, scope: !2307, file: !647, line: 91, baseType: !2310, size: 16)
!2310 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2307, file: !647, line: 91, size: 16, elements: !2311)
!2311 = !{!2312, !2313}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2310, file: !647, line: 96, baseType: !695, size: 8)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2310, file: !647, line: 97, baseType: !164, size: 8, offset: 8)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2307, file: !647, line: 100, baseType: !168, size: 16)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2271, file: !647, line: 107, baseType: !113, size: 32, offset: 128)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2271, file: !647, line: 127, baseType: !104, size: 32, offset: 160)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2271, file: !647, line: 131, baseType: !2318, size: 192, offset: 192)
!2318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2319)
!2319 = !{!2320, !2321, !2327}
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2318, file: !363, line: 245, baseType: !2277, size: 64)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2318, file: !363, line: 246, baseType: !2322, size: 32, offset: 64)
!2322 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2323)
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 32)
!2324 = !DISubroutineType(types: !2325)
!2325 = !{null, !2326}
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2318, size: 32)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2318, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2268, file: !647, line: 250, baseType: !2329, size: 288, offset: 384)
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !714, line: 25, size: 288, elements: !2330)
!2330 = !{!2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2329, file: !714, line: 26, baseType: !113, size: 32)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2329, file: !714, line: 27, baseType: !113, size: 32, offset: 32)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2329, file: !714, line: 28, baseType: !113, size: 32, offset: 64)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2329, file: !714, line: 29, baseType: !113, size: 32, offset: 96)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2329, file: !714, line: 30, baseType: !113, size: 32, offset: 128)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2329, file: !714, line: 31, baseType: !113, size: 32, offset: 160)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2329, file: !714, line: 32, baseType: !113, size: 32, offset: 192)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2329, file: !714, line: 33, baseType: !113, size: 32, offset: 224)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2329, file: !714, line: 34, baseType: !113, size: 32, offset: 256)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2268, file: !647, line: 253, baseType: !104, size: 32, offset: 672)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2268, file: !647, line: 256, baseType: !2299, size: 64, offset: 704)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2268, file: !647, line: 294, baseType: !108, size: 32, offset: 768)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2268, file: !647, line: 300, baseType: !2344, size: 96, offset: 800)
!2344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !647, line: 149, size: 96, elements: !2345)
!2345 = !{!2346, !2347, !2348}
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2344, file: !647, line: 153, baseType: !22, size: 32)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2344, file: !647, line: 162, baseType: !439, size: 32, offset: 32)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2344, file: !647, line: 168, baseType: !439, size: 32, offset: 64)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2268, file: !647, line: 325, baseType: !2350, size: 32, offset: 896)
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 32)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2352)
!2352 = !{!2353, !2359, !2360}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2351, file: !359, line: 5074, baseType: !2354, size: 96)
!2354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !740, line: 56, size: 96, elements: !2355)
!2355 = !{!2356, !2357, !2358}
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2354, file: !740, line: 57, baseType: !743, size: 32)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2354, file: !740, line: 58, baseType: !104, size: 32, offset: 32)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2354, file: !740, line: 59, baseType: !439, size: 32, offset: 64)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2351, file: !359, line: 5075, baseType: !2299, size: 64, offset: 96)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2351, file: !359, line: 5076, baseType: !2361, offset: 160)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2268, file: !647, line: 343, baseType: !2363, size: 64, offset: 928)
!2363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !714, line: 60, size: 64, elements: !2364)
!2364 = !{!2365, !2366}
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2363, file: !714, line: 63, baseType: !113, size: 32)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2363, file: !714, line: 66, baseType: !113, size: 32, offset: 32)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2262, file: !363, line: 111, baseType: !2267, size: 32, offset: 96)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2262, file: !363, line: 124, baseType: !108, size: 32, offset: 128)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2262, file: !363, line: 127, baseType: !164, size: 8, offset: 160)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2262, file: !363, line: 153, baseType: !2371, offset: 168)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2372, line: 33, elements: !437)
!2372 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2258, file: !363, line: 170, baseType: !2374, size: 96, offset: 192)
!2374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !363, line: 83, size: 96, elements: !2375)
!2375 = !{!2376, !2377}
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2374, file: !363, line: 86, baseType: !2267, size: 32)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2374, file: !363, line: 90, baseType: !2303, size: 64, offset: 32)
!2378 = !DIGlobalVariableExpression(var: !2379, expr: !DIExpression())
!2379 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2171, file: !2175, line: 43, type: !2380, isLocal: false, isDefinition: true, align: 512)
!2380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2381, size: 8704, elements: !2385)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2382, line: 47, size: 8, elements: !2383)
!2382 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2383 = !{!2384}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2381, file: !2382, line: 48, baseType: !107, size: 8)
!2385 = !{!2386}
!2386 = !DISubrange(count: 1088)
!2387 = !DIGlobalVariableExpression(var: !2388, expr: !DIExpression())
!2388 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2171, file: !2175, line: 44, type: !2268, isLocal: false, isDefinition: true)
!2389 = !DIGlobalVariableExpression(var: !2390, expr: !DIExpression())
!2390 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2171, file: !2175, line: 48, type: !2391, isLocal: false, isDefinition: true)
!2391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2268, size: 1024, elements: !772)
!2392 = !DIGlobalVariableExpression(var: !2393, expr: !DIExpression())
!2393 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2171, file: !2175, line: 86, type: !2394, isLocal: false, isDefinition: true, align: 512)
!2394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2381, size: 16896, elements: !2395)
!2395 = !{!773, !2396}
!2396 = !DISubrange(count: 2112)
!2397 = !DIGlobalVariableExpression(var: !2398, expr: !DIExpression())
!2398 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2171, file: !2175, line: 217, type: !422, isLocal: false, isDefinition: true)
!2399 = !DIGlobalVariableExpression(var: !2400, expr: !DIExpression())
!2400 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2171, file: !2175, line: 50, type: !2401, isLocal: true, isDefinition: true, align: 512)
!2401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2381, size: 3072, elements: !2402)
!2402 = !{!773, !2403}
!2403 = !DISubrange(count: 384)
!2404 = !DIGlobalVariableExpression(var: !2405, expr: !DIExpression())
!2405 = distinct !DIGlobalVariable(name: "levels", scope: !2406, file: !2175, line: 232, type: !2426, isLocal: true, isDefinition: true)
!2406 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2175, file: !2175, line: 230, type: !2407, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !2409)
!2407 = !DISubroutineType(types: !2408)
!2408 = !{null, !2174}
!2409 = !{!2410, !2411, !2421, !2425}
!2410 = !DILocalVariable(name: "level", arg: 1, scope: !2406, file: !2175, line: 230, type: !2174)
!2411 = !DILocalVariable(name: "entry", scope: !2406, file: !2175, line: 244, type: !2412)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 32)
!2413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2414)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !2415)
!2415 = !{!2416, !2420}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2414, file: !469, line: 60, baseType: !2417, size: 32)
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 32)
!2418 = !DISubroutineType(types: !2419)
!2419 = !{!108, !2193}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2414, file: !469, line: 65, baseType: !2193, size: 32, offset: 32)
!2421 = !DILocalVariable(name: "dev", scope: !2422, file: !2175, line: 247, type: !2193)
!2422 = distinct !DILexicalBlock(scope: !2423, file: !2175, line: 246, column: 64)
!2423 = distinct !DILexicalBlock(scope: !2424, file: !2175, line: 246, column: 2)
!2424 = distinct !DILexicalBlock(scope: !2406, file: !2175, line: 246, column: 2)
!2425 = !DILocalVariable(name: "rc", scope: !2422, file: !2175, line: 248, type: !108)
!2426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2412, size: 192, elements: !1546)
!2427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2428)
!2428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !2429)
!2429 = !{!2430, !2431}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2428, file: !254, line: 17, baseType: !105, size: 32)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2428, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!2432 = !DIGlobalVariableExpression(var: !2433, expr: !DIExpression())
!2433 = distinct !DIGlobalVariable(name: "states_str", scope: !2434, file: !2435, line: 276, type: !2556, isLocal: true, isDefinition: true)
!2434 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2435, file: !2435, line: 271, type: !2436, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !2547)
!2435 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2436 = !DISubroutineType(types: !2437)
!2437 = !{!105, !2438, !443, !439}
!2438 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !647, line: 347, baseType: !2439)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 32)
!2440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !647, line: 245, size: 1024, elements: !2441)
!2441 = !{!2442, !2500, !2512, !2513, !2514, !2515, !2521, !2534}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2440, file: !647, line: 247, baseType: !2443, size: 384)
!2443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !647, line: 57, size: 384, elements: !2444)
!2444 = !{!2445, !2469, !2476, !2477, !2478, !2487, !2488, !2489}
!2445 = !DIDerivedType(tag: DW_TAG_member, scope: !2443, file: !647, line: 60, baseType: !2446, size: 64)
!2446 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2443, file: !647, line: 60, size: 64, elements: !2447)
!2447 = !{!2448, !2463}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2446, file: !647, line: 61, baseType: !2449, size: 64)
!2449 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2450)
!2450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2451)
!2451 = !{!2452, !2458}
!2452 = !DIDerivedType(tag: DW_TAG_member, scope: !2450, file: !367, line: 38, baseType: !2453, size: 32)
!2453 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2450, file: !367, line: 38, size: 32, elements: !2454)
!2454 = !{!2455, !2457}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2453, file: !367, line: 39, baseType: !2456, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2453, file: !367, line: 40, baseType: !2456, size: 32)
!2458 = !DIDerivedType(tag: DW_TAG_member, scope: !2450, file: !367, line: 42, baseType: !2459, size: 32, offset: 32)
!2459 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2450, file: !367, line: 42, size: 32, elements: !2460)
!2460 = !{!2461, !2462}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2459, file: !367, line: 43, baseType: !2456, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2459, file: !367, line: 44, baseType: !2456, size: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2446, file: !647, line: 62, baseType: !2464, size: 64)
!2464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !672, line: 49, size: 64, elements: !2465)
!2465 = !{!2466}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2464, file: !672, line: 50, baseType: !2467, size: 64)
!2467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2468, size: 64, elements: !677)
!2468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 32)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2443, file: !647, line: 68, baseType: !2470, size: 32, offset: 64)
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 32)
!2471 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2472)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2473)
!2473 = !{!2474}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2472, file: !363, line: 232, baseType: !2475, size: 64)
!2475 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2450)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2443, file: !647, line: 71, baseType: !164, size: 8, offset: 96)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2443, file: !647, line: 74, baseType: !164, size: 8, offset: 104)
!2478 = !DIDerivedType(tag: DW_TAG_member, scope: !2443, file: !647, line: 90, baseType: !2479, size: 16, offset: 112)
!2479 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2443, file: !647, line: 90, size: 16, elements: !2480)
!2480 = !{!2481, !2486}
!2481 = !DIDerivedType(tag: DW_TAG_member, scope: !2479, file: !647, line: 91, baseType: !2482, size: 16)
!2482 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2479, file: !647, line: 91, size: 16, elements: !2483)
!2483 = !{!2484, !2485}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2482, file: !647, line: 96, baseType: !695, size: 8)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2482, file: !647, line: 97, baseType: !164, size: 8, offset: 8)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2479, file: !647, line: 100, baseType: !168, size: 16)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2443, file: !647, line: 107, baseType: !113, size: 32, offset: 128)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2443, file: !647, line: 127, baseType: !104, size: 32, offset: 160)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2443, file: !647, line: 131, baseType: !2490, size: 192, offset: 192)
!2490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2491)
!2491 = !{!2492, !2493, !2499}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2490, file: !363, line: 245, baseType: !2449, size: 64)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2490, file: !363, line: 246, baseType: !2494, size: 32, offset: 64)
!2494 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2495)
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 32)
!2496 = !DISubroutineType(types: !2497)
!2497 = !{null, !2498}
!2498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 32)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2490, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2440, file: !647, line: 250, baseType: !2501, size: 288, offset: 384)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !714, line: 25, size: 288, elements: !2502)
!2502 = !{!2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2501, file: !714, line: 26, baseType: !113, size: 32)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2501, file: !714, line: 27, baseType: !113, size: 32, offset: 32)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2501, file: !714, line: 28, baseType: !113, size: 32, offset: 64)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2501, file: !714, line: 29, baseType: !113, size: 32, offset: 96)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2501, file: !714, line: 30, baseType: !113, size: 32, offset: 128)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2501, file: !714, line: 31, baseType: !113, size: 32, offset: 160)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2501, file: !714, line: 32, baseType: !113, size: 32, offset: 192)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2501, file: !714, line: 33, baseType: !113, size: 32, offset: 224)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2501, file: !714, line: 34, baseType: !113, size: 32, offset: 256)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2440, file: !647, line: 253, baseType: !104, size: 32, offset: 672)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2440, file: !647, line: 256, baseType: !2471, size: 64, offset: 704)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2440, file: !647, line: 294, baseType: !108, size: 32, offset: 768)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2440, file: !647, line: 300, baseType: !2516, size: 96, offset: 800)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !647, line: 149, size: 96, elements: !2517)
!2517 = !{!2518, !2519, !2520}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2516, file: !647, line: 153, baseType: !22, size: 32)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2516, file: !647, line: 162, baseType: !439, size: 32, offset: 32)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2516, file: !647, line: 168, baseType: !439, size: 32, offset: 64)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2440, file: !647, line: 325, baseType: !2522, size: 32, offset: 896)
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 32)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2524)
!2524 = !{!2525, !2531, !2532}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2523, file: !359, line: 5074, baseType: !2526, size: 96)
!2526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !740, line: 56, size: 96, elements: !2527)
!2527 = !{!2528, !2529, !2530}
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2526, file: !740, line: 57, baseType: !743, size: 32)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2526, file: !740, line: 58, baseType: !104, size: 32, offset: 32)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2526, file: !740, line: 59, baseType: !439, size: 32, offset: 64)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2523, file: !359, line: 5075, baseType: !2471, size: 64, offset: 96)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2523, file: !359, line: 5076, baseType: !2533, offset: 160)
!2533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2440, file: !647, line: 343, baseType: !2535, size: 64, offset: 928)
!2535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !714, line: 60, size: 64, elements: !2536)
!2536 = !{!2537, !2538}
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2535, file: !714, line: 63, baseType: !113, size: 32)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2535, file: !714, line: 66, baseType: !113, size: 32, offset: 32)
!2539 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2540, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2541, globals: !2543, splitDebugInlining: false, nameTableKind: None)
!2540 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!2541 = !{!104, !105, !109, !164, !108, !2542, !24, !439, !443, !22, !113, !114}
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2449, size: 32)
!2543 = !{!2432, !2544}
!2544 = !DIGlobalVariableExpression(var: !2545, expr: !DIExpression())
!2545 = distinct !DIGlobalVariable(name: "states_sz", scope: !2434, file: !2435, line: 279, type: !2546, isLocal: true, isDefinition: true)
!2546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2108, size: 256, elements: !244)
!2547 = !{!2548, !2549, !2550, !2551, !2552, !2553, !2554}
!2548 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2434, file: !2435, line: 271, type: !2438)
!2549 = !DILocalVariable(name: "buf", arg: 2, scope: !2434, file: !2435, line: 271, type: !443)
!2550 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2434, file: !2435, line: 271, type: !439)
!2551 = !DILocalVariable(name: "off", scope: !2434, file: !2435, line: 273, type: !439)
!2552 = !DILocalVariable(name: "bit", scope: !2434, file: !2435, line: 274, type: !164)
!2553 = !DILocalVariable(name: "thread_state", scope: !2434, file: !2435, line: 275, type: !164)
!2554 = !DILocalVariable(name: "index", scope: !2555, file: !2435, line: 293, type: !164)
!2555 = distinct !DILexicalBlock(scope: !2434, file: !2435, line: 293, column: 2)
!2556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 256, elements: !244)
!2557 = !DIGlobalVariableExpression(var: !2558, expr: !DIExpression())
!2558 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2559, file: !2667, line: 56, type: !2656, isLocal: false, isDefinition: true)
!2559 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2560, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2561, globals: !2664, splitDebugInlining: false, nameTableKind: None)
!2560 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!2561 = !{!2562, !443, !104, !2662, !209, !109, !220, !108, !113, !114, !2663}
!2562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2563, size: 32)
!2563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !647, line: 245, size: 1024, elements: !2564)
!2564 = !{!2565, !2623, !2635, !2636, !2637, !2638, !2644, !2657}
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2563, file: !647, line: 247, baseType: !2566, size: 384)
!2566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !647, line: 57, size: 384, elements: !2567)
!2567 = !{!2568, !2592, !2599, !2600, !2601, !2610, !2611, !2612}
!2568 = !DIDerivedType(tag: DW_TAG_member, scope: !2566, file: !647, line: 60, baseType: !2569, size: 64)
!2569 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2566, file: !647, line: 60, size: 64, elements: !2570)
!2570 = !{!2571, !2586}
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2569, file: !647, line: 61, baseType: !2572, size: 64)
!2572 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2573)
!2573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2574)
!2574 = !{!2575, !2581}
!2575 = !DIDerivedType(tag: DW_TAG_member, scope: !2573, file: !367, line: 38, baseType: !2576, size: 32)
!2576 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2573, file: !367, line: 38, size: 32, elements: !2577)
!2577 = !{!2578, !2580}
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2576, file: !367, line: 39, baseType: !2579, size: 32)
!2579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2573, size: 32)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2576, file: !367, line: 40, baseType: !2579, size: 32)
!2581 = !DIDerivedType(tag: DW_TAG_member, scope: !2573, file: !367, line: 42, baseType: !2582, size: 32, offset: 32)
!2582 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2573, file: !367, line: 42, size: 32, elements: !2583)
!2583 = !{!2584, !2585}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2582, file: !367, line: 43, baseType: !2579, size: 32)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2582, file: !367, line: 44, baseType: !2579, size: 32)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2569, file: !647, line: 62, baseType: !2587, size: 64)
!2587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !672, line: 49, size: 64, elements: !2588)
!2588 = !{!2589}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2587, file: !672, line: 50, baseType: !2590, size: 64)
!2590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2591, size: 64, elements: !677)
!2591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 32)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2566, file: !647, line: 68, baseType: !2593, size: 32, offset: 64)
!2593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2594, size: 32)
!2594 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2595)
!2595 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2596)
!2596 = !{!2597}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2595, file: !363, line: 232, baseType: !2598, size: 64)
!2598 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2573)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2566, file: !647, line: 71, baseType: !164, size: 8, offset: 96)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2566, file: !647, line: 74, baseType: !164, size: 8, offset: 104)
!2601 = !DIDerivedType(tag: DW_TAG_member, scope: !2566, file: !647, line: 90, baseType: !2602, size: 16, offset: 112)
!2602 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2566, file: !647, line: 90, size: 16, elements: !2603)
!2603 = !{!2604, !2609}
!2604 = !DIDerivedType(tag: DW_TAG_member, scope: !2602, file: !647, line: 91, baseType: !2605, size: 16)
!2605 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2602, file: !647, line: 91, size: 16, elements: !2606)
!2606 = !{!2607, !2608}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2605, file: !647, line: 96, baseType: !695, size: 8)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2605, file: !647, line: 97, baseType: !164, size: 8, offset: 8)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2602, file: !647, line: 100, baseType: !168, size: 16)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2566, file: !647, line: 107, baseType: !113, size: 32, offset: 128)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2566, file: !647, line: 127, baseType: !104, size: 32, offset: 160)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2566, file: !647, line: 131, baseType: !2613, size: 192, offset: 192)
!2613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2614)
!2614 = !{!2615, !2616, !2622}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2613, file: !363, line: 245, baseType: !2572, size: 64)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2613, file: !363, line: 246, baseType: !2617, size: 32, offset: 64)
!2617 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2618)
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2619, size: 32)
!2619 = !DISubroutineType(types: !2620)
!2620 = !{null, !2621}
!2621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2613, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2613, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2563, file: !647, line: 250, baseType: !2624, size: 288, offset: 384)
!2624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !714, line: 25, size: 288, elements: !2625)
!2625 = !{!2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634}
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2624, file: !714, line: 26, baseType: !113, size: 32)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2624, file: !714, line: 27, baseType: !113, size: 32, offset: 32)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2624, file: !714, line: 28, baseType: !113, size: 32, offset: 64)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2624, file: !714, line: 29, baseType: !113, size: 32, offset: 96)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2624, file: !714, line: 30, baseType: !113, size: 32, offset: 128)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2624, file: !714, line: 31, baseType: !113, size: 32, offset: 160)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2624, file: !714, line: 32, baseType: !113, size: 32, offset: 192)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2624, file: !714, line: 33, baseType: !113, size: 32, offset: 224)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2624, file: !714, line: 34, baseType: !113, size: 32, offset: 256)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2563, file: !647, line: 253, baseType: !104, size: 32, offset: 672)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2563, file: !647, line: 256, baseType: !2594, size: 64, offset: 704)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2563, file: !647, line: 294, baseType: !108, size: 32, offset: 768)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2563, file: !647, line: 300, baseType: !2639, size: 96, offset: 800)
!2639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !647, line: 149, size: 96, elements: !2640)
!2640 = !{!2641, !2642, !2643}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2639, file: !647, line: 153, baseType: !22, size: 32)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2639, file: !647, line: 162, baseType: !439, size: 32, offset: 32)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2639, file: !647, line: 168, baseType: !439, size: 32, offset: 64)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2563, file: !647, line: 325, baseType: !2645, size: 32, offset: 896)
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 32)
!2646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2647)
!2647 = !{!2648, !2654, !2655}
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2646, file: !359, line: 5074, baseType: !2649, size: 96)
!2649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !740, line: 56, size: 96, elements: !2650)
!2650 = !{!2651, !2652, !2653}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2649, file: !740, line: 57, baseType: !743, size: 32)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2649, file: !740, line: 58, baseType: !104, size: 32, offset: 32)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2649, file: !740, line: 59, baseType: !439, size: 32, offset: 64)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2646, file: !359, line: 5075, baseType: !2594, size: 64, offset: 96)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2646, file: !359, line: 5076, baseType: !2656, offset: 160)
!2656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2563, file: !647, line: 343, baseType: !2658, size: 64, offset: 928)
!2658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !714, line: 60, size: 64, elements: !2659)
!2659 = !{!2660, !2661}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2658, file: !714, line: 63, baseType: !113, size: 32)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2658, file: !714, line: 66, baseType: !113, size: 32, offset: 32)
!2662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 32)
!2663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 32)
!2664 = !{!2557, !2665, !2668, !2670}
!2665 = !DIGlobalVariableExpression(var: !2666, expr: !DIExpression())
!2666 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2559, file: !2667, line: 404, type: !108, isLocal: true, isDefinition: true)
!2667 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2668 = !DIGlobalVariableExpression(var: !2669, expr: !DIExpression())
!2669 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2559, file: !2667, line: 405, type: !108, isLocal: true, isDefinition: true)
!2670 = !DIGlobalVariableExpression(var: !2671, expr: !DIExpression())
!2671 = distinct !DIGlobalVariable(name: "pending_current", scope: !2559, file: !2667, line: 425, type: !2562, isLocal: true, isDefinition: true)
!2672 = !DIGlobalVariableExpression(var: !2673, expr: !DIExpression())
!2673 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2674, file: !2704, line: 15, type: !114, isLocal: true, isDefinition: true)
!2674 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2675, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2676, globals: !2701, splitDebugInlining: false, nameTableKind: None)
!2675 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!2676 = !{!109, !104, !220, !113, !114, !108, !2677, !443, !111}
!2677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 32)
!2678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2679)
!2679 = !{!2680, !2695, !2700}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2678, file: !363, line: 245, baseType: !2681, size: 64)
!2681 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2682)
!2682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2683)
!2683 = !{!2684, !2690}
!2684 = !DIDerivedType(tag: DW_TAG_member, scope: !2682, file: !367, line: 38, baseType: !2685, size: 32)
!2685 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2682, file: !367, line: 38, size: 32, elements: !2686)
!2686 = !{!2687, !2689}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2685, file: !367, line: 39, baseType: !2688, size: 32)
!2688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2682, size: 32)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2685, file: !367, line: 40, baseType: !2688, size: 32)
!2690 = !DIDerivedType(tag: DW_TAG_member, scope: !2682, file: !367, line: 42, baseType: !2691, size: 32, offset: 32)
!2691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2682, file: !367, line: 42, size: 32, elements: !2692)
!2692 = !{!2693, !2694}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2691, file: !367, line: 43, baseType: !2688, size: 32)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2691, file: !367, line: 44, baseType: !2688, size: 32)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2678, file: !363, line: 246, baseType: !2696, size: 32, offset: 64)
!2696 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2697)
!2697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2698, size: 32)
!2698 = !DISubroutineType(types: !2699)
!2699 = !{null, !2677}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2678, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2701 = !{!2672, !2702, !2706, !2708}
!2702 = !DIGlobalVariableExpression(var: !2703, expr: !DIExpression())
!2703 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2674, file: !2704, line: 19, type: !2705, isLocal: true, isDefinition: true)
!2704 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2706 = !DIGlobalVariableExpression(var: !2707, expr: !DIExpression())
!2707 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2674, file: !2704, line: 25, type: !108, isLocal: true, isDefinition: true)
!2708 = !DIGlobalVariableExpression(var: !2709, expr: !DIExpression())
!2709 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2674, file: !2704, line: 17, type: !2710, isLocal: true, isDefinition: true)
!2710 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2682)
!2711 = !DIGlobalVariableExpression(var: !2712, expr: !DIExpression())
!2712 = distinct !DIGlobalVariable(name: "lock", scope: !2713, file: !2835, line: 16, type: !2827, isLocal: true, isDefinition: true)
!2713 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2714, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2715, globals: !2834, splitDebugInlining: false, nameTableKind: None)
!2714 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!2715 = !{!2716, !443, !109, !104, !108, !2762, !2833}
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2717, size: 32)
!2717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_timer", file: !359, line: 1318, size: 448, elements: !2718)
!2718 = !{!2719, !2744, !2750, !2754, !2755, !2760, !2761}
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2717, file: !359, line: 1324, baseType: !2720, size: 192)
!2720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2721)
!2721 = !{!2722, !2737, !2743}
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2720, file: !363, line: 245, baseType: !2723, size: 64)
!2723 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2724)
!2724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2725)
!2725 = !{!2726, !2732}
!2726 = !DIDerivedType(tag: DW_TAG_member, scope: !2724, file: !367, line: 38, baseType: !2727, size: 32)
!2727 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2724, file: !367, line: 38, size: 32, elements: !2728)
!2728 = !{!2729, !2731}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2727, file: !367, line: 39, baseType: !2730, size: 32)
!2730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2727, file: !367, line: 40, baseType: !2730, size: 32)
!2732 = !DIDerivedType(tag: DW_TAG_member, scope: !2724, file: !367, line: 42, baseType: !2733, size: 32, offset: 32)
!2733 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2724, file: !367, line: 42, size: 32, elements: !2734)
!2734 = !{!2735, !2736}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2733, file: !367, line: 43, baseType: !2730, size: 32)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2733, file: !367, line: 44, baseType: !2730, size: 32)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2720, file: !363, line: 246, baseType: !2738, size: 32, offset: 64)
!2738 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2739)
!2739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2740, size: 32)
!2740 = !DISubroutineType(types: !2741)
!2741 = !{null, !2742}
!2742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2720, size: 32)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2720, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2717, file: !359, line: 1327, baseType: !2745, size: 64, offset: 192)
!2745 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2746)
!2746 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2747)
!2747 = !{!2748}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2746, file: !363, line: 232, baseType: !2749, size: 64)
!2749 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2724)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_fn", scope: !2717, file: !359, line: 1330, baseType: !2751, size: 32, offset: 256)
!2751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2752, size: 32)
!2752 = !DISubroutineType(types: !2753)
!2753 = !{null, !2716}
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "stop_fn", scope: !2717, file: !359, line: 1333, baseType: !2751, size: 32, offset: 288)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !2717, file: !359, line: 1336, baseType: !2756, size: 64, offset: 320)
!2756 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !2757)
!2757 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !2758)
!2758 = !{!2759}
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !2757, file: !110, line: 66, baseType: !109, size: 64)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2717, file: !359, line: 1339, baseType: !113, size: 32, offset: 384)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !2717, file: !359, line: 1342, baseType: !104, size: 32, offset: 416)
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 32)
!2763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !647, line: 245, size: 1024, elements: !2764)
!2764 = !{!2765, !2794, !2806, !2807, !2808, !2809, !2815, !2828}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2763, file: !647, line: 247, baseType: !2766, size: 384)
!2766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !647, line: 57, size: 384, elements: !2767)
!2767 = !{!2768, !2778, !2780, !2781, !2782, !2791, !2792, !2793}
!2768 = !DIDerivedType(tag: DW_TAG_member, scope: !2766, file: !647, line: 60, baseType: !2769, size: 64)
!2769 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2766, file: !647, line: 60, size: 64, elements: !2770)
!2770 = !{!2771, !2772}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2769, file: !647, line: 61, baseType: !2723, size: 64)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2769, file: !647, line: 62, baseType: !2773, size: 64)
!2773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !672, line: 49, size: 64, elements: !2774)
!2774 = !{!2775}
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2773, file: !672, line: 50, baseType: !2776, size: 64)
!2776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2777, size: 64, elements: !677)
!2777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2773, size: 32)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2766, file: !647, line: 68, baseType: !2779, size: 32, offset: 64)
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 32)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2766, file: !647, line: 71, baseType: !164, size: 8, offset: 96)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2766, file: !647, line: 74, baseType: !164, size: 8, offset: 104)
!2782 = !DIDerivedType(tag: DW_TAG_member, scope: !2766, file: !647, line: 90, baseType: !2783, size: 16, offset: 112)
!2783 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2766, file: !647, line: 90, size: 16, elements: !2784)
!2784 = !{!2785, !2790}
!2785 = !DIDerivedType(tag: DW_TAG_member, scope: !2783, file: !647, line: 91, baseType: !2786, size: 16)
!2786 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2783, file: !647, line: 91, size: 16, elements: !2787)
!2787 = !{!2788, !2789}
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2786, file: !647, line: 96, baseType: !695, size: 8)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2786, file: !647, line: 97, baseType: !164, size: 8, offset: 8)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2783, file: !647, line: 100, baseType: !168, size: 16)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2766, file: !647, line: 107, baseType: !113, size: 32, offset: 128)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2766, file: !647, line: 127, baseType: !104, size: 32, offset: 160)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2766, file: !647, line: 131, baseType: !2720, size: 192, offset: 192)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2763, file: !647, line: 250, baseType: !2795, size: 288, offset: 384)
!2795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !714, line: 25, size: 288, elements: !2796)
!2796 = !{!2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805}
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2795, file: !714, line: 26, baseType: !113, size: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2795, file: !714, line: 27, baseType: !113, size: 32, offset: 32)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2795, file: !714, line: 28, baseType: !113, size: 32, offset: 64)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2795, file: !714, line: 29, baseType: !113, size: 32, offset: 96)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2795, file: !714, line: 30, baseType: !113, size: 32, offset: 128)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2795, file: !714, line: 31, baseType: !113, size: 32, offset: 160)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2795, file: !714, line: 32, baseType: !113, size: 32, offset: 192)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2795, file: !714, line: 33, baseType: !113, size: 32, offset: 224)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2795, file: !714, line: 34, baseType: !113, size: 32, offset: 256)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2763, file: !647, line: 253, baseType: !104, size: 32, offset: 672)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2763, file: !647, line: 256, baseType: !2745, size: 64, offset: 704)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2763, file: !647, line: 294, baseType: !108, size: 32, offset: 768)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2763, file: !647, line: 300, baseType: !2810, size: 96, offset: 800)
!2810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !647, line: 149, size: 96, elements: !2811)
!2811 = !{!2812, !2813, !2814}
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2810, file: !647, line: 153, baseType: !22, size: 32)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2810, file: !647, line: 162, baseType: !439, size: 32, offset: 32)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2810, file: !647, line: 168, baseType: !439, size: 32, offset: 64)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2763, file: !647, line: 325, baseType: !2816, size: 32, offset: 896)
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 32)
!2817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2818)
!2818 = !{!2819, !2825, !2826}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2817, file: !359, line: 5074, baseType: !2820, size: 96)
!2820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !740, line: 56, size: 96, elements: !2821)
!2821 = !{!2822, !2823, !2824}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2820, file: !740, line: 57, baseType: !743, size: 32)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2820, file: !740, line: 58, baseType: !104, size: 32, offset: 32)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2820, file: !740, line: 59, baseType: !439, size: 32, offset: 64)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2817, file: !359, line: 5075, baseType: !2745, size: 64, offset: 96)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2817, file: !359, line: 5076, baseType: !2827, offset: 160)
!2827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2763, file: !647, line: 343, baseType: !2829, size: 64, offset: 928)
!2829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !714, line: 60, size: 64, elements: !2830)
!2830 = !{!2831, !2832}
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2829, file: !714, line: 63, baseType: !113, size: 32)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2829, file: !714, line: 66, baseType: !113, size: 32, offset: 32)
!2833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 32)
!2834 = !{!2711}
!2835 = !DIFile(filename: "zephyr/kernel/timer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2836 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2837, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !555, splitDebugInlining: false, nameTableKind: None)
!2837 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!2838 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2839, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !555, splitDebugInlining: false, nameTableKind: None)
!2839 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!2840 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2841, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2842, retainedTypes: !2862, splitDebugInlining: false, nameTableKind: None)
!2841 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!2842 = !{!2843, !2851}
!2843 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2844, line: 69, baseType: !32, size: 32, elements: !2845)
!2844 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2845 = !{!2846, !2847, !2848, !2849, !2850}
!2846 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2847 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2848 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2849 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2850 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2851 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2844, line: 56, baseType: !32, size: 32, elements: !2852)
!2852 = !{!2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861}
!2853 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2854 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2855 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2856 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2857 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2858 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2859 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2860 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2861 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2862 = !{!108, !2843, !2851, !2863, !696, !429, !2865, !2866, !165, !169, !105, !439, !104, !22, !32, !540, !2868, !2869, !144, !541, !112, !542, !2864, !2870, !2871, !2872, !2873}
!2863 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2844, line: 31, baseType: !2864)
!2864 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !112)
!2865 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !440, line: 329, baseType: !32)
!2866 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2844, line: 32, baseType: !2867)
!2867 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !115)
!2868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 32)
!2869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2864, size: 32)
!2871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 32)
!2872 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !440, line: 145, baseType: !108)
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2872, size: 32)
!2874 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2875, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2875 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!2876 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2877, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2878, splitDebugInlining: false, nameTableKind: None)
!2877 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!2878 = !{!105, !165, !108, !32}
!2879 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2880, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2881, retainedTypes: !555, splitDebugInlining: false, nameTableKind: None)
!2880 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!2881 = !{!2882, !30}
!2882 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2883, line: 27, baseType: !32, size: 32, elements: !2884)
!2883 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2884 = !{!2885, !2886, !2887, !2888, !2889}
!2885 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2886 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2887 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2888 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2889 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2890 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2891, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2892, retainedTypes: !2893, splitDebugInlining: false, nameTableKind: None)
!2891 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!2892 = !{!987, !2882, !30}
!2893 = !{!1171, !2894, !104, !108, !220, !113, !164, !2911}
!2894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2895, size: 32)
!2895 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !790, line: 426, baseType: !2896)
!2896 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !790, line: 411, size: 28704, elements: !2897)
!2897 = !{!2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2896, file: !790, line: 413, baseType: !1929, size: 256)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2896, file: !790, line: 414, baseType: !1931, size: 768, offset: 256)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2896, file: !790, line: 415, baseType: !1929, size: 256, offset: 1024)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2896, file: !790, line: 416, baseType: !1931, size: 768, offset: 1280)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2896, file: !790, line: 417, baseType: !1929, size: 256, offset: 2048)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2896, file: !790, line: 418, baseType: !1931, size: 768, offset: 2304)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2896, file: !790, line: 419, baseType: !1929, size: 256, offset: 3072)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2896, file: !790, line: 420, baseType: !1931, size: 768, offset: 3328)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2896, file: !790, line: 421, baseType: !1929, size: 256, offset: 4096)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2896, file: !790, line: 422, baseType: !1942, size: 1792, offset: 4352)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2896, file: !790, line: 423, baseType: !1946, size: 1920, offset: 6144)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2896, file: !790, line: 424, baseType: !1951, size: 20608, offset: 8064)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2896, file: !790, line: 425, baseType: !572, size: 32, offset: 28672)
!2911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2912, size: 32)
!2912 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !790, line: 468, baseType: !2913)
!2913 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !790, line: 445, size: 1120, elements: !2914)
!2914 = !{!2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935}
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2913, file: !790, line: 447, baseType: !794, size: 32)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2913, file: !790, line: 448, baseType: !572, size: 32, offset: 32)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2913, file: !790, line: 449, baseType: !572, size: 32, offset: 64)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2913, file: !790, line: 450, baseType: !572, size: 32, offset: 96)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2913, file: !790, line: 451, baseType: !572, size: 32, offset: 128)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2913, file: !790, line: 452, baseType: !572, size: 32, offset: 160)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2913, file: !790, line: 453, baseType: !1966, size: 96, offset: 192)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2913, file: !790, line: 454, baseType: !572, size: 32, offset: 288)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2913, file: !790, line: 455, baseType: !572, size: 32, offset: 320)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2913, file: !790, line: 456, baseType: !572, size: 32, offset: 352)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2913, file: !790, line: 457, baseType: !572, size: 32, offset: 384)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2913, file: !790, line: 458, baseType: !572, size: 32, offset: 416)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2913, file: !790, line: 459, baseType: !572, size: 32, offset: 448)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2913, file: !790, line: 460, baseType: !572, size: 32, offset: 480)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2913, file: !790, line: 461, baseType: !1977, size: 64, offset: 512)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2913, file: !790, line: 462, baseType: !794, size: 32, offset: 576)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2913, file: !790, line: 463, baseType: !794, size: 32, offset: 608)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2913, file: !790, line: 464, baseType: !1981, size: 128, offset: 640)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2913, file: !790, line: 465, baseType: !1983, size: 160, offset: 768)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2913, file: !790, line: 466, baseType: !1985, size: 160, offset: 928)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2913, file: !790, line: 467, baseType: !572, size: 32, offset: 1088)
!2936 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2937, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !555, splitDebugInlining: false, nameTableKind: None)
!2937 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!2938 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2939, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2940, splitDebugInlining: false, nameTableKind: None)
!2939 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!2940 = !{!104, !108, !22, !2941}
!2941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2942, size: 32)
!2942 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !790, line: 468, baseType: !2943)
!2943 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !790, line: 445, size: 1120, elements: !2944)
!2944 = !{!2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965}
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2943, file: !790, line: 447, baseType: !794, size: 32)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2943, file: !790, line: 448, baseType: !572, size: 32, offset: 32)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2943, file: !790, line: 449, baseType: !572, size: 32, offset: 64)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2943, file: !790, line: 450, baseType: !572, size: 32, offset: 96)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2943, file: !790, line: 451, baseType: !572, size: 32, offset: 128)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2943, file: !790, line: 452, baseType: !572, size: 32, offset: 160)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2943, file: !790, line: 453, baseType: !1966, size: 96, offset: 192)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2943, file: !790, line: 454, baseType: !572, size: 32, offset: 288)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2943, file: !790, line: 455, baseType: !572, size: 32, offset: 320)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2943, file: !790, line: 456, baseType: !572, size: 32, offset: 352)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2943, file: !790, line: 457, baseType: !572, size: 32, offset: 384)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2943, file: !790, line: 458, baseType: !572, size: 32, offset: 416)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2943, file: !790, line: 459, baseType: !572, size: 32, offset: 448)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2943, file: !790, line: 460, baseType: !572, size: 32, offset: 480)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2943, file: !790, line: 461, baseType: !1977, size: 64, offset: 512)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2943, file: !790, line: 462, baseType: !794, size: 32, offset: 576)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2943, file: !790, line: 463, baseType: !794, size: 32, offset: 608)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2943, file: !790, line: 464, baseType: !1981, size: 128, offset: 640)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2943, file: !790, line: 465, baseType: !1983, size: 160, offset: 768)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2943, file: !790, line: 466, baseType: !1985, size: 160, offset: 928)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2943, file: !790, line: 467, baseType: !572, size: 32, offset: 1088)
!2966 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2967, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2968, splitDebugInlining: false, nameTableKind: None)
!2967 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!2968 = !{!2969, !104, !108}
!2969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2970, size: 32)
!2970 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !790, line: 468, baseType: !2971)
!2971 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !790, line: 445, size: 1120, elements: !2972)
!2972 = !{!2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993}
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2971, file: !790, line: 447, baseType: !794, size: 32)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2971, file: !790, line: 448, baseType: !572, size: 32, offset: 32)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2971, file: !790, line: 449, baseType: !572, size: 32, offset: 64)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2971, file: !790, line: 450, baseType: !572, size: 32, offset: 96)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2971, file: !790, line: 451, baseType: !572, size: 32, offset: 128)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2971, file: !790, line: 452, baseType: !572, size: 32, offset: 160)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2971, file: !790, line: 453, baseType: !1966, size: 96, offset: 192)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2971, file: !790, line: 454, baseType: !572, size: 32, offset: 288)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2971, file: !790, line: 455, baseType: !572, size: 32, offset: 320)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2971, file: !790, line: 456, baseType: !572, size: 32, offset: 352)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2971, file: !790, line: 457, baseType: !572, size: 32, offset: 384)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2971, file: !790, line: 458, baseType: !572, size: 32, offset: 416)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2971, file: !790, line: 459, baseType: !572, size: 32, offset: 448)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2971, file: !790, line: 460, baseType: !572, size: 32, offset: 480)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2971, file: !790, line: 461, baseType: !1977, size: 64, offset: 512)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2971, file: !790, line: 462, baseType: !794, size: 32, offset: 576)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2971, file: !790, line: 463, baseType: !794, size: 32, offset: 608)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2971, file: !790, line: 464, baseType: !1981, size: 128, offset: 640)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2971, file: !790, line: 465, baseType: !1983, size: 160, offset: 768)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2971, file: !790, line: 466, baseType: !1985, size: 160, offset: 928)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2971, file: !790, line: 467, baseType: !572, size: 32, offset: 1088)
!2994 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2995, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2996, splitDebugInlining: false, nameTableKind: None)
!2995 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!2996 = !{!2997, !113, !104, !108}
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 32)
!2998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2999, line: 98, size: 256, elements: !3000)
!2999 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3000 = !{!3001, !3006, !3011, !3016, !3021, !3026, !3031, !3036}
!3001 = !DIDerivedType(tag: DW_TAG_member, scope: !2998, file: !2999, line: 99, baseType: !3002, size: 32)
!3002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2998, file: !2999, line: 99, size: 32, elements: !3003)
!3003 = !{!3004, !3005}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3002, file: !2999, line: 99, baseType: !113, size: 32)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3002, file: !2999, line: 99, baseType: !113, size: 32)
!3006 = !DIDerivedType(tag: DW_TAG_member, scope: !2998, file: !2999, line: 100, baseType: !3007, size: 32, offset: 32)
!3007 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2998, file: !2999, line: 100, size: 32, elements: !3008)
!3008 = !{!3009, !3010}
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3007, file: !2999, line: 100, baseType: !113, size: 32)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3007, file: !2999, line: 100, baseType: !113, size: 32)
!3011 = !DIDerivedType(tag: DW_TAG_member, scope: !2998, file: !2999, line: 101, baseType: !3012, size: 32, offset: 64)
!3012 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2998, file: !2999, line: 101, size: 32, elements: !3013)
!3013 = !{!3014, !3015}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3012, file: !2999, line: 101, baseType: !113, size: 32)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3012, file: !2999, line: 101, baseType: !113, size: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, scope: !2998, file: !2999, line: 102, baseType: !3017, size: 32, offset: 96)
!3017 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2998, file: !2999, line: 102, size: 32, elements: !3018)
!3018 = !{!3019, !3020}
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3017, file: !2999, line: 102, baseType: !113, size: 32)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3017, file: !2999, line: 102, baseType: !113, size: 32)
!3021 = !DIDerivedType(tag: DW_TAG_member, scope: !2998, file: !2999, line: 103, baseType: !3022, size: 32, offset: 128)
!3022 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2998, file: !2999, line: 103, size: 32, elements: !3023)
!3023 = !{!3024, !3025}
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3022, file: !2999, line: 103, baseType: !113, size: 32)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3022, file: !2999, line: 103, baseType: !113, size: 32)
!3026 = !DIDerivedType(tag: DW_TAG_member, scope: !2998, file: !2999, line: 104, baseType: !3027, size: 32, offset: 160)
!3027 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2998, file: !2999, line: 104, size: 32, elements: !3028)
!3028 = !{!3029, !3030}
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3027, file: !2999, line: 104, baseType: !113, size: 32)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3027, file: !2999, line: 104, baseType: !113, size: 32)
!3031 = !DIDerivedType(tag: DW_TAG_member, scope: !2998, file: !2999, line: 105, baseType: !3032, size: 32, offset: 192)
!3032 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2998, file: !2999, line: 105, size: 32, elements: !3033)
!3033 = !{!3034, !3035}
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3032, file: !2999, line: 105, baseType: !113, size: 32)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3032, file: !2999, line: 105, baseType: !113, size: 32)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2998, file: !2999, line: 106, baseType: !113, size: 32, offset: 224)
!3037 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3038, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2881, retainedTypes: !3039, splitDebugInlining: false, nameTableKind: None)
!3038 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!3039 = !{!3040, !104, !108, !3065, !3108, !113}
!3040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3041, size: 32)
!3041 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !790, line: 468, baseType: !3042)
!3042 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !790, line: 445, size: 1120, elements: !3043)
!3043 = !{!3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064}
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3042, file: !790, line: 447, baseType: !794, size: 32)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3042, file: !790, line: 448, baseType: !572, size: 32, offset: 32)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3042, file: !790, line: 449, baseType: !572, size: 32, offset: 64)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3042, file: !790, line: 450, baseType: !572, size: 32, offset: 96)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3042, file: !790, line: 451, baseType: !572, size: 32, offset: 128)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3042, file: !790, line: 452, baseType: !572, size: 32, offset: 160)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3042, file: !790, line: 453, baseType: !1966, size: 96, offset: 192)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3042, file: !790, line: 454, baseType: !572, size: 32, offset: 288)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3042, file: !790, line: 455, baseType: !572, size: 32, offset: 320)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3042, file: !790, line: 456, baseType: !572, size: 32, offset: 352)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3042, file: !790, line: 457, baseType: !572, size: 32, offset: 384)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3042, file: !790, line: 458, baseType: !572, size: 32, offset: 416)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3042, file: !790, line: 459, baseType: !572, size: 32, offset: 448)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3042, file: !790, line: 460, baseType: !572, size: 32, offset: 480)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3042, file: !790, line: 461, baseType: !1977, size: 64, offset: 512)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3042, file: !790, line: 462, baseType: !794, size: 32, offset: 576)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3042, file: !790, line: 463, baseType: !794, size: 32, offset: 608)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3042, file: !790, line: 464, baseType: !1981, size: 128, offset: 640)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3042, file: !790, line: 465, baseType: !1983, size: 160, offset: 768)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3042, file: !790, line: 466, baseType: !1985, size: 160, offset: 928)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3042, file: !790, line: 467, baseType: !572, size: 32, offset: 1088)
!3065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3066, size: 32)
!3066 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2999, line: 141, baseType: !3067)
!3067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2999, line: 97, size: 256, elements: !3068)
!3068 = !{!3069}
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !3067, file: !2999, line: 107, baseType: !3070, size: 256)
!3070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2999, line: 98, size: 256, elements: !3071)
!3071 = !{!3072, !3077, !3082, !3087, !3092, !3097, !3102, !3107}
!3072 = !DIDerivedType(tag: DW_TAG_member, scope: !3070, file: !2999, line: 99, baseType: !3073, size: 32)
!3073 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3070, file: !2999, line: 99, size: 32, elements: !3074)
!3074 = !{!3075, !3076}
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3073, file: !2999, line: 99, baseType: !113, size: 32)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3073, file: !2999, line: 99, baseType: !113, size: 32)
!3077 = !DIDerivedType(tag: DW_TAG_member, scope: !3070, file: !2999, line: 100, baseType: !3078, size: 32, offset: 32)
!3078 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3070, file: !2999, line: 100, size: 32, elements: !3079)
!3079 = !{!3080, !3081}
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3078, file: !2999, line: 100, baseType: !113, size: 32)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3078, file: !2999, line: 100, baseType: !113, size: 32)
!3082 = !DIDerivedType(tag: DW_TAG_member, scope: !3070, file: !2999, line: 101, baseType: !3083, size: 32, offset: 64)
!3083 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3070, file: !2999, line: 101, size: 32, elements: !3084)
!3084 = !{!3085, !3086}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3083, file: !2999, line: 101, baseType: !113, size: 32)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3083, file: !2999, line: 101, baseType: !113, size: 32)
!3087 = !DIDerivedType(tag: DW_TAG_member, scope: !3070, file: !2999, line: 102, baseType: !3088, size: 32, offset: 96)
!3088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3070, file: !2999, line: 102, size: 32, elements: !3089)
!3089 = !{!3090, !3091}
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3088, file: !2999, line: 102, baseType: !113, size: 32)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3088, file: !2999, line: 102, baseType: !113, size: 32)
!3092 = !DIDerivedType(tag: DW_TAG_member, scope: !3070, file: !2999, line: 103, baseType: !3093, size: 32, offset: 128)
!3093 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3070, file: !2999, line: 103, size: 32, elements: !3094)
!3094 = !{!3095, !3096}
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3093, file: !2999, line: 103, baseType: !113, size: 32)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3093, file: !2999, line: 103, baseType: !113, size: 32)
!3097 = !DIDerivedType(tag: DW_TAG_member, scope: !3070, file: !2999, line: 104, baseType: !3098, size: 32, offset: 160)
!3098 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3070, file: !2999, line: 104, size: 32, elements: !3099)
!3099 = !{!3100, !3101}
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3098, file: !2999, line: 104, baseType: !113, size: 32)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3098, file: !2999, line: 104, baseType: !113, size: 32)
!3102 = !DIDerivedType(tag: DW_TAG_member, scope: !3070, file: !2999, line: 105, baseType: !3103, size: 32, offset: 192)
!3103 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3070, file: !2999, line: 105, size: 32, elements: !3104)
!3104 = !{!3105, !3106}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3103, file: !2999, line: 105, baseType: !113, size: 32)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3103, file: !2999, line: 105, baseType: !113, size: 32)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3070, file: !2999, line: 106, baseType: !113, size: 32, offset: 224)
!3108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 32)
!3109 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3110, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1914, retainedTypes: !3111, splitDebugInlining: false, nameTableKind: None)
!3110 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!3111 = !{!1171, !220, !164, !113, !3112, !3129}
!3112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3113, size: 32)
!3113 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !790, line: 426, baseType: !3114)
!3114 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !790, line: 411, size: 28704, elements: !3115)
!3115 = !{!3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128}
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3114, file: !790, line: 413, baseType: !1929, size: 256)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3114, file: !790, line: 414, baseType: !1931, size: 768, offset: 256)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3114, file: !790, line: 415, baseType: !1929, size: 256, offset: 1024)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3114, file: !790, line: 416, baseType: !1931, size: 768, offset: 1280)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3114, file: !790, line: 417, baseType: !1929, size: 256, offset: 2048)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3114, file: !790, line: 418, baseType: !1931, size: 768, offset: 2304)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3114, file: !790, line: 419, baseType: !1929, size: 256, offset: 3072)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3114, file: !790, line: 420, baseType: !1931, size: 768, offset: 3328)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3114, file: !790, line: 421, baseType: !1929, size: 256, offset: 4096)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3114, file: !790, line: 422, baseType: !1942, size: 1792, offset: 4352)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3114, file: !790, line: 423, baseType: !1946, size: 1920, offset: 6144)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3114, file: !790, line: 424, baseType: !1951, size: 20608, offset: 8064)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3114, file: !790, line: 425, baseType: !572, size: 32, offset: 28672)
!3129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3130, size: 32)
!3130 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !790, line: 468, baseType: !3131)
!3131 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !790, line: 445, size: 1120, elements: !3132)
!3132 = !{!3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153}
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3131, file: !790, line: 447, baseType: !794, size: 32)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3131, file: !790, line: 448, baseType: !572, size: 32, offset: 32)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3131, file: !790, line: 449, baseType: !572, size: 32, offset: 64)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3131, file: !790, line: 450, baseType: !572, size: 32, offset: 96)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3131, file: !790, line: 451, baseType: !572, size: 32, offset: 128)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3131, file: !790, line: 452, baseType: !572, size: 32, offset: 160)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3131, file: !790, line: 453, baseType: !1966, size: 96, offset: 192)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3131, file: !790, line: 454, baseType: !572, size: 32, offset: 288)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3131, file: !790, line: 455, baseType: !572, size: 32, offset: 320)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3131, file: !790, line: 456, baseType: !572, size: 32, offset: 352)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3131, file: !790, line: 457, baseType: !572, size: 32, offset: 384)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3131, file: !790, line: 458, baseType: !572, size: 32, offset: 416)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3131, file: !790, line: 459, baseType: !572, size: 32, offset: 448)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3131, file: !790, line: 460, baseType: !572, size: 32, offset: 480)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3131, file: !790, line: 461, baseType: !1977, size: 64, offset: 512)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3131, file: !790, line: 462, baseType: !794, size: 32, offset: 576)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3131, file: !790, line: 463, baseType: !794, size: 32, offset: 608)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3131, file: !790, line: 464, baseType: !1981, size: 128, offset: 640)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3131, file: !790, line: 465, baseType: !1983, size: 160, offset: 768)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3131, file: !790, line: 466, baseType: !1985, size: 160, offset: 928)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3131, file: !790, line: 467, baseType: !572, size: 32, offset: 1088)
!3154 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3155, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3156, splitDebugInlining: false, nameTableKind: None)
!3155 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!3156 = !{!3157, !104, !108}
!3157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3158, size: 32)
!3158 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !790, line: 468, baseType: !3159)
!3159 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !790, line: 445, size: 1120, elements: !3160)
!3160 = !{!3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181}
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3159, file: !790, line: 447, baseType: !794, size: 32)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3159, file: !790, line: 448, baseType: !572, size: 32, offset: 32)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3159, file: !790, line: 449, baseType: !572, size: 32, offset: 64)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3159, file: !790, line: 450, baseType: !572, size: 32, offset: 96)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3159, file: !790, line: 451, baseType: !572, size: 32, offset: 128)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3159, file: !790, line: 452, baseType: !572, size: 32, offset: 160)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3159, file: !790, line: 453, baseType: !1966, size: 96, offset: 192)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3159, file: !790, line: 454, baseType: !572, size: 32, offset: 288)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3159, file: !790, line: 455, baseType: !572, size: 32, offset: 320)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3159, file: !790, line: 456, baseType: !572, size: 32, offset: 352)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3159, file: !790, line: 457, baseType: !572, size: 32, offset: 384)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3159, file: !790, line: 458, baseType: !572, size: 32, offset: 416)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3159, file: !790, line: 459, baseType: !572, size: 32, offset: 448)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3159, file: !790, line: 460, baseType: !572, size: 32, offset: 480)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3159, file: !790, line: 461, baseType: !1977, size: 64, offset: 512)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3159, file: !790, line: 462, baseType: !794, size: 32, offset: 576)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3159, file: !790, line: 463, baseType: !794, size: 32, offset: 608)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3159, file: !790, line: 464, baseType: !1981, size: 128, offset: 640)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3159, file: !790, line: 465, baseType: !1983, size: 160, offset: 768)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3159, file: !790, line: 466, baseType: !1985, size: 160, offset: 928)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3159, file: !790, line: 467, baseType: !572, size: 32, offset: 1088)
!3182 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3183, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3184, splitDebugInlining: false, nameTableKind: None)
!3183 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!3184 = !{!107, !443, !439, !1336, !3185, !165, !104}
!3185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3186, size: 32)
!3186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!3187 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3188, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3189, splitDebugInlining: false, nameTableKind: None)
!3188 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!3189 = !{!3190}
!3190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3191, size: 32)
!3191 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !568, line: 532, baseType: !3192)
!3192 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !568, line: 500, size: 1088, elements: !3193)
!3193 = !{!3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223}
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3192, file: !568, line: 502, baseType: !572, size: 32)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3192, file: !568, line: 503, baseType: !572, size: 32, offset: 32)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3192, file: !568, line: 504, baseType: !572, size: 32, offset: 64)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3192, file: !568, line: 505, baseType: !572, size: 32, offset: 96)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3192, file: !568, line: 506, baseType: !572, size: 32, offset: 128)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3192, file: !568, line: 507, baseType: !572, size: 32, offset: 160)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3192, file: !568, line: 508, baseType: !572, size: 32, offset: 192)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3192, file: !568, line: 509, baseType: !113, size: 32, offset: 224)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3192, file: !568, line: 510, baseType: !572, size: 32, offset: 256)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3192, file: !568, line: 511, baseType: !572, size: 32, offset: 288)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3192, file: !568, line: 512, baseType: !1205, size: 64, offset: 320)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3192, file: !568, line: 513, baseType: !572, size: 32, offset: 384)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3192, file: !568, line: 514, baseType: !572, size: 32, offset: 416)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3192, file: !568, line: 515, baseType: !572, size: 32, offset: 448)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3192, file: !568, line: 516, baseType: !113, size: 32, offset: 480)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3192, file: !568, line: 517, baseType: !572, size: 32, offset: 512)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3192, file: !568, line: 518, baseType: !572, size: 32, offset: 544)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3192, file: !568, line: 519, baseType: !1205, size: 64, offset: 576)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3192, file: !568, line: 520, baseType: !572, size: 32, offset: 640)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3192, file: !568, line: 521, baseType: !572, size: 32, offset: 672)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3192, file: !568, line: 522, baseType: !572, size: 32, offset: 704)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3192, file: !568, line: 523, baseType: !113, size: 32, offset: 736)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3192, file: !568, line: 524, baseType: !572, size: 32, offset: 768)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3192, file: !568, line: 525, baseType: !572, size: 32, offset: 800)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3192, file: !568, line: 526, baseType: !1205, size: 64, offset: 832)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3192, file: !568, line: 527, baseType: !572, size: 32, offset: 896)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3192, file: !568, line: 528, baseType: !572, size: 32, offset: 928)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3192, file: !568, line: 529, baseType: !1205, size: 64, offset: 960)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3192, file: !568, line: 530, baseType: !572, size: 32, offset: 1024)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3192, file: !568, line: 531, baseType: !572, size: 32, offset: 1056)
!3224 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3225, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3225 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!3226 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3227, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3228, retainedTypes: !3244, splitDebugInlining: false, nameTableKind: None)
!3227 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!3228 = !{!3229, !3236, !3240}
!3229 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3230, line: 38, baseType: !32, size: 32, elements: !3231)
!3230 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3231 = !{!3232, !3233, !3234, !3235}
!3232 = !DIEnumerator(name: "HAL_OK", value: 0)
!3233 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3234 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3235 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3236 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1178, line: 184, baseType: !32, size: 32, elements: !3237)
!3237 = !{!3238, !3239}
!3238 = !DIEnumerator(name: "RESET", value: 0)
!3239 = !DIEnumerator(name: "SET", value: 1)
!3240 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1178, line: 190, baseType: !32, size: 32, elements: !3241)
!3241 = !{!3242, !3243}
!3242 = !DIEnumerator(name: "DISABLE", value: 0)
!3243 = !DIEnumerator(name: "ENABLE", value: 1)
!3244 = !{!104, !3245, !164, !113, !1825, !3279, !3285, !3296, !168, !3297, !114}
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3246, size: 32)
!3246 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !568, line: 532, baseType: !3247)
!3247 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !568, line: 500, size: 1088, elements: !3248)
!3248 = !{!3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278}
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3247, file: !568, line: 502, baseType: !572, size: 32)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3247, file: !568, line: 503, baseType: !572, size: 32, offset: 32)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3247, file: !568, line: 504, baseType: !572, size: 32, offset: 64)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3247, file: !568, line: 505, baseType: !572, size: 32, offset: 96)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3247, file: !568, line: 506, baseType: !572, size: 32, offset: 128)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3247, file: !568, line: 507, baseType: !572, size: 32, offset: 160)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3247, file: !568, line: 508, baseType: !572, size: 32, offset: 192)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3247, file: !568, line: 509, baseType: !113, size: 32, offset: 224)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3247, file: !568, line: 510, baseType: !572, size: 32, offset: 256)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3247, file: !568, line: 511, baseType: !572, size: 32, offset: 288)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3247, file: !568, line: 512, baseType: !1205, size: 64, offset: 320)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3247, file: !568, line: 513, baseType: !572, size: 32, offset: 384)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3247, file: !568, line: 514, baseType: !572, size: 32, offset: 416)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3247, file: !568, line: 515, baseType: !572, size: 32, offset: 448)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3247, file: !568, line: 516, baseType: !113, size: 32, offset: 480)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3247, file: !568, line: 517, baseType: !572, size: 32, offset: 512)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3247, file: !568, line: 518, baseType: !572, size: 32, offset: 544)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3247, file: !568, line: 519, baseType: !1205, size: 64, offset: 576)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3247, file: !568, line: 520, baseType: !572, size: 32, offset: 640)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3247, file: !568, line: 521, baseType: !572, size: 32, offset: 672)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3247, file: !568, line: 522, baseType: !572, size: 32, offset: 704)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3247, file: !568, line: 523, baseType: !113, size: 32, offset: 736)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3247, file: !568, line: 524, baseType: !572, size: 32, offset: 768)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3247, file: !568, line: 525, baseType: !572, size: 32, offset: 800)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3247, file: !568, line: 526, baseType: !1205, size: 64, offset: 832)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3247, file: !568, line: 527, baseType: !572, size: 32, offset: 896)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3247, file: !568, line: 528, baseType: !572, size: 32, offset: 928)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3247, file: !568, line: 529, baseType: !1205, size: 64, offset: 960)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3247, file: !568, line: 530, baseType: !572, size: 32, offset: 1024)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3247, file: !568, line: 531, baseType: !572, size: 32, offset: 1056)
!3279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3280, size: 32)
!3280 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !568, line: 494, baseType: !3281)
!3281 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !568, line: 490, size: 64, elements: !3282)
!3282 = !{!3283, !3284}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3281, file: !568, line: 492, baseType: !572, size: 32)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3281, file: !568, line: 493, baseType: !572, size: 32, offset: 32)
!3285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3286, size: 32)
!3286 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !568, line: 369, baseType: !3287)
!3287 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !568, line: 360, size: 224, elements: !3288)
!3288 = !{!3289, !3290, !3291, !3292, !3293, !3294, !3295}
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3287, file: !568, line: 362, baseType: !572, size: 32)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3287, file: !568, line: 363, baseType: !572, size: 32, offset: 32)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3287, file: !568, line: 364, baseType: !572, size: 32, offset: 64)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3287, file: !568, line: 365, baseType: !572, size: 32, offset: 96)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3287, file: !568, line: 366, baseType: !572, size: 32, offset: 128)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3287, file: !568, line: 367, baseType: !572, size: 32, offset: 160)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3287, file: !568, line: 368, baseType: !572, size: 32, offset: 192)
!3296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 32)
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3298, size: 32)
!3298 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !568, line: 441, baseType: !3299)
!3299 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !568, line: 430, size: 320, elements: !3300)
!3300 = !{!3301, !3302, !3303, !3304, !3305, !3306, !3307, !3308, !3309}
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3299, file: !568, line: 432, baseType: !572, size: 32)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3299, file: !568, line: 433, baseType: !572, size: 32, offset: 32)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3299, file: !568, line: 434, baseType: !572, size: 32, offset: 64)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3299, file: !568, line: 435, baseType: !572, size: 32, offset: 96)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3299, file: !568, line: 436, baseType: !572, size: 32, offset: 128)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3299, file: !568, line: 437, baseType: !572, size: 32, offset: 160)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3299, file: !568, line: 438, baseType: !572, size: 32, offset: 192)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3299, file: !568, line: 439, baseType: !572, size: 32, offset: 224)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3299, file: !568, line: 440, baseType: !1490, size: 64, offset: 256)
!3310 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3311, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3312, retainedTypes: !3313, splitDebugInlining: false, nameTableKind: None)
!3311 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!3312 = !{!1177}
!3313 = !{!3314, !113, !3322, !3328, !3339}
!3314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3315, size: 32)
!3315 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !790, line: 770, baseType: !3316)
!3316 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !790, line: 764, size: 128, elements: !3317)
!3317 = !{!3318, !3319, !3320, !3321}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3316, file: !790, line: 766, baseType: !572, size: 32)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3316, file: !790, line: 767, baseType: !572, size: 32, offset: 32)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3316, file: !790, line: 768, baseType: !572, size: 32, offset: 64)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3316, file: !790, line: 769, baseType: !794, size: 32, offset: 96)
!3322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3323, size: 32)
!3323 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !568, line: 494, baseType: !3324)
!3324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !568, line: 490, size: 64, elements: !3325)
!3325 = !{!3326, !3327}
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3324, file: !568, line: 492, baseType: !572, size: 32)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3324, file: !568, line: 493, baseType: !572, size: 32, offset: 32)
!3328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3329, size: 32)
!3329 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !568, line: 369, baseType: !3330)
!3330 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !568, line: 360, size: 224, elements: !3331)
!3331 = !{!3332, !3333, !3334, !3335, !3336, !3337, !3338}
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3330, file: !568, line: 362, baseType: !572, size: 32)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3330, file: !568, line: 363, baseType: !572, size: 32, offset: 32)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3330, file: !568, line: 364, baseType: !572, size: 32, offset: 64)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3330, file: !568, line: 365, baseType: !572, size: 32, offset: 96)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3330, file: !568, line: 366, baseType: !572, size: 32, offset: 128)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3330, file: !568, line: 367, baseType: !572, size: 32, offset: 160)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3330, file: !568, line: 368, baseType: !572, size: 32, offset: 192)
!3339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3340, size: 32)
!3340 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !568, line: 532, baseType: !3341)
!3341 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !568, line: 500, size: 1088, elements: !3342)
!3342 = !{!3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372}
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3341, file: !568, line: 502, baseType: !572, size: 32)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3341, file: !568, line: 503, baseType: !572, size: 32, offset: 32)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3341, file: !568, line: 504, baseType: !572, size: 32, offset: 64)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3341, file: !568, line: 505, baseType: !572, size: 32, offset: 96)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3341, file: !568, line: 506, baseType: !572, size: 32, offset: 128)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3341, file: !568, line: 507, baseType: !572, size: 32, offset: 160)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3341, file: !568, line: 508, baseType: !572, size: 32, offset: 192)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3341, file: !568, line: 509, baseType: !113, size: 32, offset: 224)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3341, file: !568, line: 510, baseType: !572, size: 32, offset: 256)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3341, file: !568, line: 511, baseType: !572, size: 32, offset: 288)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3341, file: !568, line: 512, baseType: !1205, size: 64, offset: 320)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3341, file: !568, line: 513, baseType: !572, size: 32, offset: 384)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3341, file: !568, line: 514, baseType: !572, size: 32, offset: 416)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3341, file: !568, line: 515, baseType: !572, size: 32, offset: 448)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3341, file: !568, line: 516, baseType: !113, size: 32, offset: 480)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3341, file: !568, line: 517, baseType: !572, size: 32, offset: 512)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3341, file: !568, line: 518, baseType: !572, size: 32, offset: 544)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3341, file: !568, line: 519, baseType: !1205, size: 64, offset: 576)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3341, file: !568, line: 520, baseType: !572, size: 32, offset: 640)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3341, file: !568, line: 521, baseType: !572, size: 32, offset: 672)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3341, file: !568, line: 522, baseType: !572, size: 32, offset: 704)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3341, file: !568, line: 523, baseType: !113, size: 32, offset: 736)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3341, file: !568, line: 524, baseType: !572, size: 32, offset: 768)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3341, file: !568, line: 525, baseType: !572, size: 32, offset: 800)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3341, file: !568, line: 526, baseType: !1205, size: 64, offset: 832)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3341, file: !568, line: 527, baseType: !572, size: 32, offset: 896)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3341, file: !568, line: 528, baseType: !572, size: 32, offset: 928)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3341, file: !568, line: 529, baseType: !1205, size: 64, offset: 960)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3341, file: !568, line: 530, baseType: !572, size: 32, offset: 1024)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3341, file: !568, line: 531, baseType: !572, size: 32, offset: 1056)
!3373 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3374, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3375, splitDebugInlining: false, nameTableKind: None)
!3374 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!3375 = !{!104, !439}
!3376 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3377, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3378, retainedTypes: !555, splitDebugInlining: false, nameTableKind: None)
!3377 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!3378 = !{!3379, !3386, !30}
!3379 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3380, line: 14, baseType: !32, size: 32, elements: !3381)
!3380 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3381 = !{!3382, !3383, !3384, !3385}
!3382 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3383 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3384 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3385 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3386 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3380, line: 42, baseType: !32, size: 32, elements: !3387)
!3387 = !{!3388, !3389, !3390, !3391, !3392, !3393}
!3388 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3389 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3390 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3391 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3392 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3393 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3394 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3395, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !555, splitDebugInlining: false, nameTableKind: None)
!3395 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!3396 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3397, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3398, splitDebugInlining: false, nameTableKind: None)
!3397 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!3398 = !{!22, !104, !108}
!3399 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3400, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !555, splitDebugInlining: false, nameTableKind: None)
!3400 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!3401 = !{!"Ubuntu clang version 14.0.6"}
!3402 = !{i32 7, !"Dwarf Version", i32 4}
!3403 = !{i32 2, !"Debug Info Version", i32 3}
!3404 = !{i32 1, !"wchar_size", i32 4}
!3405 = !{i32 1, !"min_enum_size", i32 4}
!3406 = !{i32 1, !"branch-target-enforcement", i32 0}
!3407 = !{i32 1, !"sign-return-address", i32 0}
!3408 = !{i32 1, !"sign-return-address-all", i32 0}
!3409 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3410 = !{i32 7, !"frame-pointer", i32 2}
!3411 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3412, file: !3412, line: 26, type: !3413, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2836, retainedNodes: !437)
!3412 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3413 = !DISubroutineType(types: !3414)
!3414 = !{null}
!3415 = !DILocation(line: 28, column: 1, scope: !3411)
!3416 = !{i64 2155136079, i64 2155136099, i64 2155136162}
!3417 = !DILocation(line: 29, column: 1, scope: !3411)
!3418 = !{i64 2155136494, i64 2155136514, i64 2155136577}
!3419 = !DILocation(line: 30, column: 1, scope: !3411)
!3420 = !{i64 2155136913, i64 2155136933, i64 2155136996}
!3421 = !DILocation(line: 31, column: 1, scope: !3411)
!3422 = !{i64 2155137332, i64 2155137352, i64 2155137415}
!3423 = !DILocation(line: 33, column: 1, scope: !3411)
!3424 = !{i64 2155137624, i64 2155137644, i64 2155137707}
!3425 = !DILocation(line: 35, column: 1, scope: !3411)
!3426 = !{i64 2155137949, i64 2155137969, i64 2155138032}
!3427 = !DILocation(line: 50, column: 1, scope: !3411)
!3428 = !{i64 2155138376, i64 2155138396, i64 2155138459}
!3429 = !DILocation(line: 54, column: 1, scope: !3411)
!3430 = !{i64 2155138815, i64 2155138835, i64 2155138898}
!3431 = !DILocation(line: 61, column: 1, scope: !3411)
!3432 = !{i64 2155139132, i64 2155139152, i64 2155139215}
!3433 = !DILocation(line: 63, column: 1, scope: !3411)
!3434 = !{i64 2155139512, i64 2155139532, i64 2155139595}
!3435 = !DILocation(line: 64, column: 1, scope: !3411)
!3436 = !{i64 2155140034, i64 2155140054, i64 2155140117}
!3437 = !DILocation(line: 65, column: 1, scope: !3411)
!3438 = !{i64 2155140532, i64 2155140552, i64 2155140615}
!3439 = !DILocation(line: 66, column: 1, scope: !3411)
!3440 = !{i64 2155141014, i64 2155141034, i64 2155141097}
!3441 = !DILocation(line: 67, column: 1, scope: !3411)
!3442 = !{i64 2155141521, i64 2155141541, i64 2155141604}
!3443 = !DILocation(line: 68, column: 1, scope: !3411)
!3444 = !{i64 2155142009, i64 2155142029, i64 2155142092}
!3445 = !DILocation(line: 70, column: 1, scope: !3411)
!3446 = !{i64 2155142477, i64 2155142497, i64 2155142560}
!3447 = !DILocation(line: 71, column: 1, scope: !3411)
!3448 = !{i64 2155142919, i64 2155142939, i64 2155143002}
!3449 = !DILocation(line: 72, column: 1, scope: !3411)
!3450 = !{i64 2155143377, i64 2155143397, i64 2155143460}
!3451 = !DILocation(line: 79, column: 1, scope: !3411)
!3452 = !{i64 2155143831, i64 2155143851, i64 2155143914}
!3453 = !DILocation(line: 80, column: 1, scope: !3411)
!3454 = !{i64 2155148403, i64 2155148423, i64 2155148486}
!3455 = !DILocation(line: 82, column: 1, scope: !3411)
!3456 = !{i64 2155148894, i64 2155148914, i64 2155148977}
!3457 = !DILocation(line: 97, column: 1, scope: !3411)
!3458 = !{i64 2155149231, i64 2155149251, i64 2155149314}
!3459 = !DILocation(line: 99, column: 1, scope: !3411)
!3460 = !{i64 2155149449, i64 2155149469, i64 2155149532}
!3461 = !DILocation(line: 102, column: 1, scope: !3411)
!3462 = !{i64 2155149706, i64 2155149726, i64 2155149789}
!3463 = !DILocation(line: 105, column: 1, scope: !3411)
!3464 = !{i64 2155149946, i64 2155149966, i64 2155150029}
!3465 = !DILocation(line: 115, column: 1, scope: !3411)
!3466 = !{i64 2155150285, i64 2155150305, i64 2155150368}
!3467 = !DILocation(line: 118, column: 1, scope: !3411)
!3468 = !{i64 2155150629, i64 2155150649, i64 2155150712}
!3469 = !DILocation(line: 32, column: 1, scope: !3470)
!3470 = !DILexicalBlockFile(scope: !3411, file: !3471, discriminator: 0)
!3471 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3472 = !{i64 2155150985, i64 2155151005, i64 2155151068}
!3473 = !DILocation(line: 33, column: 1, scope: !3470)
!3474 = !{i64 2155151497, i64 2155151517, i64 2155151580}
!3475 = !DILocation(line: 53, column: 1, scope: !3470)
!3476 = !{i64 2155152005, i64 2155152025, i64 2155152088}
!3477 = !DILocation(line: 54, column: 1, scope: !3470)
!3478 = !{i64 2155152423, i64 2155152443, i64 2155152506}
!3479 = !DILocation(line: 55, column: 1, scope: !3470)
!3480 = !{i64 2155152841, i64 2155152861, i64 2155152924}
!3481 = !DILocation(line: 56, column: 1, scope: !3470)
!3482 = !{i64 2155153259, i64 2155153279, i64 2155153342}
!3483 = !DILocation(line: 57, column: 1, scope: !3470)
!3484 = !{i64 2155153677, i64 2155153697, i64 2155153760}
!3485 = !DILocation(line: 58, column: 1, scope: !3470)
!3486 = !{i64 2155154095, i64 2155154115, i64 2155154178}
!3487 = !DILocation(line: 59, column: 1, scope: !3470)
!3488 = !{i64 2155154513, i64 2155154533, i64 2155154596}
!3489 = !DILocation(line: 60, column: 1, scope: !3470)
!3490 = !{i64 2155154937, i64 2155154957, i64 2155155020}
!3491 = !DILocation(line: 61, column: 1, scope: !3470)
!3492 = !{i64 2155155254, i64 2155155274, i64 2155155337}
!3493 = !DILocation(line: 70, column: 1, scope: !3470)
!3494 = !{i64 2155155483, i64 2155155503, i64 2155155566}
!3495 = !DILocation(line: 72, column: 1, scope: !3470)
!3496 = !{i64 2155155815, i64 2155155835, i64 2155155898}
!3497 = !DILocation(line: 73, column: 1, scope: !3470)
!3498 = !{i64 2155156265, i64 2155156285, i64 2155156348}
!3499 = !DILocation(line: 74, column: 1, scope: !3470)
!3500 = !{i64 2155156715, i64 2155156735, i64 2155156798}
!3501 = !DILocation(line: 75, column: 1, scope: !3470)
!3502 = !{i64 2155157165, i64 2155157185, i64 2155157248}
!3503 = !DILocation(line: 76, column: 1, scope: !3470)
!3504 = !{i64 2155157615, i64 2155157635, i64 2155157698}
!3505 = !DILocation(line: 77, column: 1, scope: !3470)
!3506 = !{i64 2155158065, i64 2155158085, i64 2155158148}
!3507 = !DILocation(line: 78, column: 1, scope: !3470)
!3508 = !{i64 2155162576, i64 2155162596, i64 2155162659}
!3509 = !DILocation(line: 79, column: 1, scope: !3470)
!3510 = !{i64 2155163026, i64 2155163046, i64 2155163109}
!3511 = !DILocation(line: 80, column: 1, scope: !3470)
!3512 = !{i64 2155163479, i64 2155163499, i64 2155163562}
!3513 = !DILocation(line: 84, column: 1, scope: !3470)
!3514 = !{i64 2155163811, i64 2155163831, i64 2155163894}
!3515 = !DILocation(line: 91, column: 1, scope: !3470)
!3516 = !{i64 2155164208, i64 2155164228, i64 2155164291}
!3517 = !DILocation(line: 93, column: 1, scope: !3470)
!3518 = !{i64 2155164575, i64 2155164595, i64 2155164658}
!3519 = !DILocation(line: 106, column: 1, scope: !3470)
!3520 = !{i64 2155164845, i64 2155164865, i64 2155164928}
!3521 = !DILocation(line: 11, column: 1, scope: !3522)
!3522 = !DILexicalBlockFile(scope: !3411, file: !3523, discriminator: 0)
!3523 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3524 = distinct !DISubprogram(name: "main", scope: !119, file: !119, line: 29, type: !3413, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3525)
!3525 = !{!3526, !3543, !3545, !3547, !3551, !3553, !3554, !3556, !3558, !3561, !3563, !3564, !3569, !3570, !3571, !3575, !3577}
!3526 = !DILocalVariable(name: "vnd_sensor", scope: !3524, file: !119, line: 31, type: !3527)
!3527 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3528)
!3528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3529, size: 32)
!3529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3530)
!3530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !3531)
!3531 = !{!3532, !3533, !3534, !3535, !3541, !3542}
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3530, file: !411, line: 380, baseType: !105, size: 32)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !3530, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !3530, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3530, file: !411, line: 386, baseType: !3536, size: 32, offset: 96)
!3536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3537, size: 32)
!3537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !3538)
!3538 = !{!3539, !3540}
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !3537, file: !411, line: 359, baseType: !164, size: 8)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !3537, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3530, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !3530, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!3543 = !DILocalVariable(name: "iodev", scope: !3524, file: !119, line: 32, type: !3544)
!3544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 32)
!3545 = !DILocalVariable(name: "n", scope: !3546, file: !119, line: 35, type: !108)
!3546 = distinct !DILexicalBlock(scope: !3524, file: !119, line: 35, column: 2)
!3547 = !DILocalVariable(name: "sqe", scope: !3548, file: !119, line: 36, type: !3550)
!3548 = distinct !DILexicalBlock(scope: !3549, file: !119, line: 35, column: 30)
!3549 = distinct !DILexicalBlock(scope: !3546, file: !119, line: 35, column: 2)
!3550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!3551 = !DILocalVariable(name: "idx", scope: !3552, file: !119, line: 36, type: !24)
!3552 = distinct !DILexicalBlock(scope: !3548, file: !119, line: 36, column: 26)
!3553 = !DILocalVariable(name: "acq", scope: !3552, file: !119, line: 36, type: !422)
!3554 = !DILocalVariable(name: "m", scope: !3555, file: !119, line: 44, type: !108)
!3555 = distinct !DILexicalBlock(scope: !3524, file: !119, line: 43, column: 15)
!3556 = !DILocalVariable(name: "userdata", scope: !3555, file: !119, line: 45, type: !3557)
!3557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 128, elements: !461)
!3558 = !DILocalVariable(name: "cqe", scope: !3559, file: !119, line: 55, type: !3560)
!3559 = distinct !DILexicalBlock(scope: !3555, file: !119, line: 54, column: 17)
!3560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 32)
!3561 = !DILocalVariable(name: "idx", scope: !3562, file: !119, line: 55, type: !24)
!3562 = distinct !DILexicalBlock(scope: !3559, file: !119, line: 55, column: 27)
!3563 = !DILocalVariable(name: "has_consumable", scope: !3562, file: !119, line: 55, type: !422)
!3564 = !DILocalVariable(name: "_str", scope: !3565, file: !119, line: 81, type: !105)
!3565 = distinct !DILexicalBlock(scope: !3566, file: !119, line: 81, column: 4)
!3566 = distinct !DILexicalBlock(scope: !3567, file: !119, line: 80, column: 27)
!3567 = distinct !DILexicalBlock(scope: !3568, file: !119, line: 80, column: 3)
!3568 = distinct !DILexicalBlock(scope: !3555, file: !119, line: 80, column: 3)
!3569 = !DILocalVariable(name: "is_user_context", scope: !3565, file: !119, line: 81, type: !422)
!3570 = !DILocalVariable(name: "filters", scope: !3565, file: !119, line: 81, type: !113)
!3571 = !DILocalVariable(name: "sqe", scope: !3572, file: !119, line: 90, type: !3550)
!3572 = distinct !DILexicalBlock(scope: !3573, file: !119, line: 89, column: 27)
!3573 = distinct !DILexicalBlock(scope: !3574, file: !119, line: 89, column: 3)
!3574 = distinct !DILexicalBlock(scope: !3555, file: !119, line: 89, column: 3)
!3575 = !DILocalVariable(name: "idx", scope: !3576, file: !119, line: 90, type: !24)
!3576 = distinct !DILexicalBlock(scope: !3572, file: !119, line: 90, column: 27)
!3577 = !DILocalVariable(name: "acq", scope: !3576, file: !119, line: 90, type: !422)
!3578 = !DILocation(line: 0, scope: !3524)
!3579 = !DILocation(line: 32, column: 41, scope: !3524)
!3580 = !DILocation(line: 0, scope: !3546)
!3581 = !DILocation(line: 36, column: 26, scope: !3552)
!3582 = !DILocation(line: 35, column: 2, scope: !3546)
!3583 = !DILocation(line: 43, column: 2, scope: !3524)
!3584 = !DILocation(line: 0, scope: !3552)
!3585 = !DILocation(line: 36, column: 26, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3587, file: !119, line: 36, column: 26)
!3587 = distinct !DILexicalBlock(scope: !3552, file: !119, line: 36, column: 26)
!3588 = !DILocation(line: 0, scope: !3548)
!3589 = !DILocation(line: 38, column: 50, scope: !3548)
!3590 = !DILocation(line: 38, column: 3, scope: !3548)
!3591 = !DILocation(line: 40, column: 3, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3593, file: !119, line: 40, column: 3)
!3593 = distinct !DILexicalBlock(scope: !3548, file: !119, line: 40, column: 3)
!3594 = !DILocation(line: 40, column: 3, scope: !3593)
!3595 = !DILocation(line: 40, column: 3, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3592, file: !119, line: 40, column: 3)
!3597 = !DILocation(line: 35, column: 26, scope: !3549)
!3598 = !DILocation(line: 35, column: 20, scope: !3549)
!3599 = distinct !{!3599, !3582, !3600}
!3600 = !DILocation(line: 41, column: 2, scope: !3546)
!3601 = !DILocation(line: 0, scope: !3555)
!3602 = !DILocation(line: 45, column: 3, scope: !3555)
!3603 = !DILocation(line: 45, column: 12, scope: !3555)
!3604 = !DILocation(line: 47, column: 3, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3606, file: !119, line: 47, column: 3)
!3606 = distinct !DILexicalBlock(scope: !3607, file: !119, line: 47, column: 3)
!3607 = distinct !DILexicalBlock(scope: !3608, file: !119, line: 47, column: 3)
!3608 = distinct !DILexicalBlock(scope: !3555, file: !119, line: 47, column: 3)
!3609 = !DILocation(line: 48, column: 3, scope: !3555)
!3610 = !DILocation(line: 54, column: 3, scope: !3555)
!3611 = !DILocation(line: 55, column: 27, scope: !3562)
!3612 = !DILocation(line: 0, scope: !3562)
!3613 = !DILocation(line: 0, scope: !3559)
!3614 = !DILocation(line: 58, column: 5, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3616, file: !119, line: 58, column: 5)
!3616 = distinct !DILexicalBlock(scope: !3617, file: !119, line: 58, column: 5)
!3617 = distinct !DILexicalBlock(scope: !3618, file: !119, line: 58, column: 5)
!3618 = distinct !DILexicalBlock(scope: !3619, file: !119, line: 58, column: 5)
!3619 = distinct !DILexicalBlock(scope: !3620, file: !119, line: 57, column: 21)
!3620 = distinct !DILexicalBlock(scope: !3559, file: !119, line: 57, column: 8)
!3621 = !DILocation(line: 59, column: 5, scope: !3619)
!3622 = !DILocation(line: 60, column: 5, scope: !3619)
!3623 = distinct !{!3623, !3610, !3624}
!3624 = !DILocation(line: 71, column: 3, scope: !3555)
!3625 = !DILocation(line: 55, column: 27, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3627, file: !119, line: 55, column: 27)
!3627 = distinct !DILexicalBlock(scope: !3562, file: !119, line: 55, column: 27)
!3628 = !DILocation(line: 62, column: 4, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3630, file: !119, line: 62, column: 4)
!3630 = distinct !DILexicalBlock(scope: !3631, file: !119, line: 62, column: 4)
!3631 = distinct !DILexicalBlock(scope: !3632, file: !119, line: 62, column: 4)
!3632 = distinct !DILexicalBlock(scope: !3559, file: !119, line: 62, column: 4)
!3633 = !DILocation(line: 64, column: 13, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3559, file: !119, line: 64, column: 8)
!3635 = !DILocation(line: 64, column: 20, scope: !3634)
!3636 = !DILocation(line: 64, column: 8, scope: !3559)
!3637 = !DILocation(line: 65, column: 5, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3639, file: !119, line: 65, column: 5)
!3639 = distinct !DILexicalBlock(scope: !3640, file: !119, line: 65, column: 5)
!3640 = distinct !DILexicalBlock(scope: !3641, file: !119, line: 65, column: 5)
!3641 = distinct !DILexicalBlock(scope: !3642, file: !119, line: 65, column: 5)
!3642 = distinct !DILexicalBlock(scope: !3634, file: !119, line: 64, column: 25)
!3643 = !DILocation(line: 66, column: 4, scope: !3642)
!3644 = !DILocation(line: 68, column: 23, scope: !3559)
!3645 = !DILocation(line: 68, column: 4, scope: !3559)
!3646 = !DILocation(line: 68, column: 16, scope: !3559)
!3647 = !DILocation(line: 69, column: 4, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3649, file: !119, line: 69, column: 4)
!3649 = distinct !DILexicalBlock(scope: !3559, file: !119, line: 69, column: 4)
!3650 = !DILocation(line: 69, column: 4, scope: !3649)
!3651 = !DILocation(line: 69, column: 4, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3648, file: !119, line: 69, column: 4)
!3653 = !DILocation(line: 70, column: 5, scope: !3559)
!3654 = !DILocation(line: 54, column: 12, scope: !3555)
!3655 = !DILocation(line: 79, column: 3, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3657, file: !119, line: 79, column: 3)
!3657 = distinct !DILexicalBlock(scope: !3658, file: !119, line: 79, column: 3)
!3658 = distinct !DILexicalBlock(scope: !3659, file: !119, line: 79, column: 3)
!3659 = distinct !DILexicalBlock(scope: !3555, file: !119, line: 79, column: 3)
!3660 = !DILocation(line: 80, column: 3, scope: !3568)
!3661 = !DILocation(line: 0, scope: !3565)
!3662 = !DILocation(line: 81, column: 4, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3664, file: !119, line: 81, column: 4)
!3664 = distinct !DILexicalBlock(scope: !3665, file: !119, line: 81, column: 4)
!3665 = distinct !DILexicalBlock(scope: !3565, file: !119, line: 81, column: 4)
!3666 = !DILocation(line: 81, column: 4, scope: !3664)
!3667 = !DILocation(line: 80, column: 23, scope: !3567)
!3668 = !DILocation(line: 80, column: 17, scope: !3567)
!3669 = distinct !{!3669, !3660, !3670}
!3670 = !DILocation(line: 82, column: 3, scope: !3568)
!3671 = !DILocation(line: 83, column: 3, scope: !3555)
!3672 = !DILocation(line: 84, column: 3, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !3674, file: !119, line: 84, column: 3)
!3674 = distinct !DILexicalBlock(scope: !3675, file: !119, line: 84, column: 3)
!3675 = distinct !DILexicalBlock(scope: !3676, file: !119, line: 84, column: 3)
!3676 = distinct !DILexicalBlock(scope: !3555, file: !119, line: 84, column: 3)
!3677 = !DILocation(line: 90, column: 27, scope: !3576)
!3678 = !DILocation(line: 89, column: 3, scope: !3574)
!3679 = !DILocation(line: 0, scope: !3576)
!3680 = !DILocation(line: 90, column: 27, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3682, file: !119, line: 90, column: 27)
!3682 = distinct !DILexicalBlock(scope: !3576, file: !119, line: 90, column: 27)
!3683 = !DILocation(line: 0, scope: !3572)
!3684 = !DILocation(line: 93, column: 9, scope: !3572)
!3685 = !DILocation(line: 92, column: 4, scope: !3572)
!3686 = !DILocation(line: 95, column: 4, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3688, file: !119, line: 95, column: 4)
!3688 = distinct !DILexicalBlock(scope: !3572, file: !119, line: 95, column: 4)
!3689 = !DILocation(line: 95, column: 4, scope: !3688)
!3690 = !DILocation(line: 95, column: 4, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3687, file: !119, line: 95, column: 4)
!3692 = !DILocation(line: 89, column: 23, scope: !3573)
!3693 = !DILocation(line: 89, column: 17, scope: !3573)
!3694 = distinct !{!3694, !3678, !3695}
!3695 = !DILocation(line: 96, column: 3, scope: !3574)
!3696 = !DILocation(line: 97, column: 2, scope: !3524)
!3697 = distinct !{!3697, !3583, !3696}
!3698 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3699, file: !3699, line: 175, type: !3700, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3702)
!3699 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3700 = !DISubroutineType(types: !3701)
!3701 = !{!107, !108}
!3702 = !{!3703}
!3703 = !DILocalVariable(name: "level", arg: 1, scope: !3698, file: !3699, line: 175, type: !108)
!3704 = !DILocation(line: 0, scope: !3698)
!3705 = !DILocation(line: 177, column: 2, scope: !3698)
!3706 = !DILocation(line: 189, column: 1, scope: !3698)
!3707 = distinct !DISubprogram(name: "atomic_get", scope: !3708, file: !3708, line: 159, type: !3709, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3714)
!3708 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3709 = !DISubroutineType(types: !3710)
!3710 = !{!3711, !3712}
!3711 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !143, line: 23, baseType: !142)
!3712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3713, size: 32)
!3713 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!3714 = !{!3715}
!3715 = !DILocalVariable(name: "target", arg: 1, scope: !3707, file: !3708, line: 159, type: !3712)
!3716 = !DILocation(line: 0, scope: !3707)
!3717 = !DILocation(line: 161, column: 9, scope: !3707)
!3718 = !DILocation(line: 161, column: 2, scope: !3707)
!3719 = distinct !DISubprogram(name: "rtio_sqe_prep_read", scope: !125, file: !125, line: 341, type: !3720, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3722)
!3720 = !DISubroutineType(types: !3721)
!3721 = !{null, !3550, !171, !695, !209, !113, !104}
!3722 = !{!3723, !3724, !3725, !3726, !3727, !3728}
!3723 = !DILocalVariable(name: "sqe", arg: 1, scope: !3719, file: !125, line: 341, type: !3550)
!3724 = !DILocalVariable(name: "iodev", arg: 2, scope: !3719, file: !125, line: 342, type: !171)
!3725 = !DILocalVariable(name: "prio", arg: 3, scope: !3719, file: !125, line: 343, type: !695)
!3726 = !DILocalVariable(name: "buf", arg: 4, scope: !3719, file: !125, line: 344, type: !209)
!3727 = !DILocalVariable(name: "len", arg: 5, scope: !3719, file: !125, line: 345, type: !113)
!3728 = !DILocalVariable(name: "userdata", arg: 6, scope: !3719, file: !125, line: 346, type: !104)
!3729 = !DILocation(line: 0, scope: !3719)
!3730 = !DILocation(line: 348, column: 7, scope: !3719)
!3731 = !DILocation(line: 348, column: 10, scope: !3719)
!3732 = !DILocation(line: 349, column: 7, scope: !3719)
!3733 = !DILocation(line: 349, column: 12, scope: !3719)
!3734 = !DILocation(line: 350, column: 7, scope: !3719)
!3735 = !DILocation(line: 350, column: 13, scope: !3719)
!3736 = !DILocation(line: 351, column: 7, scope: !3719)
!3737 = !DILocation(line: 351, column: 15, scope: !3719)
!3738 = !DILocation(line: 352, column: 7, scope: !3719)
!3739 = !DILocation(line: 352, column: 11, scope: !3719)
!3740 = !DILocation(line: 353, column: 7, scope: !3719)
!3741 = !DILocation(line: 353, column: 16, scope: !3719)
!3742 = !DILocation(line: 354, column: 1, scope: !3719)
!3743 = distinct !DISubprogram(name: "atomic_add", scope: !3708, file: !3708, line: 86, type: !3744, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3747)
!3744 = !DISubroutineType(types: !3745)
!3745 = !{!3711, !3746, !3711}
!3746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 32)
!3747 = !{!3748, !3749}
!3748 = !DILocalVariable(name: "target", arg: 1, scope: !3743, file: !3708, line: 86, type: !3746)
!3749 = !DILocalVariable(name: "value", arg: 2, scope: !3743, file: !3708, line: 86, type: !3711)
!3750 = !DILocation(line: 0, scope: !3743)
!3751 = !DILocation(line: 88, column: 9, scope: !3743)
!3752 = !DILocation(line: 88, column: 2, scope: !3743)
!3753 = distinct !DISubprogram(name: "rtio_submit", scope: !3754, file: !3754, line: 75, type: !3755, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3757)
!3754 = !DIFile(filename: "zephyr/include/generated/syscalls/rtio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!3755 = !DISubroutineType(types: !3756)
!3756 = !{!108, !136, !113}
!3757 = !{!3758, !3759}
!3758 = !DILocalVariable(name: "r", arg: 1, scope: !3753, file: !3754, line: 75, type: !136)
!3759 = !DILocalVariable(name: "wait_count", arg: 2, scope: !3753, file: !3754, line: 75, type: !113)
!3760 = !DILocation(line: 0, scope: !3753)
!3761 = !DILocation(line: 84, column: 2, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3753, file: !3754, line: 84, column: 2)
!3763 = !{i64 2155077100}
!3764 = !DILocation(line: 85, column: 9, scope: !3753)
!3765 = !DILocation(line: 85, column: 2, scope: !3753)
!3766 = distinct !DISubprogram(name: "k_msleep", scope: !359, file: !359, line: 439, type: !3767, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3769)
!3767 = !DISubroutineType(types: !3768)
!3768 = !{!220, !220}
!3769 = !{!3770}
!3770 = !DILocalVariable(name: "ms", arg: 1, scope: !3766, file: !359, line: 439, type: !220)
!3771 = !DILocation(line: 0, scope: !3766)
!3772 = !DILocation(line: 441, column: 17, scope: !3766)
!3773 = !DILocation(line: 441, column: 9, scope: !3766)
!3774 = !DILocation(line: 441, column: 2, scope: !3766)
!3775 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3776, file: !3776, line: 403, type: !3777, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3779)
!3776 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3777 = !DISubroutineType(types: !3778)
!3778 = !{!114, !114}
!3779 = !{!3780}
!3780 = !DILocalVariable(name: "t", arg: 1, scope: !3775, file: !3776, line: 403, type: !114)
!3781 = !DILocation(line: 0, scope: !3775)
!3782 = !DILocalVariable(name: "t", arg: 1, scope: !3783, file: !3776, line: 102, type: !114)
!3783 = distinct !DISubprogram(name: "z_tmcvt", scope: !3776, file: !3776, line: 102, type: !3784, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3786)
!3784 = !DISubroutineType(types: !3785)
!3785 = !{!114, !114, !113, !113, !422, !422, !422, !422}
!3786 = !{!3782, !3787, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796}
!3787 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3783, file: !3776, line: 102, type: !113)
!3788 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3783, file: !3776, line: 103, type: !113)
!3789 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3783, file: !3776, line: 103, type: !422)
!3790 = !DILocalVariable(name: "result32", arg: 5, scope: !3783, file: !3776, line: 104, type: !422)
!3791 = !DILocalVariable(name: "round_up", arg: 6, scope: !3783, file: !3776, line: 104, type: !422)
!3792 = !DILocalVariable(name: "round_off", arg: 7, scope: !3783, file: !3776, line: 105, type: !422)
!3793 = !DILocalVariable(name: "mul_ratio", scope: !3783, file: !3776, line: 107, type: !422)
!3794 = !DILocalVariable(name: "div_ratio", scope: !3783, file: !3776, line: 109, type: !422)
!3795 = !DILocalVariable(name: "off", scope: !3783, file: !3776, line: 116, type: !114)
!3796 = !DILocalVariable(name: "rdivisor", scope: !3797, file: !3776, line: 119, type: !113)
!3797 = distinct !DILexicalBlock(scope: !3798, file: !3776, line: 118, column: 18)
!3798 = distinct !DILexicalBlock(scope: !3783, file: !3776, line: 118, column: 6)
!3799 = !DILocation(line: 0, scope: !3783, inlinedAt: !3800)
!3800 = distinct !DILocation(line: 406, column: 9, scope: !3775)
!3801 = !DILocation(line: 145, column: 13, scope: !3802, inlinedAt: !3800)
!3802 = distinct !DILexicalBlock(scope: !3803, file: !3776, line: 144, column: 10)
!3803 = distinct !DILexicalBlock(scope: !3804, file: !3776, line: 142, column: 7)
!3804 = distinct !DILexicalBlock(scope: !3805, file: !3776, line: 141, column: 24)
!3805 = distinct !DILexicalBlock(scope: !3806, file: !3776, line: 141, column: 13)
!3806 = distinct !DILexicalBlock(scope: !3783, file: !3776, line: 134, column: 6)
!3807 = !DILocation(line: 406, column: 2, scope: !3775)
!3808 = distinct !DISubprogram(name: "k_sleep", scope: !3809, file: !3809, line: 91, type: !3810, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3816)
!3809 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!3810 = !DISubroutineType(types: !3811)
!3811 = !{!220, !3812}
!3812 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !3813)
!3813 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !3814)
!3814 = !{!3815}
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3813, file: !110, line: 66, baseType: !109, size: 64)
!3816 = !{!3817}
!3817 = !DILocalVariable(name: "timeout", arg: 1, scope: !3808, file: !3809, line: 91, type: !3812)
!3818 = !DILocation(line: 0, scope: !3808)
!3819 = !DILocation(line: 99, column: 2, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3808, file: !3809, line: 99, column: 2)
!3821 = !{i64 2154856507}
!3822 = !DILocation(line: 100, column: 9, scope: !3808)
!3823 = !DILocation(line: 100, column: 2, scope: !3808)
!3824 = distinct !DISubprogram(name: "z_impl_rtio_submit", scope: !125, file: !125, line: 744, type: !3755, scopeLine: 745, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3825)
!3825 = !{!3826, !3827, !3828, !3829}
!3826 = !DILocalVariable(name: "r", arg: 1, scope: !3824, file: !125, line: 744, type: !136)
!3827 = !DILocalVariable(name: "wait_count", arg: 2, scope: !3824, file: !125, line: 744, type: !113)
!3828 = !DILocalVariable(name: "res", scope: !3824, file: !125, line: 746, type: !108)
!3829 = !DILocalVariable(name: "acquired", scope: !3830, file: !125, line: 763, type: !24)
!3830 = distinct !DILexicalBlock(scope: !3831, file: !125, line: 763, column: 2)
!3831 = distinct !DILexicalBlock(scope: !3832, file: !125, line: 763, column: 2)
!3832 = distinct !DILexicalBlock(scope: !3824, file: !125, line: 763, column: 2)
!3833 = !DILocation(line: 0, scope: !3824)
!3834 = !DILocation(line: 763, column: 2, scope: !3831)
!3835 = !DILocation(line: 763, column: 2, scope: !3832)
!3836 = !DILocation(line: 0, scope: !3830)
!3837 = !DILocation(line: 763, column: 2, scope: !3830)
!3838 = !DILocation(line: 768, column: 11, scope: !3824)
!3839 = !DILocation(line: 768, column: 21, scope: !3824)
!3840 = !DILocation(line: 768, column: 26, scope: !3824)
!3841 = !DILocation(line: 768, column: 8, scope: !3824)
!3842 = !DILocation(line: 769, column: 10, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3824, file: !125, line: 769, column: 6)
!3844 = !DILocation(line: 769, column: 6, scope: !3824)
!3845 = !DILocation(line: 784, column: 9, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !3824, file: !125, line: 784, column: 9)
!3847 = !DILocation(line: 784, column: 37, scope: !3824)
!3848 = !DILocation(line: 784, column: 2, scope: !3824)
!3849 = !DILocation(line: 788, column: 3, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3824, file: !125, line: 784, column: 51)
!3851 = distinct !{!3851, !3848, !3852}
!3852 = !DILocation(line: 790, column: 2, scope: !3824)
!3853 = !DILocation(line: 794, column: 1, scope: !3824)
!3854 = distinct !DISubprogram(name: "k_yield", scope: !3809, file: !3809, line: 140, type: !3413, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !437)
!3855 = !DILocation(line: 148, column: 2, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3854, file: !3809, line: 148, column: 2)
!3857 = !{i64 2154856711}
!3858 = !DILocation(line: 149, column: 2, scope: !3854)
!3859 = !DILocation(line: 150, column: 1, scope: !3854)
!3860 = distinct !DISubprogram(name: "vnd_sensor_iodev_submit", scope: !265, file: !265, line: 74, type: !277, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3861)
!3861 = !{!3862, !3863, !3864, !3865, !3866, !3868, !3870}
!3862 = !DILocalVariable(name: "sqe", arg: 1, scope: !3860, file: !265, line: 74, type: !279)
!3863 = !DILocalVariable(name: "r", arg: 2, scope: !3860, file: !265, line: 74, type: !298)
!3864 = !DILocalVariable(name: "data", scope: !3860, file: !265, line: 76, type: !263)
!3865 = !DILocalVariable(name: "dev", scope: !3860, file: !265, line: 77, type: !408)
!3866 = !DILocalVariable(name: "iodev_sqe", scope: !3860, file: !265, line: 78, type: !3867)
!3867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 32)
!3868 = !DILocalVariable(name: "idx", scope: !3869, file: !265, line: 78, type: !24)
!3869 = distinct !DILexicalBlock(scope: !3860, file: !265, line: 78, column: 37)
!3870 = !DILocalVariable(name: "acq", scope: !3869, file: !265, line: 78, type: !422)
!3871 = !DILocation(line: 0, scope: !3860)
!3872 = !DILocation(line: 76, column: 65, scope: !3860)
!3873 = !DILocation(line: 77, column: 35, scope: !3860)
!3874 = !DILocation(line: 78, column: 37, scope: !3869)
!3875 = !DILocation(line: 0, scope: !3869)
!3876 = !DILocation(line: 78, column: 37, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3878, file: !265, line: 78, column: 37)
!3878 = distinct !DILexicalBlock(scope: !3869, file: !265, line: 78, column: 37)
!3879 = !DILocation(line: 81, column: 14, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3881, file: !265, line: 80, column: 25)
!3881 = distinct !DILexicalBlock(scope: !3860, file: !265, line: 80, column: 6)
!3882 = !DILocation(line: 81, column: 18, scope: !3880)
!3883 = !DILocation(line: 82, column: 14, scope: !3880)
!3884 = !DILocation(line: 82, column: 16, scope: !3880)
!3885 = !DILocation(line: 83, column: 3, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3887, file: !265, line: 83, column: 3)
!3887 = distinct !DILexicalBlock(scope: !3880, file: !265, line: 83, column: 3)
!3888 = !DILocation(line: 83, column: 3, scope: !3887)
!3889 = !DILocation(line: 83, column: 3, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3886, file: !265, line: 83, column: 3)
!3891 = !DILocation(line: 85, column: 3, scope: !3892)
!3892 = distinct !DILexicalBlock(scope: !3893, file: !265, line: 85, column: 3)
!3893 = distinct !DILexicalBlock(scope: !3894, file: !265, line: 85, column: 3)
!3894 = distinct !DILexicalBlock(scope: !3895, file: !265, line: 85, column: 3)
!3895 = distinct !DILexicalBlock(scope: !3896, file: !265, line: 85, column: 3)
!3896 = distinct !DILexicalBlock(scope: !3881, file: !265, line: 84, column: 9)
!3897 = !DILocation(line: 86, column: 3, scope: !3896)
!3898 = !DILocation(line: 88, column: 1, scope: !3860)
!3899 = distinct !DISubprogram(name: "atomic_get", scope: !3708, file: !3708, line: 159, type: !3709, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3900)
!3900 = !{!3901}
!3901 = !DILocalVariable(name: "target", arg: 1, scope: !3899, file: !3708, line: 159, type: !3712)
!3902 = !DILocation(line: 0, scope: !3899)
!3903 = !DILocation(line: 161, column: 9, scope: !3899)
!3904 = !DILocation(line: 161, column: 2, scope: !3899)
!3905 = distinct !DISubprogram(name: "atomic_add", scope: !3708, file: !3708, line: 86, type: !3744, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3906)
!3906 = !{!3907, !3908}
!3907 = !DILocalVariable(name: "target", arg: 1, scope: !3905, file: !3708, line: 86, type: !3746)
!3908 = !DILocalVariable(name: "value", arg: 2, scope: !3905, file: !3708, line: 86, type: !3711)
!3909 = !DILocation(line: 0, scope: !3905)
!3910 = !DILocation(line: 88, column: 9, scope: !3905)
!3911 = !DILocation(line: 88, column: 2, scope: !3905)
!3912 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3699, file: !3699, line: 175, type: !3700, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3913)
!3913 = !{!3914}
!3914 = !DILocalVariable(name: "level", arg: 1, scope: !3912, file: !3699, line: 175, type: !108)
!3915 = !DILocation(line: 0, scope: !3912)
!3916 = !DILocation(line: 177, column: 2, scope: !3912)
!3917 = !DILocation(line: 189, column: 1, scope: !3912)
!3918 = distinct !DISubprogram(name: "rtio_sqe_err", scope: !125, file: !125, line: 592, type: !316, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3919)
!3919 = !{!3920, !3921, !3922}
!3920 = !DILocalVariable(name: "r", arg: 1, scope: !3918, file: !125, line: 592, type: !298)
!3921 = !DILocalVariable(name: "sqe", arg: 2, scope: !3918, file: !125, line: 592, type: !279)
!3922 = !DILocalVariable(name: "result", arg: 3, scope: !3918, file: !125, line: 592, type: !108)
!3923 = !DILocation(line: 0, scope: !3918)
!3924 = !DILocation(line: 594, column: 5, scope: !3918)
!3925 = !DILocation(line: 594, column: 15, scope: !3918)
!3926 = !DILocation(line: 594, column: 20, scope: !3918)
!3927 = !DILocation(line: 594, column: 2, scope: !3918)
!3928 = !DILocation(line: 595, column: 1, scope: !3918)
!3929 = distinct !DISubprogram(name: "vnd_sensor_init", scope: !265, file: !265, line: 111, type: !473, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3930)
!3930 = !{!3931, !3932, !3934, !3935}
!3931 = !DILocalVariable(name: "dev", arg: 1, scope: !3929, file: !265, line: 111, type: !408)
!3932 = !DILocalVariable(name: "config", scope: !3929, file: !265, line: 113, type: !3933)
!3933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 32)
!3934 = !DILocalVariable(name: "data", scope: !3929, file: !265, line: 114, type: !263)
!3935 = !DILocalVariable(name: "sample_period", scope: !3929, file: !265, line: 115, type: !113)
!3936 = !DILocation(line: 0, scope: !3929)
!3937 = !DILocation(line: 113, column: 48, scope: !3929)
!3938 = !DILocation(line: 114, column: 38, scope: !3929)
!3939 = !DILocation(line: 115, column: 35, scope: !3929)
!3940 = !DILocation(line: 117, column: 8, scope: !3929)
!3941 = !DILocation(line: 117, column: 12, scope: !3929)
!3942 = !DILocation(line: 119, column: 22, scope: !3929)
!3943 = !DILocation(line: 119, column: 2, scope: !3929)
!3944 = !DILocation(line: 121, column: 30, scope: !3929)
!3945 = !DILocation(line: 121, column: 2, scope: !3929)
!3946 = !DILocation(line: 124, column: 2, scope: !3929)
!3947 = distinct !DISubprogram(name: "vnd_sensor_timer_expiry", scope: !265, file: !265, line: 103, type: !396, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3948)
!3948 = !{!3949, !3950}
!3949 = !DILocalVariable(name: "timer", arg: 1, scope: !3947, file: !265, line: 103, type: !398)
!3950 = !DILocalVariable(name: "data", scope: !3947, file: !265, line: 105, type: !263)
!3951 = !DILocation(line: 0, scope: !3947)
!3952 = !DILocation(line: 106, column: 3, scope: !3947)
!3953 = !DILocation(line: 108, column: 30, scope: !3947)
!3954 = !DILocation(line: 108, column: 2, scope: !3947)
!3955 = !DILocation(line: 109, column: 1, scope: !3947)
!3956 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3776, file: !3776, line: 403, type: !3777, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3957)
!3957 = !{!3958}
!3958 = !DILocalVariable(name: "t", arg: 1, scope: !3956, file: !3776, line: 403, type: !114)
!3959 = !DILocation(line: 0, scope: !3956)
!3960 = !DILocalVariable(name: "t", arg: 1, scope: !3961, file: !3776, line: 102, type: !114)
!3961 = distinct !DISubprogram(name: "z_tmcvt", scope: !3776, file: !3776, line: 102, type: !3784, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3962)
!3962 = !{!3960, !3963, !3964, !3965, !3966, !3967, !3968, !3969, !3970, !3971, !3972}
!3963 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3961, file: !3776, line: 102, type: !113)
!3964 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3961, file: !3776, line: 103, type: !113)
!3965 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3961, file: !3776, line: 103, type: !422)
!3966 = !DILocalVariable(name: "result32", arg: 5, scope: !3961, file: !3776, line: 104, type: !422)
!3967 = !DILocalVariable(name: "round_up", arg: 6, scope: !3961, file: !3776, line: 104, type: !422)
!3968 = !DILocalVariable(name: "round_off", arg: 7, scope: !3961, file: !3776, line: 105, type: !422)
!3969 = !DILocalVariable(name: "mul_ratio", scope: !3961, file: !3776, line: 107, type: !422)
!3970 = !DILocalVariable(name: "div_ratio", scope: !3961, file: !3776, line: 109, type: !422)
!3971 = !DILocalVariable(name: "off", scope: !3961, file: !3776, line: 116, type: !114)
!3972 = !DILocalVariable(name: "rdivisor", scope: !3973, file: !3776, line: 119, type: !113)
!3973 = distinct !DILexicalBlock(scope: !3974, file: !3776, line: 118, column: 18)
!3974 = distinct !DILexicalBlock(scope: !3961, file: !3776, line: 118, column: 6)
!3975 = !DILocation(line: 0, scope: !3961, inlinedAt: !3976)
!3976 = distinct !DILocation(line: 406, column: 9, scope: !3956)
!3977 = !DILocation(line: 145, column: 13, scope: !3978, inlinedAt: !3976)
!3978 = distinct !DILexicalBlock(scope: !3979, file: !3776, line: 144, column: 10)
!3979 = distinct !DILexicalBlock(scope: !3980, file: !3776, line: 142, column: 7)
!3980 = distinct !DILexicalBlock(scope: !3981, file: !3776, line: 141, column: 24)
!3981 = distinct !DILexicalBlock(scope: !3982, file: !3776, line: 141, column: 13)
!3982 = distinct !DILexicalBlock(scope: !3961, file: !3776, line: 134, column: 6)
!3983 = !DILocation(line: 406, column: 2, scope: !3956)
!3984 = distinct !DISubprogram(name: "k_timer_start", scope: !3809, file: !3809, line: 426, type: !3985, scopeLine: 427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3987)
!3985 = !DISubroutineType(types: !3986)
!3986 = !{null, !398, !401, !401}
!3987 = !{!3988, !3989, !3990}
!3988 = !DILocalVariable(name: "timer", arg: 1, scope: !3984, file: !3809, line: 426, type: !398)
!3989 = !DILocalVariable(name: "duration", arg: 2, scope: !3984, file: !3809, line: 426, type: !401)
!3990 = !DILocalVariable(name: "period", arg: 3, scope: !3984, file: !3809, line: 426, type: !401)
!3991 = !DILocation(line: 0, scope: !3984)
!3992 = !DILocation(line: 437, column: 2, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3984, file: !3809, line: 437, column: 2)
!3994 = !{i64 2154860157}
!3995 = !DILocation(line: 438, column: 2, scope: !3984)
!3996 = !DILocation(line: 439, column: 1, scope: !3984)
!3997 = distinct !DISubprogram(name: "vnd_sensor_handle_int", scope: !265, file: !265, line: 90, type: !3998, scopeLine: 91, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4000)
!3998 = !DISubroutineType(types: !3999)
!3999 = !{null, !408}
!4000 = !{!4001, !4002, !4003, !4004, !4006}
!4001 = !DILocalVariable(name: "dev", arg: 1, scope: !3997, file: !265, line: 90, type: !408)
!4002 = !DILocalVariable(name: "data", scope: !3997, file: !265, line: 92, type: !263)
!4003 = !DILocalVariable(name: "iodev_sqe", scope: !3997, file: !265, line: 93, type: !3867)
!4004 = !DILocalVariable(name: "idx", scope: !4005, file: !265, line: 93, type: !24)
!4005 = distinct !DILexicalBlock(scope: !3997, file: !265, line: 93, column: 37)
!4006 = !DILocalVariable(name: "has_consumable", scope: !4005, file: !265, line: 93, type: !422)
!4007 = !DILocation(line: 0, scope: !3997)
!4008 = !DILocation(line: 92, column: 38, scope: !3997)
!4009 = !DILocation(line: 93, column: 37, scope: !4005)
!4010 = !DILocation(line: 0, scope: !4005)
!4011 = !DILocation(line: 93, column: 37, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !4013, file: !265, line: 93, column: 37)
!4013 = distinct !DILexicalBlock(scope: !4005, file: !265, line: 93, column: 37)
!4014 = !DILocation(line: 96, column: 44, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !4016, file: !265, line: 95, column: 25)
!4016 = distinct !DILexicalBlock(scope: !3997, file: !265, line: 95, column: 6)
!4017 = !DILocation(line: 96, column: 60, scope: !4015)
!4018 = !DILocation(line: 96, column: 3, scope: !4015)
!4019 = !DILocation(line: 97, column: 3, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !4021, file: !265, line: 97, column: 3)
!4021 = distinct !DILexicalBlock(scope: !4015, file: !265, line: 97, column: 3)
!4022 = !DILocation(line: 97, column: 3, scope: !4021)
!4023 = !DILocation(line: 97, column: 3, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !4020, file: !265, line: 97, column: 3)
!4025 = !DILocation(line: 99, column: 3, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !4027, file: !265, line: 99, column: 3)
!4027 = distinct !DILexicalBlock(scope: !4028, file: !265, line: 99, column: 3)
!4028 = distinct !DILexicalBlock(scope: !4029, file: !265, line: 99, column: 3)
!4029 = distinct !DILexicalBlock(scope: !4030, file: !265, line: 99, column: 3)
!4030 = distinct !DILexicalBlock(scope: !4016, file: !265, line: 98, column: 9)
!4031 = !DILocation(line: 101, column: 1, scope: !3997)
!4032 = distinct !DISubprogram(name: "vnd_sensor_iodev_execute", scope: !265, file: !265, line: 55, type: !4033, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4035)
!4033 = !DISubroutineType(types: !4034)
!4034 = !{null, !408, !279, !298}
!4035 = !{!4036, !4037, !4038, !4039}
!4036 = !DILocalVariable(name: "dev", arg: 1, scope: !4032, file: !265, line: 55, type: !408)
!4037 = !DILocalVariable(name: "sqe", arg: 2, scope: !4032, file: !265, line: 56, type: !279)
!4038 = !DILocalVariable(name: "r", arg: 3, scope: !4032, file: !265, line: 56, type: !298)
!4039 = !DILocalVariable(name: "result", scope: !4032, file: !265, line: 58, type: !108)
!4040 = !DILocation(line: 0, scope: !4032)
!4041 = !DILocation(line: 60, column: 11, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4032, file: !265, line: 60, column: 6)
!4043 = !DILocation(line: 60, column: 14, scope: !4042)
!4044 = !DILocation(line: 60, column: 6, scope: !4032)
!4045 = !DILocation(line: 63, column: 3, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4047, file: !265, line: 63, column: 3)
!4047 = distinct !DILexicalBlock(scope: !4048, file: !265, line: 63, column: 3)
!4048 = distinct !DILexicalBlock(scope: !4049, file: !265, line: 63, column: 3)
!4049 = distinct !DILexicalBlock(scope: !4050, file: !265, line: 63, column: 3)
!4050 = distinct !DILexicalBlock(scope: !4042, file: !265, line: 62, column: 9)
!4051 = !DILocation(line: 67, column: 6, scope: !4032)
!4052 = !DILocation(line: 61, column: 44, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4042, file: !265, line: 60, column: 29)
!4054 = !DILocation(line: 61, column: 54, scope: !4053)
!4055 = !DILocation(line: 61, column: 12, scope: !4053)
!4056 = !DILocation(line: 67, column: 13, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4032, file: !265, line: 67, column: 6)
!4058 = !DILocation(line: 68, column: 3, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4057, file: !265, line: 67, column: 18)
!4060 = !DILocation(line: 69, column: 2, scope: !4059)
!4061 = !DILocation(line: 70, column: 3, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4057, file: !265, line: 69, column: 9)
!4063 = !DILocation(line: 72, column: 1, scope: !4032)
!4064 = distinct !DISubprogram(name: "vnd_sensor_iodev_read", scope: !265, file: !265, line: 29, type: !4065, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4067)
!4065 = !DISubroutineType(types: !4066)
!4066 = !{!108, !408, !209, !113}
!4067 = !{!4068, !4069, !4070, !4071, !4072, !4073, !4074, !4075}
!4068 = !DILocalVariable(name: "dev", arg: 1, scope: !4064, file: !265, line: 29, type: !408)
!4069 = !DILocalVariable(name: "buf", arg: 2, scope: !4064, file: !265, line: 29, type: !209)
!4070 = !DILocalVariable(name: "buf_len", arg: 3, scope: !4064, file: !265, line: 30, type: !113)
!4071 = !DILocalVariable(name: "config", scope: !4064, file: !265, line: 32, type: !3933)
!4072 = !DILocalVariable(name: "data", scope: !4064, file: !265, line: 33, type: !263)
!4073 = !DILocalVariable(name: "sample_number", scope: !4064, file: !265, line: 34, type: !113)
!4074 = !DILocalVariable(name: "key", scope: !4064, file: !265, line: 35, type: !113)
!4075 = !DILocalVariable(name: "i", scope: !4076, file: !265, line: 48, type: !108)
!4076 = distinct !DILexicalBlock(scope: !4064, file: !265, line: 48, column: 2)
!4077 = !DILocation(line: 0, scope: !4064)
!4078 = !DILocation(line: 32, column: 48, scope: !4064)
!4079 = !DILocation(line: 33, column: 38, scope: !4064)
!4080 = !DILocation(line: 37, column: 2, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4082, file: !265, line: 37, column: 2)
!4082 = distinct !DILexicalBlock(scope: !4083, file: !265, line: 37, column: 2)
!4083 = distinct !DILexicalBlock(scope: !4084, file: !265, line: 37, column: 2)
!4084 = distinct !DILexicalBlock(scope: !4064, file: !265, line: 37, column: 2)
!4085 = !DILocation(line: 55, column: 2, scope: !4086, inlinedAt: !4093)
!4086 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4087, file: !4087, line: 42, type: !4088, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4090)
!4087 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4088 = !DISubroutineType(types: !4089)
!4089 = !{!32}
!4090 = !{!4091, !4092}
!4091 = !DILocalVariable(name: "key", scope: !4086, file: !4087, line: 44, type: !32)
!4092 = !DILocalVariable(name: "tmp", scope: !4086, file: !4087, line: 53, type: !32)
!4093 = distinct !DILocation(line: 39, column: 8, scope: !4064)
!4094 = !{i64 2241443}
!4095 = !DILocation(line: 0, scope: !4086, inlinedAt: !4093)
!4096 = !DILocation(line: 40, column: 24, scope: !4064)
!4097 = !DILocation(line: 40, column: 37, scope: !4064)
!4098 = !DILocalVariable(name: "key", arg: 1, scope: !4099, file: !4087, line: 84, type: !32)
!4099 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4087, file: !4087, line: 84, type: !4100, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4102)
!4100 = !DISubroutineType(types: !4101)
!4101 = !{null, !32}
!4102 = !{!4098}
!4103 = !DILocation(line: 0, scope: !4099, inlinedAt: !4104)
!4104 = distinct !DILocation(line: 41, column: 2, scope: !4064)
!4105 = !DILocation(line: 95, column: 2, scope: !4099, inlinedAt: !4104)
!4106 = !{i64 2242260}
!4107 = !DILocation(line: 43, column: 24, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4064, file: !265, line: 43, column: 6)
!4109 = !DILocation(line: 43, column: 14, scope: !4108)
!4110 = !DILocation(line: 43, column: 6, scope: !4064)
!4111 = !DILocation(line: 0, scope: !4076)
!4112 = !DILocation(line: 48, column: 22, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !4076, file: !265, line: 48, column: 2)
!4114 = !DILocation(line: 48, column: 20, scope: !4113)
!4115 = !DILocation(line: 48, column: 2, scope: !4076)
!4116 = !DILocation(line: 44, column: 3, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4118, file: !265, line: 44, column: 3)
!4118 = distinct !DILexicalBlock(scope: !4119, file: !265, line: 44, column: 3)
!4119 = distinct !DILexicalBlock(scope: !4120, file: !265, line: 44, column: 3)
!4120 = distinct !DILexicalBlock(scope: !4121, file: !265, line: 44, column: 3)
!4121 = distinct !DILexicalBlock(scope: !4108, file: !265, line: 43, column: 37)
!4122 = !DILocation(line: 45, column: 3, scope: !4121)
!4123 = !DILocation(line: 49, column: 26, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4113, file: !265, line: 48, column: 62)
!4125 = !DILocation(line: 49, column: 48, scope: !4124)
!4126 = !DILocation(line: 49, column: 12, scope: !4124)
!4127 = !DILocation(line: 49, column: 3, scope: !4124)
!4128 = !DILocation(line: 49, column: 10, scope: !4124)
!4129 = !DILocation(line: 48, column: 58, scope: !4113)
!4130 = distinct !{!4130, !4115, !4131}
!4131 = !DILocation(line: 50, column: 2, scope: !4076)
!4132 = !DILocation(line: 53, column: 1, scope: !4064)
!4133 = distinct !DISubprogram(name: "rtio_sqe_ok", scope: !125, file: !125, line: 578, type: !316, scopeLine: 579, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4134)
!4134 = !{!4135, !4136, !4137}
!4135 = !DILocalVariable(name: "r", arg: 1, scope: !4133, file: !125, line: 578, type: !298)
!4136 = !DILocalVariable(name: "sqe", arg: 2, scope: !4133, file: !125, line: 578, type: !279)
!4137 = !DILocalVariable(name: "result", arg: 3, scope: !4133, file: !125, line: 578, type: !108)
!4138 = !DILocation(line: 0, scope: !4133)
!4139 = !DILocation(line: 580, column: 5, scope: !4133)
!4140 = !DILocation(line: 580, column: 15, scope: !4133)
!4141 = !DILocation(line: 580, column: 20, scope: !4133)
!4142 = !DILocation(line: 580, column: 2, scope: !4133)
!4143 = !DILocation(line: 581, column: 1, scope: !4133)
!4144 = distinct !DISubprogram(name: "cbvprintf_package", scope: !545, file: !545, line: 233, type: !4145, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !532, retainedNodes: !4154)
!4145 = !DISubroutineType(types: !4146)
!4146 = !{!108, !104, !439, !113, !105, !4147}
!4147 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4148, line: 99, baseType: !4149)
!4148 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4149 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4148, line: 40, baseType: !4150)
!4150 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !545, baseType: !4151)
!4151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4152)
!4152 = !{!4153}
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4151, file: !545, line: 18, baseType: !104, size: 32)
!4154 = !{!4155, !4156, !4157, !4158, !4159, !4160, !4161, !4162, !4163, !4164, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4175, !4176, !4177, !4190, !4199, !4202, !4203, !4206, !4209, !4212, !4215, !4221}
!4155 = !DILocalVariable(name: "packaged", arg: 1, scope: !4144, file: !545, line: 233, type: !104)
!4156 = !DILocalVariable(name: "len", arg: 2, scope: !4144, file: !545, line: 233, type: !439)
!4157 = !DILocalVariable(name: "flags", arg: 3, scope: !4144, file: !545, line: 233, type: !113)
!4158 = !DILocalVariable(name: "fmt", arg: 4, scope: !4144, file: !545, line: 234, type: !105)
!4159 = !DILocalVariable(name: "ap", arg: 5, scope: !4144, file: !545, line: 234, type: !4147)
!4160 = !DILocalVariable(name: "buf0", scope: !4144, file: !545, line: 247, type: !209)
!4161 = !DILocalVariable(name: "buf", scope: !4144, file: !545, line: 248, type: !209)
!4162 = !DILocalVariable(name: "size", scope: !4144, file: !545, line: 249, type: !32)
!4163 = !DILocalVariable(name: "align", scope: !4144, file: !545, line: 250, type: !32)
!4164 = !DILocalVariable(name: "str_ptr_pos", scope: !4144, file: !545, line: 251, type: !4165)
!4165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 128, elements: !2160)
!4166 = !DILocalVariable(name: "str_ptr_arg", scope: !4144, file: !545, line: 252, type: !4165)
!4167 = !DILocalVariable(name: "s_idx", scope: !4144, file: !545, line: 253, type: !32)
!4168 = !DILocalVariable(name: "s_rw_cnt", scope: !4144, file: !545, line: 254, type: !32)
!4169 = !DILocalVariable(name: "s_ro_cnt", scope: !4144, file: !545, line: 255, type: !32)
!4170 = !DILocalVariable(name: "arg_idx", scope: !4144, file: !545, line: 256, type: !108)
!4171 = !DILocalVariable(name: "i", scope: !4144, file: !545, line: 257, type: !32)
!4172 = !DILocalVariable(name: "s", scope: !4144, file: !545, line: 258, type: !105)
!4173 = !DILocalVariable(name: "parsing", scope: !4144, file: !545, line: 259, type: !422)
!4174 = !DILocalVariable(name: "rws_pos_en", scope: !4144, file: !545, line: 263, type: !422)
!4175 = !DILocalVariable(name: "fros_cnt", scope: !4144, file: !545, line: 268, type: !108)
!4176 = !DILocalVariable(name: "is_str_arg", scope: !4144, file: !545, line: 269, type: !422)
!4177 = !DILocalVariable(name: "pkg_hdr", scope: !4144, file: !545, line: 270, type: !4178)
!4178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4179, size: 32)
!4179 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !4180, line: 78, size: 32, elements: !4181)
!4180 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4181 = !{!4182, !4189}
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4179, file: !4180, line: 80, baseType: !4183, size: 32)
!4183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !4180, line: 45, size: 32, elements: !4184)
!4184 = !{!4185, !4186, !4187, !4188}
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4183, file: !4180, line: 47, baseType: !164, size: 8)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !4183, file: !4180, line: 50, baseType: !164, size: 8, offset: 8)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !4183, file: !4180, line: 53, baseType: !164, size: 8, offset: 16)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !4183, file: !4180, line: 56, baseType: !164, size: 8, offset: 24)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !4179, file: !4180, line: 82, baseType: !104, size: 32)
!4190 = !DILocalVariable(name: "v", scope: !4191, file: !545, line: 567, type: !4195)
!4191 = distinct !DILexicalBlock(scope: !4192, file: !545, line: 562, column: 14)
!4192 = distinct !DILexicalBlock(scope: !4193, file: !545, line: 481, column: 18)
!4193 = distinct !DILexicalBlock(scope: !4194, file: !545, line: 466, column: 3)
!4194 = distinct !DILexicalBlock(scope: !4144, file: !545, line: 343, column: 15)
!4195 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4144, file: !545, line: 567, size: 64, elements: !4196)
!4196 = !{!4197, !4198}
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4195, file: !545, line: 567, baseType: !538, size: 64)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4195, file: !545, line: 567, baseType: !536, size: 64)
!4199 = !DILocalVariable(name: "is_ro", scope: !4200, file: !545, line: 620, type: !422)
!4200 = distinct !DILexicalBlock(scope: !4201, file: !545, line: 613, column: 19)
!4201 = distinct !DILexicalBlock(scope: !4194, file: !545, line: 613, column: 7)
!4202 = !DILocalVariable(name: "do_ro", scope: !4200, file: !545, line: 621, type: !422)
!4203 = !DILocalVariable(name: "s_ptr_idx", scope: !4204, file: !545, line: 626, type: !113)
!4204 = distinct !DILexicalBlock(scope: !4205, file: !545, line: 625, column: 11)
!4205 = distinct !DILexicalBlock(scope: !4200, file: !545, line: 623, column: 8)
!4206 = !DILocalVariable(name: "v", scope: !4207, file: !545, line: 684, type: !108)
!4207 = distinct !DILexicalBlock(scope: !4208, file: !545, line: 683, column: 35)
!4208 = distinct !DILexicalBlock(scope: !4201, file: !545, line: 683, column: 14)
!4209 = !DILocalVariable(name: "v", scope: !4210, file: !545, line: 691, type: !144)
!4210 = distinct !DILexicalBlock(scope: !4211, file: !545, line: 690, column: 36)
!4211 = distinct !DILexicalBlock(scope: !4208, file: !545, line: 690, column: 14)
!4212 = !DILocalVariable(name: "v", scope: !4213, file: !545, line: 698, type: !112)
!4213 = distinct !DILexicalBlock(scope: !4214, file: !545, line: 697, column: 41)
!4214 = distinct !DILexicalBlock(scope: !4211, file: !545, line: 697, column: 14)
!4215 = !DILocalVariable(name: "pos", scope: !4216, file: !545, line: 762, type: !164)
!4216 = distinct !DILexicalBlock(scope: !4217, file: !545, line: 757, column: 31)
!4217 = distinct !DILexicalBlock(scope: !4218, file: !545, line: 757, column: 3)
!4218 = distinct !DILexicalBlock(scope: !4219, file: !545, line: 757, column: 3)
!4219 = distinct !DILexicalBlock(scope: !4220, file: !545, line: 756, column: 16)
!4220 = distinct !DILexicalBlock(scope: !4144, file: !545, line: 756, column: 6)
!4221 = !DILabel(scope: !4200, name: "process_string", file: !545, line: 615)
!4222 = !DILocation(line: 0, scope: !4144)
!4223 = !DILocation(line: 251, column: 2, scope: !4144)
!4224 = !DILocation(line: 251, column: 10, scope: !4144)
!4225 = !DILocation(line: 252, column: 2, scope: !4144)
!4226 = !DILocation(line: 252, column: 10, scope: !4144)
!4227 = !DILocation(line: 263, column: 29, scope: !4144)
!4228 = !DILocation(line: 263, column: 21, scope: !4144)
!4229 = !DILocation(line: 268, column: 21, scope: !4144)
!4230 = !DILocation(line: 268, column: 19, scope: !4144)
!4231 = !DILocation(line: 273, column: 6, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4144, file: !545, line: 273, column: 6)
!4233 = !DILocation(line: 273, column: 26, scope: !4232)
!4234 = !DILocation(line: 273, column: 6, scope: !4144)
!4235 = !DILocation(line: 297, column: 6, scope: !4144)
!4236 = !DILocation(line: 305, column: 11, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4144, file: !545, line: 305, column: 6)
!4238 = !DILocation(line: 305, column: 6, scope: !4144)
!4239 = !DILocation(line: 327, column: 19, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4144, file: !545, line: 327, column: 6)
!4241 = !DILocation(line: 327, column: 22, scope: !4240)
!4242 = !DILocation(line: 327, column: 33, scope: !4240)
!4243 = !DILocation(line: 327, column: 50, scope: !4240)
!4244 = !DILocation(line: 327, column: 6, scope: !4144)
!4245 = !DILocation(line: 338, column: 9, scope: !4144)
!4246 = !DILocation(line: 341, column: 2, scope: !4144)
!4247 = !DILocation(line: 472, column: 8, scope: !4193)
!4248 = !DILocation(line: 473, column: 14, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4250, file: !545, line: 473, column: 9)
!4250 = distinct !DILexicalBlock(scope: !4251, file: !545, line: 472, column: 18)
!4251 = distinct !DILexicalBlock(scope: !4193, file: !545, line: 472, column: 8)
!4252 = !DILocation(line: 473, column: 9, scope: !4250)
!4253 = !DILocation(line: 479, column: 5, scope: !4250)
!4254 = !DILocation(line: 468, column: 9, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4193, file: !545, line: 468, column: 8)
!4256 = !DILocation(line: 468, column: 8, scope: !4255)
!4257 = !DILocation(line: 468, column: 15, scope: !4255)
!4258 = !DILocation(line: 468, column: 8, scope: !4193)
!4259 = distinct !{!4259, !4260, !4261}
!4260 = !DILocation(line: 343, column: 2, scope: !4144)
!4261 = !DILocation(line: 712, column: 2, scope: !4144)
!4262 = !DILocation(line: 481, column: 4, scope: !4193)
!4263 = !DILocation(line: 484, column: 12, scope: !4192)
!4264 = !DILocation(line: 485, column: 5, scope: !4192)
!4265 = !DILocation(line: 505, column: 5, scope: !4192)
!4266 = !DILocation(line: 518, column: 5, scope: !4192)
!4267 = !DILocation(line: 523, column: 5, scope: !4192)
!4268 = !DILocation(line: 532, column: 9, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4192, file: !545, line: 532, column: 9)
!4270 = !DILocation(line: 532, column: 17, scope: !4269)
!4271 = !DILocation(line: 532, column: 9, scope: !4192)
!4272 = !DILocation(line: 533, column: 10, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4274, file: !545, line: 533, column: 10)
!4274 = distinct !DILexicalBlock(scope: !4269, file: !545, line: 532, column: 25)
!4275 = !DILocation(line: 533, column: 18, scope: !4273)
!4276 = !DILocation(line: 0, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4191, file: !545, line: 569, column: 9)
!4278 = !DILocation(line: 0, scope: !4191)
!4279 = !DILocation(line: 579, column: 20, scope: !4191)
!4280 = !DILocation(line: 579, column: 11, scope: !4191)
!4281 = !DILocation(line: 580, column: 9, scope: !4191)
!4282 = !DILocation(line: 582, column: 21, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4284, file: !545, line: 582, column: 10)
!4284 = distinct !DILexicalBlock(scope: !4285, file: !545, line: 580, column: 23)
!4285 = distinct !DILexicalBlock(scope: !4191, file: !545, line: 580, column: 9)
!4286 = !DILocation(line: 582, column: 28, scope: !4283)
!4287 = !DILocation(line: 582, column: 10, scope: !4284)
!4288 = !DILocation(line: 0, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4290, file: !545, line: 587, column: 17)
!4290 = distinct !DILexicalBlock(scope: !4284, file: !545, line: 585, column: 10)
!4291 = !DILocation(line: 593, column: 9, scope: !4191)
!4292 = !DILocation(line: 600, column: 5, scope: !4192)
!4293 = !DILocation(line: 605, column: 18, scope: !4194)
!4294 = !DILocation(line: 605, column: 9, scope: !4194)
!4295 = !DILocation(line: 608, column: 20, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4194, file: !545, line: 608, column: 7)
!4297 = !DILocation(line: 608, column: 23, scope: !4296)
!4298 = !DILocation(line: 608, column: 34, scope: !4296)
!4299 = !DILocation(line: 608, column: 41, scope: !4296)
!4300 = !DILocation(line: 608, column: 7, scope: !4194)
!4301 = !DILocation(line: 613, column: 7, scope: !4194)
!4302 = !DILocation(line: 614, column: 8, scope: !4200)
!4303 = !DILocation(line: 614, column: 4, scope: !4200)
!4304 = !DILocation(line: 255, column: 15, scope: !4144)
!4305 = !DILocation(line: 256, column: 6, scope: !4144)
!4306 = !DILocation(line: 254, column: 15, scope: !4144)
!4307 = !DILocation(line: 253, column: 15, scope: !4144)
!4308 = !DILocation(line: 320, column: 7, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4237, file: !545, line: 305, column: 20)
!4310 = !DILocation(line: 615, column: 1, scope: !4200)
!4311 = !DILocation(line: 616, column: 8, scope: !4200)
!4312 = !DILocation(line: 617, column: 5, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4314, file: !545, line: 616, column: 22)
!4314 = distinct !DILexicalBlock(scope: !4200, file: !545, line: 616, column: 8)
!4315 = !DILocation(line: 617, column: 25, scope: !4313)
!4316 = !DILocation(line: 618, column: 4, scope: !4313)
!4317 = !DILocation(line: 620, column: 26, scope: !4200)
!4318 = !DILocation(line: 620, column: 29, scope: !4200)
!4319 = !DILocation(line: 620, column: 17, scope: !4200)
!4320 = !DILocation(line: 620, column: 43, scope: !4200)
!4321 = !DILocation(line: 0, scope: !4200)
!4322 = !DILocation(line: 623, column: 14, scope: !4205)
!4323 = !DILocation(line: 626, column: 26, scope: !4204)
!4324 = !DILocation(line: 626, column: 37, scope: !4204)
!4325 = !DILocation(line: 0, scope: !4204)
!4326 = !DILocation(line: 634, column: 15, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4204, file: !545, line: 634, column: 9)
!4328 = !DILocation(line: 644, column: 9, scope: !4204)
!4329 = !DILocation(line: 649, column: 27, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4331, file: !545, line: 644, column: 23)
!4331 = distinct !DILexicalBlock(scope: !4204, file: !545, line: 644, column: 9)
!4332 = !DILocation(line: 649, column: 6, scope: !4330)
!4333 = !DILocation(line: 649, column: 25, scope: !4330)
!4334 = !DILocation(line: 650, column: 27, scope: !4330)
!4335 = !DILocation(line: 650, column: 6, scope: !4330)
!4336 = !DILocation(line: 650, column: 25, scope: !4330)
!4337 = !DILocation(line: 651, column: 10, scope: !4330)
!4338 = !DILocation(line: 653, column: 26, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4340, file: !545, line: 651, column: 17)
!4340 = distinct !DILexicalBlock(scope: !4330, file: !545, line: 651, column: 10)
!4341 = !DILocation(line: 654, column: 15, scope: !4339)
!4342 = !DILocation(line: 655, column: 6, scope: !4339)
!4343 = !DILocation(line: 656, column: 15, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4340, file: !545, line: 655, column: 13)
!4345 = !DILocation(line: 658, column: 16, scope: !4331)
!4346 = !DILocation(line: 663, column: 10, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4348, file: !545, line: 658, column: 23)
!4348 = distinct !DILexicalBlock(scope: !4331, file: !545, line: 658, column: 16)
!4349 = !DILocation(line: 664, column: 5, scope: !4347)
!4350 = !DILocation(line: 664, column: 16, scope: !4348)
!4351 = !DILocation(line: 669, column: 10, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4353, file: !545, line: 664, column: 28)
!4353 = distinct !DILexicalBlock(scope: !4348, file: !545, line: 664, column: 16)
!4354 = !DILocation(line: 670, column: 5, scope: !4352)
!4355 = !DILocation(line: 675, column: 13, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4353, file: !545, line: 670, column: 12)
!4357 = !DILocation(line: 675, column: 27, scope: !4356)
!4358 = !DILocation(line: 675, column: 10, scope: !4356)
!4359 = !DILocation(line: 678, column: 10, scope: !4204)
!4360 = !DILocation(line: 680, column: 8, scope: !4200)
!4361 = !DILocation(line: 683, column: 14, scope: !4201)
!4362 = !DILocation(line: 684, column: 12, scope: !4207)
!4363 = !DILocation(line: 0, scope: !4207)
!4364 = !DILocation(line: 686, column: 8, scope: !4207)
!4365 = !DILocation(line: 687, column: 5, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4367, file: !545, line: 686, column: 22)
!4367 = distinct !DILexicalBlock(scope: !4207, file: !545, line: 686, column: 8)
!4368 = !DILocation(line: 687, column: 17, scope: !4366)
!4369 = !DILocation(line: 688, column: 4, scope: !4366)
!4370 = !DILocation(line: 698, column: 18, scope: !4213)
!4371 = !DILocation(line: 0, scope: !4213)
!4372 = !DILocation(line: 700, column: 8, scope: !4213)
!4373 = !DILocation(line: 704, column: 6, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4375, file: !545, line: 703, column: 12)
!4375 = distinct !DILexicalBlock(scope: !4376, file: !545, line: 701, column: 9)
!4376 = distinct !DILexicalBlock(scope: !4377, file: !545, line: 700, column: 22)
!4377 = distinct !DILexicalBlock(scope: !4213, file: !545, line: 700, column: 8)
!4378 = !DILocation(line: 704, column: 24, scope: !4374)
!4379 = !DILocation(line: 706, column: 4, scope: !4376)
!4380 = !DILocation(line: 0, scope: !4208)
!4381 = !DILocation(line: 0, scope: !4194)
!4382 = !DILocation(line: 720, column: 6, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4144, file: !545, line: 720, column: 6)
!4384 = !DILocation(line: 720, column: 17, scope: !4383)
!4385 = !DILocation(line: 720, column: 31, scope: !4383)
!4386 = !DILocation(line: 720, column: 6, scope: !4144)
!4387 = !DILocation(line: 729, column: 6, scope: !4144)
!4388 = !DILocation(line: 730, column: 21, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4390, file: !545, line: 729, column: 20)
!4390 = distinct !DILexicalBlock(scope: !4144, file: !545, line: 729, column: 6)
!4391 = !DILocation(line: 730, column: 27, scope: !4389)
!4392 = !DILocation(line: 730, column: 3, scope: !4389)
!4393 = !DILocation(line: 737, column: 22, scope: !4144)
!4394 = !DILocation(line: 737, column: 20, scope: !4144)
!4395 = !DILocation(line: 0, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4144, file: !545, line: 739, column: 6)
!4397 = !DILocation(line: 745, column: 17, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4396, file: !545, line: 743, column: 9)
!4399 = !DILocation(line: 745, column: 25, scope: !4398)
!4400 = !DILocation(line: 746, column: 17, scope: !4398)
!4401 = !DILocation(line: 746, column: 28, scope: !4398)
!4402 = !DILocation(line: 749, column: 29, scope: !4144)
!4403 = !DILocation(line: 749, column: 16, scope: !4144)
!4404 = !DILocation(line: 749, column: 27, scope: !4144)
!4405 = !DILocation(line: 756, column: 6, scope: !4220)
!4406 = !DILocation(line: 756, column: 6, scope: !4144)
!4407 = !DILocation(line: 757, column: 3, scope: !4218)
!4408 = !DILocation(line: 758, column: 10, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4216, file: !545, line: 758, column: 8)
!4410 = !DILocation(line: 758, column: 25, scope: !4409)
!4411 = !DILocation(line: 758, column: 8, scope: !4216)
!4412 = !DILocation(line: 0, scope: !4216)
!4413 = !DILocation(line: 765, column: 8, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !4216, file: !545, line: 765, column: 8)
!4415 = !DILocation(line: 765, column: 19, scope: !4414)
!4416 = !DILocation(line: 765, column: 23, scope: !4414)
!4417 = !DILocation(line: 765, column: 8, scope: !4216)
!4418 = !DILocation(line: 762, column: 33, scope: !4216)
!4419 = !DILocation(line: 769, column: 8, scope: !4216)
!4420 = !DILocation(line: 769, column: 11, scope: !4216)
!4421 = !DILocation(line: 757, column: 27, scope: !4217)
!4422 = !DILocation(line: 757, column: 17, scope: !4217)
!4423 = distinct !{!4423, !4407, !4424}
!4424 = !DILocation(line: 770, column: 3, scope: !4218)
!4425 = !DILocation(line: 774, column: 16, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4427, file: !545, line: 774, column: 2)
!4427 = distinct !DILexicalBlock(scope: !4144, file: !545, line: 774, column: 2)
!4428 = !DILocation(line: 774, column: 2, scope: !4427)
!4429 = !DILocation(line: 776, column: 16, scope: !4430)
!4430 = distinct !DILexicalBlock(scope: !4431, file: !545, line: 776, column: 7)
!4431 = distinct !DILexicalBlock(scope: !4426, file: !545, line: 774, column: 30)
!4432 = !DILocation(line: 776, column: 19, scope: !4430)
!4433 = !DILocation(line: 776, column: 34, scope: !4430)
!4434 = !DILocation(line: 776, column: 7, scope: !4431)
!4435 = !DILocation(line: 780, column: 7, scope: !4431)
!4436 = !DILocation(line: 782, column: 13, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4438, file: !545, line: 780, column: 19)
!4438 = distinct !DILexicalBlock(scope: !4431, file: !545, line: 780, column: 7)
!4439 = !DILocation(line: 782, column: 8, scope: !4437)
!4440 = !DILocation(line: 782, column: 11, scope: !4437)
!4441 = !DILocation(line: 783, column: 3, scope: !4437)
!4442 = !DILocation(line: 785, column: 26, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4438, file: !545, line: 783, column: 10)
!4444 = !DILocation(line: 785, column: 41, scope: !4443)
!4445 = !DILocation(line: 785, column: 24, scope: !4443)
!4446 = !DILocation(line: 785, column: 8, scope: !4443)
!4447 = !DILocation(line: 787, column: 52, scope: !4443)
!4448 = !DILocation(line: 789, column: 11, scope: !4443)
!4449 = !DILocation(line: 789, column: 21, scope: !4443)
!4450 = !DILocation(line: 0, scope: !4438)
!4451 = !DILocation(line: 793, column: 7, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4431, file: !545, line: 793, column: 7)
!4453 = !DILocation(line: 793, column: 18, scope: !4452)
!4454 = !DILocation(line: 793, column: 22, scope: !4452)
!4455 = !DILocation(line: 793, column: 29, scope: !4452)
!4456 = !DILocation(line: 793, column: 7, scope: !4431)
!4457 = !DILocation(line: 797, column: 12, scope: !4431)
!4458 = !DILocation(line: 797, column: 7, scope: !4431)
!4459 = !DILocation(line: 797, column: 10, scope: !4431)
!4460 = !DILocation(line: 799, column: 3, scope: !4431)
!4461 = !DILocation(line: 800, column: 7, scope: !4431)
!4462 = !DILocation(line: 801, column: 2, scope: !4431)
!4463 = !DILocation(line: 338, column: 4, scope: !4144)
!4464 = !DILocation(line: 774, column: 26, scope: !4426)
!4465 = distinct !{!4465, !4428, !4466}
!4466 = !DILocation(line: 801, column: 2, scope: !4427)
!4467 = !DILocation(line: 808, column: 9, scope: !4144)
!4468 = !DILocation(line: 808, column: 2, scope: !4144)
!4469 = !DILocation(line: 813, column: 1, scope: !4144)
!4470 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !545, file: !545, line: 33, type: !4471, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !532, retainedNodes: !4473)
!4471 = !DISubroutineType(types: !4472)
!4472 = !{!422, !105}
!4473 = !{!4474}
!4474 = !DILocalVariable(name: "addr", arg: 1, scope: !4470, file: !545, line: 33, type: !105)
!4475 = !DILocation(line: 0, scope: !4470)
!4476 = !DILocation(line: 41, column: 9, scope: !4470)
!4477 = !DILocation(line: 41, column: 2, scope: !4470)
!4478 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4479, file: !4479, line: 24, type: !4480, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !532, retainedNodes: !4482)
!4479 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4480 = !DISubroutineType(types: !4481)
!4481 = !{!422, !13}
!4482 = !{!4483}
!4483 = !DILocalVariable(name: "addr", arg: 1, scope: !4478, file: !4479, line: 24, type: !13)
!4484 = !DILocation(line: 0, scope: !4478)
!4485 = !DILocation(line: 49, column: 30, scope: !4478)
!4486 = !DILocation(line: 49, column: 57, scope: !4478)
!4487 = !DILocation(line: 49, column: 2, scope: !4478)
!4488 = distinct !DISubprogram(name: "cbprintf_package", scope: !545, file: !545, line: 815, type: !4489, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !532, retainedNodes: !4491)
!4489 = !DISubroutineType(types: !4490)
!4490 = !{!108, !104, !439, !113, !105, null}
!4491 = !{!4492, !4493, !4494, !4495, !4496, !4497}
!4492 = !DILocalVariable(name: "packaged", arg: 1, scope: !4488, file: !545, line: 815, type: !104)
!4493 = !DILocalVariable(name: "len", arg: 2, scope: !4488, file: !545, line: 815, type: !439)
!4494 = !DILocalVariable(name: "flags", arg: 3, scope: !4488, file: !545, line: 815, type: !113)
!4495 = !DILocalVariable(name: "format", arg: 4, scope: !4488, file: !545, line: 816, type: !105)
!4496 = !DILocalVariable(name: "ap", scope: !4488, file: !545, line: 818, type: !4147)
!4497 = !DILocalVariable(name: "ret", scope: !4488, file: !545, line: 819, type: !108)
!4498 = !DILocation(line: 0, scope: !4488)
!4499 = !DILocation(line: 818, column: 2, scope: !4488)
!4500 = !DILocation(line: 818, column: 10, scope: !4488)
!4501 = !DILocation(line: 821, column: 2, scope: !4488)
!4502 = !DILocation(line: 822, column: 8, scope: !4488)
!4503 = !DILocation(line: 823, column: 2, scope: !4488)
!4504 = !DILocation(line: 825, column: 1, scope: !4488)
!4505 = !DILocation(line: 824, column: 2, scope: !4488)
!4506 = distinct !DISubprogram(name: "cbpprintf_external", scope: !545, file: !545, line: 827, type: !4507, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !532, retainedNodes: !4517)
!4507 = !DISubroutineType(types: !4508)
!4508 = !{!108, !4509, !4513, !104, !104}
!4509 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4180, line: 297, baseType: !4510)
!4510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4511, size: 32)
!4511 = !DISubroutineType(types: !4512)
!4512 = !{!108, null}
!4513 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !4180, line: 328, baseType: !4514)
!4514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4515, size: 32)
!4515 = !DISubroutineType(types: !4516)
!4516 = !{!108, !4509, !104, !105, !4147}
!4517 = !{!4518, !4519, !4520, !4521, !4522, !4523, !4529, !4530, !4531, !4532, !4533, !4534, !4535, !4536}
!4518 = !DILocalVariable(name: "out", arg: 1, scope: !4506, file: !545, line: 827, type: !4509)
!4519 = !DILocalVariable(name: "formatter", arg: 2, scope: !4506, file: !545, line: 828, type: !4513)
!4520 = !DILocalVariable(name: "ctx", arg: 3, scope: !4506, file: !545, line: 829, type: !104)
!4521 = !DILocalVariable(name: "packaged", arg: 4, scope: !4506, file: !545, line: 829, type: !104)
!4522 = !DILocalVariable(name: "buf", scope: !4506, file: !545, line: 831, type: !209)
!4523 = !DILocalVariable(name: "hdr", scope: !4506, file: !545, line: 832, type: !4524)
!4524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4525, size: 32)
!4525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !4180, line: 96, size: 64, elements: !4526)
!4526 = !{!4527, !4528}
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4525, file: !4180, line: 98, baseType: !4179, size: 32)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4525, file: !4180, line: 101, baseType: !443, size: 32, offset: 32)
!4529 = !DILocalVariable(name: "s", scope: !4506, file: !545, line: 833, type: !443)
!4530 = !DILocalVariable(name: "ps", scope: !4506, file: !545, line: 833, type: !543)
!4531 = !DILocalVariable(name: "i", scope: !4506, file: !545, line: 834, type: !32)
!4532 = !DILocalVariable(name: "args_size", scope: !4506, file: !545, line: 834, type: !32)
!4533 = !DILocalVariable(name: "s_nbr", scope: !4506, file: !545, line: 834, type: !32)
!4534 = !DILocalVariable(name: "ros_nbr", scope: !4506, file: !545, line: 834, type: !32)
!4535 = !DILocalVariable(name: "rws_nbr", scope: !4506, file: !545, line: 834, type: !32)
!4536 = !DILocalVariable(name: "s_idx", scope: !4506, file: !545, line: 834, type: !32)
!4537 = !DILocation(line: 0, scope: !4506)
!4538 = !DILocation(line: 836, column: 10, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4506, file: !545, line: 836, column: 6)
!4540 = !DILocation(line: 836, column: 6, scope: !4506)
!4541 = !DILocation(line: 842, column: 28, scope: !4506)
!4542 = !DILocation(line: 842, column: 14, scope: !4506)
!4543 = !DILocation(line: 852, column: 16, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4545, file: !545, line: 852, column: 2)
!4545 = distinct !DILexicalBlock(scope: !4506, file: !545, line: 852, column: 2)
!4546 = !DILocation(line: 852, column: 2, scope: !4545)
!4547 = !DILocation(line: 841, column: 28, scope: !4506)
!4548 = !DILocation(line: 841, column: 14, scope: !4506)
!4549 = !DILocation(line: 841, column: 32, scope: !4506)
!4550 = !DILocation(line: 847, column: 19, scope: !4506)
!4551 = !DILocation(line: 843, column: 28, scope: !4506)
!4552 = !DILocation(line: 843, column: 14, scope: !4506)
!4553 = !DILocation(line: 847, column: 31, scope: !4506)
!4554 = !DILocation(line: 844, column: 28, scope: !4506)
!4555 = !DILocation(line: 844, column: 14, scope: !4506)
!4556 = !DILocation(line: 847, column: 45, scope: !4506)
!4557 = !DILocation(line: 847, column: 41, scope: !4506)
!4558 = !DILocation(line: 854, column: 24, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4544, file: !545, line: 852, column: 30)
!4560 = !DILocation(line: 854, column: 11, scope: !4559)
!4561 = !DILocation(line: 855, column: 30, scope: !4559)
!4562 = !DILocation(line: 855, column: 22, scope: !4559)
!4563 = !DILocation(line: 855, column: 8, scope: !4559)
!4564 = !DILocation(line: 857, column: 7, scope: !4559)
!4565 = !DILocation(line: 859, column: 8, scope: !4559)
!4566 = !DILocation(line: 859, column: 18, scope: !4559)
!4567 = !DILocation(line: 859, column: 5, scope: !4559)
!4568 = !DILocation(line: 852, column: 26, scope: !4544)
!4569 = distinct !{!4569, !4546, !4570}
!4570 = !DILocation(line: 860, column: 2, scope: !4545)
!4571 = !DILocation(line: 863, column: 6, scope: !4506)
!4572 = !DILocation(line: 866, column: 56, scope: !4506)
!4573 = !DILocation(line: 866, column: 9, scope: !4506)
!4574 = !DILocation(line: 866, column: 2, scope: !4506)
!4575 = !DILocation(line: 867, column: 1, scope: !4506)
!4576 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !545, file: !545, line: 179, type: !4577, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !532, retainedNodes: !4579)
!4577 = !DISubroutineType(types: !4578)
!4578 = !{!108, !4509, !4513, !104, !105, !104}
!4579 = !{!4580, !4581, !4582, !4583, !4584, !4585}
!4580 = !DILocalVariable(name: "out", arg: 1, scope: !4576, file: !545, line: 179, type: !4509)
!4581 = !DILocalVariable(name: "formatter", arg: 2, scope: !4576, file: !545, line: 180, type: !4513)
!4582 = !DILocalVariable(name: "ctx", arg: 3, scope: !4576, file: !545, line: 181, type: !104)
!4583 = !DILocalVariable(name: "fmt", arg: 4, scope: !4576, file: !545, line: 182, type: !105)
!4584 = !DILocalVariable(name: "buf", arg: 5, scope: !4576, file: !545, line: 182, type: !104)
!4585 = !DILocalVariable(name: "u", scope: !4576, file: !545, line: 187, type: !4586)
!4586 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4576, file: !545, line: 184, size: 32, elements: !4587)
!4587 = !{!4588, !4589}
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4586, file: !545, line: 185, baseType: !4147, size: 32)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4586, file: !545, line: 186, baseType: !104, size: 32)
!4590 = !DILocation(line: 0, scope: !4576)
!4591 = !DILocation(line: 191, column: 9, scope: !4576)
!4592 = !DILocation(line: 191, column: 2, scope: !4576)
!4593 = distinct !DISubprogram(name: "is_ptr", scope: !545, file: !545, line: 881, type: !4594, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !532, retainedNodes: !4596)
!4594 = !DISubroutineType(types: !4595)
!4595 = !{!422, !105, !108}
!4596 = !{!4597, !4598, !4599, !4600, !4601}
!4597 = !DILocalVariable(name: "fmt", arg: 1, scope: !4593, file: !545, line: 881, type: !105)
!4598 = !DILocalVariable(name: "n", arg: 2, scope: !4593, file: !545, line: 881, type: !108)
!4599 = !DILocalVariable(name: "c", scope: !4593, file: !545, line: 883, type: !107)
!4600 = !DILocalVariable(name: "mod", scope: !4593, file: !545, line: 884, type: !422)
!4601 = !DILocalVariable(name: "cnt", scope: !4593, file: !545, line: 885, type: !108)
!4602 = !DILocation(line: 0, scope: !4593)
!4603 = !DILocation(line: 887, column: 14, scope: !4593)
!4604 = !DILocation(line: 887, column: 22, scope: !4593)
!4605 = !DILocation(line: 887, column: 2, scope: !4593)
!4606 = !DILocation(line: 887, column: 18, scope: !4593)
!4607 = !DILocation(line: 888, column: 7, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4593, file: !545, line: 887, column: 31)
!4609 = !DILocation(line: 889, column: 12, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4611, file: !545, line: 889, column: 8)
!4611 = distinct !DILexicalBlock(scope: !4612, file: !545, line: 888, column: 12)
!4612 = distinct !DILexicalBlock(scope: !4608, file: !545, line: 888, column: 7)
!4613 = !DILocation(line: 889, column: 8, scope: !4611)
!4614 = !DILocation(line: 890, column: 11, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4616, file: !545, line: 890, column: 9)
!4616 = distinct !DILexicalBlock(scope: !4610, file: !545, line: 889, column: 18)
!4617 = !DILocation(line: 890, column: 9, scope: !4616)
!4618 = !DILocation(line: 892, column: 16, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4615, file: !545, line: 892, column: 16)
!4620 = !DILocation(line: 892, column: 16, scope: !4615)
!4621 = !DILocation(line: 895, column: 15, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4610, file: !545, line: 895, column: 15)
!4623 = !DILocation(line: 895, column: 15, scope: !4610)
!4624 = !DILocation(line: 900, column: 9, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4608, file: !545, line: 900, column: 7)
!4626 = !DILocation(line: 900, column: 7, scope: !4608)
!4627 = distinct !{!4627, !4605, !4628}
!4628 = !DILocation(line: 903, column: 2, scope: !4593)
!4629 = !DILocation(line: 906, column: 1, scope: !4593)
!4630 = distinct !DISubprogram(name: "is_fmt_spec", scope: !545, file: !545, line: 873, type: !4631, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !532, retainedNodes: !4633)
!4631 = !DISubroutineType(types: !4632)
!4632 = !{!422, !107}
!4633 = !{!4634}
!4634 = !DILocalVariable(name: "c", arg: 1, scope: !4630, file: !545, line: 873, type: !107)
!4635 = !DILocation(line: 0, scope: !4630)
!4636 = !DILocation(line: 875, column: 19, scope: !4630)
!4637 = !DILocation(line: 875, column: 2, scope: !4630)
!4638 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !545, file: !545, line: 908, type: !4639, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !532, retainedNodes: !4645)
!4639 = !DISubroutineType(types: !4640)
!4640 = !{!108, !104, !439, !4641, !104, !113, !3108, !439}
!4641 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !4180, line: 308, baseType: !4642)
!4642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4643, size: 32)
!4643 = !DISubroutineType(types: !4644)
!4644 = !{!108, !13, !439, !104}
!4645 = !{!4646, !4647, !4648, !4649, !4650, !4651, !4652, !4653, !4654, !4655, !4656, !4657, !4658, !4659, !4660, !4661, !4663, !4664, !4665, !4666, !4667, !4673, !4676, !4677, !4678, !4680, !4683, !4684, !4685, !4686, !4687, !4688, !4689, !4690, !4691, !4692, !4693, !4694, !4696, !4699, !4700, !4701, !4702, !4703, !4704, !4706, !4709, !4710, !4711}
!4646 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4638, file: !545, line: 908, type: !104)
!4647 = !DILocalVariable(name: "in_len", arg: 2, scope: !4638, file: !545, line: 909, type: !439)
!4648 = !DILocalVariable(name: "cb", arg: 3, scope: !4638, file: !545, line: 910, type: !4641)
!4649 = !DILocalVariable(name: "ctx", arg: 4, scope: !4638, file: !545, line: 911, type: !104)
!4650 = !DILocalVariable(name: "flags", arg: 5, scope: !4638, file: !545, line: 912, type: !113)
!4651 = !DILocalVariable(name: "strl", arg: 6, scope: !4638, file: !545, line: 913, type: !3108)
!4652 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4638, file: !545, line: 914, type: !439)
!4653 = !DILocalVariable(name: "buf", scope: !4638, file: !545, line: 918, type: !209)
!4654 = !DILocalVariable(name: "buf32", scope: !4638, file: !545, line: 919, type: !1231)
!4655 = !DILocalVariable(name: "args_size", scope: !4638, file: !545, line: 920, type: !32)
!4656 = !DILocalVariable(name: "ros_nbr", scope: !4638, file: !545, line: 920, type: !32)
!4657 = !DILocalVariable(name: "rws_nbr", scope: !4638, file: !545, line: 920, type: !32)
!4658 = !DILocalVariable(name: "fmt_present", scope: !4638, file: !545, line: 921, type: !422)
!4659 = !DILocalVariable(name: "rw_cpy", scope: !4638, file: !545, line: 922, type: !422)
!4660 = !DILocalVariable(name: "ro_cpy", scope: !4638, file: !545, line: 923, type: !422)
!4661 = !DILocalVariable(name: "in_desc", scope: !4638, file: !545, line: 924, type: !4662)
!4662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4183, size: 32)
!4663 = !DILocalVariable(name: "out_len", scope: !4638, file: !545, line: 960, type: !108)
!4664 = !DILocalVariable(name: "fmt", scope: !4638, file: !545, line: 965, type: !105)
!4665 = !DILocalVariable(name: "str_pos", scope: !4638, file: !545, line: 966, type: !209)
!4666 = !DILocalVariable(name: "strl_cnt", scope: !4638, file: !545, line: 967, type: !439)
!4667 = !DILocalVariable(name: "i", scope: !4668, file: !545, line: 973, type: !108)
!4668 = distinct !DILexicalBlock(scope: !4669, file: !545, line: 973, column: 4)
!4669 = distinct !DILexicalBlock(scope: !4670, file: !545, line: 972, column: 15)
!4670 = distinct !DILexicalBlock(scope: !4671, file: !545, line: 972, column: 7)
!4671 = distinct !DILexicalBlock(scope: !4672, file: !545, line: 970, column: 18)
!4672 = distinct !DILexicalBlock(scope: !4638, file: !545, line: 970, column: 6)
!4673 = !DILocalVariable(name: "str", scope: !4674, file: !545, line: 974, type: !105)
!4674 = distinct !DILexicalBlock(scope: !4675, file: !545, line: 973, column: 38)
!4675 = distinct !DILexicalBlock(scope: !4668, file: !545, line: 973, column: 4)
!4676 = !DILocalVariable(name: "len", scope: !4674, file: !545, line: 975, type: !108)
!4677 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4671, file: !545, line: 990, type: !422)
!4678 = !DILocalVariable(name: "i", scope: !4679, file: !545, line: 995, type: !108)
!4679 = distinct !DILexicalBlock(scope: !4671, file: !545, line: 995, column: 3)
!4680 = !DILocalVariable(name: "arg_idx", scope: !4681, file: !545, line: 996, type: !164)
!4681 = distinct !DILexicalBlock(scope: !4682, file: !545, line: 995, column: 37)
!4682 = distinct !DILexicalBlock(scope: !4679, file: !545, line: 995, column: 3)
!4683 = !DILocalVariable(name: "arg_pos", scope: !4681, file: !545, line: 997, type: !164)
!4684 = !DILocalVariable(name: "str", scope: !4681, file: !545, line: 998, type: !105)
!4685 = !DILocalVariable(name: "is_ro", scope: !4681, file: !545, line: 999, type: !422)
!4686 = !DILocalVariable(name: "len", scope: !4681, file: !545, line: 1000, type: !108)
!4687 = !DILocalVariable(name: "out_desc", scope: !4638, file: !545, line: 1038, type: !4183)
!4688 = !DILocalVariable(name: "cpy_str_pos", scope: !4638, file: !545, line: 1040, type: !4165)
!4689 = !DILocalVariable(name: "keep_str_pos", scope: !4638, file: !545, line: 1042, type: !4165)
!4690 = !DILocalVariable(name: "scpy_cnt", scope: !4638, file: !545, line: 1043, type: !164)
!4691 = !DILocalVariable(name: "keep_cnt", scope: !4638, file: !545, line: 1044, type: !164)
!4692 = !DILocalVariable(name: "dst", scope: !4638, file: !545, line: 1045, type: !209)
!4693 = !DILocalVariable(name: "rv", scope: !4638, file: !545, line: 1046, type: !108)
!4694 = !DILocalVariable(name: "i", scope: !4695, file: !545, line: 1074, type: !108)
!4695 = distinct !DILexicalBlock(scope: !4638, file: !545, line: 1074, column: 2)
!4696 = !DILocalVariable(name: "arg_idx", scope: !4697, file: !545, line: 1075, type: !164)
!4697 = distinct !DILexicalBlock(scope: !4698, file: !545, line: 1074, column: 36)
!4698 = distinct !DILexicalBlock(scope: !4695, file: !545, line: 1074, column: 2)
!4699 = !DILocalVariable(name: "arg_pos", scope: !4697, file: !545, line: 1076, type: !164)
!4700 = !DILocalVariable(name: "str", scope: !4697, file: !545, line: 1077, type: !105)
!4701 = !DILocalVariable(name: "is_ro", scope: !4697, file: !545, line: 1078, type: !422)
!4702 = !DILocalVariable(name: "in_desc_backup", scope: !4638, file: !545, line: 1114, type: !4183)
!4703 = !DILocalVariable(name: "strs_len", scope: !4638, file: !545, line: 1134, type: !439)
!4704 = !DILocalVariable(name: "i", scope: !4705, file: !545, line: 1143, type: !108)
!4705 = distinct !DILexicalBlock(scope: !4638, file: !545, line: 1143, column: 2)
!4706 = !DILocalVariable(name: "loc", scope: !4707, file: !545, line: 1144, type: !164)
!4707 = distinct !DILexicalBlock(scope: !4708, file: !545, line: 1143, column: 37)
!4708 = distinct !DILexicalBlock(scope: !4705, file: !545, line: 1143, column: 2)
!4709 = !DILocalVariable(name: "str", scope: !4707, file: !545, line: 1145, type: !105)
!4710 = !DILocalVariable(name: "str_len", scope: !4707, file: !545, line: 1146, type: !168)
!4711 = !DILabel(scope: !4712, name: "calculate_string_length", file: !545, line: 1021)
!4712 = distinct !DILexicalBlock(scope: !4713, file: !545, line: 1020, column: 56)
!4713 = distinct !DILexicalBlock(scope: !4714, file: !545, line: 1020, column: 15)
!4714 = distinct !DILexicalBlock(scope: !4681, file: !545, line: 1014, column: 8)
!4715 = !DILocation(line: 0, scope: !4638)
!4716 = !DILocation(line: 919, column: 20, scope: !4638)
!4717 = !DILocation(line: 921, column: 27, scope: !4638)
!4718 = !DILocation(line: 921, column: 21, scope: !4638)
!4719 = !DILocation(line: 926, column: 18, scope: !4638)
!4720 = !DILocation(line: 926, column: 11, scope: !4638)
!4721 = !DILocation(line: 926, column: 34, scope: !4638)
!4722 = !DILocation(line: 931, column: 21, scope: !4638)
!4723 = !DILocation(line: 931, column: 12, scope: !4638)
!4724 = !DILocation(line: 932, column: 11, scope: !4638)
!4725 = !DILocation(line: 932, column: 19, scope: !4638)
!4726 = !DILocation(line: 938, column: 21, scope: !4638)
!4727 = !DILocation(line: 938, column: 12, scope: !4638)
!4728 = !DILocation(line: 939, column: 19, scope: !4638)
!4729 = !DILocation(line: 939, column: 23, scope: !4638)
!4730 = !DILocation(line: 946, column: 14, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4638, file: !545, line: 946, column: 6)
!4732 = !DILocation(line: 947, column: 7, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4734, file: !545, line: 947, column: 7)
!4734 = distinct !DILexicalBlock(scope: !4731, file: !545, line: 946, column: 26)
!4735 = !DILocation(line: 947, column: 7, scope: !4734)
!4736 = !DILocation(line: 948, column: 4, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4733, file: !545, line: 947, column: 11)
!4738 = !DILocation(line: 949, column: 3, scope: !4737)
!4739 = !DILocation(line: 958, column: 23, scope: !4638)
!4740 = !DILocation(line: 958, column: 14, scope: !4638)
!4741 = !DILocation(line: 958, column: 27, scope: !4638)
!4742 = !DILocation(line: 965, column: 41, scope: !4638)
!4743 = !DILocation(line: 965, column: 20, scope: !4638)
!4744 = !DILocation(line: 966, column: 22, scope: !4638)
!4745 = !DILocation(line: 970, column: 9, scope: !4672)
!4746 = !DILocation(line: 970, column: 6, scope: !4638)
!4747 = !DILocation(line: 972, column: 7, scope: !4671)
!4748 = !DILocation(line: 0, scope: !4668)
!4749 = !DILocation(line: 973, column: 4, scope: !4668)
!4750 = !DILocation(line: 974, column: 46, scope: !4674)
!4751 = !DILocation(line: 974, column: 40, scope: !4674)
!4752 = !DILocation(line: 974, column: 23, scope: !4674)
!4753 = !DILocation(line: 0, scope: !4674)
!4754 = !DILocation(line: 975, column: 15, scope: !4674)
!4755 = !DILocation(line: 978, column: 14, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4674, file: !545, line: 978, column: 9)
!4757 = !DILocation(line: 979, column: 25, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4756, file: !545, line: 978, column: 38)
!4759 = !DILocation(line: 979, column: 19, scope: !4758)
!4760 = !DILocation(line: 979, column: 6, scope: !4758)
!4761 = !DILocation(line: 979, column: 23, scope: !4758)
!4762 = !DILocation(line: 980, column: 5, scope: !4758)
!4763 = !DILocation(line: 981, column: 13, scope: !4674)
!4764 = !DILocation(line: 982, column: 12, scope: !4674)
!4765 = !DILocation(line: 973, column: 34, scope: !4675)
!4766 = !DILocation(line: 973, column: 22, scope: !4675)
!4767 = distinct !{!4767, !4749, !4768}
!4768 = !DILocation(line: 983, column: 4, scope: !4668)
!4769 = !DILocation(line: 985, column: 16, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4771, file: !545, line: 985, column: 8)
!4771 = distinct !DILexicalBlock(scope: !4670, file: !545, line: 984, column: 10)
!4772 = !DILocation(line: 967, column: 9, scope: !4638)
!4773 = !DILocation(line: 971, column: 11, scope: !4671)
!4774 = !DILocation(line: 0, scope: !4671)
!4775 = !DILocation(line: 0, scope: !4679)
!4776 = !DILocation(line: 995, column: 21, scope: !4682)
!4777 = !DILocation(line: 995, column: 3, scope: !4679)
!4778 = !DILocation(line: 990, column: 34, scope: !4671)
!4779 = !DILocation(line: 990, column: 26, scope: !4671)
!4780 = !DILocation(line: 996, column: 30, scope: !4681)
!4781 = !DILocation(line: 0, scope: !4681)
!4782 = !DILocation(line: 997, column: 30, scope: !4681)
!4783 = !DILocation(line: 997, column: 22, scope: !4681)
!4784 = !DILocation(line: 998, column: 39, scope: !4681)
!4785 = !DILocation(line: 998, column: 22, scope: !4681)
!4786 = !DILocation(line: 999, column: 17, scope: !4681)
!4787 = !DILocation(line: 1002, column: 20, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4681, file: !545, line: 1002, column: 8)
!4789 = !DILocation(line: 996, column: 22, scope: !4681)
!4790 = !DILocation(line: 1002, column: 35, scope: !4788)
!4791 = !DILocation(line: 1002, column: 23, scope: !4788)
!4792 = !DILocation(line: 1002, column: 8, scope: !4681)
!4793 = !DILocation(line: 1003, column: 5, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4795, file: !545, line: 1003, column: 5)
!4795 = distinct !DILexicalBlock(scope: !4796, file: !545, line: 1003, column: 5)
!4796 = distinct !DILexicalBlock(scope: !4797, file: !545, line: 1003, column: 5)
!4797 = distinct !DILexicalBlock(scope: !4798, file: !545, line: 1003, column: 5)
!4798 = distinct !DILexicalBlock(scope: !4788, file: !545, line: 1002, column: 45)
!4799 = !DILocation(line: 1010, column: 13, scope: !4798)
!4800 = !DILocation(line: 1011, column: 5, scope: !4798)
!4801 = !DILocation(line: 1014, column: 8, scope: !4681)
!4802 = !DILocation(line: 1015, column: 9, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4714, file: !545, line: 1014, column: 15)
!4804 = !DILocation(line: 1018, column: 14, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4806, file: !545, line: 1017, column: 12)
!4806 = distinct !DILexicalBlock(scope: !4803, file: !545, line: 1015, column: 9)
!4807 = !DILocation(line: 1020, column: 4, scope: !4803)
!4808 = !DILocation(line: 1020, column: 15, scope: !4714)
!4809 = !DILocation(line: 1021, column: 1, scope: !4712)
!4810 = !DILocation(line: 1022, column: 11, scope: !4712)
!4811 = !DILocation(line: 1025, column: 14, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4712, file: !545, line: 1025, column: 9)
!4813 = !DILocation(line: 1026, column: 25, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4812, file: !545, line: 1025, column: 38)
!4815 = !DILocation(line: 1026, column: 19, scope: !4814)
!4816 = !DILocation(line: 1026, column: 6, scope: !4814)
!4817 = !DILocation(line: 1026, column: 23, scope: !4814)
!4818 = !DILocation(line: 1027, column: 5, scope: !4814)
!4819 = !DILocation(line: 1031, column: 21, scope: !4712)
!4820 = !DILocation(line: 1031, column: 13, scope: !4712)
!4821 = !DILocation(line: 1032, column: 4, scope: !4712)
!4822 = !DILocation(line: 995, column: 33, scope: !4682)
!4823 = distinct !{!4823, !4777, !4824}
!4824 = !DILocation(line: 1033, column: 3, scope: !4679)
!4825 = !DILocation(line: 1040, column: 10, scope: !4638)
!4826 = !DILocation(line: 1042, column: 10, scope: !4638)
!4827 = !DILocation(line: 1052, column: 6, scope: !4638)
!4828 = !DILocation(line: 1055, column: 9, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4830, file: !545, line: 1052, column: 14)
!4830 = distinct !DILexicalBlock(scope: !4638, file: !545, line: 1052, column: 6)
!4831 = !DILocation(line: 1056, column: 2, scope: !4829)
!4832 = !DILocation(line: 1056, column: 21, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4830, file: !545, line: 1056, column: 13)
!4834 = !DILocation(line: 1066, column: 3, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4836, file: !545, line: 1065, column: 11)
!4836 = distinct !DILexicalBlock(scope: !4638, file: !545, line: 1065, column: 6)
!4837 = !DILocation(line: 1067, column: 2, scope: !4835)
!4838 = !DILocation(line: 1068, column: 10, scope: !4638)
!4839 = !DILocation(line: 0, scope: !4695)
!4840 = !DILocation(line: 1074, column: 20, scope: !4698)
!4841 = !DILocation(line: 1074, column: 2, scope: !4695)
!4842 = !DILocation(line: 1110, column: 24, scope: !4638)
!4843 = !DILocation(line: 1053, column: 12, scope: !4829)
!4844 = !DILocation(line: 1054, column: 12, scope: !4829)
!4845 = !DILocation(line: 1108, column: 30, scope: !4638)
!4846 = !DILocation(line: 1108, column: 40, scope: !4638)
!4847 = !DILocation(line: 1108, column: 38, scope: !4638)
!4848 = !DILocation(line: 1109, column: 31, scope: !4638)
!4849 = !DILocation(line: 1109, column: 24, scope: !4638)
!4850 = !DILocation(line: 1110, column: 31, scope: !4638)
!4851 = !DILocation(line: 1114, column: 31, scope: !4638)
!4852 = !DILocation(line: 1114, column: 48, scope: !4638)
!4853 = !DILocation(line: 1115, column: 13, scope: !4638)
!4854 = !DILocation(line: 1118, column: 7, scope: !4638)
!4855 = !DILocation(line: 1119, column: 9, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4638, file: !545, line: 1119, column: 6)
!4857 = !DILocation(line: 1119, column: 6, scope: !4638)
!4858 = !DILocation(line: 1075, column: 29, scope: !4697)
!4859 = !DILocation(line: 1075, column: 21, scope: !4697)
!4860 = !DILocation(line: 0, scope: !4697)
!4861 = !DILocation(line: 1076, column: 29, scope: !4697)
!4862 = !DILocation(line: 1076, column: 21, scope: !4697)
!4863 = !DILocation(line: 1077, column: 38, scope: !4697)
!4864 = !DILocation(line: 1077, column: 21, scope: !4697)
!4865 = !DILocation(line: 1078, column: 16, scope: !4697)
!4866 = !DILocation(line: 1080, column: 19, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4697, file: !545, line: 1080, column: 7)
!4868 = !DILocation(line: 1080, column: 34, scope: !4867)
!4869 = !DILocation(line: 1080, column: 22, scope: !4867)
!4870 = !DILocation(line: 1080, column: 7, scope: !4697)
!4871 = !DILocation(line: 1084, column: 7, scope: !4697)
!4872 = !DILocation(line: 1085, column: 8, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4874, file: !545, line: 1084, column: 14)
!4874 = distinct !DILexicalBlock(scope: !4697, file: !545, line: 1084, column: 7)
!4875 = !DILocation(line: 1087, column: 25, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4877, file: !545, line: 1085, column: 49)
!4877 = distinct !DILexicalBlock(scope: !4873, file: !545, line: 1085, column: 8)
!4878 = !DILocation(line: 1088, column: 4, scope: !4876)
!4879 = !DILocation(line: 1088, column: 15, scope: !4877)
!4880 = !DILocation(line: 1090, column: 26, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4882, file: !545, line: 1088, column: 61)
!4882 = distinct !DILexicalBlock(scope: !4877, file: !545, line: 1088, column: 15)
!4883 = !DILocation(line: 1091, column: 4, scope: !4881)
!4884 = !DILocation(line: 1095, column: 8, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4874, file: !545, line: 1094, column: 10)
!4886 = !DILocation(line: 1097, column: 25, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4888, file: !545, line: 1095, column: 49)
!4888 = distinct !DILexicalBlock(scope: !4885, file: !545, line: 1095, column: 8)
!4889 = !DILocation(line: 1098, column: 4, scope: !4887)
!4890 = !DILocation(line: 1100, column: 26, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4888, file: !545, line: 1098, column: 11)
!4892 = !DILocation(line: 1100, column: 5, scope: !4891)
!4893 = !DILocation(line: 1100, column: 30, scope: !4891)
!4894 = !DILocation(line: 1101, column: 26, scope: !4891)
!4895 = !DILocation(line: 0, scope: !4874)
!4896 = !DILocation(line: 1074, column: 32, scope: !4698)
!4897 = distinct !{!4897, !4841, !4898}
!4898 = !DILocation(line: 1104, column: 2, scope: !4695)
!4899 = !DILocation(line: 1124, column: 13, scope: !4638)
!4900 = !DILocation(line: 1127, column: 10, scope: !4638)
!4901 = !DILocation(line: 1127, column: 7, scope: !4638)
!4902 = !DILocation(line: 1128, column: 9, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4638, file: !545, line: 1128, column: 6)
!4904 = !DILocation(line: 1128, column: 6, scope: !4638)
!4905 = !DILocation(line: 1134, column: 27, scope: !4638)
!4906 = !DILocation(line: 1136, column: 7, scope: !4638)
!4907 = !DILocation(line: 1137, column: 9, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4638, file: !545, line: 1137, column: 6)
!4909 = !DILocation(line: 1137, column: 6, scope: !4638)
!4910 = !DILocation(line: 1131, column: 10, scope: !4638)
!4911 = !DILocation(line: 1140, column: 10, scope: !4638)
!4912 = !DILocation(line: 0, scope: !4705)
!4913 = !DILocation(line: 1143, column: 20, scope: !4708)
!4914 = !DILocation(line: 1143, column: 2, scope: !4705)
!4915 = !DILocation(line: 1144, column: 3, scope: !4707)
!4916 = !DILocation(line: 1144, column: 17, scope: !4707)
!4917 = !DILocation(line: 0, scope: !4707)
!4918 = !DILocation(line: 1144, column: 11, scope: !4707)
!4919 = !DILocation(line: 1145, column: 38, scope: !4707)
!4920 = !DILocation(line: 1145, column: 21, scope: !4707)
!4921 = !DILocation(line: 1146, column: 22, scope: !4707)
!4922 = !DILocation(line: 1146, column: 29, scope: !4707)
!4923 = !DILocation(line: 1148, column: 8, scope: !4707)
!4924 = !DILocation(line: 1149, column: 10, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4707, file: !545, line: 1149, column: 7)
!4926 = !DILocation(line: 1149, column: 7, scope: !4707)
!4927 = !DILocation(line: 1154, column: 8, scope: !4707)
!4928 = !DILocation(line: 1155, column: 10, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4707, file: !545, line: 1155, column: 7)
!4930 = !DILocation(line: 1155, column: 7, scope: !4707)
!4931 = !DILocation(line: 1159, column: 2, scope: !4708)
!4932 = !DILocation(line: 1152, column: 11, scope: !4707)
!4933 = !DILocation(line: 1158, column: 11, scope: !4707)
!4934 = !DILocation(line: 1143, column: 33, scope: !4708)
!4935 = distinct !{!4935, !4914, !4936}
!4936 = !DILocation(line: 1159, column: 2, scope: !4705)
!4937 = !DILocation(line: 1162, column: 8, scope: !4638)
!4938 = !DILocation(line: 1164, column: 2, scope: !4638)
!4939 = !DILocation(line: 1165, column: 1, scope: !4638)
!4940 = distinct !DISubprogram(name: "get_package_len", scope: !545, file: !545, line: 196, type: !4941, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !532, retainedNodes: !4943)
!4941 = !DISubroutineType(types: !4942)
!4942 = !{!439, !104}
!4943 = !{!4944, !4945, !4946, !4947, !4948, !4949, !4950}
!4944 = !DILocalVariable(name: "packaged", arg: 1, scope: !4940, file: !545, line: 196, type: !104)
!4945 = !DILocalVariable(name: "buf", scope: !4940, file: !545, line: 200, type: !209)
!4946 = !DILocalVariable(name: "start", scope: !4940, file: !545, line: 201, type: !209)
!4947 = !DILocalVariable(name: "args_size", scope: !4940, file: !545, line: 202, type: !32)
!4948 = !DILocalVariable(name: "s_nbr", scope: !4940, file: !545, line: 202, type: !32)
!4949 = !DILocalVariable(name: "ros_nbr", scope: !4940, file: !545, line: 202, type: !32)
!4950 = !DILocalVariable(name: "i", scope: !4951, file: !545, line: 215, type: !108)
!4951 = distinct !DILexicalBlock(scope: !4940, file: !545, line: 215, column: 2)
!4952 = !DILocation(line: 0, scope: !4940)
!4953 = !DILocation(line: 204, column: 14, scope: !4940)
!4954 = !DILocation(line: 204, column: 21, scope: !4940)
!4955 = !DILocation(line: 205, column: 14, scope: !4940)
!4956 = !DILocation(line: 206, column: 14, scope: !4940)
!4957 = !DILocation(line: 209, column: 6, scope: !4940)
!4958 = !DILocation(line: 212, column: 6, scope: !4940)
!4959 = !DILocation(line: 0, scope: !4951)
!4960 = !DILocation(line: 215, column: 20, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4951, file: !545, line: 215, column: 2)
!4962 = !DILocation(line: 215, column: 2, scope: !4951)
!4963 = !DILocation(line: 220, column: 33, scope: !4940)
!4964 = !DILocation(line: 220, column: 2, scope: !4940)
!4965 = !DILocation(line: 216, column: 6, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4961, file: !545, line: 215, column: 34)
!4967 = !DILocation(line: 217, column: 10, scope: !4966)
!4968 = !DILocation(line: 217, column: 36, scope: !4966)
!4969 = !DILocation(line: 217, column: 7, scope: !4966)
!4970 = !DILocation(line: 215, column: 30, scope: !4961)
!4971 = distinct !{!4971, !4962, !4972}
!4972 = !DILocation(line: 218, column: 2, scope: !4951)
!4973 = distinct !DISubprogram(name: "append_string", scope: !545, file: !545, line: 223, type: !4974, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !532, retainedNodes: !4976)
!4974 = !DISubroutineType(types: !4975)
!4975 = !{!108, !4641, !104, !105, !168}
!4976 = !{!4977, !4978, !4979, !4980}
!4977 = !DILocalVariable(name: "cb", arg: 1, scope: !4973, file: !545, line: 223, type: !4641)
!4978 = !DILocalVariable(name: "ctx", arg: 2, scope: !4973, file: !545, line: 223, type: !104)
!4979 = !DILocalVariable(name: "str", arg: 3, scope: !4973, file: !545, line: 223, type: !105)
!4980 = !DILocalVariable(name: "strl", arg: 4, scope: !4973, file: !545, line: 223, type: !168)
!4981 = !DILocation(line: 0, scope: !4973)
!4982 = !DILocation(line: 225, column: 9, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4973, file: !545, line: 225, column: 6)
!4984 = !DILocation(line: 225, column: 6, scope: !4973)
!4985 = !DILocation(line: 226, column: 14, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4983, file: !545, line: 225, column: 18)
!4987 = !DILocation(line: 226, column: 12, scope: !4986)
!4988 = !DILocation(line: 226, column: 3, scope: !4986)
!4989 = !DILocation(line: 229, column: 14, scope: !4973)
!4990 = !DILocation(line: 229, column: 9, scope: !4973)
!4991 = !DILocation(line: 229, column: 27, scope: !4973)
!4992 = !DILocation(line: 229, column: 39, scope: !4973)
!4993 = !DILocation(line: 230, column: 17, scope: !4973)
!4994 = !DILocation(line: 230, column: 9, scope: !4973)
!4995 = !DILocation(line: 230, column: 2, scope: !4973)
!4996 = !DILocation(line: 231, column: 1, scope: !4973)
!4997 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !557, file: !557, line: 45, type: !559, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !553, retainedNodes: !4998)
!4998 = !{!4999}
!4999 = !DILocalVariable(name: "c", arg: 1, scope: !4997, file: !557, line: 45, type: !108)
!5000 = !DILocation(line: 0, scope: !4997)
!5001 = !DILocation(line: 50, column: 2, scope: !4997)
!5002 = distinct !DISubprogram(name: "__printk_hook_install", scope: !557, file: !557, line: 63, type: !5003, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !553, retainedNodes: !5005)
!5003 = !DISubroutineType(types: !5004)
!5004 = !{null, !558}
!5005 = !{!5006}
!5006 = !DILocalVariable(name: "fn", arg: 1, scope: !5002, file: !557, line: 63, type: !558)
!5007 = !DILocation(line: 0, scope: !5002)
!5008 = !DILocation(line: 65, column: 12, scope: !5002)
!5009 = !DILocation(line: 66, column: 1, scope: !5002)
!5010 = distinct !DISubprogram(name: "__printk_get_hook", scope: !557, file: !557, line: 76, type: !5011, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !553, retainedNodes: !437)
!5011 = !DISubroutineType(types: !5012)
!5012 = !{!104}
!5013 = !DILocation(line: 78, column: 9, scope: !5010)
!5014 = !DILocation(line: 78, column: 2, scope: !5010)
!5015 = distinct !DISubprogram(name: "vprintk", scope: !557, file: !557, line: 113, type: !5016, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !553, retainedNodes: !5024)
!5016 = !DISubroutineType(types: !5017)
!5017 = !{null, !105, !5018}
!5018 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4148, line: 99, baseType: !5019)
!5019 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4148, line: 40, baseType: !5020)
!5020 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !557, baseType: !5021)
!5021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5022)
!5022 = !{!5023}
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5021, file: !557, line: 79, baseType: !104, size: 32)
!5024 = !{!5025, !5026, !5027}
!5025 = !DILocalVariable(name: "fmt", arg: 1, scope: !5015, file: !557, line: 113, type: !105)
!5026 = !DILocalVariable(name: "ap", arg: 2, scope: !5015, file: !557, line: 113, type: !5018)
!5027 = !DILocalVariable(name: "ctx", scope: !5028, file: !557, line: 121, type: !5030)
!5028 = distinct !DILexicalBlock(scope: !5029, file: !557, line: 120, column: 27)
!5029 = distinct !DILexicalBlock(scope: !5015, file: !557, line: 120, column: 6)
!5030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !557, line: 81, size: 32, elements: !5031)
!5031 = !{!5032, !5033}
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !5030, file: !557, line: 85, baseType: !32, size: 32)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5030, file: !557, line: 86, baseType: !5034, offset: 32)
!5034 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, elements: !5035)
!5035 = !{!5036}
!5036 = !DISubrange(count: 0)
!5037 = !DILocation(line: 0, scope: !5015)
!5038 = !DILocation(line: 148, column: 3, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5029, file: !557, line: 138, column: 9)
!5040 = !DILocation(line: 155, column: 1, scope: !5015)
!5041 = distinct !DISubprogram(name: "char_out", scope: !557, file: !557, line: 107, type: !5042, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !553, retainedNodes: !5044)
!5042 = !DISubroutineType(types: !5043)
!5043 = !{!108, !108, !104}
!5044 = !{!5045, !5046}
!5045 = !DILocalVariable(name: "c", arg: 1, scope: !5041, file: !557, line: 107, type: !108)
!5046 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !5041, file: !557, line: 107, type: !104)
!5047 = !DILocation(line: 0, scope: !5041)
!5048 = !DILocation(line: 110, column: 9, scope: !5041)
!5049 = !DILocation(line: 110, column: 2, scope: !5041)
!5050 = distinct !DISubprogram(name: "cbvprintf", scope: !4180, file: !4180, line: 739, type: !5051, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !553, retainedNodes: !5053)
!5051 = !DISubroutineType(types: !5052)
!5052 = !{!108, !4509, !104, !105, !5018}
!5053 = !{!5054, !5055, !5056, !5057}
!5054 = !DILocalVariable(name: "out", arg: 1, scope: !5050, file: !4180, line: 739, type: !4509)
!5055 = !DILocalVariable(name: "ctx", arg: 2, scope: !5050, file: !4180, line: 739, type: !104)
!5056 = !DILocalVariable(name: "format", arg: 3, scope: !5050, file: !4180, line: 739, type: !105)
!5057 = !DILocalVariable(name: "ap", arg: 4, scope: !5050, file: !4180, line: 739, type: !5018)
!5058 = !DILocation(line: 0, scope: !5050)
!5059 = !DILocation(line: 741, column: 9, scope: !5050)
!5060 = !DILocation(line: 741, column: 2, scope: !5050)
!5061 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !557, file: !557, line: 157, type: !5062, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !553, retainedNodes: !5064)
!5062 = !DISubroutineType(types: !5063)
!5063 = !{null, !443, !439}
!5064 = !{!5065, !5066, !5067}
!5065 = !DILocalVariable(name: "c", arg: 1, scope: !5061, file: !557, line: 157, type: !443)
!5066 = !DILocalVariable(name: "n", arg: 2, scope: !5061, file: !557, line: 157, type: !439)
!5067 = !DILocalVariable(name: "i", scope: !5061, file: !557, line: 159, type: !439)
!5068 = !DILocation(line: 0, scope: !5061)
!5069 = !DILocation(line: 164, column: 16, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5071, file: !557, line: 164, column: 2)
!5071 = distinct !DILexicalBlock(scope: !5061, file: !557, line: 164, column: 2)
!5072 = !DILocation(line: 164, column: 2, scope: !5071)
!5073 = !DILocation(line: 165, column: 3, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5070, file: !557, line: 164, column: 26)
!5075 = !DILocation(line: 165, column: 13, scope: !5074)
!5076 = !DILocation(line: 164, column: 22, scope: !5070)
!5077 = distinct !{!5077, !5072, !5078}
!5078 = !DILocation(line: 166, column: 2, scope: !5071)
!5079 = !DILocation(line: 171, column: 1, scope: !5061)
!5080 = distinct !DISubprogram(name: "printk", scope: !557, file: !557, line: 203, type: !5081, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !553, retainedNodes: !5083)
!5081 = !DISubroutineType(types: !5082)
!5082 = !{null, !105, null}
!5083 = !{!5084, !5085}
!5084 = !DILocalVariable(name: "fmt", arg: 1, scope: !5080, file: !557, line: 203, type: !105)
!5085 = !DILocalVariable(name: "ap", scope: !5080, file: !557, line: 205, type: !5018)
!5086 = !DILocation(line: 0, scope: !5080)
!5087 = !DILocation(line: 205, column: 2, scope: !5080)
!5088 = !DILocation(line: 205, column: 10, scope: !5080)
!5089 = !DILocation(line: 207, column: 2, scope: !5080)
!5090 = !DILocation(line: 209, column: 2, scope: !5080)
!5091 = !DILocation(line: 211, column: 2, scope: !5080)
!5092 = !DILocation(line: 212, column: 1, scope: !5080)
!5093 = distinct !DISubprogram(name: "snprintk", scope: !557, file: !557, line: 239, type: !5094, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !553, retainedNodes: !5096)
!5094 = !DISubroutineType(types: !5095)
!5095 = !{!108, !443, !439, !105, null}
!5096 = !{!5097, !5098, !5099, !5100, !5101}
!5097 = !DILocalVariable(name: "str", arg: 1, scope: !5093, file: !557, line: 239, type: !443)
!5098 = !DILocalVariable(name: "size", arg: 2, scope: !5093, file: !557, line: 239, type: !439)
!5099 = !DILocalVariable(name: "fmt", arg: 3, scope: !5093, file: !557, line: 239, type: !105)
!5100 = !DILocalVariable(name: "ap", scope: !5093, file: !557, line: 241, type: !5018)
!5101 = !DILocalVariable(name: "ret", scope: !5093, file: !557, line: 242, type: !108)
!5102 = !DILocation(line: 0, scope: !5093)
!5103 = !DILocation(line: 241, column: 2, scope: !5093)
!5104 = !DILocation(line: 241, column: 10, scope: !5093)
!5105 = !DILocation(line: 244, column: 2, scope: !5093)
!5106 = !DILocation(line: 245, column: 8, scope: !5093)
!5107 = !DILocation(line: 246, column: 2, scope: !5093)
!5108 = !DILocation(line: 249, column: 1, scope: !5093)
!5109 = !DILocation(line: 248, column: 2, scope: !5093)
!5110 = distinct !DISubprogram(name: "vsnprintk", scope: !557, file: !557, line: 251, type: !5111, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !553, retainedNodes: !5113)
!5111 = !DISubroutineType(types: !5112)
!5112 = !{!108, !443, !439, !105, !5018}
!5113 = !{!5114, !5115, !5116, !5117, !5118}
!5114 = !DILocalVariable(name: "str", arg: 1, scope: !5110, file: !557, line: 251, type: !443)
!5115 = !DILocalVariable(name: "size", arg: 2, scope: !5110, file: !557, line: 251, type: !439)
!5116 = !DILocalVariable(name: "fmt", arg: 3, scope: !5110, file: !557, line: 251, type: !105)
!5117 = !DILocalVariable(name: "ap", arg: 4, scope: !5110, file: !557, line: 251, type: !5018)
!5118 = !DILocalVariable(name: "ctx", scope: !5110, file: !557, line: 253, type: !5119)
!5119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !557, line: 217, size: 96, elements: !5120)
!5120 = !{!5121, !5122, !5123}
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5119, file: !557, line: 218, baseType: !443, size: 32)
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5119, file: !557, line: 219, baseType: !108, size: 32, offset: 32)
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5119, file: !557, line: 220, baseType: !108, size: 32, offset: 64)
!5124 = !DILocation(line: 0, scope: !5110)
!5125 = !DILocation(line: 253, column: 2, scope: !5110)
!5126 = !DILocation(line: 253, column: 21, scope: !5110)
!5127 = !DILocation(line: 253, column: 27, scope: !5110)
!5128 = !DILocation(line: 255, column: 2, scope: !5110)
!5129 = !DILocation(line: 257, column: 10, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5110, file: !557, line: 257, column: 6)
!5131 = !DILocation(line: 257, column: 22, scope: !5130)
!5132 = !DILocation(line: 257, column: 16, scope: !5130)
!5133 = !DILocation(line: 257, column: 6, scope: !5110)
!5134 = !DILocation(line: 258, column: 3, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5130, file: !557, line: 257, column: 27)
!5136 = !DILocation(line: 258, column: 18, scope: !5135)
!5137 = !DILocation(line: 259, column: 2, scope: !5135)
!5138 = !DILocation(line: 262, column: 1, scope: !5110)
!5139 = !DILocation(line: 261, column: 2, scope: !5110)
!5140 = distinct !DISubprogram(name: "str_out", scope: !557, file: !557, line: 223, type: !5141, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !553, retainedNodes: !5144)
!5141 = !DISubroutineType(types: !5142)
!5142 = !{!108, !108, !5143}
!5143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5119, size: 32)
!5144 = !{!5145, !5146}
!5145 = !DILocalVariable(name: "c", arg: 1, scope: !5140, file: !557, line: 223, type: !108)
!5146 = !DILocalVariable(name: "ctx", arg: 2, scope: !5140, file: !557, line: 223, type: !5143)
!5147 = !DILocation(line: 0, scope: !5140)
!5148 = !DILocation(line: 225, column: 11, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5140, file: !557, line: 225, column: 6)
!5150 = !DILocation(line: 225, column: 15, scope: !5149)
!5151 = !DILocation(line: 0, scope: !5149)
!5152 = !DILocation(line: 225, column: 23, scope: !5149)
!5153 = !DILocation(line: 225, column: 45, scope: !5149)
!5154 = !DILocation(line: 225, column: 37, scope: !5149)
!5155 = !DILocation(line: 225, column: 6, scope: !5140)
!5156 = !DILocation(line: 226, column: 8, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5149, file: !557, line: 225, column: 50)
!5158 = !DILocation(line: 226, column: 13, scope: !5157)
!5159 = !DILocation(line: 227, column: 3, scope: !5157)
!5160 = !DILocation(line: 230, column: 29, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5140, file: !557, line: 230, column: 6)
!5162 = !DILocation(line: 230, column: 17, scope: !5161)
!5163 = !DILocation(line: 230, column: 6, scope: !5140)
!5164 = !DILocation(line: 231, column: 22, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5161, file: !557, line: 230, column: 34)
!5166 = !DILocation(line: 231, column: 3, scope: !5165)
!5167 = !DILocation(line: 231, column: 26, scope: !5165)
!5168 = !DILocation(line: 232, column: 2, scope: !5165)
!5169 = !DILocation(line: 233, column: 28, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5161, file: !557, line: 232, column: 9)
!5171 = !DILocation(line: 233, column: 22, scope: !5170)
!5172 = !DILocation(line: 233, column: 3, scope: !5170)
!5173 = !DILocation(line: 233, column: 26, scope: !5170)
!5174 = !DILocation(line: 237, column: 1, scope: !5140)
!5175 = distinct !DISubprogram(name: "z_thread_entry", scope: !5176, file: !5176, line: 30, type: !5177, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2838, retainedNodes: !5184)
!5176 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5177 = !DISubroutineType(types: !5178)
!5178 = !{null, !5179, !104, !104, !104}
!5179 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !5180, line: 46, baseType: !5181)
!5180 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5182, size: 32)
!5182 = !DISubroutineType(types: !5183)
!5183 = !{null, !104, !104, !104}
!5184 = !{!5185, !5186, !5187, !5188}
!5185 = !DILocalVariable(name: "entry", arg: 1, scope: !5175, file: !5176, line: 30, type: !5179)
!5186 = !DILocalVariable(name: "p1", arg: 2, scope: !5175, file: !5176, line: 31, type: !104)
!5187 = !DILocalVariable(name: "p2", arg: 3, scope: !5175, file: !5176, line: 31, type: !104)
!5188 = !DILocalVariable(name: "p3", arg: 4, scope: !5175, file: !5176, line: 31, type: !104)
!5189 = !DILocation(line: 0, scope: !5175)
!5190 = !DILocation(line: 36, column: 2, scope: !5175)
!5191 = !DILocation(line: 38, column: 17, scope: !5175)
!5192 = !DILocation(line: 38, column: 2, scope: !5175)
!5193 = !DILocation(line: 45, column: 2, scope: !5175)
!5194 = distinct !DISubprogram(name: "k_current_get", scope: !359, file: !359, line: 530, type: !5195, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2838, retainedNodes: !437)
!5195 = !DISubroutineType(types: !5196)
!5196 = !{!5197}
!5197 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !647, line: 347, baseType: !5198)
!5198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5199, size: 32)
!5199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !647, line: 245, size: 1024, elements: !5200)
!5200 = !{!5201, !5259, !5271, !5272, !5273, !5274, !5280, !5293}
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5199, file: !647, line: 247, baseType: !5202, size: 384)
!5202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !647, line: 57, size: 384, elements: !5203)
!5203 = !{!5204, !5228, !5235, !5236, !5237, !5246, !5247, !5248}
!5204 = !DIDerivedType(tag: DW_TAG_member, scope: !5202, file: !647, line: 60, baseType: !5205, size: 64)
!5205 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5202, file: !647, line: 60, size: 64, elements: !5206)
!5206 = !{!5207, !5222}
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5205, file: !647, line: 61, baseType: !5208, size: 64)
!5208 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !5209)
!5209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !5210)
!5210 = !{!5211, !5217}
!5211 = !DIDerivedType(tag: DW_TAG_member, scope: !5209, file: !367, line: 38, baseType: !5212, size: 32)
!5212 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5209, file: !367, line: 38, size: 32, elements: !5213)
!5213 = !{!5214, !5216}
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5212, file: !367, line: 39, baseType: !5215, size: 32)
!5215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5209, size: 32)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5212, file: !367, line: 40, baseType: !5215, size: 32)
!5217 = !DIDerivedType(tag: DW_TAG_member, scope: !5209, file: !367, line: 42, baseType: !5218, size: 32, offset: 32)
!5218 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5209, file: !367, line: 42, size: 32, elements: !5219)
!5219 = !{!5220, !5221}
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5218, file: !367, line: 43, baseType: !5215, size: 32)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5218, file: !367, line: 44, baseType: !5215, size: 32)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5205, file: !647, line: 62, baseType: !5223, size: 64)
!5223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !672, line: 49, size: 64, elements: !5224)
!5224 = !{!5225}
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5223, file: !672, line: 50, baseType: !5226, size: 64)
!5226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5227, size: 64, elements: !677)
!5227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5223, size: 32)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5202, file: !647, line: 68, baseType: !5229, size: 32, offset: 64)
!5229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5230, size: 32)
!5230 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !5231)
!5231 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !5232)
!5232 = !{!5233}
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5231, file: !363, line: 232, baseType: !5234, size: 64)
!5234 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !5209)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5202, file: !647, line: 71, baseType: !164, size: 8, offset: 96)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5202, file: !647, line: 74, baseType: !164, size: 8, offset: 104)
!5237 = !DIDerivedType(tag: DW_TAG_member, scope: !5202, file: !647, line: 90, baseType: !5238, size: 16, offset: 112)
!5238 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5202, file: !647, line: 90, size: 16, elements: !5239)
!5239 = !{!5240, !5245}
!5240 = !DIDerivedType(tag: DW_TAG_member, scope: !5238, file: !647, line: 91, baseType: !5241, size: 16)
!5241 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5238, file: !647, line: 91, size: 16, elements: !5242)
!5242 = !{!5243, !5244}
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5241, file: !647, line: 96, baseType: !695, size: 8)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5241, file: !647, line: 97, baseType: !164, size: 8, offset: 8)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5238, file: !647, line: 100, baseType: !168, size: 16)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5202, file: !647, line: 107, baseType: !113, size: 32, offset: 128)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5202, file: !647, line: 127, baseType: !104, size: 32, offset: 160)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5202, file: !647, line: 131, baseType: !5249, size: 192, offset: 192)
!5249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !5250)
!5250 = !{!5251, !5252, !5258}
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5249, file: !363, line: 245, baseType: !5208, size: 64)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5249, file: !363, line: 246, baseType: !5253, size: 32, offset: 64)
!5253 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !5254)
!5254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5255, size: 32)
!5255 = !DISubroutineType(types: !5256)
!5256 = !{null, !5257}
!5257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5249, size: 32)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5249, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5199, file: !647, line: 250, baseType: !5260, size: 288, offset: 384)
!5260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !714, line: 25, size: 288, elements: !5261)
!5261 = !{!5262, !5263, !5264, !5265, !5266, !5267, !5268, !5269, !5270}
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5260, file: !714, line: 26, baseType: !113, size: 32)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5260, file: !714, line: 27, baseType: !113, size: 32, offset: 32)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5260, file: !714, line: 28, baseType: !113, size: 32, offset: 64)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5260, file: !714, line: 29, baseType: !113, size: 32, offset: 96)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5260, file: !714, line: 30, baseType: !113, size: 32, offset: 128)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5260, file: !714, line: 31, baseType: !113, size: 32, offset: 160)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5260, file: !714, line: 32, baseType: !113, size: 32, offset: 192)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5260, file: !714, line: 33, baseType: !113, size: 32, offset: 224)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5260, file: !714, line: 34, baseType: !113, size: 32, offset: 256)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5199, file: !647, line: 253, baseType: !104, size: 32, offset: 672)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5199, file: !647, line: 256, baseType: !5230, size: 64, offset: 704)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5199, file: !647, line: 294, baseType: !108, size: 32, offset: 768)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5199, file: !647, line: 300, baseType: !5275, size: 96, offset: 800)
!5275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !647, line: 149, size: 96, elements: !5276)
!5276 = !{!5277, !5278, !5279}
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5275, file: !647, line: 153, baseType: !22, size: 32)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5275, file: !647, line: 162, baseType: !439, size: 32, offset: 32)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5275, file: !647, line: 168, baseType: !439, size: 32, offset: 64)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5199, file: !647, line: 325, baseType: !5281, size: 32, offset: 896)
!5281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5282, size: 32)
!5282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !5283)
!5283 = !{!5284, !5290, !5291}
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5282, file: !359, line: 5074, baseType: !5285, size: 96)
!5285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !740, line: 56, size: 96, elements: !5286)
!5286 = !{!5287, !5288, !5289}
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5285, file: !740, line: 57, baseType: !743, size: 32)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5285, file: !740, line: 58, baseType: !104, size: 32, offset: 32)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5285, file: !740, line: 59, baseType: !439, size: 32, offset: 64)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5282, file: !359, line: 5075, baseType: !5230, size: 64, offset: 96)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5282, file: !359, line: 5076, baseType: !5292, offset: 160)
!5292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5199, file: !647, line: 343, baseType: !5294, size: 64, offset: 928)
!5294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !714, line: 60, size: 64, elements: !5295)
!5295 = !{!5296, !5297}
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5294, file: !714, line: 63, baseType: !113, size: 32)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5294, file: !714, line: 66, baseType: !113, size: 32, offset: 32)
!5298 = !DILocation(line: 535, column: 9, scope: !5194)
!5299 = !DILocation(line: 535, column: 2, scope: !5194)
!5300 = distinct !DISubprogram(name: "k_thread_abort", scope: !3809, file: !3809, line: 188, type: !5301, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2838, retainedNodes: !5303)
!5301 = !DISubroutineType(types: !5302)
!5302 = !{null, !5197}
!5303 = !{!5304}
!5304 = !DILocalVariable(name: "thread", arg: 1, scope: !5300, file: !3809, line: 188, type: !5197)
!5305 = !DILocation(line: 0, scope: !5300)
!5306 = !DILocation(line: 197, column: 2, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5300, file: !3809, line: 197, column: 2)
!5308 = !{i64 2154855472}
!5309 = !DILocation(line: 198, column: 2, scope: !5300)
!5310 = !DILocation(line: 199, column: 1, scope: !5300)
!5311 = distinct !DISubprogram(name: "z_current_get", scope: !3809, file: !3809, line: 173, type: !5195, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2838, retainedNodes: !437)
!5312 = !DILocation(line: 180, column: 2, scope: !5313)
!5313 = distinct !DILexicalBlock(scope: !5311, file: !3809, line: 180, column: 2)
!5314 = !{i64 2154855404}
!5315 = !DILocation(line: 181, column: 9, scope: !5311)
!5316 = !DILocation(line: 181, column: 2, scope: !5311)
!5317 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2844, file: !2844, line: 1338, type: !5318, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2840, retainedNodes: !5326)
!5318 = !DISubroutineType(types: !5319)
!5319 = !{!108, !4509, !104, !105, !5320, !113}
!5320 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4148, line: 99, baseType: !5321)
!5321 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4148, line: 40, baseType: !5322)
!5322 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2844, baseType: !5323)
!5323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5324)
!5324 = !{!5325}
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5323, file: !2844, baseType: !104, size: 32)
!5326 = !{!5327, !5328, !5329, !5330, !5331, !5332, !5336, !5337, !5338, !5340, !5345, !5388, !5391, !5394, !5395, !5396, !5397, !5398, !5399, !5400, !5403, !5404, !5405, !5409, !5412, !5414, !5417, !5418, !5419, !5424, !5430, !5433, !5437, !5443, !5447, !5450, !5452, !5455}
!5327 = !DILocalVariable(name: "out", arg: 1, scope: !5317, file: !2844, line: 1338, type: !4509)
!5328 = !DILocalVariable(name: "ctx", arg: 2, scope: !5317, file: !2844, line: 1338, type: !104)
!5329 = !DILocalVariable(name: "fp", arg: 3, scope: !5317, file: !2844, line: 1338, type: !105)
!5330 = !DILocalVariable(name: "ap", arg: 4, scope: !5317, file: !2844, line: 1339, type: !5320)
!5331 = !DILocalVariable(name: "flags", arg: 5, scope: !5317, file: !2844, line: 1339, type: !113)
!5332 = !DILocalVariable(name: "buf", scope: !5317, file: !2844, line: 1341, type: !5333)
!5333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 176, elements: !5334)
!5334 = !{!5335}
!5335 = !DISubrange(count: 22)
!5336 = !DILocalVariable(name: "count", scope: !5317, file: !2844, line: 1342, type: !439)
!5337 = !DILocalVariable(name: "sint", scope: !5317, file: !2844, line: 1343, type: !2863)
!5338 = !DILocalVariable(name: "tagged_ap", scope: !5317, file: !2844, line: 1345, type: !5339)
!5339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !422)
!5340 = !DILocalVariable(name: "rc", scope: !5341, file: !2844, line: 1377, type: !108)
!5341 = distinct !DILexicalBlock(scope: !5342, file: !2844, line: 1377, column: 4)
!5342 = distinct !DILexicalBlock(scope: !5343, file: !2844, line: 1376, column: 19)
!5343 = distinct !DILexicalBlock(scope: !5344, file: !2844, line: 1376, column: 7)
!5344 = distinct !DILexicalBlock(scope: !5317, file: !2844, line: 1375, column: 19)
!5345 = !DILocalVariable(name: "state", scope: !5344, file: !2844, line: 1395, type: !5346)
!5346 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5317, file: !2844, line: 1392, size: 192, elements: !5347)
!5347 = !{!5348, !5356}
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5346, file: !2844, line: 1393, baseType: !5349, size: 64)
!5349 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2844, line: 166, size: 64, elements: !5350)
!5350 = !{!5351, !5352, !5353, !5354, !5355}
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5349, file: !2844, line: 168, baseType: !2863, size: 64)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5349, file: !2844, line: 171, baseType: !2866, size: 64)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5349, file: !2844, line: 174, baseType: !538, size: 64)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5349, file: !2844, line: 177, baseType: !536, size: 64)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5349, file: !2844, line: 180, baseType: !104, size: 32)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5346, file: !2844, line: 1394, baseType: !5357, size: 96, offset: 64)
!5357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2844, line: 189, size: 96, elements: !5358)
!5358 = !{!5359, !5360, !5361, !5362, !5363, !5364, !5365, !5366, !5367, !5368, !5369, !5370, !5371, !5372, !5373, !5374, !5375, !5376, !5377, !5378, !5383}
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5357, file: !2844, line: 191, baseType: !422, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5357, file: !2844, line: 194, baseType: !422, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5357, file: !2844, line: 197, baseType: !422, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5357, file: !2844, line: 200, baseType: !422, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5357, file: !2844, line: 203, baseType: !422, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5357, file: !2844, line: 206, baseType: !422, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5357, file: !2844, line: 209, baseType: !422, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5357, file: !2844, line: 212, baseType: !422, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5357, file: !2844, line: 219, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5357, file: !2844, line: 222, baseType: !422, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5357, file: !2844, line: 229, baseType: !422, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5357, file: !2844, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5357, file: !2844, line: 238, baseType: !422, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5357, file: !2844, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5357, file: !2844, line: 244, baseType: !422, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5357, file: !2844, line: 247, baseType: !422, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5357, file: !2844, line: 252, baseType: !422, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5357, file: !2844, line: 257, baseType: !422, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5357, file: !2844, line: 260, baseType: !165, size: 8, offset: 24)
!5378 = !DIDerivedType(tag: DW_TAG_member, scope: !5357, file: !2844, line: 262, baseType: !5379, size: 32, offset: 32)
!5379 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5357, file: !2844, line: 262, size: 32, elements: !5380)
!5380 = !{!5381, !5382}
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5379, file: !2844, line: 267, baseType: !108, size: 32)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5379, file: !2844, line: 289, baseType: !108, size: 32)
!5383 = !DIDerivedType(tag: DW_TAG_member, scope: !5357, file: !2844, line: 292, baseType: !5384, size: 32, offset: 64)
!5384 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5357, file: !2844, line: 292, size: 32, elements: !5385)
!5385 = !{!5386, !5387}
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5384, file: !2844, line: 297, baseType: !108, size: 32)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5384, file: !2844, line: 306, baseType: !108, size: 32)
!5388 = !DILocalVariable(name: "conv", scope: !5344, file: !2844, line: 1400, type: !5389)
!5389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5390)
!5390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5357, size: 32)
!5391 = !DILocalVariable(name: "value", scope: !5344, file: !2844, line: 1401, type: !5392)
!5392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5393)
!5393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5349, size: 32)
!5394 = !DILocalVariable(name: "sp", scope: !5344, file: !2844, line: 1402, type: !105)
!5395 = !DILocalVariable(name: "width", scope: !5344, file: !2844, line: 1403, type: !108)
!5396 = !DILocalVariable(name: "precision", scope: !5344, file: !2844, line: 1404, type: !108)
!5397 = !DILocalVariable(name: "bps", scope: !5344, file: !2844, line: 1405, type: !105)
!5398 = !DILocalVariable(name: "bpe", scope: !5344, file: !2844, line: 1406, type: !105)
!5399 = !DILocalVariable(name: "sign", scope: !5344, file: !2844, line: 1407, type: !107)
!5400 = !DILocalVariable(name: "arg", scope: !5401, file: !2844, line: 1432, type: !108)
!5401 = distinct !DILexicalBlock(scope: !5402, file: !2844, line: 1431, column: 24)
!5402 = distinct !DILexicalBlock(scope: !5344, file: !2844, line: 1431, column: 7)
!5403 = !DILocalVariable(name: "specifier_cat", scope: !5344, file: !2844, line: 1468, type: !2843)
!5404 = !DILocalVariable(name: "length_mod", scope: !5344, file: !2844, line: 1470, type: !2851)
!5405 = !DILocalVariable(name: "rc", scope: !5406, file: !2844, line: 1575, type: !108)
!5406 = distinct !DILexicalBlock(scope: !5407, file: !2844, line: 1575, column: 4)
!5407 = distinct !DILexicalBlock(scope: !5408, file: !2844, line: 1574, column: 43)
!5408 = distinct !DILexicalBlock(scope: !5344, file: !2844, line: 1574, column: 7)
!5409 = !DILocalVariable(name: "rc", scope: !5410, file: !2844, line: 1584, type: !108)
!5410 = distinct !DILexicalBlock(scope: !5411, file: !2844, line: 1584, column: 4)
!5411 = distinct !DILexicalBlock(scope: !5344, file: !2844, line: 1582, column: 28)
!5412 = !DILocalVariable(name: "len", scope: !5413, file: !2844, line: 1589, type: !439)
!5413 = distinct !DILexicalBlock(scope: !5411, file: !2844, line: 1586, column: 13)
!5414 = !DILocalVariable(name: "len", scope: !5415, file: !2844, line: 1641, type: !439)
!5415 = distinct !DILexicalBlock(scope: !5416, file: !2844, line: 1640, column: 24)
!5416 = distinct !DILexicalBlock(scope: !5411, file: !2844, line: 1640, column: 8)
!5417 = !DILocalVariable(name: "nj_len", scope: !5344, file: !2844, line: 1722, type: !439)
!5418 = !DILocalVariable(name: "pad_len", scope: !5344, file: !2844, line: 1723, type: !108)
!5419 = !DILocalVariable(name: "pad", scope: !5420, file: !2844, line: 1751, type: !107)
!5420 = distinct !DILexicalBlock(scope: !5421, file: !2844, line: 1750, column: 26)
!5421 = distinct !DILexicalBlock(scope: !5422, file: !2844, line: 1750, column: 8)
!5422 = distinct !DILexicalBlock(scope: !5423, file: !2844, line: 1747, column: 18)
!5423 = distinct !DILexicalBlock(scope: !5344, file: !2844, line: 1747, column: 7)
!5424 = !DILocalVariable(name: "rc", scope: !5425, file: !2844, line: 1758, type: !108)
!5425 = distinct !DILexicalBlock(scope: !5426, file: !2844, line: 1758, column: 7)
!5426 = distinct !DILexicalBlock(scope: !5427, file: !2844, line: 1757, column: 21)
!5427 = distinct !DILexicalBlock(scope: !5428, file: !2844, line: 1757, column: 10)
!5428 = distinct !DILexicalBlock(scope: !5429, file: !2844, line: 1756, column: 26)
!5429 = distinct !DILexicalBlock(scope: !5420, file: !2844, line: 1756, column: 9)
!5430 = !DILocalVariable(name: "rc", scope: !5431, file: !2844, line: 1765, type: !108)
!5431 = distinct !DILexicalBlock(scope: !5432, file: !2844, line: 1765, column: 6)
!5432 = distinct !DILexicalBlock(scope: !5420, file: !2844, line: 1764, column: 25)
!5433 = !DILocalVariable(name: "rc", scope: !5434, file: !2844, line: 1774, type: !108)
!5434 = distinct !DILexicalBlock(scope: !5435, file: !2844, line: 1774, column: 4)
!5435 = distinct !DILexicalBlock(scope: !5436, file: !2844, line: 1773, column: 18)
!5436 = distinct !DILexicalBlock(scope: !5344, file: !2844, line: 1773, column: 7)
!5437 = !DILocalVariable(name: "rc", scope: !5438, file: !2844, line: 1819, type: !108)
!5438 = distinct !DILexicalBlock(scope: !5439, file: !2844, line: 1819, column: 5)
!5439 = distinct !DILexicalBlock(scope: !5440, file: !2844, line: 1818, column: 44)
!5440 = distinct !DILexicalBlock(scope: !5441, file: !2844, line: 1818, column: 8)
!5441 = distinct !DILexicalBlock(scope: !5442, file: !2844, line: 1817, column: 10)
!5442 = distinct !DILexicalBlock(scope: !5344, file: !2844, line: 1777, column: 7)
!5443 = !DILocalVariable(name: "rc", scope: !5444, file: !2844, line: 1823, type: !108)
!5444 = distinct !DILexicalBlock(scope: !5445, file: !2844, line: 1823, column: 5)
!5445 = distinct !DILexicalBlock(scope: !5446, file: !2844, line: 1822, column: 26)
!5446 = distinct !DILexicalBlock(scope: !5441, file: !2844, line: 1822, column: 8)
!5447 = !DILocalVariable(name: "rc", scope: !5448, file: !2844, line: 1828, type: !108)
!5448 = distinct !DILexicalBlock(scope: !5449, file: !2844, line: 1828, column: 5)
!5449 = distinct !DILexicalBlock(scope: !5441, file: !2844, line: 1827, column: 26)
!5450 = !DILocalVariable(name: "rc", scope: !5451, file: !2844, line: 1831, type: !108)
!5451 = distinct !DILexicalBlock(scope: !5441, file: !2844, line: 1831, column: 4)
!5452 = !DILocalVariable(name: "rc", scope: !5453, file: !2844, line: 1836, type: !108)
!5453 = distinct !DILexicalBlock(scope: !5454, file: !2844, line: 1836, column: 4)
!5454 = distinct !DILexicalBlock(scope: !5344, file: !2844, line: 1835, column: 21)
!5455 = !DILabel(scope: !5411, name: "prec_int_pad0", file: !2844, line: 1634)
!5456 = !DILocation(line: 0, scope: !5317)
!5457 = !DILocation(line: 1341, column: 2, scope: !5317)
!5458 = !DILocation(line: 1341, column: 7, scope: !5317)
!5459 = !DILocation(line: 1375, column: 2, scope: !5317)
!5460 = !DILocation(line: 1342, column: 9, scope: !5317)
!5461 = !DILocation(line: 1375, column: 9, scope: !5317)
!5462 = !DILocation(line: 1377, column: 4, scope: !5341)
!5463 = !DILocation(line: 0, scope: !5341)
!5464 = !DILocation(line: 1377, column: 4, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5341, file: !2844, line: 1377, column: 4)
!5466 = distinct !{!5466, !5459, !5467}
!5467 = !DILocation(line: 1839, column: 2, scope: !5317)
!5468 = !DILocation(line: 1392, column: 3, scope: !5344)
!5469 = !DILocation(line: 1395, column: 5, scope: !5344)
!5470 = !DILocation(line: 0, scope: !5344)
!5471 = !DILocation(line: 1409, column: 8, scope: !5344)
!5472 = !DILocation(line: 1414, column: 13, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !5344, file: !2844, line: 1414, column: 7)
!5474 = !DILocation(line: 1414, column: 7, scope: !5344)
!5475 = !DILocation(line: 1415, column: 12, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5473, file: !2844, line: 1414, column: 25)
!5477 = !DILocation(line: 1417, column: 14, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5476, file: !2844, line: 1417, column: 8)
!5479 = !DILocation(line: 1417, column: 8, scope: !5476)
!5480 = !DILocation(line: 1418, column: 21, scope: !5481)
!5481 = distinct !DILexicalBlock(scope: !5478, file: !2844, line: 1417, column: 19)
!5482 = !DILocation(line: 1419, column: 13, scope: !5481)
!5483 = !DILocation(line: 1420, column: 4, scope: !5481)
!5484 = !DILocation(line: 1421, column: 20, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5473, file: !2844, line: 1421, column: 14)
!5486 = !DILocation(line: 1421, column: 14, scope: !5473)
!5487 = !DILocation(line: 1431, column: 13, scope: !5402)
!5488 = !DILocation(line: 1431, column: 7, scope: !5344)
!5489 = !DILocation(line: 1432, column: 14, scope: !5401)
!5490 = !DILocation(line: 0, scope: !5401)
!5491 = !DILocation(line: 1434, column: 12, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5401, file: !2844, line: 1434, column: 8)
!5493 = !DILocation(line: 1434, column: 8, scope: !5401)
!5494 = !DILocation(line: 1435, column: 24, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5492, file: !2844, line: 1434, column: 17)
!5496 = !DILocation(line: 1436, column: 4, scope: !5495)
!5497 = !DILocation(line: 1439, column: 20, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5402, file: !2844, line: 1439, column: 14)
!5499 = !DILocation(line: 1439, column: 14, scope: !5402)
!5500 = !DILocation(line: 1469, column: 37, scope: !5344)
!5501 = !DILocation(line: 1448, column: 20, scope: !5344)
!5502 = !DILocation(line: 1449, column: 22, scope: !5344)
!5503 = !DILocation(line: 1471, column: 34, scope: !5344)
!5504 = !DILocation(line: 1478, column: 7, scope: !5344)
!5505 = !DILocation(line: 1479, column: 4, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5507, file: !2844, line: 1478, column: 40)
!5507 = distinct !DILexicalBlock(scope: !5344, file: !2844, line: 1478, column: 7)
!5508 = !DILocation(line: 1484, column: 19, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5506, file: !2844, line: 1479, column: 24)
!5510 = !DILocation(line: 1484, column: 17, scope: !5509)
!5511 = !DILocation(line: 1485, column: 5, scope: !5509)
!5512 = !DILocation(line: 1492, column: 20, scope: !5513)
!5513 = distinct !DILexicalBlock(scope: !5514, file: !2844, line: 1491, column: 12)
!5514 = distinct !DILexicalBlock(scope: !5509, file: !2844, line: 1487, column: 9)
!5515 = !DILocation(line: 1492, column: 18, scope: !5513)
!5516 = !DILocation(line: 1494, column: 5, scope: !5509)
!5517 = !DILocation(line: 1497, column: 23, scope: !5509)
!5518 = !DILocation(line: 1496, column: 17, scope: !5509)
!5519 = !DILocation(line: 1498, column: 5, scope: !5509)
!5520 = !DILocation(line: 1501, column: 23, scope: !5509)
!5521 = !DILocation(line: 1500, column: 17, scope: !5509)
!5522 = !DILocation(line: 1502, column: 5, scope: !5509)
!5523 = !DILocation(line: 1513, column: 23, scope: !5509)
!5524 = !DILocation(line: 1513, column: 6, scope: !5509)
!5525 = !DILocation(line: 1512, column: 17, scope: !5509)
!5526 = !DILocation(line: 1514, column: 5, scope: !5509)
!5527 = !DILocation(line: 0, scope: !5509)
!5528 = !DILocation(line: 1516, column: 8, scope: !5506)
!5529 = !DILocation(line: 1517, column: 19, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5531, file: !2844, line: 1516, column: 33)
!5531 = distinct !DILexicalBlock(scope: !5506, file: !2844, line: 1516, column: 8)
!5532 = !DILocation(line: 1517, column: 17, scope: !5530)
!5533 = !DILocation(line: 1518, column: 4, scope: !5530)
!5534 = !DILocation(line: 1519, column: 19, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5536, file: !2844, line: 1518, column: 39)
!5536 = distinct !DILexicalBlock(scope: !5531, file: !2844, line: 1518, column: 15)
!5537 = !DILocation(line: 1519, column: 17, scope: !5535)
!5538 = !DILocation(line: 1520, column: 4, scope: !5535)
!5539 = !DILocation(line: 1522, column: 4, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5541, file: !2844, line: 1521, column: 47)
!5541 = distinct !DILexicalBlock(scope: !5507, file: !2844, line: 1521, column: 14)
!5542 = !DILocation(line: 1527, column: 19, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5540, file: !2844, line: 1522, column: 24)
!5544 = !DILocation(line: 1527, column: 17, scope: !5543)
!5545 = !DILocation(line: 1528, column: 5, scope: !5543)
!5546 = !DILocation(line: 0, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5543, file: !2844, line: 1530, column: 9)
!5548 = !DILocation(line: 1540, column: 23, scope: !5543)
!5549 = !DILocation(line: 1539, column: 17, scope: !5543)
!5550 = !DILocation(line: 1542, column: 5, scope: !5543)
!5551 = !DILocation(line: 1545, column: 23, scope: !5543)
!5552 = !DILocation(line: 1544, column: 17, scope: !5543)
!5553 = !DILocation(line: 1547, column: 5, scope: !5543)
!5554 = !DILocation(line: 1551, column: 23, scope: !5543)
!5555 = !DILocation(line: 1551, column: 6, scope: !5543)
!5556 = !DILocation(line: 1550, column: 17, scope: !5543)
!5557 = !DILocation(line: 1552, column: 5, scope: !5543)
!5558 = !DILocation(line: 0, scope: !5543)
!5559 = !DILocation(line: 1554, column: 8, scope: !5540)
!5560 = !DILocation(line: 1555, column: 19, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5562, file: !2844, line: 1554, column: 33)
!5562 = distinct !DILexicalBlock(scope: !5540, file: !2844, line: 1554, column: 8)
!5563 = !DILocation(line: 1555, column: 17, scope: !5561)
!5564 = !DILocation(line: 1556, column: 4, scope: !5561)
!5565 = !DILocation(line: 1557, column: 19, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5567, file: !2844, line: 1556, column: 39)
!5567 = distinct !DILexicalBlock(scope: !5562, file: !2844, line: 1556, column: 15)
!5568 = !DILocation(line: 1557, column: 17, scope: !5566)
!5569 = !DILocation(line: 1558, column: 4, scope: !5566)
!5570 = !DILocation(line: 0, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5572, file: !2844, line: 1560, column: 8)
!5572 = distinct !DILexicalBlock(scope: !5573, file: !2844, line: 1559, column: 45)
!5573 = distinct !DILexicalBlock(scope: !5541, file: !2844, line: 1559, column: 14)
!5574 = !DILocation(line: 1566, column: 17, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5576, file: !2844, line: 1565, column: 46)
!5576 = distinct !DILexicalBlock(scope: !5573, file: !2844, line: 1565, column: 14)
!5577 = !DILocation(line: 1566, column: 15, scope: !5575)
!5578 = !DILocation(line: 1567, column: 3, scope: !5575)
!5579 = !DILocation(line: 1574, column: 21, scope: !5408)
!5580 = !DILocation(line: 1575, column: 4, scope: !5406)
!5581 = !DILocation(line: 0, scope: !5406)
!5582 = !DILocation(line: 1575, column: 4, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5406, file: !2844, line: 1575, column: 4)
!5584 = !DILocation(line: 1582, column: 17, scope: !5344)
!5585 = !DILocation(line: 1582, column: 3, scope: !5344)
!5586 = !DILocation(line: 1584, column: 4, scope: !5410)
!5587 = !DILocation(line: 0, scope: !5410)
!5588 = !DILocation(line: 1584, column: 4, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5410, file: !2844, line: 1584, column: 4)
!5590 = !DILocation(line: 1587, column: 31, scope: !5413)
!5591 = !DILocation(line: 1591, column: 18, scope: !5592)
!5592 = distinct !DILexicalBlock(scope: !5413, file: !2844, line: 1591, column: 8)
!5593 = !DILocation(line: 1591, column: 8, scope: !5413)
!5594 = !DILocation(line: 1592, column: 11, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5592, file: !2844, line: 1591, column: 24)
!5596 = !DILocation(line: 0, scope: !5413)
!5597 = !DILocation(line: 1593, column: 4, scope: !5595)
!5598 = !DILocation(line: 1594, column: 11, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5592, file: !2844, line: 1593, column: 11)
!5600 = !DILocation(line: 1604, column: 51, scope: !5411)
!5601 = !DILocation(line: 1604, column: 13, scope: !5411)
!5602 = !DILocation(line: 1604, column: 11, scope: !5411)
!5603 = !DILocation(line: 1606, column: 4, scope: !5411)
!5604 = !DILocation(line: 1609, column: 14, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5411, file: !2844, line: 1609, column: 8)
!5606 = !DILocation(line: 1609, column: 8, scope: !5411)
!5607 = !DILocation(line: 1619, column: 18, scope: !5411)
!5608 = !DILocation(line: 1620, column: 13, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5411, file: !2844, line: 1620, column: 8)
!5610 = !DILocation(line: 1620, column: 8, scope: !5411)
!5611 = !DILocation(line: 1622, column: 36, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5609, file: !2844, line: 1620, column: 18)
!5613 = !DILocation(line: 1622, column: 17, scope: !5612)
!5614 = !DILocation(line: 1623, column: 4, scope: !5612)
!5615 = !DILocation(line: 1632, column: 29, scope: !5411)
!5616 = !DILocation(line: 1632, column: 10, scope: !5411)
!5617 = !DILocation(line: 1632, column: 4, scope: !5411)
!5618 = !DILocation(line: 1407, column: 8, scope: !5344)
!5619 = !DILocation(line: 0, scope: !5411)
!5620 = !DILocation(line: 1634, column: 3, scope: !5411)
!5621 = !DILocation(line: 1640, column: 18, scope: !5416)
!5622 = !DILocation(line: 1640, column: 8, scope: !5411)
!5623 = !DILocation(line: 1729, column: 13, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5344, file: !2844, line: 1729, column: 7)
!5625 = !DILocation(line: 1641, column: 22, scope: !5415)
!5626 = !DILocation(line: 0, scope: !5415)
!5627 = !DILocation(line: 1646, column: 21, scope: !5415)
!5628 = !DILocation(line: 1649, column: 13, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5415, file: !2844, line: 1649, column: 9)
!5630 = !DILocation(line: 1649, column: 9, scope: !5415)
!5631 = !DILocation(line: 1650, column: 35, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5629, file: !2844, line: 1649, column: 34)
!5633 = !DILocation(line: 1650, column: 23, scope: !5632)
!5634 = !DILocation(line: 1651, column: 5, scope: !5632)
!5635 = !DILocation(line: 1660, column: 15, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5411, file: !2844, line: 1660, column: 8)
!5637 = !DILocation(line: 1660, column: 19, scope: !5636)
!5638 = !DILocation(line: 1660, column: 8, scope: !5411)
!5639 = !DILocation(line: 1661, column: 23, scope: !5640)
!5640 = distinct !DILexicalBlock(scope: !5636, file: !2844, line: 1660, column: 28)
!5641 = !DILocation(line: 1661, column: 11, scope: !5640)
!5642 = !DILocation(line: 1665, column: 22, scope: !5640)
!5643 = !DILocation(line: 1666, column: 21, scope: !5640)
!5644 = !DILocation(line: 1668, column: 5, scope: !5640)
!5645 = !DILocation(line: 1677, column: 30, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5647, file: !2844, line: 1676, column: 49)
!5647 = distinct !DILexicalBlock(scope: !5411, file: !2844, line: 1676, column: 8)
!5648 = !DILocation(line: 1677, column: 5, scope: !5646)
!5649 = !DILocation(line: 1680, column: 4, scope: !5411)
!5650 = !DILocation(line: 0, scope: !5592)
!5651 = !DILocation(line: 1597, column: 14, scope: !5413)
!5652 = !DILocation(line: 1699, column: 11, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5344, file: !2844, line: 1699, column: 7)
!5654 = !DILocation(line: 1699, column: 7, scope: !5344)
!5655 = !DILocation(line: 1725, column: 7, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5344, file: !2844, line: 1725, column: 7)
!5657 = !DILocation(line: 1725, column: 12, scope: !5656)
!5658 = !DILocation(line: 1747, column: 13, scope: !5423)
!5659 = !DILocation(line: 1747, column: 7, scope: !5344)
!5660 = !DILocation(line: 1722, column: 24, scope: !5344)
!5661 = !DILocation(line: 1725, column: 7, scope: !5344)
!5662 = !DILocation(line: 1729, column: 7, scope: !5344)
!5663 = !DILocation(line: 1736, column: 13, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5344, file: !2844, line: 1736, column: 7)
!5665 = !DILocation(line: 1735, column: 19, scope: !5344)
!5666 = !DILocation(line: 1736, column: 7, scope: !5344)
!5667 = !DILocation(line: 1748, column: 10, scope: !5422)
!5668 = !DILocation(line: 1750, column: 15, scope: !5421)
!5669 = !DILocation(line: 1750, column: 8, scope: !5422)
!5670 = !DILocation(line: 0, scope: !5420)
!5671 = !DILocation(line: 1756, column: 15, scope: !5429)
!5672 = !DILocation(line: 1756, column: 9, scope: !5420)
!5673 = !DILocation(line: 1758, column: 7, scope: !5425)
!5674 = !DILocation(line: 0, scope: !5425)
!5675 = !DILocation(line: 1758, column: 7, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5425, file: !2844, line: 1758, column: 7)
!5677 = !DILocation(line: 1764, column: 5, scope: !5420)
!5678 = !DILocation(line: 0, scope: !5422)
!5679 = !DILocation(line: 1764, column: 20, scope: !5420)
!5680 = !DILocation(line: 1764, column: 17, scope: !5420)
!5681 = !DILocation(line: 1765, column: 6, scope: !5431)
!5682 = !DILocation(line: 0, scope: !5431)
!5683 = !DILocation(line: 1765, column: 6, scope: !5684)
!5684 = distinct !DILexicalBlock(scope: !5431, file: !2844, line: 1765, column: 6)
!5685 = distinct !{!5685, !5677, !5686}
!5686 = !DILocation(line: 1766, column: 5, scope: !5420)
!5687 = !DILocation(line: 1773, column: 12, scope: !5436)
!5688 = !DILocation(line: 1773, column: 7, scope: !5344)
!5689 = !DILocation(line: 1773, column: 7, scope: !5436)
!5690 = !DILocation(line: 1774, column: 4, scope: !5434)
!5691 = !DILocation(line: 0, scope: !5434)
!5692 = !DILocation(line: 1774, column: 4, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5434, file: !2844, line: 1774, column: 4)
!5694 = !DILocation(line: 1818, column: 8, scope: !5440)
!5695 = !DILocation(line: 1818, column: 27, scope: !5440)
!5696 = !DILocation(line: 1818, column: 25, scope: !5440)
!5697 = !DILocation(line: 1818, column: 8, scope: !5441)
!5698 = !DILocation(line: 1819, column: 5, scope: !5438)
!5699 = !DILocation(line: 0, scope: !5438)
!5700 = !DILocation(line: 1819, column: 5, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5438, file: !2844, line: 1819, column: 5)
!5702 = !DILocation(line: 1822, column: 14, scope: !5446)
!5703 = !DILocation(line: 1822, column: 8, scope: !5441)
!5704 = !DILocation(line: 1823, column: 5, scope: !5444)
!5705 = !DILocation(line: 0, scope: !5444)
!5706 = !DILocation(line: 1823, column: 5, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5444, file: !2844, line: 1823, column: 5)
!5708 = !DILocation(line: 1826, column: 20, scope: !5441)
!5709 = !DILocation(line: 1827, column: 4, scope: !5441)
!5710 = !DILocation(line: 0, scope: !5441)
!5711 = !DILocation(line: 1827, column: 21, scope: !5441)
!5712 = !DILocation(line: 1827, column: 18, scope: !5441)
!5713 = !DILocation(line: 1828, column: 5, scope: !5448)
!5714 = !DILocation(line: 0, scope: !5448)
!5715 = !DILocation(line: 1828, column: 5, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5448, file: !2844, line: 1828, column: 5)
!5717 = distinct !{!5717, !5709, !5718}
!5718 = !DILocation(line: 1829, column: 4, scope: !5441)
!5719 = !DILocation(line: 1831, column: 4, scope: !5451)
!5720 = !DILocation(line: 0, scope: !5451)
!5721 = !DILocation(line: 1831, column: 4, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5451, file: !2844, line: 1831, column: 4)
!5723 = !DILocation(line: 1835, column: 16, scope: !5344)
!5724 = !DILocation(line: 1835, column: 3, scope: !5344)
!5725 = !DILocation(line: 1836, column: 4, scope: !5453)
!5726 = !DILocation(line: 0, scope: !5453)
!5727 = !DILocation(line: 1836, column: 4, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5453, file: !2844, line: 1836, column: 4)
!5729 = !DILocation(line: 1837, column: 4, scope: !5454)
!5730 = distinct !{!5730, !5724, !5731}
!5731 = !DILocation(line: 1838, column: 3, scope: !5344)
!5732 = !DILocation(line: 1844, column: 1, scope: !5317)
!5733 = distinct !DISubprogram(name: "extract_conversion", scope: !2844, file: !2844, line: 642, type: !5734, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2840, retainedNodes: !5736)
!5734 = !DISubroutineType(types: !5735)
!5735 = !{!105, !5390, !105}
!5736 = !{!5737, !5738}
!5737 = !DILocalVariable(name: "conv", arg: 1, scope: !5733, file: !2844, line: 642, type: !5390)
!5738 = !DILocalVariable(name: "sp", arg: 2, scope: !5733, file: !2844, line: 643, type: !105)
!5739 = !DILocation(line: 0, scope: !5733)
!5740 = !DILocation(line: 645, column: 10, scope: !5733)
!5741 = !DILocation(line: 653, column: 2, scope: !5733)
!5742 = !DILocation(line: 654, column: 6, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5733, file: !2844, line: 654, column: 6)
!5744 = !DILocation(line: 654, column: 10, scope: !5743)
!5745 = !DILocation(line: 654, column: 6, scope: !5733)
!5746 = !DILocation(line: 655, column: 24, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5743, file: !2844, line: 654, column: 18)
!5748 = !DILocation(line: 655, column: 19, scope: !5747)
!5749 = !DILocation(line: 656, column: 3, scope: !5747)
!5750 = !DILocation(line: 659, column: 7, scope: !5733)
!5751 = !DILocation(line: 660, column: 7, scope: !5733)
!5752 = !DILocation(line: 661, column: 7, scope: !5733)
!5753 = !DILocation(line: 662, column: 7, scope: !5733)
!5754 = !DILocation(line: 663, column: 7, scope: !5733)
!5755 = !DILocation(line: 665, column: 2, scope: !5733)
!5756 = !DILocation(line: 666, column: 1, scope: !5733)
!5757 = distinct !DISubprogram(name: "outs", scope: !2844, file: !2844, line: 1319, type: !5758, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2840, retainedNodes: !5760)
!5758 = !DISubroutineType(types: !5759)
!5759 = !{!108, !4509, !104, !105, !105}
!5760 = !{!5761, !5762, !5763, !5764, !5765, !5766}
!5761 = !DILocalVariable(name: "out", arg: 1, scope: !5757, file: !2844, line: 1319, type: !4509)
!5762 = !DILocalVariable(name: "ctx", arg: 2, scope: !5757, file: !2844, line: 1320, type: !104)
!5763 = !DILocalVariable(name: "sp", arg: 3, scope: !5757, file: !2844, line: 1321, type: !105)
!5764 = !DILocalVariable(name: "ep", arg: 4, scope: !5757, file: !2844, line: 1322, type: !105)
!5765 = !DILocalVariable(name: "count", scope: !5757, file: !2844, line: 1324, type: !439)
!5766 = !DILocalVariable(name: "rc", scope: !5767, file: !2844, line: 1327, type: !108)
!5767 = distinct !DILexicalBlock(scope: !5757, file: !2844, line: 1326, column: 45)
!5768 = !DILocation(line: 0, scope: !5757)
!5769 = !DILocation(line: 1326, column: 2, scope: !5757)
!5770 = !DILocation(line: 1324, column: 9, scope: !5757)
!5771 = !DILocation(line: 1326, column: 13, scope: !5757)
!5772 = !DILocation(line: 1326, column: 19, scope: !5757)
!5773 = !DILocation(line: 1327, column: 21, scope: !5767)
!5774 = !DILocation(line: 1326, column: 36, scope: !5757)
!5775 = !DILocation(line: 1326, column: 39, scope: !5757)
!5776 = !DILocation(line: 1327, column: 24, scope: !5767)
!5777 = !DILocation(line: 1327, column: 16, scope: !5767)
!5778 = !DILocation(line: 1327, column: 12, scope: !5767)
!5779 = !DILocation(line: 0, scope: !5767)
!5780 = !DILocation(line: 1329, column: 10, scope: !5781)
!5781 = distinct !DILexicalBlock(scope: !5767, file: !2844, line: 1329, column: 7)
!5782 = !DILocation(line: 1329, column: 7, scope: !5767)
!5783 = distinct !{!5783, !5769, !5784}
!5784 = !DILocation(line: 1333, column: 2, scope: !5757)
!5785 = !DILocation(line: 1336, column: 1, scope: !5757)
!5786 = distinct !DISubprogram(name: "encode_uint", scope: !2844, file: !2844, line: 788, type: !5787, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2840, retainedNodes: !5789)
!5787 = !DISubroutineType(types: !5788)
!5788 = !{!443, !2866, !5390, !443, !105}
!5789 = !{!5790, !5791, !5792, !5793, !5794, !5795, !5797, !5798}
!5790 = !DILocalVariable(name: "value", arg: 1, scope: !5786, file: !2844, line: 788, type: !2866)
!5791 = !DILocalVariable(name: "conv", arg: 2, scope: !5786, file: !2844, line: 789, type: !5390)
!5792 = !DILocalVariable(name: "bps", arg: 3, scope: !5786, file: !2844, line: 790, type: !443)
!5793 = !DILocalVariable(name: "bpe", arg: 4, scope: !5786, file: !2844, line: 791, type: !105)
!5794 = !DILocalVariable(name: "upcase", scope: !5786, file: !2844, line: 793, type: !422)
!5795 = !DILocalVariable(name: "radix", scope: !5786, file: !2844, line: 794, type: !5796)
!5796 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5797 = !DILocalVariable(name: "bp", scope: !5786, file: !2844, line: 795, type: !443)
!5798 = !DILocalVariable(name: "lsv", scope: !5799, file: !2844, line: 798, type: !32)
!5799 = distinct !DILexicalBlock(scope: !5786, file: !2844, line: 797, column: 5)
!5800 = !DILocation(line: 0, scope: !5786)
!5801 = !DILocation(line: 793, column: 35, scope: !5786)
!5802 = !DILocation(line: 793, column: 24, scope: !5786)
!5803 = !DILocation(line: 793, column: 16, scope: !5786)
!5804 = !DILocation(line: 794, column: 29, scope: !5786)
!5805 = !DILocation(line: 795, column: 24, scope: !5786)
!5806 = !DILocation(line: 795, column: 17, scope: !5786)
!5807 = !DILocation(line: 797, column: 2, scope: !5786)
!5808 = !DILocation(line: 802, column: 9, scope: !5799)
!5809 = !DILocation(line: 798, column: 22, scope: !5799)
!5810 = !DILocation(line: 0, scope: !5799)
!5811 = !DILocation(line: 800, column: 16, scope: !5799)
!5812 = !DILocation(line: 800, column: 11, scope: !5799)
!5813 = !DILocation(line: 800, column: 4, scope: !5799)
!5814 = !DILocation(line: 800, column: 9, scope: !5799)
!5815 = !DILocation(line: 803, column: 18, scope: !5786)
!5816 = !DILocation(line: 803, column: 24, scope: !5786)
!5817 = !DILocation(line: 803, column: 2, scope: !5799)
!5818 = distinct !{!5818, !5807, !5819}
!5819 = !DILocation(line: 803, column: 37, scope: !5786)
!5820 = !DILocation(line: 808, column: 12, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5786, file: !2844, line: 808, column: 6)
!5822 = !DILocation(line: 808, column: 6, scope: !5786)
!5823 = !DILocation(line: 809, column: 7, scope: !5824)
!5824 = distinct !DILexicalBlock(scope: !5821, file: !2844, line: 808, column: 23)
!5825 = !DILocation(line: 813, column: 3, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5827, file: !2844, line: 811, column: 27)
!5827 = distinct !DILexicalBlock(scope: !5828, file: !2844, line: 811, column: 14)
!5828 = distinct !DILexicalBlock(scope: !5824, file: !2844, line: 809, column: 7)
!5829 = !DILocation(line: 0, scope: !5828)
!5830 = !DILocation(line: 818, column: 2, scope: !5786)
!5831 = distinct !DISubprogram(name: "store_count", scope: !2844, file: !2844, line: 1280, type: !5832, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2840, retainedNodes: !5836)
!5832 = !DISubroutineType(types: !5833)
!5833 = !{null, !5834, !104, !108}
!5834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5835, size: 32)
!5835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5357)
!5836 = !{!5837, !5838, !5839}
!5837 = !DILocalVariable(name: "conv", arg: 1, scope: !5831, file: !2844, line: 1280, type: !5834)
!5838 = !DILocalVariable(name: "dp", arg: 2, scope: !5831, file: !2844, line: 1281, type: !104)
!5839 = !DILocalVariable(name: "count", arg: 3, scope: !5831, file: !2844, line: 1282, type: !108)
!5840 = !DILocation(line: 0, scope: !5831)
!5841 = !DILocation(line: 1284, column: 38, scope: !5831)
!5842 = !DILocation(line: 1284, column: 2, scope: !5831)
!5843 = !DILocation(line: 1286, column: 4, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5831, file: !2844, line: 1284, column: 50)
!5845 = !DILocation(line: 1286, column: 14, scope: !5844)
!5846 = !DILocation(line: 1287, column: 3, scope: !5844)
!5847 = !DILocation(line: 1289, column: 24, scope: !5844)
!5848 = !DILocation(line: 1289, column: 22, scope: !5844)
!5849 = !DILocation(line: 1290, column: 3, scope: !5844)
!5850 = !DILocation(line: 1292, column: 18, scope: !5844)
!5851 = !DILocation(line: 1292, column: 4, scope: !5844)
!5852 = !DILocation(line: 1292, column: 16, scope: !5844)
!5853 = !DILocation(line: 1293, column: 3, scope: !5844)
!5854 = !DILocation(line: 1295, column: 4, scope: !5844)
!5855 = !DILocation(line: 1295, column: 15, scope: !5844)
!5856 = !DILocation(line: 1296, column: 3, scope: !5844)
!5857 = !DILocation(line: 1298, column: 22, scope: !5844)
!5858 = !DILocation(line: 1298, column: 4, scope: !5844)
!5859 = !DILocation(line: 1298, column: 20, scope: !5844)
!5860 = !DILocation(line: 1299, column: 3, scope: !5844)
!5861 = !DILocation(line: 1301, column: 21, scope: !5844)
!5862 = !DILocation(line: 1301, column: 4, scope: !5844)
!5863 = !DILocation(line: 1301, column: 19, scope: !5844)
!5864 = !DILocation(line: 1302, column: 3, scope: !5844)
!5865 = !DILocation(line: 1304, column: 4, scope: !5844)
!5866 = !DILocation(line: 1304, column: 17, scope: !5844)
!5867 = !DILocation(line: 1305, column: 3, scope: !5844)
!5868 = !DILocation(line: 1307, column: 4, scope: !5844)
!5869 = !DILocation(line: 1307, column: 20, scope: !5844)
!5870 = !DILocation(line: 1308, column: 3, scope: !5844)
!5871 = !DILocation(line: 1316, column: 1, scope: !5831)
!5872 = distinct !DISubprogram(name: "isupper", scope: !5873, file: !5873, line: 16, type: !559, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2840, retainedNodes: !5874)
!5873 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5874 = !{!5875}
!5875 = !DILocalVariable(name: "a", arg: 1, scope: !5872, file: !5873, line: 16, type: !108)
!5876 = !DILocation(line: 0, scope: !5872)
!5877 = !DILocation(line: 18, column: 29, scope: !5872)
!5878 = !DILocation(line: 18, column: 45, scope: !5872)
!5879 = !DILocation(line: 18, column: 2, scope: !5872)
!5880 = distinct !DISubprogram(name: "conversion_radix", scope: !2844, file: !2844, line: 761, type: !5881, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2840, retainedNodes: !5883)
!5881 = !DISubroutineType(types: !5882)
!5882 = !{!439, !107}
!5883 = !{!5884}
!5884 = !DILocalVariable(name: "specifier", arg: 1, scope: !5880, file: !2844, line: 761, type: !107)
!5885 = !DILocation(line: 0, scope: !5880)
!5886 = !DILocation(line: 763, column: 2, scope: !5880)
!5887 = !DILocation(line: 770, column: 3, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5880, file: !2844, line: 763, column: 21)
!5889 = !DILocation(line: 774, column: 3, scope: !5888)
!5890 = !DILocation(line: 0, scope: !5888)
!5891 = !DILocation(line: 776, column: 1, scope: !5880)
!5892 = distinct !DISubprogram(name: "extract_flags", scope: !2844, file: !2844, line: 339, type: !5734, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2840, retainedNodes: !5893)
!5893 = !{!5894, !5895, !5896}
!5894 = !DILocalVariable(name: "conv", arg: 1, scope: !5892, file: !2844, line: 339, type: !5390)
!5895 = !DILocalVariable(name: "sp", arg: 2, scope: !5892, file: !2844, line: 340, type: !105)
!5896 = !DILocalVariable(name: "loop", scope: !5892, file: !2844, line: 342, type: !422)
!5897 = !DILocation(line: 0, scope: !5892)
!5898 = !DILocation(line: 344, column: 2, scope: !5892)
!5899 = !DILocation(line: 345, column: 11, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5892, file: !2844, line: 344, column: 5)
!5901 = !DILocation(line: 345, column: 3, scope: !5900)
!5902 = !DILocation(line: 351, column: 4, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5900, file: !2844, line: 345, column: 16)
!5904 = !DILocation(line: 354, column: 4, scope: !5903)
!5905 = !DILocation(line: 357, column: 4, scope: !5903)
!5906 = !DILocation(line: 360, column: 4, scope: !5903)
!5907 = !DILocation(line: 0, scope: !5903)
!5908 = !DILocation(line: 370, column: 12, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5892, file: !2844, line: 370, column: 6)
!5910 = !DILocation(line: 370, column: 22, scope: !5909)
!5911 = !DILocation(line: 371, column: 19, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5909, file: !2844, line: 370, column: 42)
!5913 = !DILocation(line: 372, column: 2, scope: !5912)
!5914 = !DILocation(line: 376, column: 2, scope: !5892)
!5915 = distinct !DISubprogram(name: "extract_width", scope: !2844, file: !2844, line: 388, type: !5734, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2840, retainedNodes: !5916)
!5916 = !{!5917, !5918, !5919, !5920}
!5917 = !DILocalVariable(name: "conv", arg: 1, scope: !5915, file: !2844, line: 388, type: !5390)
!5918 = !DILocalVariable(name: "sp", arg: 2, scope: !5915, file: !2844, line: 389, type: !105)
!5919 = !DILocalVariable(name: "wp", scope: !5915, file: !2844, line: 398, type: !105)
!5920 = !DILocalVariable(name: "width", scope: !5915, file: !2844, line: 399, type: !439)
!5921 = !DILocation(line: 0, scope: !5915)
!5922 = !DILocation(line: 391, column: 8, scope: !5915)
!5923 = !DILocation(line: 391, column: 22, scope: !5915)
!5924 = !DILocation(line: 393, column: 6, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5915, file: !2844, line: 393, column: 6)
!5926 = !DILocation(line: 393, column: 10, scope: !5925)
!5927 = !DILocation(line: 393, column: 6, scope: !5915)
!5928 = !DILocation(line: 394, column: 20, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5925, file: !2844, line: 393, column: 18)
!5930 = !DILocation(line: 395, column: 10, scope: !5929)
!5931 = !DILocation(line: 395, column: 3, scope: !5929)
!5932 = !DILocation(line: 399, column: 17, scope: !5915)
!5933 = !DILocation(line: 401, column: 6, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5915, file: !2844, line: 401, column: 6)
!5935 = !DILocation(line: 401, column: 9, scope: !5934)
!5936 = !DILocation(line: 401, column: 6, scope: !5915)
!5937 = !DILocation(line: 402, column: 23, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5934, file: !2844, line: 401, column: 16)
!5939 = !DILocation(line: 403, column: 9, scope: !5938)
!5940 = !DILocation(line: 403, column: 21, scope: !5938)
!5941 = !DILocation(line: 405, column: 11, scope: !5938)
!5942 = !DILocation(line: 404, column: 21, scope: !5938)
!5943 = !DILocation(line: 406, column: 2, scope: !5938)
!5944 = !DILocation(line: 409, column: 1, scope: !5915)
!5945 = distinct !DISubprogram(name: "extract_prec", scope: !2844, file: !2844, line: 420, type: !5734, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2840, retainedNodes: !5946)
!5946 = !{!5947, !5948, !5949}
!5947 = !DILocalVariable(name: "conv", arg: 1, scope: !5945, file: !2844, line: 420, type: !5390)
!5948 = !DILocalVariable(name: "sp", arg: 2, scope: !5945, file: !2844, line: 421, type: !105)
!5949 = !DILocalVariable(name: "prec", scope: !5945, file: !2844, line: 435, type: !439)
!5950 = !DILocation(line: 0, scope: !5945)
!5951 = !DILocation(line: 423, column: 24, scope: !5945)
!5952 = !DILocation(line: 423, column: 28, scope: !5945)
!5953 = !DILocation(line: 423, column: 8, scope: !5945)
!5954 = !DILocation(line: 423, column: 21, scope: !5945)
!5955 = !DILocation(line: 425, column: 6, scope: !5945)
!5956 = !DILocation(line: 428, column: 2, scope: !5945)
!5957 = !DILocation(line: 430, column: 6, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5945, file: !2844, line: 430, column: 6)
!5959 = !DILocation(line: 430, column: 10, scope: !5958)
!5960 = !DILocation(line: 430, column: 6, scope: !5945)
!5961 = !DILocation(line: 431, column: 19, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5958, file: !2844, line: 430, column: 18)
!5963 = !DILocation(line: 432, column: 10, scope: !5962)
!5964 = !DILocation(line: 432, column: 3, scope: !5962)
!5965 = !DILocation(line: 435, column: 16, scope: !5945)
!5966 = !DILocation(line: 437, column: 8, scope: !5945)
!5967 = !DILocation(line: 437, column: 19, scope: !5945)
!5968 = !DILocation(line: 439, column: 10, scope: !5945)
!5969 = !DILocation(line: 438, column: 20, scope: !5945)
!5970 = !DILocation(line: 441, column: 9, scope: !5945)
!5971 = !DILocation(line: 442, column: 1, scope: !5945)
!5972 = distinct !DISubprogram(name: "extract_length", scope: !2844, file: !2844, line: 453, type: !5734, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2840, retainedNodes: !5973)
!5973 = !{!5974, !5975}
!5974 = !DILocalVariable(name: "conv", arg: 1, scope: !5972, file: !2844, line: 453, type: !5390)
!5975 = !DILocalVariable(name: "sp", arg: 2, scope: !5972, file: !2844, line: 454, type: !105)
!5976 = !DILocation(line: 0, scope: !5972)
!5977 = !DILocation(line: 456, column: 10, scope: !5972)
!5978 = !DILocation(line: 456, column: 2, scope: !5972)
!5979 = !DILocation(line: 458, column: 8, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5981, file: !2844, line: 458, column: 7)
!5981 = distinct !DILexicalBlock(scope: !5972, file: !2844, line: 456, column: 15)
!5982 = !DILocation(line: 458, column: 7, scope: !5980)
!5983 = !DILocation(line: 458, column: 13, scope: !5980)
!5984 = !DILocation(line: 0, scope: !5980)
!5985 = !DILocation(line: 458, column: 7, scope: !5981)
!5986 = !DILocation(line: 459, column: 21, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5980, file: !2844, line: 458, column: 21)
!5988 = !DILocation(line: 460, column: 4, scope: !5987)
!5989 = !DILocation(line: 461, column: 3, scope: !5987)
!5990 = !DILocation(line: 462, column: 21, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5980, file: !2844, line: 461, column: 10)
!5992 = !DILocation(line: 466, column: 8, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5981, file: !2844, line: 466, column: 7)
!5994 = !DILocation(line: 466, column: 7, scope: !5993)
!5995 = !DILocation(line: 466, column: 13, scope: !5993)
!5996 = !DILocation(line: 0, scope: !5993)
!5997 = !DILocation(line: 466, column: 7, scope: !5981)
!5998 = !DILocation(line: 467, column: 21, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5993, file: !2844, line: 466, column: 21)
!6000 = !DILocation(line: 468, column: 4, scope: !5999)
!6001 = !DILocation(line: 469, column: 3, scope: !5999)
!6002 = !DILocation(line: 470, column: 21, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !5993, file: !2844, line: 469, column: 10)
!6004 = !DILocation(line: 474, column: 9, scope: !5981)
!6005 = !DILocation(line: 474, column: 20, scope: !5981)
!6006 = !DILocation(line: 475, column: 3, scope: !5981)
!6007 = !DILocation(line: 476, column: 3, scope: !5981)
!6008 = !DILocation(line: 478, column: 9, scope: !5981)
!6009 = !DILocation(line: 478, column: 20, scope: !5981)
!6010 = !DILocation(line: 479, column: 3, scope: !5981)
!6011 = !DILocation(line: 480, column: 3, scope: !5981)
!6012 = !DILocation(line: 482, column: 9, scope: !5981)
!6013 = !DILocation(line: 482, column: 20, scope: !5981)
!6014 = !DILocation(line: 483, column: 3, scope: !5981)
!6015 = !DILocation(line: 484, column: 3, scope: !5981)
!6016 = !DILocation(line: 486, column: 9, scope: !5981)
!6017 = !DILocation(line: 486, column: 20, scope: !5981)
!6018 = !DILocation(line: 487, column: 3, scope: !5981)
!6019 = !DILocation(line: 492, column: 21, scope: !5981)
!6020 = !DILocation(line: 493, column: 3, scope: !5981)
!6021 = !DILocation(line: 495, column: 9, scope: !5981)
!6022 = !DILocation(line: 495, column: 20, scope: !5981)
!6023 = !DILocation(line: 496, column: 3, scope: !5981)
!6024 = !DILocation(line: 498, column: 2, scope: !5972)
!6025 = distinct !DISubprogram(name: "extract_specifier", scope: !2844, file: !2844, line: 513, type: !5734, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2840, retainedNodes: !6026)
!6026 = !{!6027, !6028, !6029, !6030}
!6027 = !DILocalVariable(name: "conv", arg: 1, scope: !6025, file: !2844, line: 513, type: !5390)
!6028 = !DILocalVariable(name: "sp", arg: 2, scope: !6025, file: !2844, line: 514, type: !105)
!6029 = !DILocalVariable(name: "unsupported", scope: !6025, file: !2844, line: 516, type: !422)
!6030 = !DILabel(scope: !6031, name: "int_conv", file: !2844, line: 526)
!6031 = distinct !DILexicalBlock(scope: !6025, file: !2844, line: 520, column: 27)
!6032 = !DILocation(line: 0, scope: !6025)
!6033 = !DILocation(line: 518, column: 20, scope: !6025)
!6034 = !DILocation(line: 518, column: 8, scope: !6025)
!6035 = !DILocation(line: 518, column: 18, scope: !6025)
!6036 = !DILocation(line: 520, column: 2, scope: !6025)
!6037 = !DILocation(line: 525, column: 3, scope: !6031)
!6038 = !DILocation(line: 0, scope: !6031)
!6039 = !DILocation(line: 526, column: 1, scope: !6031)
!6040 = !DILocation(line: 528, column: 24, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !6031, file: !2844, line: 528, column: 7)
!6042 = !DILocation(line: 528, column: 7, scope: !6031)
!6043 = !DILocation(line: 535, column: 23, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6031, file: !2844, line: 535, column: 7)
!6045 = !DILocation(line: 535, column: 7, scope: !6031)
!6046 = !DILocation(line: 536, column: 36, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6044, file: !2844, line: 535, column: 31)
!6048 = !DILocation(line: 537, column: 3, scope: !6047)
!6049 = !DILocation(line: 570, column: 9, scope: !6031)
!6050 = !DILocation(line: 570, column: 23, scope: !6031)
!6051 = !DILocation(line: 575, column: 4, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6053, file: !2844, line: 573, column: 48)
!6053 = distinct !DILexicalBlock(scope: !6031, file: !2844, line: 573, column: 7)
!6054 = !DILocation(line: 603, column: 9, scope: !6031)
!6055 = !DILocation(line: 603, column: 23, scope: !6031)
!6056 = !DILocation(line: 605, column: 24, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6031, file: !2844, line: 605, column: 7)
!6058 = !DILocation(line: 605, column: 7, scope: !6031)
!6059 = !DILocation(line: 612, column: 9, scope: !6031)
!6060 = !DILocation(line: 612, column: 23, scope: !6031)
!6061 = !DILocation(line: 619, column: 24, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6031, file: !2844, line: 619, column: 7)
!6063 = !DILocation(line: 619, column: 7, scope: !6031)
!6064 = !DILocation(line: 625, column: 9, scope: !6031)
!6065 = !DILocation(line: 625, column: 17, scope: !6031)
!6066 = !DILocation(line: 626, column: 3, scope: !6031)
!6067 = !DILocation(line: 629, column: 20, scope: !6025)
!6068 = !DILocation(line: 629, column: 8, scope: !6025)
!6069 = !DILocation(line: 518, column: 23, scope: !6025)
!6070 = !DILocation(line: 631, column: 2, scope: !6025)
!6071 = distinct !DISubprogram(name: "extract_decimal", scope: !2844, file: !2844, line: 318, type: !6072, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2840, retainedNodes: !6074)
!6072 = !DISubroutineType(types: !6073)
!6073 = !{!439, !539}
!6074 = !{!6075, !6076, !6077}
!6075 = !DILocalVariable(name: "str", arg: 1, scope: !6071, file: !2844, line: 318, type: !539)
!6076 = !DILocalVariable(name: "sp", scope: !6071, file: !2844, line: 320, type: !105)
!6077 = !DILocalVariable(name: "val", scope: !6071, file: !2844, line: 321, type: !439)
!6078 = !DILocation(line: 0, scope: !6071)
!6079 = !DILocation(line: 320, column: 19, scope: !6071)
!6080 = !DILocation(line: 323, column: 37, scope: !6071)
!6081 = !DILocation(line: 323, column: 17, scope: !6071)
!6082 = !DILocation(line: 323, column: 9, scope: !6071)
!6083 = !DILocation(line: 323, column: 2, scope: !6071)
!6084 = !DILocation(line: 324, column: 13, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6071, file: !2844, line: 323, column: 43)
!6086 = !DILocation(line: 324, column: 24, scope: !6085)
!6087 = !DILocation(line: 324, column: 19, scope: !6085)
!6088 = !DILocation(line: 324, column: 27, scope: !6085)
!6089 = distinct !{!6089, !6083, !6090}
!6090 = !DILocation(line: 325, column: 2, scope: !6071)
!6091 = !DILocation(line: 326, column: 7, scope: !6071)
!6092 = !DILocation(line: 327, column: 2, scope: !6071)
!6093 = distinct !DISubprogram(name: "isdigit", scope: !5873, file: !5873, line: 43, type: !559, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2840, retainedNodes: !6094)
!6094 = !{!6095}
!6095 = !DILocalVariable(name: "a", arg: 1, scope: !6093, file: !5873, line: 43, type: !108)
!6096 = !DILocation(line: 0, scope: !6093)
!6097 = !DILocation(line: 45, column: 29, scope: !6093)
!6098 = !DILocation(line: 45, column: 45, scope: !6093)
!6099 = !DILocation(line: 45, column: 2, scope: !6093)
!6100 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6101, file: !6101, line: 9, type: !3413, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !437)
!6101 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!6102 = !DILocation(line: 11, column: 1, scope: !6100)
!6103 = !{i64 2147565070, i64 2147565113, i64 2147565153}
!6104 = !DILocation(line: 12, column: 1, scope: !6100)
!6105 = !{i64 2147569297, i64 2147569340, i64 2147569380}
!6106 = !DILocation(line: 13, column: 1, scope: !6100)
!6107 = !{i64 2147569506, i64 2147569549, i64 2147569589}
!6108 = !DILocation(line: 14, column: 1, scope: !6100)
!6109 = !{i64 2147569675, i64 2147569718, i64 2147569758}
!6110 = !DILocation(line: 15, column: 1, scope: !6100)
!6111 = !{i64 2147569838, i64 2147569881, i64 2147569921}
!6112 = !DILocation(line: 16, column: 1, scope: !6100)
!6113 = !{i64 2147570022, i64 2147570065, i64 2147570105}
!6114 = !DILocation(line: 17, column: 1, scope: !6100)
!6115 = !{i64 2147570201, i64 2147570244, i64 2147570284}
!6116 = !DILocation(line: 18, column: 1, scope: !6100)
!6117 = !{i64 2147570444, i64 2147570487, i64 2147570527}
!6118 = !DILocation(line: 19, column: 1, scope: !6100)
!6119 = !{i64 2147570679, i64 2147570722, i64 2147570762}
!6120 = !DILocation(line: 20, column: 1, scope: !6100)
!6121 = !{i64 2147570866, i64 2147570909, i64 2147570949}
!6122 = !DILocation(line: 21, column: 1, scope: !6100)
!6123 = !{i64 2147571082, i64 2147571125, i64 2147571165}
!6124 = !DILocation(line: 22, column: 1, scope: !6100)
!6125 = !{i64 2147571285, i64 2147571328, i64 2147571368}
!6126 = !DILocation(line: 23, column: 1, scope: !6100)
!6127 = !{i64 2147571488, i64 2147571531, i64 2147571571}
!6128 = !DILocation(line: 24, column: 1, scope: !6100)
!6129 = !{i64 2147571663, i64 2147571706, i64 2147571746}
!6130 = !DILocation(line: 25, column: 1, scope: !6100)
!6131 = !{i64 2147571871, i64 2147571914, i64 2147571954}
!6132 = !DILocation(line: 26, column: 1, scope: !6100)
!6133 = !{i64 2147572075, i64 2147572118, i64 2147572158}
!6134 = !DILocation(line: 27, column: 1, scope: !6100)
!6135 = !{i64 2147572268, i64 2147572311, i64 2147572351}
!6136 = !DILocation(line: 28, column: 1, scope: !6100)
!6137 = !{i64 2147572470, i64 2147572513, i64 2147572553}
!6138 = !DILocation(line: 29, column: 1, scope: !6100)
!6139 = !{i64 2147572669, i64 2147572712, i64 2147572752}
!6140 = !DILocation(line: 30, column: 1, scope: !6100)
!6141 = !{i64 2147572896, i64 2147572939, i64 2147572979}
!6142 = !DILocation(line: 31, column: 1, scope: !6100)
!6143 = !{i64 2147573098, i64 2147573141, i64 2147573181}
!6144 = !DILocation(line: 32, column: 1, scope: !6100)
!6145 = !{i64 2147573313, i64 2147573356, i64 2147573396}
!6146 = !DILocation(line: 33, column: 1, scope: !6100)
!6147 = !{i64 2147573485, i64 2147573528, i64 2147573568}
!6148 = !DILocation(line: 34, column: 1, scope: !6100)
!6149 = !{i64 2147573687, i64 2147573730, i64 2147573770}
!6150 = !DILocation(line: 35, column: 1, scope: !6100)
!6151 = !{i64 2147573913, i64 2147573956, i64 2147573996}
!6152 = !DILocation(line: 36, column: 1, scope: !6100)
!6153 = !{i64 2147574112, i64 2147574155, i64 2147574195}
!6154 = !DILocation(line: 37, column: 1, scope: !6100)
!6155 = !{i64 2147574287, i64 2147574330, i64 2147574370}
!6156 = !DILocation(line: 38, column: 1, scope: !6100)
!6157 = !{i64 2147574555, i64 2147574598, i64 2147574638}
!6158 = !DILocation(line: 39, column: 1, scope: !6100)
!6159 = !{i64 2147574808, i64 2147574851, i64 2147574891}
!6160 = !DILocation(line: 40, column: 1, scope: !6100)
!6161 = !{i64 2147575049, i64 2147575092, i64 2147575132}
!6162 = !DILocation(line: 41, column: 1, scope: !6100)
!6163 = !{i64 2147575284, i64 2147575327, i64 2147575367}
!6164 = !DILocation(line: 42, column: 1, scope: !6100)
!6165 = !{i64 2147575516, i64 2147575559, i64 2147575599}
!6166 = !DILocation(line: 43, column: 1, scope: !6100)
!6167 = !{i64 2147575742, i64 2147575785, i64 2147575825}
!6168 = !DILocation(line: 44, column: 1, scope: !6100)
!6169 = !{i64 2147575980, i64 2147576023, i64 2147576063}
!6170 = !DILocation(line: 45, column: 1, scope: !6100)
!6171 = !{i64 2147576206, i64 2147576249, i64 2147576289}
!6172 = !DILocation(line: 46, column: 1, scope: !6100)
!6173 = !{i64 2147576441, i64 2147576484, i64 2147576524}
!6174 = !DILocation(line: 47, column: 1, scope: !6100)
!6175 = !{i64 2147576676, i64 2147576719, i64 2147576759}
!6176 = !DILocation(line: 48, column: 1, scope: !6100)
!6177 = !{i64 2147576914, i64 2147576957, i64 2147576997}
!6178 = !DILocation(line: 49, column: 1, scope: !6100)
!6179 = !{i64 2147577188, i64 2147577231, i64 2147577271}
!6180 = !DILocation(line: 50, column: 1, scope: !6100)
!6181 = !{i64 2147577426, i64 2147577469, i64 2147577509}
!6182 = !DILocation(line: 51, column: 1, scope: !6100)
!6183 = !{i64 2147577679, i64 2147577722, i64 2147577762}
!6184 = !DILocation(line: 52, column: 1, scope: !6100)
!6185 = !{i64 2147577923, i64 2147577966, i64 2147578006}
!6186 = !DILocation(line: 53, column: 1, scope: !6100)
!6187 = !{i64 2147582234, i64 2147582277, i64 2147582317}
!6188 = !DILocation(line: 54, column: 1, scope: !6100)
!6189 = !{i64 2147582475, i64 2147582518, i64 2147582558}
!6190 = !DILocation(line: 55, column: 1, scope: !6100)
!6191 = !{i64 2147582722, i64 2147582765, i64 2147582805}
!6192 = !DILocation(line: 56, column: 1, scope: !6100)
!6193 = !{i64 2147582957, i64 2147583000, i64 2147583040}
!6194 = !DILocation(line: 57, column: 1, scope: !6100)
!6195 = !{i64 2147583192, i64 2147583235, i64 2147583275}
!6196 = !DILocation(line: 58, column: 1, scope: !6100)
!6197 = !{i64 2147583427, i64 2147583470, i64 2147583510}
!6198 = !DILocation(line: 59, column: 1, scope: !6100)
!6199 = !{i64 2147583665, i64 2147583708, i64 2147583748}
!6200 = !DILocation(line: 60, column: 1, scope: !6100)
!6201 = !{i64 2147583906, i64 2147583949, i64 2147583989}
!6202 = !DILocation(line: 61, column: 1, scope: !6100)
!6203 = !{i64 2147584186, i64 2147584229, i64 2147584269}
!6204 = !DILocation(line: 62, column: 1, scope: !6100)
!6205 = !{i64 2147584445, i64 2147584488, i64 2147584528}
!6206 = !DILocation(line: 63, column: 1, scope: !6100)
!6207 = !{i64 2147584683, i64 2147584726, i64 2147584766}
!6208 = !DILocation(line: 64, column: 1, scope: !6100)
!6209 = !{i64 2147584912, i64 2147584955, i64 2147584995}
!6210 = !DILocation(line: 65, column: 1, scope: !6100)
!6211 = !{i64 2147585171, i64 2147585214, i64 2147585254}
!6212 = !DILocation(line: 66, column: 1, scope: !6100)
!6213 = !{i64 2147585400, i64 2147585443, i64 2147585483}
!6214 = !DILocation(line: 67, column: 1, scope: !6100)
!6215 = !{i64 2147585608, i64 2147585651, i64 2147585691}
!6216 = !DILocation(line: 68, column: 1, scope: !6100)
!6217 = !{i64 2147585819, i64 2147585862, i64 2147585902}
!6218 = !DILocation(line: 69, column: 1, scope: !6100)
!6219 = !{i64 2147586054, i64 2147586097, i64 2147586137}
!6220 = !DILocation(line: 70, column: 1, scope: !6100)
!6221 = !{i64 2147586283, i64 2147586326, i64 2147586366}
!6222 = !DILocation(line: 71, column: 1, scope: !6100)
!6223 = !{i64 2147586500, i64 2147586543, i64 2147586583}
!6224 = !DILocation(line: 72, column: 1, scope: !6100)
!6225 = !{i64 2147586729, i64 2147586772, i64 2147586812}
!6226 = !DILocation(line: 73, column: 1, scope: !6100)
!6227 = !{i64 2147586967, i64 2147587010, i64 2147587050}
!6228 = !DILocation(line: 74, column: 1, scope: !6100)
!6229 = !{i64 2147587199, i64 2147587242, i64 2147587282}
!6230 = !DILocation(line: 75, column: 1, scope: !6100)
!6231 = !{i64 2147587425, i64 2147587468, i64 2147587508}
!6232 = !DILocation(line: 76, column: 1, scope: !6100)
!6233 = !{i64 2147587642, i64 2147587685, i64 2147587725}
!6234 = !DILocation(line: 77, column: 1, scope: !6100)
!6235 = !{i64 2147587874, i64 2147587917, i64 2147587957}
!6236 = !DILocation(line: 78, column: 1, scope: !6100)
!6237 = !{i64 2147588100, i64 2147588143, i64 2147588183}
!6238 = !DILocation(line: 79, column: 1, scope: !6100)
!6239 = !{i64 2147588314, i64 2147588357, i64 2147588397}
!6240 = !DILocation(line: 80, column: 1, scope: !6100)
!6241 = !{i64 2147588534, i64 2147588577, i64 2147588617}
!6242 = !DILocation(line: 81, column: 1, scope: !6100)
!6243 = !{i64 2147588766, i64 2147588809, i64 2147588849}
!6244 = !DILocation(line: 82, column: 1, scope: !6100)
!6245 = !{i64 2147588974, i64 2147589017, i64 2147589057}
!6246 = !DILocation(line: 83, column: 1, scope: !6100)
!6247 = !{i64 2147589179, i64 2147589222, i64 2147589262}
!6248 = !DILocation(line: 84, column: 1, scope: !6100)
!6249 = !{i64 2147589396, i64 2147589439, i64 2147589479}
!6250 = !DILocation(line: 85, column: 1, scope: !6100)
!6251 = !{i64 2147589610, i64 2147589653, i64 2147589693}
!6252 = !DILocation(line: 86, column: 1, scope: !6100)
!6253 = !{i64 2147589836, i64 2147589879, i64 2147589919}
!6254 = !DILocation(line: 87, column: 1, scope: !6100)
!6255 = !{i64 2147590056, i64 2147590099, i64 2147590139}
!6256 = !DILocation(line: 88, column: 1, scope: !6100)
!6257 = !{i64 2147594322, i64 2147594365, i64 2147594405}
!6258 = !DILocation(line: 89, column: 1, scope: !6100)
!6259 = !{i64 2147594554, i64 2147594597, i64 2147594637}
!6260 = !DILocation(line: 90, column: 1, scope: !6100)
!6261 = !{i64 2147594789, i64 2147594832, i64 2147594872}
!6262 = !DILocation(line: 91, column: 1, scope: !6100)
!6263 = !{i64 2147595039, i64 2147595082, i64 2147595122}
!6264 = !DILocation(line: 92, column: 1, scope: !6100)
!6265 = !{i64 2147595289, i64 2147595332, i64 2147595372}
!6266 = !DILocation(line: 93, column: 1, scope: !6100)
!6267 = !{i64 2147595527, i64 2147595570, i64 2147595610}
!6268 = !DILocation(line: 94, column: 1, scope: !6100)
!6269 = !{i64 2147595738, i64 2147595781, i64 2147595821}
!6270 = !DILocation(line: 95, column: 1, scope: !6100)
!6271 = !{i64 2147595955, i64 2147595998, i64 2147596038}
!6272 = !DILocation(line: 96, column: 1, scope: !6100)
!6273 = !{i64 2147596151, i64 2147596194, i64 2147596234}
!6274 = !DILocation(line: 97, column: 1, scope: !6100)
!6275 = !{i64 2147596353, i64 2147596396, i64 2147596436}
!6276 = !DILocation(line: 98, column: 1, scope: !6100)
!6277 = !{i64 2147596546, i64 2147596589, i64 2147596629}
!6278 = !DILocation(line: 99, column: 1, scope: !6100)
!6279 = !{i64 2147596754, i64 2147596797, i64 2147596837}
!6280 = !DILocation(line: 100, column: 1, scope: !6100)
!6281 = !{i64 2147596950, i64 2147596993, i64 2147597033}
!6282 = !DILocation(line: 101, column: 1, scope: !6100)
!6283 = !{i64 2147597200, i64 2147597243, i64 2147597283}
!6284 = !DILocation(line: 102, column: 1, scope: !6100)
!6285 = !{i64 2147597411, i64 2147597454, i64 2147597494}
!6286 = !DILocation(line: 103, column: 1, scope: !6100)
!6287 = !{i64 2147597610, i64 2147597653, i64 2147597693}
!6288 = !DILocation(line: 104, column: 1, scope: !6100)
!6289 = !{i64 2147597785, i64 2147597828, i64 2147597868}
!6290 = !DILocation(line: 105, column: 1, scope: !6100)
!6291 = !{i64 2147597969, i64 2147598012, i64 2147598052}
!6292 = !DILocation(line: 106, column: 1, scope: !6100)
!6293 = !{i64 2147598171, i64 2147598214, i64 2147598254}
!6294 = !DILocation(line: 107, column: 1, scope: !6100)
!6295 = !{i64 2147598352, i64 2147598395, i64 2147598435}
!6296 = !DILocation(line: 108, column: 1, scope: !6100)
!6297 = !{i64 2147598551, i64 2147598594, i64 2147598634}
!6298 = !DILocation(line: 109, column: 1, scope: !6100)
!6299 = !{i64 2147598756, i64 2147598799, i64 2147598839}
!6300 = !DILocation(line: 110, column: 1, scope: !6100)
!6301 = !{i64 2147598949, i64 2147598992, i64 2147599032}
!6302 = !DILocation(line: 111, column: 1, scope: !6100)
!6303 = !{i64 2147599115, i64 2147599158, i64 2147599198}
!6304 = !DILocation(line: 112, column: 1, scope: !6100)
!6305 = !{i64 2147599299, i64 2147599342, i64 2147599382}
!6306 = !DILocation(line: 113, column: 1, scope: !6100)
!6307 = !{i64 2147599489, i64 2147599532, i64 2147599572}
!6308 = !DILocation(line: 114, column: 1, scope: !6100)
!6309 = !{i64 2147599673, i64 2147599716, i64 2147599756}
!6310 = !DILocation(line: 115, column: 1, scope: !6100)
!6311 = !{i64 2147599887, i64 2147599930, i64 2147599970}
!6312 = !DILocation(line: 116, column: 1, scope: !6100)
!6313 = !{i64 2147600098, i64 2147600141, i64 2147600181}
!6314 = !DILocation(line: 117, column: 1, scope: !6100)
!6315 = !{i64 2147600321, i64 2147600364, i64 2147600404}
!6316 = !DILocation(line: 118, column: 1, scope: !6100)
!6317 = !{i64 2147600505, i64 2147600548, i64 2147600588}
!6318 = !DILocation(line: 119, column: 1, scope: !6100)
!6319 = !{i64 2147600719, i64 2147600762, i64 2147600802}
!6320 = !DILocation(line: 120, column: 1, scope: !6100)
!6321 = !{i64 2147600885, i64 2147600928, i64 2147600968}
!6322 = !DILocation(line: 121, column: 1, scope: !6100)
!6323 = !{i64 2147601066, i64 2147601109, i64 2147601149}
!6324 = !DILocation(line: 122, column: 1, scope: !6100)
!6325 = !{i64 2147601259, i64 2147601302, i64 2147601342}
!6326 = !DILocation(line: 123, column: 1, scope: !6100)
!6327 = !{i64 2147601485, i64 2147601528, i64 2147601568}
!6328 = !DILocation(line: 124, column: 1, scope: !6100)
!6329 = !{i64 2147601699, i64 2147601742, i64 2147601782}
!6330 = !DILocation(line: 125, column: 1, scope: !6100)
!6331 = !{i64 2147601925, i64 2147601968, i64 2147602008}
!6332 = !DILocation(line: 126, column: 1, scope: !6100)
!6333 = !{i64 2147602142, i64 2147602185, i64 2147602225}
!6334 = !DILocation(line: 127, column: 1, scope: !6100)
!6335 = !{i64 2147602419, i64 2147602462, i64 2147602502}
!6336 = !DILocation(line: 128, column: 1, scope: !6100)
!6337 = !{i64 2147602645, i64 2147602688, i64 2147602728}
!6338 = !DILocation(line: 129, column: 1, scope: !6100)
!6339 = !{i64 2147602853, i64 2147602896, i64 2147602936}
!6340 = !DILocation(line: 130, column: 1, scope: !6100)
!6341 = !{i64 2147603049, i64 2147603092, i64 2147603132}
!6342 = !DILocation(line: 131, column: 1, scope: !6100)
!6343 = !{i64 2147607375, i64 2147607418, i64 2147607458}
!6344 = !DILocation(line: 132, column: 1, scope: !6100)
!6345 = !{i64 2147607589, i64 2147607632, i64 2147607672}
!6346 = !DILocation(line: 133, column: 1, scope: !6100)
!6347 = !{i64 2147607764, i64 2147607807, i64 2147607847}
!6348 = !DILocation(line: 134, column: 1, scope: !6100)
!6349 = !{i64 2147608018, i64 2147608061, i64 2147608101}
!6350 = !DILocation(line: 135, column: 1, scope: !6100)
!6351 = !{i64 2147608217, i64 2147608260, i64 2147608300}
!6352 = !DILocation(line: 136, column: 1, scope: !6100)
!6353 = !{i64 2147608459, i64 2147608502, i64 2147608542}
!6354 = !DILocation(line: 137, column: 1, scope: !6100)
!6355 = !{i64 2147608622, i64 2147608665, i64 2147608705}
!6356 = !DILocation(line: 138, column: 1, scope: !6100)
!6357 = !{i64 2147608809, i64 2147608852, i64 2147608892}
!6358 = !DILocation(line: 139, column: 1, scope: !6100)
!6359 = !{i64 2147609017, i64 2147609060, i64 2147609100}
!6360 = !DILocation(line: 140, column: 1, scope: !6100)
!6361 = !{i64 2147609213, i64 2147609256, i64 2147609296}
!6362 = !DILocation(line: 141, column: 1, scope: !6100)
!6363 = !{i64 2147609406, i64 2147609449, i64 2147609489}
!6364 = !DILocation(line: 142, column: 1, scope: !6100)
!6365 = !{i64 2147609589, i64 2147609632, i64 2147609672}
!6366 = !DILocation(line: 143, column: 1, scope: !6100)
!6367 = !{i64 2147609803, i64 2147609846, i64 2147609886}
!6368 = !DILocation(line: 144, column: 1, scope: !6100)
!6369 = !{i64 2147610014, i64 2147610057, i64 2147610097}
!6370 = !DILocation(line: 145, column: 1, scope: !6100)
!6371 = !{i64 2147610234, i64 2147610277, i64 2147610317}
!6372 = !DILocation(line: 146, column: 1, scope: !6100)
!6373 = !{i64 2147610441, i64 2147610484, i64 2147610524}
!6374 = !DILocation(line: 147, column: 1, scope: !6100)
!6375 = !{i64 2147610714, i64 2147610757, i64 2147610797}
!6376 = !DILocation(line: 148, column: 1, scope: !6100)
!6377 = !{i64 2147610962, i64 2147611005, i64 2147611045}
!6378 = !DILocation(line: 149, column: 1, scope: !6100)
!6379 = !{i64 2147611161, i64 2147611204, i64 2147611244}
!6380 = !DILocation(line: 150, column: 1, scope: !6100)
!6381 = !{i64 2147611396, i64 2147611439, i64 2147611479}
!6382 = !DILocation(line: 151, column: 1, scope: !6100)
!6383 = !{i64 2147611646, i64 2147611689, i64 2147611729}
!6384 = !DILocation(line: 152, column: 1, scope: !6100)
!6385 = !{i64 2147611848, i64 2147611891, i64 2147611931}
!6386 = !DILocation(line: 153, column: 1, scope: !6100)
!6387 = !{i64 2147612071, i64 2147612114, i64 2147612154}
!6388 = !DILocation(line: 154, column: 1, scope: !6100)
!6389 = !{i64 2147612285, i64 2147612328, i64 2147612368}
!6390 = !DILocation(line: 155, column: 1, scope: !6100)
!6391 = !{i64 2147612529, i64 2147612572, i64 2147612612}
!6392 = !DILocation(line: 156, column: 1, scope: !6100)
!6393 = !{i64 2147612758, i64 2147612801, i64 2147612841}
!6394 = !DILocation(line: 157, column: 1, scope: !6100)
!6395 = !{i64 2147612987, i64 2147613030, i64 2147613070}
!6396 = !DILocation(line: 158, column: 1, scope: !6100)
!6397 = !{i64 2147613195, i64 2147613238, i64 2147613278}
!6398 = !DILocation(line: 159, column: 1, scope: !6100)
!6399 = !{i64 2147613433, i64 2147613476, i64 2147613516}
!6400 = !DILocation(line: 160, column: 1, scope: !6100)
!6401 = !{i64 2147613659, i64 2147613702, i64 2147613742}
!6402 = !DILocation(line: 161, column: 1, scope: !6100)
!6403 = !{i64 2147613918, i64 2147613961, i64 2147614001}
!6404 = !DILocation(line: 162, column: 1, scope: !6100)
!6405 = !{i64 2147614138, i64 2147614181, i64 2147614221}
!6406 = !DILocation(line: 163, column: 1, scope: !6100)
!6407 = !{i64 2147614370, i64 2147614413, i64 2147614453}
!6408 = !DILocation(line: 164, column: 1, scope: !6100)
!6409 = !{i64 2147614611, i64 2147614654, i64 2147614694}
!6410 = !DILocation(line: 165, column: 1, scope: !6100)
!6411 = !{i64 2147614852, i64 2147614895, i64 2147614935}
!6412 = !DILocation(line: 166, column: 1, scope: !6100)
!6413 = !{i64 2147615075, i64 2147615118, i64 2147615158}
!6414 = !DILocation(line: 167, column: 1, scope: !6100)
!6415 = !{i64 2147615292, i64 2147615335, i64 2147615375}
!6416 = !DILocation(line: 168, column: 1, scope: !6100)
!6417 = !{i64 2147615533, i64 2147615576, i64 2147615616}
!6418 = !DILocation(line: 169, column: 1, scope: !6100)
!6419 = !{i64 2147615720, i64 2147615763, i64 2147615803}
!6420 = !DILocation(line: 170, column: 1, scope: !6100)
!6421 = !{i64 2147615907, i64 2147615950, i64 2147615990}
!6422 = !DILocation(line: 171, column: 1, scope: !6100)
!6423 = !{i64 2147620131, i64 2147620174, i64 2147620214}
!6424 = !DILocation(line: 172, column: 1, scope: !6100)
!6425 = !{i64 2147620336, i64 2147620379, i64 2147620419}
!6426 = !DILocation(line: 173, column: 1, scope: !6100)
!6427 = !{i64 2147620529, i64 2147620572, i64 2147620612}
!6428 = !DILocation(line: 174, column: 1, scope: !6100)
!6429 = !{i64 2147620788, i64 2147620831, i64 2147620871}
!6430 = !DILocation(line: 175, column: 1, scope: !6100)
!6431 = !{i64 2147621011, i64 2147621054, i64 2147621094}
!6432 = !DILocation(line: 176, column: 1, scope: !6100)
!6433 = !{i64 2147621240, i64 2147621283, i64 2147621323}
!6434 = !DILocation(line: 177, column: 1, scope: !6100)
!6435 = !{i64 2147621454, i64 2147621497, i64 2147621537}
!6436 = !DILocation(line: 178, column: 1, scope: !6100)
!6437 = !{i64 2147621656, i64 2147621699, i64 2147621739}
!6438 = !DILocation(line: 179, column: 1, scope: !6100)
!6439 = !{i64 2147621852, i64 2147621895, i64 2147621935}
!6440 = !DILocation(line: 180, column: 1, scope: !6100)
!6441 = !{i64 2147622064, i64 2147622107, i64 2147622147}
!6442 = !DILocation(line: 181, column: 1, scope: !6100)
!6443 = !{i64 2147622285, i64 2147622328, i64 2147622368}
!6444 = !DILocation(line: 182, column: 1, scope: !6100)
!6445 = !{i64 2147622499, i64 2147622542, i64 2147622582}
!6446 = !DILocation(line: 183, column: 1, scope: !6100)
!6447 = !{i64 2147622689, i64 2147622732, i64 2147622772}
!6448 = !DILocation(line: 184, column: 1, scope: !6100)
!6449 = !{i64 2147622888, i64 2147622931, i64 2147622971}
!6450 = !DILocation(line: 185, column: 1, scope: !6100)
!6451 = !{i64 2147623093, i64 2147623136, i64 2147623176}
!6452 = !DILocation(line: 186, column: 1, scope: !6100)
!6453 = !{i64 2147623313, i64 2147623356, i64 2147623396}
!6454 = !DILocation(line: 187, column: 1, scope: !6100)
!6455 = !{i64 2147623514, i64 2147623557, i64 2147623597}
!6456 = !DILocation(line: 188, column: 1, scope: !6100)
!6457 = !{i64 2147623713, i64 2147623756, i64 2147623796}
!6458 = !DILocation(line: 189, column: 1, scope: !6100)
!6459 = !{i64 2147623918, i64 2147623961, i64 2147624001}
!6460 = !DILocation(line: 190, column: 1, scope: !6100)
!6461 = !{i64 2147624087, i64 2147624130, i64 2147624170}
!6462 = !DILocation(line: 191, column: 1, scope: !6100)
!6463 = !{i64 2147624271, i64 2147624314, i64 2147624354}
!6464 = !DILocation(line: 192, column: 1, scope: !6100)
!6465 = !{i64 2147624455, i64 2147624498, i64 2147624538}
!6466 = !DILocation(line: 193, column: 1, scope: !6100)
!6467 = !{i64 2147624642, i64 2147624685, i64 2147624725}
!6468 = !DILocation(line: 194, column: 1, scope: !6100)
!6469 = !{i64 2147624826, i64 2147624869, i64 2147624909}
!6470 = !DILocation(line: 195, column: 1, scope: !6100)
!6471 = !{i64 2147625064, i64 2147625107, i64 2147625147}
!6472 = !DILocation(line: 196, column: 1, scope: !6100)
!6473 = !{i64 2147625294, i64 2147625337, i64 2147625377}
!6474 = !DILocation(line: 197, column: 1, scope: !6100)
!6475 = !{i64 2147625523, i64 2147625566, i64 2147625606}
!6476 = !DILocation(line: 198, column: 1, scope: !6100)
!6477 = !{i64 2147625710, i64 2147625753, i64 2147625793}
!6478 = !DILocation(line: 199, column: 1, scope: !6100)
!6479 = !{i64 2147625906, i64 2147625949, i64 2147625989}
!6480 = !DILocation(line: 200, column: 1, scope: !6100)
!6481 = !{i64 2147626114, i64 2147626157, i64 2147626197}
!6482 = !DILocation(line: 201, column: 1, scope: !6100)
!6483 = !{i64 2147626326, i64 2147626369, i64 2147626409}
!6484 = !DILocation(line: 202, column: 1, scope: !6100)
!6485 = !{i64 2147626525, i64 2147626568, i64 2147626608}
!6486 = !DILocation(line: 203, column: 1, scope: !6100)
!6487 = !{i64 2147626763, i64 2147626806, i64 2147626846}
!6488 = !DILocation(line: 204, column: 1, scope: !6100)
!6489 = !{i64 2147626959, i64 2147627002, i64 2147627042}
!6490 = !DILocation(line: 205, column: 1, scope: !6100)
!6491 = !{i64 2147627161, i64 2147627204, i64 2147627244}
!6492 = !DILocation(line: 206, column: 1, scope: !6100)
!6493 = !{i64 2147627354, i64 2147627397, i64 2147627437}
!6494 = !DILocation(line: 207, column: 1, scope: !6100)
!6495 = !{i64 2147627588, i64 2147627631, i64 2147627671}
!6496 = !DILocation(line: 208, column: 1, scope: !6100)
!6497 = !{i64 2147627751, i64 2147627794, i64 2147627834}
!6498 = !DILocation(line: 209, column: 1, scope: !6100)
!6499 = !{i64 2147627990, i64 2147628033, i64 2147628073}
!6500 = !DILocation(line: 210, column: 1, scope: !6100)
!6501 = !{i64 2147628229, i64 2147628272, i64 2147628312}
!6502 = !DILocation(line: 211, column: 1, scope: !6100)
!6503 = !{i64 2147628465, i64 2147628508, i64 2147628548}
!6504 = !DILocation(line: 212, column: 1, scope: !6100)
!6505 = !{i64 2147628695, i64 2147628738, i64 2147628778}
!6506 = !DILocation(line: 213, column: 1, scope: !6100)
!6507 = !{i64 2147628882, i64 2147628925, i64 2147628965}
!6508 = !DILocation(line: 214, column: 1, scope: !6100)
!6509 = !{i64 2147629081, i64 2147629124, i64 2147629164}
!6510 = !DILocation(line: 215, column: 1, scope: !6100)
!6511 = !{i64 2147633413, i64 2147633456, i64 2147633496}
!6512 = !DILocation(line: 216, column: 1, scope: !6100)
!6513 = !{i64 2147633588, i64 2147633631, i64 2147633671}
!6514 = !DILocation(line: 217, column: 1, scope: !6100)
!6515 = !{i64 2147633822, i64 2147633865, i64 2147633905}
!6516 = !DILocation(line: 218, column: 1, scope: !6100)
!6517 = !{i64 2147634030, i64 2147634073, i64 2147634113}
!6518 = !DILocation(line: 219, column: 1, scope: !6100)
!6519 = !{i64 2147634248, i64 2147634291, i64 2147634331}
!6520 = !DILocation(line: 220, column: 1, scope: !6100)
!6521 = !{i64 2147634438, i64 2147634481, i64 2147634521}
!6522 = !DILocation(line: 221, column: 1, scope: !6100)
!6523 = !{i64 2147634670, i64 2147634713, i64 2147634753}
!6524 = !DILocation(line: 222, column: 1, scope: !6100)
!6525 = !{i64 2147634890, i64 2147634933, i64 2147634973}
!6526 = !DILocation(line: 223, column: 1, scope: !6100)
!6527 = !{i64 2147635086, i64 2147635129, i64 2147635169}
!6528 = !DILocation(line: 224, column: 1, scope: !6100)
!6529 = !{i64 2147635292, i64 2147635335, i64 2147635375}
!6530 = !DILocation(line: 225, column: 1, scope: !6100)
!6531 = !{i64 2147635497, i64 2147635540, i64 2147635580}
!6532 = !DILocation(line: 226, column: 1, scope: !6100)
!6533 = !{i64 2147635723, i64 2147635766, i64 2147635806}
!6534 = !DILocation(line: 227, column: 1, scope: !6100)
!6535 = !{i64 2147635931, i64 2147635974, i64 2147636014}
!6536 = !DILocation(line: 228, column: 1, scope: !6100)
!6537 = !{i64 2147636127, i64 2147636170, i64 2147636210}
!6538 = !DILocation(line: 229, column: 1, scope: !6100)
!6539 = !{i64 2147636359, i64 2147636402, i64 2147636442}
!6540 = !DILocation(line: 230, column: 1, scope: !6100)
!6541 = !{i64 2147636543, i64 2147636586, i64 2147636626}
!6542 = !DILocation(line: 231, column: 1, scope: !6100)
!6543 = !{i64 2147636752, i64 2147636795, i64 2147636835}
!6544 = !DILocation(line: 232, column: 1, scope: !6100)
!6545 = !{i64 2147636960, i64 2147637003, i64 2147637043}
!6546 = !DILocation(line: 233, column: 1, scope: !6100)
!6547 = !{i64 2147637156, i64 2147637199, i64 2147637239}
!6548 = !DILocation(line: 234, column: 1, scope: !6100)
!6549 = !{i64 2147637340, i64 2147637383, i64 2147637423}
!6550 = !DILocation(line: 235, column: 1, scope: !6100)
!6551 = !{i64 2147637566, i64 2147637609, i64 2147637649}
!6552 = !DILocation(line: 236, column: 1, scope: !6100)
!6553 = !{i64 2147637792, i64 2147637835, i64 2147637875}
!6554 = !DILocation(line: 237, column: 1, scope: !6100)
!6555 = !{i64 2147638018, i64 2147638061, i64 2147638101}
!6556 = !DILocation(line: 238, column: 1, scope: !6100)
!6557 = !{i64 2147638244, i64 2147638287, i64 2147638327}
!6558 = !DILocation(line: 239, column: 1, scope: !6100)
!6559 = !{i64 2147638470, i64 2147638513, i64 2147638553}
!6560 = !DILocation(line: 240, column: 1, scope: !6100)
!6561 = !{i64 2147638702, i64 2147638745, i64 2147638785}
!6562 = !DILocation(line: 241, column: 1, scope: !6100)
!6563 = !{i64 2147638940, i64 2147638983, i64 2147639023}
!6564 = !DILocation(line: 242, column: 1, scope: !6100)
!6565 = !{i64 2147639160, i64 2147639203, i64 2147639243}
!6566 = !DILocation(line: 243, column: 1, scope: !6100)
!6567 = !{i64 2147639404, i64 2147639447, i64 2147639487}
!6568 = !DILocation(line: 244, column: 1, scope: !6100)
!6569 = !{i64 2147639645, i64 2147639688, i64 2147639728}
!6570 = !DILocation(line: 245, column: 1, scope: !6100)
!6571 = !{i64 2147639880, i64 2147639923, i64 2147639963}
!6572 = !DILocation(line: 246, column: 1, scope: !6100)
!6573 = !{i64 2147640112, i64 2147640155, i64 2147640195}
!6574 = !DILocation(line: 247, column: 1, scope: !6100)
!6575 = !{i64 2147640314, i64 2147640357, i64 2147640397}
!6576 = !DILocation(line: 248, column: 1, scope: !6100)
!6577 = !{i64 2147640564, i64 2147640607, i64 2147640647}
!6578 = !DILocation(line: 249, column: 1, scope: !6100)
!6579 = !{i64 2147640802, i64 2147640845, i64 2147640885}
!6580 = !DILocation(line: 250, column: 1, scope: !6100)
!6581 = !{i64 2147641010, i64 2147641053, i64 2147641093}
!6582 = !DILocation(line: 251, column: 1, scope: !6100)
!6583 = !{i64 2147641206, i64 2147641249, i64 2147641289}
!6584 = !DILocation(line: 252, column: 1, scope: !6100)
!6585 = !{i64 2147641390, i64 2147641433, i64 2147641473}
!6586 = !DILocation(line: 253, column: 1, scope: !6100)
!6587 = !{i64 2147641607, i64 2147641650, i64 2147641690}
!6588 = !DILocation(line: 254, column: 1, scope: !6100)
!6589 = !{i64 2147641812, i64 2147641855, i64 2147641895}
!6590 = !DILocation(line: 255, column: 1, scope: !6100)
!6591 = !{i64 2147646108, i64 2147646151, i64 2147646191}
!6592 = !DILocation(line: 256, column: 1, scope: !6100)
!6593 = !{i64 2147646331, i64 2147646374, i64 2147646414}
!6594 = !DILocation(line: 257, column: 1, scope: !6100)
!6595 = !{i64 2147646555, i64 2147646598, i64 2147646638}
!6596 = !DILocation(line: 258, column: 1, scope: !6100)
!6597 = !{i64 2147646793, i64 2147646836, i64 2147646876}
!6598 = !DILocation(line: 259, column: 1, scope: !6100)
!6599 = !{i64 2147647031, i64 2147647074, i64 2147647114}
!6600 = !DILocation(line: 260, column: 1, scope: !6100)
!6601 = !{i64 2147647248, i64 2147647291, i64 2147647331}
!6602 = !DILocation(line: 261, column: 1, scope: !6100)
!6603 = !{i64 2147647453, i64 2147647496, i64 2147647536}
!6604 = !DILocation(line: 262, column: 1, scope: !6100)
!6605 = !{i64 2147647646, i64 2147647689, i64 2147647729}
!6606 = !DILocation(line: 263, column: 1, scope: !6100)
!6607 = !{i64 2147647899, i64 2147647942, i64 2147647982}
!6608 = !DILocation(line: 264, column: 1, scope: !6100)
!6609 = !{i64 2147648107, i64 2147648150, i64 2147648190}
!6610 = !DILocation(line: 265, column: 1, scope: !6100)
!6611 = !{i64 2147648303, i64 2147648346, i64 2147648386}
!6612 = !DILocation(line: 266, column: 1, scope: !6100)
!6613 = !{i64 2147648517, i64 2147648560, i64 2147648600}
!6614 = !DILocation(line: 267, column: 1, scope: !6100)
!6615 = !{i64 2147648725, i64 2147648768, i64 2147648808}
!6616 = !DILocation(line: 268, column: 1, scope: !6100)
!6617 = !{i64 2147648915, i64 2147648958, i64 2147648998}
!6618 = !DILocation(line: 269, column: 1, scope: !6100)
!6619 = !{i64 2147649129, i64 2147649172, i64 2147649212}
!6620 = !DILocation(line: 270, column: 1, scope: !6100)
!6621 = !{i64 2147649391, i64 2147649434, i64 2147649474}
!6622 = !DILocation(line: 271, column: 1, scope: !6100)
!6623 = !{i64 2147649602, i64 2147649645, i64 2147649685}
!6624 = !DILocation(line: 272, column: 1, scope: !6100)
!6625 = !{i64 2147649846, i64 2147649889, i64 2147649929}
!6626 = !DILocation(line: 273, column: 1, scope: !6100)
!6627 = !{i64 2147650057, i64 2147650100, i64 2147650140}
!6628 = !DILocation(line: 274, column: 1, scope: !6100)
!6629 = !{i64 2147650286, i64 2147650329, i64 2147650369}
!6630 = !DILocation(line: 275, column: 1, scope: !6100)
!6631 = !{i64 2147650551, i64 2147650594, i64 2147650634}
!6632 = !DILocation(line: 276, column: 1, scope: !6100)
!6633 = !{i64 2147650756, i64 2147650799, i64 2147650839}
!6634 = !DILocation(line: 277, column: 1, scope: !6100)
!6635 = !{i64 2147650952, i64 2147650995, i64 2147651035}
!6636 = !DILocation(line: 278, column: 1, scope: !6100)
!6637 = !{i64 2147651175, i64 2147651218, i64 2147651258}
!6638 = !DILocation(line: 279, column: 1, scope: !6100)
!6639 = !{i64 2147651338, i64 2147651381, i64 2147651421}
!6640 = !DILocation(line: 280, column: 1, scope: !6100)
!6641 = !{i64 2147651543, i64 2147651586, i64 2147651626}
!6642 = !DILocation(line: 281, column: 1, scope: !6100)
!6643 = !{i64 2147651763, i64 2147651806, i64 2147651846}
!6644 = !DILocation(line: 282, column: 1, scope: !6100)
!6645 = !{i64 2147651977, i64 2147652020, i64 2147652060}
!6646 = !DILocation(line: 283, column: 1, scope: !6100)
!6647 = !{i64 2147652221, i64 2147652264, i64 2147652304}
!6648 = !DILocation(line: 284, column: 1, scope: !6100)
!6649 = !{i64 2147652453, i64 2147652496, i64 2147652536}
!6650 = !DILocation(line: 285, column: 1, scope: !6100)
!6651 = !{i64 2147652667, i64 2147652710, i64 2147652750}
!6652 = !DILocation(line: 286, column: 1, scope: !6100)
!6653 = !{i64 2147652878, i64 2147652921, i64 2147652961}
!6654 = !DILocation(line: 287, column: 1, scope: !6100)
!6655 = !{i64 2147653071, i64 2147653114, i64 2147653154}
!6656 = !DILocation(line: 288, column: 1, scope: !6100)
!6657 = !{i64 2147653270, i64 2147653313, i64 2147653353}
!6658 = !DILocation(line: 289, column: 1, scope: !6100)
!6659 = !{i64 2147653442, i64 2147653485, i64 2147653525}
!6660 = !DILocation(line: 290, column: 1, scope: !6100)
!6661 = !{i64 2147653635, i64 2147653678, i64 2147653718}
!6662 = !DILocation(line: 291, column: 1, scope: !6100)
!6663 = !{i64 2147653831, i64 2147653874, i64 2147653914}
!6664 = !DILocation(line: 292, column: 1, scope: !6100)
!6665 = !{i64 2147653994, i64 2147654037, i64 2147654077}
!6666 = !DILocation(line: 293, column: 1, scope: !6100)
!6667 = !{i64 2147654196, i64 2147654239, i64 2147654279}
!6668 = !DILocation(line: 294, column: 1, scope: !6100)
!6669 = !{i64 2147654401, i64 2147654444, i64 2147654484}
!6670 = !DILocation(line: 295, column: 1, scope: !6100)
!6671 = !{i64 2147654609, i64 2147654652, i64 2147654692}
!6672 = !DILocation(line: 296, column: 1, scope: !6100)
!6673 = !{i64 2147654802, i64 2147654845, i64 2147654885}
!6674 = !DILocation(line: 297, column: 1, scope: !6100)
!6675 = !{i64 2147654989, i64 2147655032, i64 2147655072}
!6676 = !DILocation(line: 298, column: 1, scope: !6100)
!6677 = !{i64 2147659277, i64 2147659320, i64 2147659360}
!6678 = !DILocation(line: 299, column: 1, scope: !6100)
!6679 = !{i64 2147659443, i64 2147659486, i64 2147659526}
!6680 = !DILocation(line: 300, column: 1, scope: !6100)
!6681 = !{i64 2147659657, i64 2147659700, i64 2147659740}
!6682 = !DILocation(line: 301, column: 1, scope: !6100)
!6683 = !{i64 2147659883, i64 2147659926, i64 2147659966}
!6684 = !DILocation(line: 302, column: 1, scope: !6100)
!6685 = !{i64 2147660091, i64 2147660134, i64 2147660174}
!6686 = !DILocation(line: 303, column: 1, scope: !6100)
!6687 = !{i64 2147660287, i64 2147660330, i64 2147660370}
!6688 = !DILocation(line: 304, column: 1, scope: !6100)
!6689 = !{i64 2147660504, i64 2147660547, i64 2147660587}
!6690 = !DILocation(line: 305, column: 1, scope: !6100)
!6691 = !{i64 2147660796, i64 2147660839, i64 2147660879}
!6692 = !DILocation(line: 306, column: 1, scope: !6100)
!6693 = !{i64 2147661028, i64 2147661071, i64 2147661111}
!6694 = !DILocation(line: 307, column: 1, scope: !6100)
!6695 = !{i64 2147661245, i64 2147661288, i64 2147661328}
!6696 = !DILocation(line: 308, column: 1, scope: !6100)
!6697 = !{i64 2147661452, i64 2147661495, i64 2147661535}
!6698 = !DILocation(line: 309, column: 1, scope: !6100)
!6699 = !{i64 2147661653, i64 2147661696, i64 2147661736}
!6700 = !DILocation(line: 310, column: 1, scope: !6100)
!6701 = !{i64 2147661885, i64 2147661928, i64 2147661968}
!6702 = !DILocation(line: 311, column: 1, scope: !6100)
!6703 = !{i64 2147662093, i64 2147662136, i64 2147662176}
!6704 = !DILocation(line: 312, column: 1, scope: !6100)
!6705 = !{i64 2147662283, i64 2147662326, i64 2147662366}
!6706 = !DILocation(line: 313, column: 1, scope: !6100)
!6707 = !{i64 2147662509, i64 2147662552, i64 2147662592}
!6708 = !DILocation(line: 314, column: 1, scope: !6100)
!6709 = !{i64 2147662698, i64 2147662741, i64 2147662781}
!6710 = !DILocation(line: 315, column: 1, scope: !6100)
!6711 = !{i64 2147662969, i64 2147663012, i64 2147663052}
!6712 = !DILocation(line: 316, column: 1, scope: !6100)
!6713 = !{i64 2147663189, i64 2147663232, i64 2147663272}
!6714 = !DILocation(line: 317, column: 1, scope: !6100)
!6715 = !{i64 2147663442, i64 2147663485, i64 2147663525}
!6716 = !DILocation(line: 318, column: 1, scope: !6100)
!6717 = !{i64 2147663650, i64 2147663693, i64 2147663733}
!6718 = !DILocation(line: 319, column: 1, scope: !6100)
!6719 = !{i64 2147663882, i64 2147663925, i64 2147663965}
!6720 = !DILocation(line: 320, column: 1, scope: !6100)
!6721 = !{i64 2147664093, i64 2147664136, i64 2147664176}
!6722 = !DILocation(line: 321, column: 1, scope: !6100)
!6723 = !{i64 2147664283, i64 2147664326, i64 2147664366}
!6724 = !DILocation(line: 322, column: 1, scope: !6100)
!6725 = !{i64 2147664497, i64 2147664540, i64 2147664580}
!6726 = !DILocation(line: 323, column: 1, scope: !6100)
!6727 = !{i64 2147664696, i64 2147664739, i64 2147664779}
!6728 = !DILocation(line: 324, column: 1, scope: !6100)
!6729 = !{i64 2147664883, i64 2147664926, i64 2147664966}
!6730 = !DILocation(line: 325, column: 1, scope: !6100)
!6731 = !{i64 2147665091, i64 2147665134, i64 2147665174}
!6732 = !DILocation(line: 326, column: 1, scope: !6100)
!6733 = !{i64 2147665320, i64 2147665363, i64 2147665403}
!6734 = !DILocation(line: 327, column: 1, scope: !6100)
!6735 = !{i64 2147665522, i64 2147665565, i64 2147665605}
!6736 = !DILocation(line: 328, column: 1, scope: !6100)
!6737 = !{i64 2147665721, i64 2147665764, i64 2147665804}
!6738 = !DILocation(line: 329, column: 1, scope: !6100)
!6739 = !{i64 2147665938, i64 2147665981, i64 2147666021}
!6740 = !DILocation(line: 331, column: 1, scope: !6100)
!6741 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !580, file: !580, line: 30, type: !586, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !6742)
!6742 = !{!6743, !6744}
!6743 = !DILocalVariable(name: "arg", arg: 1, scope: !6741, file: !580, line: 30, type: !588)
!6744 = !DILocalVariable(name: "key", scope: !6741, file: !580, line: 32, type: !113)
!6745 = !DILocation(line: 0, scope: !6741)
!6746 = !DILocation(line: 37, column: 2, scope: !6741)
!6747 = !DILocation(line: 38, column: 2, scope: !6741)
!6748 = !DILocation(line: 55, column: 2, scope: !6749, inlinedAt: !6753)
!6749 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4087, file: !4087, line: 42, type: !4088, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !6750)
!6750 = !{!6751, !6752}
!6751 = !DILocalVariable(name: "key", scope: !6749, file: !4087, line: 44, type: !32)
!6752 = !DILocalVariable(name: "tmp", scope: !6749, file: !4087, line: 53, type: !32)
!6753 = distinct !DILocation(line: 40, column: 8, scope: !6741)
!6754 = !{i64 2119988}
!6755 = !DILocation(line: 0, scope: !6749, inlinedAt: !6753)
!6756 = !DILocalVariable(name: "key", arg: 1, scope: !6757, file: !4087, line: 84, type: !32)
!6757 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4087, file: !4087, line: 84, type: !4100, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !6758)
!6758 = !{!6756}
!6759 = !DILocation(line: 0, scope: !6757, inlinedAt: !6760)
!6760 = distinct !DILocation(line: 47, column: 2, scope: !6741)
!6761 = !DILocation(line: 95, column: 2, scope: !6757, inlinedAt: !6760)
!6762 = !{i64 2120805}
!6763 = !DILocation(line: 51, column: 18, scope: !6741)
!6764 = !DILocation(line: 53, column: 2, scope: !6741)
!6765 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6766, file: !6766, line: 1609, type: !3413, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !437)
!6766 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6767 = !DILocation(line: 1611, column: 3, scope: !6765)
!6768 = !DILocation(line: 1612, column: 1, scope: !6765)
!6769 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6766, file: !6766, line: 1629, type: !3413, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !437)
!6770 = !DILocation(line: 1631, column: 3, scope: !6769)
!6771 = !DILocation(line: 1632, column: 1, scope: !6769)
!6772 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !609, file: !609, line: 26, type: !615, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !606, retainedNodes: !6773)
!6773 = !{!6774}
!6774 = !DILocalVariable(name: "dev", arg: 1, scope: !6772, file: !609, line: 26, type: !617)
!6775 = !DILocation(line: 0, scope: !6772)
!6776 = !DILocation(line: 68, column: 2, scope: !6772)
!6777 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6778, file: !6778, line: 14, type: !5081, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2876, retainedNodes: !6779)
!6778 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6779 = !{!6780, !6781}
!6780 = !DILocalVariable(name: "fmt", arg: 1, scope: !6777, file: !6778, line: 14, type: !105)
!6781 = !DILocalVariable(name: "ap", scope: !6777, file: !6778, line: 16, type: !6782)
!6782 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4148, line: 99, baseType: !6783)
!6783 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4148, line: 40, baseType: !6784)
!6784 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6778, baseType: !6785)
!6785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6786)
!6786 = !{!6787}
!6787 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6785, file: !6778, line: 16, baseType: !104, size: 32)
!6788 = !DILocation(line: 0, scope: !6777)
!6789 = !DILocation(line: 16, column: 2, scope: !6777)
!6790 = !DILocation(line: 16, column: 10, scope: !6777)
!6791 = !DILocation(line: 18, column: 2, scope: !6777)
!6792 = !DILocation(line: 19, column: 2, scope: !6777)
!6793 = !DILocation(line: 20, column: 2, scope: !6777)
!6794 = !DILocation(line: 21, column: 1, scope: !6777)
!6795 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6778, file: !6778, line: 23, type: !6796, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2876, retainedNodes: !6798)
!6796 = !DISubroutineType(types: !6797)
!6797 = !{null, !105, !6782}
!6798 = !{!6799, !6800}
!6799 = !DILocalVariable(name: "fmt", arg: 1, scope: !6795, file: !6778, line: 23, type: !105)
!6800 = !DILocalVariable(name: "ap", arg: 2, scope: !6795, file: !6778, line: 23, type: !6782)
!6801 = !DILocation(line: 0, scope: !6795)
!6802 = !DILocation(line: 25, column: 2, scope: !6795)
!6803 = !DILocation(line: 26, column: 1, scope: !6795)
!6804 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6778, file: !6778, line: 52, type: !6805, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2876, retainedNodes: !6807)
!6805 = !DISubroutineType(types: !6806)
!6806 = !{null, !108, !13, !439}
!6807 = !{!6808, !6809, !6810, !6811}
!6808 = !DILocalVariable(name: "level", arg: 1, scope: !6804, file: !6778, line: 52, type: !108)
!6809 = !DILocalVariable(name: "data", arg: 2, scope: !6804, file: !6778, line: 52, type: !13)
!6810 = !DILocalVariable(name: "size", arg: 3, scope: !6804, file: !6778, line: 52, type: !439)
!6811 = !DILocalVariable(name: "data_buffer", scope: !6804, file: !6778, line: 54, type: !105)
!6812 = !DILocation(line: 0, scope: !6804)
!6813 = !DILocation(line: 55, column: 14, scope: !6804)
!6814 = !DILocation(line: 55, column: 2, scope: !6804)
!6815 = !DILocation(line: 56, column: 3, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6804, file: !6778, line: 55, column: 20)
!6817 = !DILocation(line: 57, column: 3, scope: !6816)
!6818 = !DILocation(line: 59, column: 7, scope: !6816)
!6819 = distinct !{!6819, !6814, !6820}
!6820 = !DILocation(line: 65, column: 2, scope: !6804)
!6821 = !DILocation(line: 66, column: 1, scope: !6804)
!6822 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3699, file: !3699, line: 175, type: !3700, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2876, retainedNodes: !6823)
!6823 = !{!6824}
!6824 = !DILocalVariable(name: "level", arg: 1, scope: !6822, file: !3699, line: 175, type: !108)
!6825 = !DILocation(line: 0, scope: !6822)
!6826 = !DILocation(line: 177, column: 2, scope: !6822)
!6827 = !DILocation(line: 189, column: 1, scope: !6822)
!6828 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6778, file: !6778, line: 28, type: !6829, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2876, retainedNodes: !6831)
!6829 = !DISubroutineType(types: !6830)
!6830 = !{null, !105, !439}
!6831 = !{!6832, !6833, !6834, !6836, !6838}
!6832 = !DILocalVariable(name: "data", arg: 1, scope: !6828, file: !6778, line: 28, type: !105)
!6833 = !DILocalVariable(name: "length", arg: 2, scope: !6828, file: !6778, line: 28, type: !439)
!6834 = !DILocalVariable(name: "i", scope: !6835, file: !6778, line: 30, type: !439)
!6835 = distinct !DILexicalBlock(scope: !6828, file: !6778, line: 30, column: 2)
!6836 = !DILocalVariable(name: "i", scope: !6837, file: !6778, line: 40, type: !439)
!6837 = distinct !DILexicalBlock(scope: !6828, file: !6778, line: 40, column: 2)
!6838 = !DILocalVariable(name: "c", scope: !6839, file: !6778, line: 42, type: !165)
!6839 = distinct !DILexicalBlock(scope: !6840, file: !6778, line: 41, column: 19)
!6840 = distinct !DILexicalBlock(scope: !6841, file: !6778, line: 41, column: 7)
!6841 = distinct !DILexicalBlock(scope: !6842, file: !6778, line: 40, column: 54)
!6842 = distinct !DILexicalBlock(scope: !6837, file: !6778, line: 40, column: 2)
!6843 = !DILocation(line: 0, scope: !6828)
!6844 = !DILocation(line: 0, scope: !6835)
!6845 = !DILocation(line: 30, column: 2, scope: !6835)
!6846 = !DILocation(line: 38, column: 2, scope: !6828)
!6847 = !DILocation(line: 0, scope: !6837)
!6848 = !DILocation(line: 40, column: 2, scope: !6837)
!6849 = !DILocation(line: 31, column: 9, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6851, file: !6778, line: 31, column: 7)
!6851 = distinct !DILexicalBlock(scope: !6852, file: !6778, line: 30, column: 54)
!6852 = distinct !DILexicalBlock(scope: !6835, file: !6778, line: 30, column: 2)
!6853 = !DILocation(line: 31, column: 7, scope: !6851)
!6854 = !DILocation(line: 32, column: 35, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6850, file: !6778, line: 31, column: 19)
!6856 = !DILocation(line: 32, column: 20, scope: !6855)
!6857 = !DILocation(line: 32, column: 4, scope: !6855)
!6858 = !DILocation(line: 33, column: 3, scope: !6855)
!6859 = !DILocation(line: 34, column: 4, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6850, file: !6778, line: 33, column: 10)
!6861 = !DILocation(line: 30, column: 50, scope: !6852)
!6862 = !DILocation(line: 30, column: 24, scope: !6852)
!6863 = distinct !{!6863, !6845, !6864}
!6864 = !DILocation(line: 36, column: 2, scope: !6835)
!6865 = !DILocation(line: 49, column: 2, scope: !6828)
!6866 = !DILocation(line: 50, column: 1, scope: !6828)
!6867 = !DILocation(line: 41, column: 9, scope: !6840)
!6868 = !DILocation(line: 41, column: 7, scope: !6841)
!6869 = !DILocation(line: 42, column: 22, scope: !6839)
!6870 = !DILocation(line: 0, scope: !6839)
!6871 = !DILocation(line: 44, column: 25, scope: !6839)
!6872 = !DILocation(line: 44, column: 17, scope: !6839)
!6873 = !DILocation(line: 44, column: 33, scope: !6839)
!6874 = !DILocation(line: 44, column: 4, scope: !6839)
!6875 = !DILocation(line: 45, column: 3, scope: !6839)
!6876 = !DILocation(line: 46, column: 4, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6840, file: !6778, line: 45, column: 10)
!6878 = !DILocation(line: 40, column: 50, scope: !6842)
!6879 = !DILocation(line: 40, column: 24, scope: !6842)
!6880 = distinct !{!6880, !6848, !6881}
!6881 = !DILocation(line: 48, column: 2, scope: !6837)
!6882 = distinct !DISubprogram(name: "isprint", scope: !5873, file: !5873, line: 37, type: !559, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2876, retainedNodes: !6883)
!6883 = !{!6884}
!6884 = !DILocalVariable(name: "c", arg: 1, scope: !6882, file: !5873, line: 37, type: !108)
!6885 = !DILocation(line: 0, scope: !6882)
!6886 = !DILocation(line: 39, column: 38, scope: !6882)
!6887 = !DILocation(line: 39, column: 2, scope: !6882)
!6888 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6889, file: !6889, line: 57, type: !6890, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !6936)
!6889 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6890 = !DISubroutineType(types: !6891)
!6891 = !{null, !32, !6892}
!6892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6893, size: 32)
!6893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6894)
!6894 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2999, line: 141, baseType: !6895)
!6895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2999, line: 97, size: 256, elements: !6896)
!6896 = !{!6897}
!6897 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6895, file: !2999, line: 107, baseType: !6898, size: 256)
!6898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2999, line: 98, size: 256, elements: !6899)
!6899 = !{!6900, !6905, !6910, !6915, !6920, !6925, !6930, !6935}
!6900 = !DIDerivedType(tag: DW_TAG_member, scope: !6898, file: !2999, line: 99, baseType: !6901, size: 32)
!6901 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6898, file: !2999, line: 99, size: 32, elements: !6902)
!6902 = !{!6903, !6904}
!6903 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6901, file: !2999, line: 99, baseType: !113, size: 32)
!6904 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6901, file: !2999, line: 99, baseType: !113, size: 32)
!6905 = !DIDerivedType(tag: DW_TAG_member, scope: !6898, file: !2999, line: 100, baseType: !6906, size: 32, offset: 32)
!6906 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6898, file: !2999, line: 100, size: 32, elements: !6907)
!6907 = !{!6908, !6909}
!6908 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6906, file: !2999, line: 100, baseType: !113, size: 32)
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6906, file: !2999, line: 100, baseType: !113, size: 32)
!6910 = !DIDerivedType(tag: DW_TAG_member, scope: !6898, file: !2999, line: 101, baseType: !6911, size: 32, offset: 64)
!6911 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6898, file: !2999, line: 101, size: 32, elements: !6912)
!6912 = !{!6913, !6914}
!6913 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6911, file: !2999, line: 101, baseType: !113, size: 32)
!6914 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6911, file: !2999, line: 101, baseType: !113, size: 32)
!6915 = !DIDerivedType(tag: DW_TAG_member, scope: !6898, file: !2999, line: 102, baseType: !6916, size: 32, offset: 96)
!6916 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6898, file: !2999, line: 102, size: 32, elements: !6917)
!6917 = !{!6918, !6919}
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6916, file: !2999, line: 102, baseType: !113, size: 32)
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6916, file: !2999, line: 102, baseType: !113, size: 32)
!6920 = !DIDerivedType(tag: DW_TAG_member, scope: !6898, file: !2999, line: 103, baseType: !6921, size: 32, offset: 128)
!6921 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6898, file: !2999, line: 103, size: 32, elements: !6922)
!6922 = !{!6923, !6924}
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6921, file: !2999, line: 103, baseType: !113, size: 32)
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6921, file: !2999, line: 103, baseType: !113, size: 32)
!6925 = !DIDerivedType(tag: DW_TAG_member, scope: !6898, file: !2999, line: 104, baseType: !6926, size: 32, offset: 160)
!6926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6898, file: !2999, line: 104, size: 32, elements: !6927)
!6927 = !{!6928, !6929}
!6928 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6926, file: !2999, line: 104, baseType: !113, size: 32)
!6929 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6926, file: !2999, line: 104, baseType: !113, size: 32)
!6930 = !DIDerivedType(tag: DW_TAG_member, scope: !6898, file: !2999, line: 105, baseType: !6931, size: 32, offset: 192)
!6931 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6898, file: !2999, line: 105, size: 32, elements: !6932)
!6932 = !{!6933, !6934}
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6931, file: !2999, line: 105, baseType: !113, size: 32)
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6931, file: !2999, line: 105, baseType: !113, size: 32)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6898, file: !2999, line: 106, baseType: !113, size: 32, offset: 224)
!6936 = !{!6937, !6938}
!6937 = !DILocalVariable(name: "reason", arg: 1, scope: !6888, file: !6889, line: 57, type: !32)
!6938 = !DILocalVariable(name: "esf", arg: 2, scope: !6888, file: !6889, line: 57, type: !6892)
!6939 = !DILocation(line: 0, scope: !6888)
!6940 = !DILocation(line: 60, column: 10, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6888, file: !6889, line: 60, column: 6)
!6942 = !DILocation(line: 60, column: 6, scope: !6888)
!6943 = !DILocation(line: 61, column: 3, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6941, file: !6889, line: 60, column: 19)
!6945 = !DILocation(line: 62, column: 2, scope: !6944)
!6946 = !DILocation(line: 63, column: 2, scope: !6888)
!6947 = !DILocation(line: 64, column: 1, scope: !6888)
!6948 = distinct !DISubprogram(name: "esf_dump", scope: !6889, file: !6889, line: 20, type: !6949, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !6951)
!6949 = !DISubroutineType(types: !6950)
!6950 = !{null, !6892}
!6951 = !{!6952}
!6952 = !DILocalVariable(name: "esf", arg: 1, scope: !6948, file: !6889, line: 20, type: !6892)
!6953 = !DILocation(line: 0, scope: !6948)
!6954 = !DILocation(line: 22, column: 2, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6956, file: !6889, line: 22, column: 2)
!6956 = distinct !DILexicalBlock(scope: !6957, file: !6889, line: 22, column: 2)
!6957 = distinct !DILexicalBlock(scope: !6958, file: !6889, line: 22, column: 2)
!6958 = distinct !DILexicalBlock(scope: !6948, file: !6889, line: 22, column: 2)
!6959 = !DILocation(line: 24, column: 2, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6961, file: !6889, line: 24, column: 2)
!6961 = distinct !DILexicalBlock(scope: !6962, file: !6889, line: 24, column: 2)
!6962 = distinct !DILexicalBlock(scope: !6963, file: !6889, line: 24, column: 2)
!6963 = distinct !DILexicalBlock(scope: !6948, file: !6889, line: 24, column: 2)
!6964 = !DILocation(line: 26, column: 2, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6966, file: !6889, line: 26, column: 2)
!6966 = distinct !DILexicalBlock(scope: !6967, file: !6889, line: 26, column: 2)
!6967 = distinct !DILexicalBlock(scope: !6968, file: !6889, line: 26, column: 2)
!6968 = distinct !DILexicalBlock(scope: !6948, file: !6889, line: 26, column: 2)
!6969 = !DILocation(line: 53, column: 2, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6971, file: !6889, line: 53, column: 2)
!6971 = distinct !DILexicalBlock(scope: !6972, file: !6889, line: 53, column: 2)
!6972 = distinct !DILexicalBlock(scope: !6973, file: !6889, line: 53, column: 2)
!6973 = distinct !DILexicalBlock(scope: !6948, file: !6889, line: 53, column: 2)
!6974 = !DILocation(line: 55, column: 1, scope: !6948)
!6975 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6889, file: !6889, line: 82, type: !6976, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !6991)
!6976 = !DISubroutineType(types: !6977)
!6977 = !{null, !6892, !6978}
!6978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6979, size: 32)
!6979 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !714, line: 37, baseType: !6980)
!6980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !714, line: 25, size: 288, elements: !6981)
!6981 = !{!6982, !6983, !6984, !6985, !6986, !6987, !6988, !6989, !6990}
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6980, file: !714, line: 26, baseType: !113, size: 32)
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6980, file: !714, line: 27, baseType: !113, size: 32, offset: 32)
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6980, file: !714, line: 28, baseType: !113, size: 32, offset: 64)
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6980, file: !714, line: 29, baseType: !113, size: 32, offset: 96)
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6980, file: !714, line: 30, baseType: !113, size: 32, offset: 128)
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6980, file: !714, line: 31, baseType: !113, size: 32, offset: 160)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6980, file: !714, line: 32, baseType: !113, size: 32, offset: 192)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6980, file: !714, line: 33, baseType: !113, size: 32, offset: 224)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6980, file: !714, line: 34, baseType: !113, size: 32, offset: 256)
!6991 = !{!6992, !6993, !6994}
!6992 = !DILocalVariable(name: "esf", arg: 1, scope: !6975, file: !6889, line: 82, type: !6892)
!6993 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6975, file: !6889, line: 82, type: !6978)
!6994 = !DILocalVariable(name: "reason", scope: !6975, file: !6889, line: 88, type: !32)
!6995 = !DILocation(line: 0, scope: !6975)
!6996 = !DILocation(line: 88, column: 35, scope: !6975)
!6997 = !DILocation(line: 108, column: 2, scope: !6975)
!6998 = !DILocation(line: 131, column: 1, scope: !6975)
!6999 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6889, file: !6889, line: 133, type: !7000, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !7002)
!7000 = !DISubroutineType(types: !7001)
!7001 = !{null, !104}
!7002 = !{!7003, !7004, !7005}
!7003 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6999, file: !6889, line: 133, type: !104)
!7004 = !DILocalVariable(name: "ssf_contents", scope: !6999, file: !6889, line: 135, type: !1231)
!7005 = !DILocalVariable(name: "oops_esf", scope: !6999, file: !6889, line: 136, type: !6894)
!7006 = !DILocation(line: 0, scope: !6999)
!7007 = !DILocation(line: 136, column: 2, scope: !6999)
!7008 = !DILocation(line: 136, column: 15, scope: !6999)
!7009 = !DILocation(line: 139, column: 22, scope: !6999)
!7010 = !DILocation(line: 139, column: 17, scope: !6999)
!7011 = !DILocation(line: 139, column: 20, scope: !6999)
!7012 = !DILocation(line: 141, column: 2, scope: !6999)
!7013 = !DILocation(line: 142, column: 2, scope: !6999)
!7014 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7015, file: !7015, line: 40, type: !4100, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !7016)
!7015 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7016 = !{!7017}
!7017 = !DILocalVariable(name: "irq", arg: 1, scope: !7014, file: !7015, line: 40, type: !32)
!7018 = !DILocation(line: 0, scope: !7014)
!7019 = !DILocation(line: 42, column: 2, scope: !7014)
!7020 = !DILocation(line: 43, column: 1, scope: !7014)
!7021 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !790, file: !790, line: 1684, type: !7022, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !7024)
!7022 = !DISubroutineType(types: !7023)
!7023 = !{null, !1171}
!7024 = !{!7025}
!7025 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7021, file: !790, line: 1684, type: !1171)
!7026 = !DILocation(line: 0, scope: !7021)
!7027 = !DILocation(line: 1686, column: 23, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7021, file: !790, line: 1686, column: 7)
!7029 = !DILocation(line: 1686, column: 7, scope: !7021)
!7030 = !DILocation(line: 1688, column: 5, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7028, file: !790, line: 1687, column: 3)
!7032 = !{i64 2151086878}
!7033 = !DILocation(line: 1689, column: 81, scope: !7031)
!7034 = !DILocation(line: 1689, column: 60, scope: !7031)
!7035 = !DILocation(line: 1689, column: 34, scope: !7031)
!7036 = !DILocation(line: 1689, column: 5, scope: !7031)
!7037 = !DILocation(line: 1689, column: 43, scope: !7031)
!7038 = !DILocation(line: 1690, column: 5, scope: !7031)
!7039 = !{i64 2151086992}
!7040 = !DILocation(line: 1691, column: 3, scope: !7031)
!7041 = !DILocation(line: 1692, column: 1, scope: !7021)
!7042 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7015, file: !7015, line: 45, type: !4100, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !7043)
!7043 = !{!7044}
!7044 = !DILocalVariable(name: "irq", arg: 1, scope: !7042, file: !7015, line: 45, type: !32)
!7045 = !DILocation(line: 0, scope: !7042)
!7046 = !DILocation(line: 47, column: 2, scope: !7042)
!7047 = !DILocation(line: 48, column: 1, scope: !7042)
!7048 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !790, file: !790, line: 1722, type: !7022, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !7049)
!7049 = !{!7050}
!7050 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7048, file: !790, line: 1722, type: !1171)
!7051 = !DILocation(line: 0, scope: !7048)
!7052 = !DILocation(line: 1724, column: 23, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !7048, file: !790, line: 1724, column: 7)
!7054 = !DILocation(line: 1724, column: 7, scope: !7048)
!7055 = !DILocation(line: 1726, column: 81, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !7053, file: !790, line: 1725, column: 3)
!7057 = !DILocation(line: 1726, column: 60, scope: !7056)
!7058 = !DILocation(line: 1726, column: 34, scope: !7056)
!7059 = !DILocation(line: 1726, column: 5, scope: !7056)
!7060 = !DILocation(line: 1726, column: 43, scope: !7056)
!7061 = !DILocation(line: 271, column: 3, scope: !7062, inlinedAt: !7064)
!7062 = distinct !DISubprogram(name: "__DSB", scope: !7063, file: !7063, line: 269, type: !3413, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !437)
!7063 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7064 = distinct !DILocation(line: 1727, column: 5, scope: !7056)
!7065 = !{i64 3541261}
!7066 = !DILocation(line: 260, column: 3, scope: !7067, inlinedAt: !7068)
!7067 = distinct !DISubprogram(name: "__ISB", scope: !7063, file: !7063, line: 258, type: !3413, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !437)
!7068 = distinct !DILocation(line: 1728, column: 5, scope: !7056)
!7069 = !{i64 3540978}
!7070 = !DILocation(line: 1729, column: 3, scope: !7056)
!7071 = !DILocation(line: 1730, column: 1, scope: !7048)
!7072 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7015, file: !7015, line: 50, type: !7073, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !7075)
!7073 = !DISubroutineType(types: !7074)
!7074 = !{!108, !32}
!7075 = !{!7076}
!7076 = !DILocalVariable(name: "irq", arg: 1, scope: !7072, file: !7015, line: 50, type: !32)
!7077 = !DILocation(line: 0, scope: !7072)
!7078 = !DILocation(line: 52, column: 20, scope: !7072)
!7079 = !DILocation(line: 52, column: 9, scope: !7072)
!7080 = !DILocation(line: 52, column: 41, scope: !7072)
!7081 = !DILocation(line: 52, column: 39, scope: !7072)
!7082 = !DILocation(line: 52, column: 2, scope: !7072)
!7083 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7015, file: !7015, line: 64, type: !7084, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !7086)
!7084 = !DISubroutineType(types: !7085)
!7085 = !{null, !32, !32, !113}
!7086 = !{!7087, !7088, !7089}
!7087 = !DILocalVariable(name: "irq", arg: 1, scope: !7083, file: !7015, line: 64, type: !32)
!7088 = !DILocalVariable(name: "prio", arg: 2, scope: !7083, file: !7015, line: 64, type: !32)
!7089 = !DILocalVariable(name: "flags", arg: 3, scope: !7083, file: !7015, line: 64, type: !113)
!7090 = !DILocation(line: 0, scope: !7083)
!7091 = !DILocation(line: 83, column: 8, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7093, file: !7015, line: 82, column: 9)
!7093 = distinct !DILexicalBlock(scope: !7083, file: !7015, line: 76, column: 6)
!7094 = !DILocation(line: 95, column: 2, scope: !7083)
!7095 = !DILocation(line: 96, column: 1, scope: !7083)
!7096 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !790, file: !790, line: 1814, type: !7097, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !7099)
!7097 = !DISubroutineType(types: !7098)
!7098 = !{null, !1171, !113}
!7099 = !{!7100, !7101}
!7100 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7096, file: !790, line: 1814, type: !1171)
!7101 = !DILocalVariable(name: "priority", arg: 2, scope: !7096, file: !790, line: 1814, type: !113)
!7102 = !DILocation(line: 0, scope: !7096)
!7103 = !DILocation(line: 0, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7096, file: !790, line: 1816, column: 7)
!7105 = !DILocation(line: 1816, column: 7, scope: !7096)
!7106 = !DILocation(line: 1824, column: 1, scope: !7096)
!7107 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7015, file: !7015, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !7108)
!7108 = !{!7109}
!7109 = !DILocalVariable(name: "unused", arg: 1, scope: !7107, file: !7015, line: 155, type: !13)
!7110 = !DILocation(line: 0, scope: !7107)
!7111 = !DILocation(line: 159, column: 2, scope: !7107)
!7112 = !DILocation(line: 160, column: 1, scope: !7107)
!7113 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7114, file: !7114, line: 87, type: !3413, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2936, retainedNodes: !437)
!7114 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7115 = !DILocation(line: 89, column: 2, scope: !7113)
!7116 = !DILocation(line: 90, column: 2, scope: !7113)
!7117 = !DILocation(line: 91, column: 1, scope: !7113)
!7118 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7114, file: !7114, line: 23, type: !3413, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!7119 = !DISubprogram(name: "z_arm_int_exit", scope: !7120, file: !7120, line: 153, type: !3413, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!7120 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7121 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7122, file: !7122, line: 256, type: !3413, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2938, retainedNodes: !437)
!7122 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7123 = !DILocation(line: 258, column: 2, scope: !7121)
!7124 = !DILocation(line: 260, column: 2, scope: !7121)
!7125 = !DILocation(line: 262, column: 2, scope: !7121)
!7126 = !DILocation(line: 263, column: 2, scope: !7121)
!7127 = !DILocation(line: 267, column: 2, scope: !7121)
!7128 = !DILocation(line: 268, column: 2, scope: !7121)
!7129 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7122, file: !7122, line: 53, type: !3413, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2938, retainedNodes: !437)
!7130 = !DILocation(line: 55, column: 12, scope: !7129)
!7131 = !DILocation(line: 271, column: 3, scope: !7132, inlinedAt: !7133)
!7132 = distinct !DISubprogram(name: "__DSB", scope: !7063, file: !7063, line: 269, type: !3413, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2938, retainedNodes: !437)
!7133 = distinct !DILocation(line: 56, column: 2, scope: !7129)
!7134 = !{i64 3539932}
!7135 = !DILocation(line: 260, column: 3, scope: !7136, inlinedAt: !7137)
!7136 = distinct !DISubprogram(name: "__ISB", scope: !7063, file: !7063, line: 258, type: !3413, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2938, retainedNodes: !437)
!7137 = distinct !DILocation(line: 57, column: 2, scope: !7129)
!7138 = !{i64 3539649}
!7139 = !DILocation(line: 58, column: 1, scope: !7129)
!7140 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !7122, file: !7122, line: 96, type: !3413, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2938, retainedNodes: !437)
!7141 = !DILocation(line: 103, column: 13, scope: !7140)
!7142 = !DILocation(line: 975, column: 3, scope: !7143, inlinedAt: !7148)
!7143 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7063, file: !7063, line: 971, type: !7144, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2938, retainedNodes: !7146)
!7144 = !DISubroutineType(types: !7145)
!7145 = !{!113}
!7146 = !{!7147}
!7147 = !DILocalVariable(name: "result", scope: !7143, file: !7063, line: 973, type: !113)
!7148 = distinct !DILocation(line: 189, column: 16, scope: !7140)
!7149 = !{i64 3560762}
!7150 = !DILocation(line: 0, scope: !7143, inlinedAt: !7148)
!7151 = !DILocation(line: 189, column: 32, scope: !7140)
!7152 = !DILocalVariable(name: "control", arg: 1, scope: !7153, file: !7063, line: 1001, type: !113)
!7153 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7063, file: !7063, line: 1001, type: !7154, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2938, retainedNodes: !7156)
!7154 = !DISubroutineType(types: !7155)
!7155 = !{null, !113}
!7156 = !{!7152}
!7157 = !DILocation(line: 0, scope: !7153, inlinedAt: !7158)
!7158 = distinct !DILocation(line: 189, column: 2, scope: !7140)
!7159 = !DILocation(line: 1003, column: 3, scope: !7153, inlinedAt: !7158)
!7160 = !{i64 3561482}
!7161 = !DILocation(line: 260, column: 3, scope: !7136, inlinedAt: !7162)
!7162 = distinct !DILocation(line: 1004, column: 3, scope: !7153, inlinedAt: !7158)
!7163 = !DILocation(line: 191, column: 1, scope: !7140)
!7164 = distinct !DISubprogram(name: "arch_swap", scope: !7165, file: !7165, line: 33, type: !7073, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !7166)
!7165 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7166 = !{!7167}
!7167 = !DILocalVariable(name: "key", arg: 1, scope: !7164, file: !7165, line: 33, type: !32)
!7168 = !DILocation(line: 0, scope: !7164)
!7169 = !DILocation(line: 36, column: 2, scope: !7164)
!7170 = !DILocation(line: 36, column: 17, scope: !7164)
!7171 = !DILocation(line: 36, column: 25, scope: !7164)
!7172 = !DILocation(line: 37, column: 37, scope: !7164)
!7173 = !DILocation(line: 37, column: 17, scope: !7164)
!7174 = !DILocation(line: 37, column: 35, scope: !7164)
!7175 = !DILocation(line: 41, column: 12, scope: !7164)
!7176 = !DILocalVariable(name: "key", arg: 1, scope: !7177, file: !4087, line: 84, type: !32)
!7177 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4087, file: !4087, line: 84, type: !4100, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !7178)
!7178 = !{!7176}
!7179 = !DILocation(line: 0, scope: !7177, inlinedAt: !7180)
!7180 = distinct !DILocation(line: 44, column: 2, scope: !7164)
!7181 = !DILocation(line: 95, column: 2, scope: !7177, inlinedAt: !7180)
!7182 = !{i64 2239254}
!7183 = !DILocation(line: 53, column: 9, scope: !7164)
!7184 = !DILocation(line: 53, column: 24, scope: !7164)
!7185 = !DILocation(line: 53, column: 2, scope: !7164)
!7186 = distinct !DISubprogram(name: "arch_new_thread", scope: !7187, file: !7187, line: 56, type: !7188, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !7295)
!7187 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7188 = !DISubroutineType(types: !7189)
!7189 = !{null, !7190, !7290, !443, !5179, !104, !104, !104}
!7190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7191, size: 32)
!7191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !647, line: 245, size: 1024, elements: !7192)
!7192 = !{!7193, !7251, !7263, !7264, !7265, !7266, !7272, !7285}
!7193 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7191, file: !647, line: 247, baseType: !7194, size: 384)
!7194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !647, line: 57, size: 384, elements: !7195)
!7195 = !{!7196, !7220, !7227, !7228, !7229, !7238, !7239, !7240}
!7196 = !DIDerivedType(tag: DW_TAG_member, scope: !7194, file: !647, line: 60, baseType: !7197, size: 64)
!7197 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7194, file: !647, line: 60, size: 64, elements: !7198)
!7198 = !{!7199, !7214}
!7199 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7197, file: !647, line: 61, baseType: !7200, size: 64)
!7200 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !7201)
!7201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !7202)
!7202 = !{!7203, !7209}
!7203 = !DIDerivedType(tag: DW_TAG_member, scope: !7201, file: !367, line: 38, baseType: !7204, size: 32)
!7204 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7201, file: !367, line: 38, size: 32, elements: !7205)
!7205 = !{!7206, !7208}
!7206 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7204, file: !367, line: 39, baseType: !7207, size: 32)
!7207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7201, size: 32)
!7208 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7204, file: !367, line: 40, baseType: !7207, size: 32)
!7209 = !DIDerivedType(tag: DW_TAG_member, scope: !7201, file: !367, line: 42, baseType: !7210, size: 32, offset: 32)
!7210 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7201, file: !367, line: 42, size: 32, elements: !7211)
!7211 = !{!7212, !7213}
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7210, file: !367, line: 43, baseType: !7207, size: 32)
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7210, file: !367, line: 44, baseType: !7207, size: 32)
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7197, file: !647, line: 62, baseType: !7215, size: 64)
!7215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !672, line: 49, size: 64, elements: !7216)
!7216 = !{!7217}
!7217 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7215, file: !672, line: 50, baseType: !7218, size: 64)
!7218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7219, size: 64, elements: !677)
!7219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7215, size: 32)
!7220 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7194, file: !647, line: 68, baseType: !7221, size: 32, offset: 64)
!7221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7222, size: 32)
!7222 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !7223)
!7223 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !7224)
!7224 = !{!7225}
!7225 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7223, file: !363, line: 232, baseType: !7226, size: 64)
!7226 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !7201)
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7194, file: !647, line: 71, baseType: !164, size: 8, offset: 96)
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7194, file: !647, line: 74, baseType: !164, size: 8, offset: 104)
!7229 = !DIDerivedType(tag: DW_TAG_member, scope: !7194, file: !647, line: 90, baseType: !7230, size: 16, offset: 112)
!7230 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7194, file: !647, line: 90, size: 16, elements: !7231)
!7231 = !{!7232, !7237}
!7232 = !DIDerivedType(tag: DW_TAG_member, scope: !7230, file: !647, line: 91, baseType: !7233, size: 16)
!7233 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7230, file: !647, line: 91, size: 16, elements: !7234)
!7234 = !{!7235, !7236}
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7233, file: !647, line: 96, baseType: !695, size: 8)
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7233, file: !647, line: 97, baseType: !164, size: 8, offset: 8)
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7230, file: !647, line: 100, baseType: !168, size: 16)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7194, file: !647, line: 107, baseType: !113, size: 32, offset: 128)
!7239 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7194, file: !647, line: 127, baseType: !104, size: 32, offset: 160)
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7194, file: !647, line: 131, baseType: !7241, size: 192, offset: 192)
!7241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !7242)
!7242 = !{!7243, !7244, !7250}
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7241, file: !363, line: 245, baseType: !7200, size: 64)
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7241, file: !363, line: 246, baseType: !7245, size: 32, offset: 64)
!7245 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !7246)
!7246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7247, size: 32)
!7247 = !DISubroutineType(types: !7248)
!7248 = !{null, !7249}
!7249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7241, size: 32)
!7250 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7241, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7191, file: !647, line: 250, baseType: !7252, size: 288, offset: 384)
!7252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !714, line: 25, size: 288, elements: !7253)
!7253 = !{!7254, !7255, !7256, !7257, !7258, !7259, !7260, !7261, !7262}
!7254 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7252, file: !714, line: 26, baseType: !113, size: 32)
!7255 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7252, file: !714, line: 27, baseType: !113, size: 32, offset: 32)
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7252, file: !714, line: 28, baseType: !113, size: 32, offset: 64)
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7252, file: !714, line: 29, baseType: !113, size: 32, offset: 96)
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7252, file: !714, line: 30, baseType: !113, size: 32, offset: 128)
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7252, file: !714, line: 31, baseType: !113, size: 32, offset: 160)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7252, file: !714, line: 32, baseType: !113, size: 32, offset: 192)
!7261 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7252, file: !714, line: 33, baseType: !113, size: 32, offset: 224)
!7262 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7252, file: !714, line: 34, baseType: !113, size: 32, offset: 256)
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7191, file: !647, line: 253, baseType: !104, size: 32, offset: 672)
!7264 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7191, file: !647, line: 256, baseType: !7222, size: 64, offset: 704)
!7265 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7191, file: !647, line: 294, baseType: !108, size: 32, offset: 768)
!7266 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7191, file: !647, line: 300, baseType: !7267, size: 96, offset: 800)
!7267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !647, line: 149, size: 96, elements: !7268)
!7268 = !{!7269, !7270, !7271}
!7269 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7267, file: !647, line: 153, baseType: !22, size: 32)
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7267, file: !647, line: 162, baseType: !439, size: 32, offset: 32)
!7271 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7267, file: !647, line: 168, baseType: !439, size: 32, offset: 64)
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7191, file: !647, line: 325, baseType: !7273, size: 32, offset: 896)
!7273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7274, size: 32)
!7274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !7275)
!7275 = !{!7276, !7282, !7283}
!7276 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7274, file: !359, line: 5074, baseType: !7277, size: 96)
!7277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !740, line: 56, size: 96, elements: !7278)
!7278 = !{!7279, !7280, !7281}
!7279 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7277, file: !740, line: 57, baseType: !743, size: 32)
!7280 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7277, file: !740, line: 58, baseType: !104, size: 32, offset: 32)
!7281 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7277, file: !740, line: 59, baseType: !439, size: 32, offset: 64)
!7282 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7274, file: !359, line: 5075, baseType: !7222, size: 64, offset: 96)
!7283 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7274, file: !359, line: 5076, baseType: !7284, offset: 160)
!7284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7191, file: !647, line: 343, baseType: !7286, size: 64, offset: 928)
!7286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !714, line: 60, size: 64, elements: !7287)
!7287 = !{!7288, !7289}
!7288 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7286, file: !714, line: 63, baseType: !113, size: 32)
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7286, file: !714, line: 66, baseType: !113, size: 32, offset: 32)
!7290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7291, size: 32)
!7291 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5180, line: 44, baseType: !7292)
!7292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2382, line: 47, size: 8, elements: !7293)
!7293 = !{!7294}
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7292, file: !2382, line: 48, baseType: !107, size: 8)
!7295 = !{!7296, !7297, !7298, !7299, !7300, !7301, !7302, !7303}
!7296 = !DILocalVariable(name: "thread", arg: 1, scope: !7186, file: !7187, line: 56, type: !7190)
!7297 = !DILocalVariable(name: "stack", arg: 2, scope: !7186, file: !7187, line: 56, type: !7290)
!7298 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7186, file: !7187, line: 57, type: !443)
!7299 = !DILocalVariable(name: "entry", arg: 4, scope: !7186, file: !7187, line: 57, type: !5179)
!7300 = !DILocalVariable(name: "p1", arg: 5, scope: !7186, file: !7187, line: 58, type: !104)
!7301 = !DILocalVariable(name: "p2", arg: 6, scope: !7186, file: !7187, line: 58, type: !104)
!7302 = !DILocalVariable(name: "p3", arg: 7, scope: !7186, file: !7187, line: 58, type: !104)
!7303 = !DILocalVariable(name: "iframe", scope: !7186, file: !7187, line: 60, type: !2997)
!7304 = !DILocation(line: 0, scope: !7186)
!7305 = !DILocation(line: 85, column: 11, scope: !7186)
!7306 = !DILocation(line: 93, column: 10, scope: !7186)
!7307 = !DILocation(line: 98, column: 13, scope: !7186)
!7308 = !DILocation(line: 100, column: 15, scope: !7186)
!7309 = !DILocation(line: 100, column: 10, scope: !7186)
!7310 = !DILocation(line: 100, column: 13, scope: !7186)
!7311 = !DILocation(line: 101, column: 15, scope: !7186)
!7312 = !DILocation(line: 101, column: 10, scope: !7186)
!7313 = !DILocation(line: 101, column: 13, scope: !7186)
!7314 = !DILocation(line: 102, column: 15, scope: !7186)
!7315 = !DILocation(line: 102, column: 10, scope: !7186)
!7316 = !DILocation(line: 102, column: 13, scope: !7186)
!7317 = !DILocation(line: 103, column: 15, scope: !7186)
!7318 = !DILocation(line: 103, column: 10, scope: !7186)
!7319 = !DILocation(line: 103, column: 13, scope: !7186)
!7320 = !DILocation(line: 106, column: 10, scope: !7186)
!7321 = !DILocation(line: 106, column: 15, scope: !7186)
!7322 = !DILocation(line: 122, column: 29, scope: !7186)
!7323 = !DILocation(line: 122, column: 23, scope: !7186)
!7324 = !DILocation(line: 122, column: 27, scope: !7186)
!7325 = !DILocation(line: 123, column: 15, scope: !7186)
!7326 = !DILocation(line: 123, column: 23, scope: !7186)
!7327 = !DILocation(line: 143, column: 1, scope: !7186)
!7328 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !7187, file: !7187, line: 385, type: !7329, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !7332)
!7329 = !DISubroutineType(types: !7330)
!7330 = !{!113, !7331, !7331}
!7331 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!7332 = !{!7333, !7334, !7335, !7338}
!7333 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !7328, file: !7187, line: 385, type: !7331)
!7334 = !DILocalVariable(name: "psp", arg: 2, scope: !7328, file: !7187, line: 385, type: !7331)
!7335 = !DILocalVariable(name: "thread", scope: !7328, file: !7187, line: 388, type: !7336)
!7336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7337, size: 32)
!7337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7191)
!7338 = !DILocalVariable(name: "guard_len", scope: !7328, file: !7187, line: 405, type: !113)
!7339 = !DILocation(line: 0, scope: !7328)
!7340 = !DILocation(line: 388, column: 34, scope: !7328)
!7341 = !DILocation(line: 390, column: 13, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7328, file: !7187, line: 390, column: 6)
!7343 = !DILocation(line: 390, column: 6, scope: !7328)
!7344 = !DILocation(line: 438, column: 6, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7328, file: !7187, line: 438, column: 6)
!7346 = !DILocation(line: 438, column: 6, scope: !7328)
!7347 = !DILocation(line: 442, column: 3, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7345, file: !7187, line: 440, column: 22)
!7349 = !DILocation(line: 455, column: 1, scope: !7328)
!7350 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7187, file: !7187, line: 530, type: !7351, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !7353)
!7351 = !DISubroutineType(types: !7352)
!7352 = !{null, !7190, !443, !5179}
!7353 = !{!7354, !7355, !7356}
!7354 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7350, file: !7187, line: 530, type: !7190)
!7355 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7350, file: !7187, line: 530, type: !443)
!7356 = !DILocalVariable(name: "_main", arg: 3, scope: !7350, file: !7187, line: 531, type: !5179)
!7357 = !DILocation(line: 0, scope: !7350)
!7358 = !DILocation(line: 535, column: 11, scope: !7350)
!7359 = !DILocation(line: 560, column: 2, scope: !7350)
!7360 = !DILocation(line: 576, column: 2, scope: !7350)
!7361 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7362 = !DILocation(line: 603, column: 2, scope: !7350)
!7363 = distinct !DISubprogram(name: "z_arm_fault", scope: !7364, file: !7364, line: 1036, type: !7365, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3037, retainedNodes: !7380)
!7364 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7365 = !DISubroutineType(types: !7366)
!7366 = !{null, !113, !113, !113, !7367}
!7367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7368, size: 32)
!7368 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !714, line: 37, baseType: !7369)
!7369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !714, line: 25, size: 288, elements: !7370)
!7370 = !{!7371, !7372, !7373, !7374, !7375, !7376, !7377, !7378, !7379}
!7371 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7369, file: !714, line: 26, baseType: !113, size: 32)
!7372 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7369, file: !714, line: 27, baseType: !113, size: 32, offset: 32)
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7369, file: !714, line: 28, baseType: !113, size: 32, offset: 64)
!7374 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7369, file: !714, line: 29, baseType: !113, size: 32, offset: 96)
!7375 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7369, file: !714, line: 30, baseType: !113, size: 32, offset: 128)
!7376 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7369, file: !714, line: 31, baseType: !113, size: 32, offset: 160)
!7377 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7369, file: !714, line: 32, baseType: !113, size: 32, offset: 192)
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7369, file: !714, line: 33, baseType: !113, size: 32, offset: 224)
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7369, file: !714, line: 34, baseType: !113, size: 32, offset: 256)
!7380 = !{!7381, !7382, !7383, !7384, !7385, !7386, !7387, !7388, !7389, !7390}
!7381 = !DILocalVariable(name: "msp", arg: 1, scope: !7363, file: !7364, line: 1036, type: !113)
!7382 = !DILocalVariable(name: "psp", arg: 2, scope: !7363, file: !7364, line: 1036, type: !113)
!7383 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7363, file: !7364, line: 1036, type: !113)
!7384 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7363, file: !7364, line: 1037, type: !7367)
!7385 = !DILocalVariable(name: "reason", scope: !7363, file: !7364, line: 1039, type: !113)
!7386 = !DILocalVariable(name: "fault", scope: !7363, file: !7364, line: 1040, type: !108)
!7387 = !DILocalVariable(name: "recoverable", scope: !7363, file: !7364, line: 1041, type: !422)
!7388 = !DILocalVariable(name: "nested_exc", scope: !7363, file: !7364, line: 1041, type: !422)
!7389 = !DILocalVariable(name: "esf", scope: !7363, file: !7364, line: 1042, type: !3065)
!7390 = !DILocalVariable(name: "esf_copy", scope: !7363, file: !7364, line: 1047, type: !3066)
!7391 = !DILocation(line: 0, scope: !7363)
!7392 = !DILocation(line: 1040, column: 19, scope: !7363)
!7393 = !DILocation(line: 1040, column: 24, scope: !7363)
!7394 = !DILocation(line: 1041, column: 2, scope: !7363)
!7395 = !DILocation(line: 1047, column: 2, scope: !7363)
!7396 = !DILocation(line: 1047, column: 15, scope: !7363)
!7397 = !DILocalVariable(name: "key", arg: 1, scope: !7398, file: !4087, line: 84, type: !32)
!7398 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4087, file: !4087, line: 84, type: !4100, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3037, retainedNodes: !7399)
!7399 = !{!7397}
!7400 = !DILocation(line: 0, scope: !7398, inlinedAt: !7401)
!7401 = distinct !DILocation(line: 1050, column: 2, scope: !7363)
!7402 = !DILocation(line: 95, column: 2, scope: !7398, inlinedAt: !7401)
!7403 = !{i64 2272498}
!7404 = !DILocation(line: 1055, column: 9, scope: !7363)
!7405 = !DILocation(line: 1063, column: 11, scope: !7363)
!7406 = !DILocation(line: 1064, column: 6, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7363, file: !7364, line: 1064, column: 6)
!7408 = !{i8 0, i8 2}
!7409 = !DILocation(line: 1064, column: 6, scope: !7363)
!7410 = !DILocation(line: 1070, column: 20, scope: !7363)
!7411 = !DILocation(line: 1070, column: 2, scope: !7363)
!7412 = !DILocation(line: 1089, column: 6, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7363, file: !7364, line: 1089, column: 6)
!7414 = !DILocation(line: 0, scope: !7413)
!7415 = !DILocation(line: 1089, column: 6, scope: !7363)
!7416 = !DILocation(line: 1090, column: 28, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7418, file: !7364, line: 1090, column: 7)
!7418 = distinct !DILexicalBlock(scope: !7413, file: !7364, line: 1089, column: 18)
!7419 = !DILocation(line: 1090, column: 44, scope: !7417)
!7420 = !DILocation(line: 1090, column: 7, scope: !7418)
!7421 = !DILocation(line: 1091, column: 24, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !7417, file: !7364, line: 1090, column: 50)
!7423 = !DILocation(line: 1092, column: 3, scope: !7422)
!7424 = !DILocation(line: 1094, column: 23, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7413, file: !7364, line: 1093, column: 9)
!7426 = !DILocation(line: 1097, column: 2, scope: !7363)
!7427 = !DILocation(line: 1098, column: 1, scope: !7363)
!7428 = distinct !DISubprogram(name: "get_esf", scope: !7364, file: !7364, line: 894, type: !7429, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3037, retainedNodes: !7432)
!7429 = !DISubroutineType(types: !7430)
!7430 = !{!3065, !113, !113, !113, !7431}
!7431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!7432 = !{!7433, !7434, !7435, !7436, !7437, !7438}
!7433 = !DILocalVariable(name: "msp", arg: 1, scope: !7428, file: !7364, line: 894, type: !113)
!7434 = !DILocalVariable(name: "psp", arg: 2, scope: !7428, file: !7364, line: 894, type: !113)
!7435 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7428, file: !7364, line: 894, type: !113)
!7436 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7428, file: !7364, line: 895, type: !7431)
!7437 = !DILocalVariable(name: "alternative_state_exc", scope: !7428, file: !7364, line: 897, type: !422)
!7438 = !DILocalVariable(name: "ptr_esf", scope: !7428, file: !7364, line: 898, type: !3065)
!7439 = !DILocation(line: 0, scope: !7428)
!7440 = !DILocation(line: 900, column: 14, scope: !7428)
!7441 = !DILocation(line: 902, column: 49, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7428, file: !7364, line: 902, column: 6)
!7443 = !DILocation(line: 902, column: 6, scope: !7428)
!7444 = !DILocation(line: 983, column: 44, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7428, file: !7364, line: 983, column: 6)
!7446 = !DILocation(line: 985, column: 3, scope: !7447)
!7447 = distinct !DILexicalBlock(scope: !7448, file: !7364, line: 985, column: 3)
!7448 = distinct !DILexicalBlock(scope: !7449, file: !7364, line: 985, column: 3)
!7449 = distinct !DILexicalBlock(scope: !7450, file: !7364, line: 985, column: 3)
!7450 = distinct !DILexicalBlock(scope: !7451, file: !7364, line: 985, column: 3)
!7451 = distinct !DILexicalBlock(scope: !7445, file: !7364, line: 984, column: 47)
!7452 = !DILocation(line: 986, column: 3, scope: !7451)
!7453 = !DILocation(line: 983, column: 18, scope: !7445)
!7454 = !DILocation(line: 991, column: 7, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !7456, file: !7364, line: 990, column: 30)
!7456 = distinct !DILexicalBlock(scope: !7428, file: !7364, line: 990, column: 6)
!7457 = !DILocation(line: 998, column: 16, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7459, file: !7364, line: 995, column: 10)
!7459 = distinct !DILexicalBlock(scope: !7455, file: !7364, line: 991, column: 7)
!7460 = !DILocation(line: 1002, column: 2, scope: !7428)
!7461 = !DILocation(line: 1003, column: 1, scope: !7428)
!7462 = distinct !DISubprogram(name: "fault_handle", scope: !7364, file: !7364, line: 786, type: !7463, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3037, retainedNodes: !7465)
!7463 = !DISubroutineType(types: !7464)
!7464 = !{!113, !3065, !108, !7431}
!7465 = !{!7466, !7467, !7468, !7469}
!7466 = !DILocalVariable(name: "esf", arg: 1, scope: !7462, file: !7364, line: 786, type: !3065)
!7467 = !DILocalVariable(name: "fault", arg: 2, scope: !7462, file: !7364, line: 786, type: !108)
!7468 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7462, file: !7364, line: 786, type: !7431)
!7469 = !DILocalVariable(name: "reason", scope: !7462, file: !7364, line: 788, type: !113)
!7470 = !DILocation(line: 0, scope: !7462)
!7471 = !DILocation(line: 790, column: 15, scope: !7462)
!7472 = !DILocation(line: 792, column: 2, scope: !7462)
!7473 = !DILocation(line: 794, column: 12, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7462, file: !7364, line: 792, column: 17)
!7475 = !DILocation(line: 795, column: 3, scope: !7474)
!7476 = !DILocation(line: 800, column: 12, scope: !7474)
!7477 = !DILocation(line: 801, column: 3, scope: !7474)
!7478 = !DILocation(line: 803, column: 12, scope: !7474)
!7479 = !DILocation(line: 804, column: 3, scope: !7474)
!7480 = !DILocation(line: 806, column: 12, scope: !7474)
!7481 = !DILocation(line: 807, column: 3, scope: !7474)
!7482 = !DILocation(line: 814, column: 3, scope: !7474)
!7483 = !DILocation(line: 815, column: 3, scope: !7474)
!7484 = !DILocation(line: 820, column: 3, scope: !7474)
!7485 = !DILocation(line: 821, column: 3, scope: !7474)
!7486 = !DILocation(line: 829, column: 2, scope: !7462)
!7487 = distinct !DISubprogram(name: "hard_fault", scope: !7364, file: !7364, line: 709, type: !7488, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3037, retainedNodes: !7490)
!7488 = !DISubroutineType(types: !7489)
!7489 = !{!113, !3065, !7431}
!7490 = !{!7491, !7492, !7493}
!7491 = !DILocalVariable(name: "esf", arg: 1, scope: !7487, file: !7364, line: 709, type: !3065)
!7492 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7487, file: !7364, line: 709, type: !7431)
!7493 = !DILocalVariable(name: "reason", scope: !7487, file: !7364, line: 711, type: !113)
!7494 = !DILocation(line: 0, scope: !7487)
!7495 = !DILocation(line: 713, column: 2, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7497, file: !7364, line: 713, column: 2)
!7497 = distinct !DILexicalBlock(scope: !7498, file: !7364, line: 713, column: 2)
!7498 = distinct !DILexicalBlock(scope: !7499, file: !7364, line: 713, column: 2)
!7499 = distinct !DILexicalBlock(scope: !7487, file: !7364, line: 713, column: 2)
!7500 = !DILocation(line: 732, column: 15, scope: !7487)
!7501 = !DILocation(line: 734, column: 12, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7487, file: !7364, line: 734, column: 6)
!7503 = !DILocation(line: 734, column: 17, scope: !7502)
!7504 = !DILocation(line: 734, column: 41, scope: !7502)
!7505 = !DILocation(line: 734, column: 6, scope: !7487)
!7506 = !DILocation(line: 735, column: 3, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7508, file: !7364, line: 735, column: 3)
!7508 = distinct !DILexicalBlock(scope: !7509, file: !7364, line: 735, column: 3)
!7509 = distinct !DILexicalBlock(scope: !7510, file: !7364, line: 735, column: 3)
!7510 = distinct !DILexicalBlock(scope: !7511, file: !7364, line: 735, column: 3)
!7511 = distinct !DILexicalBlock(scope: !7502, file: !7364, line: 734, column: 47)
!7512 = !DILocation(line: 736, column: 2, scope: !7511)
!7513 = !DILocation(line: 736, column: 19, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7502, file: !7364, line: 736, column: 13)
!7515 = !DILocation(line: 736, column: 49, scope: !7514)
!7516 = !DILocation(line: 736, column: 13, scope: !7502)
!7517 = !DILocation(line: 737, column: 3, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7519, file: !7364, line: 737, column: 3)
!7519 = distinct !DILexicalBlock(scope: !7520, file: !7364, line: 737, column: 3)
!7520 = distinct !DILexicalBlock(scope: !7521, file: !7364, line: 737, column: 3)
!7521 = distinct !DILexicalBlock(scope: !7522, file: !7364, line: 737, column: 3)
!7522 = distinct !DILexicalBlock(scope: !7514, file: !7364, line: 736, column: 55)
!7523 = !DILocation(line: 738, column: 2, scope: !7522)
!7524 = !DILocation(line: 738, column: 19, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !7514, file: !7364, line: 738, column: 13)
!7526 = !DILocation(line: 738, column: 24, scope: !7525)
!7527 = !DILocation(line: 738, column: 47, scope: !7525)
!7528 = !DILocation(line: 738, column: 13, scope: !7514)
!7529 = !DILocation(line: 739, column: 3, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7531, file: !7364, line: 739, column: 3)
!7531 = distinct !DILexicalBlock(scope: !7532, file: !7364, line: 739, column: 3)
!7532 = distinct !DILexicalBlock(scope: !7533, file: !7364, line: 739, column: 3)
!7533 = distinct !DILexicalBlock(scope: !7534, file: !7364, line: 739, column: 3)
!7534 = distinct !DILexicalBlock(scope: !7525, file: !7364, line: 738, column: 53)
!7535 = !DILocation(line: 740, column: 7, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !7534, file: !7364, line: 740, column: 7)
!7537 = !DILocation(line: 740, column: 7, scope: !7534)
!7538 = !DILocation(line: 741, column: 4, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7540, file: !7364, line: 741, column: 4)
!7540 = distinct !DILexicalBlock(scope: !7541, file: !7364, line: 741, column: 4)
!7541 = distinct !DILexicalBlock(scope: !7542, file: !7364, line: 741, column: 4)
!7542 = distinct !DILexicalBlock(scope: !7543, file: !7364, line: 741, column: 4)
!7543 = distinct !DILexicalBlock(scope: !7536, file: !7364, line: 740, column: 38)
!7544 = !DILocation(line: 742, column: 24, scope: !7543)
!7545 = !DILocation(line: 743, column: 3, scope: !7543)
!7546 = !DILocation(line: 743, column: 20, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7536, file: !7364, line: 743, column: 14)
!7548 = !DILocation(line: 743, column: 25, scope: !7547)
!7549 = !DILocation(line: 743, column: 52, scope: !7547)
!7550 = !DILocation(line: 743, column: 14, scope: !7536)
!7551 = !DILocation(line: 744, column: 13, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7547, file: !7364, line: 743, column: 58)
!7553 = !DILocation(line: 745, column: 3, scope: !7552)
!7554 = !DILocation(line: 745, column: 20, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !7547, file: !7364, line: 745, column: 14)
!7556 = !DILocation(line: 745, column: 25, scope: !7555)
!7557 = !DILocation(line: 745, column: 52, scope: !7555)
!7558 = !DILocation(line: 745, column: 14, scope: !7547)
!7559 = !DILocation(line: 746, column: 13, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7555, file: !7364, line: 745, column: 58)
!7561 = !DILocation(line: 747, column: 3, scope: !7560)
!7562 = !DILocation(line: 747, column: 20, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7555, file: !7364, line: 747, column: 14)
!7564 = !DILocation(line: 747, column: 52, scope: !7563)
!7565 = !DILocation(line: 747, column: 14, scope: !7555)
!7566 = !DILocation(line: 748, column: 13, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7563, file: !7364, line: 747, column: 58)
!7568 = !DILocation(line: 753, column: 3, scope: !7567)
!7569 = !DILocation(line: 766, column: 2, scope: !7487)
!7570 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7364, file: !7364, line: 229, type: !7463, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3037, retainedNodes: !7571)
!7571 = !{!7572, !7573, !7574, !7575, !7576, !7577, !7580}
!7572 = !DILocalVariable(name: "esf", arg: 1, scope: !7570, file: !7364, line: 229, type: !3065)
!7573 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7570, file: !7364, line: 229, type: !108)
!7574 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7570, file: !7364, line: 230, type: !7431)
!7575 = !DILocalVariable(name: "reason", scope: !7570, file: !7364, line: 232, type: !113)
!7576 = !DILocalVariable(name: "mmfar", scope: !7570, file: !7364, line: 233, type: !113)
!7577 = !DILocalVariable(name: "temp", scope: !7578, file: !7364, line: 254, type: !113)
!7578 = distinct !DILexicalBlock(scope: !7579, file: !7364, line: 244, column: 48)
!7579 = distinct !DILexicalBlock(scope: !7570, file: !7364, line: 244, column: 6)
!7580 = !DILocalVariable(name: "min_stack_ptr", scope: !7581, file: !7364, line: 309, type: !113)
!7581 = distinct !DILexicalBlock(scope: !7582, file: !7364, line: 308, column: 43)
!7582 = distinct !DILexicalBlock(scope: !7583, file: !7364, line: 308, column: 7)
!7583 = distinct !DILexicalBlock(scope: !7584, file: !7364, line: 289, column: 40)
!7584 = distinct !DILexicalBlock(scope: !7570, file: !7364, line: 288, column: 6)
!7585 = !DILocation(line: 0, scope: !7570)
!7586 = !DILocation(line: 235, column: 2, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7588, file: !7364, line: 235, column: 2)
!7588 = distinct !DILexicalBlock(scope: !7589, file: !7364, line: 235, column: 2)
!7589 = distinct !DILexicalBlock(scope: !7590, file: !7364, line: 235, column: 2)
!7590 = distinct !DILexicalBlock(scope: !7570, file: !7364, line: 235, column: 2)
!7591 = !DILocation(line: 237, column: 12, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7570, file: !7364, line: 237, column: 6)
!7593 = !DILocation(line: 237, column: 17, scope: !7592)
!7594 = !DILocation(line: 237, column: 41, scope: !7592)
!7595 = !DILocation(line: 237, column: 6, scope: !7570)
!7596 = !DILocation(line: 238, column: 3, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7598, file: !7364, line: 238, column: 3)
!7598 = distinct !DILexicalBlock(scope: !7599, file: !7364, line: 238, column: 3)
!7599 = distinct !DILexicalBlock(scope: !7600, file: !7364, line: 238, column: 3)
!7600 = distinct !DILexicalBlock(scope: !7601, file: !7364, line: 238, column: 3)
!7601 = distinct !DILexicalBlock(scope: !7592, file: !7364, line: 237, column: 47)
!7602 = !DILocation(line: 240, column: 2, scope: !7601)
!7603 = !DILocation(line: 241, column: 12, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7570, file: !7364, line: 241, column: 6)
!7605 = !DILocation(line: 241, column: 17, scope: !7604)
!7606 = !DILocation(line: 241, column: 43, scope: !7604)
!7607 = !DILocation(line: 241, column: 6, scope: !7570)
!7608 = !DILocation(line: 242, column: 3, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7610, file: !7364, line: 242, column: 3)
!7610 = distinct !DILexicalBlock(scope: !7611, file: !7364, line: 242, column: 3)
!7611 = distinct !DILexicalBlock(scope: !7612, file: !7364, line: 242, column: 3)
!7612 = distinct !DILexicalBlock(scope: !7613, file: !7364, line: 242, column: 3)
!7613 = distinct !DILexicalBlock(scope: !7604, file: !7364, line: 241, column: 49)
!7614 = !DILocation(line: 243, column: 2, scope: !7613)
!7615 = !DILocation(line: 244, column: 12, scope: !7579)
!7616 = !DILocation(line: 244, column: 17, scope: !7579)
!7617 = !DILocation(line: 244, column: 42, scope: !7579)
!7618 = !DILocation(line: 244, column: 6, scope: !7570)
!7619 = !DILocation(line: 245, column: 3, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7621, file: !7364, line: 245, column: 3)
!7621 = distinct !DILexicalBlock(scope: !7622, file: !7364, line: 245, column: 3)
!7622 = distinct !DILexicalBlock(scope: !7623, file: !7364, line: 245, column: 3)
!7623 = distinct !DILexicalBlock(scope: !7578, file: !7364, line: 245, column: 3)
!7624 = !DILocation(line: 254, column: 24, scope: !7578)
!7625 = !DILocation(line: 0, scope: !7578)
!7626 = !DILocation(line: 256, column: 13, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7578, file: !7364, line: 256, column: 7)
!7628 = !DILocation(line: 256, column: 18, scope: !7627)
!7629 = !DILocation(line: 256, column: 44, scope: !7627)
!7630 = !DILocation(line: 256, column: 7, scope: !7578)
!7631 = !DILocation(line: 258, column: 4, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7633, file: !7364, line: 258, column: 4)
!7633 = distinct !DILexicalBlock(scope: !7634, file: !7364, line: 258, column: 4)
!7634 = distinct !DILexicalBlock(scope: !7635, file: !7364, line: 258, column: 4)
!7635 = distinct !DILexicalBlock(scope: !7636, file: !7364, line: 258, column: 4)
!7636 = distinct !DILexicalBlock(scope: !7627, file: !7364, line: 256, column: 50)
!7637 = !DILocation(line: 259, column: 24, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7636, file: !7364, line: 259, column: 8)
!7639 = !DILocation(line: 259, column: 8, scope: !7636)
!7640 = !DILocation(line: 261, column: 15, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7638, file: !7364, line: 259, column: 30)
!7642 = !DILocation(line: 262, column: 4, scope: !7641)
!7643 = !DILocation(line: 265, column: 12, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7570, file: !7364, line: 265, column: 6)
!7645 = !DILocation(line: 265, column: 17, scope: !7644)
!7646 = !DILocation(line: 265, column: 42, scope: !7644)
!7647 = !DILocation(line: 265, column: 6, scope: !7570)
!7648 = !DILocation(line: 266, column: 3, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7650, file: !7364, line: 266, column: 3)
!7650 = distinct !DILexicalBlock(scope: !7651, file: !7364, line: 266, column: 3)
!7651 = distinct !DILexicalBlock(scope: !7652, file: !7364, line: 266, column: 3)
!7652 = distinct !DILexicalBlock(scope: !7653, file: !7364, line: 266, column: 3)
!7653 = distinct !DILexicalBlock(scope: !7644, file: !7364, line: 265, column: 48)
!7654 = !DILocation(line: 267, column: 2, scope: !7653)
!7655 = !DILocation(line: 269, column: 12, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7570, file: !7364, line: 269, column: 6)
!7657 = !DILocation(line: 269, column: 17, scope: !7656)
!7658 = !DILocation(line: 269, column: 41, scope: !7656)
!7659 = !DILocation(line: 269, column: 6, scope: !7570)
!7660 = !DILocation(line: 270, column: 3, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7662, file: !7364, line: 270, column: 3)
!7662 = distinct !DILexicalBlock(scope: !7663, file: !7364, line: 270, column: 3)
!7663 = distinct !DILexicalBlock(scope: !7664, file: !7364, line: 270, column: 3)
!7664 = distinct !DILexicalBlock(scope: !7665, file: !7364, line: 270, column: 3)
!7665 = distinct !DILexicalBlock(scope: !7656, file: !7364, line: 269, column: 47)
!7666 = !DILocation(line: 272, column: 2, scope: !7665)
!7667 = !DILocation(line: 288, column: 12, scope: !7584)
!7668 = !DILocation(line: 288, column: 17, scope: !7584)
!7669 = !DILocation(line: 288, column: 41, scope: !7584)
!7670 = !DILocation(line: 289, column: 9, scope: !7584)
!7671 = !DILocation(line: 289, column: 14, scope: !7584)
!7672 = !DILocation(line: 288, column: 6, scope: !7570)
!7673 = !DILocation(line: 308, column: 12, scope: !7582)
!7674 = !DILocation(line: 308, column: 17, scope: !7582)
!7675 = !DILocation(line: 308, column: 7, scope: !7583)
!7676 = !DILocation(line: 310, column: 6, scope: !7581)
!7677 = !DILocation(line: 309, column: 29, scope: !7581)
!7678 = !DILocation(line: 0, scope: !7581)
!7679 = !DILocation(line: 312, column: 8, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7581, file: !7364, line: 312, column: 8)
!7681 = !DILocation(line: 312, column: 8, scope: !7581)
!7682 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7683, file: !7063, line: 1099, type: !113)
!7683 = distinct !DISubprogram(name: "__set_PSP", scope: !7063, file: !7063, line: 1099, type: !7154, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3037, retainedNodes: !7684)
!7684 = !{!7682}
!7685 = !DILocation(line: 0, scope: !7683, inlinedAt: !7686)
!7686 = distinct !DILocation(line: 338, column: 5, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7680, file: !7364, line: 312, column: 23)
!7688 = !DILocation(line: 1101, column: 3, scope: !7683, inlinedAt: !7686)
!7689 = !{i64 3590901}
!7690 = !DILocation(line: 341, column: 4, scope: !7687)
!7691 = !DILocation(line: 360, column: 12, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7570, file: !7364, line: 360, column: 6)
!7693 = !DILocation(line: 360, column: 17, scope: !7692)
!7694 = !DILocation(line: 360, column: 41, scope: !7692)
!7695 = !DILocation(line: 360, column: 6, scope: !7570)
!7696 = !DILocation(line: 361, column: 14, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7692, file: !7364, line: 360, column: 47)
!7698 = !DILocation(line: 362, column: 2, scope: !7697)
!7699 = !DILocation(line: 366, column: 12, scope: !7570)
!7700 = !DILocation(line: 369, column: 15, scope: !7570)
!7701 = !DILocation(line: 371, column: 2, scope: !7570)
!7702 = distinct !DISubprogram(name: "bus_fault", scope: !7364, file: !7364, line: 383, type: !7703, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3037, retainedNodes: !7705)
!7703 = !DISubroutineType(types: !7704)
!7704 = !{!108, !3065, !108, !7431}
!7705 = !{!7706, !7707, !7708, !7709, !7710}
!7706 = !DILocalVariable(name: "esf", arg: 1, scope: !7702, file: !7364, line: 383, type: !3065)
!7707 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7702, file: !7364, line: 383, type: !108)
!7708 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7702, file: !7364, line: 383, type: !7431)
!7709 = !DILocalVariable(name: "reason", scope: !7702, file: !7364, line: 385, type: !113)
!7710 = !DILocalVariable(name: "bfar", scope: !7711, file: !7364, line: 405, type: !113)
!7711 = distinct !DILexicalBlock(scope: !7712, file: !7364, line: 395, column: 42)
!7712 = distinct !DILexicalBlock(scope: !7702, file: !7364, line: 395, column: 6)
!7713 = !DILocation(line: 0, scope: !7702)
!7714 = !DILocation(line: 387, column: 2, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7716, file: !7364, line: 387, column: 2)
!7716 = distinct !DILexicalBlock(scope: !7717, file: !7364, line: 387, column: 2)
!7717 = distinct !DILexicalBlock(scope: !7718, file: !7364, line: 387, column: 2)
!7718 = distinct !DILexicalBlock(scope: !7702, file: !7364, line: 387, column: 2)
!7719 = !DILocation(line: 389, column: 11, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7702, file: !7364, line: 389, column: 6)
!7721 = !DILocation(line: 389, column: 16, scope: !7720)
!7722 = !DILocation(line: 389, column: 6, scope: !7702)
!7723 = !DILocation(line: 390, column: 3, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7725, file: !7364, line: 390, column: 3)
!7725 = distinct !DILexicalBlock(scope: !7726, file: !7364, line: 390, column: 3)
!7726 = distinct !DILexicalBlock(scope: !7727, file: !7364, line: 390, column: 3)
!7727 = distinct !DILexicalBlock(scope: !7728, file: !7364, line: 390, column: 3)
!7728 = distinct !DILexicalBlock(scope: !7720, file: !7364, line: 389, column: 39)
!7729 = !DILocation(line: 391, column: 2, scope: !7728)
!7730 = !DILocation(line: 392, column: 11, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7702, file: !7364, line: 392, column: 6)
!7732 = !DILocation(line: 392, column: 16, scope: !7731)
!7733 = !DILocation(line: 392, column: 6, scope: !7702)
!7734 = !DILocation(line: 393, column: 3, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7736, file: !7364, line: 393, column: 3)
!7736 = distinct !DILexicalBlock(scope: !7737, file: !7364, line: 393, column: 3)
!7737 = distinct !DILexicalBlock(scope: !7738, file: !7364, line: 393, column: 3)
!7738 = distinct !DILexicalBlock(scope: !7739, file: !7364, line: 393, column: 3)
!7739 = distinct !DILexicalBlock(scope: !7731, file: !7364, line: 392, column: 41)
!7740 = !DILocation(line: 394, column: 2, scope: !7739)
!7741 = !DILocation(line: 395, column: 11, scope: !7712)
!7742 = !DILocation(line: 395, column: 16, scope: !7712)
!7743 = !DILocation(line: 395, column: 6, scope: !7702)
!7744 = !DILocation(line: 396, column: 3, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7746, file: !7364, line: 396, column: 3)
!7746 = distinct !DILexicalBlock(scope: !7747, file: !7364, line: 396, column: 3)
!7747 = distinct !DILexicalBlock(scope: !7748, file: !7364, line: 396, column: 3)
!7748 = distinct !DILexicalBlock(scope: !7711, file: !7364, line: 396, column: 3)
!7749 = !DILocation(line: 405, column: 3, scope: !7711)
!7750 = !DILocation(line: 0, scope: !7711)
!7751 = !DILocation(line: 407, column: 13, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7711, file: !7364, line: 407, column: 7)
!7753 = !DILocation(line: 407, column: 18, scope: !7752)
!7754 = !DILocation(line: 407, column: 44, scope: !7752)
!7755 = !DILocation(line: 407, column: 7, scope: !7711)
!7756 = !DILocation(line: 408, column: 4, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7758, file: !7364, line: 408, column: 4)
!7758 = distinct !DILexicalBlock(scope: !7759, file: !7364, line: 408, column: 4)
!7759 = distinct !DILexicalBlock(scope: !7760, file: !7364, line: 408, column: 4)
!7760 = distinct !DILexicalBlock(scope: !7761, file: !7364, line: 408, column: 4)
!7761 = distinct !DILexicalBlock(scope: !7752, file: !7364, line: 407, column: 50)
!7762 = !DILocation(line: 409, column: 24, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7761, file: !7364, line: 409, column: 8)
!7764 = !DILocation(line: 409, column: 8, scope: !7761)
!7765 = !DILocation(line: 411, column: 15, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !7763, file: !7364, line: 409, column: 30)
!7767 = !DILocation(line: 412, column: 4, scope: !7766)
!7768 = !DILocation(line: 415, column: 11, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !7702, file: !7364, line: 415, column: 6)
!7770 = !DILocation(line: 415, column: 16, scope: !7769)
!7771 = !DILocation(line: 415, column: 6, scope: !7702)
!7772 = !DILocation(line: 416, column: 3, scope: !7773)
!7773 = distinct !DILexicalBlock(scope: !7774, file: !7364, line: 416, column: 3)
!7774 = distinct !DILexicalBlock(scope: !7775, file: !7364, line: 416, column: 3)
!7775 = distinct !DILexicalBlock(scope: !7776, file: !7364, line: 416, column: 3)
!7776 = distinct !DILexicalBlock(scope: !7777, file: !7364, line: 416, column: 3)
!7777 = distinct !DILexicalBlock(scope: !7769, file: !7364, line: 415, column: 44)
!7778 = !DILocation(line: 417, column: 2, scope: !7777)
!7779 = !DILocation(line: 418, column: 12, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7702, file: !7364, line: 418, column: 6)
!7781 = !DILocation(line: 418, column: 17, scope: !7780)
!7782 = !DILocation(line: 418, column: 41, scope: !7780)
!7783 = !DILocation(line: 418, column: 6, scope: !7702)
!7784 = !DILocation(line: 423, column: 18, scope: !7785)
!7785 = distinct !DILexicalBlock(scope: !7780, file: !7364, line: 423, column: 13)
!7786 = !DILocation(line: 423, column: 23, scope: !7785)
!7787 = !DILocation(line: 423, column: 13, scope: !7780)
!7788 = !DILocation(line: 0, scope: !7780)
!7789 = !DILocation(line: 524, column: 12, scope: !7702)
!7790 = !DILocation(line: 526, column: 15, scope: !7702)
!7791 = !DILocation(line: 528, column: 2, scope: !7702)
!7792 = distinct !DISubprogram(name: "usage_fault", scope: !7364, file: !7364, line: 539, type: !7793, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3037, retainedNodes: !7797)
!7793 = !DISubroutineType(types: !7794)
!7794 = !{!113, !7795}
!7795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7796, size: 32)
!7796 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3066)
!7797 = !{!7798, !7799}
!7798 = !DILocalVariable(name: "esf", arg: 1, scope: !7792, file: !7364, line: 539, type: !7795)
!7799 = !DILocalVariable(name: "reason", scope: !7792, file: !7364, line: 541, type: !113)
!7800 = !DILocation(line: 0, scope: !7792)
!7801 = !DILocation(line: 543, column: 2, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7803, file: !7364, line: 543, column: 2)
!7803 = distinct !DILexicalBlock(scope: !7804, file: !7364, line: 543, column: 2)
!7804 = distinct !DILexicalBlock(scope: !7805, file: !7364, line: 543, column: 2)
!7805 = distinct !DILexicalBlock(scope: !7792, file: !7364, line: 543, column: 2)
!7806 = !DILocation(line: 546, column: 12, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7792, file: !7364, line: 546, column: 6)
!7808 = !DILocation(line: 546, column: 17, scope: !7807)
!7809 = !DILocation(line: 546, column: 43, scope: !7807)
!7810 = !DILocation(line: 546, column: 6, scope: !7792)
!7811 = !DILocation(line: 547, column: 3, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7813, file: !7364, line: 547, column: 3)
!7813 = distinct !DILexicalBlock(scope: !7814, file: !7364, line: 547, column: 3)
!7814 = distinct !DILexicalBlock(scope: !7815, file: !7364, line: 547, column: 3)
!7815 = distinct !DILexicalBlock(scope: !7816, file: !7364, line: 547, column: 3)
!7816 = distinct !DILexicalBlock(scope: !7807, file: !7364, line: 546, column: 49)
!7817 = !DILocation(line: 548, column: 2, scope: !7816)
!7818 = !DILocation(line: 549, column: 12, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7792, file: !7364, line: 549, column: 6)
!7820 = !DILocation(line: 549, column: 17, scope: !7819)
!7821 = !DILocation(line: 549, column: 43, scope: !7819)
!7822 = !DILocation(line: 549, column: 6, scope: !7792)
!7823 = !DILocation(line: 550, column: 3, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7825, file: !7364, line: 550, column: 3)
!7825 = distinct !DILexicalBlock(scope: !7826, file: !7364, line: 550, column: 3)
!7826 = distinct !DILexicalBlock(scope: !7827, file: !7364, line: 550, column: 3)
!7827 = distinct !DILexicalBlock(scope: !7828, file: !7364, line: 550, column: 3)
!7828 = distinct !DILexicalBlock(scope: !7819, file: !7364, line: 549, column: 49)
!7829 = !DILocation(line: 551, column: 2, scope: !7828)
!7830 = !DILocation(line: 567, column: 12, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7792, file: !7364, line: 567, column: 6)
!7832 = !DILocation(line: 567, column: 17, scope: !7831)
!7833 = !DILocation(line: 567, column: 38, scope: !7831)
!7834 = !DILocation(line: 567, column: 6, scope: !7792)
!7835 = !DILocation(line: 568, column: 3, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7837, file: !7364, line: 568, column: 3)
!7837 = distinct !DILexicalBlock(scope: !7838, file: !7364, line: 568, column: 3)
!7838 = distinct !DILexicalBlock(scope: !7839, file: !7364, line: 568, column: 3)
!7839 = distinct !DILexicalBlock(scope: !7840, file: !7364, line: 568, column: 3)
!7840 = distinct !DILexicalBlock(scope: !7831, file: !7364, line: 567, column: 44)
!7841 = !DILocation(line: 569, column: 2, scope: !7840)
!7842 = !DILocation(line: 570, column: 12, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7792, file: !7364, line: 570, column: 6)
!7844 = !DILocation(line: 570, column: 17, scope: !7843)
!7845 = !DILocation(line: 570, column: 39, scope: !7843)
!7846 = !DILocation(line: 570, column: 6, scope: !7792)
!7847 = !DILocation(line: 571, column: 3, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7849, file: !7364, line: 571, column: 3)
!7849 = distinct !DILexicalBlock(scope: !7850, file: !7364, line: 571, column: 3)
!7850 = distinct !DILexicalBlock(scope: !7851, file: !7364, line: 571, column: 3)
!7851 = distinct !DILexicalBlock(scope: !7852, file: !7364, line: 571, column: 3)
!7852 = distinct !DILexicalBlock(scope: !7843, file: !7364, line: 570, column: 45)
!7853 = !DILocation(line: 572, column: 2, scope: !7852)
!7854 = !DILocation(line: 573, column: 12, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7792, file: !7364, line: 573, column: 6)
!7856 = !DILocation(line: 573, column: 17, scope: !7855)
!7857 = !DILocation(line: 573, column: 42, scope: !7855)
!7858 = !DILocation(line: 573, column: 6, scope: !7792)
!7859 = !DILocation(line: 574, column: 3, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7861, file: !7364, line: 574, column: 3)
!7861 = distinct !DILexicalBlock(scope: !7862, file: !7364, line: 574, column: 3)
!7862 = distinct !DILexicalBlock(scope: !7863, file: !7364, line: 574, column: 3)
!7863 = distinct !DILexicalBlock(scope: !7864, file: !7364, line: 574, column: 3)
!7864 = distinct !DILexicalBlock(scope: !7855, file: !7364, line: 573, column: 48)
!7865 = !DILocation(line: 575, column: 2, scope: !7864)
!7866 = !DILocation(line: 576, column: 12, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7792, file: !7364, line: 576, column: 6)
!7868 = !DILocation(line: 576, column: 17, scope: !7867)
!7869 = !DILocation(line: 576, column: 44, scope: !7867)
!7870 = !DILocation(line: 576, column: 6, scope: !7792)
!7871 = !DILocation(line: 577, column: 3, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7873, file: !7364, line: 577, column: 3)
!7873 = distinct !DILexicalBlock(scope: !7874, file: !7364, line: 577, column: 3)
!7874 = distinct !DILexicalBlock(scope: !7875, file: !7364, line: 577, column: 3)
!7875 = distinct !DILexicalBlock(scope: !7876, file: !7364, line: 577, column: 3)
!7876 = distinct !DILexicalBlock(scope: !7867, file: !7364, line: 576, column: 50)
!7877 = !DILocation(line: 578, column: 2, scope: !7876)
!7878 = !DILocation(line: 581, column: 12, scope: !7792)
!7879 = !DILocation(line: 583, column: 2, scope: !7792)
!7880 = distinct !DISubprogram(name: "debug_monitor", scope: !7364, file: !7364, line: 632, type: !7881, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3037, retainedNodes: !7883)
!7881 = !DISubroutineType(types: !7882)
!7882 = !{null, !3065, !7431}
!7883 = !{!7884, !7885}
!7884 = !DILocalVariable(name: "esf", arg: 1, scope: !7880, file: !7364, line: 632, type: !3065)
!7885 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7880, file: !7364, line: 632, type: !7431)
!7886 = !DILocation(line: 0, scope: !7880)
!7887 = !DILocation(line: 634, column: 15, scope: !7880)
!7888 = !DILocation(line: 636, column: 2, scope: !7889)
!7889 = distinct !DILexicalBlock(scope: !7890, file: !7364, line: 636, column: 2)
!7890 = distinct !DILexicalBlock(scope: !7891, file: !7364, line: 636, column: 2)
!7891 = distinct !DILexicalBlock(scope: !7892, file: !7364, line: 636, column: 2)
!7892 = distinct !DILexicalBlock(scope: !7880, file: !7364, line: 636, column: 2)
!7893 = !DILocation(line: 652, column: 1, scope: !7880)
!7894 = distinct !DISubprogram(name: "reserved_exception", scope: !7364, file: !7364, line: 776, type: !7895, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3037, retainedNodes: !7897)
!7895 = !DISubroutineType(types: !7896)
!7896 = !{null, !7795, !108}
!7897 = !{!7898, !7899}
!7898 = !DILocalVariable(name: "esf", arg: 1, scope: !7894, file: !7364, line: 776, type: !7795)
!7899 = !DILocalVariable(name: "fault", arg: 2, scope: !7894, file: !7364, line: 776, type: !108)
!7900 = !DILocation(line: 0, scope: !7894)
!7901 = !DILocation(line: 780, column: 2, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7903, file: !7364, line: 780, column: 2)
!7903 = distinct !DILexicalBlock(scope: !7904, file: !7364, line: 780, column: 2)
!7904 = distinct !DILexicalBlock(scope: !7905, file: !7364, line: 780, column: 2)
!7905 = distinct !DILexicalBlock(scope: !7894, file: !7364, line: 780, column: 2)
!7906 = !DILocation(line: 783, column: 1, scope: !7894)
!7907 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7364, file: !7364, line: 658, type: !7908, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3037, retainedNodes: !7910)
!7908 = !DISubroutineType(types: !7909)
!7909 = !{!422, !3065}
!7910 = !{!7911, !7912, !7913}
!7911 = !DILocalVariable(name: "esf", arg: 1, scope: !7907, file: !7364, line: 658, type: !3065)
!7912 = !DILocalVariable(name: "ret_addr", scope: !7907, file: !7364, line: 660, type: !3108)
!7913 = !DILocalVariable(name: "fault_insn", scope: !7907, file: !7364, line: 686, type: !168)
!7914 = !DILocation(line: 0, scope: !7907)
!7915 = !DILocation(line: 660, column: 46, scope: !7907)
!7916 = !DILocation(line: 660, column: 23, scope: !7907)
!7917 = !DILocation(line: 682, column: 11, scope: !7907)
!7918 = !DILocation(line: 271, column: 3, scope: !7919, inlinedAt: !7920)
!7919 = distinct !DISubprogram(name: "__DSB", scope: !7063, file: !7063, line: 269, type: !3413, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3037, retainedNodes: !437)
!7920 = distinct !DILocation(line: 683, column: 2, scope: !7907)
!7921 = !{i64 3567036}
!7922 = !DILocation(line: 260, column: 3, scope: !7923, inlinedAt: !7924)
!7923 = distinct !DISubprogram(name: "__ISB", scope: !7063, file: !7063, line: 258, type: !3413, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3037, retainedNodes: !437)
!7924 = distinct !DILocation(line: 684, column: 2, scope: !7907)
!7925 = !{i64 3566753}
!7926 = !DILocation(line: 686, column: 35, scope: !7907)
!7927 = !DILocation(line: 686, column: 24, scope: !7907)
!7928 = !DILocation(line: 688, column: 11, scope: !7907)
!7929 = !DILocation(line: 271, column: 3, scope: !7919, inlinedAt: !7930)
!7930 = distinct !DILocation(line: 689, column: 2, scope: !7907)
!7931 = !DILocation(line: 260, column: 3, scope: !7923, inlinedAt: !7932)
!7932 = distinct !DILocation(line: 690, column: 2, scope: !7907)
!7933 = !DILocation(line: 693, column: 45, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7907, file: !7364, line: 693, column: 6)
!7935 = !DILocation(line: 699, column: 1, scope: !7907)
!7936 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7364, file: !7364, line: 1107, type: !3413, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3037, retainedNodes: !437)
!7937 = !DILocation(line: 1111, column: 11, scope: !7936)
!7938 = !DILocation(line: 1136, column: 1, scope: !7936)
!7939 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7940, file: !7940, line: 26, type: !3413, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3109, retainedNodes: !7941)
!7940 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7941 = !{!7942}
!7942 = !DILocalVariable(name: "irq", scope: !7939, file: !7940, line: 28, type: !108)
!7943 = !DILocation(line: 0, scope: !7939)
!7944 = !DILocation(line: 30, column: 2, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7939, file: !7940, line: 30, column: 2)
!7946 = !DILocation(line: 31, column: 3, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7948, file: !7940, line: 30, column: 39)
!7948 = distinct !DILexicalBlock(scope: !7945, file: !7940, line: 30, column: 2)
!7949 = !DILocation(line: 30, column: 35, scope: !7948)
!7950 = !DILocation(line: 30, column: 13, scope: !7948)
!7951 = distinct !{!7951, !7944, !7952}
!7952 = !DILocation(line: 32, column: 2, scope: !7945)
!7953 = !DILocation(line: 33, column: 1, scope: !7939)
!7954 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !790, file: !790, line: 1814, type: !7097, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3109, retainedNodes: !7955)
!7955 = !{!7956, !7957}
!7956 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7954, file: !790, line: 1814, type: !1171)
!7957 = !DILocalVariable(name: "priority", arg: 2, scope: !7954, file: !790, line: 1814, type: !113)
!7958 = !DILocation(line: 0, scope: !7954)
!7959 = !DILocation(line: 1816, column: 7, scope: !7954)
!7960 = !DILocation(line: 0, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7954, file: !790, line: 1816, column: 7)
!7962 = !DILocation(line: 1824, column: 1, scope: !7954)
!7963 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7964, file: !7964, line: 27, type: !7965, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3154, retainedNodes: !8068)
!7964 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7965 = !DISubroutineType(types: !7966)
!7966 = !{null, !7967}
!7967 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !647, line: 347, baseType: !7968)
!7968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7969, size: 32)
!7969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !647, line: 245, size: 1024, elements: !7970)
!7970 = !{!7971, !8029, !8041, !8042, !8043, !8044, !8050, !8063}
!7971 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7969, file: !647, line: 247, baseType: !7972, size: 384)
!7972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !647, line: 57, size: 384, elements: !7973)
!7973 = !{!7974, !7998, !8005, !8006, !8007, !8016, !8017, !8018}
!7974 = !DIDerivedType(tag: DW_TAG_member, scope: !7972, file: !647, line: 60, baseType: !7975, size: 64)
!7975 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7972, file: !647, line: 60, size: 64, elements: !7976)
!7976 = !{!7977, !7992}
!7977 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7975, file: !647, line: 61, baseType: !7978, size: 64)
!7978 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !7979)
!7979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !7980)
!7980 = !{!7981, !7987}
!7981 = !DIDerivedType(tag: DW_TAG_member, scope: !7979, file: !367, line: 38, baseType: !7982, size: 32)
!7982 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7979, file: !367, line: 38, size: 32, elements: !7983)
!7983 = !{!7984, !7986}
!7984 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7982, file: !367, line: 39, baseType: !7985, size: 32)
!7985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7979, size: 32)
!7986 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7982, file: !367, line: 40, baseType: !7985, size: 32)
!7987 = !DIDerivedType(tag: DW_TAG_member, scope: !7979, file: !367, line: 42, baseType: !7988, size: 32, offset: 32)
!7988 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7979, file: !367, line: 42, size: 32, elements: !7989)
!7989 = !{!7990, !7991}
!7990 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7988, file: !367, line: 43, baseType: !7985, size: 32)
!7991 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7988, file: !367, line: 44, baseType: !7985, size: 32)
!7992 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7975, file: !647, line: 62, baseType: !7993, size: 64)
!7993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !672, line: 49, size: 64, elements: !7994)
!7994 = !{!7995}
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7993, file: !672, line: 50, baseType: !7996, size: 64)
!7996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7997, size: 64, elements: !677)
!7997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7993, size: 32)
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7972, file: !647, line: 68, baseType: !7999, size: 32, offset: 64)
!7999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8000, size: 32)
!8000 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !8001)
!8001 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !8002)
!8002 = !{!8003}
!8003 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8001, file: !363, line: 232, baseType: !8004, size: 64)
!8004 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !7979)
!8005 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7972, file: !647, line: 71, baseType: !164, size: 8, offset: 96)
!8006 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7972, file: !647, line: 74, baseType: !164, size: 8, offset: 104)
!8007 = !DIDerivedType(tag: DW_TAG_member, scope: !7972, file: !647, line: 90, baseType: !8008, size: 16, offset: 112)
!8008 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7972, file: !647, line: 90, size: 16, elements: !8009)
!8009 = !{!8010, !8015}
!8010 = !DIDerivedType(tag: DW_TAG_member, scope: !8008, file: !647, line: 91, baseType: !8011, size: 16)
!8011 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8008, file: !647, line: 91, size: 16, elements: !8012)
!8012 = !{!8013, !8014}
!8013 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8011, file: !647, line: 96, baseType: !695, size: 8)
!8014 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8011, file: !647, line: 97, baseType: !164, size: 8, offset: 8)
!8015 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8008, file: !647, line: 100, baseType: !168, size: 16)
!8016 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7972, file: !647, line: 107, baseType: !113, size: 32, offset: 128)
!8017 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7972, file: !647, line: 127, baseType: !104, size: 32, offset: 160)
!8018 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7972, file: !647, line: 131, baseType: !8019, size: 192, offset: 192)
!8019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !8020)
!8020 = !{!8021, !8022, !8028}
!8021 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8019, file: !363, line: 245, baseType: !7978, size: 64)
!8022 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8019, file: !363, line: 246, baseType: !8023, size: 32, offset: 64)
!8023 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !8024)
!8024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8025, size: 32)
!8025 = !DISubroutineType(types: !8026)
!8026 = !{null, !8027}
!8027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8019, size: 32)
!8028 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8019, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!8029 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7969, file: !647, line: 250, baseType: !8030, size: 288, offset: 384)
!8030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !714, line: 25, size: 288, elements: !8031)
!8031 = !{!8032, !8033, !8034, !8035, !8036, !8037, !8038, !8039, !8040}
!8032 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8030, file: !714, line: 26, baseType: !113, size: 32)
!8033 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8030, file: !714, line: 27, baseType: !113, size: 32, offset: 32)
!8034 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8030, file: !714, line: 28, baseType: !113, size: 32, offset: 64)
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8030, file: !714, line: 29, baseType: !113, size: 32, offset: 96)
!8036 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8030, file: !714, line: 30, baseType: !113, size: 32, offset: 128)
!8037 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8030, file: !714, line: 31, baseType: !113, size: 32, offset: 160)
!8038 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8030, file: !714, line: 32, baseType: !113, size: 32, offset: 192)
!8039 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8030, file: !714, line: 33, baseType: !113, size: 32, offset: 224)
!8040 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8030, file: !714, line: 34, baseType: !113, size: 32, offset: 256)
!8041 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7969, file: !647, line: 253, baseType: !104, size: 32, offset: 672)
!8042 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7969, file: !647, line: 256, baseType: !8000, size: 64, offset: 704)
!8043 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7969, file: !647, line: 294, baseType: !108, size: 32, offset: 768)
!8044 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7969, file: !647, line: 300, baseType: !8045, size: 96, offset: 800)
!8045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !647, line: 149, size: 96, elements: !8046)
!8046 = !{!8047, !8048, !8049}
!8047 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8045, file: !647, line: 153, baseType: !22, size: 32)
!8048 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8045, file: !647, line: 162, baseType: !439, size: 32, offset: 32)
!8049 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8045, file: !647, line: 168, baseType: !439, size: 32, offset: 64)
!8050 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7969, file: !647, line: 325, baseType: !8051, size: 32, offset: 896)
!8051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8052, size: 32)
!8052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !8053)
!8053 = !{!8054, !8060, !8061}
!8054 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8052, file: !359, line: 5074, baseType: !8055, size: 96)
!8055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !740, line: 56, size: 96, elements: !8056)
!8056 = !{!8057, !8058, !8059}
!8057 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8055, file: !740, line: 57, baseType: !743, size: 32)
!8058 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8055, file: !740, line: 58, baseType: !104, size: 32, offset: 32)
!8059 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8055, file: !740, line: 59, baseType: !439, size: 32, offset: 64)
!8060 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8052, file: !359, line: 5075, baseType: !8000, size: 64, offset: 96)
!8061 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8052, file: !359, line: 5076, baseType: !8062, offset: 160)
!8062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!8063 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7969, file: !647, line: 343, baseType: !8064, size: 64, offset: 928)
!8064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !714, line: 60, size: 64, elements: !8065)
!8065 = !{!8066, !8067}
!8066 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8064, file: !714, line: 63, baseType: !113, size: 32)
!8067 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8064, file: !714, line: 66, baseType: !113, size: 32, offset: 32)
!8068 = !{!8069}
!8069 = !DILocalVariable(name: "thread", arg: 1, scope: !7963, file: !7964, line: 27, type: !7967)
!8070 = !DILocation(line: 0, scope: !7963)
!8071 = !DILocation(line: 29, column: 6, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !7963, file: !7964, line: 29, column: 6)
!8073 = !DILocation(line: 29, column: 15, scope: !8072)
!8074 = !DILocation(line: 29, column: 6, scope: !7963)
!8075 = !DILocation(line: 1031, column: 3, scope: !8076, inlinedAt: !8079)
!8076 = distinct !DISubprogram(name: "__get_IPSR", scope: !7063, file: !7063, line: 1027, type: !7144, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3154, retainedNodes: !8077)
!8077 = !{!8078}
!8078 = !DILocalVariable(name: "result", scope: !8076, file: !7063, line: 1029, type: !113)
!8079 = distinct !DILocation(line: 48, column: 10, scope: !8080, inlinedAt: !8084)
!8080 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8081, file: !8081, line: 46, type: !8082, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3154, retainedNodes: !437)
!8081 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8082 = !DISubroutineType(types: !8083)
!8083 = !{!422}
!8084 = distinct !DILocation(line: 30, column: 7, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8086, file: !7964, line: 30, column: 7)
!8086 = distinct !DILexicalBlock(scope: !8072, file: !7964, line: 29, column: 26)
!8087 = !{i64 3555884}
!8088 = !DILocation(line: 0, scope: !8076, inlinedAt: !8079)
!8089 = !DILocation(line: 48, column: 9, scope: !8080, inlinedAt: !8084)
!8090 = !DILocation(line: 30, column: 7, scope: !8086)
!8091 = !DILocation(line: 42, column: 14, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8085, file: !7964, line: 30, column: 25)
!8093 = !DILocation(line: 48, column: 15, scope: !8092)
!8094 = !DILocation(line: 49, column: 3, scope: !8092)
!8095 = !DILocation(line: 52, column: 2, scope: !7963)
!8096 = !DILocation(line: 53, column: 1, scope: !7963)
!8097 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !642, file: !642, line: 127, type: !3413, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !635, retainedNodes: !437)
!8098 = !DILocation(line: 134, column: 2, scope: !8097)
!8099 = !DILocation(line: 156, column: 1, scope: !8097)
!8100 = !DILocation(line: 0, scope: !641)
!8101 = !DILocation(line: 289, column: 36, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !641, file: !642, line: 285, column: 2)
!8103 = !DILocation(line: 289, column: 42, scope: !8102)
!8104 = !DILocation(line: 300, column: 36, scope: !641)
!8105 = !DILocation(line: 301, column: 35, scope: !641)
!8106 = !DILocation(line: 302, column: 37, scope: !641)
!8107 = !DILocation(line: 311, column: 2, scope: !641)
!8108 = !DILocation(line: 316, column: 1, scope: !641)
!8109 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !818, file: !818, line: 180, type: !3413, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !437)
!8110 = !DILocation(line: 188, column: 12, scope: !8109)
!8111 = !DILocation(line: 271, column: 3, scope: !8112, inlinedAt: !8113)
!8112 = distinct !DISubprogram(name: "__DSB", scope: !7063, file: !7063, line: 269, type: !3413, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !437)
!8113 = distinct !DILocation(line: 192, column: 2, scope: !8109)
!8114 = !{i64 3717597}
!8115 = !DILocation(line: 260, column: 3, scope: !8116, inlinedAt: !8117)
!8116 = distinct !DISubprogram(name: "__ISB", scope: !7063, file: !7063, line: 258, type: !3413, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !437)
!8117 = distinct !DILocation(line: 193, column: 2, scope: !8109)
!8118 = !{i64 3717314}
!8119 = !DILocation(line: 194, column: 1, scope: !8109)
!8120 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !818, file: !818, line: 199, type: !3413, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !437)
!8121 = !DILocation(line: 282, column: 3, scope: !8122, inlinedAt: !8123)
!8122 = distinct !DISubprogram(name: "__DMB", scope: !7063, file: !7063, line: 280, type: !3413, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !437)
!8123 = distinct !DILocation(line: 202, column: 2, scope: !8120)
!8124 = !{i64 3717873}
!8125 = !DILocation(line: 205, column: 12, scope: !8120)
!8126 = !DILocation(line: 206, column: 1, scope: !8120)
!8127 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !818, file: !818, line: 275, type: !8128, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !8141)
!8128 = !DISubroutineType(types: !8129)
!8129 = !{null, !8130, !2159, !7331, !7331}
!8130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8131, size: 32)
!8131 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8132)
!8132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !762, line: 52, size: 96, elements: !8133)
!8133 = !{!8134, !8135, !8136}
!8134 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8132, file: !762, line: 53, baseType: !22, size: 32)
!8135 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8132, file: !762, line: 54, baseType: !439, size: 32, offset: 32)
!8136 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !8132, file: !762, line: 55, baseType: !8137, size: 32, offset: 64)
!8137 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !768, line: 151, baseType: !8138)
!8138 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !768, line: 149, size: 32, elements: !8139)
!8139 = !{!8140}
!8140 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !8138, file: !768, line: 150, baseType: !113, size: 32)
!8141 = !{!8142, !8143, !8144, !8145}
!8142 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8127, file: !818, line: 276, type: !8130)
!8143 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8127, file: !818, line: 276, type: !2159)
!8144 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !8127, file: !818, line: 277, type: !7331)
!8145 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8127, file: !818, line: 277, type: !7331)
!8146 = !DILocation(line: 0, scope: !8127)
!8147 = !DILocation(line: 279, column: 6, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8127, file: !818, line: 279, column: 6)
!8149 = !DILocation(line: 285, column: 1, scope: !8127)
!8150 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !8151, file: !8151, line: 220, type: !8152, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !8154)
!8151 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8152 = !DISubroutineType(types: !8153)
!8153 = !{!108, !8130, !2159, !7331, !7331}
!8154 = !{!8155, !8156, !8157, !8158, !8159}
!8155 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8150, file: !8151, line: 221, type: !8130)
!8156 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8150, file: !8151, line: 221, type: !2159)
!8157 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !8150, file: !8151, line: 222, type: !7331)
!8158 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8150, file: !8151, line: 223, type: !7331)
!8159 = !DILocalVariable(name: "mpu_reg_index", scope: !8150, file: !8151, line: 225, type: !108)
!8160 = !DILocation(line: 0, scope: !8150)
!8161 = !DILocation(line: 225, column: 22, scope: !8150)
!8162 = !DILocation(line: 233, column: 18, scope: !8150)
!8163 = !DILocation(line: 236, column: 23, scope: !8150)
!8164 = !DILocation(line: 236, column: 21, scope: !8150)
!8165 = !DILocation(line: 238, column: 2, scope: !8150)
!8166 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !818, file: !818, line: 105, type: !8167, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !8169)
!8167 = !DISubroutineType(types: !8168)
!8168 = !{!108, !8130, !164, !164, !422}
!8169 = !{!8170, !8171, !8172, !8173, !8174, !8175}
!8170 = !DILocalVariable(name: "regions", arg: 1, scope: !8166, file: !818, line: 106, type: !8130)
!8171 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8166, file: !818, line: 106, type: !164)
!8172 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !8166, file: !818, line: 106, type: !164)
!8173 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !8166, file: !818, line: 107, type: !422)
!8174 = !DILocalVariable(name: "i", scope: !8166, file: !818, line: 109, type: !108)
!8175 = !DILocalVariable(name: "reg_index", scope: !8166, file: !818, line: 110, type: !108)
!8176 = !DILocation(line: 0, scope: !8166)
!8177 = !DILocation(line: 110, column: 18, scope: !8166)
!8178 = !DILocation(line: 112, column: 16, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8180, file: !818, line: 112, column: 2)
!8180 = distinct !DILexicalBlock(scope: !8166, file: !818, line: 112, column: 2)
!8181 = !DILocation(line: 112, column: 2, scope: !8180)
!8182 = !DILocation(line: 113, column: 7, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8184, file: !818, line: 113, column: 7)
!8184 = distinct !DILexicalBlock(scope: !8179, file: !818, line: 112, column: 36)
!8185 = !DILocation(line: 113, column: 18, scope: !8183)
!8186 = !DILocation(line: 113, column: 23, scope: !8183)
!8187 = !DILocation(line: 113, column: 7, scope: !8184)
!8188 = !DILocation(line: 118, column: 23, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8184, file: !818, line: 118, column: 7)
!8190 = !DILocation(line: 119, column: 7, scope: !8189)
!8191 = !DILocation(line: 118, column: 7, scope: !8184)
!8192 = !DILocation(line: 120, column: 4, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8194, file: !818, line: 120, column: 4)
!8194 = distinct !DILexicalBlock(scope: !8195, file: !818, line: 120, column: 4)
!8195 = distinct !DILexicalBlock(scope: !8196, file: !818, line: 120, column: 4)
!8196 = distinct !DILexicalBlock(scope: !8197, file: !818, line: 120, column: 4)
!8197 = distinct !DILexicalBlock(scope: !8189, file: !818, line: 119, column: 45)
!8198 = !DILocation(line: 121, column: 4, scope: !8197)
!8199 = !DILocation(line: 124, column: 36, scope: !8184)
!8200 = !DILocation(line: 124, column: 15, scope: !8184)
!8201 = !DILocation(line: 126, column: 17, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8184, file: !818, line: 126, column: 7)
!8203 = !DILocation(line: 126, column: 7, scope: !8184)
!8204 = !DILocation(line: 131, column: 12, scope: !8184)
!8205 = !DILocation(line: 132, column: 2, scope: !8184)
!8206 = !DILocation(line: 112, column: 32, scope: !8179)
!8207 = distinct !{!8207, !8181, !8208}
!8208 = !DILocation(line: 132, column: 2, scope: !8180)
!8209 = !DILocation(line: 135, column: 1, scope: !8166)
!8210 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !8151, file: !8151, line: 63, type: !8211, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !8213)
!8211 = !DISubroutineType(types: !8212)
!8212 = !{!108, !8130}
!8213 = !{!8214, !8215}
!8214 = !DILocalVariable(name: "part", arg: 1, scope: !8210, file: !8151, line: 63, type: !8130)
!8215 = !DILocalVariable(name: "partition_is_valid", scope: !8210, file: !8151, line: 70, type: !108)
!8216 = !DILocation(line: 0, scope: !8210)
!8217 = !DILocation(line: 71, column: 11, scope: !8210)
!8218 = !DILocation(line: 71, column: 37, scope: !8210)
!8219 = !{i32 0, i32 33}
!8220 = !DILocation(line: 72, column: 3, scope: !8210)
!8221 = !DILocation(line: 71, column: 30, scope: !8210)
!8222 = !DILocation(line: 75, column: 11, scope: !8210)
!8223 = !DILocation(line: 75, column: 17, scope: !8210)
!8224 = !DILocation(line: 75, column: 38, scope: !8210)
!8225 = !DILocation(line: 77, column: 2, scope: !8210)
!8226 = distinct !DISubprogram(name: "mpu_configure_region", scope: !818, file: !818, line: 79, type: !8227, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !8229)
!8227 = !DISubroutineType(types: !8228)
!8228 = !{!108, !2159, !8130}
!8229 = !{!8230, !8231, !8232}
!8230 = !DILocalVariable(name: "index", arg: 1, scope: !8226, file: !818, line: 79, type: !2159)
!8231 = !DILocalVariable(name: "new_region", arg: 2, scope: !8226, file: !818, line: 80, type: !8130)
!8232 = !DILocalVariable(name: "region_conf", scope: !8226, file: !818, line: 82, type: !807)
!8233 = !DILocation(line: 0, scope: !8226)
!8234 = !DILocation(line: 82, column: 2, scope: !8226)
!8235 = !DILocation(line: 82, column: 24, scope: !8226)
!8236 = !DILocation(line: 87, column: 33, scope: !8226)
!8237 = !DILocation(line: 87, column: 14, scope: !8226)
!8238 = !DILocation(line: 87, column: 19, scope: !8226)
!8239 = !DILocation(line: 91, column: 55, scope: !8226)
!8240 = !DILocation(line: 92, column: 16, scope: !8226)
!8241 = !DILocation(line: 92, column: 53, scope: !8226)
!8242 = !DILocation(line: 91, column: 2, scope: !8226)
!8243 = !DILocation(line: 95, column: 9, scope: !8226)
!8244 = !DILocation(line: 97, column: 1, scope: !8226)
!8245 = !DILocation(line: 95, column: 2, scope: !8226)
!8246 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !8151, file: !8151, line: 113, type: !8247, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !8252)
!8247 = !DISubroutineType(types: !8248)
!8248 = !{null, !8249, !8250, !113, !113}
!8249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 32)
!8250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8251, size: 32)
!8251 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8137)
!8252 = !{!8253, !8254, !8255, !8256}
!8253 = !DILocalVariable(name: "p_attr", arg: 1, scope: !8246, file: !8151, line: 114, type: !8249)
!8254 = !DILocalVariable(name: "attr", arg: 2, scope: !8246, file: !8151, line: 115, type: !8250)
!8255 = !DILocalVariable(name: "base", arg: 3, scope: !8246, file: !8151, line: 115, type: !113)
!8256 = !DILocalVariable(name: "size", arg: 4, scope: !8246, file: !8151, line: 115, type: !113)
!8257 = !DILocation(line: 0, scope: !8246)
!8258 = !DILocation(line: 127, column: 23, scope: !8246)
!8259 = !DILocation(line: 127, column: 35, scope: !8246)
!8260 = !DILocation(line: 127, column: 33, scope: !8246)
!8261 = !DILocation(line: 127, column: 10, scope: !8246)
!8262 = !DILocation(line: 127, column: 15, scope: !8246)
!8263 = !DILocation(line: 129, column: 1, scope: !8246)
!8264 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !818, file: !818, line: 57, type: !8265, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !8267)
!8265 = !DISubroutineType(types: !8266)
!8266 = !{!108, !2159, !805}
!8267 = !{!8268, !8269}
!8268 = !DILocalVariable(name: "index", arg: 1, scope: !8264, file: !818, line: 57, type: !2159)
!8269 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8264, file: !818, line: 58, type: !805)
!8270 = !DILocation(line: 0, scope: !8264)
!8271 = !DILocation(line: 61, column: 6, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !8264, file: !818, line: 61, column: 6)
!8273 = !DILocation(line: 61, column: 12, scope: !8272)
!8274 = !DILocation(line: 61, column: 6, scope: !8264)
!8275 = !DILocation(line: 64, column: 3, scope: !8276)
!8276 = distinct !DILexicalBlock(scope: !8277, file: !818, line: 64, column: 3)
!8277 = distinct !DILexicalBlock(scope: !8278, file: !818, line: 64, column: 3)
!8278 = distinct !DILexicalBlock(scope: !8279, file: !818, line: 64, column: 3)
!8279 = distinct !DILexicalBlock(scope: !8280, file: !818, line: 64, column: 3)
!8280 = distinct !DILexicalBlock(scope: !8272, file: !818, line: 61, column: 40)
!8281 = !DILocation(line: 65, column: 3, scope: !8280)
!8282 = !DILocation(line: 71, column: 2, scope: !8264)
!8283 = !DILocation(line: 73, column: 2, scope: !8264)
!8284 = !DILocation(line: 74, column: 1, scope: !8264)
!8285 = distinct !DISubprogram(name: "region_init", scope: !8151, file: !8151, line: 29, type: !8286, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !8288)
!8286 = !DISubroutineType(types: !8287)
!8287 = !{null, !7331, !805}
!8288 = !{!8289, !8290}
!8289 = !DILocalVariable(name: "index", arg: 1, scope: !8285, file: !8151, line: 29, type: !7331)
!8290 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8285, file: !8151, line: 30, type: !805)
!8291 = !DILocation(line: 0, scope: !8285)
!8292 = !DILocation(line: 33, column: 2, scope: !8285)
!8293 = !DILocation(line: 47, column: 28, scope: !8285)
!8294 = !DILocation(line: 47, column: 33, scope: !8285)
!8295 = !DILocation(line: 48, column: 26, scope: !8285)
!8296 = !DILocation(line: 47, column: 12, scope: !8285)
!8297 = !DILocation(line: 49, column: 32, scope: !8285)
!8298 = !DILocation(line: 49, column: 37, scope: !8285)
!8299 = !DILocation(line: 49, column: 12, scope: !8285)
!8300 = !DILocation(line: 53, column: 1, scope: !8285)
!8301 = distinct !DISubprogram(name: "set_region_number", scope: !8302, file: !8302, line: 32, type: !7154, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !8303)
!8302 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8303 = !{!8304}
!8304 = !DILocalVariable(name: "index", arg: 1, scope: !8301, file: !8302, line: 32, type: !113)
!8305 = !DILocation(line: 0, scope: !8301)
!8306 = !DILocation(line: 34, column: 11, scope: !8301)
!8307 = !DILocation(line: 35, column: 1, scope: !8301)
!8308 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !8151, file: !8151, line: 88, type: !8309, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !8311)
!8309 = !DISubroutineType(types: !8310)
!8310 = !{!113, !113}
!8311 = !{!8312}
!8312 = !DILocalVariable(name: "size", arg: 1, scope: !8308, file: !8151, line: 88, type: !113)
!8313 = !DILocation(line: 0, scope: !8308)
!8314 = !DILocation(line: 91, column: 11, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8308, file: !8151, line: 91, column: 6)
!8316 = !DILocation(line: 91, column: 6, scope: !8308)
!8317 = !DILocation(line: 100, column: 11, scope: !8318)
!8318 = distinct !DILexicalBlock(scope: !8308, file: !8151, line: 100, column: 6)
!8319 = !DILocation(line: 100, column: 6, scope: !8308)
!8320 = !DILocation(line: 104, column: 35, scope: !8308)
!8321 = !DILocation(line: 104, column: 16, scope: !8308)
!8322 = !DILocation(line: 104, column: 50, scope: !8308)
!8323 = !DILocation(line: 104, column: 72, scope: !8308)
!8324 = !DILocation(line: 104, column: 2, scope: !8308)
!8325 = !DILocation(line: 106, column: 1, scope: !8308)
!8326 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !818, file: !818, line: 307, type: !8327, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !8329)
!8327 = !DISubroutineType(types: !8328)
!8328 = !{null, !8130, !164}
!8329 = !{!8330, !8331}
!8330 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8326, file: !818, line: 308, type: !8130)
!8331 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8326, file: !818, line: 308, type: !164)
!8332 = !DILocation(line: 0, scope: !8326)
!8333 = !DILocation(line: 310, column: 6, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8326, file: !818, line: 310, column: 6)
!8335 = !DILocation(line: 316, column: 1, scope: !8326)
!8336 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !8151, file: !8151, line: 249, type: !8337, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !8339)
!8337 = !DISubroutineType(types: !8338)
!8338 = !{!108, !8130, !164}
!8339 = !{!8340, !8341, !8342, !8343}
!8340 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8336, file: !8151, line: 250, type: !8130)
!8341 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8336, file: !8151, line: 250, type: !164)
!8342 = !DILocalVariable(name: "mpu_reg_index", scope: !8336, file: !8151, line: 252, type: !108)
!8343 = !DILocalVariable(name: "i", scope: !8344, file: !8151, line: 264, type: !108)
!8344 = distinct !DILexicalBlock(scope: !8345, file: !8151, line: 264, column: 3)
!8345 = distinct !DILexicalBlock(scope: !8346, file: !8151, line: 261, column: 32)
!8346 = distinct !DILexicalBlock(scope: !8336, file: !8151, line: 261, column: 6)
!8347 = !DILocation(line: 0, scope: !8336)
!8348 = !DILocation(line: 252, column: 22, scope: !8336)
!8349 = !DILocation(line: 258, column: 18, scope: !8336)
!8350 = !DILocation(line: 261, column: 20, scope: !8346)
!8351 = !DILocation(line: 261, column: 6, scope: !8336)
!8352 = !DILocation(line: 0, scope: !8344)
!8353 = !DILocation(line: 265, column: 4, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8355, file: !8151, line: 264, column: 59)
!8355 = distinct !DILexicalBlock(scope: !8344, file: !8151, line: 264, column: 3)
!8356 = !DILocation(line: 264, column: 55, scope: !8355)
!8357 = !DILocation(line: 264, column: 33, scope: !8355)
!8358 = !DILocation(line: 264, column: 3, scope: !8344)
!8359 = distinct !{!8359, !8358, !8360}
!8360 = !DILocation(line: 266, column: 3, scope: !8344)
!8361 = !DILocation(line: 269, column: 2, scope: !8336)
!8362 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !8363, file: !8363, line: 218, type: !7154, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !8364)
!8363 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8364 = !{!8365}
!8365 = !DILocalVariable(name: "rnr", arg: 1, scope: !8362, file: !8363, line: 218, type: !113)
!8366 = !DILocation(line: 0, scope: !8362)
!8367 = !DILocation(line: 220, column: 12, scope: !8362)
!8368 = !DILocation(line: 221, column: 13, scope: !8362)
!8369 = !DILocation(line: 222, column: 1, scope: !8362)
!8370 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !818, file: !818, line: 326, type: !8371, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !8373)
!8371 = !DISubroutineType(types: !8372)
!8372 = !{!108}
!8373 = !{!8374}
!8374 = !DILocalVariable(name: "r_index", scope: !8370, file: !818, line: 328, type: !113)
!8375 = !DILocation(line: 330, column: 17, scope: !8376)
!8376 = distinct !DILexicalBlock(scope: !8370, file: !818, line: 330, column: 6)
!8377 = !DILocation(line: 330, column: 29, scope: !8376)
!8378 = !DILocation(line: 330, column: 6, scope: !8370)
!8379 = !DILocation(line: 347, column: 2, scope: !8370)
!8380 = !DILocation(line: 0, scope: !8370)
!8381 = !DILocation(line: 364, column: 29, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8383, file: !818, line: 364, column: 2)
!8383 = distinct !DILexicalBlock(scope: !8370, file: !818, line: 364, column: 2)
!8384 = !DILocation(line: 364, column: 2, scope: !8383)
!8385 = !DILocation(line: 365, column: 25, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8382, file: !818, line: 364, column: 66)
!8387 = !DILocation(line: 365, column: 3, scope: !8386)
!8388 = !DILocation(line: 364, column: 62, scope: !8382)
!8389 = distinct !{!8389, !8384, !8390}
!8390 = !DILocation(line: 366, column: 2, scope: !8383)
!8391 = !DILocation(line: 369, column: 23, scope: !8370)
!8392 = !DILocation(line: 369, column: 21, scope: !8370)
!8393 = !DILocation(line: 372, column: 2, scope: !8370)
!8394 = !DILocation(line: 443, column: 2, scope: !8370)
!8395 = !DILocation(line: 444, column: 1, scope: !8370)
!8396 = distinct !DISubprogram(name: "strcpy", scope: !8397, file: !8397, line: 20, type: !8398, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !8402)
!8397 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8398 = !DISubroutineType(types: !8399)
!8399 = !{!443, !8400, !8401}
!8400 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !443)
!8401 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !105)
!8402 = !{!8403, !8404, !8405}
!8403 = !DILocalVariable(name: "d", arg: 1, scope: !8396, file: !8397, line: 20, type: !8400)
!8404 = !DILocalVariable(name: "s", arg: 2, scope: !8396, file: !8397, line: 20, type: !8401)
!8405 = !DILocalVariable(name: "dest", scope: !8396, file: !8397, line: 22, type: !443)
!8406 = !DILocation(line: 0, scope: !8396)
!8407 = !DILocation(line: 24, column: 9, scope: !8396)
!8408 = !DILocation(line: 24, column: 12, scope: !8396)
!8409 = !DILocation(line: 24, column: 2, scope: !8396)
!8410 = !DILocation(line: 25, column: 6, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8396, file: !8397, line: 24, column: 21)
!8412 = !DILocation(line: 26, column: 4, scope: !8411)
!8413 = !DILocation(line: 27, column: 4, scope: !8411)
!8414 = distinct !{!8414, !8409, !8415}
!8415 = !DILocation(line: 28, column: 2, scope: !8396)
!8416 = !DILocation(line: 30, column: 5, scope: !8396)
!8417 = !DILocation(line: 32, column: 2, scope: !8396)
!8418 = distinct !DISubprogram(name: "strncpy", scope: !8397, file: !8397, line: 42, type: !8419, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !8421)
!8419 = !DISubroutineType(types: !8420)
!8420 = !{!443, !8400, !8401, !439}
!8421 = !{!8422, !8423, !8424, !8425}
!8422 = !DILocalVariable(name: "d", arg: 1, scope: !8418, file: !8397, line: 42, type: !8400)
!8423 = !DILocalVariable(name: "s", arg: 2, scope: !8418, file: !8397, line: 42, type: !8401)
!8424 = !DILocalVariable(name: "n", arg: 3, scope: !8418, file: !8397, line: 42, type: !439)
!8425 = !DILocalVariable(name: "dest", scope: !8418, file: !8397, line: 44, type: !443)
!8426 = !DILocation(line: 0, scope: !8418)
!8427 = !DILocation(line: 46, column: 12, scope: !8418)
!8428 = !DILocation(line: 46, column: 17, scope: !8418)
!8429 = !DILocation(line: 46, column: 20, scope: !8418)
!8430 = !DILocation(line: 46, column: 23, scope: !8418)
!8431 = !DILocation(line: 46, column: 2, scope: !8418)
!8432 = !DILocation(line: 47, column: 6, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8418, file: !8397, line: 46, column: 32)
!8434 = !DILocation(line: 48, column: 4, scope: !8433)
!8435 = !DILocation(line: 49, column: 4, scope: !8433)
!8436 = !DILocation(line: 50, column: 4, scope: !8433)
!8437 = distinct !{!8437, !8431, !8438}
!8438 = !DILocation(line: 51, column: 2, scope: !8418)
!8439 = !DILocation(line: 54, column: 6, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8418, file: !8397, line: 53, column: 16)
!8441 = !DILocation(line: 55, column: 4, scope: !8440)
!8442 = !DILocation(line: 56, column: 4, scope: !8440)
!8443 = !DILocation(line: 53, column: 11, scope: !8418)
!8444 = !DILocation(line: 53, column: 2, scope: !8418)
!8445 = distinct !{!8445, !8444, !8446}
!8446 = !DILocation(line: 57, column: 2, scope: !8418)
!8447 = !DILocation(line: 59, column: 2, scope: !8418)
!8448 = distinct !DISubprogram(name: "strchr", scope: !8397, file: !8397, line: 69, type: !8449, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !8451)
!8449 = !DISubroutineType(types: !8450)
!8450 = !{!443, !105, !108}
!8451 = !{!8452, !8453, !8454}
!8452 = !DILocalVariable(name: "s", arg: 1, scope: !8448, file: !8397, line: 69, type: !105)
!8453 = !DILocalVariable(name: "c", arg: 2, scope: !8448, file: !8397, line: 69, type: !108)
!8454 = !DILocalVariable(name: "tmp", scope: !8448, file: !8397, line: 71, type: !107)
!8455 = !DILocation(line: 0, scope: !8448)
!8456 = !DILocation(line: 73, column: 2, scope: !8448)
!8457 = !DILocation(line: 73, column: 10, scope: !8448)
!8458 = !DILocation(line: 73, column: 13, scope: !8448)
!8459 = !DILocation(line: 73, column: 21, scope: !8448)
!8460 = !DILocation(line: 74, column: 4, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8448, file: !8397, line: 73, column: 38)
!8462 = distinct !{!8462, !8456, !8463}
!8463 = !DILocation(line: 75, column: 2, scope: !8448)
!8464 = !DILocation(line: 77, column: 9, scope: !8448)
!8465 = !DILocation(line: 77, column: 2, scope: !8448)
!8466 = distinct !DISubprogram(name: "strrchr", scope: !8397, file: !8397, line: 87, type: !8449, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !8467)
!8467 = !{!8468, !8469, !8470}
!8468 = !DILocalVariable(name: "s", arg: 1, scope: !8466, file: !8397, line: 87, type: !105)
!8469 = !DILocalVariable(name: "c", arg: 2, scope: !8466, file: !8397, line: 87, type: !108)
!8470 = !DILocalVariable(name: "match", scope: !8466, file: !8397, line: 89, type: !443)
!8471 = !DILocation(line: 0, scope: !8466)
!8472 = !DILocation(line: 91, column: 2, scope: !8466)
!8473 = !DILocation(line: 92, column: 7, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8475, file: !8397, line: 92, column: 7)
!8475 = distinct !DILexicalBlock(scope: !8466, file: !8397, line: 91, column: 5)
!8476 = !DILocation(line: 92, column: 10, scope: !8474)
!8477 = !DILocation(line: 92, column: 7, scope: !8475)
!8478 = !DILocation(line: 95, column: 13, scope: !8466)
!8479 = !DILocation(line: 95, column: 2, scope: !8475)
!8480 = distinct !{!8480, !8472, !8481}
!8481 = !DILocation(line: 95, column: 15, scope: !8466)
!8482 = !DILocation(line: 97, column: 2, scope: !8466)
!8483 = distinct !DISubprogram(name: "strlen", scope: !8397, file: !8397, line: 107, type: !8484, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !8486)
!8484 = !DISubroutineType(types: !8485)
!8485 = !{!439, !105}
!8486 = !{!8487, !8488}
!8487 = !DILocalVariable(name: "s", arg: 1, scope: !8483, file: !8397, line: 107, type: !105)
!8488 = !DILocalVariable(name: "n", scope: !8483, file: !8397, line: 109, type: !439)
!8489 = !DILocation(line: 0, scope: !8483)
!8490 = !DILocation(line: 111, column: 9, scope: !8483)
!8491 = !DILocation(line: 111, column: 12, scope: !8483)
!8492 = !DILocation(line: 111, column: 2, scope: !8483)
!8493 = !DILocation(line: 112, column: 4, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8483, file: !8397, line: 111, column: 21)
!8495 = !DILocation(line: 113, column: 4, scope: !8494)
!8496 = distinct !{!8496, !8492, !8497}
!8497 = !DILocation(line: 114, column: 2, scope: !8483)
!8498 = !DILocation(line: 116, column: 2, scope: !8483)
!8499 = distinct !DISubprogram(name: "strnlen", scope: !8397, file: !8397, line: 126, type: !8500, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !8502)
!8500 = !DISubroutineType(types: !8501)
!8501 = !{!439, !105, !439}
!8502 = !{!8503, !8504, !8505}
!8503 = !DILocalVariable(name: "s", arg: 1, scope: !8499, file: !8397, line: 126, type: !105)
!8504 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8499, file: !8397, line: 126, type: !439)
!8505 = !DILocalVariable(name: "n", scope: !8499, file: !8397, line: 128, type: !439)
!8506 = !DILocation(line: 0, scope: !8499)
!8507 = !DILocation(line: 130, column: 9, scope: !8499)
!8508 = !DILocation(line: 130, column: 12, scope: !8499)
!8509 = !DILocation(line: 130, column: 20, scope: !8499)
!8510 = !DILocation(line: 130, column: 2, scope: !8499)
!8511 = !DILocation(line: 131, column: 4, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8499, file: !8397, line: 130, column: 35)
!8513 = !DILocation(line: 132, column: 4, scope: !8512)
!8514 = distinct !{!8514, !8510, !8515}
!8515 = !DILocation(line: 133, column: 2, scope: !8499)
!8516 = !DILocation(line: 135, column: 2, scope: !8499)
!8517 = distinct !DISubprogram(name: "strcmp", scope: !8397, file: !8397, line: 145, type: !8518, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !8520)
!8518 = !DISubroutineType(types: !8519)
!8519 = !{!108, !105, !105}
!8520 = !{!8521, !8522}
!8521 = !DILocalVariable(name: "s1", arg: 1, scope: !8517, file: !8397, line: 145, type: !105)
!8522 = !DILocalVariable(name: "s2", arg: 2, scope: !8517, file: !8397, line: 145, type: !105)
!8523 = !DILocation(line: 0, scope: !8517)
!8524 = !DILocation(line: 147, column: 10, scope: !8517)
!8525 = !DILocation(line: 147, column: 17, scope: !8517)
!8526 = !DILocation(line: 147, column: 14, scope: !8517)
!8527 = !DILocation(line: 147, column: 22, scope: !8517)
!8528 = !DILocation(line: 148, column: 5, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8517, file: !8397, line: 147, column: 40)
!8530 = !DILocation(line: 149, column: 5, scope: !8529)
!8531 = distinct !{!8531, !8532, !8533}
!8532 = !DILocation(line: 147, column: 2, scope: !8517)
!8533 = !DILocation(line: 150, column: 2, scope: !8517)
!8534 = !DILocation(line: 152, column: 9, scope: !8517)
!8535 = !DILocation(line: 152, column: 15, scope: !8517)
!8536 = !DILocation(line: 152, column: 13, scope: !8517)
!8537 = !DILocation(line: 152, column: 2, scope: !8517)
!8538 = distinct !DISubprogram(name: "strncmp", scope: !8397, file: !8397, line: 162, type: !8539, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !8541)
!8539 = !DISubroutineType(types: !8540)
!8540 = !{!108, !105, !105, !439}
!8541 = !{!8542, !8543, !8544}
!8542 = !DILocalVariable(name: "s1", arg: 1, scope: !8538, file: !8397, line: 162, type: !105)
!8543 = !DILocalVariable(name: "s2", arg: 2, scope: !8538, file: !8397, line: 162, type: !105)
!8544 = !DILocalVariable(name: "n", arg: 3, scope: !8538, file: !8397, line: 162, type: !439)
!8545 = !DILocation(line: 0, scope: !8538)
!8546 = !DILocation(line: 164, column: 17, scope: !8538)
!8547 = !DILocation(line: 164, column: 21, scope: !8538)
!8548 = !DILocation(line: 164, column: 28, scope: !8538)
!8549 = !DILocation(line: 164, column: 25, scope: !8538)
!8550 = !DILocation(line: 164, column: 33, scope: !8538)
!8551 = !DILocation(line: 165, column: 5, scope: !8552)
!8552 = distinct !DILexicalBlock(scope: !8538, file: !8397, line: 164, column: 51)
!8553 = !DILocation(line: 166, column: 5, scope: !8552)
!8554 = !DILocation(line: 167, column: 4, scope: !8552)
!8555 = distinct !{!8555, !8556, !8557}
!8556 = !DILocation(line: 164, column: 2, scope: !8538)
!8557 = !DILocation(line: 168, column: 2, scope: !8538)
!8558 = !DILocation(line: 170, column: 25, scope: !8538)
!8559 = !DILocation(line: 170, column: 31, scope: !8538)
!8560 = !DILocation(line: 170, column: 29, scope: !8538)
!8561 = !DILocation(line: 170, column: 9, scope: !8538)
!8562 = !DILocation(line: 170, column: 2, scope: !8538)
!8563 = distinct !DISubprogram(name: "strtok_r", scope: !8397, file: !8397, line: 180, type: !8564, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !8566)
!8564 = !DISubroutineType(types: !8565)
!8565 = !{!443, !443, !105, !543}
!8566 = !{!8567, !8568, !8569, !8570, !8571}
!8567 = !DILocalVariable(name: "str", arg: 1, scope: !8563, file: !8397, line: 180, type: !443)
!8568 = !DILocalVariable(name: "sep", arg: 2, scope: !8563, file: !8397, line: 180, type: !105)
!8569 = !DILocalVariable(name: "state", arg: 3, scope: !8563, file: !8397, line: 180, type: !543)
!8570 = !DILocalVariable(name: "start", scope: !8563, file: !8397, line: 182, type: !443)
!8571 = !DILocalVariable(name: "end", scope: !8563, file: !8397, line: 182, type: !443)
!8572 = !DILocation(line: 0, scope: !8563)
!8573 = !DILocation(line: 184, column: 10, scope: !8563)
!8574 = !DILocation(line: 184, column: 22, scope: !8563)
!8575 = !DILocation(line: 187, column: 9, scope: !8563)
!8576 = !DILocation(line: 187, column: 16, scope: !8563)
!8577 = !DILocation(line: 187, column: 19, scope: !8563)
!8578 = !DILocation(line: 187, column: 2, scope: !8563)
!8579 = !DILocation(line: 188, column: 8, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8563, file: !8397, line: 187, column: 40)
!8581 = distinct !{!8581, !8578, !8582}
!8582 = !DILocation(line: 189, column: 2, scope: !8563)
!8583 = !DILocation(line: 198, column: 9, scope: !8563)
!8584 = !DILocation(line: 198, column: 18, scope: !8563)
!8585 = !DILocation(line: 198, column: 17, scope: !8563)
!8586 = !DILocation(line: 198, column: 2, scope: !8563)
!8587 = !DILocation(line: 199, column: 6, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8563, file: !8397, line: 198, column: 37)
!8589 = !DILocation(line: 198, column: 14, scope: !8563)
!8590 = distinct !{!8590, !8586, !8591}
!8591 = !DILocation(line: 200, column: 2, scope: !8563)
!8592 = !DILocation(line: 203, column: 8, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8594, file: !8397, line: 202, column: 20)
!8594 = distinct !DILexicalBlock(scope: !8563, file: !8397, line: 202, column: 6)
!8595 = !DILocation(line: 204, column: 16, scope: !8593)
!8596 = !DILocation(line: 205, column: 2, scope: !8593)
!8597 = !DILocation(line: 210, column: 1, scope: !8563)
!8598 = distinct !DISubprogram(name: "strcat", scope: !8397, file: !8397, line: 212, type: !8398, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !8599)
!8599 = !{!8600, !8601}
!8600 = !DILocalVariable(name: "dest", arg: 1, scope: !8598, file: !8397, line: 212, type: !8400)
!8601 = !DILocalVariable(name: "src", arg: 2, scope: !8598, file: !8397, line: 212, type: !8401)
!8602 = !DILocation(line: 0, scope: !8598)
!8603 = !DILocation(line: 214, column: 16, scope: !8598)
!8604 = !DILocation(line: 214, column: 14, scope: !8598)
!8605 = !DILocation(line: 214, column: 2, scope: !8598)
!8606 = !DILocation(line: 215, column: 2, scope: !8598)
!8607 = distinct !DISubprogram(name: "strncat", scope: !8397, file: !8397, line: 218, type: !8419, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !8608)
!8608 = !{!8609, !8610, !8611, !8612, !8613}
!8609 = !DILocalVariable(name: "dest", arg: 1, scope: !8607, file: !8397, line: 218, type: !8400)
!8610 = !DILocalVariable(name: "src", arg: 2, scope: !8607, file: !8397, line: 218, type: !8401)
!8611 = !DILocalVariable(name: "n", arg: 3, scope: !8607, file: !8397, line: 219, type: !439)
!8612 = !DILocalVariable(name: "orig_dest", scope: !8607, file: !8397, line: 221, type: !443)
!8613 = !DILocalVariable(name: "len", scope: !8607, file: !8397, line: 222, type: !439)
!8614 = !DILocation(line: 0, scope: !8607)
!8615 = !DILocation(line: 222, column: 15, scope: !8607)
!8616 = !DILocation(line: 224, column: 7, scope: !8607)
!8617 = !DILocation(line: 225, column: 14, scope: !8607)
!8618 = !DILocation(line: 225, column: 19, scope: !8607)
!8619 = !DILocation(line: 225, column: 11, scope: !8607)
!8620 = !DILocation(line: 225, column: 23, scope: !8607)
!8621 = !DILocation(line: 225, column: 28, scope: !8607)
!8622 = !DILocation(line: 225, column: 2, scope: !8607)
!8623 = !DILocation(line: 226, column: 17, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8607, file: !8397, line: 225, column: 38)
!8625 = !DILocation(line: 226, column: 8, scope: !8624)
!8626 = !DILocation(line: 226, column: 11, scope: !8624)
!8627 = distinct !{!8627, !8622, !8628}
!8628 = !DILocation(line: 227, column: 2, scope: !8607)
!8629 = !DILocation(line: 228, column: 8, scope: !8607)
!8630 = !DILocation(line: 230, column: 2, scope: !8607)
!8631 = distinct !DISubprogram(name: "memcmp", scope: !8397, file: !8397, line: 239, type: !8632, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !8634)
!8632 = !DISubroutineType(types: !8633)
!8633 = !{!108, !13, !13, !439}
!8634 = !{!8635, !8636, !8637, !8638, !8639}
!8635 = !DILocalVariable(name: "m1", arg: 1, scope: !8631, file: !8397, line: 239, type: !13)
!8636 = !DILocalVariable(name: "m2", arg: 2, scope: !8631, file: !8397, line: 239, type: !13)
!8637 = !DILocalVariable(name: "n", arg: 3, scope: !8631, file: !8397, line: 239, type: !439)
!8638 = !DILocalVariable(name: "c1", scope: !8631, file: !8397, line: 241, type: !105)
!8639 = !DILocalVariable(name: "c2", scope: !8631, file: !8397, line: 242, type: !105)
!8640 = !DILocation(line: 0, scope: !8631)
!8641 = !DILocation(line: 244, column: 7, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8631, file: !8397, line: 244, column: 6)
!8643 = !DILocation(line: 244, column: 6, scope: !8631)
!8644 = !DILocation(line: 248, column: 10, scope: !8631)
!8645 = !DILocation(line: 248, column: 14, scope: !8631)
!8646 = !DILocation(line: 248, column: 19, scope: !8631)
!8647 = !DILocation(line: 248, column: 2, scope: !8631)
!8648 = !DILocation(line: 248, column: 23, scope: !8631)
!8649 = !DILocation(line: 248, column: 30, scope: !8631)
!8650 = !DILocation(line: 248, column: 27, scope: !8631)
!8651 = !DILocation(line: 249, column: 5, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8631, file: !8397, line: 248, column: 36)
!8653 = !DILocation(line: 250, column: 5, scope: !8652)
!8654 = distinct !{!8654, !8647, !8655}
!8655 = !DILocation(line: 251, column: 2, scope: !8631)
!8656 = !DILocation(line: 253, column: 9, scope: !8631)
!8657 = !DILocation(line: 253, column: 15, scope: !8631)
!8658 = !DILocation(line: 253, column: 13, scope: !8631)
!8659 = !DILocation(line: 253, column: 2, scope: !8631)
!8660 = !DILocation(line: 254, column: 1, scope: !8631)
!8661 = distinct !DISubprogram(name: "memmove", scope: !8397, file: !8397, line: 263, type: !8662, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !8664)
!8662 = !DISubroutineType(types: !8663)
!8663 = !{!104, !104, !13, !439}
!8664 = !{!8665, !8666, !8667, !8668, !8669}
!8665 = !DILocalVariable(name: "d", arg: 1, scope: !8661, file: !8397, line: 263, type: !104)
!8666 = !DILocalVariable(name: "s", arg: 2, scope: !8661, file: !8397, line: 263, type: !13)
!8667 = !DILocalVariable(name: "n", arg: 3, scope: !8661, file: !8397, line: 263, type: !439)
!8668 = !DILocalVariable(name: "dest", scope: !8661, file: !8397, line: 265, type: !443)
!8669 = !DILocalVariable(name: "src", scope: !8661, file: !8397, line: 266, type: !105)
!8670 = !DILocation(line: 0, scope: !8661)
!8671 = !DILocation(line: 268, column: 21, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8661, file: !8397, line: 268, column: 6)
!8673 = !DILocation(line: 268, column: 28, scope: !8672)
!8674 = !DILocation(line: 268, column: 6, scope: !8661)
!8675 = !DILocation(line: 280, column: 12, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8672, file: !8397, line: 278, column: 9)
!8677 = !DILocation(line: 280, column: 3, scope: !8676)
!8678 = !DILocation(line: 275, column: 5, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8680, file: !8397, line: 274, column: 17)
!8680 = distinct !DILexicalBlock(scope: !8672, file: !8397, line: 268, column: 33)
!8681 = !DILocation(line: 276, column: 14, scope: !8679)
!8682 = !DILocation(line: 276, column: 4, scope: !8679)
!8683 = !DILocation(line: 276, column: 12, scope: !8679)
!8684 = !DILocation(line: 274, column: 12, scope: !8680)
!8685 = !DILocation(line: 274, column: 3, scope: !8680)
!8686 = distinct !{!8686, !8685, !8687}
!8687 = !DILocation(line: 277, column: 3, scope: !8680)
!8688 = !DILocation(line: 281, column: 12, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8676, file: !8397, line: 280, column: 17)
!8690 = !DILocation(line: 281, column: 10, scope: !8689)
!8691 = !DILocation(line: 282, column: 8, scope: !8689)
!8692 = !DILocation(line: 283, column: 7, scope: !8689)
!8693 = !DILocation(line: 284, column: 5, scope: !8689)
!8694 = distinct !{!8694, !8677, !8695}
!8695 = !DILocation(line: 285, column: 3, scope: !8676)
!8696 = !DILocation(line: 288, column: 2, scope: !8661)
!8697 = distinct !DISubprogram(name: "memcpy", scope: !8397, file: !8397, line: 298, type: !8698, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !8702)
!8698 = !DISubroutineType(types: !8699)
!8699 = !{!104, !8700, !8701, !439}
!8700 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !104)
!8701 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8702 = !{!8703, !8704, !8705, !8706, !8707}
!8703 = !DILocalVariable(name: "d", arg: 1, scope: !8697, file: !8397, line: 298, type: !8700)
!8704 = !DILocalVariable(name: "s", arg: 2, scope: !8697, file: !8397, line: 298, type: !8701)
!8705 = !DILocalVariable(name: "n", arg: 3, scope: !8697, file: !8397, line: 298, type: !439)
!8706 = !DILocalVariable(name: "d_byte", scope: !8697, file: !8397, line: 302, type: !1336)
!8707 = !DILocalVariable(name: "s_byte", scope: !8697, file: !8397, line: 303, type: !3185)
!8708 = !DILocation(line: 0, scope: !8697)
!8709 = !DILocation(line: 337, column: 11, scope: !8697)
!8710 = !DILocation(line: 337, column: 2, scope: !8697)
!8711 = !DILocation(line: 338, column: 25, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8697, file: !8397, line: 337, column: 16)
!8713 = !DILocation(line: 338, column: 17, scope: !8712)
!8714 = !DILocation(line: 338, column: 11, scope: !8712)
!8715 = !DILocation(line: 338, column: 15, scope: !8712)
!8716 = !DILocation(line: 339, column: 4, scope: !8712)
!8717 = distinct !{!8717, !8710, !8718}
!8718 = !DILocation(line: 340, column: 2, scope: !8697)
!8719 = !DILocation(line: 342, column: 2, scope: !8697)
!8720 = distinct !DISubprogram(name: "memset", scope: !8397, file: !8397, line: 352, type: !8721, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !8723)
!8721 = !DISubroutineType(types: !8722)
!8722 = !{!104, !104, !108, !439}
!8723 = !{!8724, !8725, !8726, !8727, !8728}
!8724 = !DILocalVariable(name: "buf", arg: 1, scope: !8720, file: !8397, line: 352, type: !104)
!8725 = !DILocalVariable(name: "c", arg: 2, scope: !8720, file: !8397, line: 352, type: !108)
!8726 = !DILocalVariable(name: "n", arg: 3, scope: !8720, file: !8397, line: 352, type: !439)
!8727 = !DILocalVariable(name: "d_byte", scope: !8720, file: !8397, line: 356, type: !1336)
!8728 = !DILocalVariable(name: "c_byte", scope: !8720, file: !8397, line: 357, type: !165)
!8729 = !DILocation(line: 0, scope: !8720)
!8730 = !DILocation(line: 357, column: 25, scope: !8720)
!8731 = !DILocation(line: 389, column: 11, scope: !8720)
!8732 = !DILocation(line: 389, column: 2, scope: !8720)
!8733 = !DILocation(line: 390, column: 11, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8720, file: !8397, line: 389, column: 16)
!8735 = !DILocation(line: 390, column: 15, scope: !8734)
!8736 = !DILocation(line: 391, column: 4, scope: !8734)
!8737 = distinct !{!8737, !8732, !8738}
!8738 = !DILocation(line: 392, column: 2, scope: !8720)
!8739 = !DILocation(line: 394, column: 2, scope: !8720)
!8740 = distinct !DISubprogram(name: "memchr", scope: !8397, file: !8397, line: 404, type: !8741, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !8743)
!8741 = !DISubroutineType(types: !8742)
!8742 = !{!104, !13, !108, !439}
!8743 = !{!8744, !8745, !8746, !8747}
!8744 = !DILocalVariable(name: "s", arg: 1, scope: !8740, file: !8397, line: 404, type: !13)
!8745 = !DILocalVariable(name: "c", arg: 2, scope: !8740, file: !8397, line: 404, type: !108)
!8746 = !DILocalVariable(name: "n", arg: 3, scope: !8740, file: !8397, line: 404, type: !439)
!8747 = !DILocalVariable(name: "p", scope: !8748, file: !8397, line: 407, type: !3185)
!8748 = distinct !DILexicalBlock(scope: !8749, file: !8397, line: 406, column: 14)
!8749 = distinct !DILexicalBlock(scope: !8740, file: !8397, line: 406, column: 6)
!8750 = !DILocation(line: 0, scope: !8740)
!8751 = !DILocation(line: 406, column: 8, scope: !8749)
!8752 = !DILocation(line: 406, column: 6, scope: !8740)
!8753 = !DILocation(line: 409, column: 3, scope: !8748)
!8754 = !DILocation(line: 0, scope: !8748)
!8755 = !DILocation(line: 410, column: 8, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8757, file: !8397, line: 410, column: 8)
!8757 = distinct !DILexicalBlock(scope: !8748, file: !8397, line: 409, column: 6)
!8758 = !DILocation(line: 410, column: 13, scope: !8756)
!8759 = !DILocation(line: 410, column: 8, scope: !8757)
!8760 = distinct !{!8760, !8753, !8761}
!8761 = !DILocation(line: 414, column: 20, scope: !8748)
!8762 = !DILocation(line: 417, column: 2, scope: !8740)
!8763 = !DILocation(line: 418, column: 1, scope: !8740)
!8764 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !828, file: !828, line: 23, type: !5003, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !8765)
!8765 = !{!8766}
!8766 = !DILocalVariable(name: "hook", arg: 1, scope: !8764, file: !828, line: 23, type: !558)
!8767 = !DILocation(line: 0, scope: !8764)
!8768 = !DILocation(line: 25, column: 15, scope: !8764)
!8769 = !DILocation(line: 26, column: 1, scope: !8764)
!8770 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !828, file: !828, line: 14, type: !559, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !8771)
!8771 = !{!8772}
!8772 = !DILocalVariable(name: "c", arg: 1, scope: !8770, file: !828, line: 14, type: !108)
!8773 = !DILocation(line: 0, scope: !8770)
!8774 = !DILocation(line: 18, column: 2, scope: !8770)
!8775 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !828, file: !828, line: 28, type: !8776, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !8778)
!8776 = !DISubroutineType(types: !8777)
!8777 = !{!108, !108, !824}
!8778 = !{!8779, !8780}
!8779 = !DILocalVariable(name: "c", arg: 1, scope: !8775, file: !828, line: 28, type: !108)
!8780 = !DILocalVariable(name: "stream", arg: 2, scope: !8775, file: !828, line: 28, type: !824)
!8781 = !DILocation(line: 0, scope: !8775)
!8782 = !DILocation(line: 30, column: 27, scope: !8775)
!8783 = !DILocation(line: 30, column: 50, scope: !8775)
!8784 = !DILocation(line: 30, column: 9, scope: !8775)
!8785 = !DILocation(line: 30, column: 2, scope: !8775)
!8786 = distinct !DISubprogram(name: "fputc", scope: !828, file: !828, line: 41, type: !8776, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !8787)
!8787 = !{!8788, !8789}
!8788 = !DILocalVariable(name: "c", arg: 1, scope: !8786, file: !828, line: 41, type: !108)
!8789 = !DILocalVariable(name: "stream", arg: 2, scope: !8786, file: !828, line: 41, type: !824)
!8790 = !DILocation(line: 0, scope: !8786)
!8791 = !DILocation(line: 43, column: 9, scope: !8786)
!8792 = !DILocation(line: 43, column: 2, scope: !8786)
!8793 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8794, file: !8794, line: 72, type: !8776, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !8795)
!8794 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!8795 = !{!8796, !8797}
!8796 = !DILocalVariable(name: "c", arg: 1, scope: !8793, file: !8794, line: 72, type: !108)
!8797 = !DILocalVariable(name: "stream", arg: 2, scope: !8793, file: !8794, line: 72, type: !824)
!8798 = !DILocation(line: 0, scope: !8793)
!8799 = !DILocation(line: 81, column: 2, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8793, file: !8794, line: 81, column: 2)
!8801 = !{i64 2154920937}
!8802 = !DILocation(line: 82, column: 9, scope: !8793)
!8803 = !DILocation(line: 82, column: 2, scope: !8793)
!8804 = distinct !DISubprogram(name: "fputs", scope: !828, file: !828, line: 46, type: !8805, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !8808)
!8805 = !DISubroutineType(types: !8806)
!8806 = !{!108, !8401, !8807}
!8807 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !824)
!8808 = !{!8809, !8810, !8811, !8812}
!8809 = !DILocalVariable(name: "s", arg: 1, scope: !8804, file: !828, line: 46, type: !8401)
!8810 = !DILocalVariable(name: "stream", arg: 2, scope: !8804, file: !828, line: 46, type: !8807)
!8811 = !DILocalVariable(name: "len", scope: !8804, file: !828, line: 48, type: !108)
!8812 = !DILocalVariable(name: "ret", scope: !8804, file: !828, line: 49, type: !108)
!8813 = !DILocation(line: 0, scope: !8804)
!8814 = !DILocation(line: 48, column: 12, scope: !8804)
!8815 = !DILocation(line: 51, column: 8, scope: !8804)
!8816 = !DILocation(line: 53, column: 13, scope: !8804)
!8817 = !DILocation(line: 53, column: 9, scope: !8804)
!8818 = !DILocation(line: 53, column: 2, scope: !8804)
!8819 = distinct !DISubprogram(name: "fwrite", scope: !828, file: !828, line: 99, type: !8820, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !8822)
!8820 = !DISubroutineType(types: !8821)
!8821 = !{!439, !8701, !439, !439, !8807}
!8822 = !{!8823, !8824, !8825, !8826}
!8823 = !DILocalVariable(name: "ptr", arg: 1, scope: !8819, file: !828, line: 99, type: !8701)
!8824 = !DILocalVariable(name: "size", arg: 2, scope: !8819, file: !828, line: 99, type: !439)
!8825 = !DILocalVariable(name: "nitems", arg: 3, scope: !8819, file: !828, line: 99, type: !439)
!8826 = !DILocalVariable(name: "stream", arg: 4, scope: !8819, file: !828, line: 100, type: !8807)
!8827 = !DILocation(line: 0, scope: !8819)
!8828 = !DILocation(line: 102, column: 9, scope: !8819)
!8829 = !DILocation(line: 102, column: 2, scope: !8819)
!8830 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8794, file: !8794, line: 96, type: !8820, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !8831)
!8831 = !{!8832, !8833, !8834, !8835}
!8832 = !DILocalVariable(name: "ptr", arg: 1, scope: !8830, file: !8794, line: 96, type: !8701)
!8833 = !DILocalVariable(name: "size", arg: 2, scope: !8830, file: !8794, line: 96, type: !439)
!8834 = !DILocalVariable(name: "nitems", arg: 3, scope: !8830, file: !8794, line: 96, type: !439)
!8835 = !DILocalVariable(name: "stream", arg: 4, scope: !8830, file: !8794, line: 96, type: !8807)
!8836 = !DILocation(line: 0, scope: !8830)
!8837 = !DILocation(line: 107, column: 2, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8830, file: !8794, line: 107, column: 2)
!8839 = !{i64 2154921041}
!8840 = !DILocation(line: 108, column: 9, scope: !8830)
!8841 = !DILocation(line: 108, column: 2, scope: !8830)
!8842 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !828, file: !828, line: 56, type: !8820, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !8843)
!8843 = !{!8844, !8845, !8846, !8847, !8848, !8849, !8850, !8851}
!8844 = !DILocalVariable(name: "ptr", arg: 1, scope: !8842, file: !828, line: 56, type: !8701)
!8845 = !DILocalVariable(name: "size", arg: 2, scope: !8842, file: !828, line: 56, type: !439)
!8846 = !DILocalVariable(name: "nitems", arg: 3, scope: !8842, file: !828, line: 57, type: !439)
!8847 = !DILocalVariable(name: "stream", arg: 4, scope: !8842, file: !828, line: 57, type: !8807)
!8848 = !DILocalVariable(name: "i", scope: !8842, file: !828, line: 59, type: !439)
!8849 = !DILocalVariable(name: "j", scope: !8842, file: !828, line: 60, type: !439)
!8850 = !DILocalVariable(name: "p", scope: !8842, file: !828, line: 61, type: !3185)
!8851 = !DILabel(scope: !8842, name: "done", file: !828, line: 82)
!8852 = !DILocation(line: 0, scope: !8842)
!8853 = !DILocation(line: 63, column: 14, scope: !8854)
!8854 = distinct !DILexicalBlock(scope: !8842, file: !828, line: 63, column: 6)
!8855 = !DILocation(line: 63, column: 24, scope: !8854)
!8856 = !DILocation(line: 72, column: 3, scope: !8857)
!8857 = distinct !DILexicalBlock(scope: !8842, file: !828, line: 70, column: 5)
!8858 = !DILocation(line: 0, scope: !8857)
!8859 = !DILocation(line: 73, column: 8, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !8861, file: !828, line: 73, column: 8)
!8861 = distinct !DILexicalBlock(scope: !8857, file: !828, line: 72, column: 6)
!8862 = !DILocation(line: 73, column: 29, scope: !8860)
!8863 = !DILocation(line: 73, column: 27, scope: !8860)
!8864 = !DILocation(line: 73, column: 21, scope: !8860)
!8865 = !DILocation(line: 73, column: 33, scope: !8860)
!8866 = !DILocation(line: 73, column: 8, scope: !8861)
!8867 = !DILocation(line: 76, column: 5, scope: !8861)
!8868 = !DILocation(line: 77, column: 14, scope: !8857)
!8869 = !DILocation(line: 77, column: 3, scope: !8861)
!8870 = distinct !{!8870, !8856, !8871}
!8871 = !DILocation(line: 77, column: 17, scope: !8857)
!8872 = !DILocation(line: 79, column: 4, scope: !8857)
!8873 = !DILocation(line: 80, column: 13, scope: !8842)
!8874 = !DILocation(line: 80, column: 2, scope: !8857)
!8875 = distinct !{!8875, !8876, !8877}
!8876 = !DILocation(line: 70, column: 2, scope: !8842)
!8877 = !DILocation(line: 80, column: 16, scope: !8842)
!8878 = !DILocation(line: 82, column: 1, scope: !8842)
!8879 = !DILocation(line: 83, column: 17, scope: !8842)
!8880 = !DILocation(line: 83, column: 2, scope: !8842)
!8881 = !DILocation(line: 84, column: 1, scope: !8842)
!8882 = distinct !DISubprogram(name: "puts", scope: !828, file: !828, line: 106, type: !8883, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !8885)
!8883 = !DISubroutineType(types: !8884)
!8884 = !{!108, !105}
!8885 = !{!8886}
!8886 = !DILocalVariable(name: "s", arg: 1, scope: !8882, file: !828, line: 106, type: !105)
!8887 = !DILocation(line: 0, scope: !8882)
!8888 = !DILocation(line: 108, column: 6, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !8882, file: !828, line: 108, column: 6)
!8890 = !DILocation(line: 108, column: 23, scope: !8889)
!8891 = !DILocation(line: 108, column: 6, scope: !8882)
!8892 = !DILocation(line: 112, column: 9, scope: !8882)
!8893 = !DILocation(line: 112, column: 29, scope: !8882)
!8894 = !DILocation(line: 112, column: 2, scope: !8882)
!8895 = !DILocation(line: 113, column: 1, scope: !8882)
!8896 = distinct !DISubprogram(name: "rtio_simple_submit", scope: !859, file: !859, line: 25, type: !8897, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !856, retainedNodes: !8986)
!8897 = !DISubroutineType(types: !8898)
!8898 = !{!108, !8899}
!8899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8900, size: 32)
!8900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !8901)
!8901 = !{!8902, !8967, !8968, !8975}
!8902 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !8900, file: !125, line: 228, baseType: !8903, size: 32)
!8903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8904, size: 32)
!8904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !8905)
!8905 = !{!8906}
!8906 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !8904, file: !125, line: 211, baseType: !8907, size: 32)
!8907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8908, size: 32)
!8908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8909)
!8909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !8910)
!8910 = !{!8911, !8913, !8966}
!8911 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !8909, file: !125, line: 177, baseType: !8912, size: 32)
!8912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8897, size: 32)
!8913 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !8909, file: !125, line: 182, baseType: !8914, size: 32, offset: 32)
!8914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8915, size: 32)
!8915 = !DISubroutineType(types: !8916)
!8916 = !{null, !8899, !8917, !108}
!8917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8918, size: 32)
!8918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8919)
!8919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !8920)
!8920 = !{!8921, !8922, !8923, !8924, !8957, !8958}
!8921 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !8919, file: !125, line: 110, baseType: !164, size: 8)
!8922 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8919, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!8923 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8919, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!8924 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !8919, file: !125, line: 116, baseType: !8925, size: 32, offset: 32)
!8925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8926, size: 32)
!8926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8927)
!8927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !8928)
!8928 = !{!8929, !8938, !8956}
!8929 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !8927, file: !125, line: 308, baseType: !8930, size: 32)
!8930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8931, size: 32)
!8931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8932)
!8932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !8933)
!8933 = !{!8934}
!8934 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !8932, file: !125, line: 271, baseType: !8935, size: 32)
!8935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8936, size: 32)
!8936 = !DISubroutineType(types: !8937)
!8937 = !{null, !8917, !8899}
!8938 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !8927, file: !125, line: 311, baseType: !8939, size: 32, offset: 32)
!8939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8940, size: 32)
!8940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !8941)
!8941 = !{!8942, !8950}
!8942 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !8940, file: !125, line: 299, baseType: !8943, size: 160)
!8943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !8944)
!8944 = !{!8945, !8946, !8947, !8948, !8949}
!8945 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !8943, file: !151, line: 60, baseType: !24, size: 32)
!8946 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !8943, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!8947 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !8943, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!8948 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !8943, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!8949 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !8943, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!8950 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !8940, file: !125, line: 300, baseType: !8951, offset: 160)
!8951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8952, elements: !197)
!8952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !8953)
!8953 = !{!8954, !8955}
!8954 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !8952, file: !125, line: 289, baseType: !8917, size: 32)
!8955 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !8952, file: !125, line: 290, baseType: !8899, size: 32, offset: 32)
!8956 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8927, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!8957 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !8919, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!8958 = !DIDerivedType(tag: DW_TAG_member, scope: !8919, file: !125, line: 127, baseType: !8959, size: 64, offset: 96)
!8959 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8919, file: !125, line: 127, size: 64, elements: !8960)
!8960 = !{!8961}
!8961 = !DIDerivedType(tag: DW_TAG_member, scope: !8959, file: !125, line: 128, baseType: !8962, size: 64)
!8962 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8959, file: !125, line: 128, size: 64, elements: !8963)
!8963 = !{!8964, !8965}
!8964 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !8962, file: !125, line: 129, baseType: !113, size: 32)
!8965 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !8962, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!8966 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !8909, file: !125, line: 187, baseType: !8914, size: 32, offset: 64)
!8967 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !8900, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!8968 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !8900, file: !125, line: 254, baseType: !8969, size: 32, offset: 64)
!8969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8970, size: 32)
!8970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !8971)
!8971 = !{!8972, !8973}
!8972 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !8970, file: !125, line: 143, baseType: !8943, size: 160)
!8973 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !8970, file: !125, line: 144, baseType: !8974, offset: 160)
!8974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8919, elements: !197)
!8975 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !8900, file: !125, line: 257, baseType: !8976, size: 32, offset: 96)
!8976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8977, size: 32)
!8977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !8978)
!8978 = !{!8979, !8980}
!8979 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !8977, file: !125, line: 162, baseType: !8943, size: 160)
!8980 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !8977, file: !125, line: 163, baseType: !8981, offset: 160)
!8981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8982, elements: !197)
!8982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !8983)
!8983 = !{!8984, !8985}
!8984 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !8982, file: !125, line: 151, baseType: !220, size: 32)
!8985 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !8982, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!8986 = !{!8987, !8988, !8990, !8992}
!8987 = !DILocalVariable(name: "r", arg: 1, scope: !8896, file: !859, line: 25, type: !8899)
!8988 = !DILocalVariable(name: "sqe", scope: !8896, file: !859, line: 30, type: !8989)
!8989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8919, size: 32)
!8990 = !DILocalVariable(name: "idx", scope: !8991, file: !859, line: 30, type: !24)
!8991 = distinct !DILexicalBlock(scope: !8896, file: !859, line: 30, column: 25)
!8992 = !DILocalVariable(name: "has_consumable", scope: !8991, file: !859, line: 30, type: !422)
!8993 = !DILocation(line: 0, scope: !8896)
!8994 = !DILocation(line: 30, column: 25, scope: !8991)
!8995 = !DILocation(line: 0, scope: !8991)
!8996 = !DILocation(line: 30, column: 25, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8998, file: !859, line: 30, column: 25)
!8998 = distinct !DILexicalBlock(scope: !8991, file: !859, line: 30, column: 25)
!8999 = !DILocation(line: 33, column: 3, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !9001, file: !859, line: 32, column: 19)
!9001 = distinct !DILexicalBlock(scope: !8896, file: !859, line: 32, column: 6)
!9002 = !DILocation(line: 34, column: 2, scope: !9000)
!9003 = !DILocation(line: 36, column: 2, scope: !8896)
!9004 = distinct !DISubprogram(name: "atomic_get", scope: !3708, file: !3708, line: 159, type: !3709, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !856, retainedNodes: !9005)
!9005 = !{!9006}
!9006 = !DILocalVariable(name: "target", arg: 1, scope: !9004, file: !3708, line: 159, type: !3712)
!9007 = !DILocation(line: 0, scope: !9004)
!9008 = !DILocation(line: 161, column: 9, scope: !9004)
!9009 = !DILocation(line: 161, column: 2, scope: !9004)
!9010 = distinct !DISubprogram(name: "rtio_iodev_submit", scope: !125, file: !125, line: 457, type: !8936, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !856, retainedNodes: !9011)
!9011 = !{!9012, !9013}
!9012 = !DILocalVariable(name: "sqe", arg: 1, scope: !9010, file: !125, line: 457, type: !8917)
!9013 = !DILocalVariable(name: "r", arg: 2, scope: !9010, file: !125, line: 457, type: !8899)
!9014 = !DILocation(line: 0, scope: !9010)
!9015 = !DILocation(line: 459, column: 7, scope: !9010)
!9016 = !DILocation(line: 459, column: 14, scope: !9010)
!9017 = !DILocation(line: 459, column: 19, scope: !9010)
!9018 = !DILocation(line: 459, column: 2, scope: !9010)
!9019 = !DILocation(line: 460, column: 1, scope: !9010)
!9020 = distinct !DISubprogram(name: "rtio_simple_ok", scope: !859, file: !859, line: 42, type: !8915, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !856, retainedNodes: !9021)
!9021 = !{!9022, !9023, !9024, !9025}
!9022 = !DILocalVariable(name: "r", arg: 1, scope: !9020, file: !859, line: 42, type: !8899)
!9023 = !DILocalVariable(name: "sqe", arg: 2, scope: !9020, file: !859, line: 42, type: !8917)
!9024 = !DILocalVariable(name: "result", arg: 3, scope: !9020, file: !859, line: 42, type: !108)
!9025 = !DILocalVariable(name: "userdata", scope: !9020, file: !859, line: 44, type: !104)
!9026 = !DILocation(line: 0, scope: !9020)
!9027 = !DILocation(line: 44, column: 24, scope: !9020)
!9028 = !DILocation(line: 46, column: 2, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9030, file: !859, line: 46, column: 2)
!9030 = distinct !DILexicalBlock(scope: !9020, file: !859, line: 46, column: 2)
!9031 = !DILocation(line: 46, column: 2, scope: !9030)
!9032 = !DILocation(line: 46, column: 2, scope: !9033)
!9033 = distinct !DILexicalBlock(scope: !9029, file: !859, line: 46, column: 2)
!9034 = !DILocation(line: 47, column: 2, scope: !9020)
!9035 = !DILocation(line: 48, column: 2, scope: !9020)
!9036 = !DILocation(line: 49, column: 1, scope: !9020)
!9037 = distinct !DISubprogram(name: "atomic_add", scope: !3708, file: !3708, line: 86, type: !3744, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !856, retainedNodes: !9038)
!9038 = !{!9039, !9040}
!9039 = !DILocalVariable(name: "target", arg: 1, scope: !9037, file: !3708, line: 86, type: !3746)
!9040 = !DILocalVariable(name: "value", arg: 2, scope: !9037, file: !3708, line: 86, type: !3711)
!9041 = !DILocation(line: 0, scope: !9037)
!9042 = !DILocation(line: 88, column: 9, scope: !9037)
!9043 = !DILocation(line: 88, column: 2, scope: !9037)
!9044 = distinct !DISubprogram(name: "rtio_cqe_submit", scope: !125, file: !125, line: 607, type: !9045, scopeLine: 608, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !856, retainedNodes: !9047)
!9045 = !DISubroutineType(types: !9046)
!9046 = !{null, !8899, !108, !104}
!9047 = !{!9048, !9049, !9050, !9051, !9053, !9055}
!9048 = !DILocalVariable(name: "r", arg: 1, scope: !9044, file: !125, line: 607, type: !8899)
!9049 = !DILocalVariable(name: "result", arg: 2, scope: !9044, file: !125, line: 607, type: !108)
!9050 = !DILocalVariable(name: "userdata", arg: 3, scope: !9044, file: !125, line: 607, type: !104)
!9051 = !DILocalVariable(name: "cqe", scope: !9044, file: !125, line: 609, type: !9052)
!9052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8982, size: 32)
!9053 = !DILocalVariable(name: "idx", scope: !9054, file: !125, line: 609, type: !24)
!9054 = distinct !DILexicalBlock(scope: !9044, file: !125, line: 609, column: 25)
!9055 = !DILocalVariable(name: "acq", scope: !9054, file: !125, line: 609, type: !422)
!9056 = !DILocation(line: 0, scope: !9044)
!9057 = !DILocation(line: 609, column: 25, scope: !9054)
!9058 = !DILocation(line: 0, scope: !9054)
!9059 = !DILocation(line: 612, column: 18, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !9061, file: !125, line: 611, column: 19)
!9061 = distinct !DILexicalBlock(scope: !9044, file: !125, line: 611, column: 6)
!9062 = !DILocation(line: 612, column: 3, scope: !9060)
!9063 = !DILocation(line: 613, column: 2, scope: !9060)
!9064 = !DILocation(line: 609, column: 25, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9066, file: !125, line: 609, column: 25)
!9066 = distinct !DILexicalBlock(scope: !9054, file: !125, line: 609, column: 25)
!9067 = !DILocation(line: 614, column: 8, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9061, file: !125, line: 613, column: 9)
!9069 = !DILocation(line: 614, column: 15, scope: !9068)
!9070 = !DILocation(line: 615, column: 8, scope: !9068)
!9071 = !DILocation(line: 615, column: 17, scope: !9068)
!9072 = !DILocation(line: 616, column: 3, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9074, file: !125, line: 616, column: 3)
!9074 = distinct !DILexicalBlock(scope: !9068, file: !125, line: 616, column: 3)
!9075 = !DILocation(line: 616, column: 3, scope: !9074)
!9076 = !DILocation(line: 616, column: 3, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9073, file: !125, line: 616, column: 3)
!9078 = !DILocation(line: 629, column: 1, scope: !9044)
!9079 = distinct !DISubprogram(name: "atomic_inc", scope: !3708, file: !3708, line: 123, type: !9080, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !856, retainedNodes: !9082)
!9080 = !DISubroutineType(types: !9081)
!9081 = !{!3711, !3746}
!9082 = !{!9083}
!9083 = !DILocalVariable(name: "target", arg: 1, scope: !9079, file: !3708, line: 123, type: !3746)
!9084 = !DILocation(line: 0, scope: !9079)
!9085 = !DILocation(line: 125, column: 9, scope: !9079)
!9086 = !DILocation(line: 125, column: 2, scope: !9079)
!9087 = distinct !DISubprogram(name: "rtio_simple_err", scope: !859, file: !859, line: 54, type: !8915, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !856, retainedNodes: !9088)
!9088 = !{!9089, !9090, !9091, !9092, !9093, !9094, !9095, !9099, !9100, !9103}
!9089 = !DILocalVariable(name: "r", arg: 1, scope: !9087, file: !859, line: 54, type: !8899)
!9090 = !DILocalVariable(name: "sqe", arg: 2, scope: !9087, file: !859, line: 54, type: !8917)
!9091 = !DILocalVariable(name: "result", arg: 3, scope: !9087, file: !859, line: 54, type: !108)
!9092 = !DILocalVariable(name: "nsqe", scope: !9087, file: !859, line: 56, type: !8989)
!9093 = !DILocalVariable(name: "userdata", scope: !9087, file: !859, line: 57, type: !104)
!9094 = !DILocalVariable(name: "chained", scope: !9087, file: !859, line: 58, type: !422)
!9095 = !DILocalVariable(name: "idx", scope: !9096, file: !859, line: 65, type: !24)
!9096 = distinct !DILexicalBlock(scope: !9097, file: !859, line: 65, column: 10)
!9097 = distinct !DILexicalBlock(scope: !9098, file: !859, line: 63, column: 15)
!9098 = distinct !DILexicalBlock(scope: !9087, file: !859, line: 63, column: 6)
!9099 = !DILocalVariable(name: "has_consumable", scope: !9096, file: !859, line: 65, type: !422)
!9100 = !DILocalVariable(name: "idx", scope: !9101, file: !859, line: 70, type: !24)
!9101 = distinct !DILexicalBlock(scope: !9102, file: !859, line: 70, column: 11)
!9102 = distinct !DILexicalBlock(scope: !9097, file: !859, line: 66, column: 58)
!9103 = !DILocalVariable(name: "has_consumable", scope: !9101, file: !859, line: 70, type: !422)
!9104 = !DILocation(line: 0, scope: !9087)
!9105 = !DILocation(line: 57, column: 24, scope: !9087)
!9106 = !DILocation(line: 58, column: 22, scope: !9087)
!9107 = !DILocation(line: 58, column: 28, scope: !9087)
!9108 = !DILocation(line: 58, column: 17, scope: !9087)
!9109 = !DILocation(line: 60, column: 2, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9111, file: !859, line: 60, column: 2)
!9111 = distinct !DILexicalBlock(scope: !9087, file: !859, line: 60, column: 2)
!9112 = !DILocation(line: 60, column: 2, scope: !9111)
!9113 = !DILocation(line: 60, column: 2, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9110, file: !859, line: 60, column: 2)
!9115 = !DILocation(line: 61, column: 34, scope: !9087)
!9116 = !DILocation(line: 61, column: 2, scope: !9087)
!9117 = !DILocation(line: 63, column: 6, scope: !9087)
!9118 = !DILocation(line: 65, column: 10, scope: !9096)
!9119 = !DILocation(line: 0, scope: !9096)
!9120 = !DILocation(line: 0, scope: !9097)
!9121 = !DILocation(line: 66, column: 32, scope: !9097)
!9122 = !DILocation(line: 66, column: 38, scope: !9097)
!9123 = !DILocation(line: 66, column: 23, scope: !9097)
!9124 = !DILocation(line: 66, column: 3, scope: !9097)
!9125 = !DILocation(line: 67, column: 21, scope: !9102)
!9126 = !DILocation(line: 68, column: 4, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9128, file: !859, line: 68, column: 4)
!9128 = distinct !DILexicalBlock(scope: !9102, file: !859, line: 68, column: 4)
!9129 = !DILocation(line: 68, column: 4, scope: !9128)
!9130 = !DILocation(line: 68, column: 4, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9127, file: !859, line: 68, column: 4)
!9132 = !DILocation(line: 69, column: 4, scope: !9102)
!9133 = !DILocation(line: 70, column: 11, scope: !9101)
!9134 = !DILocation(line: 0, scope: !9101)
!9135 = !DILocation(line: 74, column: 4, scope: !9136)
!9136 = distinct !DILexicalBlock(scope: !9137, file: !859, line: 73, column: 21)
!9137 = distinct !DILexicalBlock(scope: !9097, file: !859, line: 73, column: 7)
!9138 = !DILocation(line: 75, column: 3, scope: !9136)
!9139 = !DILocation(line: 79, column: 3, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !9098, file: !859, line: 77, column: 9)
!9141 = !DILocation(line: 81, column: 1, scope: !9087)
!9142 = distinct !DISubprogram(name: "rtio_concurrent_submit", scope: !976, file: !976, line: 119, type: !884, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !9143)
!9143 = !{!9144, !9145, !9146, !9147, !9148, !9153, !9157, !9158, !9161, !9162, !9164, !9167, !9168, !9170, !9171, !9174}
!9144 = !DILocalVariable(name: "r", arg: 1, scope: !9142, file: !976, line: 119, type: !886)
!9145 = !DILocalVariable(name: "exc", scope: !9142, file: !976, line: 124, type: !870)
!9146 = !DILocalVariable(name: "sqe", scope: !9142, file: !976, line: 126, type: !970)
!9147 = !DILocalVariable(name: "last_sqe", scope: !9142, file: !976, line: 127, type: !970)
!9148 = !DILocalVariable(name: "key", scope: !9142, file: !976, line: 128, type: !9149)
!9149 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !9150)
!9150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !9151)
!9151 = !{!9152}
!9152 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9150, file: !436, line: 33, baseType: !108, size: 32)
!9153 = !DILocalVariable(name: "idx", scope: !9154, file: !976, line: 137, type: !24)
!9154 = distinct !DILexicalBlock(scope: !9155, file: !976, line: 137, column: 9)
!9155 = distinct !DILexicalBlock(scope: !9156, file: !976, line: 136, column: 29)
!9156 = distinct !DILexicalBlock(scope: !9142, file: !976, line: 136, column: 6)
!9157 = !DILocalVariable(name: "has_consumable", scope: !9154, file: !976, line: 137, type: !422)
!9158 = !DILocalVariable(name: "idx", scope: !9159, file: !976, line: 140, type: !24)
!9159 = distinct !DILexicalBlock(scope: !9160, file: !976, line: 140, column: 9)
!9160 = distinct !DILexicalBlock(scope: !9156, file: !976, line: 138, column: 9)
!9161 = !DILocalVariable(name: "has_next", scope: !9159, file: !976, line: 140, type: !422)
!9162 = !DILocalVariable(name: "task_idx", scope: !9163, file: !976, line: 148, type: !168)
!9163 = distinct !DILexicalBlock(scope: !9142, file: !976, line: 144, column: 46)
!9164 = !DILocalVariable(name: "idx", scope: !9165, file: !976, line: 159, type: !24)
!9165 = distinct !DILexicalBlock(scope: !9166, file: !976, line: 159, column: 10)
!9166 = distinct !DILexicalBlock(scope: !9163, file: !976, line: 158, column: 58)
!9167 = !DILocalVariable(name: "has_next", scope: !9165, file: !976, line: 159, type: !422)
!9168 = !DILocalVariable(name: "idx", scope: !9169, file: !976, line: 167, type: !24)
!9169 = distinct !DILexicalBlock(scope: !9163, file: !976, line: 167, column: 9)
!9170 = !DILocalVariable(name: "has_next", scope: !9169, file: !976, line: 167, type: !422)
!9171 = !DILocalVariable(name: "idx", scope: !9172, file: !976, line: 181, type: !24)
!9172 = distinct !DILexicalBlock(scope: !9173, file: !976, line: 181, column: 9)
!9173 = distinct !DILexicalBlock(scope: !9142, file: !976, line: 179, column: 22)
!9174 = !DILocalVariable(name: "has_next", scope: !9172, file: !976, line: 181, type: !422)
!9175 = !DILocation(line: 0, scope: !9142)
!9176 = !DILocation(line: 122, column: 2, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9178, file: !976, line: 122, column: 2)
!9178 = distinct !DILexicalBlock(scope: !9179, file: !976, line: 122, column: 2)
!9179 = distinct !DILexicalBlock(scope: !9180, file: !976, line: 122, column: 2)
!9180 = distinct !DILexicalBlock(scope: !9142, file: !976, line: 122, column: 2)
!9181 = !DILocation(line: 125, column: 41, scope: !9142)
!9182 = !DILocalVariable(name: "l", arg: 1, scope: !9183, file: !436, line: 136, type: !9186)
!9183 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !9184, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !9187)
!9184 = !DISubroutineType(types: !9185)
!9185 = !{!9149, !9186}
!9186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 32)
!9187 = !{!9182, !9188}
!9188 = !DILocalVariable(name: "k", scope: !9183, file: !436, line: 139, type: !9149)
!9189 = !DILocation(line: 0, scope: !9183, inlinedAt: !9190)
!9190 = distinct !DILocation(line: 130, column: 8, scope: !9142)
!9191 = !DILocation(line: 55, column: 2, scope: !9192, inlinedAt: !9196)
!9192 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4087, file: !4087, line: 42, type: !4088, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !9193)
!9193 = !{!9194, !9195}
!9194 = !DILocalVariable(name: "key", scope: !9192, file: !4087, line: 44, type: !32)
!9195 = !DILocalVariable(name: "tmp", scope: !9192, file: !4087, line: 53, type: !32)
!9196 = distinct !DILocation(line: 145, column: 10, scope: !9183, inlinedAt: !9190)
!9197 = !{i64 1971582}
!9198 = !DILocation(line: 0, scope: !9192, inlinedAt: !9196)
!9199 = !DILocation(line: 136, column: 11, scope: !9156)
!9200 = !DILocation(line: 136, column: 20, scope: !9156)
!9201 = !DILocation(line: 0, scope: !9156)
!9202 = !DILocation(line: 136, column: 6, scope: !9142)
!9203 = !DILocation(line: 137, column: 9, scope: !9154)
!9204 = !DILocation(line: 0, scope: !9154)
!9205 = !DILocation(line: 140, column: 9, scope: !9159)
!9206 = !DILocation(line: 0, scope: !9159)
!9207 = !DILocation(line: 173, column: 7, scope: !9142)
!9208 = !DILocation(line: 173, column: 19, scope: !9142)
!9209 = !DILocation(line: 179, column: 2, scope: !9142)
!9210 = !DILocation(line: 144, column: 24, scope: !9142)
!9211 = !DILocation(line: 144, column: 2, scope: !9142)
!9212 = !DILocation(line: 145, column: 3, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9214, file: !976, line: 145, column: 3)
!9214 = distinct !DILexicalBlock(scope: !9215, file: !976, line: 145, column: 3)
!9215 = distinct !DILexicalBlock(scope: !9216, file: !976, line: 145, column: 3)
!9216 = distinct !DILexicalBlock(scope: !9163, file: !976, line: 145, column: 3)
!9217 = !DILocation(line: 148, column: 23, scope: !9163)
!9218 = !DILocation(line: 0, scope: !9163)
!9219 = !DILocation(line: 150, column: 3, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9221, file: !976, line: 150, column: 3)
!9221 = distinct !DILexicalBlock(scope: !9222, file: !976, line: 150, column: 3)
!9222 = distinct !DILexicalBlock(scope: !9223, file: !976, line: 150, column: 3)
!9223 = distinct !DILexicalBlock(scope: !9163, file: !976, line: 150, column: 3)
!9224 = !DILocation(line: 153, column: 8, scope: !9163)
!9225 = !DILocation(line: 153, column: 3, scope: !9163)
!9226 = !DILocation(line: 153, column: 27, scope: !9163)
!9227 = !DILocation(line: 154, column: 8, scope: !9163)
!9228 = !DILocation(line: 154, column: 3, scope: !9163)
!9229 = !DILocation(line: 154, column: 30, scope: !9163)
!9230 = !DILocation(line: 156, column: 3, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9232, file: !976, line: 156, column: 3)
!9232 = distinct !DILexicalBlock(scope: !9233, file: !976, line: 156, column: 3)
!9233 = distinct !DILexicalBlock(scope: !9234, file: !976, line: 156, column: 3)
!9234 = distinct !DILexicalBlock(scope: !9163, file: !976, line: 156, column: 3)
!9235 = !DILocation(line: 158, column: 22, scope: !9163)
!9236 = !DILocation(line: 158, column: 31, scope: !9163)
!9237 = !DILocation(line: 158, column: 37, scope: !9163)
!9238 = !DILocation(line: 158, column: 3, scope: !9163)
!9239 = !DILocation(line: 159, column: 10, scope: !9165)
!9240 = !DILocation(line: 0, scope: !9165)
!9241 = !DILocation(line: 162, column: 3, scope: !9242)
!9242 = distinct !DILexicalBlock(scope: !9243, file: !976, line: 162, column: 3)
!9243 = distinct !DILexicalBlock(scope: !9244, file: !976, line: 162, column: 3)
!9244 = distinct !DILexicalBlock(scope: !9245, file: !976, line: 162, column: 3)
!9245 = distinct !DILexicalBlock(scope: !9163, file: !976, line: 162, column: 3)
!9246 = !DILocation(line: 167, column: 9, scope: !9169)
!9247 = !DILocation(line: 0, scope: !9169)
!9248 = !DILocation(line: 144, column: 21, scope: !9142)
!9249 = !DILocation(line: 179, column: 13, scope: !9142)
!9250 = !DILocation(line: 181, column: 9, scope: !9172)
!9251 = !DILocation(line: 0, scope: !9172)
!9252 = !DILocation(line: 185, column: 16, scope: !9142)
!9253 = !DILocation(line: 188, column: 2, scope: !9142)
!9254 = !DILocalVariable(name: "key", arg: 2, scope: !9255, file: !436, line: 190, type: !9149)
!9255 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !9256, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !9258)
!9256 = !DISubroutineType(types: !9257)
!9257 = !{null, !9186, !9149}
!9258 = !{!9259, !9254}
!9259 = !DILocalVariable(name: "l", arg: 1, scope: !9255, file: !436, line: 189, type: !9186)
!9260 = !DILocation(line: 0, scope: !9255, inlinedAt: !9261)
!9261 = distinct !DILocation(line: 190, column: 2, scope: !9142)
!9262 = !DILocalVariable(name: "key", arg: 1, scope: !9263, file: !4087, line: 84, type: !32)
!9263 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4087, file: !4087, line: 84, type: !4100, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !9264)
!9264 = !{!9262}
!9265 = !DILocation(line: 0, scope: !9263, inlinedAt: !9266)
!9266 = distinct !DILocation(line: 215, column: 2, scope: !9255, inlinedAt: !9261)
!9267 = !DILocation(line: 95, column: 2, scope: !9263, inlinedAt: !9266)
!9268 = !{i64 1972399}
!9269 = !DILocation(line: 192, column: 2, scope: !9142)
!9270 = distinct !DISubprogram(name: "atomic_get", scope: !3708, file: !3708, line: 159, type: !3709, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !9271)
!9271 = !{!9272}
!9272 = !DILocalVariable(name: "target", arg: 1, scope: !9270, file: !3708, line: 159, type: !3712)
!9273 = !DILocation(line: 0, scope: !9270)
!9274 = !DILocation(line: 161, column: 9, scope: !9270)
!9275 = !DILocation(line: 161, column: 2, scope: !9270)
!9276 = distinct !DISubprogram(name: "conex_task_free", scope: !976, file: !976, line: 39, type: !9277, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !9279)
!9277 = !DISubroutineType(types: !9278)
!9278 = !{!422, !870}
!9279 = !{!9280}
!9280 = !DILocalVariable(name: "exc", arg: 1, scope: !9276, file: !976, line: 39, type: !870)
!9281 = !DILocation(line: 0, scope: !9276)
!9282 = !DILocation(line: 41, column: 15, scope: !9276)
!9283 = !DILocation(line: 41, column: 10, scope: !9276)
!9284 = !DILocation(line: 41, column: 30, scope: !9276)
!9285 = !DILocation(line: 41, column: 25, scope: !9276)
!9286 = !DILocation(line: 41, column: 23, scope: !9276)
!9287 = !DILocation(line: 41, column: 48, scope: !9276)
!9288 = !DILocation(line: 41, column: 43, scope: !9276)
!9289 = !DILocation(line: 41, column: 40, scope: !9276)
!9290 = !DILocation(line: 41, column: 2, scope: !9276)
!9291 = distinct !DISubprogram(name: "conex_task_next", scope: !976, file: !976, line: 47, type: !9292, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !9294)
!9292 = !DISubroutineType(types: !9293)
!9293 = !{!168, !870}
!9294 = !{!9295, !9296}
!9295 = !DILocalVariable(name: "exc", arg: 1, scope: !9291, file: !976, line: 47, type: !870)
!9296 = !DILocalVariable(name: "task_id", scope: !9291, file: !976, line: 49, type: !168)
!9297 = !DILocation(line: 0, scope: !9291)
!9298 = !DILocation(line: 49, column: 26, scope: !9291)
!9299 = !DILocation(line: 51, column: 14, scope: !9291)
!9300 = !DILocation(line: 52, column: 2, scope: !9291)
!9301 = distinct !DISubprogram(name: "conex_resume", scope: !976, file: !976, line: 94, type: !9302, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !9304)
!9302 = !DISubroutineType(types: !9303)
!9303 = !{null, !886, !870}
!9304 = !{!9305, !9306, !9307}
!9305 = !DILocalVariable(name: "r", arg: 1, scope: !9301, file: !976, line: 94, type: !886)
!9306 = !DILocalVariable(name: "exc", arg: 2, scope: !9301, file: !976, line: 94, type: !870)
!9307 = !DILocalVariable(name: "task_id", scope: !9308, file: !976, line: 97, type: !168)
!9308 = distinct !DILexicalBlock(scope: !9301, file: !976, line: 97, column: 2)
!9309 = !DILocation(line: 0, scope: !9301)
!9310 = !DILocation(line: 97, column: 31, scope: !9308)
!9311 = !DILocation(line: 0, scope: !9308)
!9312 = !DILocation(line: 97, column: 56, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9308, file: !976, line: 97, column: 2)
!9314 = !DILocation(line: 97, column: 49, scope: !9313)
!9315 = !DILocation(line: 97, column: 2, scope: !9308)
!9316 = !DILocation(line: 104, column: 1, scope: !9301)
!9317 = !DILocation(line: 98, column: 12, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9319, file: !976, line: 98, column: 7)
!9319 = distinct !DILexicalBlock(scope: !9313, file: !976, line: 97, column: 76)
!9320 = !DILocation(line: 98, column: 39, scope: !9318)
!9321 = !DILocation(line: 98, column: 32, scope: !9318)
!9322 = !DILocation(line: 98, column: 7, scope: !9318)
!9323 = !DILocation(line: 98, column: 50, scope: !9318)
!9324 = !DILocation(line: 98, column: 7, scope: !9319)
!9325 = !DILocation(line: 99, column: 4, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9327, file: !976, line: 99, column: 4)
!9327 = distinct !DILexicalBlock(scope: !9328, file: !976, line: 99, column: 4)
!9328 = distinct !DILexicalBlock(scope: !9329, file: !976, line: 99, column: 4)
!9329 = distinct !DILexicalBlock(scope: !9330, file: !976, line: 99, column: 4)
!9330 = distinct !DILexicalBlock(scope: !9318, file: !976, line: 98, column: 74)
!9331 = !DILocation(line: 100, column: 9, scope: !9330)
!9332 = !DILocation(line: 100, column: 4, scope: !9330)
!9333 = !DILocation(line: 100, column: 30, scope: !9330)
!9334 = !DILocation(line: 101, column: 27, scope: !9330)
!9335 = !DILocation(line: 101, column: 22, scope: !9330)
!9336 = !DILocation(line: 101, column: 4, scope: !9330)
!9337 = !DILocation(line: 102, column: 3, scope: !9330)
!9338 = !DILocation(line: 97, column: 72, scope: !9313)
!9339 = distinct !{!9339, !9315, !9340}
!9340 = !DILocation(line: 103, column: 2, scope: !9308)
!9341 = distinct !DISubprogram(name: "rtio_iodev_submit", scope: !125, file: !125, line: 457, type: !923, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !9342)
!9342 = !{!9343, !9344}
!9343 = !DILocalVariable(name: "sqe", arg: 1, scope: !9341, file: !125, line: 457, type: !925)
!9344 = !DILocalVariable(name: "r", arg: 2, scope: !9341, file: !125, line: 457, type: !886)
!9345 = !DILocation(line: 0, scope: !9341)
!9346 = !DILocation(line: 459, column: 7, scope: !9341)
!9347 = !DILocation(line: 459, column: 14, scope: !9341)
!9348 = !DILocation(line: 459, column: 19, scope: !9341)
!9349 = !DILocation(line: 459, column: 2, scope: !9341)
!9350 = !DILocation(line: 460, column: 1, scope: !9341)
!9351 = distinct !DISubprogram(name: "rtio_concurrent_ok", scope: !976, file: !976, line: 198, type: !961, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !9352)
!9352 = !{!9353, !9354, !9355, !9356, !9357, !9358, !9359, !9360, !9364}
!9353 = !DILocalVariable(name: "r", arg: 1, scope: !9351, file: !976, line: 198, type: !886)
!9354 = !DILocalVariable(name: "sqe", arg: 2, scope: !9351, file: !976, line: 198, type: !925)
!9355 = !DILocalVariable(name: "result", arg: 3, scope: !9351, file: !976, line: 198, type: !108)
!9356 = !DILocalVariable(name: "next_sqe", scope: !9351, file: !976, line: 200, type: !970)
!9357 = !DILocalVariable(name: "key", scope: !9351, file: !976, line: 201, type: !9149)
!9358 = !DILocalVariable(name: "exc", scope: !9351, file: !976, line: 202, type: !870)
!9359 = !DILocalVariable(name: "task_id", scope: !9351, file: !976, line: 216, type: !168)
!9360 = !DILocalVariable(name: "idx", scope: !9361, file: !976, line: 219, type: !24)
!9361 = distinct !DILexicalBlock(scope: !9362, file: !976, line: 219, column: 14)
!9362 = distinct !DILexicalBlock(scope: !9363, file: !976, line: 218, column: 37)
!9363 = distinct !DILexicalBlock(scope: !9351, file: !976, line: 218, column: 6)
!9364 = !DILocalVariable(name: "has_next", scope: !9361, file: !976, line: 219, type: !422)
!9365 = !DILocation(line: 0, scope: !9351)
!9366 = !DILocation(line: 202, column: 79, scope: !9351)
!9367 = !DILocation(line: 0, scope: !9183, inlinedAt: !9368)
!9368 = distinct !DILocation(line: 211, column: 8, scope: !9351)
!9369 = !DILocation(line: 55, column: 2, scope: !9192, inlinedAt: !9370)
!9370 = distinct !DILocation(line: 145, column: 10, scope: !9183, inlinedAt: !9368)
!9371 = !DILocation(line: 0, scope: !9192, inlinedAt: !9370)
!9372 = !DILocation(line: 213, column: 34, scope: !9351)
!9373 = !DILocation(line: 213, column: 2, scope: !9351)
!9374 = !DILocation(line: 216, column: 21, scope: !9351)
!9375 = !DILocation(line: 218, column: 11, scope: !9363)
!9376 = !DILocation(line: 218, column: 17, scope: !9363)
!9377 = !DILocation(line: 218, column: 6, scope: !9351)
!9378 = !DILocation(line: 219, column: 14, scope: !9361)
!9379 = !DILocation(line: 0, scope: !9361)
!9380 = !DILocation(line: 221, column: 3, scope: !9362)
!9381 = !DILocation(line: 223, column: 8, scope: !9362)
!9382 = !DILocation(line: 223, column: 3, scope: !9362)
!9383 = !DILocation(line: 223, column: 26, scope: !9362)
!9384 = !DILocation(line: 224, column: 2, scope: !9362)
!9385 = !DILocation(line: 225, column: 8, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9363, file: !976, line: 224, column: 9)
!9387 = !DILocation(line: 225, column: 3, scope: !9386)
!9388 = !DILocation(line: 225, column: 30, scope: !9386)
!9389 = !DILocation(line: 233, column: 2, scope: !9351)
!9390 = !DILocation(line: 0, scope: !9255, inlinedAt: !9391)
!9391 = distinct !DILocation(line: 235, column: 2, scope: !9351)
!9392 = !DILocation(line: 0, scope: !9263, inlinedAt: !9393)
!9393 = distinct !DILocation(line: 215, column: 2, scope: !9255, inlinedAt: !9391)
!9394 = !DILocation(line: 95, column: 2, scope: !9263, inlinedAt: !9393)
!9395 = !DILocation(line: 236, column: 1, scope: !9351)
!9396 = distinct !DISubprogram(name: "rtio_cqe_submit", scope: !125, file: !125, line: 607, type: !9397, scopeLine: 608, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !9399)
!9397 = !DISubroutineType(types: !9398)
!9398 = !{null, !886, !108, !104}
!9399 = !{!9400, !9401, !9402, !9403, !9405, !9407}
!9400 = !DILocalVariable(name: "r", arg: 1, scope: !9396, file: !125, line: 607, type: !886)
!9401 = !DILocalVariable(name: "result", arg: 2, scope: !9396, file: !125, line: 607, type: !108)
!9402 = !DILocalVariable(name: "userdata", arg: 3, scope: !9396, file: !125, line: 607, type: !104)
!9403 = !DILocalVariable(name: "cqe", scope: !9396, file: !125, line: 609, type: !9404)
!9404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 32)
!9405 = !DILocalVariable(name: "idx", scope: !9406, file: !125, line: 609, type: !24)
!9406 = distinct !DILexicalBlock(scope: !9396, file: !125, line: 609, column: 25)
!9407 = !DILocalVariable(name: "acq", scope: !9406, file: !125, line: 609, type: !422)
!9408 = !DILocation(line: 0, scope: !9396)
!9409 = !DILocation(line: 609, column: 25, scope: !9406)
!9410 = !DILocation(line: 0, scope: !9406)
!9411 = !DILocation(line: 612, column: 18, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !9413, file: !125, line: 611, column: 19)
!9413 = distinct !DILexicalBlock(scope: !9396, file: !125, line: 611, column: 6)
!9414 = !DILocation(line: 612, column: 3, scope: !9412)
!9415 = !DILocation(line: 613, column: 2, scope: !9412)
!9416 = !DILocation(line: 609, column: 25, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9418, file: !125, line: 609, column: 25)
!9418 = distinct !DILexicalBlock(scope: !9406, file: !125, line: 609, column: 25)
!9419 = !DILocation(line: 614, column: 8, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9413, file: !125, line: 613, column: 9)
!9421 = !DILocation(line: 614, column: 15, scope: !9420)
!9422 = !DILocation(line: 615, column: 8, scope: !9420)
!9423 = !DILocation(line: 615, column: 17, scope: !9420)
!9424 = !DILocation(line: 616, column: 3, scope: !9425)
!9425 = distinct !DILexicalBlock(scope: !9426, file: !125, line: 616, column: 3)
!9426 = distinct !DILexicalBlock(scope: !9420, file: !125, line: 616, column: 3)
!9427 = !DILocation(line: 616, column: 3, scope: !9426)
!9428 = !DILocation(line: 616, column: 3, scope: !9429)
!9429 = distinct !DILexicalBlock(scope: !9425, file: !125, line: 616, column: 3)
!9430 = !DILocation(line: 629, column: 1, scope: !9396)
!9431 = distinct !DISubprogram(name: "conex_task_id", scope: !976, file: !976, line: 55, type: !9432, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !9434)
!9432 = !DISubroutineType(types: !9433)
!9433 = !{!168, !870, !925}
!9434 = !{!9435, !9436, !9437}
!9435 = !DILocalVariable(name: "exc", arg: 1, scope: !9431, file: !976, line: 55, type: !870)
!9436 = !DILocalVariable(name: "sqe", arg: 2, scope: !9431, file: !976, line: 56, type: !925)
!9437 = !DILocalVariable(name: "task_id", scope: !9431, file: !976, line: 58, type: !168)
!9438 = !DILocation(line: 0, scope: !9431)
!9439 = !DILocation(line: 58, column: 26, scope: !9431)
!9440 = !DILocation(line: 60, column: 17, scope: !9441)
!9441 = distinct !DILexicalBlock(scope: !9442, file: !976, line: 60, column: 2)
!9442 = distinct !DILexicalBlock(scope: !9431, file: !976, line: 60, column: 2)
!9443 = !DILocation(line: 60, column: 2, scope: !9442)
!9444 = !DILocation(line: 61, column: 12, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9446, file: !976, line: 61, column: 7)
!9446 = distinct !DILexicalBlock(scope: !9441, file: !976, line: 60, column: 44)
!9447 = !DILocation(line: 61, column: 29, scope: !9445)
!9448 = !DILocation(line: 61, column: 7, scope: !9445)
!9449 = !DILocation(line: 61, column: 47, scope: !9445)
!9450 = !DILocation(line: 61, column: 7, scope: !9446)
!9451 = !DILocation(line: 60, column: 40, scope: !9441)
!9452 = distinct !{!9452, !9443, !9453}
!9453 = !DILocation(line: 64, column: 2, scope: !9442)
!9454 = !DILocation(line: 65, column: 2, scope: !9431)
!9455 = distinct !DISubprogram(name: "conex_sweep_resume", scope: !976, file: !976, line: 106, type: !9302, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !9456)
!9456 = !{!9457, !9458}
!9457 = !DILocalVariable(name: "r", arg: 1, scope: !9455, file: !976, line: 106, type: !886)
!9458 = !DILocalVariable(name: "exc", arg: 2, scope: !9455, file: !976, line: 106, type: !870)
!9459 = !DILocation(line: 0, scope: !9455)
!9460 = !DILocation(line: 108, column: 2, scope: !9455)
!9461 = !DILocation(line: 109, column: 2, scope: !9455)
!9462 = !DILocation(line: 110, column: 1, scope: !9455)
!9463 = distinct !DISubprogram(name: "conex_sweep", scope: !976, file: !976, line: 80, type: !9302, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !9464)
!9464 = !{!9465, !9466, !9467}
!9465 = !DILocalVariable(name: "r", arg: 1, scope: !9463, file: !976, line: 80, type: !886)
!9466 = !DILocalVariable(name: "exc", arg: 2, scope: !9463, file: !976, line: 80, type: !870)
!9467 = !DILocalVariable(name: "task_id", scope: !9468, file: !976, line: 83, type: !168)
!9468 = distinct !DILexicalBlock(scope: !9463, file: !976, line: 83, column: 2)
!9469 = !DILocation(line: 0, scope: !9463)
!9470 = !DILocation(line: 83, column: 31, scope: !9468)
!9471 = !DILocation(line: 0, scope: !9468)
!9472 = !DILocation(line: 84, column: 12, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9474, file: !976, line: 84, column: 7)
!9474 = distinct !DILexicalBlock(scope: !9475, file: !976, line: 83, column: 76)
!9475 = distinct !DILexicalBlock(scope: !9468, file: !976, line: 83, column: 2)
!9476 = !DILocation(line: 83, column: 56, scope: !9475)
!9477 = !DILocation(line: 83, column: 49, scope: !9475)
!9478 = !DILocation(line: 83, column: 2, scope: !9468)
!9479 = !DILocation(line: 84, column: 39, scope: !9473)
!9480 = !DILocation(line: 84, column: 32, scope: !9473)
!9481 = !DILocation(line: 84, column: 7, scope: !9473)
!9482 = !DILocation(line: 84, column: 50, scope: !9473)
!9483 = !DILocation(line: 84, column: 7, scope: !9474)
!9484 = !DILocation(line: 85, column: 4, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9486, file: !976, line: 85, column: 4)
!9486 = distinct !DILexicalBlock(scope: !9487, file: !976, line: 85, column: 4)
!9487 = distinct !DILexicalBlock(scope: !9488, file: !976, line: 85, column: 4)
!9488 = distinct !DILexicalBlock(scope: !9489, file: !976, line: 85, column: 4)
!9489 = distinct !DILexicalBlock(scope: !9473, file: !976, line: 84, column: 73)
!9490 = !DILocation(line: 86, column: 4, scope: !9489)
!9491 = !DILocation(line: 87, column: 17, scope: !9489)
!9492 = !DILocation(line: 83, column: 72, scope: !9475)
!9493 = distinct !{!9493, !9478, !9494}
!9494 = !DILocation(line: 91, column: 2, scope: !9468)
!9495 = !DILocation(line: 92, column: 1, scope: !9463)
!9496 = distinct !DISubprogram(name: "conex_sweep_task", scope: !976, file: !976, line: 68, type: !9302, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !9497)
!9497 = !{!9498, !9499, !9500, !9501, !9503, !9504, !9507}
!9498 = !DILocalVariable(name: "r", arg: 1, scope: !9496, file: !976, line: 68, type: !886)
!9499 = !DILocalVariable(name: "exc", arg: 2, scope: !9496, file: !976, line: 68, type: !870)
!9500 = !DILocalVariable(name: "sqe", scope: !9496, file: !976, line: 70, type: !970)
!9501 = !DILocalVariable(name: "idx", scope: !9502, file: !976, line: 70, type: !24)
!9502 = distinct !DILexicalBlock(scope: !9496, file: !976, line: 70, column: 25)
!9503 = !DILocalVariable(name: "has_consumable", scope: !9502, file: !976, line: 70, type: !422)
!9504 = !DILocalVariable(name: "idx", scope: !9505, file: !976, line: 74, type: !24)
!9505 = distinct !DILexicalBlock(scope: !9506, file: !976, line: 74, column: 9)
!9506 = distinct !DILexicalBlock(scope: !9496, file: !976, line: 72, column: 55)
!9507 = !DILocalVariable(name: "has_consumable", scope: !9505, file: !976, line: 74, type: !422)
!9508 = !DILocation(line: 0, scope: !9496)
!9509 = !DILocation(line: 70, column: 25, scope: !9502)
!9510 = !DILocation(line: 0, scope: !9502)
!9511 = !DILocation(line: 72, column: 29, scope: !9496)
!9512 = !DILocation(line: 72, column: 35, scope: !9496)
!9513 = !DILocation(line: 72, column: 21, scope: !9496)
!9514 = !DILocation(line: 72, column: 2, scope: !9496)
!9515 = !DILocation(line: 73, column: 3, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9517, file: !976, line: 73, column: 3)
!9517 = distinct !DILexicalBlock(scope: !9506, file: !976, line: 73, column: 3)
!9518 = !DILocation(line: 73, column: 3, scope: !9517)
!9519 = !DILocation(line: 73, column: 3, scope: !9520)
!9520 = distinct !DILexicalBlock(scope: !9516, file: !976, line: 73, column: 3)
!9521 = !DILocation(line: 74, column: 9, scope: !9505)
!9522 = !DILocation(line: 0, scope: !9505)
!9523 = !DILocation(line: 77, column: 2, scope: !9524)
!9524 = distinct !DILexicalBlock(scope: !9525, file: !976, line: 77, column: 2)
!9525 = distinct !DILexicalBlock(scope: !9496, file: !976, line: 77, column: 2)
!9526 = !DILocation(line: 77, column: 2, scope: !9525)
!9527 = !DILocation(line: 77, column: 2, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9524, file: !976, line: 77, column: 2)
!9529 = !DILocation(line: 78, column: 1, scope: !9496)
!9530 = distinct !DISubprogram(name: "atomic_add", scope: !3708, file: !3708, line: 86, type: !3744, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !9531)
!9531 = !{!9532, !9533}
!9532 = !DILocalVariable(name: "target", arg: 1, scope: !9530, file: !3708, line: 86, type: !3746)
!9533 = !DILocalVariable(name: "value", arg: 2, scope: !9530, file: !3708, line: 86, type: !3711)
!9534 = !DILocation(line: 0, scope: !9530)
!9535 = !DILocation(line: 88, column: 9, scope: !9530)
!9536 = !DILocation(line: 88, column: 2, scope: !9530)
!9537 = distinct !DISubprogram(name: "atomic_inc", scope: !3708, file: !3708, line: 123, type: !9080, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !9538)
!9538 = !{!9539}
!9539 = !DILocalVariable(name: "target", arg: 1, scope: !9537, file: !3708, line: 123, type: !3746)
!9540 = !DILocation(line: 0, scope: !9537)
!9541 = !DILocation(line: 125, column: 9, scope: !9537)
!9542 = !DILocation(line: 125, column: 2, scope: !9537)
!9543 = distinct !DISubprogram(name: "rtio_concurrent_err", scope: !976, file: !976, line: 241, type: !961, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !9544)
!9544 = !{!9545, !9546, !9547, !9548, !9549, !9550, !9551, !9552, !9556, !9557, !9560}
!9545 = !DILocalVariable(name: "r", arg: 1, scope: !9543, file: !976, line: 241, type: !886)
!9546 = !DILocalVariable(name: "sqe", arg: 2, scope: !9543, file: !976, line: 241, type: !925)
!9547 = !DILocalVariable(name: "result", arg: 3, scope: !9543, file: !976, line: 241, type: !108)
!9548 = !DILocalVariable(name: "nsqe", scope: !9543, file: !976, line: 243, type: !970)
!9549 = !DILocalVariable(name: "key", scope: !9543, file: !976, line: 244, type: !9149)
!9550 = !DILocalVariable(name: "exc", scope: !9543, file: !976, line: 245, type: !870)
!9551 = !DILocalVariable(name: "task_id", scope: !9543, file: !976, line: 260, type: !168)
!9552 = !DILocalVariable(name: "idx", scope: !9553, file: !976, line: 265, type: !24)
!9553 = distinct !DILexicalBlock(scope: !9554, file: !976, line: 265, column: 10)
!9554 = distinct !DILexicalBlock(scope: !9555, file: !976, line: 264, column: 37)
!9555 = distinct !DILexicalBlock(scope: !9543, file: !976, line: 264, column: 6)
!9556 = !DILocalVariable(name: "has_next", scope: !9553, file: !976, line: 265, type: !422)
!9557 = !DILocalVariable(name: "idx", scope: !9558, file: !976, line: 268, type: !24)
!9558 = distinct !DILexicalBlock(scope: !9559, file: !976, line: 268, column: 11)
!9559 = distinct !DILexicalBlock(scope: !9554, file: !976, line: 266, column: 58)
!9560 = !DILocalVariable(name: "has_next", scope: !9558, file: !976, line: 268, type: !422)
!9561 = !DILocation(line: 0, scope: !9543)
!9562 = !DILocation(line: 245, column: 79, scope: !9543)
!9563 = !DILocation(line: 0, scope: !9183, inlinedAt: !9564)
!9564 = distinct !DILocation(line: 255, column: 8, scope: !9543)
!9565 = !DILocation(line: 55, column: 2, scope: !9192, inlinedAt: !9566)
!9566 = distinct !DILocation(line: 145, column: 10, scope: !9183, inlinedAt: !9564)
!9567 = !DILocation(line: 0, scope: !9192, inlinedAt: !9566)
!9568 = !DILocation(line: 257, column: 34, scope: !9543)
!9569 = !DILocation(line: 257, column: 2, scope: !9543)
!9570 = !DILocation(line: 260, column: 21, scope: !9543)
!9571 = !DILocation(line: 264, column: 11, scope: !9555)
!9572 = !DILocation(line: 264, column: 17, scope: !9555)
!9573 = !DILocation(line: 264, column: 6, scope: !9543)
!9574 = !DILocation(line: 265, column: 10, scope: !9553)
!9575 = !DILocation(line: 0, scope: !9553)
!9576 = !DILocation(line: 266, column: 23, scope: !9554)
!9577 = !DILocation(line: 266, column: 3, scope: !9554)
!9578 = !DILocation(line: 266, column: 32, scope: !9554)
!9579 = !DILocation(line: 266, column: 38, scope: !9554)
!9580 = !DILocation(line: 267, column: 41, scope: !9559)
!9581 = !DILocation(line: 267, column: 4, scope: !9559)
!9582 = !DILocation(line: 268, column: 11, scope: !9558)
!9583 = !DILocation(line: 0, scope: !9558)
!9584 = !DILocation(line: 273, column: 7, scope: !9543)
!9585 = !DILocation(line: 273, column: 2, scope: !9543)
!9586 = !DILocation(line: 273, column: 28, scope: !9543)
!9587 = !DILocation(line: 275, column: 2, scope: !9543)
!9588 = !DILocation(line: 0, scope: !9255, inlinedAt: !9589)
!9589 = distinct !DILocation(line: 277, column: 2, scope: !9543)
!9590 = !DILocation(line: 0, scope: !9263, inlinedAt: !9591)
!9591 = distinct !DILocation(line: 215, column: 2, scope: !9255, inlinedAt: !9589)
!9592 = !DILocation(line: 95, column: 2, scope: !9263, inlinedAt: !9591)
!9593 = !DILocation(line: 278, column: 1, scope: !9543)
!9594 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !1089, file: !1089, line: 368, type: !1139, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9595)
!9595 = !{!9596}
!9596 = !DILocalVariable(name: "dev", arg: 1, scope: !9594, file: !1089, line: 368, type: !1115)
!9597 = !DILocation(line: 0, scope: !9594)
!9598 = !DILocation(line: 370, column: 2, scope: !9594)
!9599 = !DILocation(line: 371, column: 1, scope: !9594)
!9600 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !1089, file: !1089, line: 243, type: !9601, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9603)
!9601 = !DISubroutineType(types: !9602)
!9602 = !{null, !108, !108, !1115}
!9603 = !{!9604, !9605, !9606, !9607, !9609}
!9604 = !DILocalVariable(name: "min", arg: 1, scope: !9600, file: !1089, line: 243, type: !108)
!9605 = !DILocalVariable(name: "max", arg: 2, scope: !9600, file: !1089, line: 243, type: !108)
!9606 = !DILocalVariable(name: "dev", arg: 3, scope: !9600, file: !1089, line: 243, type: !1115)
!9607 = !DILocalVariable(name: "data", scope: !9600, file: !1089, line: 245, type: !9608)
!9608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 32)
!9609 = !DILocalVariable(name: "line", scope: !9600, file: !1089, line: 246, type: !108)
!9610 = !DILocation(line: 0, scope: !9600)
!9611 = !DILocation(line: 245, column: 38, scope: !9600)
!9612 = !DILocation(line: 249, column: 24, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9614, file: !1089, line: 249, column: 2)
!9614 = distinct !DILexicalBlock(scope: !9600, file: !1089, line: 249, column: 2)
!9615 = !DILocation(line: 249, column: 2, scope: !9614)
!9616 = !DILocation(line: 251, column: 7, scope: !9617)
!9617 = distinct !DILexicalBlock(scope: !9618, file: !1089, line: 251, column: 7)
!9618 = distinct !DILexicalBlock(scope: !9613, file: !1089, line: 249, column: 39)
!9619 = !DILocation(line: 251, column: 7, scope: !9618)
!9620 = !DILocation(line: 253, column: 4, scope: !9621)
!9621 = distinct !DILexicalBlock(scope: !9617, file: !1089, line: 251, column: 36)
!9622 = !DILocation(line: 256, column: 24, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9621, file: !1089, line: 256, column: 8)
!9624 = !DILocation(line: 256, column: 9, scope: !9623)
!9625 = !DILocation(line: 256, column: 8, scope: !9621)
!9626 = !DILocation(line: 260, column: 43, scope: !9621)
!9627 = !DILocation(line: 260, column: 4, scope: !9621)
!9628 = !DILocation(line: 261, column: 3, scope: !9621)
!9629 = !DILocation(line: 249, column: 35, scope: !9613)
!9630 = distinct !{!9630, !9615, !9631}
!9631 = !DILocation(line: 262, column: 2, scope: !9614)
!9632 = !DILocation(line: 263, column: 1, scope: !9600)
!9633 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !1089, file: !1089, line: 158, type: !559, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9634)
!9634 = !{!9635}
!9635 = !DILocalVariable(name: "line", arg: 1, scope: !9633, file: !1089, line: 158, type: !108)
!9636 = !DILocation(line: 0, scope: !9633)
!9637 = !DILocation(line: 170, column: 38, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9639, file: !1089, line: 160, column: 17)
!9639 = distinct !DILexicalBlock(scope: !9633, file: !1089, line: 160, column: 6)
!9640 = !DILocation(line: 170, column: 10, scope: !9638)
!9641 = !DILocation(line: 176, column: 1, scope: !9633)
!9642 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !1089, file: !1089, line: 183, type: !9643, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9645)
!9643 = !DISubroutineType(types: !9644)
!9644 = !{null, !108}
!9645 = !{!9646}
!9646 = !DILocalVariable(name: "line", arg: 1, scope: !9642, file: !1089, line: 183, type: !108)
!9647 = !DILocation(line: 0, scope: !9642)
!9648 = !DILocation(line: 195, column: 28, scope: !9649)
!9649 = distinct !DILexicalBlock(scope: !9650, file: !1089, line: 185, column: 17)
!9650 = distinct !DILexicalBlock(scope: !9642, file: !1089, line: 185, column: 6)
!9651 = !DILocation(line: 195, column: 3, scope: !9649)
!9652 = !DILocation(line: 200, column: 1, scope: !9642)
!9653 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9654, file: !9654, line: 910, type: !7154, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9655)
!9654 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9655 = !{!9656}
!9656 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9653, file: !9654, line: 910, type: !113)
!9657 = !DILocation(line: 0, scope: !9653)
!9658 = !DILocation(line: 912, column: 3, scope: !9653)
!9659 = !DILocation(line: 913, column: 1, scope: !9653)
!9660 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9654, file: !9654, line: 834, type: !8309, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9661)
!9661 = !{!9662}
!9662 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9660, file: !9654, line: 834, type: !113)
!9663 = !DILocation(line: 0, scope: !9660)
!9664 = !DILocation(line: 836, column: 11, scope: !9660)
!9665 = !DILocation(line: 836, column: 40, scope: !9660)
!9666 = !DILocation(line: 836, column: 3, scope: !9660)
!9667 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !1089, file: !1089, line: 304, type: !1139, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9668)
!9668 = !{!9669}
!9669 = !DILocalVariable(name: "dev", arg: 1, scope: !9667, file: !1089, line: 304, type: !1115)
!9670 = !DILocation(line: 0, scope: !9667)
!9671 = !DILocation(line: 306, column: 2, scope: !9667)
!9672 = !DILocation(line: 307, column: 1, scope: !9667)
!9673 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !1089, file: !1089, line: 299, type: !1139, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9674)
!9674 = !{!9675}
!9675 = !DILocalVariable(name: "dev", arg: 1, scope: !9673, file: !1089, line: 299, type: !1115)
!9676 = !DILocation(line: 0, scope: !9673)
!9677 = !DILocation(line: 301, column: 2, scope: !9673)
!9678 = !DILocation(line: 302, column: 1, scope: !9673)
!9679 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !1089, file: !1089, line: 294, type: !1139, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9680)
!9680 = !{!9681}
!9681 = !DILocalVariable(name: "dev", arg: 1, scope: !9679, file: !1089, line: 294, type: !1115)
!9682 = !DILocation(line: 0, scope: !9679)
!9683 = !DILocation(line: 296, column: 2, scope: !9679)
!9684 = !DILocation(line: 297, column: 1, scope: !9679)
!9685 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !1089, file: !1089, line: 397, type: !1139, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9686)
!9686 = !{!9687}
!9687 = !DILocalVariable(name: "dev", arg: 1, scope: !9685, file: !1089, line: 397, type: !1115)
!9688 = !DILocation(line: 0, scope: !9685)
!9689 = !DILocation(line: 399, column: 2, scope: !9685)
!9690 = !DILocation(line: 400, column: 1, scope: !9685)
!9691 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !1089, file: !1089, line: 392, type: !1139, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9692)
!9692 = !{!9693}
!9693 = !DILocalVariable(name: "dev", arg: 1, scope: !9691, file: !1089, line: 392, type: !1115)
!9694 = !DILocation(line: 0, scope: !9691)
!9695 = !DILocation(line: 394, column: 2, scope: !9691)
!9696 = !DILocation(line: 395, column: 1, scope: !9691)
!9697 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !1089, file: !1089, line: 289, type: !1139, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9698)
!9698 = !{!9699}
!9699 = !DILocalVariable(name: "dev", arg: 1, scope: !9697, file: !1089, line: 289, type: !1115)
!9700 = !DILocation(line: 0, scope: !9697)
!9701 = !DILocation(line: 291, column: 2, scope: !9697)
!9702 = !DILocation(line: 292, column: 1, scope: !9697)
!9703 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !1089, file: !1089, line: 387, type: !1139, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9704)
!9704 = !{!9705}
!9705 = !DILocalVariable(name: "dev", arg: 1, scope: !9703, file: !1089, line: 387, type: !1115)
!9706 = !DILocation(line: 0, scope: !9703)
!9707 = !DILocation(line: 389, column: 2, scope: !9703)
!9708 = !DILocation(line: 390, column: 1, scope: !9703)
!9709 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !1089, file: !1089, line: 382, type: !1139, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9710)
!9710 = !{!9711}
!9711 = !DILocalVariable(name: "dev", arg: 1, scope: !9709, file: !1089, line: 382, type: !1115)
!9712 = !DILocation(line: 0, scope: !9709)
!9713 = !DILocation(line: 384, column: 2, scope: !9709)
!9714 = !DILocation(line: 385, column: 1, scope: !9709)
!9715 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !1089, file: !1089, line: 373, type: !1139, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9716)
!9716 = !{!9717}
!9717 = !DILocalVariable(name: "dev", arg: 1, scope: !9715, file: !1089, line: 373, type: !1115)
!9718 = !DILocation(line: 0, scope: !9715)
!9719 = !DILocation(line: 375, column: 2, scope: !9715)
!9720 = !DILocation(line: 376, column: 1, scope: !9715)
!9721 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !1089, file: !1089, line: 284, type: !1139, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9722)
!9722 = !{!9723}
!9723 = !DILocalVariable(name: "dev", arg: 1, scope: !9721, file: !1089, line: 284, type: !1115)
!9724 = !DILocation(line: 0, scope: !9721)
!9725 = !DILocation(line: 286, column: 2, scope: !9721)
!9726 = !DILocation(line: 287, column: 1, scope: !9721)
!9727 = distinct !DISubprogram(name: "stm32_exti_init", scope: !1089, file: !1089, line: 416, type: !1113, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9728)
!9728 = !{!9729}
!9729 = !DILocalVariable(name: "dev", arg: 1, scope: !9727, file: !1089, line: 416, type: !1115)
!9730 = !DILocation(line: 0, scope: !9727)
!9731 = !DILocation(line: 418, column: 2, scope: !9727)
!9732 = !DILocation(line: 420, column: 2, scope: !9727)
!9733 = !DILocation(line: 0, scope: !1138)
!9734 = !DILocation(line: 493, column: 2, scope: !9735)
!9735 = distinct !DILexicalBlock(scope: !1138, file: !1089, line: 493, column: 2)
!9736 = !DILocation(line: 497, column: 2, scope: !9737)
!9737 = distinct !DILexicalBlock(scope: !1138, file: !1089, line: 497, column: 2)
!9738 = !DILocation(line: 507, column: 2, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !1138, file: !1089, line: 507, column: 2)
!9740 = !DILocation(line: 512, column: 2, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !1138, file: !1089, line: 512, column: 2)
!9742 = !DILocation(line: 516, column: 2, scope: !9743)
!9743 = distinct !DILexicalBlock(scope: !1138, file: !1089, line: 516, column: 2)
!9744 = !DILocation(line: 523, column: 2, scope: !9745)
!9745 = distinct !DILexicalBlock(scope: !1138, file: !1089, line: 523, column: 2)
!9746 = !DILocation(line: 527, column: 2, scope: !9747)
!9747 = distinct !DILexicalBlock(scope: !1138, file: !1089, line: 527, column: 2)
!9748 = !DILocation(line: 581, column: 2, scope: !9749)
!9749 = distinct !DILexicalBlock(scope: !1138, file: !1089, line: 581, column: 2)
!9750 = !DILocation(line: 586, column: 2, scope: !9751)
!9751 = distinct !DILexicalBlock(scope: !1138, file: !1089, line: 586, column: 2)
!9752 = !DILocation(line: 591, column: 2, scope: !9753)
!9753 = distinct !DILexicalBlock(scope: !1138, file: !1089, line: 591, column: 2)
!9754 = !DILocation(line: 595, column: 2, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !1138, file: !1089, line: 595, column: 2)
!9756 = !DILocation(line: 607, column: 1, scope: !1138)
!9757 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !1089, file: !1089, line: 112, type: !9643, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9758)
!9758 = !{!9759, !9760}
!9759 = !DILocalVariable(name: "line", arg: 1, scope: !9757, file: !1089, line: 112, type: !108)
!9760 = !DILocalVariable(name: "irqnum", scope: !9757, file: !1089, line: 114, type: !108)
!9761 = !DILocation(line: 0, scope: !9757)
!9762 = !DILocation(line: 121, column: 11, scope: !9757)
!9763 = !DILocation(line: 130, column: 26, scope: !9757)
!9764 = !DILocation(line: 130, column: 2, scope: !9757)
!9765 = !DILocation(line: 134, column: 2, scope: !9757)
!9766 = !DILocation(line: 135, column: 1, scope: !9757)
!9767 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9654, file: !9654, line: 268, type: !7154, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9768)
!9768 = !{!9769}
!9769 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9767, file: !9654, line: 268, type: !113)
!9770 = !DILocation(line: 0, scope: !9767)
!9771 = !DILocation(line: 270, column: 3, scope: !9767)
!9772 = !DILocation(line: 271, column: 1, scope: !9767)
!9773 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !1089, file: !1089, line: 137, type: !9643, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9774)
!9774 = !{!9775}
!9775 = !DILocalVariable(name: "line", arg: 1, scope: !9773, file: !1089, line: 137, type: !108)
!9776 = !DILocation(line: 0, scope: !9773)
!9777 = !DILocation(line: 141, column: 11, scope: !9778)
!9778 = distinct !DILexicalBlock(scope: !9773, file: !1089, line: 141, column: 6)
!9779 = !DILocation(line: 141, column: 6, scope: !9773)
!9780 = !DILocation(line: 145, column: 28, scope: !9781)
!9781 = distinct !DILexicalBlock(scope: !9778, file: !1089, line: 141, column: 17)
!9782 = !DILocation(line: 145, column: 3, scope: !9781)
!9783 = !DILocation(line: 147, column: 2, scope: !9781)
!9784 = !DILocation(line: 151, column: 1, scope: !9773)
!9785 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9654, file: !9654, line: 309, type: !7154, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9786)
!9786 = !{!9787}
!9787 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9785, file: !9654, line: 309, type: !113)
!9788 = !DILocation(line: 0, scope: !9785)
!9789 = !DILocation(line: 311, column: 3, scope: !9785)
!9790 = !DILocation(line: 312, column: 1, scope: !9785)
!9791 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !1089, file: !1089, line: 202, type: !9792, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9794)
!9792 = !DISubroutineType(types: !9793)
!9793 = !{null, !108, !108}
!9794 = !{!9795, !9796}
!9795 = !DILocalVariable(name: "line", arg: 1, scope: !9791, file: !1089, line: 202, type: !108)
!9796 = !DILocalVariable(name: "trigger", arg: 2, scope: !9791, file: !1089, line: 202, type: !108)
!9797 = !DILocation(line: 0, scope: !9791)
!9798 = !DILocation(line: 211, column: 2, scope: !9791)
!9799 = !DILocation(line: 213, column: 36, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9791, file: !1089, line: 211, column: 19)
!9801 = !DILocation(line: 213, column: 3, scope: !9800)
!9802 = !DILocation(line: 214, column: 3, scope: !9800)
!9803 = !DILocation(line: 215, column: 3, scope: !9800)
!9804 = !DILocation(line: 217, column: 35, scope: !9800)
!9805 = !DILocation(line: 217, column: 3, scope: !9800)
!9806 = !DILocation(line: 218, column: 3, scope: !9800)
!9807 = !DILocation(line: 219, column: 3, scope: !9800)
!9808 = !DILocation(line: 221, column: 36, scope: !9800)
!9809 = !DILocation(line: 221, column: 3, scope: !9800)
!9810 = !DILocation(line: 222, column: 3, scope: !9800)
!9811 = !DILocation(line: 223, column: 3, scope: !9800)
!9812 = !DILocation(line: 225, column: 35, scope: !9800)
!9813 = !DILocation(line: 225, column: 3, scope: !9800)
!9814 = !DILocation(line: 226, column: 3, scope: !9800)
!9815 = !DILocation(line: 227, column: 3, scope: !9800)
!9816 = !DILocation(line: 232, column: 1, scope: !9791)
!9817 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9654, file: !9654, line: 573, type: !7154, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9818)
!9818 = !{!9819}
!9819 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9817, file: !9654, line: 573, type: !113)
!9820 = !DILocation(line: 0, scope: !9817)
!9821 = !DILocation(line: 575, column: 3, scope: !9817)
!9822 = !DILocation(line: 577, column: 1, scope: !9817)
!9823 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9654, file: !9654, line: 703, type: !7154, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9824)
!9824 = !{!9825}
!9825 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9823, file: !9654, line: 703, type: !113)
!9826 = !DILocation(line: 0, scope: !9823)
!9827 = !DILocation(line: 705, column: 3, scope: !9823)
!9828 = !DILocation(line: 706, column: 1, scope: !9823)
!9829 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9654, file: !9654, line: 529, type: !7154, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9830)
!9830 = !{!9831}
!9831 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9829, file: !9654, line: 529, type: !113)
!9832 = !DILocation(line: 0, scope: !9829)
!9833 = !DILocation(line: 531, column: 3, scope: !9829)
!9834 = !DILocation(line: 533, column: 1, scope: !9829)
!9835 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9654, file: !9654, line: 661, type: !7154, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9836)
!9836 = !{!9837}
!9837 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9835, file: !9654, line: 661, type: !113)
!9838 = !DILocation(line: 0, scope: !9835)
!9839 = !DILocation(line: 663, column: 3, scope: !9835)
!9840 = !DILocation(line: 664, column: 1, scope: !9835)
!9841 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !1089, file: !1089, line: 433, type: !9842, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9844)
!9842 = !DISubroutineType(types: !9843)
!9843 = !{!108, !108, !1126, !104}
!9844 = !{!9845, !9846, !9847, !9848, !9850}
!9845 = !DILocalVariable(name: "line", arg: 1, scope: !9841, file: !1089, line: 433, type: !108)
!9846 = !DILocalVariable(name: "cb", arg: 2, scope: !9841, file: !1089, line: 433, type: !1126)
!9847 = !DILocalVariable(name: "arg", arg: 3, scope: !9841, file: !1089, line: 433, type: !104)
!9848 = !DILocalVariable(name: "dev", scope: !9841, file: !1089, line: 435, type: !9849)
!9849 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1115)
!9850 = !DILocalVariable(name: "data", scope: !9841, file: !1089, line: 436, type: !9608)
!9851 = !DILocation(line: 0, scope: !9841)
!9852 = !DILocation(line: 438, column: 21, scope: !9853)
!9853 = distinct !DILexicalBlock(scope: !9841, file: !1089, line: 438, column: 6)
!9854 = !DILocation(line: 438, column: 6, scope: !9853)
!9855 = !DILocation(line: 438, column: 6, scope: !9841)
!9856 = !DILocation(line: 442, column: 20, scope: !9841)
!9857 = !DILocation(line: 443, column: 17, scope: !9841)
!9858 = !DILocation(line: 443, column: 22, scope: !9841)
!9859 = !DILocation(line: 445, column: 2, scope: !9841)
!9860 = !DILocation(line: 446, column: 1, scope: !9841)
!9861 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !1089, file: !1089, line: 448, type: !9643, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !984, retainedNodes: !9862)
!9862 = !{!9863, !9864, !9865}
!9863 = !DILocalVariable(name: "line", arg: 1, scope: !9861, file: !1089, line: 448, type: !108)
!9864 = !DILocalVariable(name: "dev", scope: !9861, file: !1089, line: 450, type: !9849)
!9865 = !DILocalVariable(name: "data", scope: !9861, file: !1089, line: 451, type: !9608)
!9866 = !DILocation(line: 0, scope: !9861)
!9867 = !DILocation(line: 453, column: 17, scope: !9861)
!9868 = !DILocation(line: 453, column: 20, scope: !9861)
!9869 = !DILocation(line: 454, column: 17, scope: !9861)
!9870 = !DILocation(line: 454, column: 22, scope: !9861)
!9871 = !DILocation(line: 455, column: 1, scope: !9861)
!9872 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1235, file: !1235, line: 183, type: !1273, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !9873)
!9873 = !{!9874, !9875, !9876, !9877, !9878}
!9874 = !DILocalVariable(name: "dev", arg: 1, scope: !9872, file: !1235, line: 183, type: !1264)
!9875 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9872, file: !1235, line: 184, type: !1275)
!9876 = !DILocalVariable(name: "pclken", scope: !9872, file: !1235, line: 186, type: !1225)
!9877 = !DILocalVariable(name: "reg", scope: !9872, file: !1235, line: 187, type: !1825)
!9878 = !DILocalVariable(name: "reg_val", scope: !9872, file: !1235, line: 188, type: !113)
!9879 = !DILocation(line: 0, scope: !9872)
!9880 = !DILocation(line: 192, column: 6, scope: !9881)
!9881 = distinct !DILexicalBlock(scope: !9872, file: !1235, line: 192, column: 6)
!9882 = !DILocation(line: 192, column: 6, scope: !9872)
!9883 = !DILocation(line: 197, column: 52, scope: !9872)
!9884 = !DILocation(line: 197, column: 8, scope: !9872)
!9885 = !DILocation(line: 198, column: 12, scope: !9872)
!9886 = !DILocation(line: 199, column: 21, scope: !9872)
!9887 = !DILocation(line: 199, column: 10, scope: !9872)
!9888 = !DILocation(line: 200, column: 7, scope: !9872)
!9889 = !DILocation(line: 202, column: 2, scope: !9872)
!9890 = !DILocation(line: 203, column: 1, scope: !9872)
!9891 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1235, file: !1235, line: 205, type: !1273, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !9892)
!9892 = !{!9893, !9894, !9895, !9896, !9897}
!9893 = !DILocalVariable(name: "dev", arg: 1, scope: !9891, file: !1235, line: 205, type: !1264)
!9894 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9891, file: !1235, line: 206, type: !1275)
!9895 = !DILocalVariable(name: "pclken", scope: !9891, file: !1235, line: 208, type: !1225)
!9896 = !DILocalVariable(name: "reg", scope: !9891, file: !1235, line: 209, type: !1825)
!9897 = !DILocalVariable(name: "reg_val", scope: !9891, file: !1235, line: 210, type: !113)
!9898 = !DILocation(line: 0, scope: !9891)
!9899 = !DILocation(line: 214, column: 6, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9891, file: !1235, line: 214, column: 6)
!9901 = !DILocation(line: 214, column: 6, scope: !9891)
!9902 = !DILocation(line: 219, column: 52, scope: !9891)
!9903 = !DILocation(line: 219, column: 8, scope: !9891)
!9904 = !DILocation(line: 220, column: 12, scope: !9891)
!9905 = !DILocation(line: 221, column: 22, scope: !9891)
!9906 = !DILocation(line: 221, column: 13, scope: !9891)
!9907 = !DILocation(line: 221, column: 10, scope: !9891)
!9908 = !DILocation(line: 222, column: 7, scope: !9891)
!9909 = !DILocation(line: 224, column: 2, scope: !9891)
!9910 = !DILocation(line: 225, column: 1, scope: !9891)
!9911 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1235, file: !1235, line: 262, type: !1289, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !9912)
!9912 = !{!9913, !9914, !9915, !9916, !9917, !9918, !9919, !9920}
!9913 = !DILocalVariable(name: "clock", arg: 1, scope: !9911, file: !1235, line: 262, type: !1264)
!9914 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9911, file: !1235, line: 263, type: !1275)
!9915 = !DILocalVariable(name: "rate", arg: 3, scope: !9911, file: !1235, line: 264, type: !1231)
!9916 = !DILocalVariable(name: "pclken", scope: !9911, file: !1235, line: 266, type: !1225)
!9917 = !DILocalVariable(name: "ahb_clock", scope: !9911, file: !1235, line: 273, type: !113)
!9918 = !DILocalVariable(name: "apb1_clock", scope: !9911, file: !1235, line: 274, type: !113)
!9919 = !DILocalVariable(name: "apb2_clock", scope: !9911, file: !1235, line: 276, type: !113)
!9920 = !DILocalVariable(name: "ahb3_clock", scope: !9911, file: !1235, line: 286, type: !113)
!9921 = !DILocation(line: 0, scope: !9911)
!9922 = !DILocation(line: 273, column: 23, scope: !9911)
!9923 = !DILocation(line: 299, column: 18, scope: !9911)
!9924 = !DILocation(line: 299, column: 2, scope: !9911)
!9925 = !DILocation(line: 274, column: 24, scope: !9911)
!9926 = !DILocation(line: 319, column: 3, scope: !9927)
!9927 = distinct !DILexicalBlock(scope: !9911, file: !1235, line: 299, column: 23)
!9928 = !DILocation(line: 276, column: 24, scope: !9911)
!9929 = !DILocation(line: 323, column: 3, scope: !9927)
!9930 = !DILocation(line: 346, column: 33, scope: !9927)
!9931 = !DILocation(line: 346, column: 11, scope: !9927)
!9932 = !DILocation(line: 350, column: 3, scope: !9927)
!9933 = !DILocation(line: 354, column: 33, scope: !9927)
!9934 = !DILocation(line: 354, column: 11, scope: !9927)
!9935 = !DILocation(line: 358, column: 3, scope: !9927)
!9936 = !DILocation(line: 374, column: 3, scope: !9927)
!9937 = !DILocation(line: 379, column: 3, scope: !9927)
!9938 = !DILocation(line: 0, scope: !9927)
!9939 = !DILocation(line: 396, column: 1, scope: !9911)
!9940 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1235, file: !1235, line: 227, type: !1305, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !9941)
!9941 = !{!9942, !9943, !9944, !9945, !9946, !9947, !9948, !9949}
!9942 = !DILocalVariable(name: "dev", arg: 1, scope: !9940, file: !1235, line: 227, type: !1264)
!9943 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9940, file: !1235, line: 228, type: !1275)
!9944 = !DILocalVariable(name: "data", arg: 3, scope: !9940, file: !1235, line: 229, type: !104)
!9945 = !DILocalVariable(name: "pclken", scope: !9940, file: !1235, line: 233, type: !1225)
!9946 = !DILocalVariable(name: "reg", scope: !9940, file: !1235, line: 234, type: !1825)
!9947 = !DILocalVariable(name: "reg_val", scope: !9940, file: !1235, line: 235, type: !113)
!9948 = !DILocalVariable(name: "dt_val", scope: !9940, file: !1235, line: 235, type: !113)
!9949 = !DILocalVariable(name: "err", scope: !9940, file: !1235, line: 236, type: !108)
!9950 = !DILocation(line: 0, scope: !9940)
!9951 = !DILocation(line: 241, column: 30, scope: !9940)
!9952 = !DILocation(line: 241, column: 8, scope: !9940)
!9953 = !DILocation(line: 242, column: 10, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9940, file: !1235, line: 242, column: 6)
!9955 = !DILocation(line: 242, column: 6, scope: !9940)
!9956 = !DILocation(line: 247, column: 11, scope: !9940)
!9957 = !DILocation(line: 248, column: 6, scope: !9940)
!9958 = !DILocation(line: 247, column: 44, scope: !9940)
!9959 = !DILocation(line: 250, column: 6, scope: !9940)
!9960 = !DILocation(line: 249, column: 52, scope: !9940)
!9961 = !DILocation(line: 249, column: 8, scope: !9940)
!9962 = !DILocation(line: 251, column: 12, scope: !9940)
!9963 = !DILocation(line: 252, column: 10, scope: !9940)
!9964 = !DILocation(line: 253, column: 7, scope: !9940)
!9965 = !DILocation(line: 255, column: 2, scope: !9940)
!9966 = !DILocation(line: 260, column: 1, scope: !9940)
!9967 = distinct !DISubprogram(name: "enabled_clock", scope: !1235, file: !1235, line: 100, type: !9968, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !9970)
!9968 = !DISubroutineType(types: !9969)
!9969 = !{!108, !113}
!9970 = !{!9971, !9972}
!9971 = !DILocalVariable(name: "src_clk", arg: 1, scope: !9967, file: !1235, line: 100, type: !113)
!9972 = !DILocalVariable(name: "r", scope: !9967, file: !1235, line: 102, type: !108)
!9973 = !DILocation(line: 0, scope: !9967)
!9974 = !DILocation(line: 104, column: 2, scope: !9967)
!9975 = !DILocation(line: 180, column: 2, scope: !9967)
!9976 = !DILocation(line: 181, column: 1, scope: !9967)
!9977 = distinct !DISubprogram(name: "get_bus_clock", scope: !1235, file: !1235, line: 79, type: !9978, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !9980)
!9978 = !DISubroutineType(types: !9979)
!9979 = !{!113, !113, !113}
!9980 = !{!9981, !9982}
!9981 = !DILocalVariable(name: "clock", arg: 1, scope: !9977, file: !1235, line: 79, type: !113)
!9982 = !DILocalVariable(name: "prescaler", arg: 2, scope: !9977, file: !1235, line: 79, type: !113)
!9983 = !DILocation(line: 0, scope: !9977)
!9984 = !DILocation(line: 81, column: 15, scope: !9977)
!9985 = !DILocation(line: 81, column: 2, scope: !9977)
!9986 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1235, file: !1235, line: 68, type: !9987, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !9989)
!9987 = !DISubroutineType(types: !9988)
!9988 = !{!113, !113, !108, !108, !108}
!9989 = !{!9990, !9991, !9992, !9993}
!9990 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !9986, file: !1235, line: 68, type: !113)
!9991 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !9986, file: !1235, line: 69, type: !108)
!9992 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !9986, file: !1235, line: 70, type: !108)
!9993 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !9986, file: !1235, line: 71, type: !108)
!9994 = !DILocation(line: 0, scope: !9986)
!9995 = !DILocation(line: 75, column: 22, scope: !9986)
!9996 = !DILocation(line: 76, column: 13, scope: !9986)
!9997 = !DILocation(line: 75, column: 34, scope: !9986)
!9998 = !DILocation(line: 75, column: 2, scope: !9986)
!9999 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1235, file: !1235, line: 641, type: !1262, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !10000)
!10000 = !{!10001, !10002, !10003}
!10001 = !DILocalVariable(name: "dev", arg: 1, scope: !9999, file: !1235, line: 641, type: !1264)
!10002 = !DILocalVariable(name: "old_flash_freq", scope: !9999, file: !1235, line: 664, type: !113)
!10003 = !DILocalVariable(name: "new_flash_freq", scope: !9999, file: !1235, line: 665, type: !113)
!10004 = !DILocation(line: 0, scope: !9999)
!10005 = !DILocation(line: 646, column: 2, scope: !9999)
!10006 = !DILocation(line: 667, column: 19, scope: !9999)
!10007 = !DILocation(line: 674, column: 21, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !9999, file: !1235, line: 674, column: 6)
!10009 = !DILocation(line: 674, column: 6, scope: !9999)
!10010 = !DILocation(line: 675, column: 3, scope: !10011)
!10011 = distinct !DILexicalBlock(scope: !10008, file: !1235, line: 674, column: 59)
!10012 = !DILocation(line: 676, column: 2, scope: !10011)
!10013 = !DILocation(line: 680, column: 2, scope: !9999)
!10014 = !DILocation(line: 683, column: 2, scope: !9999)
!10015 = !DILocation(line: 690, column: 3, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !10017, file: !1235, line: 689, column: 9)
!10017 = distinct !DILexicalBlock(scope: !9999, file: !1235, line: 685, column: 6)
!10018 = !DILocation(line: 695, column: 2, scope: !9999)
!10019 = !DILocation(line: 696, column: 2, scope: !9999)
!10020 = !DILocation(line: 696, column: 9, scope: !9999)
!10021 = !DILocation(line: 696, column: 34, scope: !9999)
!10022 = distinct !{!10022, !10019, !10023}
!10023 = !DILocation(line: 697, column: 2, scope: !9999)
!10024 = !DILocation(line: 720, column: 21, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !9999, file: !1235, line: 720, column: 6)
!10026 = !DILocation(line: 720, column: 6, scope: !9999)
!10027 = !DILocation(line: 721, column: 3, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10025, file: !1235, line: 720, column: 60)
!10029 = !DILocation(line: 722, column: 2, scope: !10028)
!10030 = !DILocation(line: 725, column: 18, scope: !9999)
!10031 = !DILocation(line: 728, column: 2, scope: !9999)
!10032 = !DILocation(line: 730, column: 2, scope: !9999)
!10033 = !DILocation(line: 745, column: 2, scope: !9999)
!10034 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !10035, file: !10035, line: 3275, type: !7144, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !437)
!10035 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10036 = !DILocation(line: 3277, column: 21, scope: !10034)
!10037 = !DILocation(line: 3277, column: 3, scope: !10034)
!10038 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1235, file: !1235, line: 507, type: !3413, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !437)
!10039 = !DILocation(line: 516, column: 4, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10041, file: !1235, line: 515, column: 10)
!10041 = distinct !DILexicalBlock(scope: !10042, file: !1235, line: 513, column: 7)
!10042 = distinct !DILexicalBlock(scope: !10043, file: !1235, line: 510, column: 37)
!10043 = distinct !DILexicalBlock(scope: !10038, file: !1235, line: 510, column: 6)
!10044 = !DILocation(line: 526, column: 3, scope: !10042)
!10045 = !DILocation(line: 527, column: 3, scope: !10042)
!10046 = !DILocation(line: 527, column: 10, scope: !10042)
!10047 = !DILocation(line: 527, column: 31, scope: !10042)
!10048 = distinct !{!10048, !10045, !10049}
!10049 = !DILocation(line: 529, column: 3, scope: !10042)
!10050 = !DILocation(line: 583, column: 3, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !10052, file: !1235, line: 577, column: 37)
!10052 = distinct !DILexicalBlock(scope: !10038, file: !1235, line: 577, column: 6)
!10053 = !DILocation(line: 584, column: 3, scope: !10051)
!10054 = !DILocation(line: 584, column: 10, scope: !10051)
!10055 = !DILocation(line: 584, column: 31, scope: !10051)
!10056 = distinct !{!10056, !10053, !10057}
!10057 = !DILocation(line: 585, column: 3, scope: !10051)
!10058 = !DILocation(line: 627, column: 1, scope: !10038)
!10059 = distinct !DISubprogram(name: "set_up_plls", scope: !1235, file: !1235, line: 448, type: !3413, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !437)
!10060 = !DILocation(line: 460, column: 6, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10059, file: !1235, line: 460, column: 6)
!10062 = !DILocation(line: 460, column: 31, scope: !10061)
!10063 = !DILocation(line: 460, column: 6, scope: !10059)
!10064 = !DILocation(line: 461, column: 3, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10061, file: !1235, line: 460, column: 67)
!10066 = !DILocation(line: 462, column: 3, scope: !10065)
!10067 = !DILocation(line: 463, column: 2, scope: !10065)
!10068 = !DILocation(line: 464, column: 2, scope: !10059)
!10069 = !DILocation(line: 488, column: 2, scope: !10059)
!10070 = !DILocation(line: 492, column: 2, scope: !10059)
!10071 = !DILocation(line: 496, column: 2, scope: !10059)
!10072 = !DILocation(line: 499, column: 2, scope: !10059)
!10073 = !DILocation(line: 500, column: 2, scope: !10059)
!10074 = !DILocation(line: 500, column: 9, scope: !10059)
!10075 = !DILocation(line: 500, column: 30, scope: !10059)
!10076 = distinct !{!10076, !10073, !10077}
!10077 = !DILocation(line: 502, column: 2, scope: !10059)
!10078 = !DILocation(line: 505, column: 1, scope: !10059)
!10079 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10035, file: !10035, line: 3224, type: !7154, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !10080)
!10080 = !{!10081}
!10081 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10079, file: !10035, line: 3224, type: !113)
!10082 = !DILocation(line: 0, scope: !10079)
!10083 = !DILocation(line: 3226, column: 3, scope: !10079)
!10084 = !DILocation(line: 3227, column: 1, scope: !10079)
!10085 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10035, file: !10035, line: 3188, type: !7154, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !10086)
!10086 = !{!10087}
!10087 = !DILocalVariable(name: "Source", arg: 1, scope: !10085, file: !10035, line: 3188, type: !113)
!10088 = !DILocation(line: 0, scope: !10085)
!10089 = !DILocation(line: 3190, column: 3, scope: !10085)
!10090 = !DILocation(line: 3191, column: 1, scope: !10085)
!10091 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10035, file: !10035, line: 3204, type: !7144, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !437)
!10092 = !DILocation(line: 3206, column: 21, scope: !10091)
!10093 = !DILocation(line: 3206, column: 3, scope: !10091)
!10094 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10035, file: !10035, line: 3240, type: !7154, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !10095)
!10095 = !{!10096}
!10096 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10094, file: !10035, line: 3240, type: !113)
!10097 = !DILocation(line: 0, scope: !10094)
!10098 = !DILocation(line: 3242, column: 3, scope: !10094)
!10099 = !DILocation(line: 3243, column: 1, scope: !10094)
!10100 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10035, file: !10035, line: 3256, type: !7154, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !10101)
!10101 = !{!10102}
!10102 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10100, file: !10035, line: 3256, type: !113)
!10103 = !DILocation(line: 0, scope: !10100)
!10104 = !DILocation(line: 3258, column: 3, scope: !10100)
!10105 = !DILocation(line: 3259, column: 1, scope: !10100)
!10106 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1235, file: !1235, line: 409, type: !3413, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !437)
!10107 = !DILocation(line: 412, column: 6, scope: !10108)
!10108 = distinct !DILexicalBlock(scope: !10106, file: !1235, line: 412, column: 6)
!10109 = !DILocation(line: 412, column: 27, scope: !10108)
!10110 = !DILocation(line: 412, column: 6, scope: !10106)
!10111 = !DILocation(line: 414, column: 3, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10108, file: !1235, line: 412, column: 33)
!10113 = !DILocation(line: 415, column: 3, scope: !10112)
!10114 = !DILocation(line: 415, column: 10, scope: !10112)
!10115 = !DILocation(line: 415, column: 31, scope: !10112)
!10116 = distinct !{!10116, !10113, !10117}
!10117 = !DILocation(line: 417, column: 3, scope: !10112)
!10118 = !DILocation(line: 421, column: 2, scope: !10106)
!10119 = !DILocation(line: 422, column: 2, scope: !10106)
!10120 = !DILocation(line: 422, column: 9, scope: !10106)
!10121 = !DILocation(line: 422, column: 34, scope: !10106)
!10122 = distinct !{!10122, !10119, !10123}
!10123 = !DILocation(line: 423, column: 2, scope: !10106)
!10124 = !DILocation(line: 424, column: 1, scope: !10106)
!10125 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !10035, file: !10035, line: 4195, type: !3413, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !437)
!10126 = !DILocation(line: 4197, column: 3, scope: !10125)
!10127 = !DILocation(line: 4198, column: 1, scope: !10125)
!10128 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10035, file: !10035, line: 4184, type: !3413, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !437)
!10129 = !DILocation(line: 4186, column: 3, scope: !10128)
!10130 = !DILocation(line: 4187, column: 1, scope: !10128)
!10131 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10035, file: !10035, line: 4205, type: !7144, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !437)
!10132 = !DILocation(line: 4207, column: 11, scope: !10131)
!10133 = !DILocation(line: 4207, column: 44, scope: !10131)
!10134 = !DILocation(line: 4207, column: 3, scope: !10131)
!10135 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10035, file: !10035, line: 3007, type: !7144, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !437)
!10136 = !DILocation(line: 3009, column: 11, scope: !10135)
!10137 = !DILocation(line: 3009, column: 44, scope: !10135)
!10138 = !DILocation(line: 3009, column: 3, scope: !10135)
!10139 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10035, file: !10035, line: 2987, type: !3413, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !437)
!10140 = !DILocation(line: 2989, column: 3, scope: !10139)
!10141 = !DILocation(line: 2990, column: 1, scope: !10139)
!10142 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10035, file: !10035, line: 2939, type: !3413, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !437)
!10143 = !DILocation(line: 2941, column: 3, scope: !10142)
!10144 = !DILocation(line: 2942, column: 1, scope: !10142)
!10145 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10035, file: !10035, line: 2949, type: !3413, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !437)
!10146 = !DILocation(line: 2951, column: 3, scope: !10145)
!10147 = !DILocation(line: 2952, column: 1, scope: !10145)
!10148 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10035, file: !10035, line: 2969, type: !7144, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !437)
!10149 = !DILocation(line: 2971, column: 11, scope: !10148)
!10150 = !DILocation(line: 2971, column: 44, scope: !10148)
!10151 = !DILocation(line: 2971, column: 3, scope: !10148)
!10152 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !10035, file: !10035, line: 3143, type: !3413, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !437)
!10153 = !DILocation(line: 3145, column: 3, scope: !10152)
!10154 = !DILocation(line: 3146, column: 1, scope: !10152)
!10155 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !10035, file: !10035, line: 3163, type: !7144, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1174, retainedNodes: !437)
!10156 = !DILocation(line: 3165, column: 11, scope: !10155)
!10157 = !DILocation(line: 3165, column: 46, scope: !10155)
!10158 = !DILocation(line: 3165, column: 3, scope: !10155)
!10159 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10160, file: !10160, line: 40, type: !7144, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3187, retainedNodes: !437)
!10160 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10161 = !DILocation(line: 45, column: 3, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !10163, file: !10160, line: 44, column: 44)
!10163 = distinct !DILexicalBlock(scope: !10164, file: !10160, line: 44, column: 13)
!10164 = distinct !DILexicalBlock(scope: !10159, file: !10160, line: 42, column: 6)
!10165 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10160, file: !10160, line: 56, type: !3413, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3187, retainedNodes: !437)
!10166 = !DILocation(line: 58, column: 2, scope: !10165)
!10167 = !DILocation(line: 62, column: 1, scope: !10165)
!10168 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10035, file: !10035, line: 4304, type: !10169, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3187, retainedNodes: !10171)
!10169 = !DISubroutineType(types: !10170)
!10170 = !{null, !113, !113, !113, !113}
!10171 = !{!10172, !10173, !10174, !10175}
!10172 = !DILocalVariable(name: "Source", arg: 1, scope: !10168, file: !10035, line: 4304, type: !113)
!10173 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10168, file: !10035, line: 4304, type: !113)
!10174 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10168, file: !10035, line: 4304, type: !113)
!10175 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10168, file: !10035, line: 4304, type: !113)
!10176 = !DILocation(line: 0, scope: !10168)
!10177 = !DILocation(line: 4306, column: 3, scope: !10168)
!10178 = !DILocation(line: 4308, column: 3, scope: !10168)
!10179 = !DILocation(line: 4312, column: 1, scope: !10168)
!10180 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10160, file: !10160, line: 69, type: !3413, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3187, retainedNodes: !437)
!10181 = !DILocation(line: 72, column: 2, scope: !10180)
!10182 = !DILocation(line: 73, column: 1, scope: !10180)
!10183 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !10184, file: !10184, line: 1185, type: !7154, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3187, retainedNodes: !10185)
!10184 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10185 = !{!10186, !10187}
!10186 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10183, file: !10184, line: 1185, type: !113)
!10187 = !DILocalVariable(name: "tmpreg", scope: !10183, file: !10184, line: 1187, type: !572)
!10188 = !DILocation(line: 0, scope: !10183)
!10189 = !DILocation(line: 1187, column: 3, scope: !10183)
!10190 = !DILocation(line: 1187, column: 17, scope: !10183)
!10191 = !DILocation(line: 1188, column: 3, scope: !10183)
!10192 = !DILocation(line: 1190, column: 12, scope: !10183)
!10193 = !DILocation(line: 1190, column: 10, scope: !10183)
!10194 = !DILocation(line: 1191, column: 9, scope: !10183)
!10195 = !DILocation(line: 1192, column: 1, scope: !10183)
!10196 = distinct !DISubprogram(name: "uart_console_init", scope: !1366, file: !1366, line: 588, type: !1343, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10197)
!10197 = !{!10198}
!10198 = !DILocalVariable(name: "arg", arg: 1, scope: !10196, file: !1366, line: 588, type: !1321)
!10199 = !DILocation(line: 0, scope: !10196)
!10200 = !DILocation(line: 593, column: 7, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10196, file: !1366, line: 593, column: 6)
!10202 = !DILocation(line: 593, column: 6, scope: !10196)
!10203 = !DILocation(line: 597, column: 2, scope: !10196)
!10204 = !DILocation(line: 599, column: 2, scope: !10196)
!10205 = !DILocation(line: 600, column: 1, scope: !10196)
!10206 = distinct !DISubprogram(name: "device_is_ready", scope: !10207, file: !10207, line: 47, type: !10208, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10210)
!10207 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!10208 = !DISubroutineType(types: !10209)
!10209 = !{!422, !1321}
!10210 = !{!10211}
!10211 = !DILocalVariable(name: "dev", arg: 1, scope: !10206, file: !10207, line: 47, type: !1321)
!10212 = !DILocation(line: 0, scope: !10206)
!10213 = !DILocation(line: 55, column: 2, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10206, file: !10207, line: 55, column: 2)
!10215 = !{i64 2155061986}
!10216 = !DILocation(line: 56, column: 9, scope: !10206)
!10217 = !DILocation(line: 56, column: 2, scope: !10206)
!10218 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1366, file: !1366, line: 573, type: !3413, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !437)
!10219 = !DILocation(line: 576, column: 2, scope: !10218)
!10220 = !DILocation(line: 579, column: 2, scope: !10218)
!10221 = !DILocation(line: 581, column: 1, scope: !10218)
!10222 = distinct !DISubprogram(name: "console_out", scope: !1366, file: !1366, line: 77, type: !559, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10223)
!10223 = !{!10224}
!10224 = !DILocalVariable(name: "c", arg: 1, scope: !10222, file: !1366, line: 77, type: !108)
!10225 = !DILocation(line: 0, scope: !10222)
!10226 = !DILocation(line: 89, column: 11, scope: !10227)
!10227 = distinct !DILexicalBlock(scope: !10222, file: !1366, line: 89, column: 6)
!10228 = !DILocation(line: 89, column: 6, scope: !10222)
!10229 = !DILocation(line: 90, column: 3, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10227, file: !1366, line: 89, column: 17)
!10231 = !DILocation(line: 91, column: 2, scope: !10230)
!10232 = !DILocation(line: 92, column: 34, scope: !10222)
!10233 = !DILocation(line: 92, column: 2, scope: !10222)
!10234 = !DILocation(line: 94, column: 2, scope: !10222)
!10235 = distinct !DISubprogram(name: "uart_poll_out", scope: !10236, file: !10236, line: 95, type: !1339, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10237)
!10236 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/rtio/sensor_batch_processing")
!10237 = !{!10238, !10239}
!10238 = !DILocalVariable(name: "dev", arg: 1, scope: !10235, file: !10236, line: 95, type: !1321)
!10239 = !DILocalVariable(name: "out_char", arg: 2, scope: !10235, file: !10236, line: 95, type: !165)
!10240 = !DILocation(line: 0, scope: !10235)
!10241 = !DILocation(line: 105, column: 2, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10235, file: !10236, line: 105, column: 2)
!10243 = !{i64 2155145377}
!10244 = !DILocation(line: 106, column: 2, scope: !10235)
!10245 = !DILocation(line: 107, column: 1, scope: !10235)
!10246 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1315, file: !1315, line: 574, type: !1339, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10247)
!10247 = !{!10248, !10249, !10250}
!10248 = !DILocalVariable(name: "dev", arg: 1, scope: !10246, file: !1315, line: 574, type: !1321)
!10249 = !DILocalVariable(name: "out_char", arg: 2, scope: !10246, file: !1315, line: 575, type: !165)
!10250 = !DILocalVariable(name: "api", scope: !10246, file: !1315, line: 577, type: !1312)
!10251 = !DILocation(line: 0, scope: !10246)
!10252 = !DILocation(line: 578, column: 40, scope: !10246)
!10253 = !DILocation(line: 580, column: 7, scope: !10246)
!10254 = !DILocation(line: 580, column: 2, scope: !10246)
!10255 = !DILocation(line: 581, column: 1, scope: !10246)
!10256 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !10208, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10257)
!10257 = !{!10258}
!10258 = !DILocalVariable(name: "dev", arg: 1, scope: !10256, file: !411, line: 730, type: !1321)
!10259 = !DILocation(line: 0, scope: !10256)
!10260 = !DILocation(line: 732, column: 9, scope: !10256)
!10261 = !DILocation(line: 732, column: 2, scope: !10256)
!10262 = distinct !DISubprogram(name: "uart_register_input", scope: !1366, file: !1366, line: 560, type: !10263, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10308)
!10263 = !DISubroutineType(types: !10264)
!10264 = !{null, !10265, !10265, !10305}
!10265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10266, size: 32)
!10266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !359, line: 2208, size: 128, elements: !10267)
!10267 = !{!10268}
!10268 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10266, file: !359, line: 2209, baseType: !10269, size: 128)
!10269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !359, line: 1709, size: 128, elements: !10270)
!10270 = !{!10271, !10284, !10286}
!10271 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10269, file: !359, line: 1710, baseType: !10272, size: 64)
!10272 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10273, line: 46, baseType: !10274)
!10273 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10273, line: 41, size: 64, elements: !10275)
!10275 = !{!10276, !10283}
!10276 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10274, file: !10273, line: 42, baseType: !10277, size: 32)
!10277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10278, size: 32)
!10278 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10273, line: 39, baseType: !10279)
!10279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10273, line: 35, size: 32, elements: !10280)
!10280 = !{!10281}
!10281 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10279, file: !10273, line: 36, baseType: !10282, size: 32)
!10282 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10273, line: 32, baseType: !113)
!10283 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10274, file: !10273, line: 43, baseType: !10277, size: 32, offset: 32)
!10284 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10269, file: !359, line: 1711, baseType: !10285, offset: 64)
!10285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!10286 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10269, file: !359, line: 1712, baseType: !10287, size: 64, offset: 64)
!10287 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !10288)
!10288 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !10289)
!10289 = !{!10290}
!10290 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10288, file: !363, line: 232, baseType: !10291, size: 64)
!10291 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !10292)
!10292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !10293)
!10293 = !{!10294, !10300}
!10294 = !DIDerivedType(tag: DW_TAG_member, scope: !10292, file: !367, line: 38, baseType: !10295, size: 32)
!10295 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10292, file: !367, line: 38, size: 32, elements: !10296)
!10296 = !{!10297, !10299}
!10297 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10295, file: !367, line: 39, baseType: !10298, size: 32)
!10298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10292, size: 32)
!10299 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10295, file: !367, line: 40, baseType: !10298, size: 32)
!10300 = !DIDerivedType(tag: DW_TAG_member, scope: !10292, file: !367, line: 42, baseType: !10301, size: 32, offset: 32)
!10301 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10292, file: !367, line: 42, size: 32, elements: !10302)
!10302 = !{!10303, !10304}
!10303 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10301, file: !367, line: 43, baseType: !10298, size: 32)
!10304 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10301, file: !367, line: 44, baseType: !10298, size: 32)
!10305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10306, size: 32)
!10306 = !DISubroutineType(types: !10307)
!10307 = !{!164, !443, !164}
!10308 = !{!10309, !10310, !10311}
!10309 = !DILocalVariable(name: "avail", arg: 1, scope: !10262, file: !1366, line: 560, type: !10265)
!10310 = !DILocalVariable(name: "lines", arg: 2, scope: !10262, file: !1366, line: 560, type: !10265)
!10311 = !DILocalVariable(name: "completion", arg: 3, scope: !10262, file: !1366, line: 561, type: !10305)
!10312 = !DILocation(line: 0, scope: !10262)
!10313 = !DILocation(line: 566, column: 1, scope: !10262)
!10314 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1544, file: !1544, line: 523, type: !1402, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10315)
!10315 = !{!10316, !10317, !10318, !10319, !10320}
!10316 = !DILocalVariable(name: "dev", arg: 1, scope: !10314, file: !1544, line: 523, type: !1404)
!10317 = !DILocalVariable(name: "pin", arg: 2, scope: !10314, file: !1544, line: 524, type: !1419)
!10318 = !DILocalVariable(name: "flags", arg: 3, scope: !10314, file: !1544, line: 524, type: !1420)
!10319 = !DILocalVariable(name: "err", scope: !10314, file: !1544, line: 526, type: !108)
!10320 = !DILocalVariable(name: "pincfg", scope: !10314, file: !1544, line: 527, type: !108)
!10321 = !DILocation(line: 0, scope: !10314)
!10322 = !DILocation(line: 527, column: 2, scope: !10314)
!10323 = !DILocation(line: 532, column: 8, scope: !10314)
!10324 = !DILocation(line: 533, column: 10, scope: !10325)
!10325 = distinct !DILexicalBlock(scope: !10314, file: !1544, line: 533, column: 6)
!10326 = !DILocation(line: 533, column: 6, scope: !10314)
!10327 = !DILocation(line: 543, column: 13, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10314, file: !1544, line: 543, column: 6)
!10329 = !DILocation(line: 543, column: 28, scope: !10328)
!10330 = !DILocation(line: 543, column: 6, scope: !10314)
!10331 = !DILocation(line: 544, column: 14, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10333, file: !1544, line: 544, column: 7)
!10333 = distinct !DILexicalBlock(scope: !10328, file: !1544, line: 543, column: 34)
!10334 = !DILocation(line: 544, column: 39, scope: !10332)
!10335 = !DILocation(line: 544, column: 7, scope: !10333)
!10336 = !DILocation(line: 545, column: 38, scope: !10337)
!10337 = distinct !DILexicalBlock(scope: !10332, file: !1544, line: 544, column: 45)
!10338 = !DILocation(line: 545, column: 4, scope: !10337)
!10339 = !DILocation(line: 546, column: 3, scope: !10337)
!10340 = !DILocation(line: 546, column: 21, scope: !10341)
!10341 = distinct !DILexicalBlock(scope: !10332, file: !1544, line: 546, column: 14)
!10342 = !DILocation(line: 546, column: 45, scope: !10341)
!10343 = !DILocation(line: 546, column: 14, scope: !10332)
!10344 = !DILocation(line: 547, column: 40, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10341, file: !1544, line: 546, column: 51)
!10346 = !DILocation(line: 547, column: 4, scope: !10345)
!10347 = !DILocation(line: 548, column: 3, scope: !10345)
!10348 = !DILocation(line: 551, column: 32, scope: !10314)
!10349 = !DILocation(line: 551, column: 37, scope: !10314)
!10350 = !DILocation(line: 551, column: 2, scope: !10314)
!10351 = !DILocation(line: 554, column: 6, scope: !10314)
!10352 = !DILocation(line: 562, column: 1, scope: !10314)
!10353 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1544, file: !1544, line: 410, type: !10354, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10356)
!10354 = !DISubroutineType(types: !10355)
!10355 = !{!108, !1404, !1231}
!10356 = !{!10357, !10358, !10359, !10361}
!10357 = !DILocalVariable(name: "dev", arg: 1, scope: !10353, file: !1544, line: 410, type: !1404)
!10358 = !DILocalVariable(name: "value", arg: 2, scope: !10353, file: !1544, line: 410, type: !1231)
!10359 = !DILocalVariable(name: "cfg", scope: !10353, file: !1544, line: 412, type: !10360)
!10360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 32)
!10361 = !DILocalVariable(name: "gpio", scope: !10353, file: !1544, line: 413, type: !1477)
!10362 = !DILocation(line: 0, scope: !10353)
!10363 = !DILocation(line: 412, column: 45, scope: !10353)
!10364 = !DILocation(line: 413, column: 44, scope: !10353)
!10365 = !DILocation(line: 415, column: 11, scope: !10353)
!10366 = !DILocation(line: 415, column: 9, scope: !10353)
!10367 = !DILocation(line: 417, column: 2, scope: !10353)
!10368 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1544, file: !1544, line: 420, type: !1429, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10369)
!10369 = !{!10370, !10371, !10372, !10373, !10374, !10375}
!10370 = !DILocalVariable(name: "dev", arg: 1, scope: !10368, file: !1544, line: 420, type: !1404)
!10371 = !DILocalVariable(name: "mask", arg: 2, scope: !10368, file: !1544, line: 421, type: !1431)
!10372 = !DILocalVariable(name: "value", arg: 3, scope: !10368, file: !1544, line: 422, type: !1426)
!10373 = !DILocalVariable(name: "cfg", scope: !10368, file: !1544, line: 424, type: !10360)
!10374 = !DILocalVariable(name: "gpio", scope: !10368, file: !1544, line: 425, type: !1477)
!10375 = !DILocalVariable(name: "port_value", scope: !10368, file: !1544, line: 426, type: !113)
!10376 = !DILocation(line: 0, scope: !10368)
!10377 = !DILocation(line: 424, column: 45, scope: !10368)
!10378 = !DILocation(line: 425, column: 44, scope: !10368)
!10379 = !DILocation(line: 430, column: 15, scope: !10368)
!10380 = !DILocation(line: 431, column: 46, scope: !10368)
!10381 = !DILocation(line: 431, column: 44, scope: !10368)
!10382 = !DILocation(line: 431, column: 61, scope: !10368)
!10383 = !DILocation(line: 431, column: 53, scope: !10368)
!10384 = !DILocation(line: 431, column: 2, scope: !10368)
!10385 = !DILocation(line: 435, column: 2, scope: !10368)
!10386 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1544, file: !1544, line: 438, type: !1434, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10387)
!10387 = !{!10388, !10389, !10390, !10391}
!10388 = !DILocalVariable(name: "dev", arg: 1, scope: !10386, file: !1544, line: 438, type: !1404)
!10389 = !DILocalVariable(name: "pins", arg: 2, scope: !10386, file: !1544, line: 439, type: !1431)
!10390 = !DILocalVariable(name: "cfg", scope: !10386, file: !1544, line: 441, type: !10360)
!10391 = !DILocalVariable(name: "gpio", scope: !10386, file: !1544, line: 442, type: !1477)
!10392 = !DILocation(line: 0, scope: !10386)
!10393 = !DILocation(line: 441, column: 45, scope: !10386)
!10394 = !DILocation(line: 442, column: 44, scope: !10386)
!10395 = !DILocation(line: 448, column: 2, scope: !10386)
!10396 = !DILocation(line: 450, column: 2, scope: !10386)
!10397 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1544, file: !1544, line: 453, type: !1434, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10398)
!10398 = !{!10399, !10400, !10401, !10402}
!10399 = !DILocalVariable(name: "dev", arg: 1, scope: !10397, file: !1544, line: 453, type: !1404)
!10400 = !DILocalVariable(name: "pins", arg: 2, scope: !10397, file: !1544, line: 454, type: !1431)
!10401 = !DILocalVariable(name: "cfg", scope: !10397, file: !1544, line: 456, type: !10360)
!10402 = !DILocalVariable(name: "gpio", scope: !10397, file: !1544, line: 457, type: !1477)
!10403 = !DILocation(line: 0, scope: !10397)
!10404 = !DILocation(line: 456, column: 45, scope: !10397)
!10405 = !DILocation(line: 457, column: 44, scope: !10397)
!10406 = !DILocation(line: 467, column: 2, scope: !10397)
!10407 = !DILocation(line: 470, column: 2, scope: !10397)
!10408 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1544, file: !1544, line: 473, type: !1434, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10409)
!10409 = !{!10410, !10411, !10412, !10413}
!10410 = !DILocalVariable(name: "dev", arg: 1, scope: !10408, file: !1544, line: 473, type: !1404)
!10411 = !DILocalVariable(name: "pins", arg: 2, scope: !10408, file: !1544, line: 474, type: !1431)
!10412 = !DILocalVariable(name: "cfg", scope: !10408, file: !1544, line: 476, type: !10360)
!10413 = !DILocalVariable(name: "gpio", scope: !10408, file: !1544, line: 477, type: !1477)
!10414 = !DILocation(line: 0, scope: !10408)
!10415 = !DILocation(line: 476, column: 45, scope: !10408)
!10416 = !DILocation(line: 477, column: 44, scope: !10408)
!10417 = !DILocation(line: 484, column: 2, scope: !10408)
!10418 = !DILocation(line: 487, column: 2, scope: !10408)
!10419 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1544, file: !1544, line: 594, type: !1440, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10420)
!10420 = !{!10421, !10422, !10423, !10424, !10425, !10426, !10428, !10429, !10430}
!10421 = !DILocalVariable(name: "dev", arg: 1, scope: !10419, file: !1544, line: 594, type: !1404)
!10422 = !DILocalVariable(name: "pin", arg: 2, scope: !10419, file: !1544, line: 595, type: !1419)
!10423 = !DILocalVariable(name: "mode", arg: 3, scope: !10419, file: !1544, line: 596, type: !1378)
!10424 = !DILocalVariable(name: "trig", arg: 4, scope: !10419, file: !1544, line: 597, type: !1384)
!10425 = !DILocalVariable(name: "cfg", scope: !10419, file: !1544, line: 599, type: !10360)
!10426 = !DILocalVariable(name: "data", scope: !10419, file: !1544, line: 600, type: !10427)
!10427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 32)
!10428 = !DILocalVariable(name: "edge", scope: !10419, file: !1544, line: 601, type: !108)
!10429 = !DILocalVariable(name: "err", scope: !10419, file: !1544, line: 602, type: !108)
!10430 = !DILabel(scope: !10419, name: "exit", file: !1544, line: 643)
!10431 = !DILocation(line: 0, scope: !10419)
!10432 = !DILocation(line: 599, column: 45, scope: !10419)
!10433 = !DILocation(line: 604, column: 6, scope: !10419)
!10434 = !DILocation(line: 605, column: 34, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10436, file: !1544, line: 605, column: 7)
!10436 = distinct !DILexicalBlock(scope: !10437, file: !1544, line: 604, column: 38)
!10437 = distinct !DILexicalBlock(scope: !10419, file: !1544, line: 604, column: 6)
!10438 = !DILocation(line: 605, column: 7, scope: !10435)
!10439 = !DILocation(line: 605, column: 47, scope: !10435)
!10440 = !DILocation(line: 605, column: 39, scope: !10435)
!10441 = !DILocation(line: 605, column: 7, scope: !10436)
!10442 = !DILocation(line: 606, column: 4, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10435, file: !1544, line: 605, column: 53)
!10444 = !DILocation(line: 607, column: 4, scope: !10443)
!10445 = !DILocation(line: 608, column: 4, scope: !10443)
!10446 = !DILocation(line: 609, column: 3, scope: !10443)
!10447 = !DILocation(line: 600, column: 38, scope: !10419)
!10448 = !DILocation(line: 620, column: 30, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10419, file: !1544, line: 620, column: 6)
!10450 = !DILocation(line: 620, column: 6, scope: !10449)
!10451 = !DILocation(line: 620, column: 57, scope: !10449)
!10452 = !DILocation(line: 620, column: 6, scope: !10419)
!10453 = !DILocation(line: 625, column: 29, scope: !10419)
!10454 = !DILocation(line: 625, column: 2, scope: !10419)
!10455 = !DILocation(line: 627, column: 2, scope: !10419)
!10456 = !DILocation(line: 630, column: 3, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10419, file: !1544, line: 627, column: 16)
!10458 = !DILocation(line: 633, column: 3, scope: !10457)
!10459 = !DILocation(line: 636, column: 3, scope: !10457)
!10460 = !DILocation(line: 639, column: 2, scope: !10419)
!10461 = !DILocation(line: 641, column: 2, scope: !10419)
!10462 = !DILocation(line: 643, column: 1, scope: !10419)
!10463 = !DILocation(line: 644, column: 2, scope: !10419)
!10464 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1544, file: !1544, line: 647, type: !1444, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10465)
!10465 = !{!10466, !10467, !10468, !10469}
!10466 = !DILocalVariable(name: "dev", arg: 1, scope: !10464, file: !1544, line: 647, type: !1404)
!10467 = !DILocalVariable(name: "callback", arg: 2, scope: !10464, file: !1544, line: 648, type: !1446)
!10468 = !DILocalVariable(name: "set", arg: 3, scope: !10464, file: !1544, line: 649, type: !422)
!10469 = !DILocalVariable(name: "data", scope: !10464, file: !1544, line: 651, type: !10427)
!10470 = !DILocation(line: 0, scope: !10464)
!10471 = !DILocation(line: 651, column: 38, scope: !10464)
!10472 = !DILocation(line: 653, column: 37, scope: !10464)
!10473 = !DILocation(line: 653, column: 9, scope: !10464)
!10474 = !DILocation(line: 653, column: 2, scope: !10464)
!10475 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10476, file: !10476, line: 38, type: !10477, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10480)
!10476 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10477 = !DISubroutineType(types: !10478)
!10478 = !{!108, !10479, !1446, !422}
!10479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 32)
!10480 = !{!10481, !10482, !10483}
!10481 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10475, file: !10476, line: 38, type: !10479)
!10482 = !DILocalVariable(name: "callback", arg: 2, scope: !10475, file: !10476, line: 39, type: !1446)
!10483 = !DILocalVariable(name: "set", arg: 3, scope: !10475, file: !10476, line: 40, type: !422)
!10484 = !DILocation(line: 0, scope: !10475)
!10485 = !DILocation(line: 45, column: 7, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10475, file: !10476, line: 45, column: 6)
!10487 = !DILocation(line: 45, column: 6, scope: !10475)
!10488 = !DILocation(line: 46, column: 56, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10490, file: !10476, line: 46, column: 7)
!10490 = distinct !DILexicalBlock(scope: !10486, file: !10476, line: 45, column: 38)
!10491 = !DILocation(line: 46, column: 8, scope: !10489)
!10492 = !DILocation(line: 46, column: 7, scope: !10490)
!10493 = !DILocation(line: 51, column: 13, scope: !10486)
!10494 = !DILocation(line: 56, column: 43, scope: !10495)
!10495 = distinct !DILexicalBlock(scope: !10496, file: !10476, line: 55, column: 11)
!10496 = distinct !DILexicalBlock(scope: !10475, file: !10476, line: 55, column: 6)
!10497 = !DILocation(line: 56, column: 3, scope: !10495)
!10498 = !DILocation(line: 57, column: 2, scope: !10495)
!10499 = !DILocation(line: 60, column: 1, scope: !10475)
!10500 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1451, file: !1451, line: 261, type: !10501, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10503)
!10501 = !DISubroutineType(types: !10502)
!10502 = !{!422, !10479}
!10503 = !{!10504}
!10504 = !DILocalVariable(name: "list", arg: 1, scope: !10500, file: !1451, line: 261, type: !10479)
!10505 = !DILocation(line: 0, scope: !10500)
!10506 = !DILocation(line: 261, column: 1, scope: !10500)
!10507 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1451, file: !1451, line: 417, type: !10508, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10510)
!10508 = !DISubroutineType(types: !10509)
!10509 = !{!422, !10479, !1623}
!10510 = !{!10511, !10512, !10513, !10514}
!10511 = !DILocalVariable(name: "list", arg: 1, scope: !10507, file: !1451, line: 417, type: !10479)
!10512 = !DILocalVariable(name: "node", arg: 2, scope: !10507, file: !1451, line: 417, type: !1623)
!10513 = !DILocalVariable(name: "prev", scope: !10507, file: !1451, line: 417, type: !1623)
!10514 = !DILocalVariable(name: "test", scope: !10507, file: !1451, line: 417, type: !1623)
!10515 = !DILocation(line: 0, scope: !10507)
!10516 = !DILocation(line: 417, column: 1, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10507, file: !1451, line: 417, column: 1)
!10518 = !DILocation(line: 417, column: 1, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10517, file: !1451, line: 417, column: 1)
!10520 = !DILocation(line: 417, column: 1, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10522, file: !1451, line: 417, column: 1)
!10522 = distinct !DILexicalBlock(scope: !10519, file: !1451, line: 417, column: 1)
!10523 = !DILocation(line: 417, column: 1, scope: !10522)
!10524 = distinct !{!10524, !10516, !10516}
!10525 = !DILocation(line: 417, column: 1, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10521, file: !1451, line: 417, column: 1)
!10527 = !DILocation(line: 417, column: 1, scope: !10507)
!10528 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1451, file: !1451, line: 298, type: !10529, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10531)
!10529 = !DISubroutineType(types: !10530)
!10530 = !{null, !10479, !1623}
!10531 = !{!10532, !10533}
!10532 = !DILocalVariable(name: "list", arg: 1, scope: !10528, file: !1451, line: 298, type: !10479)
!10533 = !DILocalVariable(name: "node", arg: 2, scope: !10528, file: !1451, line: 298, type: !1623)
!10534 = !DILocation(line: 0, scope: !10528)
!10535 = !DILocation(line: 298, column: 1, scope: !10528)
!10536 = !DILocation(line: 298, column: 1, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10528, file: !1451, line: 298, column: 1)
!10538 = !DILocation(line: 298, column: 1, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10537, file: !1451, line: 298, column: 1)
!10540 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1451, file: !1451, line: 231, type: !10541, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10543)
!10541 = !DISubroutineType(types: !10542)
!10542 = !{!1623, !10479}
!10543 = !{!10544}
!10544 = !DILocalVariable(name: "list", arg: 1, scope: !10540, file: !1451, line: 231, type: !10479)
!10545 = !DILocation(line: 0, scope: !10540)
!10546 = !DILocation(line: 233, column: 15, scope: !10540)
!10547 = !DILocation(line: 233, column: 2, scope: !10540)
!10548 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1451, file: !1451, line: 209, type: !10549, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10551)
!10549 = !DISubroutineType(types: !10550)
!10550 = !{null, !1623, !1623}
!10551 = !{!10552, !10553}
!10552 = !DILocalVariable(name: "parent", arg: 1, scope: !10548, file: !1451, line: 209, type: !1623)
!10553 = !DILocalVariable(name: "child", arg: 2, scope: !10548, file: !1451, line: 209, type: !1623)
!10554 = !DILocation(line: 0, scope: !10548)
!10555 = !DILocation(line: 211, column: 10, scope: !10548)
!10556 = !DILocation(line: 211, column: 15, scope: !10548)
!10557 = !DILocation(line: 212, column: 1, scope: !10548)
!10558 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1451, file: !1451, line: 214, type: !10529, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10559)
!10559 = !{!10560, !10561}
!10560 = !DILocalVariable(name: "list", arg: 1, scope: !10558, file: !1451, line: 214, type: !10479)
!10561 = !DILocalVariable(name: "node", arg: 2, scope: !10558, file: !1451, line: 214, type: !1623)
!10562 = !DILocation(line: 0, scope: !10558)
!10563 = !DILocation(line: 216, column: 8, scope: !10558)
!10564 = !DILocation(line: 216, column: 13, scope: !10558)
!10565 = !DILocation(line: 217, column: 1, scope: !10558)
!10566 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1451, file: !1451, line: 243, type: !10541, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10567)
!10567 = !{!10568}
!10568 = !DILocalVariable(name: "list", arg: 1, scope: !10566, file: !1451, line: 243, type: !10479)
!10569 = !DILocation(line: 0, scope: !10566)
!10570 = !DILocation(line: 245, column: 15, scope: !10566)
!10571 = !DILocation(line: 245, column: 2, scope: !10566)
!10572 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1451, file: !1451, line: 219, type: !10529, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10573)
!10573 = !{!10574, !10575}
!10574 = !DILocalVariable(name: "list", arg: 1, scope: !10572, file: !1451, line: 219, type: !10479)
!10575 = !DILocalVariable(name: "node", arg: 2, scope: !10572, file: !1451, line: 219, type: !1623)
!10576 = !DILocation(line: 0, scope: !10572)
!10577 = !DILocation(line: 221, column: 8, scope: !10572)
!10578 = !DILocation(line: 221, column: 13, scope: !10572)
!10579 = !DILocation(line: 222, column: 1, scope: !10572)
!10580 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1451, file: !1451, line: 401, type: !10581, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10583)
!10581 = !DISubroutineType(types: !10582)
!10582 = !{null, !10479, !1623, !1623}
!10583 = !{!10584, !10585, !10586}
!10584 = !DILocalVariable(name: "list", arg: 1, scope: !10580, file: !1451, line: 401, type: !10479)
!10585 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10580, file: !1451, line: 401, type: !1623)
!10586 = !DILocalVariable(name: "node", arg: 3, scope: !10580, file: !1451, line: 401, type: !1623)
!10587 = !DILocation(line: 0, scope: !10580)
!10588 = !DILocation(line: 401, column: 1, scope: !10589)
!10589 = distinct !DILexicalBlock(scope: !10580, file: !1451, line: 401, column: 1)
!10590 = !DILocation(line: 0, scope: !10589)
!10591 = !DILocation(line: 401, column: 1, scope: !10580)
!10592 = !DILocation(line: 401, column: 1, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10589, file: !1451, line: 401, column: 1)
!10594 = !DILocation(line: 401, column: 1, scope: !10595)
!10595 = distinct !DILexicalBlock(scope: !10593, file: !1451, line: 401, column: 1)
!10596 = !DILocation(line: 401, column: 1, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10595, file: !1451, line: 401, column: 1)
!10598 = !DILocation(line: 401, column: 1, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10589, file: !1451, line: 401, column: 1)
!10600 = !DILocation(line: 401, column: 1, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10599, file: !1451, line: 401, column: 1)
!10602 = !DILocation(line: 401, column: 1, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10601, file: !1451, line: 401, column: 1)
!10604 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1451, file: !1451, line: 285, type: !10605, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10607)
!10605 = !DISubroutineType(types: !10606)
!10606 = !{!1623, !1623}
!10607 = !{!10608}
!10608 = !DILocalVariable(name: "node", arg: 1, scope: !10604, file: !1451, line: 285, type: !1623)
!10609 = !DILocation(line: 0, scope: !10604)
!10610 = !DILocation(line: 285, column: 1, scope: !10604)
!10611 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1451, file: !1451, line: 274, type: !10605, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10612)
!10612 = !{!10613}
!10613 = !DILocalVariable(name: "node", arg: 1, scope: !10611, file: !1451, line: 274, type: !1623)
!10614 = !DILocation(line: 0, scope: !10611)
!10615 = !DILocation(line: 274, column: 1, scope: !10611)
!10616 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1451, file: !1451, line: 204, type: !10605, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10617)
!10617 = !{!10618}
!10618 = !DILocalVariable(name: "node", arg: 1, scope: !10616, file: !1451, line: 204, type: !1623)
!10619 = !DILocation(line: 0, scope: !10616)
!10620 = !DILocation(line: 206, column: 15, scope: !10616)
!10621 = !DILocation(line: 206, column: 2, scope: !10616)
!10622 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1544, file: !1544, line: 342, type: !559, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10623)
!10623 = !{!10624, !10625, !10626}
!10624 = !DILocalVariable(name: "pin", arg: 1, scope: !10622, file: !1544, line: 342, type: !108)
!10625 = !DILocalVariable(name: "line", scope: !10622, file: !1544, line: 344, type: !113)
!10626 = !DILocalVariable(name: "port", scope: !10622, file: !1544, line: 345, type: !108)
!10627 = !DILocation(line: 0, scope: !10622)
!10628 = !DILocation(line: 344, column: 18, scope: !10622)
!10629 = !{i32 983040, i32 0}
!10630 = !DILocation(line: 356, column: 9, scope: !10622)
!10631 = !DILocation(line: 370, column: 2, scope: !10622)
!10632 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1544, file: !1544, line: 37, type: !1129, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10633)
!10633 = !{!10634, !10635, !10636}
!10634 = !DILocalVariable(name: "line", arg: 1, scope: !10632, file: !1544, line: 37, type: !108)
!10635 = !DILocalVariable(name: "arg", arg: 2, scope: !10632, file: !1544, line: 37, type: !104)
!10636 = !DILocalVariable(name: "data", scope: !10632, file: !1544, line: 39, type: !10427)
!10637 = !DILocation(line: 0, scope: !10632)
!10638 = !DILocation(line: 41, column: 29, scope: !10632)
!10639 = !DILocation(line: 41, column: 39, scope: !10632)
!10640 = !DILocation(line: 41, column: 44, scope: !10632)
!10641 = !DILocation(line: 41, column: 2, scope: !10632)
!10642 = !DILocation(line: 42, column: 1, scope: !10632)
!10643 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1544, file: !1544, line: 376, type: !10644, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10646)
!10644 = !DISubroutineType(types: !10645)
!10645 = !{!108, !108, !108}
!10646 = !{!10647, !10648, !10649, !10651, !10652}
!10647 = !DILocalVariable(name: "port", arg: 1, scope: !10643, file: !1544, line: 376, type: !108)
!10648 = !DILocalVariable(name: "pin", arg: 2, scope: !10643, file: !1544, line: 376, type: !108)
!10649 = !DILocalVariable(name: "clk", scope: !10643, file: !1544, line: 386, type: !10650)
!10650 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1404)
!10651 = !DILocalVariable(name: "pclken", scope: !10643, file: !1544, line: 387, type: !1670)
!10652 = !DILocalVariable(name: "ret", scope: !10643, file: !1544, line: 396, type: !108)
!10653 = !DILocation(line: 0, scope: !10643)
!10654 = !DILocation(line: 387, column: 2, scope: !10643)
!10655 = !DILocation(line: 387, column: 22, scope: !10643)
!10656 = !DILocation(line: 399, column: 8, scope: !10643)
!10657 = !DILocation(line: 400, column: 10, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10643, file: !1544, line: 400, column: 6)
!10659 = !DILocation(line: 400, column: 6, scope: !10643)
!10660 = !DILocation(line: 405, column: 2, scope: !10643)
!10661 = !DILocation(line: 407, column: 2, scope: !10643)
!10662 = !DILocation(line: 408, column: 1, scope: !10643)
!10663 = distinct !DISubprogram(name: "clock_control_on", scope: !1183, file: !1183, line: 123, type: !1509, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10664)
!10664 = !{!10665, !10666, !10667}
!10665 = !DILocalVariable(name: "dev", arg: 1, scope: !10663, file: !1183, line: 123, type: !1404)
!10666 = !DILocalVariable(name: "sys", arg: 2, scope: !10663, file: !1183, line: 124, type: !1275)
!10667 = !DILocalVariable(name: "api", scope: !10663, file: !1183, line: 126, type: !1502)
!10668 = !DILocation(line: 0, scope: !10663)
!10669 = !DILocation(line: 127, column: 49, scope: !10663)
!10670 = !DILocation(line: 129, column: 14, scope: !10663)
!10671 = !DILocation(line: 129, column: 9, scope: !10663)
!10672 = !DILocation(line: 129, column: 2, scope: !10663)
!10673 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1544, file: !1544, line: 311, type: !9792, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10674)
!10674 = !{!10675, !10676, !10677}
!10675 = !DILocalVariable(name: "port", arg: 1, scope: !10673, file: !1544, line: 311, type: !108)
!10676 = !DILocalVariable(name: "pin", arg: 2, scope: !10673, file: !1544, line: 311, type: !108)
!10677 = !DILocalVariable(name: "line", scope: !10673, file: !1544, line: 313, type: !113)
!10678 = !DILocation(line: 0, scope: !10673)
!10679 = !DILocation(line: 313, column: 18, scope: !10673)
!10680 = !DILocation(line: 337, column: 2, scope: !10673)
!10681 = !DILocation(line: 340, column: 1, scope: !10673)
!10682 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1544, file: !1544, line: 295, type: !10683, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10685)
!10683 = !DISubroutineType(types: !10684)
!10684 = !{!113, !108}
!10685 = !{!10686}
!10686 = !DILocalVariable(name: "pin", arg: 1, scope: !10682, file: !1544, line: 295, type: !108)
!10687 = !DILocation(line: 0, scope: !10682)
!10688 = !DILocation(line: 307, column: 46, scope: !10682)
!10689 = !DILocation(line: 307, column: 27, scope: !10682)
!10690 = !DILocation(line: 307, column: 32, scope: !10682)
!10691 = !DILocation(line: 307, column: 14, scope: !10682)
!10692 = !DILocation(line: 307, column: 39, scope: !10682)
!10693 = !DILocation(line: 307, column: 2, scope: !10682)
!10694 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6766, file: !6766, line: 671, type: !10695, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10697)
!10695 = !DISubroutineType(types: !10696)
!10696 = !{null, !113, !113}
!10697 = !{!10698, !10699}
!10698 = !DILocalVariable(name: "Port", arg: 1, scope: !10694, file: !6766, line: 671, type: !113)
!10699 = !DILocalVariable(name: "Line", arg: 2, scope: !10694, file: !6766, line: 671, type: !113)
!10700 = !DILocation(line: 0, scope: !10694)
!10701 = !DILocation(line: 673, column: 3, scope: !10694)
!10702 = !DILocalVariable(name: "value", arg: 1, scope: !10703, file: !7063, line: 373, type: !113)
!10703 = distinct !DISubprogram(name: "__RBIT", scope: !7063, file: !7063, line: 373, type: !8309, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10704)
!10704 = !{!10702, !10705}
!10705 = !DILocalVariable(name: "result", scope: !10703, file: !7063, line: 375, type: !113)
!10706 = !DILocation(line: 0, scope: !10703, inlinedAt: !10707)
!10707 = distinct !DILocation(line: 673, column: 3, scope: !10694)
!10708 = !DILocation(line: 380, column: 4, scope: !10703, inlinedAt: !10707)
!10709 = !{i64 3563184}
!10710 = !DILocalVariable(name: "value", arg: 1, scope: !10711, file: !7063, line: 403, type: !113)
!10711 = distinct !DISubprogram(name: "__CLZ", scope: !7063, file: !7063, line: 403, type: !10712, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10714)
!10712 = !DISubroutineType(types: !10713)
!10713 = !{!164, !113}
!10714 = !{!10710}
!10715 = !DILocation(line: 0, scope: !10711, inlinedAt: !10716)
!10716 = distinct !DILocation(line: 673, column: 3, scope: !10694)
!10717 = !DILocation(line: 414, column: 7, scope: !10711, inlinedAt: !10716)
!10718 = !DILocation(line: 674, column: 1, scope: !10694)
!10719 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10476, file: !10476, line: 69, type: !10720, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10722)
!10720 = !DISubroutineType(types: !10721)
!10721 = !{null, !10479, !1404, !113}
!10722 = !{!10723, !10724, !10725, !10726, !10727}
!10723 = !DILocalVariable(name: "list", arg: 1, scope: !10719, file: !10476, line: 69, type: !10479)
!10724 = !DILocalVariable(name: "port", arg: 2, scope: !10719, file: !10476, line: 70, type: !1404)
!10725 = !DILocalVariable(name: "pins", arg: 3, scope: !10719, file: !10476, line: 71, type: !113)
!10726 = !DILocalVariable(name: "cb", scope: !10719, file: !10476, line: 73, type: !1446)
!10727 = !DILocalVariable(name: "tmp", scope: !10719, file: !10476, line: 73, type: !1446)
!10728 = !DILocation(line: 0, scope: !10719)
!10729 = !DILocation(line: 75, column: 2, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10719, file: !10476, line: 75, column: 2)
!10731 = !DILocation(line: 0, scope: !10730)
!10732 = !DILocation(line: 76, column: 11, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10734, file: !10476, line: 76, column: 7)
!10734 = distinct !DILexicalBlock(scope: !10735, file: !10476, line: 75, column: 57)
!10735 = distinct !DILexicalBlock(scope: !10730, file: !10476, line: 75, column: 2)
!10736 = !DILocation(line: 76, column: 20, scope: !10733)
!10737 = !DILocation(line: 76, column: 7, scope: !10734)
!10738 = !DILocation(line: 78, column: 8, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10733, file: !10476, line: 76, column: 28)
!10740 = !DILocation(line: 78, column: 4, scope: !10739)
!10741 = !DILocation(line: 79, column: 3, scope: !10739)
!10742 = !DILocation(line: 75, column: 2, scope: !10735)
!10743 = !DILocation(line: 81, column: 1, scope: !10719)
!10744 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6766, file: !6766, line: 710, type: !8309, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10745)
!10745 = !{!10746}
!10746 = !DILocalVariable(name: "Line", arg: 1, scope: !10744, file: !6766, line: 710, type: !113)
!10747 = !DILocation(line: 0, scope: !10744)
!10748 = !DILocation(line: 712, column: 21, scope: !10744)
!10749 = !DILocation(line: 0, scope: !10703, inlinedAt: !10750)
!10750 = distinct !DILocation(line: 712, column: 76, scope: !10744)
!10751 = !DILocation(line: 380, column: 4, scope: !10703, inlinedAt: !10750)
!10752 = !DILocation(line: 0, scope: !10711, inlinedAt: !10753)
!10753 = distinct !DILocation(line: 712, column: 76, scope: !10744)
!10754 = !DILocation(line: 414, column: 7, scope: !10711, inlinedAt: !10753)
!10755 = !DILocation(line: 712, column: 73, scope: !10744)
!10756 = !DILocation(line: 712, column: 3, scope: !10744)
!10757 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10758, file: !10758, line: 910, type: !10759, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10761)
!10758 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10759 = !DISubroutineType(types: !10760)
!10760 = !{null, !1477, !113}
!10761 = !{!10762, !10763}
!10762 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10757, file: !10758, line: 910, type: !1477)
!10763 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10757, file: !10758, line: 910, type: !113)
!10764 = !DILocation(line: 0, scope: !10757)
!10765 = !DILocation(line: 912, column: 3, scope: !10757)
!10766 = !DILocation(line: 913, column: 1, scope: !10757)
!10767 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10758, file: !10758, line: 823, type: !10768, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10770)
!10768 = !DISubroutineType(types: !10769)
!10769 = !{!113, !1477}
!10770 = !{!10771}
!10771 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10767, file: !10758, line: 823, type: !1477)
!10772 = !DILocation(line: 0, scope: !10767)
!10773 = !DILocation(line: 825, column: 21, scope: !10767)
!10774 = !DILocation(line: 825, column: 3, scope: !10767)
!10775 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10758, file: !10758, line: 812, type: !10759, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10776)
!10776 = !{!10777, !10778}
!10777 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10775, file: !10758, line: 812, type: !1477)
!10778 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10775, file: !10758, line: 812, type: !113)
!10779 = !DILocation(line: 0, scope: !10775)
!10780 = !DILocation(line: 814, column: 3, scope: !10775)
!10781 = !DILocation(line: 815, column: 1, scope: !10775)
!10782 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10758, file: !10758, line: 771, type: !10768, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10783)
!10783 = !{!10784}
!10784 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10782, file: !10758, line: 771, type: !1477)
!10785 = !DILocation(line: 0, scope: !10782)
!10786 = !DILocation(line: 773, column: 21, scope: !10782)
!10787 = !DILocation(line: 773, column: 3, scope: !10782)
!10788 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1544, file: !1544, line: 47, type: !10789, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10791)
!10789 = !DISubroutineType(types: !10790)
!10790 = !{!108, !1420, !540}
!10791 = !{!10792, !10793}
!10792 = !DILocalVariable(name: "flags", arg: 1, scope: !10788, file: !1544, line: 47, type: !1420)
!10793 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10788, file: !1544, line: 47, type: !540)
!10794 = !DILocation(line: 0, scope: !10788)
!10795 = !DILocation(line: 50, column: 13, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10788, file: !1544, line: 50, column: 6)
!10797 = !DILocation(line: 50, column: 28, scope: !10796)
!10798 = !DILocation(line: 50, column: 6, scope: !10788)
!10799 = !DILocation(line: 53, column: 11, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10796, file: !1544, line: 50, column: 34)
!10801 = !DILocation(line: 55, column: 14, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !10800, file: !1544, line: 55, column: 7)
!10803 = !DILocation(line: 55, column: 35, scope: !10802)
!10804 = !DILocation(line: 55, column: 7, scope: !10800)
!10805 = !DILocation(line: 56, column: 14, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10807, file: !1544, line: 56, column: 8)
!10807 = distinct !DILexicalBlock(scope: !10802, file: !1544, line: 55, column: 41)
!10808 = !DILocation(line: 56, column: 8, scope: !10807)
!10809 = !DILocation(line: 0, scope: !10802)
!10810 = !DILocation(line: 66, column: 14, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10800, file: !1544, line: 66, column: 7)
!10812 = !DILocation(line: 66, column: 30, scope: !10811)
!10813 = !DILocation(line: 66, column: 7, scope: !10800)
!10814 = !DILocation(line: 67, column: 12, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10811, file: !1544, line: 66, column: 36)
!10816 = !DILocation(line: 68, column: 3, scope: !10815)
!10817 = !DILocation(line: 68, column: 21, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10811, file: !1544, line: 68, column: 14)
!10819 = !DILocation(line: 68, column: 39, scope: !10818)
!10820 = !DILocation(line: 68, column: 14, scope: !10811)
!10821 = !DILocation(line: 69, column: 12, scope: !10822)
!10822 = distinct !DILexicalBlock(scope: !10818, file: !1544, line: 68, column: 45)
!10823 = !DILocation(line: 70, column: 3, scope: !10822)
!10824 = !DILocation(line: 72, column: 21, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10796, file: !1544, line: 72, column: 14)
!10826 = !DILocation(line: 72, column: 35, scope: !10825)
!10827 = !DILocation(line: 72, column: 14, scope: !10796)
!10828 = !DILocation(line: 77, column: 14, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10830, file: !1544, line: 77, column: 7)
!10830 = distinct !DILexicalBlock(scope: !10825, file: !1544, line: 72, column: 41)
!10831 = !DILocation(line: 77, column: 30, scope: !10829)
!10832 = !DILocation(line: 77, column: 7, scope: !10830)
!10833 = !DILocation(line: 0, scope: !10796)
!10834 = !DILocation(line: 90, column: 1, scope: !10788)
!10835 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1544, file: !1544, line: 157, type: !10836, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10838)
!10836 = !DISubroutineType(types: !10837)
!10837 = !{null, !1404, !108, !108, !108}
!10838 = !{!10839, !10840, !10841, !10842, !10843, !10844, !10845, !10846, !10847, !10848, !10849}
!10839 = !DILocalVariable(name: "dev", arg: 1, scope: !10835, file: !1544, line: 157, type: !1404)
!10840 = !DILocalVariable(name: "pin", arg: 2, scope: !10835, file: !1544, line: 157, type: !108)
!10841 = !DILocalVariable(name: "conf", arg: 3, scope: !10835, file: !1544, line: 158, type: !108)
!10842 = !DILocalVariable(name: "func", arg: 4, scope: !10835, file: !1544, line: 158, type: !108)
!10843 = !DILocalVariable(name: "cfg", scope: !10835, file: !1544, line: 160, type: !10360)
!10844 = !DILocalVariable(name: "gpio", scope: !10835, file: !1544, line: 161, type: !1477)
!10845 = !DILocalVariable(name: "pin_ll", scope: !10835, file: !1544, line: 163, type: !108)
!10846 = !DILocalVariable(name: "mode", scope: !10835, file: !1544, line: 227, type: !32)
!10847 = !DILocalVariable(name: "otype", scope: !10835, file: !1544, line: 227, type: !32)
!10848 = !DILocalVariable(name: "ospeed", scope: !10835, file: !1544, line: 227, type: !32)
!10849 = !DILocalVariable(name: "pupd", scope: !10835, file: !1544, line: 227, type: !32)
!10850 = !DILocation(line: 0, scope: !10835)
!10851 = !DILocation(line: 160, column: 45, scope: !10835)
!10852 = !DILocation(line: 161, column: 44, scope: !10835)
!10853 = !DILocation(line: 163, column: 15, scope: !10835)
!10854 = !DILocation(line: 229, column: 14, scope: !10835)
!10855 = !DILocation(line: 246, column: 47, scope: !10835)
!10856 = !DILocation(line: 246, column: 2, scope: !10835)
!10857 = !DILocation(line: 248, column: 43, scope: !10835)
!10858 = !DILocation(line: 248, column: 2, scope: !10835)
!10859 = !DILocation(line: 250, column: 40, scope: !10835)
!10860 = !DILocation(line: 250, column: 2, scope: !10835)
!10861 = !DILocation(line: 252, column: 11, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10835, file: !1544, line: 252, column: 6)
!10863 = !DILocation(line: 252, column: 6, scope: !10835)
!10864 = !DILocation(line: 253, column: 11, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10866, file: !1544, line: 253, column: 7)
!10866 = distinct !DILexicalBlock(scope: !10862, file: !1544, line: 252, column: 36)
!10867 = !DILocation(line: 253, column: 7, scope: !10866)
!10868 = !DILocation(line: 254, column: 4, scope: !10869)
!10869 = distinct !DILexicalBlock(scope: !10865, file: !1544, line: 253, column: 16)
!10870 = !DILocation(line: 255, column: 3, scope: !10869)
!10871 = !DILocation(line: 256, column: 4, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10865, file: !1544, line: 255, column: 10)
!10873 = !DILocation(line: 260, column: 40, scope: !10835)
!10874 = !DILocation(line: 260, column: 2, scope: !10835)
!10875 = !DILocation(line: 265, column: 1, scope: !10835)
!10876 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1544, file: !1544, line: 137, type: !10683, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10877)
!10877 = !{!10878, !10879}
!10878 = !DILocalVariable(name: "pin", arg: 1, scope: !10876, file: !1544, line: 137, type: !108)
!10879 = !DILocalVariable(name: "pinval", scope: !10876, file: !1544, line: 139, type: !113)
!10880 = !DILocation(line: 0, scope: !10876)
!10881 = !DILocation(line: 149, column: 13, scope: !10876)
!10882 = !DILocation(line: 151, column: 2, scope: !10876)
!10883 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10758, file: !10758, line: 342, type: !10884, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10886)
!10884 = !DISubroutineType(types: !10885)
!10885 = !{null, !1477, !113, !113}
!10886 = !{!10887, !10888, !10889}
!10887 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10883, file: !10758, line: 342, type: !1477)
!10888 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10883, file: !10758, line: 342, type: !113)
!10889 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10883, file: !10758, line: 342, type: !113)
!10890 = !DILocation(line: 0, scope: !10883)
!10891 = !DILocation(line: 344, column: 3, scope: !10883)
!10892 = !DILocation(line: 345, column: 1, scope: !10883)
!10893 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10758, file: !10758, line: 413, type: !10884, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10894)
!10894 = !{!10895, !10896, !10897}
!10895 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10893, file: !10758, line: 413, type: !1477)
!10896 = !DILocalVariable(name: "Pin", arg: 2, scope: !10893, file: !10758, line: 413, type: !113)
!10897 = !DILocalVariable(name: "Speed", arg: 3, scope: !10893, file: !10758, line: 413, type: !113)
!10898 = !DILocation(line: 0, scope: !10893)
!10899 = !DILocation(line: 415, column: 3, scope: !10893)
!10900 = !DILocation(line: 0, scope: !10703, inlinedAt: !10901)
!10901 = distinct !DILocation(line: 415, column: 3, scope: !10893)
!10902 = !DILocation(line: 380, column: 4, scope: !10703, inlinedAt: !10901)
!10903 = !DILocation(line: 0, scope: !10711, inlinedAt: !10904)
!10904 = distinct !DILocation(line: 415, column: 3, scope: !10893)
!10905 = !DILocation(line: 414, column: 7, scope: !10711, inlinedAt: !10904)
!10906 = !DILocation(line: 0, scope: !10703, inlinedAt: !10907)
!10907 = distinct !DILocation(line: 415, column: 3, scope: !10893)
!10908 = !DILocation(line: 0, scope: !10711, inlinedAt: !10909)
!10909 = distinct !DILocation(line: 415, column: 3, scope: !10893)
!10910 = !DILocation(line: 417, column: 1, scope: !10893)
!10911 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10758, file: !10758, line: 484, type: !10884, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10912)
!10912 = !{!10913, !10914, !10915}
!10913 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10911, file: !10758, line: 484, type: !1477)
!10914 = !DILocalVariable(name: "Pin", arg: 2, scope: !10911, file: !10758, line: 484, type: !113)
!10915 = !DILocalVariable(name: "Pull", arg: 3, scope: !10911, file: !10758, line: 484, type: !113)
!10916 = !DILocation(line: 0, scope: !10911)
!10917 = !DILocation(line: 486, column: 3, scope: !10911)
!10918 = !DILocation(line: 0, scope: !10703, inlinedAt: !10919)
!10919 = distinct !DILocation(line: 486, column: 3, scope: !10911)
!10920 = !DILocation(line: 380, column: 4, scope: !10703, inlinedAt: !10919)
!10921 = !DILocation(line: 0, scope: !10711, inlinedAt: !10922)
!10922 = distinct !DILocation(line: 486, column: 3, scope: !10911)
!10923 = !DILocation(line: 414, column: 7, scope: !10711, inlinedAt: !10922)
!10924 = !DILocation(line: 0, scope: !10703, inlinedAt: !10925)
!10925 = distinct !DILocation(line: 486, column: 3, scope: !10911)
!10926 = !DILocation(line: 0, scope: !10711, inlinedAt: !10927)
!10927 = distinct !DILocation(line: 486, column: 3, scope: !10911)
!10928 = !DILocation(line: 487, column: 1, scope: !10911)
!10929 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10758, file: !10758, line: 556, type: !10884, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10930)
!10930 = !{!10931, !10932, !10933}
!10931 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10929, file: !10758, line: 556, type: !1477)
!10932 = !DILocalVariable(name: "Pin", arg: 2, scope: !10929, file: !10758, line: 556, type: !113)
!10933 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10929, file: !10758, line: 556, type: !113)
!10934 = !DILocation(line: 0, scope: !10929)
!10935 = !DILocation(line: 558, column: 3, scope: !10929)
!10936 = !DILocation(line: 0, scope: !10703, inlinedAt: !10937)
!10937 = distinct !DILocation(line: 558, column: 3, scope: !10929)
!10938 = !DILocation(line: 380, column: 4, scope: !10703, inlinedAt: !10937)
!10939 = !DILocation(line: 0, scope: !10711, inlinedAt: !10940)
!10940 = distinct !DILocation(line: 558, column: 3, scope: !10929)
!10941 = !DILocation(line: 414, column: 7, scope: !10711, inlinedAt: !10940)
!10942 = !DILocation(line: 0, scope: !10703, inlinedAt: !10943)
!10943 = distinct !DILocation(line: 558, column: 3, scope: !10929)
!10944 = !DILocation(line: 0, scope: !10711, inlinedAt: !10945)
!10945 = distinct !DILocation(line: 558, column: 3, scope: !10929)
!10946 = !DILocation(line: 560, column: 1, scope: !10929)
!10947 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10758, file: !10758, line: 633, type: !10884, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10948)
!10948 = !{!10949, !10950, !10951}
!10949 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10947, file: !10758, line: 633, type: !1477)
!10950 = !DILocalVariable(name: "Pin", arg: 2, scope: !10947, file: !10758, line: 633, type: !113)
!10951 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10947, file: !10758, line: 633, type: !113)
!10952 = !DILocation(line: 0, scope: !10947)
!10953 = !DILocation(line: 635, column: 3, scope: !10947)
!10954 = !DILocation(line: 0, scope: !10703, inlinedAt: !10955)
!10955 = distinct !DILocation(line: 635, column: 3, scope: !10947)
!10956 = !DILocation(line: 380, column: 4, scope: !10703, inlinedAt: !10955)
!10957 = !DILocation(line: 0, scope: !10711, inlinedAt: !10958)
!10958 = distinct !DILocation(line: 635, column: 3, scope: !10947)
!10959 = !DILocation(line: 414, column: 7, scope: !10711, inlinedAt: !10958)
!10960 = !DILocation(line: 0, scope: !10703, inlinedAt: !10961)
!10961 = distinct !DILocation(line: 635, column: 3, scope: !10947)
!10962 = !DILocation(line: 0, scope: !10711, inlinedAt: !10963)
!10963 = distinct !DILocation(line: 635, column: 3, scope: !10947)
!10964 = !DILocation(line: 637, column: 1, scope: !10947)
!10965 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10758, file: !10758, line: 273, type: !10884, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10966)
!10966 = !{!10967, !10968, !10969}
!10967 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10965, file: !10758, line: 273, type: !1477)
!10968 = !DILocalVariable(name: "Pin", arg: 2, scope: !10965, file: !10758, line: 273, type: !113)
!10969 = !DILocalVariable(name: "Mode", arg: 3, scope: !10965, file: !10758, line: 273, type: !113)
!10970 = !DILocation(line: 0, scope: !10965)
!10971 = !DILocation(line: 275, column: 3, scope: !10965)
!10972 = !DILocation(line: 0, scope: !10703, inlinedAt: !10973)
!10973 = distinct !DILocation(line: 275, column: 3, scope: !10965)
!10974 = !DILocation(line: 380, column: 4, scope: !10703, inlinedAt: !10973)
!10975 = !DILocation(line: 0, scope: !10711, inlinedAt: !10976)
!10976 = distinct !DILocation(line: 275, column: 3, scope: !10965)
!10977 = !DILocation(line: 414, column: 7, scope: !10711, inlinedAt: !10976)
!10978 = !DILocation(line: 0, scope: !10703, inlinedAt: !10979)
!10979 = distinct !DILocation(line: 275, column: 3, scope: !10965)
!10980 = !DILocation(line: 0, scope: !10711, inlinedAt: !10981)
!10981 = distinct !DILocation(line: 275, column: 3, scope: !10965)
!10982 = !DILocation(line: 276, column: 1, scope: !10965)
!10983 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1544, file: !1544, line: 698, type: !1557, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !10984)
!10984 = !{!10985, !10986, !10987}
!10985 = !DILocalVariable(name: "dev", arg: 1, scope: !10983, file: !1544, line: 698, type: !1404)
!10986 = !DILocalVariable(name: "data", scope: !10983, file: !1544, line: 700, type: !10427)
!10987 = !DILocalVariable(name: "ret", scope: !10983, file: !1544, line: 701, type: !108)
!10988 = !DILocation(line: 0, scope: !10983)
!10989 = !DILocation(line: 700, column: 38, scope: !10983)
!10990 = !DILocation(line: 703, column: 8, scope: !10983)
!10991 = !DILocation(line: 703, column: 12, scope: !10983)
!10992 = !DILocation(line: 705, column: 7, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10983, file: !1544, line: 705, column: 6)
!10994 = !DILocation(line: 705, column: 6, scope: !10983)
!10995 = !DILocation(line: 722, column: 8, scope: !10983)
!10996 = !DILocation(line: 723, column: 10, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10983, file: !1544, line: 723, column: 6)
!10998 = !DILocation(line: 723, column: 6, scope: !10983)
!10999 = !DILocation(line: 731, column: 1, scope: !10983)
!11000 = distinct !DISubprogram(name: "device_is_ready", scope: !10207, file: !10207, line: 47, type: !11001, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !11003)
!11001 = !DISubroutineType(types: !11002)
!11002 = !{!422, !1404}
!11003 = !{!11004}
!11004 = !DILocalVariable(name: "dev", arg: 1, scope: !11000, file: !10207, line: 47, type: !1404)
!11005 = !DILocation(line: 0, scope: !11000)
!11006 = !DILocation(line: 55, column: 2, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !11000, file: !10207, line: 55, column: 2)
!11008 = !{i64 2155053193}
!11009 = !DILocation(line: 56, column: 9, scope: !11000)
!11010 = !DILocation(line: 56, column: 2, scope: !11000)
!11011 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1544, file: !1544, line: 270, type: !11012, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !11014)
!11012 = !DISubroutineType(types: !11013)
!11013 = !{!108, !1404, !422}
!11014 = !{!11015, !11016, !11017, !11018, !11019}
!11015 = !DILocalVariable(name: "dev", arg: 1, scope: !11011, file: !1544, line: 270, type: !1404)
!11016 = !DILocalVariable(name: "on", arg: 2, scope: !11011, file: !1544, line: 270, type: !422)
!11017 = !DILocalVariable(name: "cfg", scope: !11011, file: !1544, line: 272, type: !10360)
!11018 = !DILocalVariable(name: "ret", scope: !11011, file: !1544, line: 273, type: !108)
!11019 = !DILocalVariable(name: "clk", scope: !11011, file: !1544, line: 278, type: !10650)
!11020 = !DILocation(line: 0, scope: !11011)
!11021 = !DILocation(line: 272, column: 45, scope: !11011)
!11022 = !DILocation(line: 282, column: 38, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !11024, file: !1544, line: 280, column: 10)
!11024 = distinct !DILexicalBlock(scope: !11011, file: !1544, line: 280, column: 6)
!11025 = !DILocation(line: 282, column: 6, scope: !11023)
!11026 = !DILocation(line: 281, column: 9, scope: !11023)
!11027 = !DILocation(line: 293, column: 1, scope: !11011)
!11028 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !11001, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !11029)
!11029 = !{!11030}
!11030 = !DILocalVariable(name: "dev", arg: 1, scope: !11028, file: !411, line: 730, type: !1404)
!11031 = !DILocation(line: 0, scope: !11028)
!11032 = !DILocation(line: 732, column: 9, scope: !11028)
!11033 = !DILocation(line: 732, column: 2, scope: !11028)
!11034 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1544, file: !1544, line: 496, type: !11035, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1375, retainedNodes: !11037)
!11035 = !DISubroutineType(types: !11036)
!11036 = !{!108, !1404, !108, !108, !108}
!11037 = !{!11038, !11039, !11040, !11041, !11042, !11043}
!11038 = !DILocalVariable(name: "dev", arg: 1, scope: !11034, file: !1544, line: 496, type: !1404)
!11039 = !DILocalVariable(name: "pin", arg: 2, scope: !11034, file: !1544, line: 496, type: !108)
!11040 = !DILocalVariable(name: "conf", arg: 3, scope: !11034, file: !1544, line: 496, type: !108)
!11041 = !DILocalVariable(name: "func", arg: 4, scope: !11034, file: !1544, line: 496, type: !108)
!11042 = !DILocalVariable(name: "ret", scope: !11034, file: !1544, line: 498, type: !108)
!11043 = !DILocalVariable(name: "gpio_out", scope: !11044, file: !1544, line: 508, type: !113)
!11044 = distinct !DILexicalBlock(scope: !11045, file: !1544, line: 507, column: 27)
!11045 = distinct !DILexicalBlock(scope: !11034, file: !1544, line: 507, column: 6)
!11046 = !DILocation(line: 0, scope: !11034)
!11047 = !DILocation(line: 505, column: 2, scope: !11034)
!11048 = !DILocation(line: 507, column: 11, scope: !11045)
!11049 = !DILocation(line: 507, column: 6, scope: !11034)
!11050 = !DILocation(line: 508, column: 28, scope: !11044)
!11051 = !DILocation(line: 0, scope: !11044)
!11052 = !DILocation(line: 510, column: 16, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !11044, file: !1544, line: 510, column: 7)
!11054 = !DILocation(line: 0, scope: !11053)
!11055 = !DILocation(line: 510, column: 7, scope: !11044)
!11056 = !DILocation(line: 511, column: 4, scope: !11057)
!11057 = distinct !DILexicalBlock(scope: !11053, file: !1544, line: 510, column: 32)
!11058 = !DILocation(line: 512, column: 3, scope: !11057)
!11059 = !DILocation(line: 513, column: 4, scope: !11060)
!11060 = distinct !DILexicalBlock(scope: !11061, file: !1544, line: 512, column: 39)
!11061 = distinct !DILexicalBlock(scope: !11053, file: !1544, line: 512, column: 14)
!11062 = !DILocation(line: 514, column: 3, scope: !11060)
!11063 = !DILocation(line: 518, column: 1, scope: !11034)
!11064 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1829, file: !1829, line: 526, type: !1732, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11065)
!11065 = !{!11066, !11067, !11068}
!11066 = !DILocalVariable(name: "dev", arg: 1, scope: !11064, file: !1829, line: 526, type: !1734)
!11067 = !DILocalVariable(name: "c", arg: 2, scope: !11064, file: !1829, line: 526, type: !1336)
!11068 = !DILocalVariable(name: "config", scope: !11064, file: !1829, line: 528, type: !11069)
!11069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 32)
!11070 = !DILocation(line: 0, scope: !11064)
!11071 = !DILocation(line: 528, column: 48, scope: !11064)
!11072 = !DILocation(line: 531, column: 40, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11064, file: !1829, line: 531, column: 6)
!11074 = !DILocation(line: 531, column: 6, scope: !11073)
!11075 = !DILocation(line: 531, column: 6, scope: !11064)
!11076 = !DILocation(line: 532, column: 34, scope: !11077)
!11077 = distinct !DILexicalBlock(scope: !11073, file: !1829, line: 531, column: 48)
!11078 = !DILocation(line: 532, column: 3, scope: !11077)
!11079 = !DILocation(line: 533, column: 2, scope: !11077)
!11080 = !DILocation(line: 539, column: 42, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !11064, file: !1829, line: 539, column: 6)
!11082 = !DILocation(line: 539, column: 7, scope: !11081)
!11083 = !DILocation(line: 539, column: 6, scope: !11064)
!11084 = !DILocation(line: 543, column: 52, scope: !11064)
!11085 = !DILocation(line: 543, column: 22, scope: !11064)
!11086 = !DILocation(line: 543, column: 5, scope: !11064)
!11087 = !DILocation(line: 545, column: 2, scope: !11064)
!11088 = !DILocation(line: 546, column: 1, scope: !11064)
!11089 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1829, file: !1829, line: 548, type: !1751, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11090)
!11090 = !{!11091, !11092, !11093, !11094}
!11091 = !DILocalVariable(name: "dev", arg: 1, scope: !11089, file: !1829, line: 548, type: !1734)
!11092 = !DILocalVariable(name: "c", arg: 2, scope: !11089, file: !1829, line: 549, type: !165)
!11093 = !DILocalVariable(name: "config", scope: !11089, file: !1829, line: 551, type: !11069)
!11094 = !DILocalVariable(name: "key", scope: !11089, file: !1829, line: 555, type: !32)
!11095 = !DILocation(line: 0, scope: !11089)
!11096 = !DILocation(line: 551, column: 48, scope: !11089)
!11097 = !DILocation(line: 562, column: 2, scope: !11089)
!11098 = !DILocation(line: 563, column: 41, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !11100, file: !1829, line: 563, column: 7)
!11100 = distinct !DILexicalBlock(scope: !11089, file: !1829, line: 562, column: 12)
!11101 = !DILocation(line: 563, column: 7, scope: !11099)
!11102 = !DILocation(line: 563, column: 7, scope: !11100)
!11103 = !DILocation(line: 55, column: 2, scope: !11104, inlinedAt: !11108)
!11104 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4087, file: !4087, line: 42, type: !4088, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11105)
!11105 = !{!11106, !11107}
!11106 = !DILocalVariable(name: "key", scope: !11104, file: !4087, line: 44, type: !32)
!11107 = !DILocalVariable(name: "tmp", scope: !11104, file: !4087, line: 53, type: !32)
!11108 = distinct !DILocation(line: 564, column: 10, scope: !11109)
!11109 = distinct !DILexicalBlock(scope: !11099, file: !1829, line: 563, column: 49)
!11110 = !{i64 2288855}
!11111 = !DILocation(line: 0, scope: !11104, inlinedAt: !11108)
!11112 = !DILocation(line: 565, column: 42, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11109, file: !1829, line: 565, column: 8)
!11114 = !DILocation(line: 565, column: 8, scope: !11113)
!11115 = !DILocation(line: 565, column: 8, scope: !11109)
!11116 = !DILocalVariable(name: "key", arg: 1, scope: !11117, file: !4087, line: 84, type: !32)
!11117 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4087, file: !4087, line: 84, type: !4100, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11118)
!11118 = !{!11116}
!11119 = !DILocation(line: 0, scope: !11117, inlinedAt: !11120)
!11120 = distinct !DILocation(line: 568, column: 4, scope: !11109)
!11121 = !DILocation(line: 95, column: 2, scope: !11117, inlinedAt: !11120)
!11122 = !{i64 2289672}
!11123 = !DILocation(line: 569, column: 3, scope: !11109)
!11124 = distinct !{!11124, !11097, !11125}
!11125 = !DILocation(line: 570, column: 2, scope: !11089)
!11126 = !DILocation(line: 592, column: 33, scope: !11089)
!11127 = !DILocation(line: 592, column: 2, scope: !11089)
!11128 = !DILocation(line: 0, scope: !11117, inlinedAt: !11129)
!11129 = distinct !DILocation(line: 593, column: 2, scope: !11089)
!11130 = !DILocation(line: 95, column: 2, scope: !11117, inlinedAt: !11129)
!11131 = !DILocation(line: 594, column: 1, scope: !11089)
!11132 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1829, file: !1829, line: 596, type: !1755, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11133)
!11133 = !{!11134, !11135, !11136}
!11134 = !DILocalVariable(name: "dev", arg: 1, scope: !11132, file: !1829, line: 596, type: !1734)
!11135 = !DILocalVariable(name: "config", scope: !11132, file: !1829, line: 598, type: !11069)
!11136 = !DILocalVariable(name: "err", scope: !11132, file: !1829, line: 599, type: !113)
!11137 = !DILocation(line: 0, scope: !11132)
!11138 = !DILocation(line: 598, column: 48, scope: !11132)
!11139 = !DILocation(line: 606, column: 40, scope: !11140)
!11140 = distinct !DILexicalBlock(scope: !11132, file: !1829, line: 606, column: 6)
!11141 = !DILocation(line: 606, column: 6, scope: !11140)
!11142 = !DILocation(line: 606, column: 6, scope: !11132)
!11143 = !DILocation(line: 610, column: 39, scope: !11144)
!11144 = distinct !DILexicalBlock(scope: !11132, file: !1829, line: 610, column: 6)
!11145 = !DILocation(line: 610, column: 6, scope: !11144)
!11146 = !DILocation(line: 610, column: 6, scope: !11132)
!11147 = !DILocation(line: 614, column: 39, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !11132, file: !1829, line: 614, column: 6)
!11149 = !DILocation(line: 614, column: 6, scope: !11148)
!11150 = !DILocation(line: 614, column: 6, scope: !11132)
!11151 = !DILocation(line: 619, column: 40, scope: !11152)
!11152 = distinct !DILexicalBlock(scope: !11132, file: !1829, line: 619, column: 6)
!11153 = !DILocation(line: 619, column: 6, scope: !11152)
!11154 = !DILocation(line: 619, column: 6, scope: !11132)
!11155 = !DILocation(line: 623, column: 10, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11132, file: !1829, line: 623, column: 6)
!11157 = !DILocation(line: 623, column: 6, scope: !11132)
!11158 = !DILocation(line: 624, column: 34, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !11156, file: !1829, line: 623, column: 24)
!11160 = !DILocation(line: 624, column: 3, scope: !11159)
!11161 = !DILocation(line: 625, column: 2, scope: !11159)
!11162 = !DILocation(line: 632, column: 10, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11132, file: !1829, line: 632, column: 6)
!11164 = !DILocation(line: 632, column: 6, scope: !11132)
!11165 = !DILocation(line: 633, column: 34, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11163, file: !1829, line: 632, column: 32)
!11167 = !DILocation(line: 633, column: 3, scope: !11166)
!11168 = !DILocation(line: 634, column: 2, scope: !11166)
!11169 = !DILocation(line: 636, column: 10, scope: !11170)
!11170 = distinct !DILexicalBlock(scope: !11132, file: !1829, line: 636, column: 6)
!11171 = !DILocation(line: 636, column: 6, scope: !11132)
!11172 = !DILocation(line: 637, column: 33, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11170, file: !1829, line: 636, column: 31)
!11174 = !DILocation(line: 637, column: 3, scope: !11173)
!11175 = !DILocation(line: 638, column: 2, scope: !11173)
!11176 = !DILocation(line: 640, column: 10, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !11132, file: !1829, line: 640, column: 6)
!11178 = !DILocation(line: 640, column: 6, scope: !11132)
!11179 = !DILocation(line: 641, column: 33, scope: !11180)
!11180 = distinct !DILexicalBlock(scope: !11177, file: !1829, line: 640, column: 32)
!11181 = !DILocation(line: 641, column: 3, scope: !11180)
!11182 = !DILocation(line: 642, column: 2, scope: !11180)
!11183 = !DILocation(line: 646, column: 32, scope: !11132)
!11184 = !DILocation(line: 646, column: 2, scope: !11132)
!11185 = !DILocation(line: 648, column: 2, scope: !11132)
!11186 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1829, file: !1829, line: 419, type: !1759, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11187)
!11187 = !{!11188, !11189, !11190, !11191, !11193, !11194, !11195, !11196}
!11188 = !DILocalVariable(name: "dev", arg: 1, scope: !11186, file: !1829, line: 419, type: !1734)
!11189 = !DILocalVariable(name: "cfg", arg: 2, scope: !11186, file: !1829, line: 420, type: !1761)
!11190 = !DILocalVariable(name: "config", scope: !11186, file: !1829, line: 422, type: !11069)
!11191 = !DILocalVariable(name: "data", scope: !11186, file: !1829, line: 423, type: !11192)
!11192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 32)
!11193 = !DILocalVariable(name: "parity", scope: !11186, file: !1829, line: 424, type: !7331)
!11194 = !DILocalVariable(name: "stopbits", scope: !11186, file: !1829, line: 425, type: !7331)
!11195 = !DILocalVariable(name: "databits", scope: !11186, file: !1829, line: 426, type: !7331)
!11196 = !DILocalVariable(name: "flowctrl", scope: !11186, file: !1829, line: 428, type: !7331)
!11197 = !DILocation(line: 0, scope: !11186)
!11198 = !DILocation(line: 422, column: 48, scope: !11186)
!11199 = !DILocation(line: 423, column: 38, scope: !11186)
!11200 = !DILocation(line: 424, column: 56, scope: !11186)
!11201 = !DILocation(line: 424, column: 51, scope: !11186)
!11202 = !DILocation(line: 424, column: 26, scope: !11186)
!11203 = !DILocation(line: 425, column: 60, scope: !11186)
!11204 = !DILocation(line: 425, column: 55, scope: !11186)
!11205 = !DILocation(line: 425, column: 28, scope: !11186)
!11206 = !DILocation(line: 426, column: 60, scope: !11186)
!11207 = !DILocation(line: 426, column: 55, scope: !11186)
!11208 = !DILocation(line: 426, column: 28, scope: !11186)
!11209 = !DILocation(line: 428, column: 58, scope: !11186)
!11210 = !DILocation(line: 428, column: 53, scope: !11186)
!11211 = !DILocation(line: 428, column: 28, scope: !11186)
!11212 = !DILocation(line: 431, column: 44, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11186, file: !1829, line: 431, column: 6)
!11214 = !DILocation(line: 438, column: 22, scope: !11215)
!11215 = distinct !DILexicalBlock(scope: !11186, file: !1829, line: 437, column: 6)
!11216 = !DILocation(line: 437, column: 6, scope: !11186)
!11217 = !DILocation(line: 448, column: 6, scope: !11186)
!11218 = !DILocation(line: 465, column: 47, scope: !11219)
!11219 = distinct !DILexicalBlock(scope: !11186, file: !1829, line: 465, column: 6)
!11220 = !DILocation(line: 475, column: 21, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11186, file: !1829, line: 475, column: 6)
!11222 = !DILocation(line: 475, column: 6, scope: !11186)
!11223 = !DILocation(line: 476, column: 8, scope: !11224)
!11224 = distinct !DILexicalBlock(scope: !11225, file: !1829, line: 476, column: 7)
!11225 = distinct !DILexicalBlock(scope: !11221, file: !1829, line: 475, column: 49)
!11226 = !DILocation(line: 477, column: 34, scope: !11224)
!11227 = !DILocation(line: 476, column: 7, scope: !11225)
!11228 = !DILocation(line: 482, column: 27, scope: !11186)
!11229 = !DILocation(line: 482, column: 2, scope: !11186)
!11230 = !DILocation(line: 484, column: 16, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11186, file: !1829, line: 484, column: 6)
!11232 = !DILocation(line: 484, column: 13, scope: !11231)
!11233 = !DILocation(line: 484, column: 6, scope: !11186)
!11234 = !DILocation(line: 485, column: 3, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11231, file: !1829, line: 484, column: 44)
!11236 = !DILocation(line: 486, column: 2, scope: !11235)
!11237 = !DILocation(line: 488, column: 18, scope: !11238)
!11238 = distinct !DILexicalBlock(scope: !11186, file: !1829, line: 488, column: 6)
!11239 = !DILocation(line: 488, column: 15, scope: !11238)
!11240 = !DILocation(line: 488, column: 6, scope: !11186)
!11241 = !DILocation(line: 489, column: 3, scope: !11242)
!11242 = distinct !DILexicalBlock(scope: !11238, file: !1829, line: 488, column: 48)
!11243 = !DILocation(line: 490, column: 2, scope: !11242)
!11244 = !DILocation(line: 492, column: 18, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11186, file: !1829, line: 492, column: 6)
!11246 = !DILocation(line: 492, column: 15, scope: !11245)
!11247 = !DILocation(line: 492, column: 6, scope: !11186)
!11248 = !DILocation(line: 493, column: 3, scope: !11249)
!11249 = distinct !DILexicalBlock(scope: !11245, file: !1829, line: 492, column: 48)
!11250 = !DILocation(line: 494, column: 2, scope: !11249)
!11251 = !DILocation(line: 496, column: 18, scope: !11252)
!11252 = distinct !DILexicalBlock(scope: !11186, file: !1829, line: 496, column: 6)
!11253 = !DILocation(line: 496, column: 15, scope: !11252)
!11254 = !DILocation(line: 496, column: 6, scope: !11186)
!11255 = !DILocation(line: 497, column: 3, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11252, file: !1829, line: 496, column: 46)
!11257 = !DILocation(line: 498, column: 2, scope: !11256)
!11258 = !DILocation(line: 500, column: 11, scope: !11259)
!11259 = distinct !DILexicalBlock(scope: !11186, file: !1829, line: 500, column: 6)
!11260 = !DILocation(line: 500, column: 29, scope: !11259)
!11261 = !DILocation(line: 500, column: 20, scope: !11259)
!11262 = !DILocation(line: 500, column: 6, scope: !11186)
!11263 = !DILocation(line: 501, column: 3, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11259, file: !1829, line: 500, column: 40)
!11265 = !DILocation(line: 502, column: 26, scope: !11264)
!11266 = !DILocation(line: 502, column: 19, scope: !11264)
!11267 = !DILocation(line: 503, column: 2, scope: !11264)
!11268 = !DILocation(line: 505, column: 26, scope: !11186)
!11269 = !DILocation(line: 505, column: 2, scope: !11186)
!11270 = !DILocation(line: 506, column: 2, scope: !11186)
!11271 = !DILocation(line: 507, column: 1, scope: !11186)
!11272 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1829, file: !1829, line: 509, type: !1772, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11273)
!11273 = !{!11274, !11275, !11276}
!11274 = !DILocalVariable(name: "dev", arg: 1, scope: !11272, file: !1829, line: 509, type: !1734)
!11275 = !DILocalVariable(name: "cfg", arg: 2, scope: !11272, file: !1829, line: 510, type: !1774)
!11276 = !DILocalVariable(name: "data", scope: !11272, file: !1829, line: 512, type: !11192)
!11277 = !DILocation(line: 0, scope: !11272)
!11278 = !DILocation(line: 512, column: 38, scope: !11272)
!11279 = !DILocation(line: 514, column: 24, scope: !11272)
!11280 = !DILocation(line: 514, column: 7, scope: !11272)
!11281 = !DILocation(line: 514, column: 16, scope: !11272)
!11282 = !DILocation(line: 515, column: 41, scope: !11272)
!11283 = !{i32 0, i32 1537}
!11284 = !DILocation(line: 515, column: 16, scope: !11272)
!11285 = !DILocation(line: 515, column: 7, scope: !11272)
!11286 = !DILocation(line: 515, column: 14, scope: !11272)
!11287 = !DILocation(line: 517, column: 3, scope: !11272)
!11288 = !{i32 0, i32 12289}
!11289 = !DILocation(line: 516, column: 19, scope: !11272)
!11290 = !DILocation(line: 516, column: 7, scope: !11272)
!11291 = !DILocation(line: 516, column: 17, scope: !11272)
!11292 = !DILocation(line: 519, column: 3, scope: !11272)
!11293 = !DILocation(line: 519, column: 33, scope: !11272)
!11294 = !DILocation(line: 518, column: 19, scope: !11272)
!11295 = !DILocation(line: 518, column: 7, scope: !11272)
!11296 = !DILocation(line: 518, column: 17, scope: !11272)
!11297 = !DILocation(line: 521, column: 3, scope: !11272)
!11298 = !{i32 0, i32 769}
!11299 = !DILocation(line: 520, column: 19, scope: !11272)
!11300 = !DILocation(line: 520, column: 7, scope: !11272)
!11301 = !DILocation(line: 520, column: 17, scope: !11272)
!11302 = !DILocation(line: 522, column: 2, scope: !11272)
!11303 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1829, file: !1829, line: 205, type: !11304, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11306)
!11304 = !DISubroutineType(types: !11305)
!11305 = !{!113, !1734}
!11306 = !{!11307, !11308}
!11307 = !DILocalVariable(name: "dev", arg: 1, scope: !11303, file: !1829, line: 205, type: !1734)
!11308 = !DILocalVariable(name: "config", scope: !11303, file: !1829, line: 207, type: !11069)
!11309 = !DILocation(line: 0, scope: !11303)
!11310 = !DILocation(line: 207, column: 48, scope: !11303)
!11311 = !DILocation(line: 209, column: 36, scope: !11303)
!11312 = !DILocation(line: 209, column: 9, scope: !11303)
!11313 = !DILocation(line: 209, column: 2, scope: !11303)
!11314 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1829, file: !1829, line: 270, type: !11315, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11317)
!11315 = !DISubroutineType(types: !11316)
!11316 = !{!1700, !113}
!11317 = !{!11318}
!11318 = !DILocalVariable(name: "parity", arg: 1, scope: !11314, file: !1829, line: 270, type: !113)
!11319 = !DILocation(line: 0, scope: !11314)
!11320 = !DILocation(line: 272, column: 2, scope: !11314)
!11321 = !DILocation(line: 281, column: 1, scope: !11314)
!11322 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1829, file: !1829, line: 220, type: !11304, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11323)
!11323 = !{!11324, !11325}
!11324 = !DILocalVariable(name: "dev", arg: 1, scope: !11322, file: !1829, line: 220, type: !1734)
!11325 = !DILocalVariable(name: "config", scope: !11322, file: !1829, line: 222, type: !11069)
!11326 = !DILocation(line: 0, scope: !11322)
!11327 = !DILocation(line: 222, column: 48, scope: !11322)
!11328 = !DILocation(line: 224, column: 44, scope: !11322)
!11329 = !DILocation(line: 224, column: 9, scope: !11322)
!11330 = !DILocation(line: 224, column: 2, scope: !11322)
!11331 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1829, file: !1829, line: 304, type: !11332, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11334)
!11332 = !DISubroutineType(types: !11333)
!11333 = !{!1714, !113}
!11334 = !{!11335}
!11335 = !DILocalVariable(name: "sb", arg: 1, scope: !11331, file: !1829, line: 304, type: !113)
!11336 = !DILocation(line: 0, scope: !11331)
!11337 = !DILocation(line: 306, column: 2, scope: !11331)
!11338 = !DILocation(line: 0, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11331, file: !1829, line: 306, column: 14)
!11340 = !DILocation(line: 323, column: 1, scope: !11331)
!11341 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1829, file: !1829, line: 235, type: !11304, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11342)
!11342 = !{!11343, !11344}
!11343 = !DILocalVariable(name: "dev", arg: 1, scope: !11341, file: !1829, line: 235, type: !1734)
!11344 = !DILocalVariable(name: "config", scope: !11341, file: !1829, line: 237, type: !11069)
!11345 = !DILocation(line: 0, scope: !11341)
!11346 = !DILocation(line: 237, column: 48, scope: !11341)
!11347 = !DILocation(line: 239, column: 39, scope: !11341)
!11348 = !DILocation(line: 239, column: 9, scope: !11341)
!11349 = !DILocation(line: 239, column: 2, scope: !11341)
!11350 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1829, file: !1829, line: 355, type: !11351, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11353)
!11351 = !DISubroutineType(types: !11352)
!11352 = !{!1707, !113, !113}
!11353 = !{!11354, !11355}
!11354 = !DILocalVariable(name: "db", arg: 1, scope: !11350, file: !1829, line: 355, type: !113)
!11355 = !DILocalVariable(name: "p", arg: 2, scope: !11350, file: !1829, line: 356, type: !113)
!11356 = !DILocation(line: 0, scope: !11350)
!11357 = !DILocation(line: 358, column: 2, scope: !11350)
!11358 = !DILocation(line: 384, column: 1, scope: !11350)
!11359 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1829, file: !1829, line: 250, type: !11304, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11360)
!11360 = !{!11361, !11362}
!11361 = !DILocalVariable(name: "dev", arg: 1, scope: !11359, file: !1829, line: 250, type: !1734)
!11362 = !DILocalVariable(name: "config", scope: !11359, file: !1829, line: 252, type: !11069)
!11363 = !DILocation(line: 0, scope: !11359)
!11364 = !DILocation(line: 252, column: 48, scope: !11359)
!11365 = !DILocation(line: 254, column: 40, scope: !11359)
!11366 = !DILocation(line: 254, column: 9, scope: !11359)
!11367 = !DILocation(line: 254, column: 2, scope: !11359)
!11368 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1829, file: !1829, line: 409, type: !11369, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11371)
!11369 = !DISubroutineType(types: !11370)
!11370 = !{!1720, !113}
!11371 = !{!11372}
!11372 = !DILocalVariable(name: "fc", arg: 1, scope: !11368, file: !1829, line: 409, type: !113)
!11373 = !DILocation(line: 0, scope: !11368)
!11374 = !DILocation(line: 411, column: 9, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11368, file: !1829, line: 411, column: 6)
!11376 = !DILocation(line: 416, column: 1, scope: !11368)
!11377 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !11378, file: !11378, line: 967, type: !11379, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11381)
!11378 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11379 = !DISubroutineType(types: !11380)
!11380 = !{!113, !1775}
!11381 = !{!11382}
!11382 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11377, file: !11378, line: 967, type: !1775)
!11383 = !DILocation(line: 0, scope: !11377)
!11384 = !DILocation(line: 969, column: 21, scope: !11377)
!11385 = !DILocation(line: 969, column: 3, scope: !11377)
!11386 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !11378, file: !11378, line: 601, type: !11379, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11387)
!11387 = !{!11388}
!11388 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11386, file: !11378, line: 601, type: !1775)
!11389 = !DILocation(line: 0, scope: !11386)
!11390 = !DILocation(line: 603, column: 21, scope: !11386)
!11391 = !DILocation(line: 603, column: 3, scope: !11386)
!11392 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !11378, file: !11378, line: 820, type: !11379, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11393)
!11393 = !{!11394}
!11394 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11392, file: !11378, line: 820, type: !1775)
!11395 = !DILocation(line: 0, scope: !11392)
!11396 = !DILocation(line: 822, column: 21, scope: !11392)
!11397 = !DILocation(line: 822, column: 3, scope: !11392)
!11398 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !11378, file: !11378, line: 547, type: !11379, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11399)
!11399 = !{!11400}
!11400 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11398, file: !11378, line: 547, type: !1775)
!11401 = !DILocation(line: 0, scope: !11398)
!11402 = !DILocation(line: 549, column: 21, scope: !11398)
!11403 = !DILocation(line: 549, column: 3, scope: !11398)
!11404 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1829, file: !1829, line: 257, type: !11405, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11407)
!11405 = !DISubroutineType(types: !11406)
!11406 = !{!113, !1700}
!11407 = !{!11408}
!11408 = !DILocalVariable(name: "parity", arg: 1, scope: !11404, file: !1829, line: 257, type: !1700)
!11409 = !DILocation(line: 0, scope: !11404)
!11410 = !DILocation(line: 259, column: 2, scope: !11404)
!11411 = !DILocation(line: 268, column: 1, scope: !11404)
!11412 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1829, file: !1829, line: 283, type: !11413, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11415)
!11413 = !DISubroutineType(types: !11414)
!11414 = !{!113, !1714}
!11415 = !{!11416}
!11416 = !DILocalVariable(name: "sb", arg: 1, scope: !11412, file: !1829, line: 283, type: !1714)
!11417 = !DILocation(line: 0, scope: !11412)
!11418 = !DILocation(line: 285, column: 2, scope: !11412)
!11419 = !DILocation(line: 0, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11412, file: !1829, line: 285, column: 14)
!11421 = !DILocation(line: 302, column: 1, scope: !11412)
!11422 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1829, file: !1829, line: 325, type: !11423, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11425)
!11423 = !DISubroutineType(types: !11424)
!11424 = !{!113, !1707, !1700}
!11425 = !{!11426, !11427}
!11426 = !DILocalVariable(name: "db", arg: 1, scope: !11422, file: !1829, line: 325, type: !1707)
!11427 = !DILocalVariable(name: "p", arg: 2, scope: !11422, file: !1829, line: 326, type: !1700)
!11428 = !DILocation(line: 0, scope: !11422)
!11429 = !DILocation(line: 328, column: 2, scope: !11422)
!11430 = !DILocation(line: 353, column: 1, scope: !11422)
!11431 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1829, file: !1829, line: 393, type: !11432, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11434)
!11432 = !DISubroutineType(types: !11433)
!11433 = !{!113, !1720}
!11434 = !{!11435}
!11435 = !DILocalVariable(name: "fc", arg: 1, scope: !11431, file: !1829, line: 393, type: !1720)
!11436 = !DILocation(line: 0, scope: !11431)
!11437 = !DILocation(line: 395, column: 9, scope: !11438)
!11438 = distinct !DILexicalBlock(scope: !11431, file: !1829, line: 395, column: 6)
!11439 = !DILocation(line: 400, column: 1, scope: !11431)
!11440 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !11378, file: !11378, line: 424, type: !11441, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11443)
!11441 = !DISubroutineType(types: !11442)
!11442 = !{null, !1775}
!11443 = !{!11444}
!11444 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11440, file: !11378, line: 424, type: !1775)
!11445 = !DILocation(line: 0, scope: !11440)
!11446 = !DILocation(line: 426, column: 3, scope: !11440)
!11447 = !DILocation(line: 427, column: 1, scope: !11440)
!11448 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1829, file: !1829, line: 197, type: !11449, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11451)
!11449 = !DISubroutineType(types: !11450)
!11450 = !{null, !1734, !113}
!11451 = !{!11452, !11453, !11454}
!11452 = !DILocalVariable(name: "dev", arg: 1, scope: !11448, file: !1829, line: 197, type: !1734)
!11453 = !DILocalVariable(name: "parity", arg: 2, scope: !11448, file: !1829, line: 198, type: !113)
!11454 = !DILocalVariable(name: "config", scope: !11448, file: !1829, line: 200, type: !11069)
!11455 = !DILocation(line: 0, scope: !11448)
!11456 = !DILocation(line: 200, column: 48, scope: !11448)
!11457 = !DILocation(line: 202, column: 29, scope: !11448)
!11458 = !DILocation(line: 202, column: 2, scope: !11448)
!11459 = !DILocation(line: 203, column: 1, scope: !11448)
!11460 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1829, file: !1829, line: 212, type: !11449, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11461)
!11461 = !{!11462, !11463, !11464}
!11462 = !DILocalVariable(name: "dev", arg: 1, scope: !11460, file: !1829, line: 212, type: !1734)
!11463 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11460, file: !1829, line: 213, type: !113)
!11464 = !DILocalVariable(name: "config", scope: !11460, file: !1829, line: 215, type: !11069)
!11465 = !DILocation(line: 0, scope: !11460)
!11466 = !DILocation(line: 215, column: 48, scope: !11460)
!11467 = !DILocation(line: 217, column: 37, scope: !11460)
!11468 = !DILocation(line: 217, column: 2, scope: !11460)
!11469 = !DILocation(line: 218, column: 1, scope: !11460)
!11470 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1829, file: !1829, line: 227, type: !11449, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11471)
!11471 = !{!11472, !11473, !11474}
!11472 = !DILocalVariable(name: "dev", arg: 1, scope: !11470, file: !1829, line: 227, type: !1734)
!11473 = !DILocalVariable(name: "databits", arg: 2, scope: !11470, file: !1829, line: 228, type: !113)
!11474 = !DILocalVariable(name: "config", scope: !11470, file: !1829, line: 230, type: !11069)
!11475 = !DILocation(line: 0, scope: !11470)
!11476 = !DILocation(line: 230, column: 48, scope: !11470)
!11477 = !DILocation(line: 232, column: 32, scope: !11470)
!11478 = !DILocation(line: 232, column: 2, scope: !11470)
!11479 = !DILocation(line: 233, column: 1, scope: !11470)
!11480 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1829, file: !1829, line: 242, type: !11449, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11481)
!11481 = !{!11482, !11483, !11484}
!11482 = !DILocalVariable(name: "dev", arg: 1, scope: !11480, file: !1829, line: 242, type: !1734)
!11483 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11480, file: !1829, line: 243, type: !113)
!11484 = !DILocalVariable(name: "config", scope: !11480, file: !1829, line: 245, type: !11069)
!11485 = !DILocation(line: 0, scope: !11480)
!11486 = !DILocation(line: 245, column: 48, scope: !11480)
!11487 = !DILocation(line: 247, column: 33, scope: !11480)
!11488 = !DILocation(line: 247, column: 2, scope: !11480)
!11489 = !DILocation(line: 248, column: 1, scope: !11480)
!11490 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1829, file: !1829, line: 107, type: !11449, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11491)
!11491 = !{!11492, !11493, !11494, !11495, !11496}
!11492 = !DILocalVariable(name: "dev", arg: 1, scope: !11490, file: !1829, line: 107, type: !1734)
!11493 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11490, file: !1829, line: 107, type: !113)
!11494 = !DILocalVariable(name: "config", scope: !11490, file: !1829, line: 109, type: !11069)
!11495 = !DILocalVariable(name: "data", scope: !11490, file: !1829, line: 110, type: !11192)
!11496 = !DILocalVariable(name: "clock_rate", scope: !11490, file: !1829, line: 112, type: !113)
!11497 = !DILocation(line: 0, scope: !11490)
!11498 = !DILocation(line: 109, column: 48, scope: !11490)
!11499 = !DILocation(line: 110, column: 38, scope: !11490)
!11500 = !DILocation(line: 112, column: 2, scope: !11490)
!11501 = !DILocation(line: 123, column: 36, scope: !11502)
!11502 = distinct !DILexicalBlock(scope: !11503, file: !1829, line: 123, column: 7)
!11503 = distinct !DILexicalBlock(scope: !11504, file: !1829, line: 122, column: 9)
!11504 = distinct !DILexicalBlock(scope: !11490, file: !1829, line: 115, column: 6)
!11505 = !DILocation(line: 124, column: 42, scope: !11502)
!11506 = !DILocation(line: 123, column: 7, scope: !11502)
!11507 = !DILocation(line: 125, column: 22, scope: !11502)
!11508 = !DILocation(line: 123, column: 7, scope: !11503)
!11509 = !DILocation(line: 126, column: 4, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !11511, file: !1829, line: 126, column: 4)
!11511 = distinct !DILexicalBlock(scope: !11512, file: !1829, line: 126, column: 4)
!11512 = distinct !DILexicalBlock(scope: !11513, file: !1829, line: 126, column: 4)
!11513 = distinct !DILexicalBlock(scope: !11514, file: !1829, line: 126, column: 4)
!11514 = distinct !DILexicalBlock(scope: !11502, file: !1829, line: 125, column: 27)
!11515 = !DILocation(line: 127, column: 4, scope: !11514)
!11516 = !DILocation(line: 176, column: 36, scope: !11490)
!11517 = !DILocation(line: 176, column: 3, scope: !11490)
!11518 = !DILocation(line: 179, column: 32, scope: !11490)
!11519 = !DILocation(line: 180, column: 10, scope: !11490)
!11520 = !DILocation(line: 179, column: 3, scope: !11490)
!11521 = !DILocation(line: 195, column: 1, scope: !11490)
!11522 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !11378, file: !11378, line: 410, type: !11441, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11523)
!11523 = !{!11524}
!11524 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11522, file: !11378, line: 410, type: !1775)
!11525 = !DILocation(line: 0, scope: !11522)
!11526 = !DILocation(line: 412, column: 3, scope: !11522)
!11527 = !DILocation(line: 413, column: 1, scope: !11522)
!11528 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !1183, file: !1183, line: 216, type: !1808, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11529)
!11529 = !{!11530, !11531, !11532, !11533}
!11530 = !DILocalVariable(name: "dev", arg: 1, scope: !11528, file: !1183, line: 216, type: !1734)
!11531 = !DILocalVariable(name: "sys", arg: 2, scope: !11528, file: !1183, line: 217, type: !1275)
!11532 = !DILocalVariable(name: "rate", arg: 3, scope: !11528, file: !1183, line: 218, type: !1231)
!11533 = !DILocalVariable(name: "api", scope: !11528, file: !1183, line: 220, type: !1786)
!11534 = !DILocation(line: 0, scope: !11528)
!11535 = !DILocation(line: 221, column: 49, scope: !11528)
!11536 = !DILocation(line: 223, column: 11, scope: !11537)
!11537 = distinct !DILexicalBlock(scope: !11528, file: !1183, line: 223, column: 6)
!11538 = !DILocation(line: 223, column: 20, scope: !11537)
!11539 = !DILocation(line: 223, column: 6, scope: !11528)
!11540 = !DILocation(line: 227, column: 9, scope: !11528)
!11541 = !DILocation(line: 227, column: 2, scope: !11528)
!11542 = !DILocation(line: 228, column: 1, scope: !11528)
!11543 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3699, file: !3699, line: 175, type: !3700, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11544)
!11544 = !{!11545}
!11545 = !DILocalVariable(name: "level", arg: 1, scope: !11543, file: !3699, line: 175, type: !108)
!11546 = !DILocation(line: 0, scope: !11543)
!11547 = !DILocation(line: 177, column: 2, scope: !11543)
!11548 = !DILocation(line: 189, column: 1, scope: !11543)
!11549 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !11378, file: !11378, line: 615, type: !11550, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11552)
!11550 = !DISubroutineType(types: !11551)
!11551 = !{null, !1775, !113}
!11552 = !{!11553, !11554}
!11553 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11549, file: !11378, line: 615, type: !1775)
!11554 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11549, file: !11378, line: 615, type: !113)
!11555 = !DILocation(line: 0, scope: !11549)
!11556 = !DILocation(line: 617, column: 3, scope: !11549)
!11557 = !DILocation(line: 618, column: 1, scope: !11549)
!11558 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !11378, file: !11378, line: 1020, type: !11559, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11561)
!11559 = !DISubroutineType(types: !11560)
!11560 = !{null, !1775, !113, !113, !113}
!11561 = !{!11562, !11563, !11564, !11565}
!11562 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11558, file: !11378, line: 1020, type: !1775)
!11563 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11558, file: !11378, line: 1020, type: !113)
!11564 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11558, file: !11378, line: 1020, type: !113)
!11565 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11558, file: !11378, line: 1021, type: !113)
!11566 = !DILocation(line: 0, scope: !11558)
!11567 = !DILocation(line: 1029, column: 30, scope: !11568)
!11568 = distinct !DILexicalBlock(scope: !11569, file: !11378, line: 1028, column: 3)
!11569 = distinct !DILexicalBlock(scope: !11558, file: !11378, line: 1023, column: 7)
!11570 = !DILocation(line: 1029, column: 19, scope: !11568)
!11571 = !DILocation(line: 1029, column: 13, scope: !11568)
!11572 = !DILocation(line: 1029, column: 17, scope: !11568)
!11573 = !DILocation(line: 1031, column: 1, scope: !11558)
!11574 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !11378, file: !11378, line: 949, type: !11550, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11575)
!11575 = !{!11576, !11577}
!11576 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11574, file: !11378, line: 949, type: !1775)
!11577 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11574, file: !11378, line: 949, type: !113)
!11578 = !DILocation(line: 0, scope: !11574)
!11579 = !DILocation(line: 951, column: 3, scope: !11574)
!11580 = !DILocation(line: 952, column: 1, scope: !11574)
!11581 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !11378, file: !11378, line: 588, type: !11550, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11582)
!11582 = !{!11583, !11584}
!11583 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11581, file: !11378, line: 588, type: !1775)
!11584 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11581, file: !11378, line: 588, type: !113)
!11585 = !DILocation(line: 0, scope: !11581)
!11586 = !DILocation(line: 590, column: 3, scope: !11581)
!11587 = !DILocation(line: 591, column: 1, scope: !11581)
!11588 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !11378, file: !11378, line: 805, type: !11550, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11589)
!11589 = !{!11590, !11591}
!11590 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11588, file: !11378, line: 805, type: !1775)
!11591 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11588, file: !11378, line: 805, type: !113)
!11592 = !DILocation(line: 0, scope: !11588)
!11593 = !DILocation(line: 807, column: 3, scope: !11588)
!11594 = !DILocation(line: 808, column: 1, scope: !11588)
!11595 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !11378, file: !11378, line: 532, type: !11550, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11596)
!11596 = !{!11597, !11598}
!11597 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11595, file: !11378, line: 532, type: !1775)
!11598 = !DILocalVariable(name: "Parity", arg: 2, scope: !11595, file: !11378, line: 532, type: !113)
!11599 = !DILocation(line: 0, scope: !11595)
!11600 = !DILocation(line: 534, column: 3, scope: !11595)
!11601 = !DILocation(line: 535, column: 1, scope: !11595)
!11602 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !11378, file: !11378, line: 1770, type: !11379, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11603)
!11603 = !{!11604}
!11604 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11602, file: !11378, line: 1770, type: !1775)
!11605 = !DILocation(line: 0, scope: !11602)
!11606 = !DILocation(line: 1772, column: 11, scope: !11602)
!11607 = !DILocation(line: 1772, column: 46, scope: !11602)
!11608 = !DILocation(line: 1772, column: 3, scope: !11602)
!11609 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !11378, file: !11378, line: 1737, type: !11379, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11610)
!11610 = !{!11611}
!11611 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11609, file: !11378, line: 1737, type: !1775)
!11612 = !DILocation(line: 0, scope: !11609)
!11613 = !DILocation(line: 1739, column: 11, scope: !11609)
!11614 = !DILocation(line: 1739, column: 3, scope: !11609)
!11615 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !11378, file: !11378, line: 1748, type: !11379, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11616)
!11616 = !{!11617}
!11617 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11615, file: !11378, line: 1748, type: !1775)
!11618 = !DILocation(line: 0, scope: !11615)
!11619 = !DILocation(line: 1750, column: 11, scope: !11615)
!11620 = !DILocation(line: 1750, column: 45, scope: !11615)
!11621 = !DILocation(line: 1750, column: 3, scope: !11615)
!11622 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !11378, file: !11378, line: 1827, type: !11379, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11623)
!11623 = !{!11624}
!11624 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11622, file: !11378, line: 1827, type: !1775)
!11625 = !DILocation(line: 0, scope: !11622)
!11626 = !DILocation(line: 1829, column: 11, scope: !11622)
!11627 = !DILocation(line: 1829, column: 46, scope: !11622)
!11628 = !DILocation(line: 1829, column: 3, scope: !11622)
!11629 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !11378, file: !11378, line: 1992, type: !11441, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11630)
!11630 = !{!11631}
!11631 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11629, file: !11378, line: 1992, type: !1775)
!11632 = !DILocation(line: 0, scope: !11629)
!11633 = !DILocation(line: 1994, column: 3, scope: !11629)
!11634 = !DILocation(line: 1995, column: 1, scope: !11629)
!11635 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !11378, file: !11378, line: 1934, type: !11441, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11636)
!11636 = !{!11637, !11638}
!11637 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11635, file: !11378, line: 1934, type: !1775)
!11638 = !DILocalVariable(name: "tmpreg", scope: !11635, file: !11378, line: 1936, type: !572)
!11639 = !DILocation(line: 0, scope: !11635)
!11640 = !DILocation(line: 1936, column: 3, scope: !11635)
!11641 = !DILocation(line: 1936, column: 17, scope: !11635)
!11642 = !DILocation(line: 1937, column: 20, scope: !11635)
!11643 = !DILocation(line: 1937, column: 10, scope: !11635)
!11644 = !DILocation(line: 1938, column: 10, scope: !11635)
!11645 = !DILocation(line: 1939, column: 20, scope: !11635)
!11646 = !DILocation(line: 1939, column: 10, scope: !11635)
!11647 = !DILocation(line: 1940, column: 10, scope: !11635)
!11648 = !DILocation(line: 1941, column: 1, scope: !11635)
!11649 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !11378, file: !11378, line: 1877, type: !11441, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11650)
!11650 = !{!11651, !11652}
!11651 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11649, file: !11378, line: 1877, type: !1775)
!11652 = !DILocalVariable(name: "tmpreg", scope: !11649, file: !11378, line: 1879, type: !572)
!11653 = !DILocation(line: 0, scope: !11649)
!11654 = !DILocation(line: 1879, column: 3, scope: !11649)
!11655 = !DILocation(line: 1879, column: 17, scope: !11649)
!11656 = !DILocation(line: 1880, column: 20, scope: !11649)
!11657 = !DILocation(line: 1880, column: 10, scope: !11649)
!11658 = !DILocation(line: 1881, column: 10, scope: !11649)
!11659 = !DILocation(line: 1882, column: 20, scope: !11649)
!11660 = !DILocation(line: 1882, column: 10, scope: !11649)
!11661 = !DILocation(line: 1883, column: 10, scope: !11649)
!11662 = !DILocation(line: 1884, column: 1, scope: !11649)
!11663 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !11378, file: !11378, line: 1896, type: !11441, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11664)
!11664 = !{!11665, !11666}
!11665 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11663, file: !11378, line: 1896, type: !1775)
!11666 = !DILocalVariable(name: "tmpreg", scope: !11663, file: !11378, line: 1898, type: !572)
!11667 = !DILocation(line: 0, scope: !11663)
!11668 = !DILocation(line: 1898, column: 3, scope: !11663)
!11669 = !DILocation(line: 1898, column: 17, scope: !11663)
!11670 = !DILocation(line: 1899, column: 20, scope: !11663)
!11671 = !DILocation(line: 1899, column: 10, scope: !11663)
!11672 = !DILocation(line: 1900, column: 10, scope: !11663)
!11673 = !DILocation(line: 1901, column: 20, scope: !11663)
!11674 = !DILocation(line: 1901, column: 10, scope: !11663)
!11675 = !DILocation(line: 1902, column: 10, scope: !11663)
!11676 = !DILocation(line: 1903, column: 1, scope: !11663)
!11677 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !11378, file: !11378, line: 1915, type: !11441, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11678)
!11678 = !{!11679, !11680}
!11679 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11677, file: !11378, line: 1915, type: !1775)
!11680 = !DILocalVariable(name: "tmpreg", scope: !11677, file: !11378, line: 1917, type: !572)
!11681 = !DILocation(line: 0, scope: !11677)
!11682 = !DILocation(line: 1917, column: 3, scope: !11677)
!11683 = !DILocation(line: 1917, column: 17, scope: !11677)
!11684 = !DILocation(line: 1918, column: 20, scope: !11677)
!11685 = !DILocation(line: 1918, column: 10, scope: !11677)
!11686 = !DILocation(line: 1919, column: 10, scope: !11677)
!11687 = !DILocation(line: 1920, column: 20, scope: !11677)
!11688 = !DILocation(line: 1920, column: 10, scope: !11677)
!11689 = !DILocation(line: 1921, column: 10, scope: !11677)
!11690 = !DILocation(line: 1922, column: 1, scope: !11677)
!11691 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !11378, file: !11378, line: 1814, type: !11379, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11692)
!11692 = !{!11693}
!11693 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11691, file: !11378, line: 1814, type: !1775)
!11694 = !DILocation(line: 0, scope: !11691)
!11695 = !DILocation(line: 1816, column: 11, scope: !11691)
!11696 = !DILocation(line: 1816, column: 46, scope: !11691)
!11697 = !DILocation(line: 1816, column: 3, scope: !11691)
!11698 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !11378, file: !11378, line: 2426, type: !11699, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11701)
!11699 = !DISubroutineType(types: !11700)
!11700 = !{null, !1775, !164}
!11701 = !{!11702, !11703}
!11702 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11698, file: !11378, line: 2426, type: !1775)
!11703 = !DILocalVariable(name: "Value", arg: 2, scope: !11698, file: !11378, line: 2426, type: !164)
!11704 = !DILocation(line: 0, scope: !11698)
!11705 = !DILocation(line: 2428, column: 16, scope: !11698)
!11706 = !DILocation(line: 2428, column: 11, scope: !11698)
!11707 = !DILocation(line: 2428, column: 14, scope: !11698)
!11708 = !DILocation(line: 2429, column: 1, scope: !11698)
!11709 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !11378, file: !11378, line: 1792, type: !11379, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11710)
!11710 = !{!11711}
!11711 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11709, file: !11378, line: 1792, type: !1775)
!11712 = !DILocation(line: 0, scope: !11709)
!11713 = !DILocation(line: 1794, column: 11, scope: !11709)
!11714 = !DILocation(line: 1794, column: 47, scope: !11709)
!11715 = !DILocation(line: 1794, column: 3, scope: !11709)
!11716 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !11378, file: !11378, line: 2403, type: !11717, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11719)
!11717 = !DISubroutineType(types: !11718)
!11718 = !{!164, !1775}
!11719 = !{!11720}
!11720 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11716, file: !11378, line: 2403, type: !1775)
!11721 = !DILocation(line: 0, scope: !11716)
!11722 = !DILocation(line: 2405, column: 20, scope: !11716)
!11723 = !DILocation(line: 2405, column: 10, scope: !11716)
!11724 = !DILocation(line: 2405, column: 3, scope: !11716)
!11725 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1829, file: !1829, line: 1583, type: !1755, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11726)
!11726 = !{!11727, !11728, !11729, !11730, !11731, !11732}
!11727 = !DILocalVariable(name: "dev", arg: 1, scope: !11725, file: !1829, line: 1583, type: !1734)
!11728 = !DILocalVariable(name: "config", scope: !11725, file: !1829, line: 1585, type: !11069)
!11729 = !DILocalVariable(name: "data", scope: !11725, file: !1829, line: 1586, type: !11192)
!11730 = !DILocalVariable(name: "ll_parity", scope: !11725, file: !1829, line: 1587, type: !113)
!11731 = !DILocalVariable(name: "ll_datawidth", scope: !11725, file: !1829, line: 1588, type: !113)
!11732 = !DILocalVariable(name: "err", scope: !11725, file: !1829, line: 1589, type: !108)
!11733 = !DILocation(line: 0, scope: !11725)
!11734 = !DILocation(line: 1585, column: 48, scope: !11725)
!11735 = !DILocation(line: 1586, column: 38, scope: !11725)
!11736 = !DILocation(line: 1591, column: 2, scope: !11725)
!11737 = !DILocation(line: 1593, column: 29, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11725, file: !1829, line: 1593, column: 6)
!11739 = !DILocation(line: 1593, column: 7, scope: !11738)
!11740 = !DILocation(line: 1593, column: 6, scope: !11725)
!11741 = !DILocation(line: 1594, column: 3, scope: !11742)
!11742 = distinct !DILexicalBlock(scope: !11743, file: !1829, line: 1594, column: 3)
!11743 = distinct !DILexicalBlock(scope: !11744, file: !1829, line: 1594, column: 3)
!11744 = distinct !DILexicalBlock(scope: !11745, file: !1829, line: 1594, column: 3)
!11745 = distinct !DILexicalBlock(scope: !11746, file: !1829, line: 1594, column: 3)
!11746 = distinct !DILexicalBlock(scope: !11738, file: !1829, line: 1593, column: 37)
!11747 = !DILocation(line: 1595, column: 3, scope: !11746)
!11748 = !DILocation(line: 1599, column: 31, scope: !11725)
!11749 = !DILocation(line: 1599, column: 71, scope: !11725)
!11750 = !DILocation(line: 1599, column: 8, scope: !11725)
!11751 = !DILocation(line: 1600, column: 10, scope: !11752)
!11752 = distinct !DILexicalBlock(scope: !11725, file: !1829, line: 1600, column: 6)
!11753 = !DILocation(line: 1600, column: 6, scope: !11725)
!11754 = !DILocation(line: 1601, column: 3, scope: !11755)
!11755 = distinct !DILexicalBlock(scope: !11756, file: !1829, line: 1601, column: 3)
!11756 = distinct !DILexicalBlock(scope: !11757, file: !1829, line: 1601, column: 3)
!11757 = distinct !DILexicalBlock(scope: !11758, file: !1829, line: 1601, column: 3)
!11758 = distinct !DILexicalBlock(scope: !11759, file: !1829, line: 1601, column: 3)
!11759 = distinct !DILexicalBlock(scope: !11752, file: !1829, line: 1600, column: 16)
!11760 = !DILocation(line: 1602, column: 3, scope: !11759)
!11761 = !DILocation(line: 1616, column: 36, scope: !11725)
!11762 = !DILocation(line: 1616, column: 8, scope: !11725)
!11763 = !DILocation(line: 1617, column: 10, scope: !11764)
!11764 = distinct !DILexicalBlock(scope: !11725, file: !1829, line: 1617, column: 6)
!11765 = !DILocation(line: 1617, column: 6, scope: !11725)
!11766 = !DILocation(line: 1621, column: 27, scope: !11725)
!11767 = !DILocation(line: 1621, column: 2, scope: !11725)
!11768 = !DILocation(line: 1624, column: 40, scope: !11725)
!11769 = !DILocation(line: 1624, column: 2, scope: !11725)
!11770 = !DILocation(line: 1630, column: 14, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11725, file: !1829, line: 1630, column: 6)
!11772 = !DILocation(line: 1630, column: 6, scope: !11725)
!11773 = !DILocation(line: 1640, column: 4, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11775, file: !1829, line: 1640, column: 4)
!11775 = distinct !DILexicalBlock(scope: !11776, file: !1829, line: 1640, column: 4)
!11776 = distinct !DILexicalBlock(scope: !11777, file: !1829, line: 1640, column: 4)
!11777 = distinct !DILexicalBlock(scope: !11778, file: !1829, line: 1640, column: 4)
!11778 = distinct !DILexicalBlock(scope: !11779, file: !1829, line: 1639, column: 28)
!11779 = distinct !DILexicalBlock(scope: !11780, file: !1829, line: 1639, column: 7)
!11780 = distinct !DILexicalBlock(scope: !11781, file: !1829, line: 1638, column: 9)
!11781 = distinct !DILexicalBlock(scope: !11771, file: !1829, line: 1634, column: 13)
!11782 = !DILocation(line: 0, scope: !11771)
!11783 = !DILocation(line: 1649, column: 35, scope: !11725)
!11784 = !DILocation(line: 1649, column: 2, scope: !11725)
!11785 = !DILocation(line: 1654, column: 14, scope: !11786)
!11786 = distinct !DILexicalBlock(scope: !11725, file: !1829, line: 1654, column: 6)
!11787 = !DILocation(line: 1654, column: 6, scope: !11725)
!11788 = !DILocation(line: 1655, column: 3, scope: !11789)
!11789 = distinct !DILexicalBlock(scope: !11786, file: !1829, line: 1654, column: 31)
!11790 = !DILocation(line: 1656, column: 2, scope: !11789)
!11791 = !DILocation(line: 1659, column: 37, scope: !11725)
!11792 = !DILocation(line: 1659, column: 2, scope: !11725)
!11793 = !DILocation(line: 1662, column: 14, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11725, file: !1829, line: 1662, column: 6)
!11795 = !DILocation(line: 1662, column: 6, scope: !11725)
!11796 = !DILocation(line: 1663, column: 37, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11794, file: !1829, line: 1662, column: 27)
!11798 = !DILocation(line: 1663, column: 3, scope: !11797)
!11799 = !DILocation(line: 1664, column: 2, scope: !11797)
!11800 = !DILocation(line: 1684, column: 26, scope: !11725)
!11801 = !DILocation(line: 1684, column: 2, scope: !11725)
!11802 = !DILocation(line: 1722, column: 2, scope: !11725)
!11803 = !DILocation(line: 1724, column: 1, scope: !11725)
!11804 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1829, file: !1829, line: 651, type: !11805, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11807)
!11805 = !DISubroutineType(types: !11806)
!11806 = !{null, !1734}
!11807 = !{!11808, !11809, !11810}
!11808 = !DILocalVariable(name: "dev", arg: 1, scope: !11804, file: !1829, line: 651, type: !1734)
!11809 = !DILocalVariable(name: "data", scope: !11804, file: !1829, line: 653, type: !11192)
!11810 = !DILocalVariable(name: "clk", scope: !11804, file: !1829, line: 654, type: !11811)
!11811 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1734)
!11812 = !DILocation(line: 0, scope: !11804)
!11813 = !DILocation(line: 653, column: 38, scope: !11804)
!11814 = !DILocation(line: 656, column: 8, scope: !11804)
!11815 = !DILocation(line: 656, column: 14, scope: !11804)
!11816 = !DILocation(line: 657, column: 1, scope: !11804)
!11817 = distinct !DISubprogram(name: "device_is_ready", scope: !10207, file: !10207, line: 47, type: !11818, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11820)
!11818 = !DISubroutineType(types: !11819)
!11819 = !{!422, !1734}
!11820 = !{!11821}
!11821 = !DILocalVariable(name: "dev", arg: 1, scope: !11817, file: !10207, line: 47, type: !1734)
!11822 = !DILocation(line: 0, scope: !11817)
!11823 = !DILocation(line: 55, column: 2, scope: !11824)
!11824 = distinct !DILexicalBlock(scope: !11817, file: !10207, line: 55, column: 2)
!11825 = !{i64 2155144356}
!11826 = !DILocation(line: 56, column: 9, scope: !11817)
!11827 = !DILocation(line: 56, column: 2, scope: !11817)
!11828 = distinct !DISubprogram(name: "clock_control_on", scope: !1183, file: !1183, line: 123, type: !1793, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11829)
!11829 = !{!11830, !11831, !11832}
!11830 = !DILocalVariable(name: "dev", arg: 1, scope: !11828, file: !1183, line: 123, type: !1734)
!11831 = !DILocalVariable(name: "sys", arg: 2, scope: !11828, file: !1183, line: 124, type: !1275)
!11832 = !DILocalVariable(name: "api", scope: !11828, file: !1183, line: 126, type: !1786)
!11833 = !DILocation(line: 0, scope: !11828)
!11834 = !DILocation(line: 127, column: 49, scope: !11828)
!11835 = !DILocation(line: 129, column: 14, scope: !11828)
!11836 = !DILocation(line: 129, column: 9, scope: !11828)
!11837 = !DILocation(line: 129, column: 2, scope: !11828)
!11838 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1867, file: !1867, line: 342, type: !11839, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11841)
!11839 = !DISubroutineType(types: !11840)
!11840 = !{!108, !1864, !164}
!11841 = !{!11842, !11843, !11844, !11845}
!11842 = !DILocalVariable(name: "config", arg: 1, scope: !11838, file: !1867, line: 342, type: !1864)
!11843 = !DILocalVariable(name: "id", arg: 2, scope: !11838, file: !1867, line: 343, type: !164)
!11844 = !DILocalVariable(name: "ret", scope: !11838, file: !1867, line: 345, type: !108)
!11845 = !DILocalVariable(name: "state", scope: !11838, file: !1867, line: 346, type: !1870)
!11846 = !DILocation(line: 0, scope: !11838)
!11847 = !DILocation(line: 346, column: 2, scope: !11838)
!11848 = !DILocation(line: 348, column: 8, scope: !11838)
!11849 = !DILocation(line: 349, column: 10, scope: !11850)
!11850 = distinct !DILexicalBlock(scope: !11838, file: !1867, line: 349, column: 6)
!11851 = !DILocation(line: 349, column: 6, scope: !11838)
!11852 = !DILocation(line: 353, column: 44, scope: !11838)
!11853 = !DILocation(line: 353, column: 9, scope: !11838)
!11854 = !DILocation(line: 353, column: 2, scope: !11838)
!11855 = !DILocation(line: 354, column: 1, scope: !11838)
!11856 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !11378, file: !11378, line: 497, type: !11550, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11857)
!11857 = !{!11858, !11859, !11860}
!11858 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11856, file: !11378, line: 497, type: !1775)
!11859 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11856, file: !11378, line: 497, type: !113)
!11860 = !DILocalVariable(name: "val", scope: !11861, file: !11378, line: 499, type: !113)
!11861 = distinct !DILexicalBlock(scope: !11856, file: !11378, line: 499, column: 3)
!11862 = !DILocation(line: 0, scope: !11856)
!11863 = !DILocation(line: 499, column: 3, scope: !11861)
!11864 = !DILocalVariable(name: "addr", arg: 1, scope: !11865, file: !7063, line: 476, type: !1825)
!11865 = distinct !DISubprogram(name: "__LDREXW", scope: !7063, file: !7063, line: 476, type: !11866, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11868)
!11866 = !DISubroutineType(types: !11867)
!11867 = !{!113, !1825}
!11868 = !{!11864, !11869}
!11869 = !DILocalVariable(name: "result", scope: !11865, file: !7063, line: 478, type: !113)
!11870 = !DILocation(line: 0, scope: !11865, inlinedAt: !11871)
!11871 = distinct !DILocation(line: 499, column: 3, scope: !11872)
!11872 = distinct !DILexicalBlock(scope: !11861, file: !11378, line: 499, column: 3)
!11873 = !DILocation(line: 480, column: 4, scope: !11865, inlinedAt: !11871)
!11874 = !{i64 3590791}
!11875 = !DILocation(line: 499, column: 3, scope: !11872)
!11876 = !DILocation(line: 0, scope: !11861)
!11877 = !DILocalVariable(name: "value", arg: 1, scope: !11878, file: !7063, line: 527, type: !113)
!11878 = distinct !DISubprogram(name: "__STREXW", scope: !7063, file: !7063, line: 527, type: !11879, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11881)
!11879 = !DISubroutineType(types: !11880)
!11880 = !{!113, !113, !1825}
!11881 = !{!11877, !11882, !11883}
!11882 = !DILocalVariable(name: "addr", arg: 2, scope: !11878, file: !7063, line: 527, type: !1825)
!11883 = !DILocalVariable(name: "result", scope: !11878, file: !7063, line: 529, type: !113)
!11884 = !DILocation(line: 0, scope: !11878, inlinedAt: !11885)
!11885 = distinct !DILocation(line: 499, column: 3, scope: !11861)
!11886 = !DILocation(line: 531, column: 4, scope: !11878, inlinedAt: !11885)
!11887 = !{i64 3592227}
!11888 = distinct !{!11888, !11863, !11863}
!11889 = !DILocation(line: 500, column: 1, scope: !11856)
!11890 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !11378, file: !11378, line: 850, type: !11559, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11891)
!11891 = !{!11892, !11893, !11894, !11895}
!11892 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11890, file: !11378, line: 850, type: !1775)
!11893 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11890, file: !11378, line: 850, type: !113)
!11894 = !DILocalVariable(name: "Parity", arg: 3, scope: !11890, file: !11378, line: 850, type: !113)
!11895 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11890, file: !11378, line: 851, type: !113)
!11896 = !DILocation(line: 0, scope: !11890)
!11897 = !DILocation(line: 853, column: 3, scope: !11890)
!11898 = !DILocation(line: 854, column: 3, scope: !11890)
!11899 = !DILocation(line: 855, column: 1, scope: !11890)
!11900 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !11378, file: !11378, line: 1337, type: !11441, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11901)
!11901 = !{!11902}
!11902 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11900, file: !11378, line: 1337, type: !1775)
!11903 = !DILocation(line: 0, scope: !11900)
!11904 = !DILocation(line: 1339, column: 3, scope: !11900)
!11905 = !DILocation(line: 1340, column: 1, scope: !11900)
!11906 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1867, file: !1867, line: 316, type: !11907, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11909)
!11907 = !DISubroutineType(types: !11908)
!11908 = !{!108, !1864, !1870}
!11909 = !{!11910, !11911, !11912}
!11910 = !DILocalVariable(name: "config", arg: 1, scope: !11906, file: !1867, line: 317, type: !1864)
!11911 = !DILocalVariable(name: "state", arg: 2, scope: !11906, file: !1867, line: 318, type: !1870)
!11912 = !DILocalVariable(name: "reg", scope: !11906, file: !1867, line: 320, type: !22)
!11913 = !DILocation(line: 0, scope: !11906)
!11914 = !DILocation(line: 329, column: 39, scope: !11906)
!11915 = !DILocation(line: 329, column: 52, scope: !11906)
!11916 = !DILocation(line: 329, column: 9, scope: !11906)
!11917 = !DILocation(line: 329, column: 2, scope: !11906)
!11918 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !11818, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11919)
!11919 = !{!11920}
!11920 = !DILocalVariable(name: "dev", arg: 1, scope: !11918, file: !411, line: 730, type: !1734)
!11921 = !DILocation(line: 0, scope: !11918)
!11922 = !DILocation(line: 732, column: 9, scope: !11918)
!11923 = !DILocation(line: 732, column: 2, scope: !11918)
!11924 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1990, file: !1990, line: 270, type: !1996, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1912, retainedNodes: !11925)
!11925 = !{!11926}
!11926 = !DILocalVariable(name: "dev", arg: 1, scope: !11924, file: !1990, line: 270, type: !1998)
!11927 = !DILocation(line: 0, scope: !11924)
!11928 = !DILocation(line: 274, column: 2, scope: !11924)
!11929 = !DILocation(line: 275, column: 12, scope: !11924)
!11930 = !DILocation(line: 276, column: 15, scope: !11924)
!11931 = !DILocation(line: 277, column: 16, scope: !11924)
!11932 = !DILocation(line: 278, column: 15, scope: !11924)
!11933 = !DILocation(line: 279, column: 16, scope: !11924)
!11934 = !DILocation(line: 282, column: 2, scope: !11924)
!11935 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !790, file: !790, line: 1814, type: !7097, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1912, retainedNodes: !11936)
!11936 = !{!11937, !11938}
!11937 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11935, file: !790, line: 1814, type: !1171)
!11938 = !DILocalVariable(name: "priority", arg: 2, scope: !11935, file: !790, line: 1814, type: !113)
!11939 = !DILocation(line: 0, scope: !11935)
!11940 = !DILocation(line: 1822, column: 46, scope: !11941)
!11941 = distinct !DILexicalBlock(scope: !11942, file: !790, line: 1821, column: 3)
!11942 = distinct !DILexicalBlock(scope: !11935, file: !790, line: 1816, column: 7)
!11943 = !DILocation(line: 1824, column: 1, scope: !11935)
!11944 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1990, file: !1990, line: 118, type: !7000, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1912, retainedNodes: !11945)
!11945 = !{!11946, !11947}
!11946 = !DILocalVariable(name: "arg", arg: 1, scope: !11944, file: !1990, line: 118, type: !104)
!11947 = !DILocalVariable(name: "dticks", scope: !11944, file: !1990, line: 121, type: !113)
!11948 = !DILocation(line: 0, scope: !11944)
!11949 = !DILocation(line: 124, column: 2, scope: !11944)
!11950 = !DILocation(line: 129, column: 17, scope: !11944)
!11951 = !DILocation(line: 129, column: 14, scope: !11944)
!11952 = !DILocation(line: 130, column: 15, scope: !11944)
!11953 = !DILocation(line: 145, column: 27, scope: !11954)
!11954 = distinct !DILexicalBlock(scope: !11955, file: !1990, line: 132, column: 16)
!11955 = distinct !DILexicalBlock(scope: !11944, file: !1990, line: 132, column: 6)
!11956 = !DILocation(line: 145, column: 25, scope: !11954)
!11957 = !DILocation(line: 145, column: 45, scope: !11954)
!11958 = !DILocation(line: 146, column: 30, scope: !11954)
!11959 = !DILocation(line: 146, column: 20, scope: !11954)
!11960 = !DILocation(line: 147, column: 3, scope: !11954)
!11961 = !DILocation(line: 151, column: 2, scope: !11944)
!11962 = !DILocation(line: 152, column: 1, scope: !11944)
!11963 = distinct !DISubprogram(name: "elapsed", scope: !1990, file: !1990, line: 85, type: !7144, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1912, retainedNodes: !11964)
!11964 = !{!11965, !11966, !11967}
!11965 = !DILocalVariable(name: "val1", scope: !11963, file: !1990, line: 87, type: !113)
!11966 = !DILocalVariable(name: "ctrl", scope: !11963, file: !1990, line: 88, type: !113)
!11967 = !DILocalVariable(name: "val2", scope: !11963, file: !1990, line: 89, type: !113)
!11968 = !DILocation(line: 87, column: 27, scope: !11963)
!11969 = !DILocation(line: 0, scope: !11963)
!11970 = !DILocation(line: 88, column: 27, scope: !11963)
!11971 = !DILocation(line: 89, column: 27, scope: !11963)
!11972 = !DILocation(line: 105, column: 12, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11963, file: !1990, line: 105, column: 6)
!11974 = !DILocation(line: 106, column: 6, scope: !11973)
!11975 = !DILocation(line: 107, column: 16, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11973, file: !1990, line: 106, column: 24)
!11977 = !DILocation(line: 111, column: 18, scope: !11976)
!11978 = !DILocation(line: 112, column: 2, scope: !11976)
!11979 = !DILocation(line: 114, column: 20, scope: !11963)
!11980 = !DILocation(line: 114, column: 30, scope: !11963)
!11981 = !DILocation(line: 114, column: 28, scope: !11963)
!11982 = !DILocation(line: 114, column: 2, scope: !11963)
!11983 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1990, file: !1990, line: 154, type: !11984, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1912, retainedNodes: !11986)
!11984 = !DISubroutineType(types: !11985)
!11985 = !{null, !220, !422}
!11986 = !{!11987, !11988, !11989, !11990, !11991, !11992, !11993, !11998, !11999}
!11987 = !DILocalVariable(name: "ticks", arg: 1, scope: !11983, file: !1990, line: 154, type: !220)
!11988 = !DILocalVariable(name: "idle", arg: 2, scope: !11983, file: !1990, line: 154, type: !422)
!11989 = !DILocalVariable(name: "delay", scope: !11983, file: !1990, line: 169, type: !113)
!11990 = !DILocalVariable(name: "val1", scope: !11983, file: !1990, line: 170, type: !113)
!11991 = !DILocalVariable(name: "val2", scope: !11983, file: !1990, line: 170, type: !113)
!11992 = !DILocalVariable(name: "last_load_", scope: !11983, file: !1990, line: 171, type: !113)
!11993 = !DILocalVariable(name: "key", scope: !11983, file: !1990, line: 176, type: !11994)
!11994 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !11995)
!11995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !11996)
!11996 = !{!11997}
!11997 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11995, file: !436, line: 33, baseType: !108, size: 32)
!11998 = !DILocalVariable(name: "pending", scope: !11983, file: !1990, line: 178, type: !113)
!11999 = !DILocalVariable(name: "unannounced", scope: !11983, file: !1990, line: 185, type: !113)
!12000 = !DILocation(line: 0, scope: !11983)
!12001 = !DILocation(line: 162, column: 49, scope: !12002)
!12002 = distinct !DILexicalBlock(scope: !11983, file: !1990, line: 162, column: 6)
!12003 = !DILocation(line: 163, column: 17, scope: !12004)
!12004 = distinct !DILexicalBlock(scope: !12002, file: !1990, line: 162, column: 78)
!12005 = !DILocation(line: 164, column: 13, scope: !12004)
!12006 = !DILocation(line: 165, column: 3, scope: !12004)
!12007 = !DILocation(line: 171, column: 24, scope: !11983)
!12008 = !DILocation(line: 173, column: 10, scope: !11983)
!12009 = !DILocation(line: 174, column: 10, scope: !11983)
!12010 = !DILocalVariable(name: "l", arg: 1, scope: !12011, file: !436, line: 136, type: !12014)
!12011 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !12012, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1912, retainedNodes: !12015)
!12012 = !DISubroutineType(types: !12013)
!12013 = !{!11994, !12014}
!12014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 32)
!12015 = !{!12010, !12016}
!12016 = !DILocalVariable(name: "k", scope: !12011, file: !436, line: 139, type: !11994)
!12017 = !DILocation(line: 0, scope: !12011, inlinedAt: !12018)
!12018 = distinct !DILocation(line: 176, column: 25, scope: !11983)
!12019 = !DILocation(line: 55, column: 2, scope: !12020, inlinedAt: !12024)
!12020 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4087, file: !4087, line: 42, type: !4088, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1912, retainedNodes: !12021)
!12021 = !{!12022, !12023}
!12022 = !DILocalVariable(name: "key", scope: !12020, file: !4087, line: 44, type: !32)
!12023 = !DILocalVariable(name: "tmp", scope: !12020, file: !4087, line: 53, type: !32)
!12024 = distinct !DILocation(line: 145, column: 10, scope: !12011, inlinedAt: !12018)
!12025 = !{i64 2214278}
!12026 = !DILocation(line: 0, scope: !12020, inlinedAt: !12024)
!12027 = !DILocation(line: 178, column: 21, scope: !11983)
!12028 = !DILocation(line: 180, column: 18, scope: !11983)
!12029 = !DILocation(line: 182, column: 14, scope: !11983)
!12030 = !DILocation(line: 183, column: 15, scope: !11983)
!12031 = !DILocation(line: 185, column: 39, scope: !11983)
!12032 = !DILocation(line: 185, column: 37, scope: !11983)
!12033 = !DILocation(line: 187, column: 27, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !11983, file: !1990, line: 187, column: 6)
!12035 = !DILocation(line: 187, column: 6, scope: !11983)
!12036 = !DILocation(line: 202, column: 27, scope: !12037)
!12037 = distinct !DILexicalBlock(scope: !12034, file: !1990, line: 195, column: 9)
!12038 = !DILocation(line: 202, column: 48, scope: !12037)
!12039 = !DILocation(line: 203, column: 9, scope: !12037)
!12040 = !DILocation(line: 204, column: 11, scope: !12037)
!12041 = !DILocation(line: 205, column: 13, scope: !12042)
!12042 = distinct !DILexicalBlock(scope: !12037, file: !1990, line: 205, column: 7)
!12043 = !DILocation(line: 205, column: 7, scope: !12037)
!12044 = !DILocation(line: 0, scope: !12034)
!12045 = !DILocation(line: 212, column: 18, scope: !11983)
!12046 = !DILocation(line: 214, column: 28, scope: !11983)
!12047 = !DILocation(line: 214, column: 16, scope: !11983)
!12048 = !DILocation(line: 215, column: 15, scope: !11983)
!12049 = !DILocation(line: 227, column: 11, scope: !12050)
!12050 = distinct !DILexicalBlock(scope: !11983, file: !1990, line: 227, column: 6)
!12051 = !DILocation(line: 227, column: 6, scope: !11983)
!12052 = !DILocation(line: 228, column: 15, scope: !12053)
!12053 = distinct !DILexicalBlock(scope: !12050, file: !1990, line: 227, column: 19)
!12054 = !DILocation(line: 228, column: 38, scope: !12053)
!12055 = !DILocation(line: 228, column: 24, scope: !12053)
!12056 = !DILocation(line: 229, column: 2, scope: !12053)
!12057 = !DILocation(line: 230, column: 24, scope: !12058)
!12058 = distinct !DILexicalBlock(scope: !12050, file: !1990, line: 229, column: 9)
!12059 = !DILocation(line: 230, column: 15, scope: !12058)
!12060 = !DILocation(line: 0, scope: !12050)
!12061 = !DILocalVariable(name: "key", arg: 2, scope: !12062, file: !436, line: 190, type: !11994)
!12062 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !12063, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1912, retainedNodes: !12065)
!12063 = !DISubroutineType(types: !12064)
!12064 = !{null, !12014, !11994}
!12065 = !{!12066, !12061}
!12066 = !DILocalVariable(name: "l", arg: 1, scope: !12062, file: !436, line: 189, type: !12014)
!12067 = !DILocation(line: 0, scope: !12062, inlinedAt: !12068)
!12068 = distinct !DILocation(line: 232, column: 2, scope: !11983)
!12069 = !DILocalVariable(name: "key", arg: 1, scope: !12070, file: !4087, line: 84, type: !32)
!12070 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4087, file: !4087, line: 84, type: !4100, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1912, retainedNodes: !12071)
!12071 = !{!12069}
!12072 = !DILocation(line: 0, scope: !12070, inlinedAt: !12073)
!12073 = distinct !DILocation(line: 215, column: 2, scope: !12062, inlinedAt: !12068)
!12074 = !DILocation(line: 95, column: 2, scope: !12070, inlinedAt: !12073)
!12075 = !{i64 2215095}
!12076 = !DILocation(line: 234, column: 1, scope: !11983)
!12077 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1990, file: !1990, line: 236, type: !7144, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1912, retainedNodes: !12078)
!12078 = !{!12079, !12080}
!12079 = !DILocalVariable(name: "key", scope: !12077, file: !1990, line: 242, type: !11994)
!12080 = !DILocalVariable(name: "cyc", scope: !12077, file: !1990, line: 243, type: !113)
!12081 = !DILocation(line: 0, scope: !12011, inlinedAt: !12082)
!12082 = distinct !DILocation(line: 242, column: 25, scope: !12077)
!12083 = !DILocation(line: 55, column: 2, scope: !12020, inlinedAt: !12084)
!12084 = distinct !DILocation(line: 145, column: 10, scope: !12011, inlinedAt: !12082)
!12085 = !DILocation(line: 0, scope: !12020, inlinedAt: !12084)
!12086 = !DILocation(line: 0, scope: !12077)
!12087 = !DILocation(line: 243, column: 17, scope: !12077)
!12088 = !DILocation(line: 243, column: 29, scope: !12077)
!12089 = !DILocation(line: 243, column: 27, scope: !12077)
!12090 = !DILocation(line: 243, column: 43, scope: !12077)
!12091 = !DILocation(line: 243, column: 41, scope: !12077)
!12092 = !DILocation(line: 0, scope: !12062, inlinedAt: !12093)
!12093 = distinct !DILocation(line: 245, column: 2, scope: !12077)
!12094 = !DILocation(line: 0, scope: !12070, inlinedAt: !12095)
!12095 = distinct !DILocation(line: 215, column: 2, scope: !12062, inlinedAt: !12093)
!12096 = !DILocation(line: 95, column: 2, scope: !12070, inlinedAt: !12095)
!12097 = !DILocation(line: 246, column: 13, scope: !12077)
!12098 = !DILocation(line: 246, column: 2, scope: !12077)
!12099 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1990, file: !1990, line: 249, type: !7144, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1912, retainedNodes: !12100)
!12100 = !{!12101, !12102}
!12101 = !DILocalVariable(name: "key", scope: !12099, file: !1990, line: 251, type: !11994)
!12102 = !DILocalVariable(name: "ret", scope: !12099, file: !1990, line: 252, type: !113)
!12103 = !DILocation(line: 0, scope: !12011, inlinedAt: !12104)
!12104 = distinct !DILocation(line: 251, column: 25, scope: !12099)
!12105 = !DILocation(line: 55, column: 2, scope: !12020, inlinedAt: !12106)
!12106 = distinct !DILocation(line: 145, column: 10, scope: !12011, inlinedAt: !12104)
!12107 = !DILocation(line: 0, scope: !12020, inlinedAt: !12106)
!12108 = !DILocation(line: 0, scope: !12099)
!12109 = !DILocation(line: 252, column: 17, scope: !12099)
!12110 = !DILocation(line: 252, column: 29, scope: !12099)
!12111 = !DILocation(line: 252, column: 27, scope: !12099)
!12112 = !DILocation(line: 0, scope: !12062, inlinedAt: !12113)
!12113 = distinct !DILocation(line: 254, column: 2, scope: !12099)
!12114 = !DILocation(line: 0, scope: !12070, inlinedAt: !12115)
!12115 = distinct !DILocation(line: 215, column: 2, scope: !12062, inlinedAt: !12113)
!12116 = !DILocation(line: 95, column: 2, scope: !12070, inlinedAt: !12115)
!12117 = !DILocation(line: 255, column: 2, scope: !12099)
!12118 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1990, file: !1990, line: 258, type: !3413, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1912, retainedNodes: !437)
!12119 = !DILocation(line: 260, column: 6, scope: !12120)
!12120 = distinct !DILexicalBlock(scope: !12118, file: !1990, line: 260, column: 6)
!12121 = !DILocation(line: 260, column: 16, scope: !12120)
!12122 = !DILocation(line: 260, column: 6, scope: !12118)
!12123 = !DILocation(line: 261, column: 17, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !12120, file: !1990, line: 260, column: 34)
!12125 = !DILocation(line: 262, column: 2, scope: !12124)
!12126 = !DILocation(line: 263, column: 1, scope: !12118)
!12127 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1990, file: !1990, line: 265, type: !3413, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1912, retainedNodes: !437)
!12128 = !DILocation(line: 267, column: 16, scope: !12127)
!12129 = !DILocation(line: 268, column: 1, scope: !12127)
!12130 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !12131, file: !12131, line: 9, type: !12132, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3224, retainedNodes: !12155)
!12131 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12132 = !DISubroutineType(types: !12133)
!12133 = !{!108, !12134, !164, !12154}
!12134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12135, size: 32)
!12135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12136)
!12136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1867, line: 60, size: 64, elements: !12137)
!12137 = !{!12138, !12153}
!12138 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12136, file: !1867, line: 69, baseType: !12139, size: 32)
!12139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12140, size: 32)
!12140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12141)
!12141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1867, line: 50, size: 64, elements: !12142)
!12142 = !{!12143, !12151, !12152}
!12143 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12141, file: !1867, line: 52, baseType: !12144, size: 32)
!12144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12145, size: 32)
!12145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12146)
!12146 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1878, line: 37, baseType: !12147)
!12147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1878, line: 32, size: 64, elements: !12148)
!12148 = !{!12149, !12150}
!12149 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12147, file: !1878, line: 34, baseType: !113, size: 32)
!12150 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12147, file: !1878, line: 36, baseType: !113, size: 32, offset: 32)
!12151 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12141, file: !1867, line: 54, baseType: !164, size: 8, offset: 32)
!12152 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12141, file: !1867, line: 56, baseType: !164, size: 8, offset: 40)
!12153 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !12136, file: !1867, line: 71, baseType: !164, size: 8, offset: 32)
!12154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12139, size: 32)
!12155 = !{!12156, !12157, !12158}
!12156 = !DILocalVariable(name: "config", arg: 1, scope: !12130, file: !12131, line: 9, type: !12134)
!12157 = !DILocalVariable(name: "id", arg: 2, scope: !12130, file: !12131, line: 9, type: !164)
!12158 = !DILocalVariable(name: "state", arg: 3, scope: !12130, file: !12131, line: 10, type: !12154)
!12159 = !DILocation(line: 0, scope: !12130)
!12160 = !DILocation(line: 12, column: 20, scope: !12130)
!12161 = !DILocation(line: 13, column: 27, scope: !12130)
!12162 = !DILocation(line: 13, column: 42, scope: !12130)
!12163 = !DILocation(line: 13, column: 19, scope: !12130)
!12164 = !DILocation(line: 13, column: 16, scope: !12130)
!12165 = !DILocation(line: 13, column: 2, scope: !12130)
!12166 = distinct !{!12166, !12165, !12167}
!12167 = !DILocation(line: 19, column: 2, scope: !12130)
!12168 = !DILocation(line: 14, column: 23, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12170, file: !12131, line: 14, column: 7)
!12170 = distinct !DILexicalBlock(scope: !12130, file: !12131, line: 13, column: 54)
!12171 = !DILocation(line: 14, column: 10, scope: !12169)
!12172 = !DILocation(line: 18, column: 11, scope: !12170)
!12173 = !DILocation(line: 14, column: 7, scope: !12170)
!12174 = !DILocation(line: 22, column: 1, scope: !12130)
!12175 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !2107, file: !2107, line: 193, type: !12176, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2025, retainedNodes: !12185)
!12176 = !DISubroutineType(types: !12177)
!12177 = !{!108, !12178, !164, !22}
!12178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12179, size: 32)
!12179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12180)
!12180 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1878, line: 37, baseType: !12181)
!12181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1878, line: 32, size: 64, elements: !12182)
!12182 = !{!12183, !12184}
!12183 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12181, file: !1878, line: 34, baseType: !113, size: 32)
!12184 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12181, file: !1878, line: 36, baseType: !113, size: 32, offset: 32)
!12185 = !{!12186, !12187, !12188, !12189, !12190, !12191, !12192, !12193, !12195}
!12186 = !DILocalVariable(name: "pins", arg: 1, scope: !12175, file: !2107, line: 193, type: !12178)
!12187 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12175, file: !2107, line: 193, type: !164)
!12188 = !DILocalVariable(name: "reg", arg: 3, scope: !12175, file: !2107, line: 194, type: !22)
!12189 = !DILocalVariable(name: "pin", scope: !12175, file: !2107, line: 196, type: !113)
!12190 = !DILocalVariable(name: "mux", scope: !12175, file: !2107, line: 196, type: !113)
!12191 = !DILocalVariable(name: "pin_cgf", scope: !12175, file: !2107, line: 197, type: !113)
!12192 = !DILocalVariable(name: "ret", scope: !12175, file: !2107, line: 198, type: !108)
!12193 = !DILocalVariable(name: "i", scope: !12194, file: !2107, line: 209, type: !164)
!12194 = distinct !DILexicalBlock(scope: !12175, file: !2107, line: 209, column: 2)
!12195 = !DILocalVariable(name: "gpio_out", scope: !12196, file: !2107, line: 239, type: !113)
!12196 = distinct !DILexicalBlock(scope: !12197, file: !2107, line: 238, column: 55)
!12197 = distinct !DILexicalBlock(scope: !12198, file: !2107, line: 238, column: 14)
!12198 = distinct !DILexicalBlock(scope: !12199, file: !2107, line: 236, column: 14)
!12199 = distinct !DILexicalBlock(scope: !12200, file: !2107, line: 234, column: 7)
!12200 = distinct !DILexicalBlock(scope: !12201, file: !2107, line: 209, column: 41)
!12201 = distinct !DILexicalBlock(scope: !12194, file: !2107, line: 209, column: 2)
!12202 = !DILocation(line: 0, scope: !12175)
!12203 = !DILocation(line: 0, scope: !12194)
!12204 = !DILocation(line: 209, column: 25, scope: !12201)
!12205 = !DILocation(line: 209, column: 2, scope: !12194)
!12206 = distinct !{!12206, !12205, !12207}
!12207 = !DILocation(line: 259, column: 2, scope: !12194)
!12208 = !DILocation(line: 210, column: 17, scope: !12200)
!12209 = !DILocation(line: 234, column: 7, scope: !12199)
!12210 = !DILocation(line: 234, column: 33, scope: !12199)
!12211 = !DILocation(line: 234, column: 7, scope: !12200)
!12212 = !DILocation(line: 235, column: 22, scope: !12213)
!12213 = distinct !DILexicalBlock(scope: !12199, file: !2107, line: 234, column: 49)
!12214 = !DILocation(line: 235, column: 29, scope: !12213)
!12215 = !DILocation(line: 236, column: 3, scope: !12213)
!12216 = !DILocation(line: 236, column: 14, scope: !12199)
!12217 = !DILocation(line: 239, column: 32, scope: !12196)
!12218 = !DILocation(line: 0, scope: !12196)
!12219 = !DILocation(line: 241, column: 8, scope: !12196)
!12220 = !DILocation(line: 246, column: 3, scope: !12196)
!12221 = !DILocation(line: 252, column: 9, scope: !12200)
!12222 = !DILocation(line: 255, column: 9, scope: !12200)
!12223 = !DILocation(line: 256, column: 11, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12200, file: !2107, line: 256, column: 7)
!12225 = !DILocation(line: 209, column: 37, scope: !12201)
!12226 = !DILocation(line: 256, column: 7, scope: !12200)
!12227 = !DILocation(line: 262, column: 1, scope: !12175)
!12228 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !2107, file: !2107, line: 176, type: !12229, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2025, retainedNodes: !12231)
!12229 = !DISubroutineType(types: !12230)
!12230 = !{!108, !113, !113, !113}
!12231 = !{!12232, !12233, !12234, !12235}
!12232 = !DILocalVariable(name: "pin", arg: 1, scope: !12228, file: !2107, line: 176, type: !113)
!12233 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12228, file: !2107, line: 176, type: !113)
!12234 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12228, file: !2107, line: 176, type: !113)
!12235 = !DILocalVariable(name: "port_device", scope: !12228, file: !2107, line: 178, type: !2037)
!12236 = !DILocation(line: 0, scope: !12228)
!12237 = !DILocation(line: 180, column: 22, scope: !12238)
!12238 = distinct !DILexicalBlock(scope: !12228, file: !2107, line: 180, column: 6)
!12239 = !DILocation(line: 180, column: 6, scope: !12228)
!12240 = !DILocation(line: 180, column: 6, scope: !12238)
!12241 = !DILocation(line: 184, column: 16, scope: !12228)
!12242 = !DILocation(line: 186, column: 19, scope: !12243)
!12243 = distinct !DILexicalBlock(scope: !12228, file: !2107, line: 186, column: 6)
!12244 = !DILocation(line: 186, column: 28, scope: !12243)
!12245 = !DILocation(line: 186, column: 33, scope: !12243)
!12246 = !DILocation(line: 186, column: 6, scope: !12228)
!12247 = !DILocation(line: 190, column: 43, scope: !12228)
!12248 = !DILocation(line: 190, column: 9, scope: !12228)
!12249 = !DILocation(line: 190, column: 2, scope: !12228)
!12250 = !DILocation(line: 191, column: 1, scope: !12228)
!12251 = distinct !DISubprogram(name: "device_is_ready", scope: !10207, file: !10207, line: 47, type: !12252, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2025, retainedNodes: !12254)
!12252 = !DISubroutineType(types: !12253)
!12253 = !{!422, !2037}
!12254 = !{!12255}
!12255 = !DILocalVariable(name: "dev", arg: 1, scope: !12251, file: !10207, line: 47, type: !2037)
!12256 = !DILocation(line: 0, scope: !12251)
!12257 = !DILocation(line: 55, column: 2, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12251, file: !10207, line: 55, column: 2)
!12259 = !{i64 2149448284}
!12260 = !DILocation(line: 56, column: 9, scope: !12251)
!12261 = !DILocation(line: 56, column: 2, scope: !12251)
!12262 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !12252, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2025, retainedNodes: !12263)
!12263 = !{!12264}
!12264 = !DILocalVariable(name: "dev", arg: 1, scope: !12262, file: !411, line: 730, type: !2037)
!12265 = !DILocation(line: 0, scope: !12262)
!12266 = !DILocation(line: 732, column: 9, scope: !12262)
!12267 = !DILocation(line: 732, column: 2, scope: !12262)
!12268 = distinct !DISubprogram(name: "SystemInit", scope: !2155, file: !2155, line: 167, type: !3413, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !437)
!12269 = !DILocation(line: 182, column: 1, scope: !12268)
!12270 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2155, file: !2155, line: 220, type: !3413, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !12271)
!12271 = !{!12272, !12273, !12274, !12275, !12276}
!12272 = !DILocalVariable(name: "tmp", scope: !12270, file: !2155, line: 222, type: !113)
!12273 = !DILocalVariable(name: "pllvco", scope: !12270, file: !2155, line: 222, type: !113)
!12274 = !DILocalVariable(name: "pllp", scope: !12270, file: !2155, line: 222, type: !113)
!12275 = !DILocalVariable(name: "pllsource", scope: !12270, file: !2155, line: 222, type: !113)
!12276 = !DILocalVariable(name: "pllm", scope: !12270, file: !2155, line: 222, type: !113)
!12277 = !DILocation(line: 0, scope: !12270)
!12278 = !DILocation(line: 225, column: 14, scope: !12270)
!12279 = !DILocation(line: 225, column: 19, scope: !12270)
!12280 = !DILocation(line: 227, column: 3, scope: !12270)
!12281 = !DILocation(line: 234, column: 7, scope: !12282)
!12282 = distinct !DILexicalBlock(scope: !12270, file: !2155, line: 228, column: 3)
!12283 = !DILocation(line: 240, column: 25, scope: !12282)
!12284 = !DILocation(line: 241, column: 19, scope: !12282)
!12285 = !DILocation(line: 241, column: 27, scope: !12282)
!12286 = !DILocation(line: 243, column: 21, scope: !12287)
!12287 = distinct !DILexicalBlock(scope: !12282, file: !2155, line: 243, column: 11)
!12288 = !DILocation(line: 0, scope: !12287)
!12289 = !DILocation(line: 254, column: 22, scope: !12282)
!12290 = !DILocation(line: 254, column: 62, scope: !12282)
!12291 = !DILocation(line: 255, column: 31, scope: !12282)
!12292 = !DILocation(line: 256, column: 7, scope: !12282)
!12293 = !DILocation(line: 0, scope: !12282)
!12294 = !DILocation(line: 263, column: 30, scope: !12270)
!12295 = !DILocation(line: 263, column: 52, scope: !12270)
!12296 = !DILocation(line: 263, column: 9, scope: !12270)
!12297 = !DILocation(line: 265, column: 19, scope: !12270)
!12298 = !DILocation(line: 266, column: 1, scope: !12270)
!12299 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12300, file: !12300, line: 200, type: !12301, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !437)
!12300 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12301 = !DISubroutineType(types: !12302)
!12302 = !{!12303}
!12303 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3230, line: 44, baseType: !3229)
!12304 = !DILocation(line: 202, column: 3, scope: !12299)
!12305 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12300, file: !12300, line: 219, type: !12306, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !12330)
!12306 = !DISubroutineType(types: !12307)
!12307 = !{!12303, !12308}
!12308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12309, size: 32)
!12309 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12310, line: 70, baseType: !12311)
!12310 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12311 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12310, line: 49, size: 384, elements: !12312)
!12312 = !{!12313, !12314, !12315, !12316, !12317, !12318, !12319}
!12313 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12311, file: !12310, line: 51, baseType: !113, size: 32)
!12314 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12311, file: !12310, line: 54, baseType: !113, size: 32, offset: 32)
!12315 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12311, file: !12310, line: 57, baseType: !113, size: 32, offset: 64)
!12316 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12311, file: !12310, line: 60, baseType: !113, size: 32, offset: 96)
!12317 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12311, file: !12310, line: 63, baseType: !113, size: 32, offset: 128)
!12318 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12311, file: !12310, line: 66, baseType: !113, size: 32, offset: 160)
!12319 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12311, file: !12310, line: 69, baseType: !12320, size: 192, offset: 192)
!12320 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12321, line: 73, baseType: !12322)
!12321 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12322 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12321, line: 45, size: 192, elements: !12323)
!12323 = !{!12324, !12325, !12326, !12327, !12328, !12329}
!12324 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12322, file: !12321, line: 47, baseType: !113, size: 32)
!12325 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12322, file: !12321, line: 50, baseType: !113, size: 32, offset: 32)
!12326 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12322, file: !12321, line: 53, baseType: !113, size: 32, offset: 64)
!12327 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12322, file: !12321, line: 56, baseType: !113, size: 32, offset: 96)
!12328 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12322, file: !12321, line: 60, baseType: !113, size: 32, offset: 128)
!12329 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !12322, file: !12321, line: 63, baseType: !113, size: 32, offset: 160)
!12330 = !{!12331, !12332, !12333, !12334, !12338}
!12331 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12305, file: !12300, line: 219, type: !12308)
!12332 = !DILocalVariable(name: "tickstart", scope: !12305, file: !12300, line: 221, type: !113)
!12333 = !DILocalVariable(name: "pll_config", scope: !12305, file: !12300, line: 221, type: !113)
!12334 = !DILocalVariable(name: "pwrclkchanged", scope: !12335, file: !12300, line: 391, type: !12337)
!12335 = distinct !DILexicalBlock(scope: !12336, file: !12300, line: 390, column: 3)
!12336 = distinct !DILexicalBlock(scope: !12305, file: !12300, line: 389, column: 6)
!12337 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !1178, line: 188, baseType: !3236)
!12338 = !DILocalVariable(name: "tmpreg", scope: !12339, file: !12300, line: 400, type: !572)
!12339 = distinct !DILexicalBlock(scope: !12340, file: !12300, line: 400, column: 7)
!12340 = distinct !DILexicalBlock(scope: !12341, file: !12300, line: 399, column: 5)
!12341 = distinct !DILexicalBlock(scope: !12335, file: !12300, line: 398, column: 8)
!12342 = !DILocation(line: 0, scope: !12305)
!12343 = !DILocation(line: 224, column: 24, scope: !12344)
!12344 = distinct !DILexicalBlock(scope: !12305, file: !12300, line: 224, column: 6)
!12345 = !DILocation(line: 224, column: 6, scope: !12305)
!12346 = !DILocation(line: 232, column: 27, scope: !12347)
!12347 = distinct !DILexicalBlock(scope: !12305, file: !12300, line: 232, column: 6)
!12348 = !DILocation(line: 232, column: 43, scope: !12347)
!12349 = !DILocation(line: 232, column: 69, scope: !12347)
!12350 = !DILocation(line: 232, column: 6, scope: !12305)
!12351 = !DILocation(line: 237, column: 9, scope: !12352)
!12352 = distinct !DILexicalBlock(scope: !12353, file: !12300, line: 237, column: 8)
!12353 = distinct !DILexicalBlock(scope: !12347, file: !12300, line: 233, column: 3)
!12354 = !DILocation(line: 237, column: 39, scope: !12352)
!12355 = !DILocation(line: 237, column: 60, scope: !12352)
!12356 = !DILocation(line: 238, column: 9, scope: !12352)
!12357 = !DILocation(line: 238, column: 39, scope: !12352)
!12358 = !DILocation(line: 238, column: 60, scope: !12352)
!12359 = !DILocation(line: 238, column: 70, scope: !12352)
!12360 = !DILocation(line: 238, column: 78, scope: !12352)
!12361 = !DILocation(line: 238, column: 100, scope: !12352)
!12362 = !DILocation(line: 237, column: 8, scope: !12353)
!12363 = !DILocation(line: 240, column: 11, scope: !12364)
!12364 = distinct !DILexicalBlock(scope: !12365, file: !12300, line: 240, column: 10)
!12365 = distinct !DILexicalBlock(scope: !12352, file: !12300, line: 239, column: 5)
!12366 = !DILocation(line: 240, column: 57, scope: !12364)
!12367 = !DILocation(line: 240, column: 80, scope: !12364)
!12368 = !DILocation(line: 240, column: 89, scope: !12364)
!12369 = !DILocation(line: 240, column: 10, scope: !12365)
!12370 = !DILocation(line: 248, column: 7, scope: !12371)
!12371 = distinct !DILexicalBlock(scope: !12372, file: !12300, line: 248, column: 7)
!12372 = distinct !DILexicalBlock(scope: !12373, file: !12300, line: 248, column: 7)
!12373 = distinct !DILexicalBlock(scope: !12352, file: !12300, line: 246, column: 5)
!12374 = !DILocation(line: 248, column: 7, scope: !12372)
!12375 = !DILocation(line: 248, column: 7, scope: !12376)
!12376 = distinct !DILexicalBlock(scope: !12371, file: !12300, line: 248, column: 7)
!12377 = !DILocation(line: 248, column: 7, scope: !12378)
!12378 = distinct !DILexicalBlock(scope: !12379, file: !12300, line: 248, column: 7)
!12379 = distinct !DILexicalBlock(scope: !12371, file: !12300, line: 248, column: 7)
!12380 = !DILocation(line: 248, column: 7, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12379, file: !12300, line: 248, column: 7)
!12382 = !DILocation(line: 0, scope: !12371)
!12383 = !DILocation(line: 251, column: 30, scope: !12384)
!12384 = distinct !DILexicalBlock(scope: !12373, file: !12300, line: 251, column: 10)
!12385 = !DILocation(line: 251, column: 40, scope: !12384)
!12386 = !DILocation(line: 0, scope: !12384)
!12387 = !DILocation(line: 251, column: 10, scope: !12373)
!12388 = !DILocation(line: 257, column: 15, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12384, file: !12300, line: 252, column: 7)
!12390 = !DILocation(line: 257, column: 51, scope: !12389)
!12391 = !DILocation(line: 257, column: 9, scope: !12389)
!12392 = !DILocation(line: 259, column: 15, scope: !12393)
!12393 = distinct !DILexicalBlock(scope: !12394, file: !12300, line: 259, column: 14)
!12394 = distinct !DILexicalBlock(scope: !12389, file: !12300, line: 258, column: 9)
!12395 = !DILocation(line: 259, column: 29, scope: !12393)
!12396 = !DILocation(line: 259, column: 43, scope: !12393)
!12397 = !DILocation(line: 259, column: 14, scope: !12394)
!12398 = distinct !{!12398, !12391, !12399}
!12399 = !DILocation(line: 263, column: 9, scope: !12389)
!12400 = !DILocation(line: 271, column: 15, scope: !12401)
!12401 = distinct !DILexicalBlock(scope: !12384, file: !12300, line: 266, column: 7)
!12402 = !DILocation(line: 271, column: 9, scope: !12401)
!12403 = !DILocation(line: 273, column: 15, scope: !12404)
!12404 = distinct !DILexicalBlock(scope: !12405, file: !12300, line: 273, column: 14)
!12405 = distinct !DILexicalBlock(scope: !12401, file: !12300, line: 272, column: 9)
!12406 = !DILocation(line: 273, column: 29, scope: !12404)
!12407 = !DILocation(line: 273, column: 43, scope: !12404)
!12408 = !DILocation(line: 273, column: 14, scope: !12405)
!12409 = distinct !{!12409, !12402, !12410}
!12410 = !DILocation(line: 277, column: 9, scope: !12401)
!12411 = !DILocation(line: 282, column: 27, scope: !12412)
!12412 = distinct !DILexicalBlock(scope: !12305, file: !12300, line: 282, column: 6)
!12413 = !DILocation(line: 282, column: 43, scope: !12412)
!12414 = !DILocation(line: 282, column: 69, scope: !12412)
!12415 = !DILocation(line: 282, column: 6, scope: !12305)
!12416 = !DILocation(line: 289, column: 9, scope: !12417)
!12417 = distinct !DILexicalBlock(scope: !12418, file: !12300, line: 289, column: 8)
!12418 = distinct !DILexicalBlock(scope: !12412, file: !12300, line: 283, column: 3)
!12419 = !DILocation(line: 289, column: 39, scope: !12417)
!12420 = !DILocation(line: 289, column: 60, scope: !12417)
!12421 = !DILocation(line: 290, column: 9, scope: !12417)
!12422 = !DILocation(line: 290, column: 39, scope: !12417)
!12423 = !DILocation(line: 290, column: 60, scope: !12417)
!12424 = !DILocation(line: 290, column: 70, scope: !12417)
!12425 = !DILocation(line: 290, column: 78, scope: !12417)
!12426 = !DILocation(line: 290, column: 100, scope: !12417)
!12427 = !DILocation(line: 289, column: 8, scope: !12418)
!12428 = !DILocation(line: 293, column: 11, scope: !12429)
!12429 = distinct !DILexicalBlock(scope: !12430, file: !12300, line: 293, column: 10)
!12430 = distinct !DILexicalBlock(scope: !12417, file: !12300, line: 291, column: 5)
!12431 = !DILocation(line: 293, column: 57, scope: !12429)
!12432 = !DILocation(line: 293, column: 80, scope: !12429)
!12433 = !DILocation(line: 293, column: 89, scope: !12429)
!12434 = !DILocation(line: 293, column: 10, scope: !12430)
!12435 = !DILocation(line: 307, column: 30, scope: !12436)
!12436 = distinct !DILexicalBlock(scope: !12437, file: !12300, line: 307, column: 10)
!12437 = distinct !DILexicalBlock(scope: !12417, file: !12300, line: 305, column: 5)
!12438 = !DILocation(line: 307, column: 39, scope: !12436)
!12439 = !DILocation(line: 307, column: 10, scope: !12437)
!12440 = !DILocation(line: 310, column: 9, scope: !12441)
!12441 = distinct !DILexicalBlock(scope: !12436, file: !12300, line: 308, column: 7)
!12442 = !DILocation(line: 313, column: 21, scope: !12441)
!12443 = !DILocation(line: 316, column: 9, scope: !12441)
!12444 = !DILocation(line: 316, column: 15, scope: !12441)
!12445 = !DILocation(line: 316, column: 51, scope: !12441)
!12446 = !DILocation(line: 318, column: 15, scope: !12447)
!12447 = distinct !DILexicalBlock(scope: !12448, file: !12300, line: 318, column: 14)
!12448 = distinct !DILexicalBlock(scope: !12441, file: !12300, line: 317, column: 9)
!12449 = !DILocation(line: 318, column: 29, scope: !12447)
!12450 = !DILocation(line: 318, column: 43, scope: !12447)
!12451 = !DILocation(line: 318, column: 14, scope: !12448)
!12452 = distinct !{!12452, !12443, !12453}
!12453 = !DILocation(line: 322, column: 9, scope: !12441)
!12454 = !DILocation(line: 330, column: 9, scope: !12455)
!12455 = distinct !DILexicalBlock(scope: !12436, file: !12300, line: 328, column: 7)
!12456 = !DILocation(line: 333, column: 21, scope: !12455)
!12457 = !DILocation(line: 336, column: 9, scope: !12455)
!12458 = !DILocation(line: 336, column: 15, scope: !12455)
!12459 = !DILocation(line: 338, column: 15, scope: !12460)
!12460 = distinct !DILexicalBlock(scope: !12461, file: !12300, line: 338, column: 14)
!12461 = distinct !DILexicalBlock(scope: !12455, file: !12300, line: 337, column: 9)
!12462 = !DILocation(line: 338, column: 29, scope: !12460)
!12463 = !DILocation(line: 338, column: 43, scope: !12460)
!12464 = !DILocation(line: 338, column: 14, scope: !12461)
!12465 = distinct !{!12465, !12457, !12466}
!12466 = !DILocation(line: 342, column: 9, scope: !12455)
!12467 = !DILocation(line: 0, scope: !12417)
!12468 = !DILocation(line: 347, column: 27, scope: !12469)
!12469 = distinct !DILexicalBlock(scope: !12305, file: !12300, line: 347, column: 6)
!12470 = !DILocation(line: 347, column: 43, scope: !12469)
!12471 = !DILocation(line: 347, column: 69, scope: !12469)
!12472 = !DILocation(line: 347, column: 6, scope: !12305)
!12473 = !DILocation(line: 353, column: 28, scope: !12474)
!12474 = distinct !DILexicalBlock(scope: !12475, file: !12300, line: 353, column: 8)
!12475 = distinct !DILexicalBlock(scope: !12469, file: !12300, line: 348, column: 3)
!12476 = !DILocation(line: 353, column: 37, scope: !12474)
!12477 = !DILocation(line: 353, column: 8, scope: !12475)
!12478 = !DILocation(line: 356, column: 7, scope: !12479)
!12479 = distinct !DILexicalBlock(scope: !12474, file: !12300, line: 354, column: 5)
!12480 = !DILocation(line: 359, column: 19, scope: !12479)
!12481 = !DILocation(line: 362, column: 7, scope: !12479)
!12482 = !DILocation(line: 362, column: 13, scope: !12479)
!12483 = !DILocation(line: 362, column: 49, scope: !12479)
!12484 = !DILocation(line: 364, column: 13, scope: !12485)
!12485 = distinct !DILexicalBlock(scope: !12486, file: !12300, line: 364, column: 12)
!12486 = distinct !DILexicalBlock(scope: !12479, file: !12300, line: 363, column: 7)
!12487 = !DILocation(line: 364, column: 27, scope: !12485)
!12488 = !DILocation(line: 364, column: 41, scope: !12485)
!12489 = !DILocation(line: 364, column: 12, scope: !12486)
!12490 = distinct !{!12490, !12481, !12491}
!12491 = !DILocation(line: 368, column: 7, scope: !12479)
!12492 = !DILocation(line: 373, column: 7, scope: !12493)
!12493 = distinct !DILexicalBlock(scope: !12474, file: !12300, line: 371, column: 5)
!12494 = !DILocation(line: 376, column: 19, scope: !12493)
!12495 = !DILocation(line: 379, column: 7, scope: !12493)
!12496 = !DILocation(line: 379, column: 13, scope: !12493)
!12497 = !DILocation(line: 381, column: 13, scope: !12498)
!12498 = distinct !DILexicalBlock(scope: !12499, file: !12300, line: 381, column: 12)
!12499 = distinct !DILexicalBlock(scope: !12493, file: !12300, line: 380, column: 7)
!12500 = !DILocation(line: 381, column: 27, scope: !12498)
!12501 = !DILocation(line: 381, column: 41, scope: !12498)
!12502 = !DILocation(line: 381, column: 12, scope: !12499)
!12503 = distinct !{!12503, !12495, !12504}
!12504 = !DILocation(line: 385, column: 7, scope: !12493)
!12505 = !DILocation(line: 389, column: 27, scope: !12336)
!12506 = !DILocation(line: 389, column: 43, scope: !12336)
!12507 = !DILocation(line: 389, column: 69, scope: !12336)
!12508 = !DILocation(line: 389, column: 6, scope: !12305)
!12509 = !DILocation(line: 0, scope: !12335)
!12510 = !DILocation(line: 398, column: 8, scope: !12341)
!12511 = !DILocation(line: 398, column: 8, scope: !12335)
!12512 = !DILocation(line: 400, column: 7, scope: !12339)
!12513 = !DILocation(line: 400, column: 7, scope: !12340)
!12514 = !DILocation(line: 402, column: 5, scope: !12340)
!12515 = !DILocation(line: 404, column: 8, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12335, file: !12300, line: 404, column: 8)
!12517 = !DILocation(line: 404, column: 8, scope: !12335)
!12518 = !DILocation(line: 407, column: 7, scope: !12519)
!12519 = distinct !DILexicalBlock(scope: !12516, file: !12300, line: 405, column: 5)
!12520 = !DILocation(line: 410, column: 19, scope: !12519)
!12521 = !DILocation(line: 412, column: 7, scope: !12519)
!12522 = !DILocation(line: 412, column: 13, scope: !12519)
!12523 = !DILocation(line: 414, column: 13, scope: !12524)
!12524 = distinct !DILexicalBlock(scope: !12525, file: !12300, line: 414, column: 12)
!12525 = distinct !DILexicalBlock(scope: !12519, file: !12300, line: 413, column: 7)
!12526 = !DILocation(line: 414, column: 27, scope: !12524)
!12527 = !DILocation(line: 414, column: 40, scope: !12524)
!12528 = !DILocation(line: 414, column: 12, scope: !12525)
!12529 = distinct !{!12529, !12521, !12530}
!12530 = !DILocation(line: 418, column: 7, scope: !12519)
!12531 = !DILocation(line: 422, column: 5, scope: !12532)
!12532 = distinct !DILexicalBlock(scope: !12533, file: !12300, line: 422, column: 5)
!12533 = distinct !DILexicalBlock(scope: !12335, file: !12300, line: 422, column: 5)
!12534 = !DILocation(line: 422, column: 5, scope: !12533)
!12535 = !DILocation(line: 422, column: 5, scope: !12536)
!12536 = distinct !DILexicalBlock(scope: !12532, file: !12300, line: 422, column: 5)
!12537 = !DILocation(line: 422, column: 5, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12539, file: !12300, line: 422, column: 5)
!12539 = distinct !DILexicalBlock(scope: !12532, file: !12300, line: 422, column: 5)
!12540 = !DILocation(line: 422, column: 5, scope: !12541)
!12541 = distinct !DILexicalBlock(scope: !12539, file: !12300, line: 422, column: 5)
!12542 = !DILocation(line: 0, scope: !12532)
!12543 = !DILocation(line: 424, column: 28, scope: !12544)
!12544 = distinct !DILexicalBlock(scope: !12335, file: !12300, line: 424, column: 8)
!12545 = !DILocation(line: 424, column: 38, scope: !12544)
!12546 = !DILocation(line: 0, scope: !12544)
!12547 = !DILocation(line: 424, column: 8, scope: !12335)
!12548 = !DILocation(line: 430, column: 13, scope: !12549)
!12549 = distinct !DILexicalBlock(scope: !12544, file: !12300, line: 425, column: 5)
!12550 = !DILocation(line: 430, column: 49, scope: !12549)
!12551 = !DILocation(line: 430, column: 7, scope: !12549)
!12552 = !DILocation(line: 432, column: 13, scope: !12553)
!12553 = distinct !DILexicalBlock(scope: !12554, file: !12300, line: 432, column: 12)
!12554 = distinct !DILexicalBlock(scope: !12549, file: !12300, line: 431, column: 7)
!12555 = !DILocation(line: 432, column: 27, scope: !12553)
!12556 = !DILocation(line: 432, column: 41, scope: !12553)
!12557 = !DILocation(line: 432, column: 12, scope: !12554)
!12558 = distinct !{!12558, !12551, !12559}
!12559 = !DILocation(line: 436, column: 7, scope: !12549)
!12560 = !DILocation(line: 444, column: 13, scope: !12561)
!12561 = distinct !DILexicalBlock(scope: !12544, file: !12300, line: 439, column: 5)
!12562 = !DILocation(line: 444, column: 7, scope: !12561)
!12563 = !DILocation(line: 446, column: 13, scope: !12564)
!12564 = distinct !DILexicalBlock(scope: !12565, file: !12300, line: 446, column: 12)
!12565 = distinct !DILexicalBlock(scope: !12561, file: !12300, line: 445, column: 7)
!12566 = !DILocation(line: 446, column: 27, scope: !12564)
!12567 = !DILocation(line: 446, column: 41, scope: !12564)
!12568 = !DILocation(line: 446, column: 12, scope: !12565)
!12569 = distinct !{!12569, !12562, !12570}
!12570 = !DILocation(line: 450, column: 7, scope: !12561)
!12571 = !DILocation(line: 454, column: 8, scope: !12335)
!12572 = !DILocation(line: 456, column: 7, scope: !12573)
!12573 = distinct !DILexicalBlock(scope: !12574, file: !12300, line: 455, column: 5)
!12574 = distinct !DILexicalBlock(scope: !12335, file: !12300, line: 454, column: 8)
!12575 = !DILocation(line: 457, column: 5, scope: !12573)
!12576 = !DILocation(line: 462, column: 31, scope: !12577)
!12577 = distinct !DILexicalBlock(scope: !12305, file: !12300, line: 462, column: 7)
!12578 = !DILocation(line: 462, column: 41, scope: !12577)
!12579 = !DILocation(line: 462, column: 7, scope: !12305)
!12580 = !DILocation(line: 465, column: 8, scope: !12581)
!12581 = distinct !DILexicalBlock(scope: !12582, file: !12300, line: 465, column: 8)
!12582 = distinct !DILexicalBlock(scope: !12577, file: !12300, line: 463, column: 3)
!12583 = !DILocation(line: 465, column: 38, scope: !12581)
!12584 = !DILocation(line: 465, column: 8, scope: !12582)
!12585 = !DILocation(line: 467, column: 44, scope: !12586)
!12586 = distinct !DILexicalBlock(scope: !12587, file: !12300, line: 467, column: 10)
!12587 = distinct !DILexicalBlock(scope: !12581, file: !12300, line: 466, column: 5)
!12588 = !DILocation(line: 0, scope: !12586)
!12589 = !DILocation(line: 467, column: 10, scope: !12587)
!12590 = !DILocation(line: 483, column: 15, scope: !12591)
!12591 = distinct !DILexicalBlock(scope: !12586, file: !12300, line: 468, column: 7)
!12592 = !DILocation(line: 483, column: 9, scope: !12591)
!12593 = !DILocation(line: 485, column: 15, scope: !12594)
!12594 = distinct !DILexicalBlock(scope: !12595, file: !12300, line: 485, column: 14)
!12595 = distinct !DILexicalBlock(scope: !12591, file: !12300, line: 484, column: 9)
!12596 = !DILocation(line: 485, column: 29, scope: !12594)
!12597 = !DILocation(line: 485, column: 43, scope: !12594)
!12598 = !DILocation(line: 485, column: 14, scope: !12595)
!12599 = distinct !{!12599, !12592, !12600}
!12600 = !DILocation(line: 489, column: 9, scope: !12591)
!12601 = !DILocation(line: 492, column: 9, scope: !12591)
!12602 = !DILocation(line: 498, column: 9, scope: !12591)
!12603 = !DILocation(line: 501, column: 21, scope: !12591)
!12604 = !DILocation(line: 504, column: 9, scope: !12591)
!12605 = !DILocation(line: 504, column: 15, scope: !12591)
!12606 = !DILocation(line: 504, column: 51, scope: !12591)
!12607 = !DILocation(line: 506, column: 15, scope: !12608)
!12608 = distinct !DILexicalBlock(scope: !12609, file: !12300, line: 506, column: 14)
!12609 = distinct !DILexicalBlock(scope: !12591, file: !12300, line: 505, column: 9)
!12610 = !DILocation(line: 506, column: 29, scope: !12608)
!12611 = !DILocation(line: 506, column: 43, scope: !12608)
!12612 = !DILocation(line: 506, column: 14, scope: !12609)
!12613 = distinct !{!12613, !12604, !12614}
!12614 = !DILocation(line: 510, column: 9, scope: !12591)
!12615 = !DILocation(line: 521, column: 15, scope: !12616)
!12616 = distinct !DILexicalBlock(scope: !12586, file: !12300, line: 513, column: 7)
!12617 = !DILocation(line: 521, column: 9, scope: !12616)
!12618 = !DILocation(line: 523, column: 15, scope: !12619)
!12619 = distinct !DILexicalBlock(scope: !12620, file: !12300, line: 523, column: 14)
!12620 = distinct !DILexicalBlock(scope: !12616, file: !12300, line: 522, column: 9)
!12621 = !DILocation(line: 523, column: 29, scope: !12619)
!12622 = !DILocation(line: 523, column: 43, scope: !12619)
!12623 = !DILocation(line: 523, column: 14, scope: !12620)
!12624 = distinct !{!12624, !12617, !12625}
!12625 = !DILocation(line: 527, column: 9, scope: !12616)
!12626 = !DILocation(line: 533, column: 44, scope: !12627)
!12627 = distinct !DILexicalBlock(scope: !12628, file: !12300, line: 533, column: 10)
!12628 = distinct !DILexicalBlock(scope: !12581, file: !12300, line: 531, column: 5)
!12629 = !DILocation(line: 533, column: 10, scope: !12628)
!12630 = !DILocation(line: 540, column: 27, scope: !12631)
!12631 = distinct !DILexicalBlock(scope: !12627, file: !12300, line: 538, column: 7)
!12632 = !DILocation(line: 551, column: 14, scope: !12633)
!12633 = distinct !DILexicalBlock(scope: !12631, file: !12300, line: 550, column: 13)
!12634 = !DILocation(line: 551, column: 81, scope: !12633)
!12635 = !DILocation(line: 551, column: 55, scope: !12633)
!12636 = !DILocation(line: 551, column: 92, scope: !12633)
!12637 = !DILocation(line: 552, column: 14, scope: !12633)
!12638 = !DILocation(line: 552, column: 80, scope: !12633)
!12639 = !DILocation(line: 552, column: 53, scope: !12633)
!12640 = !DILocation(line: 552, column: 111, scope: !12633)
!12641 = !DILocation(line: 553, column: 14, scope: !12633)
!12642 = !DILocation(line: 553, column: 80, scope: !12633)
!12643 = !DILocation(line: 553, column: 86, scope: !12633)
!12644 = !DILocation(line: 553, column: 53, scope: !12633)
!12645 = !DILocation(line: 553, column: 111, scope: !12633)
!12646 = !DILocation(line: 554, column: 14, scope: !12633)
!12647 = !DILocation(line: 554, column: 82, scope: !12633)
!12648 = !DILocation(line: 554, column: 101, scope: !12633)
!12649 = !DILocation(line: 554, column: 53, scope: !12633)
!12650 = !DILocation(line: 554, column: 126, scope: !12633)
!12651 = !DILocation(line: 555, column: 14, scope: !12633)
!12652 = !DILocation(line: 555, column: 80, scope: !12633)
!12653 = !DILocation(line: 555, column: 85, scope: !12633)
!12654 = !DILocation(line: 555, column: 53, scope: !12633)
!12655 = !DILocation(line: 550, column: 13, scope: !12631)
!12656 = !DILocation(line: 563, column: 3, scope: !12305)
!12657 = !DILocation(line: 564, column: 1, scope: !12305)
!12658 = !DISubprogram(name: "HAL_GetTick", scope: !12659, file: !12659, line: 234, type: !7144, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!12659 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12660 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !12300, file: !12300, line: 591, type: !12661, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !12672)
!12661 = !DISubroutineType(types: !12662)
!12662 = !{!12303, !12663, !113}
!12663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12664, size: 32)
!12664 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12310, line: 92, baseType: !12665)
!12665 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12310, line: 75, size: 160, elements: !12666)
!12666 = !{!12667, !12668, !12669, !12670, !12671}
!12667 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12665, file: !12310, line: 77, baseType: !113, size: 32)
!12668 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12665, file: !12310, line: 80, baseType: !113, size: 32, offset: 32)
!12669 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12665, file: !12310, line: 83, baseType: !113, size: 32, offset: 64)
!12670 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12665, file: !12310, line: 86, baseType: !113, size: 32, offset: 96)
!12671 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12665, file: !12310, line: 89, baseType: !113, size: 32, offset: 128)
!12672 = !{!12673, !12674, !12675}
!12673 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12660, file: !12300, line: 591, type: !12663)
!12674 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12660, file: !12300, line: 591, type: !113)
!12675 = !DILocalVariable(name: "tickstart", scope: !12660, file: !12300, line: 593, type: !113)
!12676 = !DILocation(line: 0, scope: !12660)
!12677 = !DILocation(line: 596, column: 24, scope: !12678)
!12678 = distinct !DILexicalBlock(scope: !12660, file: !12300, line: 596, column: 6)
!12679 = !DILocation(line: 596, column: 6, scope: !12660)
!12680 = !DILocation(line: 610, column: 17, scope: !12681)
!12681 = distinct !DILexicalBlock(scope: !12660, file: !12300, line: 610, column: 6)
!12682 = !DILocation(line: 610, column: 15, scope: !12681)
!12683 = !DILocation(line: 610, column: 6, scope: !12660)
!12684 = !DILocation(line: 613, column: 5, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12681, file: !12300, line: 611, column: 3)
!12686 = !DILocation(line: 617, column: 8, scope: !12687)
!12687 = distinct !DILexicalBlock(scope: !12685, file: !12300, line: 617, column: 8)
!12688 = !DILocation(line: 617, column: 34, scope: !12687)
!12689 = !DILocation(line: 617, column: 8, scope: !12685)
!12690 = !DILocation(line: 624, column: 27, scope: !12691)
!12691 = distinct !DILexicalBlock(scope: !12660, file: !12300, line: 624, column: 6)
!12692 = !DILocation(line: 624, column: 38, scope: !12691)
!12693 = !DILocation(line: 624, column: 60, scope: !12691)
!12694 = !DILocation(line: 624, column: 6, scope: !12660)
!12695 = !DILocation(line: 628, column: 40, scope: !12696)
!12696 = distinct !DILexicalBlock(scope: !12697, file: !12300, line: 628, column: 8)
!12697 = distinct !DILexicalBlock(scope: !12691, file: !12300, line: 625, column: 3)
!12698 = !DILocation(line: 628, column: 63, scope: !12696)
!12699 = !DILocation(line: 628, column: 8, scope: !12697)
!12700 = !DILocation(line: 630, column: 7, scope: !12701)
!12701 = distinct !DILexicalBlock(scope: !12696, file: !12300, line: 629, column: 5)
!12702 = !DILocation(line: 633, column: 29, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12697, file: !12300, line: 633, column: 8)
!12704 = !DILocation(line: 631, column: 5, scope: !12701)
!12705 = !DILocation(line: 633, column: 40, scope: !12703)
!12706 = !DILocation(line: 633, column: 63, scope: !12703)
!12707 = !DILocation(line: 633, column: 8, scope: !12697)
!12708 = !DILocation(line: 635, column: 7, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !12703, file: !12300, line: 634, column: 5)
!12710 = !DILocation(line: 636, column: 5, scope: !12709)
!12711 = !DILocation(line: 639, column: 5, scope: !12697)
!12712 = !DILocation(line: 643, column: 27, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12660, file: !12300, line: 643, column: 6)
!12714 = !DILocation(line: 640, column: 3, scope: !12697)
!12715 = !DILocation(line: 643, column: 38, scope: !12713)
!12716 = !DILocation(line: 643, column: 62, scope: !12713)
!12717 = !DILocation(line: 643, column: 6, scope: !12660)
!12718 = !DILocation(line: 648, column: 27, scope: !12719)
!12719 = distinct !DILexicalBlock(scope: !12720, file: !12300, line: 648, column: 8)
!12720 = distinct !DILexicalBlock(scope: !12713, file: !12300, line: 644, column: 3)
!12721 = !DILocation(line: 648, column: 8, scope: !12720)
!12722 = !DILocation(line: 651, column: 10, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !12724, file: !12300, line: 651, column: 10)
!12724 = distinct !DILexicalBlock(scope: !12719, file: !12300, line: 649, column: 5)
!12725 = !DILocation(line: 651, column: 46, scope: !12723)
!12726 = !DILocation(line: 651, column: 10, scope: !12724)
!12727 = !DILocation(line: 661, column: 10, scope: !12728)
!12728 = distinct !DILexicalBlock(scope: !12729, file: !12300, line: 661, column: 10)
!12729 = distinct !DILexicalBlock(scope: !12730, file: !12300, line: 659, column: 5)
!12730 = distinct !DILexicalBlock(scope: !12719, file: !12300, line: 657, column: 13)
!12731 = !DILocation(line: 661, column: 46, scope: !12728)
!12732 = !DILocation(line: 661, column: 10, scope: !12729)
!12733 = !DILocation(line: 670, column: 10, scope: !12734)
!12734 = distinct !DILexicalBlock(scope: !12735, file: !12300, line: 670, column: 10)
!12735 = distinct !DILexicalBlock(scope: !12730, file: !12300, line: 668, column: 5)
!12736 = !DILocation(line: 670, column: 46, scope: !12734)
!12737 = !DILocation(line: 670, column: 10, scope: !12735)
!12738 = !DILocation(line: 676, column: 5, scope: !12720)
!12739 = !DILocation(line: 679, column: 17, scope: !12720)
!12740 = !DILocation(line: 681, column: 5, scope: !12720)
!12741 = !DILocation(line: 681, column: 12, scope: !12720)
!12742 = !DILocation(line: 681, column: 65, scope: !12720)
!12743 = !DILocation(line: 681, column: 78, scope: !12720)
!12744 = !DILocation(line: 681, column: 42, scope: !12720)
!12745 = !DILocation(line: 683, column: 12, scope: !12746)
!12746 = distinct !DILexicalBlock(scope: !12747, file: !12300, line: 683, column: 11)
!12747 = distinct !DILexicalBlock(scope: !12720, file: !12300, line: 682, column: 5)
!12748 = !DILocation(line: 683, column: 26, scope: !12746)
!12749 = !DILocation(line: 683, column: 39, scope: !12746)
!12750 = !DILocation(line: 683, column: 11, scope: !12747)
!12751 = distinct !{!12751, !12740, !12752}
!12752 = !DILocation(line: 687, column: 5, scope: !12720)
!12753 = !DILocation(line: 691, column: 17, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !12660, file: !12300, line: 691, column: 6)
!12755 = !DILocation(line: 691, column: 15, scope: !12754)
!12756 = !DILocation(line: 691, column: 6, scope: !12660)
!12757 = !DILocation(line: 694, column: 5, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12754, file: !12300, line: 692, column: 3)
!12759 = !DILocation(line: 698, column: 8, scope: !12760)
!12760 = distinct !DILexicalBlock(scope: !12758, file: !12300, line: 698, column: 8)
!12761 = !DILocation(line: 698, column: 34, scope: !12760)
!12762 = !DILocation(line: 698, column: 8, scope: !12758)
!12763 = !DILocation(line: 705, column: 27, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !12660, file: !12300, line: 705, column: 6)
!12765 = !DILocation(line: 705, column: 38, scope: !12764)
!12766 = !DILocation(line: 705, column: 61, scope: !12764)
!12767 = !DILocation(line: 705, column: 6, scope: !12660)
!12768 = !DILocation(line: 708, column: 5, scope: !12769)
!12769 = distinct !DILexicalBlock(scope: !12764, file: !12300, line: 706, column: 3)
!12770 = !DILocation(line: 712, column: 27, scope: !12771)
!12771 = distinct !DILexicalBlock(scope: !12660, file: !12300, line: 712, column: 6)
!12772 = !DILocation(line: 709, column: 3, scope: !12769)
!12773 = !DILocation(line: 712, column: 38, scope: !12771)
!12774 = !DILocation(line: 712, column: 61, scope: !12771)
!12775 = !DILocation(line: 712, column: 6, scope: !12660)
!12776 = !DILocation(line: 715, column: 5, scope: !12777)
!12777 = distinct !DILexicalBlock(scope: !12771, file: !12300, line: 713, column: 3)
!12778 = !DILocation(line: 716, column: 3, scope: !12777)
!12779 = !DILocation(line: 719, column: 21, scope: !12660)
!12780 = !DILocation(line: 719, column: 70, scope: !12660)
!12781 = !DILocation(line: 719, column: 91, scope: !12660)
!12782 = !DILocation(line: 719, column: 50, scope: !12660)
!12783 = !DILocation(line: 719, column: 47, scope: !12660)
!12784 = !DILocation(line: 719, column: 19, scope: !12660)
!12785 = !DILocation(line: 722, column: 17, scope: !12660)
!12786 = !DILocation(line: 722, column: 3, scope: !12660)
!12787 = !DILocation(line: 724, column: 3, scope: !12660)
!12788 = !DILocation(line: 725, column: 1, scope: !12660)
!12789 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12300, file: !12300, line: 885, type: !7144, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !12790)
!12790 = !{!12791, !12792, !12793, !12794}
!12791 = !DILocalVariable(name: "pllm", scope: !12789, file: !12300, line: 887, type: !113)
!12792 = !DILocalVariable(name: "pllvco", scope: !12789, file: !12300, line: 887, type: !113)
!12793 = !DILocalVariable(name: "pllp", scope: !12789, file: !12300, line: 887, type: !113)
!12794 = !DILocalVariable(name: "sysclockfreq", scope: !12789, file: !12300, line: 888, type: !113)
!12795 = !DILocation(line: 0, scope: !12789)
!12796 = !DILocation(line: 891, column: 16, scope: !12789)
!12797 = !DILocation(line: 891, column: 21, scope: !12789)
!12798 = !DILocation(line: 891, column: 3, scope: !12789)
!12799 = !DILocation(line: 901, column: 7, scope: !12800)
!12800 = distinct !DILexicalBlock(scope: !12801, file: !12300, line: 899, column: 5)
!12801 = distinct !DILexicalBlock(scope: !12789, file: !12300, line: 892, column: 3)
!12802 = !DILocation(line: 907, column: 19, scope: !12803)
!12803 = distinct !DILexicalBlock(scope: !12801, file: !12300, line: 904, column: 5)
!12804 = !DILocation(line: 907, column: 27, scope: !12803)
!12805 = !DILocation(line: 908, column: 10, scope: !12806)
!12806 = distinct !DILexicalBlock(scope: !12803, file: !12300, line: 908, column: 10)
!12807 = !DILocation(line: 908, column: 40, scope: !12806)
!12808 = !DILocation(line: 0, scope: !12806)
!12809 = !DILocation(line: 918, column: 23, scope: !12803)
!12810 = !DILocation(line: 918, column: 82, scope: !12803)
!12811 = !DILocation(line: 920, column: 28, scope: !12803)
!12812 = !DILocation(line: 921, column: 7, scope: !12803)
!12813 = !DILocation(line: 0, scope: !12801)
!12814 = !DILocation(line: 929, column: 3, scope: !12789)
!12815 = !DISubprogram(name: "HAL_InitTick", scope: !12659, file: !12659, line: 223, type: !12816, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!12816 = !DISubroutineType(types: !12817)
!12817 = !{!12303, !113}
!12818 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !12300, file: !12300, line: 775, type: !12819, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !12821)
!12819 = !DISubroutineType(types: !12820)
!12820 = !{null, !113, !113, !113}
!12821 = !{!12822, !12823, !12824, !12825, !12835, !12839}
!12822 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12818, file: !12300, line: 775, type: !113)
!12823 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12818, file: !12300, line: 775, type: !113)
!12824 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12818, file: !12300, line: 775, type: !113)
!12825 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12818, file: !12300, line: 777, type: !12826)
!12826 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12827, line: 62, baseType: !12828)
!12827 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12828 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12827, line: 46, size: 160, elements: !12829)
!12829 = !{!12830, !12831, !12832, !12833, !12834}
!12830 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12828, file: !12827, line: 48, baseType: !113, size: 32)
!12831 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12828, file: !12827, line: 51, baseType: !113, size: 32, offset: 32)
!12832 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12828, file: !12827, line: 54, baseType: !113, size: 32, offset: 64)
!12833 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12828, file: !12827, line: 57, baseType: !113, size: 32, offset: 96)
!12834 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12828, file: !12827, line: 60, baseType: !113, size: 32, offset: 128)
!12835 = !DILocalVariable(name: "tmpreg", scope: !12836, file: !12300, line: 787, type: !572)
!12836 = distinct !DILexicalBlock(scope: !12837, file: !12300, line: 787, column: 5)
!12837 = distinct !DILexicalBlock(scope: !12838, file: !12300, line: 783, column: 3)
!12838 = distinct !DILexicalBlock(scope: !12818, file: !12300, line: 782, column: 6)
!12839 = !DILocalVariable(name: "tmpreg", scope: !12840, file: !12300, line: 811, type: !572)
!12840 = distinct !DILexicalBlock(scope: !12841, file: !12300, line: 811, column: 5)
!12841 = distinct !DILexicalBlock(scope: !12838, file: !12300, line: 807, column: 3)
!12842 = !DILocation(line: 0, scope: !12818)
!12843 = !DILocation(line: 777, column: 3, scope: !12818)
!12844 = !DILocation(line: 777, column: 20, scope: !12818)
!12845 = !DILocation(line: 782, column: 15, scope: !12838)
!12846 = !DILocation(line: 782, column: 6, scope: !12818)
!12847 = !DILocation(line: 787, column: 5, scope: !12836)
!12848 = !DILocation(line: 787, column: 5, scope: !12837)
!12849 = !DILocation(line: 790, column: 21, scope: !12837)
!12850 = !DILocation(line: 790, column: 25, scope: !12837)
!12851 = !DILocation(line: 791, column: 21, scope: !12837)
!12852 = !DILocation(line: 791, column: 26, scope: !12837)
!12853 = !DILocation(line: 792, column: 21, scope: !12837)
!12854 = !DILocation(line: 792, column: 27, scope: !12837)
!12855 = !DILocation(line: 793, column: 21, scope: !12837)
!12856 = !DILocation(line: 793, column: 26, scope: !12837)
!12857 = !DILocation(line: 794, column: 21, scope: !12837)
!12858 = !DILocation(line: 794, column: 31, scope: !12837)
!12859 = !DILocation(line: 795, column: 5, scope: !12837)
!12860 = !DILocation(line: 798, column: 5, scope: !12837)
!12861 = !DILocation(line: 804, column: 3, scope: !12837)
!12862 = !DILocation(line: 811, column: 5, scope: !12840)
!12863 = !DILocation(line: 811, column: 5, scope: !12841)
!12864 = !DILocation(line: 814, column: 21, scope: !12841)
!12865 = !DILocation(line: 814, column: 25, scope: !12841)
!12866 = !DILocation(line: 815, column: 21, scope: !12841)
!12867 = !DILocation(line: 815, column: 26, scope: !12841)
!12868 = !DILocation(line: 816, column: 21, scope: !12841)
!12869 = !DILocation(line: 816, column: 27, scope: !12841)
!12870 = !DILocation(line: 817, column: 21, scope: !12841)
!12871 = !DILocation(line: 817, column: 26, scope: !12841)
!12872 = !DILocation(line: 818, column: 21, scope: !12841)
!12873 = !DILocation(line: 818, column: 31, scope: !12841)
!12874 = !DILocation(line: 819, column: 5, scope: !12841)
!12875 = !DILocation(line: 822, column: 5, scope: !12841)
!12876 = !DILocation(line: 0, scope: !12838)
!12877 = !DILocation(line: 830, column: 1, scope: !12818)
!12878 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12827, file: !12827, line: 224, type: !12879, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!12879 = !DISubroutineType(types: !12880)
!12880 = !{null, !3297, !12881}
!12881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12826, size: 32)
!12882 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !12300, file: !12300, line: 841, type: !3413, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !437)
!12883 = !DILocation(line: 843, column: 38, scope: !12882)
!12884 = !DILocation(line: 844, column: 1, scope: !12882)
!12885 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !12300, file: !12300, line: 850, type: !3413, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !437)
!12886 = !DILocation(line: 852, column: 38, scope: !12885)
!12887 = !DILocation(line: 853, column: 1, scope: !12885)
!12888 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !12300, file: !12300, line: 941, type: !7144, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !437)
!12889 = !DILocation(line: 943, column: 10, scope: !12888)
!12890 = !DILocation(line: 943, column: 3, scope: !12888)
!12891 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !12300, file: !12300, line: 952, type: !7144, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !437)
!12892 = !DILocation(line: 955, column: 11, scope: !12891)
!12893 = !DILocation(line: 955, column: 56, scope: !12891)
!12894 = !DILocation(line: 955, column: 78, scope: !12891)
!12895 = !DILocation(line: 955, column: 36, scope: !12891)
!12896 = !DILocation(line: 955, column: 33, scope: !12891)
!12897 = !DILocation(line: 955, column: 3, scope: !12891)
!12898 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !12300, file: !12300, line: 964, type: !7144, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !437)
!12899 = !DILocation(line: 967, column: 11, scope: !12898)
!12900 = !DILocation(line: 967, column: 55, scope: !12898)
!12901 = !DILocation(line: 967, column: 77, scope: !12898)
!12902 = !DILocation(line: 967, column: 35, scope: !12898)
!12903 = !DILocation(line: 967, column: 32, scope: !12898)
!12904 = !DILocation(line: 967, column: 3, scope: !12898)
!12905 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12300, file: !12300, line: 977, type: !12906, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !12908)
!12906 = !DISubroutineType(types: !12907)
!12907 = !{null, !12308}
!12908 = !{!12909}
!12909 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12905, file: !12300, line: 977, type: !12308)
!12910 = !DILocation(line: 0, scope: !12905)
!12911 = !DILocation(line: 980, column: 22, scope: !12905)
!12912 = !DILocation(line: 980, column: 37, scope: !12905)
!12913 = !DILocation(line: 983, column: 12, scope: !12914)
!12914 = distinct !DILexicalBlock(scope: !12905, file: !12300, line: 983, column: 6)
!12915 = !DILocation(line: 983, column: 15, scope: !12914)
!12916 = !DILocation(line: 983, column: 31, scope: !12914)
!12917 = !DILocation(line: 983, column: 6, scope: !12905)
!12918 = !DILocation(line: 985, column: 24, scope: !12919)
!12919 = distinct !DILexicalBlock(scope: !12914, file: !12300, line: 984, column: 3)
!12920 = !DILocation(line: 985, column: 33, scope: !12919)
!12921 = !DILocation(line: 986, column: 3, scope: !12919)
!12922 = !DILocation(line: 987, column: 17, scope: !12923)
!12923 = distinct !DILexicalBlock(scope: !12914, file: !12300, line: 987, column: 11)
!12924 = !DILocation(line: 987, column: 20, scope: !12923)
!12925 = !DILocation(line: 987, column: 35, scope: !12923)
!12926 = !DILocation(line: 0, scope: !12923)
!12927 = !DILocation(line: 987, column: 11, scope: !12914)
!12928 = !DILocation(line: 989, column: 33, scope: !12929)
!12929 = distinct !DILexicalBlock(scope: !12923, file: !12300, line: 988, column: 3)
!12930 = !DILocation(line: 990, column: 3, scope: !12929)
!12931 = !DILocation(line: 993, column: 33, scope: !12932)
!12932 = distinct !DILexicalBlock(scope: !12923, file: !12300, line: 992, column: 3)
!12933 = !DILocation(line: 997, column: 12, scope: !12934)
!12934 = distinct !DILexicalBlock(scope: !12905, file: !12300, line: 997, column: 6)
!12935 = !DILocation(line: 997, column: 15, scope: !12934)
!12936 = !DILocation(line: 1003, column: 24, scope: !12937)
!12937 = distinct !DILexicalBlock(scope: !12934, file: !12300, line: 1002, column: 3)
!12938 = !DILocation(line: 1003, column: 33, scope: !12937)
!12939 = !DILocation(line: 1006, column: 61, scope: !12905)
!12940 = !DILocation(line: 1006, column: 81, scope: !12905)
!12941 = !DILocation(line: 1006, column: 22, scope: !12905)
!12942 = !DILocation(line: 1006, column: 42, scope: !12905)
!12943 = !DILocation(line: 1009, column: 12, scope: !12944)
!12944 = distinct !DILexicalBlock(scope: !12905, file: !12300, line: 1009, column: 6)
!12945 = !DILocation(line: 1009, column: 17, scope: !12944)
!12946 = !DILocation(line: 1009, column: 35, scope: !12944)
!12947 = !DILocation(line: 1009, column: 6, scope: !12905)
!12948 = !DILocation(line: 1011, column: 24, scope: !12949)
!12949 = distinct !DILexicalBlock(scope: !12944, file: !12300, line: 1010, column: 3)
!12950 = !DILocation(line: 1011, column: 33, scope: !12949)
!12951 = !DILocation(line: 1012, column: 3, scope: !12949)
!12952 = !DILocation(line: 1013, column: 17, scope: !12953)
!12953 = distinct !DILexicalBlock(scope: !12944, file: !12300, line: 1013, column: 11)
!12954 = !DILocation(line: 1013, column: 22, scope: !12953)
!12955 = !DILocation(line: 1013, column: 39, scope: !12953)
!12956 = !DILocation(line: 0, scope: !12953)
!12957 = !DILocation(line: 1013, column: 11, scope: !12944)
!12958 = !DILocation(line: 1015, column: 33, scope: !12959)
!12959 = distinct !DILexicalBlock(scope: !12953, file: !12300, line: 1014, column: 3)
!12960 = !DILocation(line: 1016, column: 3, scope: !12959)
!12961 = !DILocation(line: 1019, column: 33, scope: !12962)
!12962 = distinct !DILexicalBlock(scope: !12953, file: !12300, line: 1018, column: 3)
!12963 = !DILocation(line: 1023, column: 12, scope: !12964)
!12964 = distinct !DILexicalBlock(scope: !12905, file: !12300, line: 1023, column: 6)
!12965 = !DILocation(line: 1023, column: 16, scope: !12964)
!12966 = !DILocation(line: 1029, column: 24, scope: !12967)
!12967 = distinct !DILexicalBlock(scope: !12964, file: !12300, line: 1028, column: 3)
!12968 = !DILocation(line: 1029, column: 33, scope: !12967)
!12969 = !DILocation(line: 1033, column: 12, scope: !12970)
!12970 = distinct !DILexicalBlock(scope: !12905, file: !12300, line: 1033, column: 6)
!12971 = !DILocation(line: 1033, column: 15, scope: !12970)
!12972 = !DILocation(line: 1033, column: 30, scope: !12970)
!12973 = !DILocation(line: 1033, column: 6, scope: !12905)
!12974 = !DILocation(line: 1039, column: 28, scope: !12975)
!12975 = distinct !DILexicalBlock(scope: !12970, file: !12300, line: 1038, column: 3)
!12976 = !DILocation(line: 1039, column: 37, scope: !12975)
!12977 = !DILocation(line: 1041, column: 54, scope: !12905)
!12978 = !DILocation(line: 1041, column: 62, scope: !12905)
!12979 = !DILocation(line: 1041, column: 26, scope: !12905)
!12980 = !DILocation(line: 1041, column: 36, scope: !12905)
!12981 = !DILocation(line: 1042, column: 49, scope: !12905)
!12982 = !DILocation(line: 1042, column: 57, scope: !12905)
!12983 = !DILocation(line: 1042, column: 26, scope: !12905)
!12984 = !DILocation(line: 1042, column: 31, scope: !12905)
!12985 = !DILocation(line: 1043, column: 50, scope: !12905)
!12986 = !DILocation(line: 1043, column: 78, scope: !12905)
!12987 = !DILocation(line: 1043, column: 26, scope: !12905)
!12988 = !DILocation(line: 1043, column: 31, scope: !12905)
!12989 = !DILocation(line: 1044, column: 52, scope: !12905)
!12990 = !DILocation(line: 1044, column: 102, scope: !12905)
!12991 = !DILocation(line: 1044, column: 109, scope: !12905)
!12992 = !DILocation(line: 1044, column: 26, scope: !12905)
!12993 = !DILocation(line: 1044, column: 31, scope: !12905)
!12994 = !DILocation(line: 1045, column: 50, scope: !12905)
!12995 = !DILocation(line: 1045, column: 78, scope: !12905)
!12996 = !DILocation(line: 1045, column: 26, scope: !12905)
!12997 = !DILocation(line: 1045, column: 31, scope: !12905)
!12998 = !DILocation(line: 1046, column: 1, scope: !12905)
!12999 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !12300, file: !12300, line: 1056, type: !13000, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !13002)
!13000 = !DISubroutineType(types: !13001)
!13001 = !{null, !12663, !1231}
!13002 = !{!13003, !13004}
!13003 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12999, file: !12300, line: 1056, type: !12663)
!13004 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !12999, file: !12300, line: 1056, type: !1231)
!13005 = !DILocation(line: 0, scope: !12999)
!13006 = !DILocation(line: 1059, column: 22, scope: !12999)
!13007 = !DILocation(line: 1059, column: 32, scope: !12999)
!13008 = !DILocation(line: 1062, column: 53, scope: !12999)
!13009 = !DILocation(line: 1062, column: 58, scope: !12999)
!13010 = !DILocation(line: 1062, column: 22, scope: !12999)
!13011 = !DILocation(line: 1062, column: 35, scope: !12999)
!13012 = !DILocation(line: 1065, column: 54, scope: !12999)
!13013 = !DILocation(line: 1065, column: 59, scope: !12999)
!13014 = !DILocation(line: 1065, column: 22, scope: !12999)
!13015 = !DILocation(line: 1065, column: 36, scope: !12999)
!13016 = !DILocation(line: 1068, column: 55, scope: !12999)
!13017 = !DILocation(line: 1068, column: 60, scope: !12999)
!13018 = !DILocation(line: 1068, column: 22, scope: !12999)
!13019 = !DILocation(line: 1068, column: 37, scope: !12999)
!13020 = !DILocation(line: 1071, column: 56, scope: !12999)
!13021 = !DILocation(line: 1071, column: 79, scope: !12999)
!13022 = !DILocation(line: 1071, column: 22, scope: !12999)
!13023 = !DILocation(line: 1071, column: 37, scope: !12999)
!13024 = !DILocation(line: 1074, column: 34, scope: !12999)
!13025 = !DILocation(line: 1074, column: 38, scope: !12999)
!13026 = !DILocation(line: 1074, column: 14, scope: !12999)
!13027 = !DILocation(line: 1075, column: 1, scope: !12999)
!13028 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !12300, file: !12300, line: 1082, type: !3413, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !437)
!13029 = !DILocation(line: 1085, column: 6, scope: !13030)
!13030 = distinct !DILexicalBlock(scope: !13028, file: !12300, line: 1085, column: 6)
!13031 = !DILocation(line: 1085, column: 6, scope: !13028)
!13032 = !DILocation(line: 1088, column: 5, scope: !13033)
!13033 = distinct !DILexicalBlock(scope: !13030, file: !12300, line: 1086, column: 3)
!13034 = !DILocation(line: 1091, column: 5, scope: !13033)
!13035 = !DILocation(line: 1092, column: 3, scope: !13033)
!13036 = !DILocation(line: 1093, column: 1, scope: !13028)
!13037 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !12300, file: !12300, line: 1099, type: !3413, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !437)
!13038 = !DILocation(line: 1104, column: 1, scope: !13037)
!13039 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !13040, file: !13040, line: 257, type: !7154, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !13041)
!13040 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13041 = !{!13042}
!13042 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13039, file: !13040, line: 257, type: !113)
!13043 = !DILocation(line: 0, scope: !13039)
!13044 = !DILocation(line: 260, column: 3, scope: !13039)
!13045 = !DILocation(line: 261, column: 1, scope: !13039)
!13046 = distinct !DISubprogram(name: "LL_InitTick", scope: !13047, file: !13047, line: 260, type: !10695, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !13048)
!13047 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13048 = !{!13049, !13050}
!13049 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13046, file: !13047, line: 260, type: !113)
!13050 = !DILocalVariable(name: "Ticks", arg: 2, scope: !13046, file: !13047, line: 260, type: !113)
!13051 = !DILocation(line: 0, scope: !13046)
!13052 = !DILocation(line: 263, column: 46, scope: !13046)
!13053 = !DILocation(line: 263, column: 55, scope: !13046)
!13054 = !DILocation(line: 263, column: 18, scope: !13046)
!13055 = !DILocation(line: 264, column: 18, scope: !13046)
!13056 = !DILocation(line: 265, column: 18, scope: !13046)
!13057 = !DILocation(line: 267, column: 1, scope: !13046)
!13058 = distinct !DISubprogram(name: "LL_mDelay", scope: !13040, file: !13040, line: 273, type: !7154, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !13059)
!13059 = !{!13060, !13061}
!13060 = !DILocalVariable(name: "Delay", arg: 1, scope: !13058, file: !13040, line: 273, type: !113)
!13061 = !DILocalVariable(name: "tmp", scope: !13058, file: !13040, line: 275, type: !572)
!13062 = !DILocation(line: 0, scope: !13058)
!13063 = !DILocation(line: 275, column: 3, scope: !13058)
!13064 = !DILocation(line: 275, column: 18, scope: !13058)
!13065 = !DILocation(line: 275, column: 33, scope: !13058)
!13066 = !DILocation(line: 277, column: 10, scope: !13058)
!13067 = !DILocation(line: 280, column: 12, scope: !13068)
!13068 = distinct !DILexicalBlock(scope: !13058, file: !13040, line: 280, column: 6)
!13069 = !DILocation(line: 285, column: 3, scope: !13058)
!13070 = !DILocation(line: 287, column: 18, scope: !13071)
!13071 = distinct !DILexicalBlock(scope: !13072, file: !13040, line: 287, column: 8)
!13072 = distinct !DILexicalBlock(scope: !13058, file: !13040, line: 286, column: 3)
!13073 = !DILocation(line: 292, column: 1, scope: !13058)
!13074 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !13040, file: !13040, line: 323, type: !7154, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !13075)
!13075 = !{!13076}
!13076 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13074, file: !13040, line: 323, type: !113)
!13077 = !DILocation(line: 0, scope: !13074)
!13078 = !DILocation(line: 326, column: 19, scope: !13074)
!13079 = !DILocation(line: 327, column: 1, scope: !13074)
!13080 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !13040, file: !13040, line: 338, type: !13081, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !13084)
!13081 = !DISubroutineType(types: !13082)
!13082 = !{!13083, !113}
!13083 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !1178, line: 201, baseType: !1177)
!13084 = !{!13085, !13086, !13087, !13088, !13089}
!13085 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !13080, file: !13040, line: 338, type: !113)
!13086 = !DILocalVariable(name: "timeout", scope: !13080, file: !13040, line: 340, type: !113)
!13087 = !DILocalVariable(name: "getlatency", scope: !13080, file: !13040, line: 341, type: !113)
!13088 = !DILocalVariable(name: "latency", scope: !13080, file: !13040, line: 342, type: !113)
!13089 = !DILocalVariable(name: "status", scope: !13080, file: !13040, line: 343, type: !13083)
!13090 = !DILocation(line: 0, scope: !13080)
!13091 = !DILocation(line: 347, column: 21, scope: !13092)
!13092 = distinct !DILexicalBlock(scope: !13080, file: !13040, line: 347, column: 6)
!13093 = !DILocation(line: 347, column: 6, scope: !13080)
!13094 = !DILocation(line: 353, column: 8, scope: !13095)
!13095 = distinct !DILexicalBlock(scope: !13096, file: !13040, line: 353, column: 8)
!13096 = distinct !DILexicalBlock(scope: !13092, file: !13040, line: 352, column: 3)
!13097 = !DILocation(line: 353, column: 40, scope: !13095)
!13098 = !DILocation(line: 353, column: 8, scope: !13096)
!13099 = !DILocation(line: 356, column: 26, scope: !13100)
!13100 = distinct !DILexicalBlock(scope: !13101, file: !13040, line: 356, column: 10)
!13101 = distinct !DILexicalBlock(scope: !13095, file: !13040, line: 354, column: 5)
!13102 = !DILocation(line: 356, column: 55, scope: !13100)
!13103 = !DILocation(line: 362, column: 55, scope: !13104)
!13104 = distinct !DILexicalBlock(scope: !13101, file: !13040, line: 362, column: 10)
!13105 = !DILocation(line: 368, column: 55, scope: !13106)
!13106 = distinct !DILexicalBlock(scope: !13101, file: !13040, line: 368, column: 10)
!13107 = !DILocation(line: 374, column: 26, scope: !13108)
!13108 = distinct !DILexicalBlock(scope: !13101, file: !13040, line: 374, column: 10)
!13109 = !DILocation(line: 374, column: 55, scope: !13108)
!13110 = !DILocation(line: 380, column: 28, scope: !13111)
!13111 = distinct !DILexicalBlock(scope: !13112, file: !13040, line: 380, column: 12)
!13112 = distinct !DILexicalBlock(scope: !13108, file: !13040, line: 379, column: 7)
!13113 = !DILocation(line: 380, column: 57, scope: !13111)
!13114 = !DILocation(line: 387, column: 8, scope: !13115)
!13115 = distinct !DILexicalBlock(scope: !13096, file: !13040, line: 387, column: 8)
!13116 = !DILocation(line: 387, column: 40, scope: !13115)
!13117 = !DILocation(line: 387, column: 8, scope: !13096)
!13118 = !DILocation(line: 396, column: 26, scope: !13119)
!13119 = distinct !DILexicalBlock(scope: !13120, file: !13040, line: 396, column: 10)
!13120 = distinct !DILexicalBlock(scope: !13115, file: !13040, line: 388, column: 5)
!13121 = !DILocation(line: 396, column: 55, scope: !13119)
!13122 = !DILocation(line: 402, column: 26, scope: !13123)
!13123 = distinct !DILexicalBlock(scope: !13120, file: !13040, line: 402, column: 10)
!13124 = !DILocation(line: 402, column: 55, scope: !13123)
!13125 = !DILocation(line: 407, column: 26, scope: !13126)
!13126 = distinct !DILexicalBlock(scope: !13120, file: !13040, line: 407, column: 10)
!13127 = !DILocation(line: 407, column: 55, scope: !13126)
!13128 = !DILocation(line: 413, column: 28, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13130, file: !13040, line: 413, column: 12)
!13130 = distinct !DILexicalBlock(scope: !13126, file: !13040, line: 412, column: 7)
!13131 = !DILocation(line: 413, column: 57, scope: !13129)
!13132 = !DILocation(line: 0, scope: !13096)
!13133 = !DILocation(line: 444, column: 5, scope: !13096)
!13134 = !DILocation(line: 448, column: 5, scope: !13096)
!13135 = !DILocation(line: 451, column: 18, scope: !13136)
!13136 = distinct !DILexicalBlock(scope: !13096, file: !13040, line: 449, column: 5)
!13137 = !DILocation(line: 452, column: 12, scope: !13136)
!13138 = !DILocation(line: 453, column: 26, scope: !13096)
!13139 = !DILocation(line: 453, column: 38, scope: !13096)
!13140 = !DILocation(line: 453, column: 5, scope: !13136)
!13141 = distinct !{!13141, !13134, !13142}
!13142 = !DILocation(line: 453, column: 54, scope: !13096)
!13143 = !DILocation(line: 0, scope: !13092)
!13144 = !DILocation(line: 464, column: 3, scope: !13080)
!13145 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !13146, file: !13146, line: 519, type: !7144, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !437)
!13146 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13147 = !DILocation(line: 521, column: 21, scope: !13145)
!13148 = !DILocation(line: 521, column: 3, scope: !13145)
!13149 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6766, file: !6766, line: 1543, type: !7154, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !13150)
!13150 = !{!13151}
!13151 = !DILocalVariable(name: "Latency", arg: 1, scope: !13149, file: !6766, line: 1543, type: !113)
!13152 = !DILocation(line: 0, scope: !13149)
!13153 = !DILocation(line: 1545, column: 3, scope: !13149)
!13154 = !DILocation(line: 1546, column: 1, scope: !13149)
!13155 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6766, file: !6766, line: 1569, type: !7144, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !437)
!13156 = !DILocation(line: 1571, column: 21, scope: !13155)
!13157 = !DILocation(line: 1571, column: 3, scope: !13155)
!13158 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !13040, file: !13040, line: 483, type: !13159, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !13175)
!13159 = !DISubroutineType(types: !13160)
!13160 = !{!13083, !13161, !13168}
!13161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13162, size: 32)
!13162 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !13047, line: 114, baseType: !13163)
!13163 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13047, line: 94, size: 96, elements: !13164)
!13164 = !{!13165, !13166, !13167}
!13165 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13163, file: !13047, line: 96, baseType: !113, size: 32)
!13166 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13163, file: !13047, line: 102, baseType: !113, size: 32, offset: 32)
!13167 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13163, file: !13047, line: 109, baseType: !113, size: 32, offset: 64)
!13168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13169, size: 32)
!13169 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !13047, line: 139, baseType: !13170)
!13170 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13047, line: 119, size: 96, elements: !13171)
!13171 = !{!13172, !13173, !13174}
!13172 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13170, file: !13047, line: 121, baseType: !113, size: 32)
!13173 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13170, file: !13047, line: 127, baseType: !113, size: 32, offset: 32)
!13174 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13170, file: !13047, line: 133, baseType: !113, size: 32, offset: 64)
!13175 = !{!13176, !13177, !13178, !13179}
!13176 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !13158, file: !13040, line: 483, type: !13161)
!13177 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13158, file: !13040, line: 484, type: !13168)
!13178 = !DILocalVariable(name: "status", scope: !13158, file: !13040, line: 486, type: !13083)
!13179 = !DILocalVariable(name: "pllfreq", scope: !13158, file: !13040, line: 487, type: !113)
!13180 = !DILocation(line: 0, scope: !13158)
!13181 = !DILocation(line: 490, column: 6, scope: !13182)
!13182 = distinct !DILexicalBlock(scope: !13158, file: !13040, line: 490, column: 6)
!13183 = !DILocation(line: 490, column: 25, scope: !13182)
!13184 = !DILocation(line: 490, column: 6, scope: !13158)
!13185 = !DILocation(line: 493, column: 15, scope: !13186)
!13186 = distinct !DILexicalBlock(scope: !13182, file: !13040, line: 491, column: 3)
!13187 = !DILocation(line: 496, column: 8, scope: !13188)
!13188 = distinct !DILexicalBlock(scope: !13186, file: !13040, line: 496, column: 8)
!13189 = !DILocation(line: 496, column: 29, scope: !13188)
!13190 = !DILocation(line: 496, column: 8, scope: !13186)
!13191 = !DILocation(line: 498, column: 7, scope: !13192)
!13192 = distinct !DILexicalBlock(scope: !13188, file: !13040, line: 497, column: 5)
!13193 = !DILocation(line: 499, column: 7, scope: !13192)
!13194 = !DILocation(line: 499, column: 14, scope: !13192)
!13195 = !DILocation(line: 499, column: 35, scope: !13192)
!13196 = distinct !{!13196, !13193, !13197}
!13197 = !DILocation(line: 502, column: 7, scope: !13192)
!13198 = !DILocation(line: 506, column: 76, scope: !13186)
!13199 = !DILocation(line: 506, column: 103, scope: !13186)
!13200 = !DILocation(line: 507, column: 54, scope: !13186)
!13201 = !DILocation(line: 506, column: 5, scope: !13186)
!13202 = !DILocation(line: 510, column: 14, scope: !13186)
!13203 = !DILocation(line: 511, column: 3, scope: !13186)
!13204 = !DILocation(line: 0, scope: !13182)
!13205 = !DILocation(line: 518, column: 3, scope: !13158)
!13206 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !13040, file: !13040, line: 642, type: !13207, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !13209)
!13207 = !DISubroutineType(types: !13208)
!13208 = !{!13083}
!13209 = !{!13210}
!13210 = !DILocalVariable(name: "status", scope: !13206, file: !13040, line: 644, type: !13083)
!13211 = !DILocation(line: 0, scope: !13206)
!13212 = !DILocation(line: 647, column: 6, scope: !13213)
!13213 = distinct !DILexicalBlock(scope: !13206, file: !13040, line: 647, column: 6)
!13214 = !DILocation(line: 647, column: 27, scope: !13213)
!13215 = !DILocation(line: 663, column: 6, scope: !13216)
!13216 = distinct !DILexicalBlock(scope: !13206, file: !13040, line: 663, column: 6)
!13217 = !DILocation(line: 663, column: 30, scope: !13216)
!13218 = !DILocation(line: 663, column: 6, scope: !13206)
!13219 = !DILocation(line: 669, column: 3, scope: !13206)
!13220 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !13040, file: !13040, line: 611, type: !13221, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !13223)
!13221 = !DISubroutineType(types: !13222)
!13222 = !{!113, !113, !13161}
!13223 = !{!13224, !13225, !13226}
!13224 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13220, file: !13040, line: 611, type: !113)
!13225 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13220, file: !13040, line: 611, type: !13161)
!13226 = !DILocalVariable(name: "pllfreq", scope: !13220, file: !13040, line: 613, type: !113)
!13227 = !DILocation(line: 0, scope: !13220)
!13228 = !DILocation(line: 622, column: 56, scope: !13220)
!13229 = !DILocation(line: 622, column: 61, scope: !13220)
!13230 = !DILocation(line: 622, column: 32, scope: !13220)
!13231 = !DILocation(line: 626, column: 45, scope: !13220)
!13232 = !DILocation(line: 626, column: 50, scope: !13220)
!13233 = !DILocation(line: 626, column: 21, scope: !13220)
!13234 = !DILocation(line: 630, column: 47, scope: !13220)
!13235 = !DILocation(line: 630, column: 82, scope: !13220)
!13236 = !DILocation(line: 630, column: 21, scope: !13220)
!13237 = !DILocation(line: 633, column: 3, scope: !13220)
!13238 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10035, file: !10035, line: 3007, type: !7144, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !437)
!13239 = !DILocation(line: 3009, column: 11, scope: !13238)
!13240 = !DILocation(line: 3009, column: 44, scope: !13238)
!13241 = !DILocation(line: 3009, column: 3, scope: !13238)
!13242 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10035, file: !10035, line: 2987, type: !3413, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !437)
!13243 = !DILocation(line: 2989, column: 3, scope: !13242)
!13244 = !DILocation(line: 2990, column: 1, scope: !13242)
!13245 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10035, file: !10035, line: 4304, type: !10169, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !13246)
!13246 = !{!13247, !13248, !13249, !13250}
!13247 = !DILocalVariable(name: "Source", arg: 1, scope: !13245, file: !10035, line: 4304, type: !113)
!13248 = !DILocalVariable(name: "PLLM", arg: 2, scope: !13245, file: !10035, line: 4304, type: !113)
!13249 = !DILocalVariable(name: "PLLN", arg: 3, scope: !13245, file: !10035, line: 4304, type: !113)
!13250 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !13245, file: !10035, line: 4304, type: !113)
!13251 = !DILocation(line: 0, scope: !13245)
!13252 = !DILocation(line: 4306, column: 3, scope: !13245)
!13253 = !DILocation(line: 4308, column: 3, scope: !13245)
!13254 = !DILocation(line: 4312, column: 1, scope: !13245)
!13255 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !13040, file: !13040, line: 681, type: !13256, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !13258)
!13256 = !DISubroutineType(types: !13257)
!13257 = !{!13083, !113, !13168}
!13258 = !{!13259, !13260, !13261, !13262}
!13259 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13255, file: !13040, line: 681, type: !113)
!13260 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13255, file: !13040, line: 681, type: !13168)
!13261 = !DILocalVariable(name: "status", scope: !13255, file: !13040, line: 683, type: !13083)
!13262 = !DILocalVariable(name: "hclk_frequency", scope: !13255, file: !13040, line: 684, type: !113)
!13263 = !DILocation(line: 0, scope: !13255)
!13264 = !DILocation(line: 691, column: 20, scope: !13255)
!13265 = !DILocation(line: 694, column: 6, scope: !13266)
!13266 = distinct !DILexicalBlock(scope: !13255, file: !13040, line: 694, column: 6)
!13267 = !DILocation(line: 694, column: 22, scope: !13266)
!13268 = !DILocation(line: 694, column: 6, scope: !13255)
!13269 = !DILocation(line: 697, column: 14, scope: !13270)
!13270 = distinct !DILexicalBlock(scope: !13266, file: !13040, line: 695, column: 3)
!13271 = !DILocation(line: 701, column: 13, scope: !13272)
!13272 = distinct !DILexicalBlock(scope: !13255, file: !13040, line: 701, column: 6)
!13273 = !DILocation(line: 701, column: 6, scope: !13255)
!13274 = !DILocation(line: 704, column: 5, scope: !13275)
!13275 = distinct !DILexicalBlock(scope: !13272, file: !13040, line: 702, column: 3)
!13276 = !DILocation(line: 705, column: 5, scope: !13275)
!13277 = !DILocation(line: 705, column: 12, scope: !13275)
!13278 = !DILocation(line: 705, column: 33, scope: !13275)
!13279 = distinct !{!13279, !13276, !13280}
!13280 = !DILocation(line: 708, column: 5, scope: !13275)
!13281 = !DILocation(line: 711, column: 49, scope: !13275)
!13282 = !DILocation(line: 711, column: 5, scope: !13275)
!13283 = !DILocation(line: 712, column: 5, scope: !13275)
!13284 = !DILocation(line: 713, column: 5, scope: !13275)
!13285 = !DILocation(line: 713, column: 12, scope: !13275)
!13286 = !DILocation(line: 713, column: 37, scope: !13275)
!13287 = distinct !{!13287, !13284, !13288}
!13288 = !DILocation(line: 716, column: 5, scope: !13275)
!13289 = !DILocation(line: 719, column: 50, scope: !13275)
!13290 = !DILocation(line: 719, column: 5, scope: !13275)
!13291 = !DILocation(line: 720, column: 50, scope: !13275)
!13292 = !DILocation(line: 720, column: 5, scope: !13275)
!13293 = !DILocation(line: 721, column: 3, scope: !13275)
!13294 = !DILocation(line: 724, column: 6, scope: !13295)
!13295 = distinct !DILexicalBlock(scope: !13255, file: !13040, line: 724, column: 6)
!13296 = !DILocation(line: 724, column: 22, scope: !13295)
!13297 = !DILocation(line: 724, column: 6, scope: !13255)
!13298 = !DILocation(line: 727, column: 14, scope: !13299)
!13299 = distinct !DILexicalBlock(scope: !13295, file: !13040, line: 725, column: 3)
!13300 = !DILocation(line: 728, column: 3, scope: !13299)
!13301 = !DILocation(line: 731, column: 13, scope: !13302)
!13302 = distinct !DILexicalBlock(scope: !13255, file: !13040, line: 731, column: 6)
!13303 = !DILocation(line: 731, column: 6, scope: !13255)
!13304 = !DILocation(line: 733, column: 5, scope: !13305)
!13305 = distinct !DILexicalBlock(scope: !13302, file: !13040, line: 732, column: 3)
!13306 = !DILocation(line: 734, column: 3, scope: !13305)
!13307 = !DILocation(line: 736, column: 3, scope: !13255)
!13308 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10035, file: !10035, line: 4184, type: !3413, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !437)
!13309 = !DILocation(line: 4186, column: 3, scope: !13308)
!13310 = !DILocation(line: 4187, column: 1, scope: !13308)
!13311 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10035, file: !10035, line: 4205, type: !7144, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !437)
!13312 = !DILocation(line: 4207, column: 11, scope: !13311)
!13313 = !DILocation(line: 4207, column: 44, scope: !13311)
!13314 = !DILocation(line: 4207, column: 3, scope: !13311)
!13315 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10035, file: !10035, line: 3224, type: !7154, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !13316)
!13316 = !{!13317}
!13317 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13315, file: !10035, line: 3224, type: !113)
!13318 = !DILocation(line: 0, scope: !13315)
!13319 = !DILocation(line: 3226, column: 3, scope: !13315)
!13320 = !DILocation(line: 3227, column: 1, scope: !13315)
!13321 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10035, file: !10035, line: 3188, type: !7154, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !13322)
!13322 = !{!13323}
!13323 = !DILocalVariable(name: "Source", arg: 1, scope: !13321, file: !10035, line: 3188, type: !113)
!13324 = !DILocation(line: 0, scope: !13321)
!13325 = !DILocation(line: 3190, column: 3, scope: !13321)
!13326 = !DILocation(line: 3191, column: 1, scope: !13321)
!13327 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10035, file: !10035, line: 3204, type: !7144, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !437)
!13328 = !DILocation(line: 3206, column: 21, scope: !13327)
!13329 = !DILocation(line: 3206, column: 3, scope: !13327)
!13330 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10035, file: !10035, line: 3240, type: !7154, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !13331)
!13331 = !{!13332}
!13332 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13330, file: !10035, line: 3240, type: !113)
!13333 = !DILocation(line: 0, scope: !13330)
!13334 = !DILocation(line: 3242, column: 3, scope: !13330)
!13335 = !DILocation(line: 3243, column: 1, scope: !13330)
!13336 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10035, file: !10035, line: 3256, type: !7154, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !13337)
!13337 = !{!13338}
!13338 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13336, file: !10035, line: 3256, type: !113)
!13339 = !DILocation(line: 0, scope: !13336)
!13340 = !DILocation(line: 3258, column: 3, scope: !13336)
!13341 = !DILocation(line: 3259, column: 1, scope: !13336)
!13342 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !10035, file: !10035, line: 5153, type: !7144, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !437)
!13343 = !DILocation(line: 5155, column: 11, scope: !13342)
!13344 = !DILocation(line: 5155, column: 47, scope: !13342)
!13345 = !DILocation(line: 5155, column: 3, scope: !13342)
!13346 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !13040, file: !13040, line: 540, type: !13347, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !13349)
!13347 = !DISubroutineType(types: !13348)
!13348 = !{!13083, !113, !113, !13161, !13168}
!13349 = !{!13350, !13351, !13352, !13353, !13354, !13355}
!13350 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13346, file: !13040, line: 540, type: !113)
!13351 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13346, file: !13040, line: 540, type: !113)
!13352 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13346, file: !13040, line: 541, type: !13161)
!13353 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13346, file: !13040, line: 541, type: !13168)
!13354 = !DILocalVariable(name: "status", scope: !13346, file: !13040, line: 543, type: !13083)
!13355 = !DILocalVariable(name: "pllfreq", scope: !13346, file: !13040, line: 544, type: !113)
!13356 = !DILocation(line: 0, scope: !13346)
!13357 = !DILocation(line: 551, column: 6, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13346, file: !13040, line: 551, column: 6)
!13359 = !DILocation(line: 551, column: 25, scope: !13358)
!13360 = !DILocation(line: 551, column: 6, scope: !13346)
!13361 = !DILocation(line: 554, column: 15, scope: !13362)
!13362 = distinct !DILexicalBlock(scope: !13358, file: !13040, line: 552, column: 3)
!13363 = !DILocation(line: 557, column: 8, scope: !13364)
!13364 = distinct !DILexicalBlock(scope: !13362, file: !13040, line: 557, column: 8)
!13365 = !DILocation(line: 557, column: 29, scope: !13364)
!13366 = !DILocation(line: 557, column: 8, scope: !13362)
!13367 = !DILocation(line: 560, column: 20, scope: !13368)
!13368 = distinct !DILexicalBlock(scope: !13369, file: !13040, line: 560, column: 10)
!13369 = distinct !DILexicalBlock(scope: !13364, file: !13040, line: 558, column: 5)
!13370 = !DILocation(line: 560, column: 10, scope: !13369)
!13371 = !DILocation(line: 562, column: 9, scope: !13372)
!13372 = distinct !DILexicalBlock(scope: !13368, file: !13040, line: 561, column: 7)
!13373 = !DILocation(line: 563, column: 7, scope: !13372)
!13374 = !DILocation(line: 566, column: 9, scope: !13375)
!13375 = distinct !DILexicalBlock(scope: !13368, file: !13040, line: 565, column: 7)
!13376 = !DILocation(line: 570, column: 7, scope: !13369)
!13377 = !DILocation(line: 571, column: 7, scope: !13369)
!13378 = !DILocation(line: 571, column: 14, scope: !13369)
!13379 = !DILocation(line: 571, column: 35, scope: !13369)
!13380 = distinct !{!13380, !13377, !13381}
!13381 = !DILocation(line: 574, column: 7, scope: !13369)
!13382 = !DILocation(line: 578, column: 76, scope: !13362)
!13383 = !DILocation(line: 578, column: 103, scope: !13362)
!13384 = !DILocation(line: 579, column: 54, scope: !13362)
!13385 = !DILocation(line: 578, column: 5, scope: !13362)
!13386 = !DILocation(line: 582, column: 14, scope: !13362)
!13387 = !DILocation(line: 583, column: 3, scope: !13362)
!13388 = !DILocation(line: 0, scope: !13358)
!13389 = !DILocation(line: 590, column: 3, scope: !13346)
!13390 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10035, file: !10035, line: 2969, type: !7144, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !437)
!13391 = !DILocation(line: 2971, column: 11, scope: !13390)
!13392 = !DILocation(line: 2971, column: 44, scope: !13390)
!13393 = !DILocation(line: 2971, column: 3, scope: !13390)
!13394 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !10035, file: !10035, line: 2929, type: !3413, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !437)
!13395 = !DILocation(line: 2931, column: 3, scope: !13394)
!13396 = !DILocation(line: 2932, column: 1, scope: !13394)
!13397 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10035, file: !10035, line: 2939, type: !3413, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !437)
!13398 = !DILocation(line: 2941, column: 3, scope: !13397)
!13399 = !DILocation(line: 2942, column: 1, scope: !13397)
!13400 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10035, file: !10035, line: 2949, type: !3413, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !437)
!13401 = !DILocation(line: 2951, column: 3, scope: !13400)
!13402 = !DILocation(line: 2952, column: 1, scope: !13400)
!13403 = distinct !DISubprogram(name: "z_device_state_init", scope: !13404, file: !13404, line: 23, type: !3413, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3373, retainedNodes: !13405)
!13404 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13405 = !{!13406}
!13406 = !DILocalVariable(name: "dev", scope: !13403, file: !13404, line: 25, type: !13407)
!13407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13408, size: 32)
!13408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13409)
!13409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !13410)
!13410 = !{!13411, !13412, !13413, !13414, !13420, !13421}
!13411 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13409, file: !411, line: 380, baseType: !105, size: 32)
!13412 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13409, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!13413 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13409, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!13414 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13409, file: !411, line: 386, baseType: !13415, size: 32, offset: 96)
!13415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13416, size: 32)
!13416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !13417)
!13417 = !{!13418, !13419}
!13418 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13416, file: !411, line: 359, baseType: !164, size: 8)
!13419 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13416, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13420 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13409, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!13421 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13409, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!13422 = !DILocation(line: 0, scope: !13403)
!13423 = !DILocation(line: 31, column: 1, scope: !13403)
!13424 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13404, file: !13404, line: 33, type: !13425, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3373, retainedNodes: !13427)
!13425 = !DISubroutineType(types: !13426)
!13426 = !{!13407, !105}
!13427 = !{!13428, !13429}
!13428 = !DILocalVariable(name: "name", arg: 1, scope: !13424, file: !13404, line: 33, type: !105)
!13429 = !DILocalVariable(name: "dev", scope: !13424, file: !13404, line: 35, type: !13407)
!13430 = !DILocation(line: 0, scope: !13424)
!13431 = !DILocation(line: 40, column: 12, scope: !13432)
!13432 = distinct !DILexicalBlock(scope: !13424, file: !13404, line: 40, column: 6)
!13433 = !DILocation(line: 40, column: 21, scope: !13432)
!13434 = !DILocation(line: 40, column: 25, scope: !13432)
!13435 = !DILocation(line: 40, column: 33, scope: !13432)
!13436 = !DILocation(line: 40, column: 6, scope: !13424)
!13437 = !DILocation(line: 55, column: 2, scope: !13438)
!13438 = distinct !DILexicalBlock(scope: !13424, file: !13404, line: 55, column: 2)
!13439 = !DILocation(line: 50, column: 7, scope: !13440)
!13440 = distinct !DILexicalBlock(scope: !13441, file: !13404, line: 50, column: 7)
!13441 = distinct !DILexicalBlock(scope: !13442, file: !13404, line: 49, column: 57)
!13442 = distinct !DILexicalBlock(scope: !13443, file: !13404, line: 49, column: 2)
!13443 = distinct !DILexicalBlock(scope: !13424, file: !13404, line: 49, column: 2)
!13444 = !DILocation(line: 50, column: 30, scope: !13440)
!13445 = !DILocation(line: 50, column: 39, scope: !13440)
!13446 = !DILocation(line: 50, column: 44, scope: !13440)
!13447 = !DILocation(line: 50, column: 7, scope: !13441)
!13448 = !DILocation(line: 49, column: 53, scope: !13442)
!13449 = !DILocation(line: 49, column: 33, scope: !13442)
!13450 = !DILocation(line: 49, column: 2, scope: !13443)
!13451 = distinct !{!13451, !13450, !13452}
!13452 = !DILocation(line: 53, column: 2, scope: !13443)
!13453 = !DILocation(line: 56, column: 7, scope: !13454)
!13454 = distinct !DILexicalBlock(scope: !13455, file: !13404, line: 56, column: 7)
!13455 = distinct !DILexicalBlock(scope: !13456, file: !13404, line: 55, column: 57)
!13456 = distinct !DILexicalBlock(scope: !13438, file: !13404, line: 55, column: 2)
!13457 = !DILocation(line: 56, column: 30, scope: !13454)
!13458 = !DILocation(line: 56, column: 52, scope: !13454)
!13459 = !DILocation(line: 56, column: 34, scope: !13454)
!13460 = !DILocation(line: 56, column: 58, scope: !13454)
!13461 = !DILocation(line: 56, column: 7, scope: !13455)
!13462 = !DILocation(line: 55, column: 53, scope: !13456)
!13463 = !DILocation(line: 55, column: 33, scope: !13456)
!13464 = distinct !{!13464, !13437, !13465}
!13465 = !DILocation(line: 59, column: 2, scope: !13438)
!13466 = !DILocation(line: 62, column: 1, scope: !13424)
!13467 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13404, file: !13404, line: 93, type: !13468, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3373, retainedNodes: !13470)
!13468 = !DISubroutineType(types: !13469)
!13469 = !{!422, !13407}
!13470 = !{!13471}
!13471 = !DILocalVariable(name: "dev", arg: 1, scope: !13467, file: !13404, line: 93, type: !13407)
!13472 = !DILocation(line: 0, scope: !13467)
!13473 = !DILocation(line: 99, column: 10, scope: !13474)
!13474 = distinct !DILexicalBlock(scope: !13467, file: !13404, line: 99, column: 6)
!13475 = !DILocation(line: 99, column: 6, scope: !13467)
!13476 = !DILocation(line: 103, column: 14, scope: !13467)
!13477 = !DILocation(line: 103, column: 21, scope: !13467)
!13478 = !DILocation(line: 103, column: 33, scope: !13467)
!13479 = !DILocation(line: 103, column: 49, scope: !13467)
!13480 = !DILocation(line: 103, column: 58, scope: !13467)
!13481 = !DILocation(line: 104, column: 1, scope: !13467)
!13482 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13404, file: !13404, line: 87, type: !13483, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3373, retainedNodes: !13486)
!13483 = !DISubroutineType(types: !13484)
!13484 = !{!439, !13485}
!13485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13407, size: 32)
!13486 = !{!13487}
!13487 = !DILocalVariable(name: "devices", arg: 1, scope: !13482, file: !13404, line: 87, type: !13485)
!13488 = !DILocation(line: 0, scope: !13482)
!13489 = !DILocation(line: 89, column: 11, scope: !13482)
!13490 = !DILocation(line: 90, column: 2, scope: !13482)
!13491 = distinct !DISubprogram(name: "device_required_foreach", scope: !13404, file: !13404, line: 125, type: !13492, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3373, retainedNodes: !13498)
!13492 = !DISubroutineType(types: !13493)
!13493 = !{!108, !13407, !13494, !104}
!13494 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !411, line: 471, baseType: !13495)
!13495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13496, size: 32)
!13496 = !DISubroutineType(types: !13497)
!13497 = !{!108, !13407, !104}
!13498 = !{!13499, !13500, !13501, !13502, !13503}
!13499 = !DILocalVariable(name: "dev", arg: 1, scope: !13491, file: !13404, line: 125, type: !13407)
!13500 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13491, file: !13404, line: 126, type: !13494)
!13501 = !DILocalVariable(name: "context", arg: 3, scope: !13491, file: !13404, line: 127, type: !104)
!13502 = !DILocalVariable(name: "handle_count", scope: !13491, file: !13404, line: 129, type: !439)
!13503 = !DILocalVariable(name: "handles", scope: !13491, file: !13404, line: 130, type: !425)
!13504 = !DILocation(line: 0, scope: !13491)
!13505 = !DILocation(line: 129, column: 2, scope: !13491)
!13506 = !DILocation(line: 129, column: 9, scope: !13491)
!13507 = !DILocation(line: 130, column: 35, scope: !13491)
!13508 = !DILocation(line: 132, column: 33, scope: !13491)
!13509 = !DILocation(line: 132, column: 9, scope: !13491)
!13510 = !DILocation(line: 133, column: 1, scope: !13491)
!13511 = !DILocation(line: 132, column: 2, scope: !13491)
!13512 = distinct !DISubprogram(name: "device_required_handles_get", scope: !411, file: !411, line: 493, type: !13513, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3373, retainedNodes: !13515)
!13513 = !DISubroutineType(types: !13514)
!13514 = !{!425, !13407, !2871}
!13515 = !{!13516, !13517, !13518, !13519}
!13516 = !DILocalVariable(name: "dev", arg: 1, scope: !13512, file: !411, line: 493, type: !13407)
!13517 = !DILocalVariable(name: "count", arg: 2, scope: !13512, file: !411, line: 493, type: !2871)
!13518 = !DILocalVariable(name: "rv", scope: !13512, file: !411, line: 495, type: !425)
!13519 = !DILocalVariable(name: "i", scope: !13520, file: !411, line: 498, type: !439)
!13520 = distinct !DILexicalBlock(scope: !13521, file: !411, line: 497, column: 18)
!13521 = distinct !DILexicalBlock(scope: !13512, file: !411, line: 497, column: 6)
!13522 = !DILocation(line: 0, scope: !13512)
!13523 = !DILocation(line: 495, column: 35, scope: !13512)
!13524 = !DILocation(line: 497, column: 9, scope: !13521)
!13525 = !DILocation(line: 497, column: 6, scope: !13512)
!13526 = !DILocation(line: 0, scope: !13520)
!13527 = !DILocation(line: 500, column: 11, scope: !13520)
!13528 = !DILocation(line: 500, column: 40, scope: !13520)
!13529 = !DILocation(line: 502, column: 4, scope: !13530)
!13530 = distinct !DILexicalBlock(scope: !13520, file: !411, line: 501, column: 40)
!13531 = distinct !{!13531, !13532, !13533}
!13532 = !DILocation(line: 500, column: 3, scope: !13520)
!13533 = !DILocation(line: 503, column: 3, scope: !13520)
!13534 = !DILocation(line: 504, column: 10, scope: !13520)
!13535 = !DILocation(line: 505, column: 2, scope: !13520)
!13536 = !DILocation(line: 507, column: 2, scope: !13512)
!13537 = distinct !DISubprogram(name: "device_visitor", scope: !13404, file: !13404, line: 106, type: !13538, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3373, retainedNodes: !13540)
!13538 = !DISubroutineType(types: !13539)
!13539 = !{!108, !425, !439, !13494, !104}
!13540 = !{!13541, !13542, !13543, !13544, !13545, !13547, !13550, !13551}
!13541 = !DILocalVariable(name: "handles", arg: 1, scope: !13537, file: !13404, line: 106, type: !425)
!13542 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13537, file: !13404, line: 107, type: !439)
!13543 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13537, file: !13404, line: 108, type: !13494)
!13544 = !DILocalVariable(name: "context", arg: 4, scope: !13537, file: !13404, line: 109, type: !104)
!13545 = !DILocalVariable(name: "i", scope: !13546, file: !13404, line: 112, type: !439)
!13546 = distinct !DILexicalBlock(scope: !13537, file: !13404, line: 112, column: 2)
!13547 = !DILocalVariable(name: "dh", scope: !13548, file: !13404, line: 113, type: !427)
!13548 = distinct !DILexicalBlock(scope: !13549, file: !13404, line: 112, column: 44)
!13549 = distinct !DILexicalBlock(scope: !13546, file: !13404, line: 112, column: 2)
!13550 = !DILocalVariable(name: "rdev", scope: !13548, file: !13404, line: 114, type: !13407)
!13551 = !DILocalVariable(name: "rc", scope: !13548, file: !13404, line: 115, type: !108)
!13552 = !DILocation(line: 0, scope: !13537)
!13553 = !DILocation(line: 0, scope: !13546)
!13554 = !DILocation(line: 112, column: 23, scope: !13549)
!13555 = !DILocation(line: 112, column: 2, scope: !13546)
!13556 = distinct !{!13556, !13555, !13557}
!13557 = !DILocation(line: 120, column: 2, scope: !13546)
!13558 = !DILocation(line: 113, column: 24, scope: !13548)
!13559 = !DILocation(line: 0, scope: !13548)
!13560 = !DILocation(line: 114, column: 31, scope: !13548)
!13561 = !DILocation(line: 115, column: 12, scope: !13548)
!13562 = !DILocation(line: 117, column: 10, scope: !13563)
!13563 = distinct !DILexicalBlock(scope: !13548, file: !13404, line: 117, column: 7)
!13564 = !DILocation(line: 112, column: 39, scope: !13549)
!13565 = !DILocation(line: 123, column: 1, scope: !13537)
!13566 = distinct !DISubprogram(name: "device_from_handle", scope: !411, file: !411, line: 439, type: !13567, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3373, retainedNodes: !13569)
!13567 = !DISubroutineType(types: !13568)
!13568 = !{!13407, !427}
!13569 = !{!13570, !13571, !13572}
!13570 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13566, file: !411, line: 439, type: !427)
!13571 = !DILocalVariable(name: "dev", scope: !13566, file: !411, line: 443, type: !13407)
!13572 = !DILocalVariable(name: "numdev", scope: !13566, file: !411, line: 444, type: !439)
!13573 = !DILocation(line: 0, scope: !13566)
!13574 = !DILocation(line: 446, column: 7, scope: !13575)
!13575 = distinct !DILexicalBlock(scope: !13566, file: !411, line: 446, column: 6)
!13576 = !DILocation(line: 446, column: 18, scope: !13575)
!13577 = !DILocation(line: 446, column: 23, scope: !13575)
!13578 = !DILocation(line: 450, column: 2, scope: !13566)
!13579 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13404, file: !13404, line: 135, type: !13492, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3373, retainedNodes: !13580)
!13580 = !{!13581, !13582, !13583, !13584, !13585}
!13581 = !DILocalVariable(name: "dev", arg: 1, scope: !13579, file: !13404, line: 135, type: !13407)
!13582 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13579, file: !13404, line: 136, type: !13494)
!13583 = !DILocalVariable(name: "context", arg: 3, scope: !13579, file: !13404, line: 137, type: !104)
!13584 = !DILocalVariable(name: "handle_count", scope: !13579, file: !13404, line: 139, type: !439)
!13585 = !DILocalVariable(name: "handles", scope: !13579, file: !13404, line: 140, type: !425)
!13586 = !DILocation(line: 0, scope: !13579)
!13587 = !DILocation(line: 139, column: 2, scope: !13579)
!13588 = !DILocation(line: 139, column: 9, scope: !13579)
!13589 = !DILocation(line: 140, column: 35, scope: !13579)
!13590 = !DILocation(line: 142, column: 33, scope: !13579)
!13591 = !DILocation(line: 142, column: 9, scope: !13579)
!13592 = !DILocation(line: 143, column: 1, scope: !13579)
!13593 = !DILocation(line: 142, column: 2, scope: !13579)
!13594 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !411, file: !411, line: 573, type: !13513, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3373, retainedNodes: !13595)
!13595 = !{!13596, !13597, !13598, !13599, !13600}
!13596 = !DILocalVariable(name: "dev", arg: 1, scope: !13594, file: !411, line: 573, type: !13407)
!13597 = !DILocalVariable(name: "count", arg: 2, scope: !13594, file: !411, line: 573, type: !2871)
!13598 = !DILocalVariable(name: "rv", scope: !13594, file: !411, line: 575, type: !425)
!13599 = !DILocalVariable(name: "region", scope: !13594, file: !411, line: 576, type: !439)
!13600 = !DILocalVariable(name: "i", scope: !13594, file: !411, line: 577, type: !439)
!13601 = !DILocation(line: 0, scope: !13594)
!13602 = !DILocation(line: 575, column: 35, scope: !13594)
!13603 = !DILocation(line: 579, column: 9, scope: !13604)
!13604 = distinct !DILexicalBlock(scope: !13594, file: !411, line: 579, column: 6)
!13605 = !DILocation(line: 579, column: 6, scope: !13594)
!13606 = !DILocation(line: 582, column: 8, scope: !13607)
!13607 = distinct !DILexicalBlock(scope: !13608, file: !411, line: 582, column: 8)
!13608 = distinct !DILexicalBlock(scope: !13609, file: !411, line: 581, column: 23)
!13609 = distinct !DILexicalBlock(scope: !13604, file: !411, line: 579, column: 18)
!13610 = !DILocation(line: 582, column: 12, scope: !13607)
!13611 = !DILocation(line: 585, column: 6, scope: !13608)
!13612 = !DILocation(line: 0, scope: !13609)
!13613 = !DILocation(line: 581, column: 17, scope: !13609)
!13614 = !DILocation(line: 581, column: 3, scope: !13609)
!13615 = !DILocation(line: 588, column: 10, scope: !13609)
!13616 = !DILocation(line: 588, column: 16, scope: !13609)
!13617 = !DILocation(line: 589, column: 4, scope: !13618)
!13618 = distinct !DILexicalBlock(scope: !13609, file: !411, line: 588, column: 39)
!13619 = !DILocation(line: 588, column: 3, scope: !13609)
!13620 = distinct !{!13620, !13619, !13621}
!13621 = !DILocation(line: 590, column: 3, scope: !13609)
!13622 = !DILocation(line: 591, column: 10, scope: !13609)
!13623 = !DILocation(line: 592, column: 2, scope: !13609)
!13624 = !DILocation(line: 575, column: 25, scope: !13594)
!13625 = !DILocation(line: 594, column: 2, scope: !13594)
!13626 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2167, file: !2167, line: 49, type: !13627, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2164, retainedNodes: !437)
!13627 = !DISubroutineType(types: !13628)
!13628 = !{!540}
!13629 = !DILocation(line: 51, column: 10, scope: !13626)
!13630 = !DILocation(line: 51, column: 20, scope: !13626)
!13631 = !DILocation(line: 51, column: 2, scope: !13626)
!13632 = distinct !DISubprogram(name: "coredump", scope: !3380, file: !3380, line: 209, type: !13633, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3376, retainedNodes: !13779)
!13633 = !DISubroutineType(types: !13634)
!13634 = !{null, !32, !13635, !13679}
!13635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13636, size: 32)
!13636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13637)
!13637 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2999, line: 141, baseType: !13638)
!13638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2999, line: 97, size: 256, elements: !13639)
!13639 = !{!13640}
!13640 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13638, file: !2999, line: 107, baseType: !13641, size: 256)
!13641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2999, line: 98, size: 256, elements: !13642)
!13642 = !{!13643, !13648, !13653, !13658, !13663, !13668, !13673, !13678}
!13643 = !DIDerivedType(tag: DW_TAG_member, scope: !13641, file: !2999, line: 99, baseType: !13644, size: 32)
!13644 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13641, file: !2999, line: 99, size: 32, elements: !13645)
!13645 = !{!13646, !13647}
!13646 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13644, file: !2999, line: 99, baseType: !113, size: 32)
!13647 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13644, file: !2999, line: 99, baseType: !113, size: 32)
!13648 = !DIDerivedType(tag: DW_TAG_member, scope: !13641, file: !2999, line: 100, baseType: !13649, size: 32, offset: 32)
!13649 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13641, file: !2999, line: 100, size: 32, elements: !13650)
!13650 = !{!13651, !13652}
!13651 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13649, file: !2999, line: 100, baseType: !113, size: 32)
!13652 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13649, file: !2999, line: 100, baseType: !113, size: 32)
!13653 = !DIDerivedType(tag: DW_TAG_member, scope: !13641, file: !2999, line: 101, baseType: !13654, size: 32, offset: 64)
!13654 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13641, file: !2999, line: 101, size: 32, elements: !13655)
!13655 = !{!13656, !13657}
!13656 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13654, file: !2999, line: 101, baseType: !113, size: 32)
!13657 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13654, file: !2999, line: 101, baseType: !113, size: 32)
!13658 = !DIDerivedType(tag: DW_TAG_member, scope: !13641, file: !2999, line: 102, baseType: !13659, size: 32, offset: 96)
!13659 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13641, file: !2999, line: 102, size: 32, elements: !13660)
!13660 = !{!13661, !13662}
!13661 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13659, file: !2999, line: 102, baseType: !113, size: 32)
!13662 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13659, file: !2999, line: 102, baseType: !113, size: 32)
!13663 = !DIDerivedType(tag: DW_TAG_member, scope: !13641, file: !2999, line: 103, baseType: !13664, size: 32, offset: 128)
!13664 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13641, file: !2999, line: 103, size: 32, elements: !13665)
!13665 = !{!13666, !13667}
!13666 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13664, file: !2999, line: 103, baseType: !113, size: 32)
!13667 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13664, file: !2999, line: 103, baseType: !113, size: 32)
!13668 = !DIDerivedType(tag: DW_TAG_member, scope: !13641, file: !2999, line: 104, baseType: !13669, size: 32, offset: 160)
!13669 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13641, file: !2999, line: 104, size: 32, elements: !13670)
!13670 = !{!13671, !13672}
!13671 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13669, file: !2999, line: 104, baseType: !113, size: 32)
!13672 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13669, file: !2999, line: 104, baseType: !113, size: 32)
!13673 = !DIDerivedType(tag: DW_TAG_member, scope: !13641, file: !2999, line: 105, baseType: !13674, size: 32, offset: 192)
!13674 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13641, file: !2999, line: 105, size: 32, elements: !13675)
!13675 = !{!13676, !13677}
!13676 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13674, file: !2999, line: 105, baseType: !113, size: 32)
!13677 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13674, file: !2999, line: 105, baseType: !113, size: 32)
!13678 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13641, file: !2999, line: 106, baseType: !113, size: 32, offset: 224)
!13679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13680, size: 32)
!13680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !647, line: 245, size: 1024, elements: !13681)
!13681 = !{!13682, !13740, !13752, !13753, !13754, !13755, !13761, !13774}
!13682 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13680, file: !647, line: 247, baseType: !13683, size: 384)
!13683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !647, line: 57, size: 384, elements: !13684)
!13684 = !{!13685, !13709, !13716, !13717, !13718, !13727, !13728, !13729}
!13685 = !DIDerivedType(tag: DW_TAG_member, scope: !13683, file: !647, line: 60, baseType: !13686, size: 64)
!13686 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13683, file: !647, line: 60, size: 64, elements: !13687)
!13687 = !{!13688, !13703}
!13688 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13686, file: !647, line: 61, baseType: !13689, size: 64)
!13689 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !13690)
!13690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !13691)
!13691 = !{!13692, !13698}
!13692 = !DIDerivedType(tag: DW_TAG_member, scope: !13690, file: !367, line: 38, baseType: !13693, size: 32)
!13693 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13690, file: !367, line: 38, size: 32, elements: !13694)
!13694 = !{!13695, !13697}
!13695 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13693, file: !367, line: 39, baseType: !13696, size: 32)
!13696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13690, size: 32)
!13697 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13693, file: !367, line: 40, baseType: !13696, size: 32)
!13698 = !DIDerivedType(tag: DW_TAG_member, scope: !13690, file: !367, line: 42, baseType: !13699, size: 32, offset: 32)
!13699 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13690, file: !367, line: 42, size: 32, elements: !13700)
!13700 = !{!13701, !13702}
!13701 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13699, file: !367, line: 43, baseType: !13696, size: 32)
!13702 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13699, file: !367, line: 44, baseType: !13696, size: 32)
!13703 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13686, file: !647, line: 62, baseType: !13704, size: 64)
!13704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !672, line: 49, size: 64, elements: !13705)
!13705 = !{!13706}
!13706 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13704, file: !672, line: 50, baseType: !13707, size: 64)
!13707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13708, size: 64, elements: !677)
!13708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13704, size: 32)
!13709 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13683, file: !647, line: 68, baseType: !13710, size: 32, offset: 64)
!13710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13711, size: 32)
!13711 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !13712)
!13712 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !13713)
!13713 = !{!13714}
!13714 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13712, file: !363, line: 232, baseType: !13715, size: 64)
!13715 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !13690)
!13716 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13683, file: !647, line: 71, baseType: !164, size: 8, offset: 96)
!13717 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13683, file: !647, line: 74, baseType: !164, size: 8, offset: 104)
!13718 = !DIDerivedType(tag: DW_TAG_member, scope: !13683, file: !647, line: 90, baseType: !13719, size: 16, offset: 112)
!13719 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13683, file: !647, line: 90, size: 16, elements: !13720)
!13720 = !{!13721, !13726}
!13721 = !DIDerivedType(tag: DW_TAG_member, scope: !13719, file: !647, line: 91, baseType: !13722, size: 16)
!13722 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13719, file: !647, line: 91, size: 16, elements: !13723)
!13723 = !{!13724, !13725}
!13724 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13722, file: !647, line: 96, baseType: !695, size: 8)
!13725 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13722, file: !647, line: 97, baseType: !164, size: 8, offset: 8)
!13726 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13719, file: !647, line: 100, baseType: !168, size: 16)
!13727 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13683, file: !647, line: 107, baseType: !113, size: 32, offset: 128)
!13728 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13683, file: !647, line: 127, baseType: !104, size: 32, offset: 160)
!13729 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13683, file: !647, line: 131, baseType: !13730, size: 192, offset: 192)
!13730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !13731)
!13731 = !{!13732, !13733, !13739}
!13732 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13730, file: !363, line: 245, baseType: !13689, size: 64)
!13733 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13730, file: !363, line: 246, baseType: !13734, size: 32, offset: 64)
!13734 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !13735)
!13735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13736, size: 32)
!13736 = !DISubroutineType(types: !13737)
!13737 = !{null, !13738}
!13738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13730, size: 32)
!13739 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13730, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!13740 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13680, file: !647, line: 250, baseType: !13741, size: 288, offset: 384)
!13741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !714, line: 25, size: 288, elements: !13742)
!13742 = !{!13743, !13744, !13745, !13746, !13747, !13748, !13749, !13750, !13751}
!13743 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13741, file: !714, line: 26, baseType: !113, size: 32)
!13744 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13741, file: !714, line: 27, baseType: !113, size: 32, offset: 32)
!13745 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13741, file: !714, line: 28, baseType: !113, size: 32, offset: 64)
!13746 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13741, file: !714, line: 29, baseType: !113, size: 32, offset: 96)
!13747 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13741, file: !714, line: 30, baseType: !113, size: 32, offset: 128)
!13748 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13741, file: !714, line: 31, baseType: !113, size: 32, offset: 160)
!13749 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13741, file: !714, line: 32, baseType: !113, size: 32, offset: 192)
!13750 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13741, file: !714, line: 33, baseType: !113, size: 32, offset: 224)
!13751 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13741, file: !714, line: 34, baseType: !113, size: 32, offset: 256)
!13752 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13680, file: !647, line: 253, baseType: !104, size: 32, offset: 672)
!13753 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13680, file: !647, line: 256, baseType: !13711, size: 64, offset: 704)
!13754 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13680, file: !647, line: 294, baseType: !108, size: 32, offset: 768)
!13755 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13680, file: !647, line: 300, baseType: !13756, size: 96, offset: 800)
!13756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !647, line: 149, size: 96, elements: !13757)
!13757 = !{!13758, !13759, !13760}
!13758 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13756, file: !647, line: 153, baseType: !22, size: 32)
!13759 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13756, file: !647, line: 162, baseType: !439, size: 32, offset: 32)
!13760 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13756, file: !647, line: 168, baseType: !439, size: 32, offset: 64)
!13761 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13680, file: !647, line: 325, baseType: !13762, size: 32, offset: 896)
!13762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13763, size: 32)
!13763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !13764)
!13764 = !{!13765, !13771, !13772}
!13765 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13763, file: !359, line: 5074, baseType: !13766, size: 96)
!13766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !740, line: 56, size: 96, elements: !13767)
!13767 = !{!13768, !13769, !13770}
!13768 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13766, file: !740, line: 57, baseType: !743, size: 32)
!13769 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13766, file: !740, line: 58, baseType: !104, size: 32, offset: 32)
!13770 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13766, file: !740, line: 59, baseType: !439, size: 32, offset: 64)
!13771 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13763, file: !359, line: 5075, baseType: !13711, size: 64, offset: 96)
!13772 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13763, file: !359, line: 5076, baseType: !13773, offset: 160)
!13773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!13774 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13680, file: !647, line: 343, baseType: !13775, size: 64, offset: 928)
!13775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !714, line: 60, size: 64, elements: !13776)
!13776 = !{!13777, !13778}
!13777 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13775, file: !714, line: 63, baseType: !113, size: 32)
!13778 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13775, file: !714, line: 66, baseType: !113, size: 32, offset: 32)
!13779 = !{!13780, !13781, !13782}
!13780 = !DILocalVariable(name: "reason", arg: 1, scope: !13632, file: !3380, line: 209, type: !32)
!13781 = !DILocalVariable(name: "esf", arg: 2, scope: !13632, file: !3380, line: 209, type: !13635)
!13782 = !DILocalVariable(name: "thread", arg: 3, scope: !13632, file: !3380, line: 210, type: !13679)
!13783 = !DILocation(line: 0, scope: !13632)
!13784 = !DILocation(line: 212, column: 1, scope: !13632)
!13785 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3380, file: !3380, line: 214, type: !13786, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3376, retainedNodes: !13788)
!13786 = !DISubroutineType(types: !13787)
!13787 = !{null, !22, !22}
!13788 = !{!13789, !13790}
!13789 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13785, file: !3380, line: 214, type: !22)
!13790 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13785, file: !3380, line: 214, type: !22)
!13791 = !DILocation(line: 0, scope: !13785)
!13792 = !DILocation(line: 216, column: 1, scope: !13785)
!13793 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3380, file: !3380, line: 218, type: !13794, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3376, retainedNodes: !13796)
!13794 = !DISubroutineType(types: !13795)
!13795 = !{null, !209, !439}
!13796 = !{!13797, !13798}
!13797 = !DILocalVariable(name: "buf", arg: 1, scope: !13793, file: !3380, line: 218, type: !209)
!13798 = !DILocalVariable(name: "buflen", arg: 2, scope: !13793, file: !3380, line: 218, type: !439)
!13799 = !DILocation(line: 0, scope: !13793)
!13800 = !DILocation(line: 220, column: 1, scope: !13793)
!13801 = distinct !DISubprogram(name: "coredump_query", scope: !3380, file: !3380, line: 222, type: !13802, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3376, retainedNodes: !13804)
!13802 = !DISubroutineType(types: !13803)
!13803 = !{!108, !3379, !104}
!13804 = !{!13805, !13806}
!13805 = !DILocalVariable(name: "query_id", arg: 1, scope: !13801, file: !3380, line: 222, type: !3379)
!13806 = !DILocalVariable(name: "arg", arg: 2, scope: !13801, file: !3380, line: 222, type: !104)
!13807 = !DILocation(line: 0, scope: !13801)
!13808 = !DILocation(line: 224, column: 2, scope: !13801)
!13809 = distinct !DISubprogram(name: "coredump_cmd", scope: !3380, file: !3380, line: 227, type: !13810, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3376, retainedNodes: !13812)
!13810 = !DISubroutineType(types: !13811)
!13811 = !{!108, !3386, !104}
!13812 = !{!13813, !13814}
!13813 = !DILocalVariable(name: "query_id", arg: 1, scope: !13809, file: !3380, line: 227, type: !3386)
!13814 = !DILocalVariable(name: "arg", arg: 2, scope: !13809, file: !3380, line: 227, type: !104)
!13815 = !DILocation(line: 0, scope: !13809)
!13816 = !DILocation(line: 229, column: 2, scope: !13809)
!13817 = distinct !DISubprogram(name: "arch_system_halt", scope: !13818, file: !13818, line: 23, type: !4100, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3376, retainedNodes: !13819)
!13818 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13819 = !{!13820}
!13820 = !DILocalVariable(name: "reason", arg: 1, scope: !13817, file: !13818, line: 23, type: !32)
!13821 = !DILocation(line: 0, scope: !13817)
!13822 = !DILocation(line: 55, column: 2, scope: !13823, inlinedAt: !13827)
!13823 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4087, file: !4087, line: 42, type: !4088, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3376, retainedNodes: !13824)
!13824 = !{!13825, !13826}
!13825 = !DILocalVariable(name: "key", scope: !13823, file: !4087, line: 44, type: !32)
!13826 = !DILocalVariable(name: "tmp", scope: !13823, file: !4087, line: 53, type: !32)
!13827 = distinct !DILocation(line: 31, column: 8, scope: !13817)
!13828 = !{i64 2241415}
!13829 = !DILocation(line: 0, scope: !13823, inlinedAt: !13827)
!13830 = !DILocation(line: 32, column: 2, scope: !13817)
!13831 = !DILocation(line: 32, column: 2, scope: !13832)
!13832 = distinct !DILexicalBlock(scope: !13833, file: !13818, line: 32, column: 2)
!13833 = distinct !DILexicalBlock(scope: !13817, file: !13818, line: 32, column: 2)
!13834 = distinct !{!13834, !13835, !13836}
!13835 = !DILocation(line: 32, column: 2, scope: !13833)
!13836 = !DILocation(line: 34, column: 2, scope: !13833)
!13837 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13818, file: !13818, line: 39, type: !13838, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3376, retainedNodes: !13840)
!13838 = !DISubroutineType(types: !13839)
!13839 = !{null, !32, !13635}
!13840 = !{!13841, !13842}
!13841 = !DILocalVariable(name: "reason", arg: 1, scope: !13837, file: !13818, line: 39, type: !32)
!13842 = !DILocalVariable(name: "esf", arg: 2, scope: !13837, file: !13818, line: 40, type: !13635)
!13843 = !DILocation(line: 0, scope: !13837)
!13844 = !DILocation(line: 45, column: 2, scope: !13845)
!13845 = distinct !DILexicalBlock(scope: !13846, file: !13818, line: 45, column: 2)
!13846 = distinct !DILexicalBlock(scope: !13847, file: !13818, line: 45, column: 2)
!13847 = distinct !DILexicalBlock(scope: !13848, file: !13818, line: 45, column: 2)
!13848 = distinct !DILexicalBlock(scope: !13837, file: !13818, line: 45, column: 2)
!13849 = !DILocation(line: 46, column: 2, scope: !13837)
!13850 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13818, file: !13818, line: 81, type: !4100, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3376, retainedNodes: !13851)
!13851 = !{!13852}
!13852 = !DILocalVariable(name: "reason", arg: 1, scope: !13850, file: !13818, line: 81, type: !32)
!13853 = !DILocation(line: 0, scope: !13850)
!13854 = !DILocation(line: 83, column: 2, scope: !13850)
!13855 = distinct !DISubprogram(name: "z_fatal_error", scope: !13818, file: !13818, line: 96, type: !13838, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3376, retainedNodes: !13856)
!13856 = !{!13857, !13858, !13859, !13860}
!13857 = !DILocalVariable(name: "reason", arg: 1, scope: !13855, file: !13818, line: 96, type: !32)
!13858 = !DILocalVariable(name: "esf", arg: 2, scope: !13855, file: !13818, line: 96, type: !13635)
!13859 = !DILocalVariable(name: "key", scope: !13855, file: !13818, line: 102, type: !32)
!13860 = !DILocalVariable(name: "thread", scope: !13855, file: !13818, line: 103, type: !13679)
!13861 = !DILocation(line: 0, scope: !13855)
!13862 = !DILocation(line: 55, column: 2, scope: !13823, inlinedAt: !13863)
!13863 = distinct !DILocation(line: 102, column: 21, scope: !13855)
!13864 = !DILocation(line: 0, scope: !13823, inlinedAt: !13863)
!13865 = !DILocation(line: 104, column: 4, scope: !13855)
!13866 = !DILocation(line: 109, column: 2, scope: !13867)
!13867 = distinct !DILexicalBlock(scope: !13868, file: !13818, line: 109, column: 2)
!13868 = distinct !DILexicalBlock(scope: !13869, file: !13818, line: 109, column: 2)
!13869 = distinct !DILexicalBlock(scope: !13870, file: !13818, line: 109, column: 2)
!13870 = distinct !DILexicalBlock(scope: !13855, file: !13818, line: 109, column: 2)
!13871 = !DILocation(line: 119, column: 11, scope: !13872)
!13872 = distinct !DILexicalBlock(scope: !13855, file: !13818, line: 119, column: 6)
!13873 = !DILocation(line: 119, column: 20, scope: !13872)
!13874 = !DILocalVariable(name: "esf", arg: 1, scope: !13875, file: !8081, line: 71, type: !13635)
!13875 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8081, file: !8081, line: 71, type: !13876, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3376, retainedNodes: !13878)
!13876 = !DISubroutineType(types: !13877)
!13877 = !{!422, !13635}
!13878 = !{!13874}
!13879 = !DILocation(line: 0, scope: !13875, inlinedAt: !13880)
!13880 = distinct !DILocation(line: 119, column: 23, scope: !13872)
!13881 = !DILocation(line: 73, column: 21, scope: !13875, inlinedAt: !13880)
!13882 = !DILocation(line: 73, column: 26, scope: !13875, inlinedAt: !13880)
!13883 = !DILocation(line: 73, column: 9, scope: !13875, inlinedAt: !13880)
!13884 = !DILocation(line: 119, column: 6, scope: !13855)
!13885 = !DILocation(line: 120, column: 3, scope: !13886)
!13886 = distinct !DILexicalBlock(scope: !13887, file: !13818, line: 120, column: 3)
!13887 = distinct !DILexicalBlock(scope: !13888, file: !13818, line: 120, column: 3)
!13888 = distinct !DILexicalBlock(scope: !13889, file: !13818, line: 120, column: 3)
!13889 = distinct !DILexicalBlock(scope: !13890, file: !13818, line: 120, column: 3)
!13890 = distinct !DILexicalBlock(scope: !13872, file: !13818, line: 119, column: 57)
!13891 = !DILocation(line: 121, column: 2, scope: !13890)
!13892 = !DILocation(line: 124, column: 2, scope: !13893)
!13893 = distinct !DILexicalBlock(scope: !13894, file: !13818, line: 124, column: 2)
!13894 = distinct !DILexicalBlock(scope: !13895, file: !13818, line: 124, column: 2)
!13895 = distinct !DILexicalBlock(scope: !13896, file: !13818, line: 124, column: 2)
!13896 = distinct !DILexicalBlock(scope: !13855, file: !13818, line: 124, column: 2)
!13897 = !DILocation(line: 131, column: 2, scope: !13855)
!13898 = !DILocation(line: 0, scope: !13875, inlinedAt: !13899)
!13899 = distinct !DILocation(line: 151, column: 24, scope: !13900)
!13900 = distinct !DILexicalBlock(scope: !13901, file: !13818, line: 151, column: 7)
!13901 = distinct !DILexicalBlock(scope: !13902, file: !13818, line: 146, column: 32)
!13902 = distinct !DILexicalBlock(scope: !13855, file: !13818, line: 146, column: 6)
!13903 = !DILocation(line: 151, column: 7, scope: !13901)
!13904 = !DILocation(line: 151, column: 21, scope: !13900)
!13905 = !DILocalVariable(name: "key", arg: 1, scope: !13906, file: !4087, line: 84, type: !32)
!13906 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4087, file: !4087, line: 84, type: !4100, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3376, retainedNodes: !13907)
!13907 = !{!13905}
!13908 = !DILocation(line: 0, scope: !13906, inlinedAt: !13909)
!13909 = distinct !DILocation(line: 186, column: 2, scope: !13855)
!13910 = !DILocation(line: 95, column: 2, scope: !13906, inlinedAt: !13909)
!13911 = !{i64 2242232}
!13912 = !DILocation(line: 189, column: 3, scope: !13913)
!13913 = distinct !DILexicalBlock(scope: !13914, file: !13818, line: 188, column: 41)
!13914 = distinct !DILexicalBlock(scope: !13855, file: !13818, line: 188, column: 6)
!13915 = !DILocation(line: 191, column: 1, scope: !13855)
!13916 = distinct !DISubprogram(name: "k_current_get", scope: !359, file: !359, line: 530, type: !13917, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3376, retainedNodes: !437)
!13917 = !DISubroutineType(types: !13918)
!13918 = !{!13919}
!13919 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !647, line: 347, baseType: !13679)
!13920 = !DILocation(line: 535, column: 9, scope: !13916)
!13921 = !DILocation(line: 535, column: 2, scope: !13916)
!13922 = distinct !DISubprogram(name: "reason_to_str", scope: !13818, file: !13818, line: 62, type: !13923, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3376, retainedNodes: !13925)
!13923 = !DISubroutineType(types: !13924)
!13924 = !{!105, !32}
!13925 = !{!13926}
!13926 = !DILocalVariable(name: "reason", arg: 1, scope: !13922, file: !13818, line: 62, type: !32)
!13927 = !DILocation(line: 0, scope: !13922)
!13928 = !DILocation(line: 64, column: 2, scope: !13922)
!13929 = !DILocation(line: 0, scope: !13930)
!13930 = distinct !DILexicalBlock(scope: !13922, file: !13818, line: 64, column: 18)
!13931 = !DILocation(line: 78, column: 1, scope: !13922)
!13932 = distinct !DISubprogram(name: "thread_name_get", scope: !13818, file: !13818, line: 51, type: !13933, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3376, retainedNodes: !13935)
!13933 = !DISubroutineType(types: !13934)
!13934 = !{!105, !13679}
!13935 = !{!13936, !13937}
!13936 = !DILocalVariable(name: "thread", arg: 1, scope: !13932, file: !13818, line: 51, type: !13679)
!13937 = !DILocalVariable(name: "thread_name", scope: !13932, file: !13818, line: 53, type: !105)
!13938 = !DILocation(line: 0, scope: !13932)
!13939 = !DILocation(line: 53, column: 36, scope: !13932)
!13940 = !DILocation(line: 53, column: 28, scope: !13932)
!13941 = !DILocation(line: 53, column: 47, scope: !13932)
!13942 = !DILocation(line: 55, column: 19, scope: !13943)
!13943 = distinct !DILexicalBlock(scope: !13932, file: !13818, line: 55, column: 6)
!13944 = !DILocation(line: 55, column: 28, scope: !13943)
!13945 = !DILocation(line: 55, column: 32, scope: !13943)
!13946 = !DILocation(line: 55, column: 47, scope: !13943)
!13947 = !DILocation(line: 55, column: 6, scope: !13932)
!13948 = !DILocation(line: 57, column: 2, scope: !13949)
!13949 = distinct !DILexicalBlock(scope: !13943, file: !13818, line: 55, column: 57)
!13950 = !DILocation(line: 59, column: 2, scope: !13932)
!13951 = distinct !DISubprogram(name: "k_thread_abort", scope: !3809, file: !3809, line: 188, type: !13952, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3376, retainedNodes: !13954)
!13952 = !DISubroutineType(types: !13953)
!13953 = !{null, !13919}
!13954 = !{!13955}
!13955 = !DILocalVariable(name: "thread", arg: 1, scope: !13951, file: !3809, line: 188, type: !13919)
!13956 = !DILocation(line: 0, scope: !13951)
!13957 = !DILocation(line: 197, column: 2, scope: !13958)
!13958 = distinct !DILexicalBlock(scope: !13951, file: !3809, line: 197, column: 2)
!13959 = !{i64 2154859177}
!13960 = !DILocation(line: 198, column: 2, scope: !13951)
!13961 = !DILocation(line: 199, column: 1, scope: !13951)
!13962 = distinct !DISubprogram(name: "z_current_get", scope: !3809, file: !3809, line: 173, type: !13917, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3376, retainedNodes: !437)
!13963 = !DILocation(line: 180, column: 2, scope: !13964)
!13964 = distinct !DILexicalBlock(scope: !13962, file: !3809, line: 180, column: 2)
!13965 = !{i64 2154859109}
!13966 = !DILocation(line: 181, column: 9, scope: !13962)
!13967 = !DILocation(line: 181, column: 2, scope: !13962)
!13968 = distinct !DISubprogram(name: "z_early_memset", scope: !2175, file: !2175, line: 108, type: !13969, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13971)
!13969 = !DISubroutineType(types: !13970)
!13970 = !{null, !104, !108, !439}
!13971 = !{!13972, !13973, !13974}
!13972 = !DILocalVariable(name: "dst", arg: 1, scope: !13968, file: !2175, line: 108, type: !104)
!13973 = !DILocalVariable(name: "c", arg: 2, scope: !13968, file: !2175, line: 108, type: !108)
!13974 = !DILocalVariable(name: "n", arg: 3, scope: !13968, file: !2175, line: 108, type: !439)
!13975 = !DILocation(line: 0, scope: !13968)
!13976 = !DILocation(line: 110, column: 9, scope: !13968)
!13977 = !DILocation(line: 111, column: 1, scope: !13968)
!13978 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2175, file: !2175, line: 121, type: !13979, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13981)
!13979 = !DISubroutineType(types: !13980)
!13980 = !{null, !104, !13, !439}
!13981 = !{!13982, !13983, !13984}
!13982 = !DILocalVariable(name: "dst", arg: 1, scope: !13978, file: !2175, line: 121, type: !104)
!13983 = !DILocalVariable(name: "src", arg: 2, scope: !13978, file: !2175, line: 121, type: !13)
!13984 = !DILocalVariable(name: "n", arg: 3, scope: !13978, file: !2175, line: 121, type: !439)
!13985 = !DILocation(line: 0, scope: !13978)
!13986 = !DILocation(line: 123, column: 9, scope: !13978)
!13987 = !DILocation(line: 124, column: 1, scope: !13978)
!13988 = distinct !DISubprogram(name: "z_bss_zero", scope: !2175, file: !2175, line: 132, type: !3413, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !437)
!13989 = !DILocation(line: 143, column: 2, scope: !13988)
!13990 = !DILocation(line: 145, column: 2, scope: !13988)
!13991 = !DILocation(line: 168, column: 1, scope: !13988)
!13992 = distinct !DISubprogram(name: "z_init_cpu", scope: !2175, file: !2175, line: 372, type: !9643, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13993)
!13993 = !{!13994}
!13994 = !DILocalVariable(name: "id", arg: 1, scope: !13992, file: !2175, line: 372, type: !108)
!13995 = !DILocation(line: 0, scope: !13992)
!13996 = !DILocation(line: 374, column: 2, scope: !13992)
!13997 = !DILocation(line: 375, column: 34, scope: !13992)
!13998 = !DILocation(line: 375, column: 19, scope: !13992)
!13999 = !DILocation(line: 375, column: 31, scope: !13992)
!14000 = !DILocation(line: 376, column: 24, scope: !13992)
!14001 = !DILocation(line: 376, column: 19, scope: !13992)
!14002 = !DILocation(line: 376, column: 22, scope: !13992)
!14003 = !DILocation(line: 378, column: 26, scope: !13992)
!14004 = !DILocation(line: 378, column: 4, scope: !13992)
!14005 = !DILocation(line: 378, column: 50, scope: !13992)
!14006 = !DILocation(line: 377, column: 19, scope: !13992)
!14007 = !DILocation(line: 377, column: 29, scope: !13992)
!14008 = !DILocation(line: 384, column: 1, scope: !13992)
!14009 = distinct !DISubprogram(name: "init_idle_thread", scope: !2175, file: !2175, line: 343, type: !9643, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !14010)
!14010 = !{!14011, !14012, !14013, !14016}
!14011 = !DILocalVariable(name: "i", arg: 1, scope: !14009, file: !2175, line: 343, type: !108)
!14012 = !DILocalVariable(name: "thread", scope: !14009, file: !2175, line: 345, type: !2267)
!14013 = !DILocalVariable(name: "stack", scope: !14009, file: !2175, line: 346, type: !14014)
!14014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14015, size: 32)
!14015 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5180, line: 44, baseType: !2381)
!14016 = !DILocalVariable(name: "tname", scope: !14009, file: !2175, line: 358, type: !443)
!14017 = !DILocation(line: 0, scope: !14009)
!14018 = !DILocation(line: 345, column: 29, scope: !14009)
!14019 = !DILocation(line: 346, column: 28, scope: !14009)
!14020 = !DILocation(line: 362, column: 37, scope: !14009)
!14021 = !DILocation(line: 362, column: 36, scope: !14009)
!14022 = !DILocation(line: 361, column: 2, scope: !14009)
!14023 = !DILocation(line: 365, column: 2, scope: !14009)
!14024 = !DILocation(line: 370, column: 1, scope: !14009)
!14025 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2382, file: !2382, line: 331, type: !14026, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !14028)
!14026 = !DISubroutineType(types: !14027)
!14027 = !{!443, !14014}
!14028 = !{!14029}
!14029 = !DILocalVariable(name: "sym", arg: 1, scope: !14025, file: !2382, line: 331, type: !14014)
!14030 = !DILocation(line: 0, scope: !14025)
!14031 = !DILocation(line: 333, column: 21, scope: !14025)
!14032 = !DILocation(line: 333, column: 2, scope: !14025)
!14033 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14034, file: !14034, line: 155, type: !14035, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !14037)
!14034 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14035 = !DISubroutineType(types: !14036)
!14036 = !{null, !2267}
!14037 = !{!14038}
!14038 = !DILocalVariable(name: "thread", arg: 1, scope: !14033, file: !14034, line: 155, type: !2267)
!14039 = !DILocation(line: 0, scope: !14033)
!14040 = !DILocation(line: 157, column: 15, scope: !14033)
!14041 = !DILocation(line: 157, column: 28, scope: !14033)
!14042 = !DILocation(line: 158, column: 1, scope: !14033)
!14043 = distinct !DISubprogram(name: "z_cstart", scope: !2175, file: !2175, line: 501, type: !3413, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !14044)
!14044 = !{!14045}
!14045 = !DILocalVariable(name: "dummy_thread", scope: !14043, file: !2175, line: 518, type: !2268)
!14046 = !DILocation(line: 507, column: 2, scope: !14043)
!14047 = !DILocation(line: 43, column: 14, scope: !14048, inlinedAt: !14052)
!14048 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !14049, file: !14049, line: 40, type: !3413, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !14050)
!14049 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14050 = !{!14051}
!14051 = !DILocalVariable(name: "msp", scope: !14048, file: !14049, line: 42, type: !113)
!14052 = distinct !DILocation(line: 44, column: 2, scope: !14053, inlinedAt: !14055)
!14053 = distinct !DISubprogram(name: "arch_kernel_init", scope: !14054, file: !14054, line: 42, type: !3413, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !437)
!14054 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14055 = distinct !DILocation(line: 510, column: 2, scope: !14043)
!14056 = !DILocation(line: 43, column: 3, scope: !14048, inlinedAt: !14052)
!14057 = !DILocation(line: 43, column: 60, scope: !14048, inlinedAt: !14052)
!14058 = !DILocation(line: 0, scope: !14048, inlinedAt: !14052)
!14059 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !14060, file: !7063, line: 1153, type: !113)
!14060 = distinct !DISubprogram(name: "__set_MSP", scope: !7063, file: !7063, line: 1153, type: !7154, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !14061)
!14061 = !{!14059}
!14062 = !DILocation(line: 0, scope: !14060, inlinedAt: !14063)
!14063 = distinct !DILocation(line: 46, column: 2, scope: !14048, inlinedAt: !14052)
!14064 = !DILocation(line: 1155, column: 3, scope: !14060, inlinedAt: !14063)
!14065 = !{i64 3578533}
!14066 = !DILocation(line: 62, column: 11, scope: !14048, inlinedAt: !14052)
!14067 = !DILocation(line: 102, column: 2, scope: !14068, inlinedAt: !14069)
!14068 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8081, file: !8081, line: 97, type: !3413, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !437)
!14069 = distinct !DILocation(line: 45, column: 2, scope: !14053, inlinedAt: !14055)
!14070 = !DILocation(line: 108, column: 2, scope: !14068, inlinedAt: !14069)
!14071 = !DILocation(line: 112, column: 2, scope: !14068, inlinedAt: !14069)
!14072 = !DILocation(line: 113, column: 2, scope: !14068, inlinedAt: !14069)
!14073 = !DILocation(line: 114, column: 2, scope: !14068, inlinedAt: !14069)
!14074 = !DILocation(line: 116, column: 2, scope: !14068, inlinedAt: !14069)
!14075 = !DILocation(line: 123, column: 13, scope: !14068, inlinedAt: !14069)
!14076 = !DILocation(line: 46, column: 2, scope: !14053, inlinedAt: !14055)
!14077 = !DILocation(line: 47, column: 2, scope: !14053, inlinedAt: !14055)
!14078 = !DILocation(line: 174, column: 12, scope: !14079, inlinedAt: !14080)
!14079 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8081, file: !8081, line: 169, type: !3413, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !437)
!14080 = distinct !DILocation(line: 48, column: 2, scope: !14053, inlinedAt: !14055)
!14081 = !DILocation(line: 179, column: 12, scope: !14079, inlinedAt: !14080)
!14082 = !DILocation(line: 50, column: 2, scope: !14053, inlinedAt: !14055)
!14083 = !DILocation(line: 57, column: 2, scope: !14053, inlinedAt: !14055)
!14084 = !DILocation(line: 518, column: 2, scope: !14043)
!14085 = !DILocation(line: 518, column: 18, scope: !14043)
!14086 = !DILocation(line: 520, column: 2, scope: !14043)
!14087 = !DILocation(line: 523, column: 2, scope: !14043)
!14088 = !DILocation(line: 526, column: 2, scope: !14043)
!14089 = !DILocation(line: 527, column: 2, scope: !14043)
!14090 = !DILocation(line: 543, column: 24, scope: !14043)
!14091 = !DILocation(line: 543, column: 2, scope: !14043)
!14092 = !DILocation(line: 0, scope: !2406)
!14093 = !DILocation(line: 246, column: 15, scope: !2424)
!14094 = !DILocation(line: 246, column: 36, scope: !2423)
!14095 = !DILocation(line: 246, column: 2, scope: !2424)
!14096 = !DILocation(line: 247, column: 37, scope: !2422)
!14097 = !DILocation(line: 0, scope: !2422)
!14098 = !DILocation(line: 248, column: 19, scope: !2422)
!14099 = !DILocation(line: 248, column: 12, scope: !2422)
!14100 = !DILocation(line: 250, column: 11, scope: !14101)
!14101 = distinct !DILexicalBlock(scope: !2422, file: !2175, line: 250, column: 7)
!14102 = !DILocation(line: 250, column: 7, scope: !2422)
!14103 = !DILocation(line: 254, column: 11, scope: !14104)
!14104 = distinct !DILexicalBlock(scope: !14105, file: !2175, line: 254, column: 8)
!14105 = distinct !DILexicalBlock(scope: !14101, file: !2175, line: 250, column: 20)
!14106 = !DILocation(line: 254, column: 8, scope: !14105)
!14107 = !DILocation(line: 255, column: 9, scope: !14108)
!14108 = distinct !DILexicalBlock(scope: !14104, file: !2175, line: 254, column: 17)
!14109 = !DILocation(line: 258, column: 9, scope: !14108)
!14110 = !DILocation(line: 261, column: 28, scope: !14108)
!14111 = !DILocation(line: 261, column: 10, scope: !14108)
!14112 = !DILocation(line: 261, column: 17, scope: !14108)
!14113 = !DILocation(line: 261, column: 26, scope: !14108)
!14114 = !DILocation(line: 262, column: 4, scope: !14108)
!14115 = !DILocation(line: 263, column: 9, scope: !14105)
!14116 = !DILocation(line: 263, column: 16, scope: !14105)
!14117 = !DILocation(line: 263, column: 28, scope: !14105)
!14118 = !DILocation(line: 264, column: 3, scope: !14105)
!14119 = !DILocation(line: 246, column: 60, scope: !2423)
!14120 = distinct !{!14120, !14095, !14121}
!14121 = !DILocation(line: 265, column: 2, scope: !2424)
!14122 = !DILocation(line: 266, column: 1, scope: !2406)
!14123 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !790, file: !790, line: 1814, type: !7097, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !14124)
!14124 = !{!14125, !14126}
!14125 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14123, file: !790, line: 1814, type: !1171)
!14126 = !DILocalVariable(name: "priority", arg: 2, scope: !14123, file: !790, line: 1814, type: !113)
!14127 = !DILocation(line: 0, scope: !14123)
!14128 = !DILocation(line: 1822, column: 48, scope: !14129)
!14129 = distinct !DILexicalBlock(scope: !14130, file: !790, line: 1821, column: 3)
!14130 = distinct !DILexicalBlock(scope: !14123, file: !790, line: 1816, column: 7)
!14131 = !DILocation(line: 1822, column: 32, scope: !14129)
!14132 = !DILocation(line: 1822, column: 40, scope: !14129)
!14133 = !DILocation(line: 1822, column: 5, scope: !14129)
!14134 = !DILocation(line: 1822, column: 46, scope: !14129)
!14135 = !DILocation(line: 1824, column: 1, scope: !14123)
!14136 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !14054, file: !14054, line: 32, type: !3413, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!14137 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14138, file: !14138, line: 215, type: !14035, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !14139)
!14138 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14139 = !{!14140}
!14140 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14137, file: !14138, line: 215, type: !2267)
!14141 = !DILocation(line: 0, scope: !14137)
!14142 = !DILocation(line: 217, column: 21, scope: !14137)
!14143 = !DILocation(line: 217, column: 34, scope: !14137)
!14144 = !DILocation(line: 221, column: 21, scope: !14137)
!14145 = !DILocation(line: 221, column: 34, scope: !14137)
!14146 = !DILocation(line: 223, column: 27, scope: !14137)
!14147 = !DILocation(line: 223, column: 33, scope: !14137)
!14148 = !DILocation(line: 224, column: 27, scope: !14137)
!14149 = !DILocation(line: 224, column: 32, scope: !14137)
!14150 = !DILocation(line: 232, column: 16, scope: !14137)
!14151 = !DILocation(line: 232, column: 30, scope: !14137)
!14152 = !DILocation(line: 239, column: 24, scope: !14137)
!14153 = !DILocation(line: 240, column: 1, scope: !14137)
!14154 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2175, file: !2175, line: 399, type: !14155, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !14157)
!14155 = !DISubroutineType(types: !14156)
!14156 = !{!443}
!14157 = !{!14158}
!14158 = !DILocalVariable(name: "stack_ptr", scope: !14154, file: !2175, line: 401, type: !443)
!14159 = !DILocation(line: 404, column: 2, scope: !14154)
!14160 = !DILocation(line: 416, column: 24, scope: !14154)
!14161 = !DILocation(line: 418, column: 14, scope: !14154)
!14162 = !DILocation(line: 0, scope: !14154)
!14163 = !DILocation(line: 423, column: 2, scope: !14154)
!14164 = !DILocation(line: 424, column: 2, scope: !14154)
!14165 = !DILocation(line: 426, column: 2, scope: !14154)
!14166 = !DILocation(line: 428, column: 2, scope: !14154)
!14167 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2175, file: !2175, line: 432, type: !14168, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !14170)
!14168 = !DISubroutineType(types: !14169)
!14169 = !{null, !443}
!14170 = !{!14171}
!14171 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !14167, file: !2175, line: 432, type: !443)
!14172 = !DILocation(line: 0, scope: !14167)
!14173 = !DILocation(line: 435, column: 2, scope: !14167)
!14174 = !DILocation(line: 445, column: 2, scope: !14167)
!14175 = distinct !DISubprogram(name: "bg_thread_main", scope: !2175, file: !2175, line: 277, type: !5182, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !14176)
!14176 = !{!14177, !14178, !14179}
!14177 = !DILocalVariable(name: "unused1", arg: 1, scope: !14175, file: !2175, line: 277, type: !104)
!14178 = !DILocalVariable(name: "unused2", arg: 2, scope: !14175, file: !2175, line: 277, type: !104)
!14179 = !DILocalVariable(name: "unused3", arg: 3, scope: !14175, file: !2175, line: 277, type: !104)
!14180 = !DILocation(line: 0, scope: !14175)
!14181 = !DILocation(line: 291, column: 20, scope: !14175)
!14182 = !DILocation(line: 293, column: 2, scope: !14175)
!14183 = !DILocation(line: 297, column: 2, scope: !14175)
!14184 = !DILocation(line: 305, column: 2, scope: !14175)
!14185 = !DILocation(line: 307, column: 2, scope: !14175)
!14186 = !DILocation(line: 330, column: 8, scope: !14175)
!14187 = !DILocation(line: 333, column: 34, scope: !14175)
!14188 = !DILocation(line: 339, column: 1, scope: !14175)
!14189 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2435, file: !2435, line: 45, type: !14190, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14198)
!14190 = !DISubroutineType(types: !14191)
!14191 = !{null, !14192, !104}
!14192 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !359, line: 103, baseType: !14193)
!14193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14194, size: 32)
!14194 = !DISubroutineType(types: !14195)
!14195 = !{null, !14196, !104}
!14196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14197, size: 32)
!14197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2440)
!14198 = !{!14199, !14200}
!14199 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14189, file: !2435, line: 45, type: !14192)
!14200 = !DILocalVariable(name: "user_data", arg: 2, scope: !14189, file: !2435, line: 45, type: !104)
!14201 = !DILocation(line: 0, scope: !14189)
!14202 = !DILocation(line: 71, column: 1, scope: !14189)
!14203 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2435, file: !2435, line: 73, type: !14190, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14204)
!14204 = !{!14205, !14206}
!14205 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14203, file: !2435, line: 73, type: !14192)
!14206 = !DILocalVariable(name: "user_data", arg: 2, scope: !14203, file: !2435, line: 73, type: !104)
!14207 = !DILocation(line: 0, scope: !14203)
!14208 = !DILocation(line: 95, column: 1, scope: !14203)
!14209 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2435, file: !2435, line: 97, type: !8082, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !437)
!14210 = !DILocation(line: 1031, column: 3, scope: !14211, inlinedAt: !14214)
!14211 = distinct !DISubprogram(name: "__get_IPSR", scope: !7063, file: !7063, line: 1027, type: !7144, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14212)
!14212 = !{!14213}
!14213 = !DILocalVariable(name: "result", scope: !14211, file: !7063, line: 1029, type: !113)
!14214 = distinct !DILocation(line: 48, column: 10, scope: !14215, inlinedAt: !14216)
!14215 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8081, file: !8081, line: 46, type: !8082, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !437)
!14216 = distinct !DILocation(line: 99, column: 9, scope: !14209)
!14217 = !{i64 3584184}
!14218 = !DILocation(line: 0, scope: !14211, inlinedAt: !14214)
!14219 = !DILocation(line: 48, column: 9, scope: !14215, inlinedAt: !14216)
!14220 = !DILocation(line: 99, column: 2, scope: !14209)
!14221 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2435, file: !2435, line: 106, type: !3413, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !437)
!14222 = !DILocation(line: 108, column: 2, scope: !14221)
!14223 = !DILocation(line: 108, column: 17, scope: !14221)
!14224 = !DILocation(line: 108, column: 30, scope: !14221)
!14225 = !DILocation(line: 109, column: 1, scope: !14221)
!14226 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2435, file: !2435, line: 116, type: !3413, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !437)
!14227 = !DILocation(line: 118, column: 2, scope: !14226)
!14228 = !DILocation(line: 118, column: 17, scope: !14226)
!14229 = !DILocation(line: 118, column: 30, scope: !14226)
!14230 = !DILocation(line: 119, column: 1, scope: !14226)
!14231 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2435, file: !2435, line: 126, type: !8082, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !437)
!14232 = !DILocation(line: 128, column: 10, scope: !14231)
!14233 = !DILocation(line: 128, column: 25, scope: !14231)
!14234 = !DILocation(line: 128, column: 38, scope: !14231)
!14235 = !DILocation(line: 128, column: 53, scope: !14231)
!14236 = !DILocation(line: 128, column: 2, scope: !14231)
!14237 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2435, file: !2435, line: 187, type: !14238, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14240)
!14238 = !DISubroutineType(types: !14239)
!14239 = !{!108, !2439, !105}
!14240 = !{!14241, !14242}
!14241 = !DILocalVariable(name: "thread", arg: 1, scope: !14237, file: !2435, line: 187, type: !2439)
!14242 = !DILocalVariable(name: "value", arg: 2, scope: !14237, file: !2435, line: 187, type: !105)
!14243 = !DILocation(line: 0, scope: !14237)
!14244 = !DILocation(line: 206, column: 2, scope: !14237)
!14245 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2435, file: !2435, line: 238, type: !14246, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14248)
!14246 = !DISubroutineType(types: !14247)
!14247 = !{!105, !2439}
!14248 = !{!14249}
!14249 = !DILocalVariable(name: "thread", arg: 1, scope: !14245, file: !2435, line: 238, type: !2439)
!14250 = !DILocation(line: 0, scope: !14245)
!14251 = !DILocation(line: 244, column: 2, scope: !14245)
!14252 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2435, file: !2435, line: 248, type: !14253, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14255)
!14253 = !DISubroutineType(types: !14254)
!14254 = !{!108, !2438, !443, !439}
!14255 = !{!14256, !14257, !14258}
!14256 = !DILocalVariable(name: "thread", arg: 1, scope: !14252, file: !2435, line: 248, type: !2438)
!14257 = !DILocalVariable(name: "buf", arg: 2, scope: !14252, file: !2435, line: 248, type: !443)
!14258 = !DILocalVariable(name: "size", arg: 3, scope: !14252, file: !2435, line: 248, type: !439)
!14259 = !DILocation(line: 0, scope: !14252)
!14260 = !DILocation(line: 257, column: 2, scope: !14252)
!14261 = !DILocation(line: 0, scope: !2434)
!14262 = !DILocation(line: 281, column: 11, scope: !14263)
!14263 = distinct !DILexicalBlock(scope: !2434, file: !2435, line: 281, column: 6)
!14264 = !DILocation(line: 281, column: 20, scope: !14263)
!14265 = !DILocation(line: 275, column: 45, scope: !2434)
!14266 = !DILocation(line: 285, column: 10, scope: !2434)
!14267 = !DILocation(line: 0, scope: !2555)
!14268 = !DILocation(line: 293, column: 39, scope: !14269)
!14269 = distinct !DILexicalBlock(scope: !2555, file: !2435, line: 293, column: 2)
!14270 = !DILocation(line: 293, column: 2, scope: !2555)
!14271 = !DILocation(line: 273, column: 14, scope: !2434)
!14272 = !DILocation(line: 309, column: 2, scope: !2434)
!14273 = !DILocation(line: 309, column: 11, scope: !2434)
!14274 = !DILocation(line: 311, column: 2, scope: !2434)
!14275 = !DILocation(line: 293, column: 26, scope: !14269)
!14276 = !DILocation(line: 294, column: 9, scope: !14277)
!14277 = distinct !DILexicalBlock(scope: !14269, file: !2435, line: 293, column: 54)
!14278 = !DILocation(line: 295, column: 21, scope: !14279)
!14279 = distinct !DILexicalBlock(scope: !14277, file: !2435, line: 295, column: 7)
!14280 = !DILocation(line: 295, column: 28, scope: !14279)
!14281 = !DILocation(line: 295, column: 7, scope: !14277)
!14282 = !DILocation(line: 299, column: 25, scope: !14277)
!14283 = !DILocation(line: 299, column: 41, scope: !14277)
!14284 = !DILocation(line: 300, column: 7, scope: !14277)
!14285 = !DILocation(line: 300, column: 26, scope: !14277)
!14286 = !DILocation(line: 299, column: 10, scope: !14277)
!14287 = !DILocation(line: 299, column: 7, scope: !14277)
!14288 = !DILocation(line: 302, column: 16, scope: !14277)
!14289 = !DILocation(line: 304, column: 20, scope: !14290)
!14290 = distinct !DILexicalBlock(scope: !14277, file: !2435, line: 304, column: 7)
!14291 = !DILocation(line: 304, column: 7, scope: !14277)
!14292 = !DILocation(line: 305, column: 26, scope: !14293)
!14293 = distinct !DILexicalBlock(scope: !14290, file: !2435, line: 304, column: 26)
!14294 = !DILocation(line: 305, column: 42, scope: !14293)
!14295 = !DILocation(line: 305, column: 11, scope: !14293)
!14296 = !DILocation(line: 305, column: 8, scope: !14293)
!14297 = !DILocation(line: 306, column: 3, scope: !14293)
!14298 = !DILocation(line: 293, column: 50, scope: !14269)
!14299 = !DILocation(line: 312, column: 1, scope: !2434)
!14300 = distinct !DISubprogram(name: "copy_bytes", scope: !2435, file: !2435, line: 261, type: !14301, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14303)
!14301 = !DISubroutineType(types: !14302)
!14302 = !{!439, !443, !439, !105, !439}
!14303 = !{!14304, !14305, !14306, !14307, !14308}
!14304 = !DILocalVariable(name: "dest", arg: 1, scope: !14300, file: !2435, line: 261, type: !443)
!14305 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14300, file: !2435, line: 261, type: !439)
!14306 = !DILocalVariable(name: "src", arg: 3, scope: !14300, file: !2435, line: 261, type: !105)
!14307 = !DILocalVariable(name: "src_size", arg: 4, scope: !14300, file: !2435, line: 261, type: !439)
!14308 = !DILocalVariable(name: "bytes_to_copy", scope: !14300, file: !2435, line: 263, type: !439)
!14309 = !DILocation(line: 0, scope: !14300)
!14310 = !DILocation(line: 265, column: 18, scope: !14300)
!14311 = !DILocation(line: 266, column: 2, scope: !14300)
!14312 = !DILocation(line: 268, column: 2, scope: !14300)
!14313 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2435, file: !2435, line: 383, type: !14314, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14316)
!14314 = !DISubroutineType(types: !14315)
!14315 = !{null, !2439}
!14316 = !{!14317}
!14317 = !DILocalVariable(name: "thread", arg: 1, scope: !14313, file: !2435, line: 383, type: !2439)
!14318 = !DILocation(line: 0, scope: !14313)
!14319 = !DILocation(line: 387, column: 2, scope: !14313)
!14320 = !DILocation(line: 388, column: 1, scope: !14313)
!14321 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2435, file: !2435, line: 528, type: !14322, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14329)
!14322 = !DISubroutineType(types: !14323)
!14323 = !{!443, !2439, !14324, !439, !5179, !104, !104, !104, !108, !113, !105}
!14324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14325, size: 32)
!14325 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5180, line: 44, baseType: !14326)
!14326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2382, line: 47, size: 8, elements: !14327)
!14327 = !{!14328}
!14328 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14326, file: !2382, line: 48, baseType: !107, size: 8)
!14329 = !{!14330, !14331, !14332, !14333, !14334, !14335, !14336, !14337, !14338, !14339, !14340}
!14330 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14321, file: !2435, line: 528, type: !2439)
!14331 = !DILocalVariable(name: "stack", arg: 2, scope: !14321, file: !2435, line: 529, type: !14324)
!14332 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14321, file: !2435, line: 529, type: !439)
!14333 = !DILocalVariable(name: "entry", arg: 4, scope: !14321, file: !2435, line: 530, type: !5179)
!14334 = !DILocalVariable(name: "p1", arg: 5, scope: !14321, file: !2435, line: 531, type: !104)
!14335 = !DILocalVariable(name: "p2", arg: 6, scope: !14321, file: !2435, line: 531, type: !104)
!14336 = !DILocalVariable(name: "p3", arg: 7, scope: !14321, file: !2435, line: 531, type: !104)
!14337 = !DILocalVariable(name: "prio", arg: 8, scope: !14321, file: !2435, line: 532, type: !108)
!14338 = !DILocalVariable(name: "options", arg: 9, scope: !14321, file: !2435, line: 532, type: !113)
!14339 = !DILocalVariable(name: "name", arg: 10, scope: !14321, file: !2435, line: 532, type: !105)
!14340 = !DILocalVariable(name: "stack_ptr", scope: !14321, file: !2435, line: 534, type: !443)
!14341 = !DILocation(line: 0, scope: !14321)
!14342 = !DILocation(line: 550, column: 28, scope: !14321)
!14343 = !DILocation(line: 550, column: 2, scope: !14321)
!14344 = !DILocation(line: 553, column: 34, scope: !14321)
!14345 = !DILocation(line: 553, column: 2, scope: !14321)
!14346 = !DILocation(line: 554, column: 14, scope: !14321)
!14347 = !DILocation(line: 564, column: 2, scope: !14321)
!14348 = !DILocation(line: 567, column: 14, scope: !14321)
!14349 = !DILocation(line: 567, column: 24, scope: !14321)
!14350 = !DILocation(line: 612, column: 7, scope: !14351)
!14351 = distinct !DILexicalBlock(scope: !14321, file: !2435, line: 612, column: 6)
!14352 = !DILocation(line: 612, column: 6, scope: !14321)
!14353 = !DILocation(line: 627, column: 40, scope: !14321)
!14354 = !DILocation(line: 637, column: 2, scope: !14321)
!14355 = !DILocation(line: 613, column: 15, scope: !14356)
!14356 = distinct !DILexicalBlock(scope: !14351, file: !2435, line: 612, column: 17)
!14357 = !DILocation(line: 613, column: 29, scope: !14356)
!14358 = !DILocation(line: 638, column: 1, scope: !14321)
!14359 = distinct !DISubprogram(name: "z_waitq_init", scope: !14360, file: !14360, line: 47, type: !14361, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14363)
!14360 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14361 = !DISubroutineType(types: !14362)
!14362 = !{null, !2470}
!14363 = !{!14364}
!14364 = !DILocalVariable(name: "w", arg: 1, scope: !14359, file: !14360, line: 47, type: !2470)
!14365 = !DILocation(line: 0, scope: !14359)
!14366 = !DILocation(line: 49, column: 21, scope: !14359)
!14367 = !DILocation(line: 49, column: 2, scope: !14359)
!14368 = !DILocation(line: 50, column: 1, scope: !14359)
!14369 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2435, file: !2435, line: 791, type: !14370, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14373)
!14370 = !DISubroutineType(types: !14371)
!14371 = !{null, !14372, !108, !113, !32}
!14372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2443, size: 32)
!14373 = !{!14374, !14375, !14376, !14377}
!14374 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14369, file: !2435, line: 791, type: !14372)
!14375 = !DILocalVariable(name: "priority", arg: 2, scope: !14369, file: !2435, line: 791, type: !108)
!14376 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14369, file: !2435, line: 792, type: !113)
!14377 = !DILocalVariable(name: "options", arg: 4, scope: !14369, file: !2435, line: 792, type: !32)
!14378 = !DILocation(line: 0, scope: !14369)
!14379 = !DILocation(line: 795, column: 15, scope: !14369)
!14380 = !DILocation(line: 795, column: 25, scope: !14369)
!14381 = !DILocation(line: 796, column: 30, scope: !14369)
!14382 = !DILocation(line: 796, column: 15, scope: !14369)
!14383 = !DILocation(line: 796, column: 28, scope: !14369)
!14384 = !DILocation(line: 797, column: 30, scope: !14369)
!14385 = !DILocation(line: 797, column: 15, scope: !14369)
!14386 = !DILocation(line: 797, column: 28, scope: !14369)
!14387 = !DILocation(line: 799, column: 22, scope: !14369)
!14388 = !DILocation(line: 799, column: 15, scope: !14369)
!14389 = !DILocation(line: 799, column: 20, scope: !14369)
!14390 = !DILocation(line: 801, column: 15, scope: !14369)
!14391 = !DILocation(line: 801, column: 28, scope: !14369)
!14392 = !DILocation(line: 814, column: 2, scope: !14369)
!14393 = !DILocation(line: 815, column: 1, scope: !14369)
!14394 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2435, file: !2435, line: 449, type: !14395, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14397)
!14395 = !DISubroutineType(types: !14396)
!14396 = !{!443, !2439, !14324, !439}
!14397 = !{!14398, !14399, !14400, !14401, !14402, !14403, !14404, !14405}
!14398 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14394, file: !2435, line: 449, type: !2439)
!14399 = !DILocalVariable(name: "stack", arg: 2, scope: !14394, file: !2435, line: 450, type: !14324)
!14400 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14394, file: !2435, line: 450, type: !439)
!14401 = !DILocalVariable(name: "stack_obj_size", scope: !14394, file: !2435, line: 452, type: !439)
!14402 = !DILocalVariable(name: "stack_buf_size", scope: !14394, file: !2435, line: 452, type: !439)
!14403 = !DILocalVariable(name: "stack_ptr", scope: !14394, file: !2435, line: 453, type: !443)
!14404 = !DILocalVariable(name: "stack_buf_start", scope: !14394, file: !2435, line: 453, type: !443)
!14405 = !DILocalVariable(name: "delta", scope: !14394, file: !2435, line: 454, type: !439)
!14406 = !DILocation(line: 0, scope: !14394)
!14407 = !DILocation(line: 465, column: 20, scope: !14408)
!14408 = distinct !DILexicalBlock(scope: !14394, file: !2435, line: 463, column: 2)
!14409 = !DILocation(line: 466, column: 21, scope: !14408)
!14410 = !DILocation(line: 473, column: 28, scope: !14394)
!14411 = !DILocation(line: 514, column: 33, scope: !14394)
!14412 = !DILocation(line: 514, column: 25, scope: !14394)
!14413 = !DILocation(line: 514, column: 31, scope: !14394)
!14414 = !DILocation(line: 515, column: 25, scope: !14394)
!14415 = !DILocation(line: 515, column: 30, scope: !14394)
!14416 = !DILocation(line: 516, column: 25, scope: !14394)
!14417 = !DILocation(line: 516, column: 31, scope: !14394)
!14418 = !DILocation(line: 520, column: 2, scope: !14394)
!14419 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2382, file: !2382, line: 331, type: !14420, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14422)
!14420 = !DISubroutineType(types: !14421)
!14421 = !{!443, !14324}
!14422 = !{!14423}
!14423 = !DILocalVariable(name: "sym", arg: 1, scope: !14419, file: !2382, line: 331, type: !14324)
!14424 = !DILocation(line: 0, scope: !14419)
!14425 = !DILocation(line: 333, column: 21, scope: !14419)
!14426 = !DILocation(line: 333, column: 2, scope: !14419)
!14427 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14428, file: !14428, line: 40, type: !14429, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14431)
!14428 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14429 = !DISubroutineType(types: !14430)
!14430 = !{null, !14372}
!14431 = !{!14432}
!14432 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14427, file: !14428, line: 40, type: !14372)
!14433 = !DILocation(line: 0, scope: !14427)
!14434 = !DILocation(line: 42, column: 31, scope: !14427)
!14435 = !DILocation(line: 42, column: 2, scope: !14427)
!14436 = !DILocation(line: 43, column: 1, scope: !14427)
!14437 = distinct !DISubprogram(name: "z_init_timeout", scope: !14428, file: !14428, line: 25, type: !2496, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14438)
!14438 = !{!14439}
!14439 = !DILocalVariable(name: "to", arg: 1, scope: !14437, file: !14428, line: 25, type: !2498)
!14440 = !DILocation(line: 0, scope: !14437)
!14441 = !DILocation(line: 27, column: 22, scope: !14437)
!14442 = !DILocation(line: 27, column: 2, scope: !14437)
!14443 = !DILocation(line: 28, column: 1, scope: !14437)
!14444 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !14445, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14447)
!14445 = !DISubroutineType(types: !14446)
!14446 = !{null, !2542}
!14447 = !{!14448}
!14448 = !DILocalVariable(name: "node", arg: 1, scope: !14444, file: !367, line: 211, type: !2542)
!14449 = !DILocation(line: 0, scope: !14444)
!14450 = !DILocation(line: 213, column: 8, scope: !14444)
!14451 = !DILocation(line: 213, column: 13, scope: !14444)
!14452 = !DILocation(line: 214, column: 8, scope: !14444)
!14453 = !DILocation(line: 214, column: 13, scope: !14444)
!14454 = !DILocation(line: 215, column: 1, scope: !14444)
!14455 = distinct !DISubprogram(name: "sys_dlist_init", scope: !367, file: !367, line: 197, type: !14456, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14459)
!14456 = !DISubroutineType(types: !14457)
!14457 = !{null, !14458}
!14458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2475, size: 32)
!14459 = !{!14460}
!14460 = !DILocalVariable(name: "list", arg: 1, scope: !14455, file: !367, line: 197, type: !14458)
!14461 = !DILocation(line: 0, scope: !14455)
!14462 = !DILocation(line: 199, column: 8, scope: !14455)
!14463 = !DILocation(line: 199, column: 13, scope: !14455)
!14464 = !DILocation(line: 200, column: 8, scope: !14455)
!14465 = !DILocation(line: 200, column: 13, scope: !14455)
!14466 = !DILocation(line: 201, column: 1, scope: !14455)
!14467 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2435, file: !2435, line: 641, type: !14468, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14474)
!14468 = !DISubroutineType(types: !14469)
!14469 = !{!2438, !2439, !14324, !439, !5179, !104, !104, !104, !108, !113, !14470}
!14470 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !14471)
!14471 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !14472)
!14472 = !{!14473}
!14473 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14471, file: !110, line: 66, baseType: !109, size: 64)
!14474 = !{!14475, !14476, !14477, !14478, !14479, !14480, !14481, !14482, !14483, !14484}
!14475 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14467, file: !2435, line: 641, type: !2439)
!14476 = !DILocalVariable(name: "stack", arg: 2, scope: !14467, file: !2435, line: 642, type: !14324)
!14477 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14467, file: !2435, line: 643, type: !439)
!14478 = !DILocalVariable(name: "entry", arg: 4, scope: !14467, file: !2435, line: 643, type: !5179)
!14479 = !DILocalVariable(name: "p1", arg: 5, scope: !14467, file: !2435, line: 644, type: !104)
!14480 = !DILocalVariable(name: "p2", arg: 6, scope: !14467, file: !2435, line: 644, type: !104)
!14481 = !DILocalVariable(name: "p3", arg: 7, scope: !14467, file: !2435, line: 644, type: !104)
!14482 = !DILocalVariable(name: "prio", arg: 8, scope: !14467, file: !2435, line: 645, type: !108)
!14483 = !DILocalVariable(name: "options", arg: 9, scope: !14467, file: !2435, line: 645, type: !113)
!14484 = !DILocalVariable(name: "delay", arg: 10, scope: !14467, file: !2435, line: 645, type: !14470)
!14485 = !DILocation(line: 0, scope: !14467)
!14486 = !DILocation(line: 649, column: 2, scope: !14467)
!14487 = !DILocation(line: 652, column: 7, scope: !14488)
!14488 = distinct !DILexicalBlock(scope: !14467, file: !2435, line: 652, column: 6)
!14489 = !DILocation(line: 652, column: 6, scope: !14467)
!14490 = !DILocation(line: 653, column: 3, scope: !14491)
!14491 = distinct !DILexicalBlock(scope: !14488, file: !2435, line: 652, column: 39)
!14492 = !DILocation(line: 654, column: 2, scope: !14491)
!14493 = !DILocation(line: 656, column: 2, scope: !14467)
!14494 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2435, file: !2435, line: 401, type: !14495, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14497)
!14495 = !DISubroutineType(types: !14496)
!14496 = !{null, !2439, !14470}
!14497 = !{!14498, !14499}
!14498 = !DILocalVariable(name: "thread", arg: 1, scope: !14494, file: !2435, line: 401, type: !2439)
!14499 = !DILocalVariable(name: "delay", arg: 2, scope: !14494, file: !2435, line: 401, type: !14470)
!14500 = !DILocation(line: 0, scope: !14494)
!14501 = !DILocation(line: 404, column: 6, scope: !14502)
!14502 = distinct !DILexicalBlock(scope: !14494, file: !2435, line: 404, column: 6)
!14503 = !DILocation(line: 404, column: 6, scope: !14494)
!14504 = !DILocation(line: 405, column: 3, scope: !14505)
!14505 = distinct !DILexicalBlock(scope: !14502, file: !2435, line: 404, column: 38)
!14506 = !DILocation(line: 406, column: 2, scope: !14505)
!14507 = !DILocation(line: 407, column: 3, scope: !14508)
!14508 = distinct !DILexicalBlock(scope: !14502, file: !2435, line: 406, column: 9)
!14509 = !DILocation(line: 413, column: 1, scope: !14494)
!14510 = distinct !DISubprogram(name: "k_thread_start", scope: !3809, file: !3809, line: 205, type: !14511, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14513)
!14511 = !DISubroutineType(types: !14512)
!14512 = !{null, !2438}
!14513 = !{!14514}
!14514 = !DILocalVariable(name: "thread", arg: 1, scope: !14510, file: !3809, line: 205, type: !2438)
!14515 = !DILocation(line: 0, scope: !14510)
!14516 = !DILocation(line: 214, column: 2, scope: !14517)
!14517 = distinct !DILexicalBlock(scope: !14510, file: !3809, line: 214, column: 2)
!14518 = !{i64 2154884401}
!14519 = !DILocation(line: 215, column: 2, scope: !14510)
!14520 = !DILocation(line: 216, column: 1, scope: !14510)
!14521 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14428, file: !14428, line: 47, type: !14495, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14522)
!14522 = !{!14523, !14524}
!14523 = !DILocalVariable(name: "thread", arg: 1, scope: !14521, file: !14428, line: 47, type: !2439)
!14524 = !DILocalVariable(name: "ticks", arg: 2, scope: !14521, file: !14428, line: 47, type: !14470)
!14525 = !DILocation(line: 0, scope: !14521)
!14526 = !DILocation(line: 49, column: 30, scope: !14521)
!14527 = !DILocation(line: 49, column: 2, scope: !14521)
!14528 = !DILocation(line: 50, column: 1, scope: !14521)
!14529 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2435, file: !2435, line: 748, type: !3413, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14530)
!14530 = !{!14531, !14549}
!14531 = !DILocalVariable(name: "thread_data", scope: !14532, file: !2435, line: 750, type: !14533)
!14532 = distinct !DILexicalBlock(scope: !14529, file: !2435, line: 750, column: 2)
!14533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14534, size: 32)
!14534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !359, line: 620, size: 384, elements: !14535)
!14535 = !{!14536, !14537, !14538, !14539, !14540, !14541, !14542, !14543, !14544, !14545, !14546, !14548}
!14536 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14534, file: !359, line: 621, baseType: !2439, size: 32)
!14537 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14534, file: !359, line: 622, baseType: !14324, size: 32, offset: 32)
!14538 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14534, file: !359, line: 623, baseType: !32, size: 32, offset: 64)
!14539 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14534, file: !359, line: 624, baseType: !5179, size: 32, offset: 96)
!14540 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14534, file: !359, line: 625, baseType: !104, size: 32, offset: 128)
!14541 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14534, file: !359, line: 626, baseType: !104, size: 32, offset: 160)
!14542 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14534, file: !359, line: 627, baseType: !104, size: 32, offset: 192)
!14543 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14534, file: !359, line: 628, baseType: !108, size: 32, offset: 224)
!14544 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14534, file: !359, line: 629, baseType: !113, size: 32, offset: 256)
!14545 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14534, file: !359, line: 630, baseType: !220, size: 32, offset: 288)
!14546 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14534, file: !359, line: 631, baseType: !14547, size: 32, offset: 320)
!14547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3413, size: 32)
!14548 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14534, file: !359, line: 632, baseType: !105, size: 32, offset: 352)
!14549 = !DILocalVariable(name: "thread_data", scope: !14550, file: !2435, line: 781, type: !14533)
!14550 = distinct !DILexicalBlock(scope: !14529, file: !2435, line: 781, column: 2)
!14551 = !DILocation(line: 0, scope: !14532)
!14552 = !DILocation(line: 750, column: 2, scope: !14532)
!14553 = !DILocation(line: 780, column: 2, scope: !14529)
!14554 = !DILocation(line: 0, scope: !14550)
!14555 = !DILocation(line: 781, column: 2, scope: !14550)
!14556 = !DILocation(line: 752, column: 17, scope: !14557)
!14557 = distinct !DILexicalBlock(scope: !14558, file: !2435, line: 750, column: 38)
!14558 = distinct !DILexicalBlock(scope: !14532, file: !2435, line: 750, column: 2)
!14559 = !DILocation(line: 753, column: 17, scope: !14557)
!14560 = !DILocation(line: 754, column: 17, scope: !14557)
!14561 = !DILocation(line: 755, column: 17, scope: !14557)
!14562 = !DILocation(line: 756, column: 17, scope: !14557)
!14563 = !DILocation(line: 757, column: 17, scope: !14557)
!14564 = !DILocation(line: 758, column: 17, scope: !14557)
!14565 = !DILocation(line: 759, column: 17, scope: !14557)
!14566 = !DILocation(line: 760, column: 17, scope: !14557)
!14567 = !DILocation(line: 751, column: 3, scope: !14557)
!14568 = !DILocation(line: 763, column: 16, scope: !14557)
!14569 = !DILocation(line: 763, column: 29, scope: !14557)
!14570 = !DILocation(line: 763, column: 39, scope: !14557)
!14571 = !DILocation(line: 750, column: 2, scope: !14558)
!14572 = !DILocation(line: 750, column: 2, scope: !14573)
!14573 = distinct !DILexicalBlock(scope: !14558, file: !2435, line: 750, column: 2)
!14574 = distinct !{!14574, !14552, !14575}
!14575 = !DILocation(line: 764, column: 2, scope: !14532)
!14576 = !DILocation(line: 787, column: 2, scope: !14529)
!14577 = !DILocation(line: 788, column: 1, scope: !14529)
!14578 = !DILocation(line: 782, column: 20, scope: !14579)
!14579 = distinct !DILexicalBlock(scope: !14580, file: !2435, line: 782, column: 7)
!14580 = distinct !DILexicalBlock(scope: !14581, file: !2435, line: 781, column: 38)
!14581 = distinct !DILexicalBlock(scope: !14550, file: !2435, line: 781, column: 2)
!14582 = !DILocation(line: 782, column: 31, scope: !14579)
!14583 = !DILocation(line: 782, column: 7, scope: !14580)
!14584 = !DILocation(line: 783, column: 37, scope: !14585)
!14585 = distinct !DILexicalBlock(scope: !14579, file: !2435, line: 782, column: 51)
!14586 = !DILocation(line: 784, column: 10, scope: !14585)
!14587 = !DILocation(line: 783, column: 4, scope: !14585)
!14588 = !DILocation(line: 785, column: 3, scope: !14585)
!14589 = !DILocation(line: 781, column: 2, scope: !14581)
!14590 = !DILocation(line: 781, column: 2, scope: !14591)
!14591 = distinct !DILexicalBlock(scope: !14581, file: !2435, line: 781, column: 2)
!14592 = distinct !{!14592, !14555, !14593}
!14593 = !DILocation(line: 786, column: 2, scope: !14550)
!14594 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3776, file: !3776, line: 403, type: !3777, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14595)
!14595 = !{!14596}
!14596 = !DILocalVariable(name: "t", arg: 1, scope: !14594, file: !3776, line: 403, type: !114)
!14597 = !DILocation(line: 0, scope: !14594)
!14598 = !DILocalVariable(name: "t", arg: 1, scope: !14599, file: !3776, line: 102, type: !114)
!14599 = distinct !DISubprogram(name: "z_tmcvt", scope: !3776, file: !3776, line: 102, type: !3784, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14600)
!14600 = !{!14598, !14601, !14602, !14603, !14604, !14605, !14606, !14607, !14608, !14609, !14610}
!14601 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14599, file: !3776, line: 102, type: !113)
!14602 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14599, file: !3776, line: 103, type: !113)
!14603 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14599, file: !3776, line: 103, type: !422)
!14604 = !DILocalVariable(name: "result32", arg: 5, scope: !14599, file: !3776, line: 104, type: !422)
!14605 = !DILocalVariable(name: "round_up", arg: 6, scope: !14599, file: !3776, line: 104, type: !422)
!14606 = !DILocalVariable(name: "round_off", arg: 7, scope: !14599, file: !3776, line: 105, type: !422)
!14607 = !DILocalVariable(name: "mul_ratio", scope: !14599, file: !3776, line: 107, type: !422)
!14608 = !DILocalVariable(name: "div_ratio", scope: !14599, file: !3776, line: 109, type: !422)
!14609 = !DILocalVariable(name: "off", scope: !14599, file: !3776, line: 116, type: !114)
!14610 = !DILocalVariable(name: "rdivisor", scope: !14611, file: !3776, line: 119, type: !113)
!14611 = distinct !DILexicalBlock(scope: !14612, file: !3776, line: 118, column: 18)
!14612 = distinct !DILexicalBlock(scope: !14599, file: !3776, line: 118, column: 6)
!14613 = !DILocation(line: 0, scope: !14599, inlinedAt: !14614)
!14614 = distinct !DILocation(line: 406, column: 9, scope: !14594)
!14615 = !DILocation(line: 145, column: 13, scope: !14616, inlinedAt: !14614)
!14616 = distinct !DILexicalBlock(scope: !14617, file: !3776, line: 144, column: 10)
!14617 = distinct !DILexicalBlock(scope: !14618, file: !3776, line: 142, column: 7)
!14618 = distinct !DILexicalBlock(scope: !14619, file: !3776, line: 141, column: 24)
!14619 = distinct !DILexicalBlock(scope: !14620, file: !3776, line: 141, column: 13)
!14620 = distinct !DILexicalBlock(scope: !14599, file: !3776, line: 134, column: 6)
!14621 = !DILocation(line: 406, column: 2, scope: !14594)
!14622 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2435, file: !2435, line: 817, type: !5177, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14623)
!14623 = !{!14624, !14625, !14626, !14627}
!14624 = !DILocalVariable(name: "entry", arg: 1, scope: !14622, file: !2435, line: 817, type: !5179)
!14625 = !DILocalVariable(name: "p1", arg: 2, scope: !14622, file: !2435, line: 818, type: !104)
!14626 = !DILocalVariable(name: "p2", arg: 3, scope: !14622, file: !2435, line: 818, type: !104)
!14627 = !DILocalVariable(name: "p3", arg: 4, scope: !14622, file: !2435, line: 818, type: !104)
!14628 = !DILocation(line: 0, scope: !14622)
!14629 = !DILocation(line: 822, column: 2, scope: !14622)
!14630 = !DILocation(line: 822, column: 17, scope: !14622)
!14631 = !DILocation(line: 822, column: 30, scope: !14622)
!14632 = !DILocation(line: 823, column: 2, scope: !14622)
!14633 = !DILocation(line: 845, column: 2, scope: !14622)
!14634 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2435, file: !2435, line: 888, type: !14635, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14637)
!14635 = !DISubroutineType(types: !14636)
!14636 = !{!108, !2439}
!14637 = !{!14638}
!14638 = !DILocalVariable(name: "thread", arg: 1, scope: !14634, file: !2435, line: 888, type: !2439)
!14639 = !DILocation(line: 0, scope: !14634)
!14640 = !DILocation(line: 893, column: 2, scope: !14634)
!14641 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2435, file: !2435, line: 897, type: !14642, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14644)
!14642 = !DISubroutineType(types: !14643)
!14643 = !{!108, !2439, !32}
!14644 = !{!14645, !14646}
!14645 = !DILocalVariable(name: "thread", arg: 1, scope: !14641, file: !2435, line: 897, type: !2439)
!14646 = !DILocalVariable(name: "options", arg: 2, scope: !14641, file: !2435, line: 897, type: !32)
!14647 = !DILocation(line: 0, scope: !14641)
!14648 = !DILocation(line: 902, column: 2, scope: !14641)
!14649 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2435, file: !2435, line: 1072, type: !14650, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14655)
!14650 = !DISubroutineType(types: !14651)
!14651 = !{!108, !2438, !14652}
!14652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14653, size: 32)
!14653 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !647, line: 234, baseType: !14654)
!14654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !647, line: 192, elements: !437)
!14655 = !{!14656, !14657}
!14656 = !DILocalVariable(name: "thread", arg: 1, scope: !14649, file: !2435, line: 1072, type: !2438)
!14657 = !DILocalVariable(name: "stats", arg: 2, scope: !14649, file: !2435, line: 1073, type: !14652)
!14658 = !DILocation(line: 0, scope: !14649)
!14659 = !DILocation(line: 1075, column: 14, scope: !14660)
!14660 = distinct !DILexicalBlock(scope: !14649, file: !2435, line: 1075, column: 6)
!14661 = !DILocation(line: 1075, column: 23, scope: !14660)
!14662 = !DILocation(line: 1086, column: 1, scope: !14649)
!14663 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2435, file: !2435, line: 1088, type: !14664, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !14666)
!14664 = !DISubroutineType(types: !14665)
!14665 = !{!108, !14652}
!14666 = !{!14667}
!14667 = !DILocalVariable(name: "stats", arg: 1, scope: !14663, file: !2435, line: 1088, type: !14652)
!14668 = !DILocation(line: 0, scope: !14663)
!14669 = !DILocation(line: 1094, column: 12, scope: !14670)
!14670 = distinct !DILexicalBlock(scope: !14663, file: !2435, line: 1094, column: 6)
!14671 = !DILocation(line: 1120, column: 1, scope: !14663)
!14672 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14673, file: !14673, line: 20, type: !3413, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3394, retainedNodes: !437)
!14673 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14674 = !DILocation(line: 30, column: 2, scope: !14672)
!14675 = !DILocation(line: 31, column: 1, scope: !14672)
!14676 = distinct !DISubprogram(name: "idle", scope: !14673, file: !14673, line: 33, type: !5182, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3394, retainedNodes: !14677)
!14677 = !{!14678, !14679, !14680}
!14678 = !DILocalVariable(name: "unused1", arg: 1, scope: !14676, file: !14673, line: 33, type: !104)
!14679 = !DILocalVariable(name: "unused2", arg: 2, scope: !14676, file: !14673, line: 33, type: !104)
!14680 = !DILocalVariable(name: "unused3", arg: 3, scope: !14676, file: !14673, line: 33, type: !104)
!14681 = !DILocation(line: 0, scope: !14676)
!14682 = !DILocation(line: 41, column: 2, scope: !14676)
!14683 = !DILocation(line: 55, column: 2, scope: !14684, inlinedAt: !14688)
!14684 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4087, file: !4087, line: 42, type: !4088, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3394, retainedNodes: !14685)
!14685 = !{!14686, !14687}
!14686 = !DILocalVariable(name: "key", scope: !14684, file: !4087, line: 44, type: !32)
!14687 = !DILocalVariable(name: "tmp", scope: !14684, file: !4087, line: 53, type: !32)
!14688 = distinct !DILocation(line: 62, column: 10, scope: !14689)
!14689 = distinct !DILexicalBlock(scope: !14676, file: !14673, line: 41, column: 15)
!14690 = !{i64 2239757}
!14691 = !DILocation(line: 0, scope: !14684, inlinedAt: !14688)
!14692 = !DILocation(line: 86, column: 3, scope: !14689)
!14693 = distinct !{!14693, !14682, !14694}
!14694 = !DILocation(line: 105, column: 2, scope: !14676)
!14695 = distinct !DISubprogram(name: "k_cpu_idle", scope: !359, file: !359, line: 5627, type: !3413, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3394, retainedNodes: !437)
!14696 = !DILocation(line: 5629, column: 2, scope: !14695)
!14697 = !DILocation(line: 5630, column: 1, scope: !14695)
!14698 = !DISubprogram(name: "arch_cpu_idle", scope: !5180, file: !5180, line: 167, type: !3413, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!14699 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2667, file: !2667, line: 93, type: !14700, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !14702)
!14700 = !DISubroutineType(types: !14701)
!14701 = !{!220, !2562, !2562}
!14702 = !{!14703, !14704, !14705, !14706}
!14703 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14699, file: !2667, line: 93, type: !2562)
!14704 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14699, file: !2667, line: 94, type: !2562)
!14705 = !DILocalVariable(name: "b1", scope: !14699, file: !2667, line: 97, type: !220)
!14706 = !DILocalVariable(name: "b2", scope: !14699, file: !2667, line: 98, type: !220)
!14707 = !DILocation(line: 0, scope: !14699)
!14708 = !DILocation(line: 97, column: 30, scope: !14699)
!14709 = !DILocation(line: 98, column: 30, scope: !14699)
!14710 = !DILocation(line: 100, column: 9, scope: !14711)
!14711 = distinct !DILexicalBlock(scope: !14699, file: !2667, line: 100, column: 6)
!14712 = !DILocation(line: 100, column: 6, scope: !14699)
!14713 = !DILocation(line: 125, column: 1, scope: !14699)
!14714 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2667, file: !2667, line: 428, type: !14715, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !14717)
!14715 = !DISubroutineType(types: !14716)
!14716 = !{null, !2562}
!14717 = !{!14718}
!14718 = !DILocalVariable(name: "curr", arg: 1, scope: !14714, file: !2667, line: 428, type: !2562)
!14719 = !DILocation(line: 0, scope: !14714)
!14720 = !DILocation(line: 434, column: 6, scope: !14721)
!14721 = distinct !DILexicalBlock(scope: !14714, file: !2667, line: 434, column: 6)
!14722 = !DILocation(line: 434, column: 23, scope: !14721)
!14723 = !DILocation(line: 434, column: 6, scope: !14714)
!14724 = !DILocation(line: 435, column: 50, scope: !14725)
!14725 = distinct !DILexicalBlock(scope: !14721, file: !2667, line: 434, column: 29)
!14726 = !DILocation(line: 435, column: 48, scope: !14725)
!14727 = !DILocation(line: 435, column: 29, scope: !14725)
!14728 = !DILocation(line: 436, column: 24, scope: !14725)
!14729 = !DILocation(line: 436, column: 3, scope: !14725)
!14730 = !DILocation(line: 437, column: 2, scope: !14725)
!14731 = !DILocation(line: 438, column: 1, scope: !14714)
!14732 = distinct !DISubprogram(name: "slice_time", scope: !2667, file: !2667, line: 407, type: !14733, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !14735)
!14733 = !DISubroutineType(types: !14734)
!14734 = !{!108, !2562}
!14735 = !{!14736, !14737}
!14736 = !DILocalVariable(name: "curr", arg: 1, scope: !14732, file: !2667, line: 407, type: !2562)
!14737 = !DILocalVariable(name: "ret", scope: !14732, file: !2667, line: 409, type: !108)
!14738 = !DILocation(line: 0, scope: !14732)
!14739 = !DILocation(line: 409, column: 12, scope: !14732)
!14740 = !DILocation(line: 416, column: 2, scope: !14732)
!14741 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2667, file: !2667, line: 440, type: !14742, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !14744)
!14742 = !DISubroutineType(types: !14743)
!14743 = !{null, !220, !108}
!14744 = !{!14745, !14746, !14747, !14753}
!14745 = !DILocalVariable(name: "slice", arg: 1, scope: !14741, file: !2667, line: 440, type: !220)
!14746 = !DILocalVariable(name: "prio", arg: 2, scope: !14741, file: !2667, line: 440, type: !108)
!14747 = !DILocalVariable(name: "__i", scope: !14748, file: !2667, line: 442, type: !14749)
!14748 = distinct !DILexicalBlock(scope: !14741, file: !2667, line: 442, column: 2)
!14749 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !14750)
!14750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !14751)
!14751 = !{!14752}
!14752 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14750, file: !436, line: 33, baseType: !108, size: 32)
!14753 = !DILocalVariable(name: "__key", scope: !14748, file: !2667, line: 442, type: !14749)
!14754 = !DILocation(line: 0, scope: !14741)
!14755 = !DILocation(line: 0, scope: !14748)
!14756 = !DILocalVariable(name: "l", arg: 1, scope: !14757, file: !436, line: 136, type: !14760)
!14757 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !14758, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !14761)
!14758 = !DISubroutineType(types: !14759)
!14759 = !{!14749, !14760}
!14760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2656, size: 32)
!14761 = !{!14756, !14762}
!14762 = !DILocalVariable(name: "k", scope: !14757, file: !436, line: 139, type: !14749)
!14763 = !DILocation(line: 0, scope: !14757, inlinedAt: !14764)
!14764 = distinct !DILocation(line: 442, column: 2, scope: !14748)
!14765 = !DILocation(line: 55, column: 2, scope: !14766, inlinedAt: !14770)
!14766 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4087, file: !4087, line: 42, type: !4088, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !14767)
!14767 = !{!14768, !14769}
!14768 = !DILocalVariable(name: "key", scope: !14766, file: !4087, line: 44, type: !32)
!14769 = !DILocalVariable(name: "tmp", scope: !14766, file: !4087, line: 53, type: !32)
!14770 = distinct !DILocation(line: 145, column: 10, scope: !14757, inlinedAt: !14764)
!14771 = !{i64 2283728}
!14772 = !DILocation(line: 0, scope: !14766, inlinedAt: !14770)
!14773 = !DILocation(line: 443, column: 29, scope: !14774)
!14774 = distinct !DILexicalBlock(scope: !14775, file: !2667, line: 442, column: 26)
!14775 = distinct !DILexicalBlock(scope: !14748, file: !2667, line: 442, column: 2)
!14776 = !DILocation(line: 444, column: 17, scope: !14774)
!14777 = !DILocation(line: 445, column: 51, scope: !14778)
!14778 = distinct !DILexicalBlock(scope: !14774, file: !2667, line: 445, column: 7)
!14779 = !DILocation(line: 445, column: 7, scope: !14774)
!14780 = !DILocation(line: 0, scope: !14774)
!14781 = !DILocation(line: 451, column: 18, scope: !14774)
!14782 = !DILocation(line: 452, column: 3, scope: !14774)
!14783 = !DILocalVariable(name: "key", arg: 2, scope: !14784, file: !436, line: 190, type: !14749)
!14784 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !14785, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !14787)
!14785 = !DISubroutineType(types: !14786)
!14786 = !{null, !14760, !14749}
!14787 = !{!14788, !14783}
!14788 = !DILocalVariable(name: "l", arg: 1, scope: !14784, file: !436, line: 189, type: !14760)
!14789 = !DILocation(line: 0, scope: !14784, inlinedAt: !14790)
!14790 = distinct !DILocation(line: 442, column: 2, scope: !14775)
!14791 = !DILocalVariable(name: "key", arg: 1, scope: !14792, file: !4087, line: 84, type: !32)
!14792 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4087, file: !4087, line: 84, type: !4100, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !14793)
!14793 = !{!14791}
!14794 = !DILocation(line: 0, scope: !14792, inlinedAt: !14795)
!14795 = distinct !DILocation(line: 215, column: 2, scope: !14784, inlinedAt: !14790)
!14796 = !DILocation(line: 95, column: 2, scope: !14792, inlinedAt: !14795)
!14797 = !{i64 2284545}
!14798 = !DILocation(line: 454, column: 1, scope: !14741)
!14799 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3776, file: !3776, line: 389, type: !8309, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !14800)
!14800 = !{!14801}
!14801 = !DILocalVariable(name: "t", arg: 1, scope: !14799, file: !3776, line: 389, type: !113)
!14802 = !DILocation(line: 0, scope: !14799)
!14803 = !DILocalVariable(name: "t", arg: 1, scope: !14804, file: !3776, line: 102, type: !114)
!14804 = distinct !DISubprogram(name: "z_tmcvt", scope: !3776, file: !3776, line: 102, type: !3784, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !14805)
!14805 = !{!14803, !14806, !14807, !14808, !14809, !14810, !14811, !14812, !14813, !14814, !14815}
!14806 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14804, file: !3776, line: 102, type: !113)
!14807 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14804, file: !3776, line: 103, type: !113)
!14808 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14804, file: !3776, line: 103, type: !422)
!14809 = !DILocalVariable(name: "result32", arg: 5, scope: !14804, file: !3776, line: 104, type: !422)
!14810 = !DILocalVariable(name: "round_up", arg: 6, scope: !14804, file: !3776, line: 104, type: !422)
!14811 = !DILocalVariable(name: "round_off", arg: 7, scope: !14804, file: !3776, line: 105, type: !422)
!14812 = !DILocalVariable(name: "mul_ratio", scope: !14804, file: !3776, line: 107, type: !422)
!14813 = !DILocalVariable(name: "div_ratio", scope: !14804, file: !3776, line: 109, type: !422)
!14814 = !DILocalVariable(name: "off", scope: !14804, file: !3776, line: 116, type: !114)
!14815 = !DILocalVariable(name: "rdivisor", scope: !14816, file: !3776, line: 119, type: !113)
!14816 = distinct !DILexicalBlock(scope: !14817, file: !3776, line: 118, column: 18)
!14817 = distinct !DILexicalBlock(scope: !14804, file: !3776, line: 118, column: 6)
!14818 = !DILocation(line: 0, scope: !14804, inlinedAt: !14819)
!14819 = distinct !DILocation(line: 392, column: 9, scope: !14799)
!14820 = !DILocation(line: 143, column: 25, scope: !14821, inlinedAt: !14819)
!14821 = distinct !DILexicalBlock(scope: !14822, file: !3776, line: 142, column: 17)
!14822 = distinct !DILexicalBlock(scope: !14823, file: !3776, line: 142, column: 7)
!14823 = distinct !DILexicalBlock(scope: !14824, file: !3776, line: 141, column: 24)
!14824 = distinct !DILexicalBlock(scope: !14825, file: !3776, line: 141, column: 13)
!14825 = distinct !DILexicalBlock(scope: !14804, file: !3776, line: 134, column: 6)
!14826 = !DILocation(line: 392, column: 2, scope: !14799)
!14827 = distinct !DISubprogram(name: "z_time_slice", scope: !2667, file: !2667, line: 502, type: !9643, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !14828)
!14828 = !{!14829, !14830}
!14829 = !DILocalVariable(name: "ticks", arg: 1, scope: !14827, file: !2667, line: 502, type: !108)
!14830 = !DILocalVariable(name: "key", scope: !14827, file: !2667, line: 511, type: !14749)
!14831 = !DILocation(line: 0, scope: !14827)
!14832 = !DILocation(line: 0, scope: !14757, inlinedAt: !14833)
!14833 = distinct !DILocation(line: 511, column: 25, scope: !14827)
!14834 = !DILocation(line: 55, column: 2, scope: !14766, inlinedAt: !14835)
!14835 = distinct !DILocation(line: 145, column: 10, scope: !14757, inlinedAt: !14833)
!14836 = !DILocation(line: 0, scope: !14766, inlinedAt: !14835)
!14837 = !DILocation(line: 514, column: 6, scope: !14838)
!14838 = distinct !DILexicalBlock(scope: !14827, file: !2667, line: 514, column: 6)
!14839 = !DILocation(line: 514, column: 25, scope: !14838)
!14840 = !DILocation(line: 514, column: 22, scope: !14838)
!14841 = !DILocation(line: 514, column: 6, scope: !14827)
!14842 = !DILocation(line: 515, column: 3, scope: !14843)
!14843 = distinct !DILexicalBlock(scope: !14838, file: !2667, line: 514, column: 35)
!14844 = !DILocation(line: 0, scope: !14784, inlinedAt: !14845)
!14845 = distinct !DILocation(line: 516, column: 3, scope: !14843)
!14846 = !DILocation(line: 0, scope: !14792, inlinedAt: !14847)
!14847 = distinct !DILocation(line: 215, column: 2, scope: !14784, inlinedAt: !14845)
!14848 = !DILocation(line: 95, column: 2, scope: !14792, inlinedAt: !14847)
!14849 = !DILocation(line: 517, column: 3, scope: !14843)
!14850 = !DILocation(line: 519, column: 18, scope: !14827)
!14851 = !DILocation(line: 522, column: 6, scope: !14852)
!14852 = distinct !DILexicalBlock(scope: !14827, file: !2667, line: 522, column: 6)
!14853 = !DILocation(line: 522, column: 27, scope: !14852)
!14854 = !DILocation(line: 522, column: 30, scope: !14852)
!14855 = !DILocation(line: 522, column: 6, scope: !14827)
!14856 = !DILocation(line: 523, column: 30, scope: !14857)
!14857 = distinct !DILexicalBlock(scope: !14858, file: !2667, line: 523, column: 7)
!14858 = distinct !DILexicalBlock(scope: !14852, file: !2667, line: 522, column: 51)
!14859 = !DILocation(line: 523, column: 13, scope: !14857)
!14860 = !DILocation(line: 523, column: 7, scope: !14858)
!14861 = !DILocation(line: 530, column: 10, scope: !14862)
!14862 = distinct !DILexicalBlock(scope: !14857, file: !2667, line: 523, column: 43)
!14863 = !DILocation(line: 531, column: 3, scope: !14862)
!14864 = !DILocation(line: 532, column: 30, scope: !14865)
!14865 = distinct !DILexicalBlock(scope: !14857, file: !2667, line: 531, column: 10)
!14866 = !DILocation(line: 535, column: 29, scope: !14867)
!14867 = distinct !DILexicalBlock(scope: !14852, file: !2667, line: 534, column: 9)
!14868 = !DILocation(line: 0, scope: !14784, inlinedAt: !14869)
!14869 = distinct !DILocation(line: 537, column: 2, scope: !14827)
!14870 = !DILocation(line: 0, scope: !14792, inlinedAt: !14871)
!14871 = distinct !DILocation(line: 215, column: 2, scope: !14784, inlinedAt: !14869)
!14872 = !DILocation(line: 95, column: 2, scope: !14792, inlinedAt: !14871)
!14873 = !DILocation(line: 538, column: 1, scope: !14827)
!14874 = distinct !DISubprogram(name: "sliceable", scope: !2667, file: !2667, line: 468, type: !14875, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !14877)
!14875 = !DISubroutineType(types: !14876)
!14876 = !{!422, !2562}
!14877 = !{!14878, !14879}
!14878 = !DILocalVariable(name: "thread", arg: 1, scope: !14874, file: !2667, line: 468, type: !2562)
!14879 = !DILocalVariable(name: "ret", scope: !14874, file: !2667, line: 470, type: !422)
!14880 = !DILocation(line: 0, scope: !14874)
!14881 = !DILocation(line: 470, column: 13, scope: !14874)
!14882 = !DILocation(line: 471, column: 3, scope: !14874)
!14883 = !DILocation(line: 471, column: 7, scope: !14874)
!14884 = !DILocation(line: 472, column: 3, scope: !14874)
!14885 = !DILocation(line: 472, column: 37, scope: !14874)
!14886 = !DILocation(line: 472, column: 24, scope: !14874)
!14887 = !DILocation(line: 472, column: 43, scope: !14874)
!14888 = !DILocation(line: 472, column: 7, scope: !14874)
!14889 = !DILocation(line: 473, column: 3, scope: !14874)
!14890 = !DILocation(line: 473, column: 7, scope: !14874)
!14891 = !DILocation(line: 473, column: 6, scope: !14874)
!14892 = !DILocation(line: 479, column: 2, scope: !14874)
!14893 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2667, file: !2667, line: 482, type: !14894, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !14896)
!14894 = !DISubroutineType(types: !14895)
!14895 = !{!14749, !14749}
!14896 = !{!14897, !14898}
!14897 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14893, file: !2667, line: 482, type: !14749)
!14898 = !DILocalVariable(name: "curr", scope: !14893, file: !2667, line: 484, type: !2562)
!14899 = !DILocation(line: 0, scope: !14893)
!14900 = !DILocation(line: 484, column: 26, scope: !14893)
!14901 = !DILocation(line: 493, column: 7, scope: !14902)
!14902 = distinct !DILexicalBlock(scope: !14893, file: !2667, line: 493, column: 6)
!14903 = !DILocation(line: 493, column: 6, scope: !14893)
!14904 = !DILocation(line: 494, column: 3, scope: !14905)
!14905 = distinct !DILexicalBlock(scope: !14902, file: !2667, line: 493, column: 49)
!14906 = !DILocation(line: 495, column: 2, scope: !14905)
!14907 = !DILocation(line: 496, column: 2, scope: !14893)
!14908 = !DILocation(line: 499, column: 1, scope: !14893)
!14909 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !14034, file: !14034, line: 106, type: !14875, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !14910)
!14910 = !{!14911, !14912}
!14911 = !DILocalVariable(name: "thread", arg: 1, scope: !14909, file: !14034, line: 106, type: !2562)
!14912 = !DILocalVariable(name: "state", scope: !14909, file: !14034, line: 108, type: !164)
!14913 = !DILocation(line: 0, scope: !14909)
!14914 = !DILocation(line: 108, column: 31, scope: !14909)
!14915 = !DILocation(line: 110, column: 16, scope: !14909)
!14916 = !DILocation(line: 111, column: 41, scope: !14909)
!14917 = !DILocation(line: 110, column: 2, scope: !14909)
!14918 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2667, file: !2667, line: 393, type: !14715, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !14919)
!14919 = !{!14920}
!14920 = !DILocalVariable(name: "thread", arg: 1, scope: !14918, file: !2667, line: 393, type: !2562)
!14921 = !DILocation(line: 0, scope: !14918)
!14922 = !DILocation(line: 395, column: 6, scope: !14923)
!14923 = distinct !DILexicalBlock(scope: !14918, file: !2667, line: 395, column: 6)
!14924 = !DILocation(line: 395, column: 6, scope: !14918)
!14925 = !DILocalVariable(name: "thread", arg: 1, scope: !14926, file: !2667, line: 264, type: !2562)
!14926 = distinct !DISubprogram(name: "dequeue_thread", scope: !2667, file: !2667, line: 264, type: !14715, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !14927)
!14927 = !{!14925}
!14928 = !DILocation(line: 0, scope: !14926, inlinedAt: !14929)
!14929 = distinct !DILocation(line: 396, column: 3, scope: !14930)
!14930 = distinct !DILexicalBlock(scope: !14923, file: !2667, line: 395, column: 34)
!14931 = !DILocation(line: 266, column: 15, scope: !14926, inlinedAt: !14929)
!14932 = !DILocation(line: 266, column: 28, scope: !14926, inlinedAt: !14929)
!14933 = !DILocalVariable(name: "thread", arg: 1, scope: !14934, file: !2667, line: 232, type: !2562)
!14934 = distinct !DISubprogram(name: "runq_remove", scope: !2667, file: !2667, line: 232, type: !14715, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !14935)
!14935 = !{!14933}
!14936 = !DILocation(line: 0, scope: !14934, inlinedAt: !14937)
!14937 = distinct !DILocation(line: 268, column: 3, scope: !14938, inlinedAt: !14929)
!14938 = distinct !DILexicalBlock(scope: !14939, file: !2667, line: 267, column: 35)
!14939 = distinct !DILexicalBlock(scope: !14926, file: !2667, line: 267, column: 6)
!14940 = !DILocation(line: 234, column: 2, scope: !14934, inlinedAt: !14937)
!14941 = !DILocation(line: 397, column: 2, scope: !14930)
!14942 = !DILocalVariable(name: "thread", arg: 1, scope: !14943, file: !2667, line: 250, type: !2562)
!14943 = distinct !DISubprogram(name: "queue_thread", scope: !2667, file: !2667, line: 250, type: !14715, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !14944)
!14944 = !{!14942}
!14945 = !DILocation(line: 0, scope: !14943, inlinedAt: !14946)
!14946 = distinct !DILocation(line: 398, column: 2, scope: !14918)
!14947 = !DILocation(line: 252, column: 15, scope: !14943, inlinedAt: !14946)
!14948 = !DILocation(line: 252, column: 28, scope: !14943, inlinedAt: !14946)
!14949 = !DILocalVariable(name: "thread", arg: 1, scope: !14950, file: !2667, line: 227, type: !2562)
!14950 = distinct !DISubprogram(name: "runq_add", scope: !2667, file: !2667, line: 227, type: !14715, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !14951)
!14951 = !{!14949}
!14952 = !DILocation(line: 0, scope: !14950, inlinedAt: !14953)
!14953 = distinct !DILocation(line: 254, column: 3, scope: !14954, inlinedAt: !14946)
!14954 = distinct !DILexicalBlock(scope: !14955, file: !2667, line: 253, column: 35)
!14955 = distinct !DILexicalBlock(scope: !14943, file: !2667, line: 253, column: 6)
!14956 = !DILocalVariable(name: "pq", arg: 1, scope: !14957, file: !2667, line: 181, type: !14960)
!14957 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2667, file: !2667, line: 181, type: !14958, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !14961)
!14958 = !DISubroutineType(types: !14959)
!14959 = !{null, !14960, !2562}
!14960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 32)
!14961 = !{!14956, !14962, !14963}
!14962 = !DILocalVariable(name: "thread", arg: 2, scope: !14957, file: !2667, line: 182, type: !2562)
!14963 = !DILocalVariable(name: "t", scope: !14957, file: !2667, line: 184, type: !2562)
!14964 = !DILocation(line: 0, scope: !14957, inlinedAt: !14965)
!14965 = distinct !DILocation(line: 229, column: 2, scope: !14950, inlinedAt: !14953)
!14966 = !DILocation(line: 188, column: 2, scope: !14967, inlinedAt: !14965)
!14967 = distinct !DILexicalBlock(scope: !14957, file: !2667, line: 188, column: 2)
!14968 = !DILocation(line: 188, column: 2, scope: !14969, inlinedAt: !14965)
!14969 = distinct !DILexicalBlock(scope: !14967, file: !2667, line: 188, column: 2)
!14970 = !DILocation(line: 0, scope: !14967, inlinedAt: !14965)
!14971 = !DILocation(line: 189, column: 7, scope: !14972, inlinedAt: !14965)
!14972 = distinct !DILexicalBlock(scope: !14973, file: !2667, line: 189, column: 7)
!14973 = distinct !DILexicalBlock(scope: !14969, file: !2667, line: 188, column: 56)
!14974 = !DILocation(line: 189, column: 35, scope: !14972, inlinedAt: !14965)
!14975 = !DILocation(line: 189, column: 7, scope: !14973, inlinedAt: !14965)
!14976 = !DILocation(line: 191, column: 21, scope: !14977, inlinedAt: !14965)
!14977 = distinct !DILexicalBlock(scope: !14972, file: !2667, line: 189, column: 40)
!14978 = !DILocation(line: 190, column: 4, scope: !14977, inlinedAt: !14965)
!14979 = !DILocation(line: 192, column: 4, scope: !14977, inlinedAt: !14965)
!14980 = distinct !{!14980, !14966, !14981}
!14981 = !DILocation(line: 194, column: 2, scope: !14967, inlinedAt: !14965)
!14982 = !DILocation(line: 196, column: 37, scope: !14957, inlinedAt: !14965)
!14983 = !DILocation(line: 196, column: 2, scope: !14957, inlinedAt: !14965)
!14984 = !DILocation(line: 197, column: 1, scope: !14957, inlinedAt: !14965)
!14985 = !DILocation(line: 399, column: 25, scope: !14918)
!14986 = !DILocation(line: 399, column: 22, scope: !14918)
!14987 = !DILocation(line: 399, column: 2, scope: !14918)
!14988 = !DILocation(line: 400, column: 1, scope: !14918)
!14989 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !14034, file: !14034, line: 136, type: !14875, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !14990)
!14990 = !{!14991}
!14991 = !DILocalVariable(name: "thread", arg: 1, scope: !14989, file: !14034, line: 136, type: !2562)
!14992 = !DILocation(line: 0, scope: !14989)
!14993 = !DILocation(line: 138, column: 9, scope: !14989)
!14994 = !DILocation(line: 138, column: 2, scope: !14989)
!14995 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2667, file: !2667, line: 1137, type: !14958, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !14996)
!14996 = !{!14997, !14998}
!14997 = !DILocalVariable(name: "pq", arg: 1, scope: !14995, file: !2667, line: 1137, type: !14960)
!14998 = !DILocalVariable(name: "thread", arg: 2, scope: !14995, file: !2667, line: 1137, type: !2562)
!14999 = !DILocation(line: 0, scope: !14995)
!15000 = !DILocation(line: 1141, column: 33, scope: !14995)
!15001 = !DILocation(line: 1141, column: 2, scope: !14995)
!15002 = !DILocation(line: 1142, column: 1, scope: !14995)
!15003 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !367, file: !367, line: 294, type: !15004, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15006)
!15004 = !DISubroutineType(types: !15005)
!15005 = !{!2663, !14960}
!15006 = !{!15007}
!15007 = !DILocalVariable(name: "list", arg: 1, scope: !15003, file: !367, line: 294, type: !14960)
!15008 = !DILocation(line: 0, scope: !15003)
!15009 = !DILocation(line: 296, column: 9, scope: !15003)
!15010 = !DILocation(line: 296, column: 49, scope: !15003)
!15011 = !DILocation(line: 296, column: 2, scope: !15003)
!15012 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !367, file: !367, line: 443, type: !15013, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15015)
!15013 = !DISubroutineType(types: !15014)
!15014 = !{null, !2663, !2663}
!15015 = !{!15016, !15017, !15018}
!15016 = !DILocalVariable(name: "successor", arg: 1, scope: !15012, file: !367, line: 443, type: !2663)
!15017 = !DILocalVariable(name: "node", arg: 2, scope: !15012, file: !367, line: 443, type: !2663)
!15018 = !DILocalVariable(name: "prev", scope: !15012, file: !367, line: 445, type: !15019)
!15019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2663)
!15020 = !DILocation(line: 0, scope: !15012)
!15021 = !DILocation(line: 445, column: 39, scope: !15012)
!15022 = !DILocation(line: 447, column: 8, scope: !15012)
!15023 = !DILocation(line: 447, column: 13, scope: !15012)
!15024 = !DILocation(line: 448, column: 8, scope: !15012)
!15025 = !DILocation(line: 448, column: 13, scope: !15012)
!15026 = !DILocation(line: 449, column: 8, scope: !15012)
!15027 = !DILocation(line: 449, column: 13, scope: !15012)
!15028 = !DILocation(line: 450, column: 18, scope: !15012)
!15029 = !DILocation(line: 451, column: 1, scope: !15012)
!15030 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !367, file: !367, line: 341, type: !15031, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15033)
!15031 = !DISubroutineType(types: !15032)
!15032 = !{!2663, !14960, !2663}
!15033 = !{!15034, !15035}
!15034 = !DILocalVariable(name: "list", arg: 1, scope: !15030, file: !367, line: 341, type: !14960)
!15035 = !DILocalVariable(name: "node", arg: 2, scope: !15030, file: !367, line: 342, type: !2663)
!15036 = !DILocation(line: 0, scope: !15030)
!15037 = !DILocation(line: 344, column: 15, scope: !15030)
!15038 = !DILocation(line: 344, column: 9, scope: !15030)
!15039 = !DILocation(line: 344, column: 26, scope: !15030)
!15040 = !DILocation(line: 344, column: 2, scope: !15030)
!15041 = distinct !DISubprogram(name: "sys_dlist_append", scope: !367, file: !367, line: 404, type: !15042, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15044)
!15042 = !DISubroutineType(types: !15043)
!15043 = !{null, !14960, !2663}
!15044 = !{!15045, !15046, !15047}
!15045 = !DILocalVariable(name: "list", arg: 1, scope: !15041, file: !367, line: 404, type: !14960)
!15046 = !DILocalVariable(name: "node", arg: 2, scope: !15041, file: !367, line: 404, type: !2663)
!15047 = !DILocalVariable(name: "tail", scope: !15041, file: !367, line: 406, type: !15019)
!15048 = !DILocation(line: 0, scope: !15041)
!15049 = !DILocation(line: 406, column: 34, scope: !15041)
!15050 = !DILocation(line: 408, column: 8, scope: !15041)
!15051 = !DILocation(line: 408, column: 13, scope: !15041)
!15052 = !DILocation(line: 409, column: 8, scope: !15041)
!15053 = !DILocation(line: 409, column: 13, scope: !15041)
!15054 = !DILocation(line: 411, column: 8, scope: !15041)
!15055 = !DILocation(line: 411, column: 13, scope: !15041)
!15056 = !DILocation(line: 412, column: 13, scope: !15041)
!15057 = !DILocation(line: 413, column: 1, scope: !15041)
!15058 = distinct !DISubprogram(name: "update_cache", scope: !2667, file: !2667, line: 559, type: !9643, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15059)
!15059 = !{!15060, !15061}
!15060 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15058, file: !2667, line: 559, type: !108)
!15061 = !DILocalVariable(name: "thread", scope: !15058, file: !2667, line: 562, type: !2562)
!15062 = !DILocation(line: 0, scope: !15058)
!15063 = !DILocation(line: 239, column: 9, scope: !15064, inlinedAt: !15067)
!15064 = distinct !DISubprogram(name: "runq_best", scope: !2667, file: !2667, line: 237, type: !15065, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !437)
!15065 = !DISubroutineType(types: !15066)
!15066 = !{!2562}
!15067 = distinct !DILocation(line: 314, column: 28, scope: !15068, inlinedAt: !15071)
!15068 = distinct !DISubprogram(name: "next_up", scope: !2667, file: !2667, line: 312, type: !15065, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15069)
!15069 = !{!15070}
!15070 = !DILocalVariable(name: "thread", scope: !15068, file: !2667, line: 314, type: !2562)
!15071 = distinct !DILocation(line: 562, column: 28, scope: !15058)
!15072 = !DILocation(line: 0, scope: !15068, inlinedAt: !15071)
!15073 = !DILocation(line: 340, column: 17, scope: !15068, inlinedAt: !15071)
!15074 = !DILocation(line: 340, column: 9, scope: !15068, inlinedAt: !15071)
!15075 = !DILocalVariable(name: "thread", arg: 1, scope: !15076, file: !2667, line: 127, type: !2562)
!15076 = distinct !DISubprogram(name: "should_preempt", scope: !2667, file: !2667, line: 127, type: !15077, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15079)
!15077 = !DISubroutineType(types: !15078)
!15078 = !{!422, !2562, !108}
!15079 = !{!15075, !15080}
!15080 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15076, file: !2667, line: 128, type: !108)
!15081 = !DILocation(line: 0, scope: !15076, inlinedAt: !15082)
!15082 = distinct !DILocation(line: 564, column: 6, scope: !15083)
!15083 = distinct !DILexicalBlock(scope: !15058, file: !2667, line: 564, column: 6)
!15084 = !DILocation(line: 133, column: 17, scope: !15085, inlinedAt: !15082)
!15085 = distinct !DILexicalBlock(scope: !15076, file: !2667, line: 133, column: 6)
!15086 = !DILocation(line: 0, scope: !15083)
!15087 = !DILocation(line: 133, column: 6, scope: !15076, inlinedAt: !15082)
!15088 = !DILocation(line: 140, column: 6, scope: !15089, inlinedAt: !15082)
!15089 = distinct !DILexicalBlock(scope: !15076, file: !2667, line: 140, column: 6)
!15090 = !DILocation(line: 140, column: 6, scope: !15076, inlinedAt: !15082)
!15091 = !DILocation(line: 150, column: 9, scope: !15092, inlinedAt: !15082)
!15092 = distinct !DILexicalBlock(scope: !15076, file: !2667, line: 149, column: 6)
!15093 = !DILocation(line: 149, column: 6, scope: !15076, inlinedAt: !15082)
!15094 = !DILocation(line: 157, column: 6, scope: !15095, inlinedAt: !15082)
!15095 = distinct !DILexicalBlock(scope: !15076, file: !2667, line: 157, column: 6)
!15096 = !DILocation(line: 564, column: 6, scope: !15058)
!15097 = !DILocation(line: 566, column: 14, scope: !15098)
!15098 = distinct !DILexicalBlock(scope: !15099, file: !2667, line: 566, column: 7)
!15099 = distinct !DILexicalBlock(scope: !15083, file: !2667, line: 564, column: 42)
!15100 = !DILocation(line: 566, column: 7, scope: !15099)
!15101 = !DILocation(line: 567, column: 4, scope: !15102)
!15102 = distinct !DILexicalBlock(scope: !15098, file: !2667, line: 566, column: 27)
!15103 = !DILocation(line: 568, column: 3, scope: !15102)
!15104 = !DILocation(line: 585, column: 1, scope: !15058)
!15105 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2667, file: !2667, line: 1144, type: !15106, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15108)
!15106 = !DISubroutineType(types: !15107)
!15107 = !{!2562, !14960}
!15108 = !{!15109, !15110, !15111}
!15109 = !DILocalVariable(name: "pq", arg: 1, scope: !15105, file: !2667, line: 1144, type: !14960)
!15110 = !DILocalVariable(name: "thread", scope: !15105, file: !2667, line: 1146, type: !2562)
!15111 = !DILocalVariable(name: "n", scope: !15105, file: !2667, line: 1147, type: !2663)
!15112 = !DILocation(line: 0, scope: !15105)
!15113 = !DILocation(line: 1147, column: 19, scope: !15105)
!15114 = !DILocation(line: 1152, column: 2, scope: !15105)
!15115 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !14034, file: !14034, line: 115, type: !14875, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15116)
!15116 = !{!15117}
!15117 = !DILocalVariable(name: "thread", arg: 1, scope: !15115, file: !14034, line: 115, type: !2562)
!15118 = !DILocation(line: 0, scope: !15115)
!15119 = !DILocation(line: 117, column: 46, scope: !15115)
!15120 = !DILocation(line: 117, column: 10, scope: !15115)
!15121 = !DILocation(line: 117, column: 9, scope: !15115)
!15122 = !DILocation(line: 117, column: 2, scope: !15115)
!15123 = distinct !DISubprogram(name: "is_preempt", scope: !2667, file: !2667, line: 62, type: !14733, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15124)
!15124 = !{!15125}
!15125 = !DILocalVariable(name: "thread", arg: 1, scope: !15123, file: !2667, line: 62, type: !2562)
!15126 = !DILocation(line: 0, scope: !15123)
!15127 = !DILocation(line: 65, column: 22, scope: !15123)
!15128 = !DILocation(line: 65, column: 30, scope: !15123)
!15129 = !DILocation(line: 65, column: 2, scope: !15123)
!15130 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14428, file: !14428, line: 35, type: !15131, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15135)
!15131 = !DISubroutineType(types: !15132)
!15132 = !{!422, !15133}
!15133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15134, size: 32)
!15134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2613)
!15135 = !{!15136}
!15136 = !DILocalVariable(name: "to", arg: 1, scope: !15130, file: !14428, line: 35, type: !15133)
!15137 = !DILocation(line: 0, scope: !15130)
!15138 = !DILocation(line: 37, column: 35, scope: !15130)
!15139 = !DILocation(line: 37, column: 10, scope: !15130)
!15140 = !DILocation(line: 37, column: 9, scope: !15130)
!15141 = !DILocation(line: 37, column: 2, scope: !15130)
!15142 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !367, file: !367, line: 225, type: !15143, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15147)
!15143 = !DISubroutineType(types: !15144)
!15144 = !{!422, !15145}
!15145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15146, size: 32)
!15146 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2572)
!15147 = !{!15148}
!15148 = !DILocalVariable(name: "node", arg: 1, scope: !15142, file: !367, line: 225, type: !15145)
!15149 = !DILocation(line: 0, scope: !15142)
!15150 = !DILocation(line: 227, column: 15, scope: !15142)
!15151 = !DILocation(line: 227, column: 20, scope: !15142)
!15152 = !DILocation(line: 227, column: 2, scope: !15142)
!15153 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !367, file: !367, line: 325, type: !15031, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15154)
!15154 = !{!15155, !15156}
!15155 = !DILocalVariable(name: "list", arg: 1, scope: !15153, file: !367, line: 325, type: !14960)
!15156 = !DILocalVariable(name: "node", arg: 2, scope: !15153, file: !367, line: 326, type: !2663)
!15157 = !DILocation(line: 0, scope: !15153)
!15158 = !DILocation(line: 328, column: 24, scope: !15153)
!15159 = !DILocation(line: 328, column: 15, scope: !15153)
!15160 = !DILocation(line: 328, column: 9, scope: !15153)
!15161 = !DILocation(line: 328, column: 45, scope: !15153)
!15162 = !DILocation(line: 328, column: 2, scope: !15153)
!15163 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !367, file: !367, line: 266, type: !15164, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15166)
!15164 = !DISubroutineType(types: !15165)
!15165 = !{!422, !14960}
!15166 = !{!15167}
!15167 = !DILocalVariable(name: "list", arg: 1, scope: !15163, file: !367, line: 266, type: !14960)
!15168 = !DILocation(line: 0, scope: !15163)
!15169 = !DILocation(line: 268, column: 15, scope: !15163)
!15170 = !DILocation(line: 268, column: 20, scope: !15163)
!15171 = !DILocation(line: 268, column: 2, scope: !15163)
!15172 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !367, file: !367, line: 496, type: !15173, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15175)
!15173 = !DISubroutineType(types: !15174)
!15174 = !{null, !2663}
!15175 = !{!15176, !15177, !15178}
!15176 = !DILocalVariable(name: "node", arg: 1, scope: !15172, file: !367, line: 496, type: !2663)
!15177 = !DILocalVariable(name: "prev", scope: !15172, file: !367, line: 498, type: !15019)
!15178 = !DILocalVariable(name: "next", scope: !15172, file: !367, line: 499, type: !15019)
!15179 = !DILocation(line: 0, scope: !15172)
!15180 = !DILocation(line: 498, column: 34, scope: !15172)
!15181 = !DILocation(line: 499, column: 34, scope: !15172)
!15182 = !DILocation(line: 501, column: 8, scope: !15172)
!15183 = !DILocation(line: 501, column: 13, scope: !15172)
!15184 = !DILocation(line: 502, column: 8, scope: !15172)
!15185 = !DILocation(line: 502, column: 13, scope: !15172)
!15186 = !DILocation(line: 503, column: 2, scope: !15172)
!15187 = !DILocation(line: 504, column: 1, scope: !15172)
!15188 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !15173, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15189)
!15189 = !{!15190}
!15190 = !DILocalVariable(name: "node", arg: 1, scope: !15188, file: !367, line: 211, type: !2663)
!15191 = !DILocation(line: 0, scope: !15188)
!15192 = !DILocation(line: 213, column: 8, scope: !15188)
!15193 = !DILocation(line: 213, column: 13, scope: !15188)
!15194 = !DILocation(line: 214, column: 8, scope: !15188)
!15195 = !DILocation(line: 214, column: 13, scope: !15188)
!15196 = !DILocation(line: 215, column: 1, scope: !15188)
!15197 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !14034, file: !14034, line: 131, type: !15198, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15200)
!15198 = !DISubroutineType(types: !15199)
!15199 = !{!422, !2562, !113}
!15200 = !{!15201, !15202}
!15201 = !DILocalVariable(name: "thread", arg: 1, scope: !15197, file: !14034, line: 131, type: !2562)
!15202 = !DILocalVariable(name: "state", arg: 2, scope: !15197, file: !14034, line: 131, type: !113)
!15203 = !DILocation(line: 0, scope: !15197)
!15204 = !DILocation(line: 133, column: 23, scope: !15197)
!15205 = !DILocation(line: 133, column: 45, scope: !15197)
!15206 = !DILocation(line: 133, column: 2, scope: !15197)
!15207 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14034, file: !14034, line: 211, type: !15208, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15210)
!15208 = !DISubroutineType(types: !15209)
!15209 = !{!422, !108, !108}
!15210 = !{!15211, !15212}
!15211 = !DILocalVariable(name: "prio", arg: 1, scope: !15207, file: !14034, line: 211, type: !108)
!15212 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15207, file: !14034, line: 211, type: !108)
!15213 = !DILocation(line: 0, scope: !15207)
!15214 = !DILocation(line: 213, column: 9, scope: !15207)
!15215 = !DILocation(line: 213, column: 2, scope: !15207)
!15216 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !14034, file: !14034, line: 83, type: !14875, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15217)
!15217 = !{!15218}
!15218 = !DILocalVariable(name: "thread", arg: 1, scope: !15216, file: !14034, line: 83, type: !2562)
!15219 = !DILocation(line: 0, scope: !15216)
!15220 = !DILocation(line: 89, column: 16, scope: !15216)
!15221 = !DILocation(line: 89, column: 2, scope: !15216)
!15222 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14034, file: !14034, line: 206, type: !15208, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15223)
!15223 = !{!15224, !15225}
!15224 = !DILocalVariable(name: "prio1", arg: 1, scope: !15222, file: !14034, line: 206, type: !108)
!15225 = !DILocalVariable(name: "prio2", arg: 2, scope: !15222, file: !14034, line: 206, type: !108)
!15226 = !DILocation(line: 0, scope: !15222)
!15227 = !DILocation(line: 208, column: 15, scope: !15222)
!15228 = !DILocation(line: 208, column: 2, scope: !15222)
!15229 = distinct !DISubprogram(name: "z_ready_thread", scope: !2667, file: !2667, line: 635, type: !14715, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15230)
!15230 = !{!15231, !15232, !15234}
!15231 = !DILocalVariable(name: "thread", arg: 1, scope: !15229, file: !2667, line: 635, type: !2562)
!15232 = !DILocalVariable(name: "__i", scope: !15233, file: !2667, line: 637, type: !14749)
!15233 = distinct !DILexicalBlock(scope: !15229, file: !2667, line: 637, column: 2)
!15234 = !DILocalVariable(name: "__key", scope: !15233, file: !2667, line: 637, type: !14749)
!15235 = !DILocation(line: 0, scope: !15229)
!15236 = !DILocation(line: 0, scope: !15233)
!15237 = !DILocation(line: 0, scope: !14757, inlinedAt: !15238)
!15238 = distinct !DILocation(line: 637, column: 2, scope: !15233)
!15239 = !DILocation(line: 55, column: 2, scope: !14766, inlinedAt: !15240)
!15240 = distinct !DILocation(line: 145, column: 10, scope: !14757, inlinedAt: !15238)
!15241 = !DILocation(line: 0, scope: !14766, inlinedAt: !15240)
!15242 = !DILocation(line: 639, column: 4, scope: !15243)
!15243 = distinct !DILexicalBlock(scope: !15244, file: !2667, line: 638, column: 41)
!15244 = distinct !DILexicalBlock(scope: !15245, file: !2667, line: 638, column: 7)
!15245 = distinct !DILexicalBlock(scope: !15246, file: !2667, line: 637, column: 26)
!15246 = distinct !DILexicalBlock(scope: !15233, file: !2667, line: 637, column: 2)
!15247 = !DILocation(line: 0, scope: !14784, inlinedAt: !15248)
!15248 = distinct !DILocation(line: 637, column: 2, scope: !15246)
!15249 = !DILocation(line: 0, scope: !14792, inlinedAt: !15250)
!15250 = distinct !DILocation(line: 215, column: 2, scope: !14784, inlinedAt: !15248)
!15251 = !DILocation(line: 95, column: 2, scope: !14792, inlinedAt: !15250)
!15252 = !DILocation(line: 642, column: 1, scope: !15229)
!15253 = distinct !DISubprogram(name: "ready_thread", scope: !2667, file: !2667, line: 617, type: !14715, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15254)
!15254 = !{!15255}
!15255 = !DILocalVariable(name: "thread", arg: 1, scope: !15253, file: !2667, line: 617, type: !2562)
!15256 = !DILocation(line: 0, scope: !15253)
!15257 = !DILocation(line: 626, column: 7, scope: !15258)
!15258 = distinct !DILexicalBlock(scope: !15253, file: !2667, line: 626, column: 6)
!15259 = !DILocation(line: 626, column: 34, scope: !15258)
!15260 = !DILocation(line: 626, column: 37, scope: !15258)
!15261 = !DILocation(line: 626, column: 6, scope: !15253)
!15262 = !DILocation(line: 0, scope: !14943, inlinedAt: !15263)
!15263 = distinct !DILocation(line: 629, column: 3, scope: !15264)
!15264 = distinct !DILexicalBlock(scope: !15258, file: !2667, line: 626, column: 64)
!15265 = !DILocation(line: 252, column: 15, scope: !14943, inlinedAt: !15263)
!15266 = !DILocation(line: 252, column: 28, scope: !14943, inlinedAt: !15263)
!15267 = !DILocation(line: 0, scope: !14950, inlinedAt: !15268)
!15268 = distinct !DILocation(line: 254, column: 3, scope: !14954, inlinedAt: !15263)
!15269 = !DILocation(line: 0, scope: !14957, inlinedAt: !15270)
!15270 = distinct !DILocation(line: 229, column: 2, scope: !14950, inlinedAt: !15268)
!15271 = !DILocation(line: 188, column: 2, scope: !14967, inlinedAt: !15270)
!15272 = !DILocation(line: 188, column: 2, scope: !14969, inlinedAt: !15270)
!15273 = !DILocation(line: 0, scope: !14967, inlinedAt: !15270)
!15274 = !DILocation(line: 189, column: 7, scope: !14972, inlinedAt: !15270)
!15275 = !DILocation(line: 189, column: 35, scope: !14972, inlinedAt: !15270)
!15276 = !DILocation(line: 189, column: 7, scope: !14973, inlinedAt: !15270)
!15277 = !DILocation(line: 191, column: 21, scope: !14977, inlinedAt: !15270)
!15278 = !DILocation(line: 190, column: 4, scope: !14977, inlinedAt: !15270)
!15279 = !DILocation(line: 192, column: 4, scope: !14977, inlinedAt: !15270)
!15280 = distinct !{!15280, !15271, !15281}
!15281 = !DILocation(line: 194, column: 2, scope: !14967, inlinedAt: !15270)
!15282 = !DILocation(line: 196, column: 37, scope: !14957, inlinedAt: !15270)
!15283 = !DILocation(line: 196, column: 2, scope: !14957, inlinedAt: !15270)
!15284 = !DILocation(line: 197, column: 1, scope: !14957, inlinedAt: !15270)
!15285 = !DILocation(line: 630, column: 3, scope: !15264)
!15286 = !DILocation(line: 632, column: 2, scope: !15264)
!15287 = !DILocation(line: 633, column: 1, scope: !15253)
!15288 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !14034, file: !14034, line: 120, type: !14875, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15289)
!15289 = !{!15290}
!15290 = !DILocalVariable(name: "thread", arg: 1, scope: !15288, file: !14034, line: 120, type: !2562)
!15291 = !DILocation(line: 0, scope: !15288)
!15292 = !DILocation(line: 122, column: 12, scope: !15288)
!15293 = !DILocation(line: 122, column: 62, scope: !15288)
!15294 = !DILocation(line: 123, column: 4, scope: !15288)
!15295 = !DILocation(line: 122, column: 2, scope: !15288)
!15296 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2667, file: !2667, line: 644, type: !14715, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15297)
!15297 = !{!15298, !15299, !15301}
!15298 = !DILocalVariable(name: "thread", arg: 1, scope: !15296, file: !2667, line: 644, type: !2562)
!15299 = !DILocalVariable(name: "__i", scope: !15300, file: !2667, line: 646, type: !14749)
!15300 = distinct !DILexicalBlock(scope: !15296, file: !2667, line: 646, column: 2)
!15301 = !DILocalVariable(name: "__key", scope: !15300, file: !2667, line: 646, type: !14749)
!15302 = !DILocation(line: 0, scope: !15296)
!15303 = !DILocation(line: 0, scope: !15300)
!15304 = !DILocation(line: 0, scope: !14757, inlinedAt: !15305)
!15305 = distinct !DILocation(line: 646, column: 2, scope: !15300)
!15306 = !DILocation(line: 55, column: 2, scope: !14766, inlinedAt: !15307)
!15307 = distinct !DILocation(line: 145, column: 10, scope: !14757, inlinedAt: !15305)
!15308 = !DILocation(line: 0, scope: !14766, inlinedAt: !15307)
!15309 = !DILocation(line: 647, column: 3, scope: !15310)
!15310 = distinct !DILexicalBlock(scope: !15311, file: !2667, line: 646, column: 26)
!15311 = distinct !DILexicalBlock(scope: !15300, file: !2667, line: 646, column: 2)
!15312 = !DILocation(line: 0, scope: !14784, inlinedAt: !15313)
!15313 = distinct !DILocation(line: 646, column: 2, scope: !15311)
!15314 = !DILocation(line: 0, scope: !14792, inlinedAt: !15315)
!15315 = distinct !DILocation(line: 215, column: 2, scope: !14784, inlinedAt: !15313)
!15316 = !DILocation(line: 95, column: 2, scope: !14792, inlinedAt: !15315)
!15317 = !DILocation(line: 649, column: 1, scope: !15296)
!15318 = distinct !DISubprogram(name: "z_sched_start", scope: !2667, file: !2667, line: 651, type: !14715, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15319)
!15319 = !{!15320, !15321}
!15320 = !DILocalVariable(name: "thread", arg: 1, scope: !15318, file: !2667, line: 651, type: !2562)
!15321 = !DILocalVariable(name: "key", scope: !15318, file: !2667, line: 653, type: !14749)
!15322 = !DILocation(line: 0, scope: !15318)
!15323 = !DILocation(line: 0, scope: !14757, inlinedAt: !15324)
!15324 = distinct !DILocation(line: 653, column: 25, scope: !15318)
!15325 = !DILocation(line: 55, column: 2, scope: !14766, inlinedAt: !15326)
!15326 = distinct !DILocation(line: 145, column: 10, scope: !14757, inlinedAt: !15324)
!15327 = !DILocation(line: 0, scope: !14766, inlinedAt: !15326)
!15328 = !DILocation(line: 655, column: 6, scope: !15329)
!15329 = distinct !DILexicalBlock(scope: !15318, file: !2667, line: 655, column: 6)
!15330 = !DILocation(line: 655, column: 6, scope: !15318)
!15331 = !DILocation(line: 0, scope: !14784, inlinedAt: !15332)
!15332 = distinct !DILocation(line: 656, column: 3, scope: !15333)
!15333 = distinct !DILexicalBlock(scope: !15329, file: !2667, line: 655, column: 36)
!15334 = !DILocation(line: 0, scope: !14792, inlinedAt: !15335)
!15335 = distinct !DILocation(line: 215, column: 2, scope: !14784, inlinedAt: !15332)
!15336 = !DILocation(line: 95, column: 2, scope: !14792, inlinedAt: !15335)
!15337 = !DILocation(line: 657, column: 3, scope: !15333)
!15338 = !DILocation(line: 660, column: 2, scope: !15318)
!15339 = !DILocation(line: 661, column: 2, scope: !15318)
!15340 = !DILocation(line: 662, column: 2, scope: !15318)
!15341 = !DILocation(line: 663, column: 1, scope: !15318)
!15342 = distinct !DISubprogram(name: "z_has_thread_started", scope: !14034, file: !14034, line: 126, type: !14875, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15343)
!15343 = !{!15344}
!15344 = !DILocalVariable(name: "thread", arg: 1, scope: !15342, file: !14034, line: 126, type: !2562)
!15345 = !DILocation(line: 0, scope: !15342)
!15346 = !DILocation(line: 128, column: 23, scope: !15342)
!15347 = !DILocation(line: 128, column: 36, scope: !15342)
!15348 = !DILocation(line: 128, column: 56, scope: !15342)
!15349 = !DILocation(line: 128, column: 2, scope: !15342)
!15350 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14034, file: !14034, line: 155, type: !14715, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15351)
!15351 = !{!15352}
!15352 = !DILocalVariable(name: "thread", arg: 1, scope: !15350, file: !14034, line: 155, type: !2562)
!15353 = !DILocation(line: 0, scope: !15350)
!15354 = !DILocation(line: 157, column: 15, scope: !15350)
!15355 = !DILocation(line: 157, column: 28, scope: !15350)
!15356 = !DILocation(line: 158, column: 1, scope: !15350)
!15357 = distinct !DISubprogram(name: "z_reschedule", scope: !2667, file: !2667, line: 967, type: !14785, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15358)
!15358 = !{!15359, !15360}
!15359 = !DILocalVariable(name: "lock", arg: 1, scope: !15357, file: !2667, line: 967, type: !14760)
!15360 = !DILocalVariable(name: "key", arg: 2, scope: !15357, file: !2667, line: 967, type: !14749)
!15361 = !DILocation(line: 0, scope: !15357)
!15362 = !DILocation(line: 969, column: 6, scope: !15363)
!15363 = distinct !DILexicalBlock(scope: !15357, file: !2667, line: 969, column: 6)
!15364 = !DILocation(line: 969, column: 23, scope: !15363)
!15365 = !DILocation(line: 969, column: 26, scope: !15363)
!15366 = !DILocation(line: 969, column: 6, scope: !15357)
!15367 = !DILocalVariable(name: "key", arg: 2, scope: !15368, file: !14138, line: 193, type: !14749)
!15368 = distinct !DISubprogram(name: "z_swap", scope: !14138, file: !14138, line: 193, type: !15369, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15371)
!15369 = !DISubroutineType(types: !15370)
!15370 = !{!108, !14760, !14749}
!15371 = !{!15372, !15367}
!15372 = !DILocalVariable(name: "lock", arg: 1, scope: !15368, file: !14138, line: 193, type: !14760)
!15373 = !DILocation(line: 0, scope: !15368, inlinedAt: !15374)
!15374 = distinct !DILocation(line: 970, column: 3, scope: !15375)
!15375 = distinct !DILexicalBlock(scope: !15363, file: !2667, line: 969, column: 39)
!15376 = !DILocation(line: 196, column: 9, scope: !15368, inlinedAt: !15374)
!15377 = !DILocation(line: 971, column: 2, scope: !15375)
!15378 = !DILocation(line: 0, scope: !14784, inlinedAt: !15379)
!15379 = distinct !DILocation(line: 972, column: 3, scope: !15380)
!15380 = distinct !DILexicalBlock(scope: !15363, file: !2667, line: 971, column: 9)
!15381 = !DILocation(line: 0, scope: !14792, inlinedAt: !15382)
!15382 = distinct !DILocation(line: 215, column: 2, scope: !14784, inlinedAt: !15379)
!15383 = !DILocation(line: 95, column: 2, scope: !14792, inlinedAt: !15382)
!15384 = !DILocation(line: 975, column: 1, scope: !15357)
!15385 = distinct !DISubprogram(name: "resched", scope: !2667, file: !2667, line: 940, type: !15386, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15388)
!15386 = !DISubroutineType(types: !15387)
!15387 = !{!422, !113}
!15388 = !{!15389}
!15389 = !DILocalVariable(name: "key", arg: 1, scope: !15385, file: !2667, line: 940, type: !113)
!15390 = !DILocation(line: 0, scope: !15385)
!15391 = !DILocalVariable(name: "key", arg: 1, scope: !15392, file: !4087, line: 112, type: !32)
!15392 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !4087, file: !4087, line: 112, type: !15393, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15395)
!15393 = !DISubroutineType(types: !15394)
!15394 = !{!422, !32}
!15395 = !{!15391}
!15396 = !DILocation(line: 0, scope: !15392, inlinedAt: !15397)
!15397 = distinct !DILocation(line: 946, column: 9, scope: !15385)
!15398 = !DILocation(line: 115, column: 13, scope: !15392, inlinedAt: !15397)
!15399 = !DILocation(line: 946, column: 32, scope: !15385)
!15400 = !DILocation(line: 1031, column: 3, scope: !15401, inlinedAt: !15404)
!15401 = distinct !DISubprogram(name: "__get_IPSR", scope: !7063, file: !7063, line: 1027, type: !7144, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15402)
!15402 = !{!15403}
!15403 = !DILocalVariable(name: "result", scope: !15401, file: !7063, line: 1029, type: !113)
!15404 = distinct !DILocation(line: 48, column: 10, scope: !15405, inlinedAt: !15406)
!15405 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8081, file: !8081, line: 46, type: !8082, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !437)
!15406 = distinct !DILocation(line: 946, column: 36, scope: !15385)
!15407 = !{i64 3601341}
!15408 = !DILocation(line: 0, scope: !15401, inlinedAt: !15404)
!15409 = !DILocation(line: 48, column: 9, scope: !15405, inlinedAt: !15406)
!15410 = !DILocation(line: 946, column: 2, scope: !15385)
!15411 = distinct !DISubprogram(name: "need_swap", scope: !2667, file: !2667, line: 953, type: !8082, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15412)
!15412 = !{!15413}
!15413 = !DILocalVariable(name: "new_thread", scope: !15411, file: !2667, line: 959, type: !2562)
!15414 = !DILocation(line: 962, column: 31, scope: !15411)
!15415 = !DILocation(line: 0, scope: !15411)
!15416 = !DILocation(line: 963, column: 23, scope: !15411)
!15417 = !DILocation(line: 963, column: 20, scope: !15411)
!15418 = !DILocation(line: 963, column: 2, scope: !15411)
!15419 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14138, file: !14138, line: 181, type: !7073, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15420)
!15420 = !{!15421, !15422}
!15421 = !DILocalVariable(name: "key", arg: 1, scope: !15419, file: !14138, line: 181, type: !32)
!15422 = !DILocalVariable(name: "ret", scope: !15419, file: !14138, line: 183, type: !108)
!15423 = !DILocation(line: 0, scope: !15419)
!15424 = !DILocation(line: 185, column: 8, scope: !15419)
!15425 = !DILocation(line: 186, column: 2, scope: !15419)
!15426 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2667, file: !2667, line: 665, type: !14715, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15427)
!15427 = !{!15428, !15429, !15431}
!15428 = !DILocalVariable(name: "thread", arg: 1, scope: !15426, file: !2667, line: 665, type: !2562)
!15429 = !DILocalVariable(name: "__i", scope: !15430, file: !2667, line: 671, type: !14749)
!15430 = distinct !DILexicalBlock(scope: !15426, file: !2667, line: 671, column: 2)
!15431 = !DILocalVariable(name: "__key", scope: !15430, file: !2667, line: 671, type: !14749)
!15432 = !DILocation(line: 0, scope: !15426)
!15433 = !DILocation(line: 669, column: 8, scope: !15426)
!15434 = !DILocation(line: 0, scope: !15430)
!15435 = !DILocation(line: 0, scope: !14757, inlinedAt: !15436)
!15436 = distinct !DILocation(line: 671, column: 2, scope: !15430)
!15437 = !DILocation(line: 55, column: 2, scope: !14766, inlinedAt: !15438)
!15438 = distinct !DILocation(line: 145, column: 10, scope: !14757, inlinedAt: !15436)
!15439 = !DILocation(line: 0, scope: !14766, inlinedAt: !15438)
!15440 = !DILocation(line: 672, column: 7, scope: !15441)
!15441 = distinct !DILexicalBlock(scope: !15442, file: !2667, line: 672, column: 7)
!15442 = distinct !DILexicalBlock(scope: !15443, file: !2667, line: 671, column: 26)
!15443 = distinct !DILexicalBlock(scope: !15430, file: !2667, line: 671, column: 2)
!15444 = !DILocation(line: 672, column: 7, scope: !15442)
!15445 = !DILocation(line: 0, scope: !14926, inlinedAt: !15446)
!15446 = distinct !DILocation(line: 673, column: 4, scope: !15447)
!15447 = distinct !DILexicalBlock(scope: !15441, file: !2667, line: 672, column: 35)
!15448 = !DILocation(line: 266, column: 15, scope: !14926, inlinedAt: !15446)
!15449 = !DILocation(line: 266, column: 28, scope: !14926, inlinedAt: !15446)
!15450 = !DILocation(line: 0, scope: !14934, inlinedAt: !15451)
!15451 = distinct !DILocation(line: 268, column: 3, scope: !14938, inlinedAt: !15446)
!15452 = !DILocation(line: 234, column: 2, scope: !14934, inlinedAt: !15451)
!15453 = !DILocation(line: 674, column: 3, scope: !15447)
!15454 = !DILocation(line: 675, column: 3, scope: !15442)
!15455 = !DILocation(line: 676, column: 26, scope: !15442)
!15456 = !DILocation(line: 676, column: 23, scope: !15442)
!15457 = !DILocation(line: 676, column: 3, scope: !15442)
!15458 = !DILocation(line: 0, scope: !14784, inlinedAt: !15459)
!15459 = distinct !DILocation(line: 671, column: 2, scope: !15443)
!15460 = !DILocation(line: 0, scope: !14792, inlinedAt: !15461)
!15461 = distinct !DILocation(line: 215, column: 2, scope: !14784, inlinedAt: !15459)
!15462 = !DILocation(line: 95, column: 2, scope: !14792, inlinedAt: !15461)
!15463 = !DILocation(line: 679, column: 16, scope: !15464)
!15464 = distinct !DILexicalBlock(scope: !15426, file: !2667, line: 679, column: 6)
!15465 = !DILocation(line: 679, column: 13, scope: !15464)
!15466 = !DILocation(line: 679, column: 6, scope: !15426)
!15467 = !DILocation(line: 680, column: 3, scope: !15468)
!15468 = distinct !DILexicalBlock(scope: !15464, file: !2667, line: 679, column: 26)
!15469 = !DILocation(line: 681, column: 2, scope: !15468)
!15470 = !DILocation(line: 684, column: 1, scope: !15426)
!15471 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14428, file: !14428, line: 52, type: !14733, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15472)
!15472 = !{!15473}
!15473 = !DILocalVariable(name: "thread", arg: 1, scope: !15471, file: !14428, line: 52, type: !2562)
!15474 = !DILocation(line: 0, scope: !15471)
!15475 = !DILocation(line: 54, column: 39, scope: !15471)
!15476 = !DILocation(line: 54, column: 9, scope: !15471)
!15477 = !DILocation(line: 54, column: 2, scope: !15471)
!15478 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !14034, file: !14034, line: 141, type: !14715, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15479)
!15479 = !{!15480}
!15480 = !DILocalVariable(name: "thread", arg: 1, scope: !15478, file: !14034, line: 141, type: !2562)
!15481 = !DILocation(line: 0, scope: !15478)
!15482 = !DILocation(line: 143, column: 15, scope: !15478)
!15483 = !DILocation(line: 143, column: 28, scope: !15478)
!15484 = !DILocation(line: 146, column: 1, scope: !15478)
!15485 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14034, file: !14034, line: 73, type: !3413, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !437)
!15486 = !DILocation(line: 55, column: 2, scope: !14766, inlinedAt: !15487)
!15487 = distinct !DILocation(line: 75, column: 30, scope: !15485)
!15488 = !DILocation(line: 0, scope: !14766, inlinedAt: !15487)
!15489 = !DILocation(line: 75, column: 9, scope: !15485)
!15490 = !DILocation(line: 76, column: 1, scope: !15485)
!15491 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2667, file: !2667, line: 977, type: !7154, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15492)
!15492 = !{!15493}
!15493 = !DILocalVariable(name: "key", arg: 1, scope: !15491, file: !2667, line: 977, type: !113)
!15494 = !DILocation(line: 0, scope: !15491)
!15495 = !DILocation(line: 979, column: 6, scope: !15496)
!15496 = distinct !DILexicalBlock(scope: !15491, file: !2667, line: 979, column: 6)
!15497 = !DILocation(line: 979, column: 6, scope: !15491)
!15498 = !DILocation(line: 980, column: 3, scope: !15499)
!15499 = distinct !DILexicalBlock(scope: !15496, file: !2667, line: 979, column: 20)
!15500 = !DILocation(line: 981, column: 2, scope: !15499)
!15501 = !DILocation(line: 0, scope: !14792, inlinedAt: !15502)
!15502 = distinct !DILocation(line: 982, column: 3, scope: !15503)
!15503 = distinct !DILexicalBlock(scope: !15496, file: !2667, line: 981, column: 9)
!15504 = !DILocation(line: 95, column: 2, scope: !14792, inlinedAt: !15502)
!15505 = !DILocation(line: 985, column: 1, scope: !15491)
!15506 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2667, file: !2667, line: 695, type: !14715, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15507)
!15507 = !{!15508, !15509}
!15508 = !DILocalVariable(name: "thread", arg: 1, scope: !15506, file: !2667, line: 695, type: !2562)
!15509 = !DILocalVariable(name: "key", scope: !15506, file: !2667, line: 699, type: !14749)
!15510 = !DILocation(line: 0, scope: !15506)
!15511 = !DILocation(line: 0, scope: !14757, inlinedAt: !15512)
!15512 = distinct !DILocation(line: 699, column: 25, scope: !15506)
!15513 = !DILocation(line: 55, column: 2, scope: !14766, inlinedAt: !15514)
!15514 = distinct !DILocation(line: 145, column: 10, scope: !14757, inlinedAt: !15512)
!15515 = !DILocation(line: 0, scope: !14766, inlinedAt: !15514)
!15516 = !DILocation(line: 702, column: 7, scope: !15517)
!15517 = distinct !DILexicalBlock(scope: !15506, file: !2667, line: 702, column: 6)
!15518 = !DILocation(line: 702, column: 6, scope: !15506)
!15519 = !DILocation(line: 0, scope: !14784, inlinedAt: !15520)
!15520 = distinct !DILocation(line: 703, column: 3, scope: !15521)
!15521 = distinct !DILexicalBlock(scope: !15517, file: !2667, line: 702, column: 38)
!15522 = !DILocation(line: 0, scope: !14792, inlinedAt: !15523)
!15523 = distinct !DILocation(line: 215, column: 2, scope: !14784, inlinedAt: !15520)
!15524 = !DILocation(line: 95, column: 2, scope: !14792, inlinedAt: !15523)
!15525 = !DILocation(line: 704, column: 3, scope: !15521)
!15526 = !DILocation(line: 707, column: 2, scope: !15506)
!15527 = !DILocation(line: 708, column: 2, scope: !15506)
!15528 = !DILocation(line: 710, column: 2, scope: !15506)
!15529 = !DILocation(line: 713, column: 1, scope: !15506)
!15530 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !14034, file: !14034, line: 96, type: !14875, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15531)
!15531 = !{!15532}
!15532 = !DILocalVariable(name: "thread", arg: 1, scope: !15530, file: !14034, line: 96, type: !2562)
!15533 = !DILocation(line: 0, scope: !15530)
!15534 = !DILocation(line: 98, column: 23, scope: !15530)
!15535 = !DILocation(line: 98, column: 36, scope: !15530)
!15536 = !DILocation(line: 98, column: 57, scope: !15530)
!15537 = !DILocation(line: 98, column: 2, scope: !15530)
!15538 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !14034, file: !14034, line: 148, type: !14715, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15539)
!15539 = !{!15540}
!15540 = !DILocalVariable(name: "thread", arg: 1, scope: !15538, file: !14034, line: 148, type: !2562)
!15541 = !DILocation(line: 0, scope: !15538)
!15542 = !DILocation(line: 150, column: 15, scope: !15538)
!15543 = !DILocation(line: 150, column: 28, scope: !15538)
!15544 = !DILocation(line: 153, column: 1, scope: !15538)
!15545 = distinct !DISubprogram(name: "z_pend_thread", scope: !2667, file: !2667, line: 770, type: !15546, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15552)
!15546 = !DISubroutineType(types: !15547)
!15547 = !{null, !2562, !2593, !15548}
!15548 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !15549)
!15549 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !15550)
!15550 = !{!15551}
!15551 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15549, file: !110, line: 66, baseType: !109, size: 64)
!15552 = !{!15553, !15554, !15555, !15556, !15558}
!15553 = !DILocalVariable(name: "thread", arg: 1, scope: !15545, file: !2667, line: 770, type: !2562)
!15554 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15545, file: !2667, line: 770, type: !2593)
!15555 = !DILocalVariable(name: "timeout", arg: 3, scope: !15545, file: !2667, line: 771, type: !15548)
!15556 = !DILocalVariable(name: "__i", scope: !15557, file: !2667, line: 774, type: !14749)
!15557 = distinct !DILexicalBlock(scope: !15545, file: !2667, line: 774, column: 2)
!15558 = !DILocalVariable(name: "__key", scope: !15557, file: !2667, line: 774, type: !14749)
!15559 = !DILocation(line: 0, scope: !15545)
!15560 = !DILocation(line: 0, scope: !15557)
!15561 = !DILocation(line: 0, scope: !14757, inlinedAt: !15562)
!15562 = distinct !DILocation(line: 774, column: 2, scope: !15557)
!15563 = !DILocation(line: 55, column: 2, scope: !14766, inlinedAt: !15564)
!15564 = distinct !DILocation(line: 145, column: 10, scope: !14757, inlinedAt: !15562)
!15565 = !DILocation(line: 0, scope: !14766, inlinedAt: !15564)
!15566 = !DILocation(line: 775, column: 3, scope: !15567)
!15567 = distinct !DILexicalBlock(scope: !15568, file: !2667, line: 774, column: 26)
!15568 = distinct !DILexicalBlock(scope: !15557, file: !2667, line: 774, column: 2)
!15569 = !DILocation(line: 0, scope: !14784, inlinedAt: !15570)
!15570 = distinct !DILocation(line: 774, column: 2, scope: !15568)
!15571 = !DILocation(line: 0, scope: !14792, inlinedAt: !15572)
!15572 = distinct !DILocation(line: 215, column: 2, scope: !14784, inlinedAt: !15570)
!15573 = !DILocation(line: 95, column: 2, scope: !14792, inlinedAt: !15572)
!15574 = !DILocation(line: 777, column: 1, scope: !15545)
!15575 = distinct !DISubprogram(name: "pend_locked", scope: !2667, file: !2667, line: 760, type: !15546, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15576)
!15576 = !{!15577, !15578, !15579}
!15577 = !DILocalVariable(name: "thread", arg: 1, scope: !15575, file: !2667, line: 760, type: !2562)
!15578 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15575, file: !2667, line: 760, type: !2593)
!15579 = !DILocalVariable(name: "timeout", arg: 3, scope: !15575, file: !2667, line: 761, type: !15548)
!15580 = !DILocation(line: 0, scope: !15575)
!15581 = !DILocation(line: 766, column: 2, scope: !15575)
!15582 = !DILocation(line: 767, column: 2, scope: !15575)
!15583 = !DILocation(line: 768, column: 1, scope: !15575)
!15584 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2667, file: !2667, line: 740, type: !15585, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15587)
!15585 = !DISubroutineType(types: !15586)
!15586 = !{null, !2562, !2593}
!15587 = !{!15588, !15589}
!15588 = !DILocalVariable(name: "thread", arg: 1, scope: !15584, file: !2667, line: 740, type: !2562)
!15589 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15584, file: !2667, line: 740, type: !2593)
!15590 = !DILocation(line: 0, scope: !15584)
!15591 = !DILocation(line: 742, column: 2, scope: !15584)
!15592 = !DILocation(line: 743, column: 2, scope: !15584)
!15593 = !DILocation(line: 747, column: 13, scope: !15594)
!15594 = distinct !DILexicalBlock(scope: !15584, file: !2667, line: 747, column: 6)
!15595 = !DILocation(line: 747, column: 6, scope: !15584)
!15596 = !DILocation(line: 748, column: 16, scope: !15597)
!15597 = distinct !DILexicalBlock(scope: !15594, file: !2667, line: 747, column: 22)
!15598 = !DILocation(line: 748, column: 26, scope: !15597)
!15599 = !DILocation(line: 749, column: 28, scope: !15597)
!15600 = !DILocation(line: 0, scope: !14957, inlinedAt: !15601)
!15601 = distinct !DILocation(line: 749, column: 3, scope: !15597)
!15602 = !DILocation(line: 188, column: 2, scope: !14967, inlinedAt: !15601)
!15603 = !DILocation(line: 188, column: 2, scope: !14969, inlinedAt: !15601)
!15604 = !DILocation(line: 0, scope: !14967, inlinedAt: !15601)
!15605 = !DILocation(line: 189, column: 7, scope: !14972, inlinedAt: !15601)
!15606 = !DILocation(line: 189, column: 35, scope: !14972, inlinedAt: !15601)
!15607 = !DILocation(line: 189, column: 7, scope: !14973, inlinedAt: !15601)
!15608 = !DILocation(line: 191, column: 21, scope: !14977, inlinedAt: !15601)
!15609 = !DILocation(line: 190, column: 4, scope: !14977, inlinedAt: !15601)
!15610 = !DILocation(line: 192, column: 4, scope: !14977, inlinedAt: !15601)
!15611 = distinct !{!15611, !15602, !15612}
!15612 = !DILocation(line: 194, column: 2, scope: !14967, inlinedAt: !15601)
!15613 = !DILocation(line: 196, column: 37, scope: !14957, inlinedAt: !15601)
!15614 = !DILocation(line: 196, column: 2, scope: !14957, inlinedAt: !15601)
!15615 = !DILocation(line: 197, column: 1, scope: !14957, inlinedAt: !15601)
!15616 = !DILocation(line: 751, column: 1, scope: !15584)
!15617 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2667, file: !2667, line: 753, type: !15618, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15620)
!15618 = !DISubroutineType(types: !15619)
!15619 = !{null, !2562, !15548}
!15620 = !{!15621, !15622}
!15621 = !DILocalVariable(name: "thread", arg: 1, scope: !15617, file: !2667, line: 753, type: !2562)
!15622 = !DILocalVariable(name: "timeout", arg: 2, scope: !15617, file: !2667, line: 753, type: !15548)
!15623 = !DILocation(line: 0, scope: !15617)
!15624 = !DILocation(line: 755, column: 7, scope: !15625)
!15625 = distinct !DILexicalBlock(scope: !15617, file: !2667, line: 755, column: 6)
!15626 = !DILocation(line: 755, column: 6, scope: !15617)
!15627 = !DILocation(line: 756, column: 3, scope: !15628)
!15628 = distinct !DILexicalBlock(scope: !15625, file: !2667, line: 755, column: 41)
!15629 = !DILocation(line: 757, column: 2, scope: !15628)
!15630 = !DILocation(line: 758, column: 1, scope: !15617)
!15631 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14428, file: !14428, line: 47, type: !15618, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15632)
!15632 = !{!15633, !15634}
!15633 = !DILocalVariable(name: "thread", arg: 1, scope: !15631, file: !14428, line: 47, type: !2562)
!15634 = !DILocalVariable(name: "ticks", arg: 2, scope: !15631, file: !14428, line: 47, type: !15548)
!15635 = !DILocation(line: 0, scope: !15631)
!15636 = !DILocation(line: 49, column: 30, scope: !15631)
!15637 = !DILocation(line: 49, column: 2, scope: !15631)
!15638 = !DILocation(line: 50, column: 1, scope: !15631)
!15639 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2667, file: !2667, line: 795, type: !2619, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15640)
!15640 = !{!15641, !15642, !15643, !15645, !15646}
!15641 = !DILocalVariable(name: "timeout", arg: 1, scope: !15639, file: !2667, line: 795, type: !2621)
!15642 = !DILocalVariable(name: "thread", scope: !15639, file: !2667, line: 797, type: !2562)
!15643 = !DILocalVariable(name: "__i", scope: !15644, file: !2667, line: 800, type: !14749)
!15644 = distinct !DILexicalBlock(scope: !15639, file: !2667, line: 800, column: 2)
!15645 = !DILocalVariable(name: "__key", scope: !15644, file: !2667, line: 800, type: !14749)
!15646 = !DILocalVariable(name: "killed", scope: !15647, file: !2667, line: 801, type: !422)
!15647 = distinct !DILexicalBlock(scope: !15648, file: !2667, line: 800, column: 26)
!15648 = distinct !DILexicalBlock(scope: !15644, file: !2667, line: 800, column: 2)
!15649 = !DILocation(line: 0, scope: !15639)
!15650 = !DILocation(line: 797, column: 28, scope: !15639)
!15651 = !DILocation(line: 0, scope: !15644)
!15652 = !DILocation(line: 0, scope: !14757, inlinedAt: !15653)
!15653 = distinct !DILocation(line: 800, column: 2, scope: !15644)
!15654 = !DILocation(line: 55, column: 2, scope: !14766, inlinedAt: !15655)
!15655 = distinct !DILocation(line: 145, column: 10, scope: !14757, inlinedAt: !15653)
!15656 = !DILocation(line: 0, scope: !14766, inlinedAt: !15655)
!15657 = !DILocation(line: 801, column: 27, scope: !15647)
!15658 = !DILocation(line: 801, column: 32, scope: !15647)
!15659 = !DILocation(line: 801, column: 61, scope: !15647)
!15660 = !DILocation(line: 0, scope: !15647)
!15661 = !DILocation(line: 804, column: 7, scope: !15647)
!15662 = !DILocation(line: 805, column: 21, scope: !15663)
!15663 = distinct !DILexicalBlock(scope: !15664, file: !2667, line: 805, column: 8)
!15664 = distinct !DILexicalBlock(scope: !15665, file: !2667, line: 804, column: 16)
!15665 = distinct !DILexicalBlock(scope: !15647, file: !2667, line: 804, column: 7)
!15666 = !DILocation(line: 805, column: 31, scope: !15663)
!15667 = !DILocation(line: 805, column: 8, scope: !15664)
!15668 = !DILocation(line: 806, column: 5, scope: !15669)
!15669 = distinct !DILexicalBlock(scope: !15663, file: !2667, line: 805, column: 40)
!15670 = !DILocation(line: 807, column: 4, scope: !15669)
!15671 = !DILocation(line: 808, column: 4, scope: !15664)
!15672 = !DILocation(line: 809, column: 4, scope: !15664)
!15673 = !DILocation(line: 810, column: 4, scope: !15664)
!15674 = !DILocation(line: 811, column: 3, scope: !15664)
!15675 = !DILocation(line: 0, scope: !14784, inlinedAt: !15676)
!15676 = distinct !DILocation(line: 800, column: 2, scope: !15648)
!15677 = !DILocation(line: 0, scope: !14792, inlinedAt: !15678)
!15678 = distinct !DILocation(line: 215, column: 2, scope: !14784, inlinedAt: !15676)
!15679 = !DILocation(line: 95, column: 2, scope: !14792, inlinedAt: !15678)
!15680 = !DILocation(line: 813, column: 1, scope: !15639)
!15681 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2667, file: !2667, line: 779, type: !14715, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15682)
!15682 = !{!15683}
!15683 = !DILocalVariable(name: "thread", arg: 1, scope: !15681, file: !2667, line: 779, type: !2562)
!15684 = !DILocation(line: 0, scope: !15681)
!15685 = !DILocation(line: 781, column: 2, scope: !15681)
!15686 = !DILocation(line: 782, column: 2, scope: !15681)
!15687 = !DILocation(line: 783, column: 15, scope: !15681)
!15688 = !DILocation(line: 783, column: 25, scope: !15681)
!15689 = !DILocation(line: 784, column: 1, scope: !15681)
!15690 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !14034, file: !14034, line: 165, type: !14715, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15691)
!15691 = !{!15692}
!15692 = !DILocalVariable(name: "thread", arg: 1, scope: !15690, file: !14034, line: 165, type: !2562)
!15693 = !DILocation(line: 0, scope: !15690)
!15694 = !DILocation(line: 167, column: 15, scope: !15690)
!15695 = !DILocation(line: 167, column: 28, scope: !15690)
!15696 = !DILocation(line: 168, column: 1, scope: !15690)
!15697 = distinct !DISubprogram(name: "unready_thread", scope: !2667, file: !2667, line: 731, type: !14715, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15698)
!15698 = !{!15699}
!15699 = !DILocalVariable(name: "thread", arg: 1, scope: !15697, file: !2667, line: 731, type: !2562)
!15700 = !DILocation(line: 0, scope: !15697)
!15701 = !DILocation(line: 733, column: 6, scope: !15702)
!15702 = distinct !DILexicalBlock(scope: !15697, file: !2667, line: 733, column: 6)
!15703 = !DILocation(line: 733, column: 6, scope: !15697)
!15704 = !DILocation(line: 0, scope: !14926, inlinedAt: !15705)
!15705 = distinct !DILocation(line: 734, column: 3, scope: !15706)
!15706 = distinct !DILexicalBlock(scope: !15702, file: !2667, line: 733, column: 34)
!15707 = !DILocation(line: 266, column: 15, scope: !14926, inlinedAt: !15705)
!15708 = !DILocation(line: 266, column: 28, scope: !14926, inlinedAt: !15705)
!15709 = !DILocation(line: 0, scope: !14934, inlinedAt: !15710)
!15710 = distinct !DILocation(line: 268, column: 3, scope: !14938, inlinedAt: !15705)
!15711 = !DILocation(line: 234, column: 2, scope: !14934, inlinedAt: !15710)
!15712 = !DILocation(line: 735, column: 2, scope: !15706)
!15713 = !DILocation(line: 736, column: 25, scope: !15697)
!15714 = !DILocation(line: 736, column: 22, scope: !15697)
!15715 = !DILocation(line: 736, column: 2, scope: !15697)
!15716 = !DILocation(line: 737, column: 1, scope: !15697)
!15717 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !14034, file: !14034, line: 160, type: !14715, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15718)
!15718 = !{!15719}
!15719 = !DILocalVariable(name: "thread", arg: 1, scope: !15717, file: !14034, line: 160, type: !2562)
!15720 = !DILocation(line: 0, scope: !15717)
!15721 = !DILocation(line: 162, column: 15, scope: !15717)
!15722 = !DILocation(line: 162, column: 28, scope: !15717)
!15723 = !DILocation(line: 163, column: 1, scope: !15717)
!15724 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2667, file: !2667, line: 786, type: !14715, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15725)
!15725 = !{!15726, !15727, !15729}
!15726 = !DILocalVariable(name: "thread", arg: 1, scope: !15724, file: !2667, line: 786, type: !2562)
!15727 = !DILocalVariable(name: "__i", scope: !15728, file: !2667, line: 788, type: !14749)
!15728 = distinct !DILexicalBlock(scope: !15724, file: !2667, line: 788, column: 2)
!15729 = !DILocalVariable(name: "__key", scope: !15728, file: !2667, line: 788, type: !14749)
!15730 = !DILocation(line: 0, scope: !15724)
!15731 = !DILocation(line: 0, scope: !15728)
!15732 = !DILocation(line: 0, scope: !14757, inlinedAt: !15733)
!15733 = distinct !DILocation(line: 788, column: 2, scope: !15728)
!15734 = !DILocation(line: 55, column: 2, scope: !14766, inlinedAt: !15735)
!15735 = distinct !DILocation(line: 145, column: 10, scope: !14757, inlinedAt: !15733)
!15736 = !DILocation(line: 0, scope: !14766, inlinedAt: !15735)
!15737 = !DILocation(line: 789, column: 3, scope: !15738)
!15738 = distinct !DILexicalBlock(scope: !15739, file: !2667, line: 788, column: 26)
!15739 = distinct !DILexicalBlock(scope: !15728, file: !2667, line: 788, column: 2)
!15740 = !DILocation(line: 0, scope: !14784, inlinedAt: !15741)
!15741 = distinct !DILocation(line: 788, column: 2, scope: !15739)
!15742 = !DILocation(line: 0, scope: !14792, inlinedAt: !15743)
!15743 = distinct !DILocation(line: 215, column: 2, scope: !14784, inlinedAt: !15741)
!15744 = !DILocation(line: 95, column: 2, scope: !14792, inlinedAt: !15743)
!15745 = !DILocation(line: 791, column: 1, scope: !15724)
!15746 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2667, file: !2667, line: 816, type: !15747, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15749)
!15747 = !DISubroutineType(types: !15748)
!15748 = !{!108, !113, !2593, !15548}
!15749 = !{!15750, !15751, !15752, !15753, !15754, !15756}
!15750 = !DILocalVariable(name: "key", arg: 1, scope: !15746, file: !2667, line: 816, type: !113)
!15751 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15746, file: !2667, line: 816, type: !2593)
!15752 = !DILocalVariable(name: "timeout", arg: 3, scope: !15746, file: !2667, line: 816, type: !15548)
!15753 = !DILocalVariable(name: "ret", scope: !15746, file: !2667, line: 828, type: !108)
!15754 = !DILocalVariable(name: "__i", scope: !15755, file: !2667, line: 829, type: !14749)
!15755 = distinct !DILexicalBlock(scope: !15746, file: !2667, line: 829, column: 2)
!15756 = !DILocalVariable(name: "__key", scope: !15755, file: !2667, line: 829, type: !14749)
!15757 = !DILocation(line: 0, scope: !15746)
!15758 = !DILocation(line: 823, column: 14, scope: !15746)
!15759 = !DILocation(line: 823, column: 2, scope: !15746)
!15760 = !DILocation(line: 826, column: 20, scope: !15746)
!15761 = !DILocation(line: 826, column: 18, scope: !15746)
!15762 = !DILocation(line: 828, column: 12, scope: !15746)
!15763 = !DILocation(line: 0, scope: !15755)
!15764 = !DILocation(line: 0, scope: !14757, inlinedAt: !15765)
!15765 = distinct !DILocation(line: 829, column: 2, scope: !15755)
!15766 = !DILocation(line: 55, column: 2, scope: !14766, inlinedAt: !15767)
!15767 = distinct !DILocation(line: 145, column: 10, scope: !14757, inlinedAt: !15765)
!15768 = !DILocation(line: 0, scope: !14766, inlinedAt: !15767)
!15769 = !DILocation(line: 830, column: 7, scope: !15770)
!15770 = distinct !DILexicalBlock(scope: !15771, file: !2667, line: 830, column: 7)
!15771 = distinct !DILexicalBlock(scope: !15772, file: !2667, line: 829, column: 26)
!15772 = distinct !DILexicalBlock(scope: !15755, file: !2667, line: 829, column: 2)
!15773 = !DILocation(line: 830, column: 26, scope: !15770)
!15774 = !DILocation(line: 830, column: 23, scope: !15770)
!15775 = !DILocation(line: 830, column: 7, scope: !15771)
!15776 = !DILocation(line: 831, column: 20, scope: !15777)
!15777 = distinct !DILexicalBlock(scope: !15770, file: !2667, line: 830, column: 36)
!15778 = !DILocation(line: 832, column: 3, scope: !15777)
!15779 = !DILocation(line: 0, scope: !14784, inlinedAt: !15780)
!15780 = distinct !DILocation(line: 829, column: 2, scope: !15772)
!15781 = !DILocation(line: 0, scope: !14792, inlinedAt: !15782)
!15782 = distinct !DILocation(line: 215, column: 2, scope: !14784, inlinedAt: !15780)
!15783 = !DILocation(line: 95, column: 2, scope: !14792, inlinedAt: !15782)
!15784 = !DILocation(line: 834, column: 2, scope: !15746)
!15785 = distinct !DISubprogram(name: "z_pend_curr", scope: !2667, file: !2667, line: 840, type: !15786, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15788)
!15786 = !DISubroutineType(types: !15787)
!15787 = !{!108, !14760, !14749, !2593, !15548}
!15788 = !{!15789, !15790, !15791, !15792}
!15789 = !DILocalVariable(name: "lock", arg: 1, scope: !15785, file: !2667, line: 840, type: !14760)
!15790 = !DILocalVariable(name: "key", arg: 2, scope: !15785, file: !2667, line: 840, type: !14749)
!15791 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15785, file: !2667, line: 841, type: !2593)
!15792 = !DILocalVariable(name: "timeout", arg: 4, scope: !15785, file: !2667, line: 841, type: !15548)
!15793 = !DILocation(line: 0, scope: !15785)
!15794 = !DILocation(line: 844, column: 20, scope: !15785)
!15795 = !DILocation(line: 844, column: 18, scope: !15785)
!15796 = !DILocation(line: 0, scope: !14757, inlinedAt: !15797)
!15797 = distinct !DILocation(line: 856, column: 9, scope: !15785)
!15798 = !DILocation(line: 55, column: 2, scope: !14766, inlinedAt: !15799)
!15799 = distinct !DILocation(line: 145, column: 10, scope: !14757, inlinedAt: !15797)
!15800 = !DILocation(line: 0, scope: !14766, inlinedAt: !15799)
!15801 = !DILocation(line: 857, column: 14, scope: !15785)
!15802 = !DILocation(line: 857, column: 2, scope: !15785)
!15803 = !DILocation(line: 0, scope: !15368, inlinedAt: !15804)
!15804 = distinct !DILocation(line: 859, column: 9, scope: !15785)
!15805 = !DILocation(line: 196, column: 9, scope: !15368, inlinedAt: !15804)
!15806 = !DILocation(line: 859, column: 2, scope: !15785)
!15807 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2667, file: !2667, line: 862, type: !15808, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15810)
!15808 = !DISubroutineType(types: !15809)
!15809 = !{!2562, !2593}
!15810 = !{!15811, !15812, !15813, !15815}
!15811 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15807, file: !2667, line: 862, type: !2593)
!15812 = !DILocalVariable(name: "thread", scope: !15807, file: !2667, line: 864, type: !2562)
!15813 = !DILocalVariable(name: "__i", scope: !15814, file: !2667, line: 866, type: !14749)
!15814 = distinct !DILexicalBlock(scope: !15807, file: !2667, line: 866, column: 2)
!15815 = !DILocalVariable(name: "__key", scope: !15814, file: !2667, line: 866, type: !14749)
!15816 = !DILocation(line: 0, scope: !15807)
!15817 = !DILocation(line: 0, scope: !15814)
!15818 = !DILocation(line: 0, scope: !14757, inlinedAt: !15819)
!15819 = distinct !DILocation(line: 866, column: 2, scope: !15814)
!15820 = !DILocation(line: 55, column: 2, scope: !14766, inlinedAt: !15821)
!15821 = distinct !DILocation(line: 145, column: 10, scope: !14757, inlinedAt: !15819)
!15822 = !DILocation(line: 0, scope: !14766, inlinedAt: !15821)
!15823 = !DILocation(line: 867, column: 12, scope: !15824)
!15824 = distinct !DILexicalBlock(scope: !15825, file: !2667, line: 866, column: 26)
!15825 = distinct !DILexicalBlock(scope: !15814, file: !2667, line: 866, column: 2)
!15826 = !DILocation(line: 869, column: 14, scope: !15827)
!15827 = distinct !DILexicalBlock(scope: !15824, file: !2667, line: 869, column: 7)
!15828 = !DILocation(line: 869, column: 7, scope: !15824)
!15829 = !DILocation(line: 870, column: 4, scope: !15830)
!15830 = distinct !DILexicalBlock(scope: !15827, file: !2667, line: 869, column: 23)
!15831 = !DILocation(line: 871, column: 3, scope: !15830)
!15832 = !DILocation(line: 0, scope: !14784, inlinedAt: !15833)
!15833 = distinct !DILocation(line: 866, column: 2, scope: !15825)
!15834 = !DILocation(line: 0, scope: !14792, inlinedAt: !15835)
!15835 = distinct !DILocation(line: 215, column: 2, scope: !14784, inlinedAt: !15833)
!15836 = !DILocation(line: 95, column: 2, scope: !14792, inlinedAt: !15835)
!15837 = !DILocation(line: 874, column: 2, scope: !15807)
!15838 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2667, file: !2667, line: 877, type: !15808, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15839)
!15839 = !{!15840, !15841, !15842, !15844}
!15840 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15838, file: !2667, line: 877, type: !2593)
!15841 = !DILocalVariable(name: "thread", scope: !15838, file: !2667, line: 879, type: !2562)
!15842 = !DILocalVariable(name: "__i", scope: !15843, file: !2667, line: 881, type: !14749)
!15843 = distinct !DILexicalBlock(scope: !15838, file: !2667, line: 881, column: 2)
!15844 = !DILocalVariable(name: "__key", scope: !15843, file: !2667, line: 881, type: !14749)
!15845 = !DILocation(line: 0, scope: !15838)
!15846 = !DILocation(line: 0, scope: !15843)
!15847 = !DILocation(line: 0, scope: !14757, inlinedAt: !15848)
!15848 = distinct !DILocation(line: 881, column: 2, scope: !15843)
!15849 = !DILocation(line: 55, column: 2, scope: !14766, inlinedAt: !15850)
!15850 = distinct !DILocation(line: 145, column: 10, scope: !14757, inlinedAt: !15848)
!15851 = !DILocation(line: 0, scope: !14766, inlinedAt: !15850)
!15852 = !DILocation(line: 882, column: 12, scope: !15853)
!15853 = distinct !DILexicalBlock(scope: !15854, file: !2667, line: 881, column: 26)
!15854 = distinct !DILexicalBlock(scope: !15843, file: !2667, line: 881, column: 2)
!15855 = !DILocation(line: 884, column: 14, scope: !15856)
!15856 = distinct !DILexicalBlock(scope: !15853, file: !2667, line: 884, column: 7)
!15857 = !DILocation(line: 884, column: 7, scope: !15853)
!15858 = !DILocation(line: 885, column: 4, scope: !15859)
!15859 = distinct !DILexicalBlock(scope: !15856, file: !2667, line: 884, column: 23)
!15860 = !DILocation(line: 886, column: 10, scope: !15859)
!15861 = !DILocation(line: 887, column: 3, scope: !15859)
!15862 = !DILocation(line: 0, scope: !14784, inlinedAt: !15863)
!15863 = distinct !DILocation(line: 881, column: 2, scope: !15854)
!15864 = !DILocation(line: 0, scope: !14792, inlinedAt: !15865)
!15865 = distinct !DILocation(line: 215, column: 2, scope: !14784, inlinedAt: !15863)
!15866 = !DILocation(line: 95, column: 2, scope: !14792, inlinedAt: !15865)
!15867 = !DILocation(line: 890, column: 2, scope: !15838)
!15868 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2667, file: !2667, line: 893, type: !14715, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15869)
!15869 = !{!15870}
!15870 = !DILocalVariable(name: "thread", arg: 1, scope: !15868, file: !2667, line: 893, type: !2562)
!15871 = !DILocation(line: 0, scope: !15868)
!15872 = !DILocation(line: 0, scope: !15724, inlinedAt: !15873)
!15873 = distinct !DILocation(line: 895, column: 2, scope: !15868)
!15874 = !DILocation(line: 0, scope: !15728, inlinedAt: !15873)
!15875 = !DILocation(line: 0, scope: !14757, inlinedAt: !15876)
!15876 = distinct !DILocation(line: 788, column: 2, scope: !15728, inlinedAt: !15873)
!15877 = !DILocation(line: 55, column: 2, scope: !14766, inlinedAt: !15878)
!15878 = distinct !DILocation(line: 145, column: 10, scope: !14757, inlinedAt: !15876)
!15879 = !DILocation(line: 0, scope: !14766, inlinedAt: !15878)
!15880 = !DILocation(line: 789, column: 3, scope: !15738, inlinedAt: !15873)
!15881 = !DILocation(line: 0, scope: !14784, inlinedAt: !15882)
!15882 = distinct !DILocation(line: 788, column: 2, scope: !15739, inlinedAt: !15873)
!15883 = !DILocation(line: 0, scope: !14792, inlinedAt: !15884)
!15884 = distinct !DILocation(line: 215, column: 2, scope: !14784, inlinedAt: !15882)
!15885 = !DILocation(line: 95, column: 2, scope: !14792, inlinedAt: !15884)
!15886 = !DILocation(line: 896, column: 8, scope: !15868)
!15887 = !DILocation(line: 897, column: 1, scope: !15868)
!15888 = distinct !DISubprogram(name: "z_set_prio", scope: !2667, file: !2667, line: 902, type: !15077, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15889)
!15889 = !{!15890, !15891, !15892, !15893, !15895}
!15890 = !DILocalVariable(name: "thread", arg: 1, scope: !15888, file: !2667, line: 902, type: !2562)
!15891 = !DILocalVariable(name: "prio", arg: 2, scope: !15888, file: !2667, line: 902, type: !108)
!15892 = !DILocalVariable(name: "need_sched", scope: !15888, file: !2667, line: 904, type: !422)
!15893 = !DILocalVariable(name: "__i", scope: !15894, file: !2667, line: 906, type: !14749)
!15894 = distinct !DILexicalBlock(scope: !15888, file: !2667, line: 906, column: 2)
!15895 = !DILocalVariable(name: "__key", scope: !15894, file: !2667, line: 906, type: !14749)
!15896 = !DILocation(line: 0, scope: !15888)
!15897 = !DILocation(line: 0, scope: !15894)
!15898 = !DILocation(line: 0, scope: !14757, inlinedAt: !15899)
!15899 = distinct !DILocation(line: 906, column: 2, scope: !15894)
!15900 = !DILocation(line: 55, column: 2, scope: !14766, inlinedAt: !15901)
!15901 = distinct !DILocation(line: 145, column: 10, scope: !14757, inlinedAt: !15899)
!15902 = !DILocation(line: 0, scope: !14766, inlinedAt: !15901)
!15903 = !DILocation(line: 907, column: 16, scope: !15904)
!15904 = distinct !DILexicalBlock(scope: !15905, file: !2667, line: 906, column: 26)
!15905 = distinct !DILexicalBlock(scope: !15894, file: !2667, line: 906, column: 2)
!15906 = !DILocation(line: 909, column: 7, scope: !15904)
!15907 = !DILocation(line: 0, scope: !14926, inlinedAt: !15908)
!15908 = distinct !DILocation(line: 912, column: 5, scope: !15909)
!15909 = distinct !DILexicalBlock(scope: !15910, file: !2667, line: 911, column: 63)
!15910 = distinct !DILexicalBlock(scope: !15911, file: !2667, line: 911, column: 8)
!15911 = distinct !DILexicalBlock(scope: !15912, file: !2667, line: 909, column: 19)
!15912 = distinct !DILexicalBlock(scope: !15904, file: !2667, line: 909, column: 7)
!15913 = !DILocation(line: 266, column: 28, scope: !14926, inlinedAt: !15908)
!15914 = !DILocation(line: 0, scope: !14934, inlinedAt: !15915)
!15915 = distinct !DILocation(line: 268, column: 3, scope: !14938, inlinedAt: !15908)
!15916 = !DILocation(line: 234, column: 2, scope: !14934, inlinedAt: !15915)
!15917 = !DILocation(line: 913, column: 23, scope: !15909)
!15918 = !DILocation(line: 0, scope: !14943, inlinedAt: !15919)
!15919 = distinct !DILocation(line: 914, column: 5, scope: !15909)
!15920 = !DILocation(line: 252, column: 28, scope: !14943, inlinedAt: !15919)
!15921 = !DILocation(line: 0, scope: !14950, inlinedAt: !15922)
!15922 = distinct !DILocation(line: 254, column: 3, scope: !14954, inlinedAt: !15919)
!15923 = !DILocation(line: 0, scope: !14957, inlinedAt: !15924)
!15924 = distinct !DILocation(line: 229, column: 2, scope: !14950, inlinedAt: !15922)
!15925 = !DILocation(line: 188, column: 2, scope: !14967, inlinedAt: !15924)
!15926 = !DILocation(line: 188, column: 2, scope: !14969, inlinedAt: !15924)
!15927 = !DILocation(line: 0, scope: !14967, inlinedAt: !15924)
!15928 = !DILocation(line: 189, column: 7, scope: !14972, inlinedAt: !15924)
!15929 = !DILocation(line: 189, column: 35, scope: !14972, inlinedAt: !15924)
!15930 = !DILocation(line: 189, column: 7, scope: !14973, inlinedAt: !15924)
!15931 = !DILocation(line: 190, column: 4, scope: !14977, inlinedAt: !15924)
!15932 = !DILocation(line: 192, column: 4, scope: !14977, inlinedAt: !15924)
!15933 = distinct !{!15933, !15925, !15934}
!15934 = !DILocation(line: 194, column: 2, scope: !14967, inlinedAt: !15924)
!15935 = !DILocation(line: 196, column: 2, scope: !14957, inlinedAt: !15924)
!15936 = !DILocation(line: 197, column: 1, scope: !14957, inlinedAt: !15924)
!15937 = !DILocation(line: 918, column: 4, scope: !15911)
!15938 = !DILocation(line: 919, column: 3, scope: !15911)
!15939 = !DILocation(line: 920, column: 22, scope: !15940)
!15940 = distinct !DILexicalBlock(scope: !15912, file: !2667, line: 919, column: 10)
!15941 = !DILocation(line: 0, scope: !14784, inlinedAt: !15942)
!15942 = distinct !DILocation(line: 906, column: 2, scope: !15905)
!15943 = !DILocation(line: 0, scope: !14792, inlinedAt: !15944)
!15944 = distinct !DILocation(line: 215, column: 2, scope: !14784, inlinedAt: !15942)
!15945 = !DILocation(line: 95, column: 2, scope: !14792, inlinedAt: !15944)
!15946 = !DILocation(line: 926, column: 2, scope: !15888)
!15947 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2667, file: !2667, line: 929, type: !15948, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15950)
!15948 = !DISubroutineType(types: !15949)
!15949 = !{null, !2562, !108}
!15950 = !{!15951, !15952, !15953}
!15951 = !DILocalVariable(name: "thread", arg: 1, scope: !15947, file: !2667, line: 929, type: !2562)
!15952 = !DILocalVariable(name: "prio", arg: 2, scope: !15947, file: !2667, line: 929, type: !108)
!15953 = !DILocalVariable(name: "need_sched", scope: !15947, file: !2667, line: 931, type: !422)
!15954 = !DILocation(line: 0, scope: !15947)
!15955 = !DILocation(line: 931, column: 20, scope: !15947)
!15956 = !DILocation(line: 935, column: 17, scope: !15957)
!15957 = distinct !DILexicalBlock(scope: !15947, file: !2667, line: 935, column: 6)
!15958 = !DILocation(line: 935, column: 20, scope: !15957)
!15959 = !DILocation(line: 935, column: 35, scope: !15957)
!15960 = !DILocation(line: 935, column: 48, scope: !15957)
!15961 = !DILocation(line: 935, column: 6, scope: !15947)
!15962 = !DILocation(line: 936, column: 3, scope: !15963)
!15963 = distinct !DILexicalBlock(scope: !15957, file: !2667, line: 935, column: 55)
!15964 = !DILocation(line: 937, column: 2, scope: !15963)
!15965 = !DILocation(line: 938, column: 1, scope: !15947)
!15966 = distinct !DISubprogram(name: "k_sched_lock", scope: !2667, file: !2667, line: 987, type: !3413, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15967)
!15967 = !{!15968, !15970}
!15968 = !DILocalVariable(name: "__i", scope: !15969, file: !2667, line: 989, type: !14749)
!15969 = distinct !DILexicalBlock(scope: !15966, file: !2667, line: 989, column: 2)
!15970 = !DILocalVariable(name: "__key", scope: !15969, file: !2667, line: 989, type: !14749)
!15971 = !DILocation(line: 0, scope: !15969)
!15972 = !DILocation(line: 0, scope: !14757, inlinedAt: !15973)
!15973 = distinct !DILocation(line: 989, column: 2, scope: !15969)
!15974 = !DILocation(line: 55, column: 2, scope: !14766, inlinedAt: !15975)
!15975 = distinct !DILocation(line: 145, column: 10, scope: !14757, inlinedAt: !15973)
!15976 = !DILocation(line: 0, scope: !14766, inlinedAt: !15975)
!15977 = !DILocation(line: 992, column: 3, scope: !15978)
!15978 = distinct !DILexicalBlock(scope: !15979, file: !2667, line: 989, column: 26)
!15979 = distinct !DILexicalBlock(scope: !15969, file: !2667, line: 989, column: 2)
!15980 = !DILocation(line: 0, scope: !14784, inlinedAt: !15981)
!15981 = distinct !DILocation(line: 989, column: 2, scope: !15979)
!15982 = !DILocation(line: 0, scope: !14792, inlinedAt: !15983)
!15983 = distinct !DILocation(line: 215, column: 2, scope: !14784, inlinedAt: !15981)
!15984 = !DILocation(line: 95, column: 2, scope: !14792, inlinedAt: !15983)
!15985 = !DILocation(line: 994, column: 1, scope: !15966)
!15986 = distinct !DISubprogram(name: "z_sched_lock", scope: !14034, file: !14034, line: 251, type: !3413, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !437)
!15987 = !DILocation(line: 256, column: 4, scope: !15986)
!15988 = !DILocation(line: 256, column: 19, scope: !15986)
!15989 = !DILocation(line: 256, column: 2, scope: !15986)
!15990 = !DILocation(line: 258, column: 2, scope: !15991)
!15991 = distinct !DILexicalBlock(scope: !15986, file: !14034, line: 258, column: 2)
!15992 = !{i64 2154983577}
!15993 = !DILocation(line: 259, column: 1, scope: !15986)
!15994 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2667, file: !2667, line: 996, type: !3413, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !15995)
!15995 = !{!15996, !15998}
!15996 = !DILocalVariable(name: "__i", scope: !15997, file: !2667, line: 998, type: !14749)
!15997 = distinct !DILexicalBlock(scope: !15994, file: !2667, line: 998, column: 2)
!15998 = !DILocalVariable(name: "__key", scope: !15997, file: !2667, line: 998, type: !14749)
!15999 = !DILocation(line: 0, scope: !15997)
!16000 = !DILocation(line: 0, scope: !14757, inlinedAt: !16001)
!16001 = distinct !DILocation(line: 998, column: 2, scope: !15997)
!16002 = !DILocation(line: 55, column: 2, scope: !14766, inlinedAt: !16003)
!16003 = distinct !DILocation(line: 145, column: 10, scope: !14757, inlinedAt: !16001)
!16004 = !DILocation(line: 0, scope: !14766, inlinedAt: !16003)
!16005 = !DILocation(line: 1002, column: 5, scope: !16006)
!16006 = distinct !DILexicalBlock(scope: !16007, file: !2667, line: 998, column: 26)
!16007 = distinct !DILexicalBlock(scope: !15997, file: !2667, line: 998, column: 2)
!16008 = !DILocation(line: 1002, column: 20, scope: !16006)
!16009 = !DILocation(line: 1002, column: 3, scope: !16006)
!16010 = !DILocation(line: 1003, column: 3, scope: !16006)
!16011 = !DILocation(line: 0, scope: !14784, inlinedAt: !16012)
!16012 = distinct !DILocation(line: 998, column: 2, scope: !16007)
!16013 = !DILocation(line: 0, scope: !14792, inlinedAt: !16014)
!16014 = distinct !DILocation(line: 215, column: 2, scope: !14784, inlinedAt: !16012)
!16015 = !DILocation(line: 95, column: 2, scope: !14792, inlinedAt: !16014)
!16016 = !DILocation(line: 1011, column: 2, scope: !15994)
!16017 = !DILocation(line: 1012, column: 1, scope: !15994)
!16018 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2667, file: !2667, line: 1014, type: !15065, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !437)
!16019 = !DILocation(line: 1028, column: 25, scope: !16018)
!16020 = !DILocation(line: 1028, column: 2, scope: !16018)
!16021 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2667, file: !2667, line: 1155, type: !16022, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16024)
!16022 = !DISubroutineType(types: !16023)
!16023 = !{!422, !2591, !2591}
!16024 = !{!16025, !16026, !16027, !16028, !16029}
!16025 = !DILocalVariable(name: "a", arg: 1, scope: !16021, file: !2667, line: 1155, type: !2591)
!16026 = !DILocalVariable(name: "b", arg: 2, scope: !16021, file: !2667, line: 1155, type: !2591)
!16027 = !DILocalVariable(name: "thread_a", scope: !16021, file: !2667, line: 1157, type: !2562)
!16028 = !DILocalVariable(name: "thread_b", scope: !16021, file: !2667, line: 1157, type: !2562)
!16029 = !DILocalVariable(name: "cmp", scope: !16021, file: !2667, line: 1158, type: !220)
!16030 = !DILocation(line: 0, scope: !16021)
!16031 = !DILocation(line: 1160, column: 13, scope: !16021)
!16032 = !DILocation(line: 1161, column: 13, scope: !16021)
!16033 = !DILocation(line: 1163, column: 8, scope: !16021)
!16034 = !DILocation(line: 1165, column: 10, scope: !16035)
!16035 = distinct !DILexicalBlock(scope: !16021, file: !2667, line: 1165, column: 6)
!16036 = !DILocation(line: 1165, column: 6, scope: !16021)
!16037 = !DILocation(line: 1167, column: 17, scope: !16038)
!16038 = distinct !DILexicalBlock(scope: !16035, file: !2667, line: 1167, column: 13)
!16039 = !DILocation(line: 1167, column: 13, scope: !16035)
!16040 = !DILocation(line: 1170, column: 25, scope: !16041)
!16041 = distinct !DILexicalBlock(scope: !16038, file: !2667, line: 1169, column: 9)
!16042 = !DILocation(line: 1170, column: 52, scope: !16041)
!16043 = !DILocation(line: 1170, column: 35, scope: !16041)
!16044 = !DILocation(line: 1170, column: 3, scope: !16041)
!16045 = !DILocation(line: 0, scope: !16035)
!16046 = !DILocation(line: 1173, column: 1, scope: !16021)
!16047 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2667, file: !2667, line: 1175, type: !16048, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16063)
!16048 = !DISubroutineType(types: !16049)
!16049 = !{null, !16050, !2562}
!16050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16051, size: 32)
!16051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16052, line: 37, size: 128, elements: !16053)
!16052 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16053 = !{!16054, !16062}
!16054 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16051, file: !16052, line: 38, baseType: !16055, size: 96)
!16055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !672, line: 83, size: 96, elements: !16056)
!16056 = !{!16057, !16058, !16061}
!16057 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16055, file: !672, line: 84, baseType: !2591, size: 32)
!16058 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16055, file: !672, line: 85, baseType: !16059, size: 32, offset: 32)
!16059 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !672, line: 81, baseType: !16060)
!16060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16022, size: 32)
!16061 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16055, file: !672, line: 86, baseType: !108, size: 32, offset: 64)
!16062 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16051, file: !16052, line: 39, baseType: !108, size: 32, offset: 96)
!16063 = !{!16064, !16065, !16066, !16067, !16076}
!16064 = !DILocalVariable(name: "pq", arg: 1, scope: !16047, file: !2667, line: 1175, type: !16050)
!16065 = !DILocalVariable(name: "thread", arg: 2, scope: !16047, file: !2667, line: 1175, type: !2562)
!16066 = !DILocalVariable(name: "t", scope: !16047, file: !2667, line: 1177, type: !2562)
!16067 = !DILocalVariable(name: "__f", scope: !16068, file: !2667, line: 1190, type: !16071)
!16068 = distinct !DILexicalBlock(scope: !16069, file: !2667, line: 1190, column: 3)
!16069 = distinct !DILexicalBlock(scope: !16070, file: !2667, line: 1189, column: 27)
!16070 = distinct !DILexicalBlock(scope: !16047, file: !2667, line: 1189, column: 6)
!16071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !672, line: 155, size: 96, elements: !16072)
!16072 = !{!16073, !16074, !16075}
!16073 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16071, file: !672, line: 156, baseType: !2662, size: 32)
!16074 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16071, file: !672, line: 157, baseType: !209, size: 32, offset: 32)
!16075 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16071, file: !672, line: 158, baseType: !220, size: 32, offset: 64)
!16076 = !DILocalVariable(name: "n", scope: !16077, file: !2667, line: 1190, type: !2591)
!16077 = distinct !DILexicalBlock(scope: !16078, file: !2667, line: 1190, column: 3)
!16078 = distinct !DILexicalBlock(scope: !16068, file: !2667, line: 1190, column: 3)
!16079 = !DILocation(line: 0, scope: !16047)
!16080 = !DILocation(line: 1181, column: 31, scope: !16047)
!16081 = !DILocation(line: 1181, column: 45, scope: !16047)
!16082 = !DILocation(line: 1181, column: 15, scope: !16047)
!16083 = !DILocation(line: 1181, column: 25, scope: !16047)
!16084 = !DILocation(line: 1189, column: 11, scope: !16070)
!16085 = !DILocation(line: 1189, column: 7, scope: !16070)
!16086 = !DILocation(line: 1189, column: 6, scope: !16047)
!16087 = !DILocation(line: 1190, column: 3, scope: !16068)
!16088 = !DILocation(line: 1190, column: 3, scope: !16077)
!16089 = !DILocation(line: 0, scope: !16077)
!16090 = !DILocation(line: 1190, column: 3, scope: !16078)
!16091 = !DILocation(line: 1193, column: 2, scope: !16069)
!16092 = !DILocation(line: 1191, column: 42, scope: !16093)
!16093 = distinct !DILexicalBlock(scope: !16078, file: !2667, line: 1190, column: 54)
!16094 = !DILocation(line: 1191, column: 12, scope: !16093)
!16095 = !DILocation(line: 1191, column: 22, scope: !16093)
!16096 = distinct !{!16096, !16087, !16097}
!16097 = !DILocation(line: 1192, column: 3, scope: !16068)
!16098 = !DILocation(line: 1195, column: 17, scope: !16047)
!16099 = !DILocation(line: 1195, column: 37, scope: !16047)
!16100 = !DILocation(line: 1195, column: 2, scope: !16047)
!16101 = !DILocation(line: 1196, column: 1, scope: !16047)
!16102 = !DISubprogram(name: "z_rb_foreach_next", scope: !672, file: !672, line: 176, type: !16103, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16103 = !DISubroutineType(types: !16104)
!16104 = !{!2591, !16105, !16106}
!16105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16055, size: 32)
!16106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16071, size: 32)
!16107 = !DISubprogram(name: "rb_insert", scope: !672, file: !672, line: 105, type: !16108, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16108 = !DISubroutineType(types: !16109)
!16109 = !{null, !16105, !2591}
!16110 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2667, file: !2667, line: 1198, type: !16048, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16111)
!16111 = !{!16112, !16113}
!16112 = !DILocalVariable(name: "pq", arg: 1, scope: !16110, file: !2667, line: 1198, type: !16050)
!16113 = !DILocalVariable(name: "thread", arg: 2, scope: !16110, file: !2667, line: 1198, type: !2562)
!16114 = !DILocation(line: 0, scope: !16110)
!16115 = !DILocation(line: 1202, column: 17, scope: !16110)
!16116 = !DILocation(line: 1202, column: 37, scope: !16110)
!16117 = !DILocation(line: 1202, column: 2, scope: !16110)
!16118 = !DILocation(line: 1204, column: 16, scope: !16119)
!16119 = distinct !DILexicalBlock(scope: !16110, file: !2667, line: 1204, column: 6)
!16120 = !DILocation(line: 1204, column: 7, scope: !16119)
!16121 = !DILocation(line: 1204, column: 6, scope: !16110)
!16122 = !DILocation(line: 1205, column: 7, scope: !16123)
!16123 = distinct !DILexicalBlock(scope: !16119, file: !2667, line: 1204, column: 22)
!16124 = !DILocation(line: 1205, column: 22, scope: !16123)
!16125 = !DILocation(line: 1206, column: 2, scope: !16123)
!16126 = !DILocation(line: 1207, column: 1, scope: !16110)
!16127 = !DISubprogram(name: "rb_remove", scope: !672, file: !672, line: 110, type: !16108, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16128 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2667, file: !2667, line: 1209, type: !16129, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16131)
!16129 = !DISubroutineType(types: !16130)
!16130 = !{!2562, !16050}
!16131 = !{!16132, !16133, !16134}
!16132 = !DILocalVariable(name: "pq", arg: 1, scope: !16128, file: !2667, line: 1209, type: !16050)
!16133 = !DILocalVariable(name: "thread", scope: !16128, file: !2667, line: 1211, type: !2562)
!16134 = !DILocalVariable(name: "n", scope: !16128, file: !2667, line: 1212, type: !2591)
!16135 = !DILocation(line: 0, scope: !16128)
!16136 = !DILocation(line: 1212, column: 37, scope: !16128)
!16137 = !DILocation(line: 1212, column: 21, scope: !16128)
!16138 = !DILocation(line: 1217, column: 2, scope: !16128)
!16139 = distinct !DISubprogram(name: "rb_get_min", scope: !672, file: !672, line: 115, type: !16140, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16142)
!16140 = !DISubroutineType(types: !16141)
!16141 = !{!2591, !16105}
!16142 = !{!16143}
!16143 = !DILocalVariable(name: "tree", arg: 1, scope: !16139, file: !672, line: 115, type: !16105)
!16144 = !DILocation(line: 0, scope: !16139)
!16145 = !DILocation(line: 117, column: 9, scope: !16139)
!16146 = !DILocation(line: 117, column: 2, scope: !16139)
!16147 = !DISubprogram(name: "z_rb_get_minmax", scope: !672, file: !672, line: 100, type: !16148, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16148 = !DISubroutineType(types: !16149)
!16149 = !{!2591, !16105, !164}
!16150 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2667, file: !2667, line: 1246, type: !16151, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16161)
!16151 = !DISubroutineType(types: !16152)
!16152 = !{!2562, !16153}
!16153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16154, size: 32)
!16154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16052, line: 53, size: 2080, elements: !16155)
!16155 = !{!16156, !16160}
!16156 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16154, file: !16052, line: 54, baseType: !16157, size: 2048)
!16157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2598, size: 2048, elements: !16158)
!16158 = !{!16159}
!16159 = !DISubrange(count: 32)
!16160 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16154, file: !16052, line: 55, baseType: !32, size: 32, offset: 2048)
!16161 = !{!16162, !16163, !16164, !16165}
!16162 = !DILocalVariable(name: "pq", arg: 1, scope: !16150, file: !2667, line: 1246, type: !16153)
!16163 = !DILocalVariable(name: "thread", scope: !16150, file: !2667, line: 1252, type: !2562)
!16164 = !DILocalVariable(name: "l", scope: !16150, file: !2667, line: 1253, type: !14960)
!16165 = !DILocalVariable(name: "n", scope: !16150, file: !2667, line: 1254, type: !2663)
!16166 = !DILocation(line: 0, scope: !16150)
!16167 = !DILocation(line: 1248, column: 11, scope: !16168)
!16168 = distinct !DILexicalBlock(scope: !16150, file: !2667, line: 1248, column: 6)
!16169 = !DILocation(line: 1248, column: 7, scope: !16168)
!16170 = !DILocation(line: 1248, column: 6, scope: !16150)
!16171 = !DILocation(line: 1253, column: 31, scope: !16150)
!16172 = !DILocation(line: 1253, column: 20, scope: !16150)
!16173 = !DILocation(line: 1254, column: 19, scope: !16150)
!16174 = !DILocation(line: 1260, column: 1, scope: !16150)
!16175 = distinct !DISubprogram(name: "z_unpend_all", scope: !2667, file: !2667, line: 1262, type: !16176, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16178)
!16176 = !DISubroutineType(types: !16177)
!16177 = !{!108, !2593}
!16178 = !{!16179, !16180, !16181}
!16179 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16175, file: !2667, line: 1262, type: !2593)
!16180 = !DILocalVariable(name: "need_sched", scope: !16175, file: !2667, line: 1264, type: !108)
!16181 = !DILocalVariable(name: "thread", scope: !16175, file: !2667, line: 1265, type: !2562)
!16182 = !DILocation(line: 0, scope: !16175)
!16183 = !DILocation(line: 1267, column: 19, scope: !16175)
!16184 = !DILocation(line: 1267, column: 41, scope: !16175)
!16185 = !DILocation(line: 1267, column: 2, scope: !16175)
!16186 = !DILocation(line: 1268, column: 3, scope: !16187)
!16187 = distinct !DILexicalBlock(scope: !16175, file: !2667, line: 1267, column: 50)
!16188 = !DILocation(line: 1269, column: 3, scope: !16187)
!16189 = distinct !{!16189, !16185, !16190}
!16190 = !DILocation(line: 1271, column: 2, scope: !16175)
!16191 = !DILocation(line: 1273, column: 2, scope: !16175)
!16192 = distinct !DISubprogram(name: "z_waitq_head", scope: !14360, file: !14360, line: 52, type: !15808, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16193)
!16193 = !{!16194}
!16194 = !DILocalVariable(name: "w", arg: 1, scope: !16192, file: !14360, line: 52, type: !2593)
!16195 = !DILocation(line: 0, scope: !16192)
!16196 = !DILocation(line: 54, column: 52, scope: !16192)
!16197 = !DILocation(line: 54, column: 28, scope: !16192)
!16198 = !DILocation(line: 54, column: 9, scope: !16192)
!16199 = !DILocation(line: 54, column: 2, scope: !16192)
!16200 = distinct !DISubprogram(name: "init_ready_q", scope: !2667, file: !2667, line: 1276, type: !16201, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16208)
!16201 = !DISubroutineType(types: !16202)
!16202 = !{null, !16203}
!16203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16204, size: 32)
!16204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !363, line: 83, size: 96, elements: !16205)
!16205 = !{!16206, !16207}
!16206 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16204, file: !363, line: 86, baseType: !2562, size: 32)
!16207 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16204, file: !363, line: 90, baseType: !2598, size: 64, offset: 32)
!16208 = !{!16209}
!16209 = !DILocalVariable(name: "rq", arg: 1, scope: !16200, file: !2667, line: 1276, type: !16203)
!16210 = !DILocation(line: 0, scope: !16200)
!16211 = !DILocation(line: 1289, column: 22, scope: !16200)
!16212 = !DILocation(line: 1289, column: 2, scope: !16200)
!16213 = !DILocation(line: 1291, column: 1, scope: !16200)
!16214 = distinct !DISubprogram(name: "sys_dlist_init", scope: !367, file: !367, line: 197, type: !16215, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16217)
!16215 = !DISubroutineType(types: !16216)
!16216 = !{null, !14960}
!16217 = !{!16218}
!16218 = !DILocalVariable(name: "list", arg: 1, scope: !16214, file: !367, line: 197, type: !14960)
!16219 = !DILocation(line: 0, scope: !16214)
!16220 = !DILocation(line: 199, column: 8, scope: !16214)
!16221 = !DILocation(line: 199, column: 13, scope: !16214)
!16222 = !DILocation(line: 200, column: 8, scope: !16214)
!16223 = !DILocation(line: 200, column: 13, scope: !16214)
!16224 = !DILocation(line: 201, column: 1, scope: !16214)
!16225 = distinct !DISubprogram(name: "z_sched_init", scope: !2667, file: !2667, line: 1293, type: !3413, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !437)
!16226 = !DILocation(line: 1302, column: 2, scope: !16225)
!16227 = !DILocation(line: 1306, column: 2, scope: !16225)
!16228 = !DILocation(line: 1309, column: 1, scope: !16225)
!16229 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2667, file: !2667, line: 1311, type: !16230, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16233)
!16230 = !DISubroutineType(types: !16231)
!16231 = !{!108, !16232}
!16232 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !647, line: 347, baseType: !2562)
!16233 = !{!16234}
!16234 = !DILocalVariable(name: "thread", arg: 1, scope: !16229, file: !2667, line: 1311, type: !16232)
!16235 = !DILocation(line: 0, scope: !16229)
!16236 = !DILocation(line: 1313, column: 22, scope: !16229)
!16237 = !DILocation(line: 1313, column: 9, scope: !16229)
!16238 = !DILocation(line: 1313, column: 2, scope: !16229)
!16239 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2667, file: !2667, line: 1325, type: !16240, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16242)
!16240 = !DISubroutineType(types: !16241)
!16241 = !{null, !16232, !108}
!16242 = !{!16243, !16244, !16245}
!16243 = !DILocalVariable(name: "thread", arg: 1, scope: !16239, file: !2667, line: 1325, type: !16232)
!16244 = !DILocalVariable(name: "prio", arg: 2, scope: !16239, file: !2667, line: 1325, type: !108)
!16245 = !DILocalVariable(name: "th", scope: !16239, file: !2667, line: 1334, type: !2562)
!16246 = !DILocation(line: 0, scope: !16239)
!16247 = !DILocation(line: 1336, column: 2, scope: !16239)
!16248 = !DILocation(line: 1337, column: 1, scope: !16239)
!16249 = distinct !DISubprogram(name: "k_can_yield", scope: !2667, file: !2667, line: 1384, type: !8082, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !437)
!16250 = !DILocation(line: 1386, column: 11, scope: !16249)
!16251 = !DILocation(line: 1386, column: 29, scope: !16249)
!16252 = !DILocation(line: 1386, column: 32, scope: !16249)
!16253 = !DILocation(line: 1386, column: 46, scope: !16249)
!16254 = !DILocation(line: 1387, column: 28, scope: !16249)
!16255 = !DILocation(line: 1387, column: 4, scope: !16249)
!16256 = !DILocation(line: 1386, column: 2, scope: !16249)
!16257 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !359, file: !359, line: 989, type: !8082, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !437)
!16258 = !DILocation(line: 993, column: 10, scope: !16257)
!16259 = !DILocation(line: 993, column: 2, scope: !16257)
!16260 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2667, file: !2667, line: 1390, type: !3413, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16261)
!16261 = !{!16262}
!16262 = !DILocalVariable(name: "key", scope: !16260, file: !2667, line: 1396, type: !14749)
!16263 = !DILocation(line: 0, scope: !14757, inlinedAt: !16264)
!16264 = distinct !DILocation(line: 1396, column: 25, scope: !16260)
!16265 = !DILocation(line: 55, column: 2, scope: !14766, inlinedAt: !16266)
!16266 = distinct !DILocation(line: 145, column: 10, scope: !14757, inlinedAt: !16264)
!16267 = !DILocation(line: 0, scope: !14766, inlinedAt: !16266)
!16268 = !DILocation(line: 0, scope: !16260)
!16269 = !DILocation(line: 1400, column: 18, scope: !16270)
!16270 = distinct !DILexicalBlock(scope: !16271, file: !2667, line: 1399, column: 36)
!16271 = distinct !DILexicalBlock(scope: !16260, file: !2667, line: 1398, column: 6)
!16272 = !DILocation(line: 0, scope: !14926, inlinedAt: !16273)
!16273 = distinct !DILocation(line: 1400, column: 3, scope: !16270)
!16274 = !DILocation(line: 266, column: 15, scope: !14926, inlinedAt: !16273)
!16275 = !DILocation(line: 266, column: 28, scope: !14926, inlinedAt: !16273)
!16276 = !DILocation(line: 0, scope: !14934, inlinedAt: !16277)
!16277 = distinct !DILocation(line: 268, column: 3, scope: !14938, inlinedAt: !16273)
!16278 = !DILocation(line: 234, column: 2, scope: !14934, inlinedAt: !16277)
!16279 = !DILocation(line: 1402, column: 15, scope: !16260)
!16280 = !DILocation(line: 0, scope: !14943, inlinedAt: !16281)
!16281 = distinct !DILocation(line: 1402, column: 2, scope: !16260)
!16282 = !DILocation(line: 252, column: 15, scope: !14943, inlinedAt: !16281)
!16283 = !DILocation(line: 252, column: 28, scope: !14943, inlinedAt: !16281)
!16284 = !DILocation(line: 0, scope: !14950, inlinedAt: !16285)
!16285 = distinct !DILocation(line: 254, column: 3, scope: !14954, inlinedAt: !16281)
!16286 = !DILocation(line: 0, scope: !14957, inlinedAt: !16287)
!16287 = distinct !DILocation(line: 229, column: 2, scope: !14950, inlinedAt: !16285)
!16288 = !DILocation(line: 188, column: 2, scope: !14967, inlinedAt: !16287)
!16289 = !DILocation(line: 188, column: 2, scope: !14969, inlinedAt: !16287)
!16290 = !DILocation(line: 0, scope: !14967, inlinedAt: !16287)
!16291 = !DILocation(line: 189, column: 7, scope: !14972, inlinedAt: !16287)
!16292 = !DILocation(line: 189, column: 35, scope: !14972, inlinedAt: !16287)
!16293 = !DILocation(line: 189, column: 7, scope: !14973, inlinedAt: !16287)
!16294 = !DILocation(line: 191, column: 21, scope: !14977, inlinedAt: !16287)
!16295 = !DILocation(line: 190, column: 4, scope: !14977, inlinedAt: !16287)
!16296 = !DILocation(line: 192, column: 4, scope: !14977, inlinedAt: !16287)
!16297 = distinct !{!16297, !16288, !16298}
!16298 = !DILocation(line: 194, column: 2, scope: !14967, inlinedAt: !16287)
!16299 = !DILocation(line: 196, column: 37, scope: !14957, inlinedAt: !16287)
!16300 = !DILocation(line: 196, column: 2, scope: !14957, inlinedAt: !16287)
!16301 = !DILocation(line: 197, column: 1, scope: !14957, inlinedAt: !16287)
!16302 = !DILocation(line: 1403, column: 2, scope: !16260)
!16303 = !DILocation(line: 0, scope: !15368, inlinedAt: !16304)
!16304 = distinct !DILocation(line: 1404, column: 2, scope: !16260)
!16305 = !DILocation(line: 196, column: 9, scope: !15368, inlinedAt: !16304)
!16306 = !DILocation(line: 1405, column: 1, scope: !16260)
!16307 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2667, file: !2667, line: 1459, type: !16308, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16310)
!16308 = !DISubroutineType(types: !16309)
!16309 = !{!220, !15548}
!16310 = !{!16311, !16312, !16313}
!16311 = !DILocalVariable(name: "timeout", arg: 1, scope: !16307, file: !2667, line: 1459, type: !15548)
!16312 = !DILocalVariable(name: "ticks", scope: !16307, file: !2667, line: 1461, type: !109)
!16313 = !DILocalVariable(name: "ret", scope: !16307, file: !2667, line: 1480, type: !220)
!16314 = !DILocation(line: 0, scope: !16307)
!16315 = !DILocation(line: 1468, column: 6, scope: !16316)
!16316 = distinct !DILexicalBlock(scope: !16307, file: !2667, line: 1468, column: 6)
!16317 = !DILocation(line: 1468, column: 6, scope: !16307)
!16318 = !DILocation(line: 1469, column: 20, scope: !16319)
!16319 = distinct !DILexicalBlock(scope: !16316, file: !2667, line: 1468, column: 40)
!16320 = !DILocation(line: 1469, column: 3, scope: !16319)
!16321 = !DILocation(line: 1473, column: 3, scope: !16319)
!16322 = !DILocation(line: 1478, column: 10, scope: !16307)
!16323 = !DILocation(line: 1480, column: 16, scope: !16307)
!16324 = !DILocation(line: 1485, column: 1, scope: !16307)
!16325 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3809, file: !3809, line: 310, type: !16326, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16328)
!16326 = !DISubroutineType(types: !16327)
!16327 = !{null, !16232}
!16328 = !{!16329}
!16329 = !DILocalVariable(name: "thread", arg: 1, scope: !16325, file: !3809, line: 310, type: !16232)
!16330 = !DILocation(line: 0, scope: !16325)
!16331 = !DILocation(line: 319, column: 2, scope: !16332)
!16332 = distinct !DILexicalBlock(scope: !16325, file: !3809, line: 319, column: 2)
!16333 = !{i64 2154901966}
!16334 = !DILocation(line: 320, column: 2, scope: !16325)
!16335 = !DILocation(line: 321, column: 1, scope: !16325)
!16336 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2667, file: !2667, line: 1415, type: !16337, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16339)
!16337 = !DISubroutineType(types: !16338)
!16338 = !{!220, !109}
!16339 = !{!16340, !16341, !16342, !16343}
!16340 = !DILocalVariable(name: "ticks", arg: 1, scope: !16336, file: !2667, line: 1415, type: !109)
!16341 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16336, file: !2667, line: 1418, type: !113)
!16342 = !DILocalVariable(name: "timeout", scope: !16336, file: !2667, line: 1430, type: !15548)
!16343 = !DILocalVariable(name: "key", scope: !16336, file: !2667, line: 1437, type: !14749)
!16344 = !DILocation(line: 0, scope: !16336)
!16345 = !DILocation(line: 1425, column: 12, scope: !16346)
!16346 = distinct !DILexicalBlock(scope: !16336, file: !2667, line: 1425, column: 6)
!16347 = !DILocation(line: 1425, column: 6, scope: !16336)
!16348 = !DILocation(line: 1426, column: 3, scope: !16349)
!16349 = distinct !DILexicalBlock(scope: !16346, file: !2667, line: 1425, column: 18)
!16350 = !DILocation(line: 1427, column: 3, scope: !16349)
!16351 = !DILocation(line: 1431, column: 24, scope: !16352)
!16352 = distinct !DILexicalBlock(scope: !16336, file: !2667, line: 1431, column: 6)
!16353 = !DILocation(line: 1431, column: 6, scope: !16336)
!16354 = !DILocation(line: 1432, column: 35, scope: !16355)
!16355 = distinct !DILexicalBlock(scope: !16352, file: !2667, line: 1431, column: 30)
!16356 = !DILocation(line: 1432, column: 27, scope: !16355)
!16357 = !DILocation(line: 1433, column: 2, scope: !16355)
!16358 = !DILocation(line: 1434, column: 27, scope: !16359)
!16359 = distinct !DILexicalBlock(scope: !16352, file: !2667, line: 1433, column: 9)
!16360 = !DILocation(line: 0, scope: !16352)
!16361 = !DILocation(line: 0, scope: !14757, inlinedAt: !16362)
!16362 = distinct !DILocation(line: 1437, column: 25, scope: !16336)
!16363 = !DILocation(line: 55, column: 2, scope: !14766, inlinedAt: !16364)
!16364 = distinct !DILocation(line: 145, column: 10, scope: !14757, inlinedAt: !16362)
!16365 = !DILocation(line: 0, scope: !14766, inlinedAt: !16364)
!16366 = !DILocation(line: 1440, column: 20, scope: !16336)
!16367 = !DILocation(line: 1440, column: 18, scope: !16336)
!16368 = !DILocation(line: 1442, column: 2, scope: !16336)
!16369 = !DILocation(line: 1443, column: 23, scope: !16336)
!16370 = !DILocation(line: 1443, column: 2, scope: !16336)
!16371 = !DILocation(line: 1444, column: 29, scope: !16336)
!16372 = !DILocation(line: 1444, column: 2, scope: !16336)
!16373 = !DILocation(line: 0, scope: !15368, inlinedAt: !16374)
!16374 = distinct !DILocation(line: 1446, column: 8, scope: !16336)
!16375 = !DILocation(line: 196, column: 9, scope: !15368, inlinedAt: !16374)
!16376 = !DILocation(line: 1450, column: 10, scope: !16336)
!16377 = !DILocation(line: 1450, column: 45, scope: !16336)
!16378 = !DILocation(line: 1450, column: 43, scope: !16336)
!16379 = !DILocation(line: 1451, column: 6, scope: !16336)
!16380 = !DILocation(line: 1457, column: 1, scope: !16336)
!16381 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3776, file: !3776, line: 1103, type: !3777, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16382)
!16382 = !{!16383}
!16383 = !DILocalVariable(name: "t", arg: 1, scope: !16381, file: !3776, line: 1103, type: !114)
!16384 = !DILocation(line: 0, scope: !16381)
!16385 = !DILocation(line: 0, scope: !14804, inlinedAt: !16386)
!16386 = distinct !DILocation(line: 1106, column: 9, scope: !16381)
!16387 = !DILocation(line: 139, column: 13, scope: !16388, inlinedAt: !16386)
!16388 = distinct !DILexicalBlock(scope: !16389, file: !3776, line: 138, column: 10)
!16389 = distinct !DILexicalBlock(scope: !16390, file: !3776, line: 136, column: 7)
!16390 = distinct !DILexicalBlock(scope: !14825, file: !3776, line: 134, column: 17)
!16391 = !DILocation(line: 1106, column: 2, scope: !16381)
!16392 = distinct !DISubprogram(name: "k_yield", scope: !3809, file: !3809, line: 140, type: !3413, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !437)
!16393 = !DILocation(line: 148, column: 2, scope: !16394)
!16394 = distinct !DILexicalBlock(scope: !16392, file: !3809, line: 148, column: 2)
!16395 = !{i64 2154901286}
!16396 = !DILocation(line: 149, column: 2, scope: !16392)
!16397 = !DILocation(line: 150, column: 1, scope: !16392)
!16398 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2667, file: !2667, line: 1495, type: !16399, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16401)
!16399 = !DISubroutineType(types: !16400)
!16400 = !{!220, !108}
!16401 = !{!16402, !16403}
!16402 = !DILocalVariable(name: "us", arg: 1, scope: !16398, file: !2667, line: 1495, type: !108)
!16403 = !DILocalVariable(name: "ticks", scope: !16398, file: !2667, line: 1497, type: !220)
!16404 = !DILocation(line: 0, scope: !16398)
!16405 = !DILocation(line: 1501, column: 31, scope: !16398)
!16406 = !DILocation(line: 1501, column: 10, scope: !16398)
!16407 = !DILocation(line: 1502, column: 23, scope: !16398)
!16408 = !DILocation(line: 1502, column: 10, scope: !16398)
!16409 = !DILocation(line: 1506, column: 31, scope: !16398)
!16410 = !DILocation(line: 1506, column: 9, scope: !16398)
!16411 = !DILocation(line: 1506, column: 2, scope: !16398)
!16412 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3776, file: !3776, line: 571, type: !3777, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16413)
!16413 = !{!16414}
!16414 = !DILocalVariable(name: "t", arg: 1, scope: !16412, file: !3776, line: 571, type: !114)
!16415 = !DILocation(line: 0, scope: !16412)
!16416 = !DILocation(line: 0, scope: !14804, inlinedAt: !16417)
!16417 = distinct !DILocation(line: 574, column: 9, scope: !16412)
!16418 = !DILocation(line: 135, column: 5, scope: !16390, inlinedAt: !16417)
!16419 = !DILocation(line: 139, column: 13, scope: !16388, inlinedAt: !16417)
!16420 = !DILocation(line: 574, column: 2, scope: !16412)
!16421 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3776, file: !3776, line: 1187, type: !3777, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16422)
!16422 = !{!16423}
!16423 = !DILocalVariable(name: "t", arg: 1, scope: !16421, file: !3776, line: 1187, type: !114)
!16424 = !DILocation(line: 0, scope: !16421)
!16425 = !DILocation(line: 0, scope: !14804, inlinedAt: !16426)
!16426 = distinct !DILocation(line: 1190, column: 9, scope: !16421)
!16427 = !DILocation(line: 145, column: 13, scope: !16428, inlinedAt: !16426)
!16428 = distinct !DILexicalBlock(scope: !14822, file: !3776, line: 144, column: 10)
!16429 = !DILocation(line: 1190, column: 2, scope: !16421)
!16430 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2667, file: !2667, line: 1517, type: !16326, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16431)
!16431 = !{!16432}
!16432 = !DILocalVariable(name: "thread", arg: 1, scope: !16430, file: !2667, line: 1517, type: !16232)
!16433 = !DILocation(line: 0, scope: !16430)
!16434 = !DILocation(line: 1521, column: 6, scope: !16435)
!16435 = distinct !DILexicalBlock(scope: !16430, file: !2667, line: 1521, column: 6)
!16436 = !DILocation(line: 1521, column: 6, scope: !16430)
!16437 = !DILocation(line: 1525, column: 6, scope: !16438)
!16438 = distinct !DILexicalBlock(scope: !16430, file: !2667, line: 1525, column: 6)
!16439 = !DILocation(line: 1525, column: 37, scope: !16438)
!16440 = !DILocation(line: 1525, column: 6, scope: !16430)
!16441 = !DILocation(line: 1527, column: 20, scope: !16442)
!16442 = distinct !DILexicalBlock(scope: !16443, file: !2667, line: 1527, column: 7)
!16443 = distinct !DILexicalBlock(scope: !16438, file: !2667, line: 1525, column: 42)
!16444 = !DILocation(line: 1527, column: 33, scope: !16442)
!16445 = !DILocation(line: 1527, column: 7, scope: !16443)
!16446 = !DILocation(line: 1532, column: 2, scope: !16430)
!16447 = !DILocation(line: 1533, column: 2, scope: !16430)
!16448 = !DILocation(line: 1031, column: 3, scope: !15401, inlinedAt: !16449)
!16449 = distinct !DILocation(line: 48, column: 10, scope: !15405, inlinedAt: !16450)
!16450 = distinct !DILocation(line: 1537, column: 7, scope: !16451)
!16451 = distinct !DILexicalBlock(scope: !16430, file: !2667, line: 1537, column: 6)
!16452 = !DILocation(line: 0, scope: !15401, inlinedAt: !16449)
!16453 = !DILocation(line: 48, column: 9, scope: !15405, inlinedAt: !16450)
!16454 = !DILocation(line: 1537, column: 6, scope: !16430)
!16455 = !DILocation(line: 1538, column: 3, scope: !16456)
!16456 = distinct !DILexicalBlock(scope: !16451, file: !2667, line: 1537, column: 25)
!16457 = !DILocation(line: 1539, column: 2, scope: !16456)
!16458 = !DILocation(line: 1540, column: 1, scope: !16430)
!16459 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !14034, file: !14034, line: 101, type: !14875, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16460)
!16460 = !{!16461}
!16461 = !DILocalVariable(name: "thread", arg: 1, scope: !16459, file: !14034, line: 101, type: !2562)
!16462 = !DILocation(line: 0, scope: !16459)
!16463 = !DILocation(line: 103, column: 23, scope: !16459)
!16464 = !DILocation(line: 103, column: 36, scope: !16459)
!16465 = !DILocation(line: 103, column: 55, scope: !16459)
!16466 = !DILocation(line: 103, column: 2, scope: !16459)
!16467 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2667, file: !2667, line: 1567, type: !16468, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16470)
!16468 = !DISubroutineType(types: !16469)
!16469 = !{!16232}
!16470 = !{!16471}
!16471 = !DILocalVariable(name: "ret", scope: !16467, file: !2667, line: 1577, type: !16232)
!16472 = !DILocation(line: 1577, column: 30, scope: !16467)
!16473 = !DILocation(line: 0, scope: !16467)
!16474 = !DILocation(line: 1582, column: 2, scope: !16467)
!16475 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2667, file: !2667, line: 1593, type: !8371, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !437)
!16476 = !DILocation(line: 1031, column: 3, scope: !15401, inlinedAt: !16477)
!16477 = distinct !DILocation(line: 48, column: 10, scope: !15405, inlinedAt: !16478)
!16478 = distinct !DILocation(line: 1595, column: 10, scope: !16475)
!16479 = !DILocation(line: 0, scope: !15401, inlinedAt: !16477)
!16480 = !DILocation(line: 48, column: 9, scope: !15405, inlinedAt: !16478)
!16481 = !DILocation(line: 1595, column: 27, scope: !16475)
!16482 = !DILocation(line: 1595, column: 41, scope: !16475)
!16483 = !DILocation(line: 1595, column: 30, scope: !16475)
!16484 = !DILocation(line: 1595, column: 2, scope: !16475)
!16485 = distinct !DISubprogram(name: "z_thread_abort", scope: !2667, file: !2667, line: 1725, type: !14715, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16486)
!16486 = !{!16487, !16488}
!16487 = !DILocalVariable(name: "thread", arg: 1, scope: !16485, file: !2667, line: 1725, type: !2562)
!16488 = !DILocalVariable(name: "key", scope: !16485, file: !2667, line: 1727, type: !14749)
!16489 = !DILocation(line: 0, scope: !16485)
!16490 = !DILocation(line: 0, scope: !14757, inlinedAt: !16491)
!16491 = distinct !DILocation(line: 1727, column: 25, scope: !16485)
!16492 = !DILocation(line: 55, column: 2, scope: !14766, inlinedAt: !16493)
!16493 = distinct !DILocation(line: 145, column: 10, scope: !14757, inlinedAt: !16491)
!16494 = !DILocation(line: 0, scope: !14766, inlinedAt: !16493)
!16495 = !DILocation(line: 1729, column: 20, scope: !16496)
!16496 = distinct !DILexicalBlock(scope: !16485, file: !2667, line: 1729, column: 6)
!16497 = !DILocation(line: 1729, column: 33, scope: !16496)
!16498 = !DILocation(line: 1729, column: 48, scope: !16496)
!16499 = !DILocation(line: 1729, column: 6, scope: !16485)
!16500 = !DILocation(line: 0, scope: !14784, inlinedAt: !16501)
!16501 = distinct !DILocation(line: 1730, column: 3, scope: !16502)
!16502 = distinct !DILexicalBlock(scope: !16496, file: !2667, line: 1729, column: 54)
!16503 = !DILocation(line: 0, scope: !14792, inlinedAt: !16504)
!16504 = distinct !DILocation(line: 215, column: 2, scope: !14784, inlinedAt: !16501)
!16505 = !DILocation(line: 95, column: 2, scope: !14792, inlinedAt: !16504)
!16506 = !DILocation(line: 1732, column: 3, scope: !16507)
!16507 = distinct !DILexicalBlock(scope: !16502, file: !2667, line: 1732, column: 3)
!16508 = !{i64 2155637291, i64 2155637307, i64 2155637333, i64 2155637361, i64 2155637381}
!16509 = !DILocation(line: 1733, column: 3, scope: !16502)
!16510 = !DILocation(line: 1736, column: 20, scope: !16511)
!16511 = distinct !DILexicalBlock(scope: !16485, file: !2667, line: 1736, column: 6)
!16512 = !DILocation(line: 1736, column: 33, scope: !16511)
!16513 = !DILocation(line: 1736, column: 49, scope: !16511)
!16514 = !DILocation(line: 1736, column: 6, scope: !16485)
!16515 = !DILocation(line: 0, scope: !14784, inlinedAt: !16516)
!16516 = distinct !DILocation(line: 1737, column: 3, scope: !16517)
!16517 = distinct !DILexicalBlock(scope: !16511, file: !2667, line: 1736, column: 56)
!16518 = !DILocation(line: 0, scope: !14792, inlinedAt: !16519)
!16519 = distinct !DILocation(line: 215, column: 2, scope: !14784, inlinedAt: !16516)
!16520 = !DILocation(line: 95, column: 2, scope: !14792, inlinedAt: !16519)
!16521 = !DILocation(line: 1738, column: 3, scope: !16517)
!16522 = !DILocation(line: 1775, column: 2, scope: !16485)
!16523 = !DILocation(line: 1776, column: 16, scope: !16524)
!16524 = distinct !DILexicalBlock(scope: !16485, file: !2667, line: 1776, column: 6)
!16525 = !DILocation(line: 1776, column: 13, scope: !16524)
!16526 = !DILocation(line: 1776, column: 25, scope: !16524)
!16527 = !DILocation(line: 1031, column: 3, scope: !15401, inlinedAt: !16528)
!16528 = distinct !DILocation(line: 48, column: 10, scope: !15405, inlinedAt: !16529)
!16529 = distinct !DILocation(line: 1776, column: 29, scope: !16524)
!16530 = !DILocation(line: 0, scope: !15401, inlinedAt: !16528)
!16531 = !DILocation(line: 48, column: 9, scope: !15405, inlinedAt: !16529)
!16532 = !DILocation(line: 1776, column: 6, scope: !16485)
!16533 = !DILocation(line: 0, scope: !15368, inlinedAt: !16534)
!16534 = distinct !DILocation(line: 1777, column: 3, scope: !16535)
!16535 = distinct !DILexicalBlock(scope: !16524, file: !2667, line: 1776, column: 47)
!16536 = !DILocation(line: 196, column: 9, scope: !15368, inlinedAt: !16534)
!16537 = !DILocation(line: 1779, column: 2, scope: !16535)
!16538 = !DILocation(line: 0, scope: !14784, inlinedAt: !16539)
!16539 = distinct !DILocation(line: 1780, column: 2, scope: !16485)
!16540 = !DILocation(line: 0, scope: !14792, inlinedAt: !16541)
!16541 = distinct !DILocation(line: 215, column: 2, scope: !14784, inlinedAt: !16539)
!16542 = !DILocation(line: 95, column: 2, scope: !14792, inlinedAt: !16541)
!16543 = !DILocation(line: 1781, column: 1, scope: !16485)
!16544 = distinct !DISubprogram(name: "end_thread", scope: !2667, file: !2667, line: 1690, type: !14715, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16545)
!16545 = !{!16546}
!16546 = !DILocalVariable(name: "thread", arg: 1, scope: !16544, file: !2667, line: 1690, type: !2562)
!16547 = !DILocation(line: 0, scope: !16544)
!16548 = !DILocation(line: 1695, column: 20, scope: !16549)
!16549 = distinct !DILexicalBlock(scope: !16544, file: !2667, line: 1695, column: 6)
!16550 = !DILocation(line: 1695, column: 33, scope: !16549)
!16551 = !DILocation(line: 1695, column: 49, scope: !16549)
!16552 = !DILocation(line: 1695, column: 6, scope: !16544)
!16553 = !DILocation(line: 1697, column: 29, scope: !16554)
!16554 = distinct !DILexicalBlock(scope: !16549, file: !2667, line: 1695, column: 56)
!16555 = !DILocation(line: 1698, column: 7, scope: !16556)
!16556 = distinct !DILexicalBlock(scope: !16554, file: !2667, line: 1698, column: 7)
!16557 = !DILocation(line: 1698, column: 7, scope: !16554)
!16558 = !DILocation(line: 0, scope: !14926, inlinedAt: !16559)
!16559 = distinct !DILocation(line: 1699, column: 4, scope: !16560)
!16560 = distinct !DILexicalBlock(scope: !16556, file: !2667, line: 1698, column: 35)
!16561 = !DILocation(line: 266, column: 28, scope: !14926, inlinedAt: !16559)
!16562 = !DILocation(line: 0, scope: !14934, inlinedAt: !16563)
!16563 = distinct !DILocation(line: 268, column: 3, scope: !14938, inlinedAt: !16559)
!16564 = !DILocation(line: 234, column: 2, scope: !14934, inlinedAt: !16563)
!16565 = !DILocation(line: 1700, column: 3, scope: !16560)
!16566 = !DILocation(line: 1701, column: 20, scope: !16567)
!16567 = distinct !DILexicalBlock(scope: !16554, file: !2667, line: 1701, column: 7)
!16568 = !DILocation(line: 1701, column: 30, scope: !16567)
!16569 = !DILocation(line: 1701, column: 7, scope: !16554)
!16570 = !DILocation(line: 1702, column: 4, scope: !16571)
!16571 = distinct !DILexicalBlock(scope: !16567, file: !2667, line: 1701, column: 39)
!16572 = !DILocation(line: 1703, column: 3, scope: !16571)
!16573 = !DILocation(line: 1704, column: 9, scope: !16554)
!16574 = !DILocation(line: 1705, column: 23, scope: !16554)
!16575 = !DILocation(line: 1705, column: 3, scope: !16554)
!16576 = !DILocation(line: 1706, column: 3, scope: !16554)
!16577 = !DILocation(line: 1722, column: 2, scope: !16554)
!16578 = !DILocation(line: 1723, column: 1, scope: !16544)
!16579 = distinct !DISubprogram(name: "unpend_all", scope: !2667, file: !2667, line: 1674, type: !16580, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16582)
!16580 = !DISubroutineType(types: !16581)
!16581 = !{null, !2593}
!16582 = !{!16583, !16584}
!16583 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16579, file: !2667, line: 1674, type: !2593)
!16584 = !DILocalVariable(name: "thread", scope: !16579, file: !2667, line: 1676, type: !2562)
!16585 = !DILocation(line: 0, scope: !16579)
!16586 = !DILocation(line: 1678, column: 19, scope: !16579)
!16587 = !DILocation(line: 1678, column: 41, scope: !16579)
!16588 = !DILocation(line: 1678, column: 2, scope: !16579)
!16589 = !DILocation(line: 1679, column: 3, scope: !16590)
!16590 = distinct !DILexicalBlock(scope: !16579, file: !2667, line: 1678, column: 50)
!16591 = !DILocation(line: 1680, column: 9, scope: !16590)
!16592 = !DILocalVariable(name: "thread", arg: 1, scope: !16593, file: !14054, line: 65, type: !2562)
!16593 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14054, file: !14054, line: 65, type: !16594, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16596)
!16594 = !DISubroutineType(types: !16595)
!16595 = !{null, !2562, !32}
!16596 = !{!16592, !16597}
!16597 = !DILocalVariable(name: "value", arg: 2, scope: !16593, file: !14054, line: 65, type: !32)
!16598 = !DILocation(line: 0, scope: !16593, inlinedAt: !16599)
!16599 = distinct !DILocation(line: 1681, column: 3, scope: !16590)
!16600 = !DILocation(line: 67, column: 15, scope: !16593, inlinedAt: !16599)
!16601 = !DILocation(line: 67, column: 33, scope: !16593, inlinedAt: !16599)
!16602 = !DILocation(line: 1682, column: 3, scope: !16590)
!16603 = distinct !{!16603, !16588, !16604}
!16604 = !DILocation(line: 1683, column: 2, scope: !16579)
!16605 = !DILocation(line: 1684, column: 1, scope: !16579)
!16606 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2667, file: !2667, line: 1794, type: !16607, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16609)
!16607 = !DISubroutineType(types: !16608)
!16608 = !{!108, !2562, !15548}
!16609 = !{!16610, !16611, !16612, !16613}
!16610 = !DILocalVariable(name: "thread", arg: 1, scope: !16606, file: !2667, line: 1794, type: !2562)
!16611 = !DILocalVariable(name: "timeout", arg: 2, scope: !16606, file: !2667, line: 1794, type: !15548)
!16612 = !DILocalVariable(name: "key", scope: !16606, file: !2667, line: 1796, type: !14749)
!16613 = !DILocalVariable(name: "ret", scope: !16606, file: !2667, line: 1797, type: !108)
!16614 = !DILocation(line: 0, scope: !16606)
!16615 = !DILocation(line: 0, scope: !14757, inlinedAt: !16616)
!16616 = distinct !DILocation(line: 1796, column: 25, scope: !16606)
!16617 = !DILocation(line: 55, column: 2, scope: !14766, inlinedAt: !16618)
!16618 = distinct !DILocation(line: 145, column: 10, scope: !14757, inlinedAt: !16616)
!16619 = !DILocation(line: 0, scope: !14766, inlinedAt: !16618)
!16620 = !DILocation(line: 1801, column: 20, scope: !16621)
!16621 = distinct !DILexicalBlock(scope: !16606, file: !2667, line: 1801, column: 6)
!16622 = !DILocation(line: 1801, column: 33, scope: !16621)
!16623 = !DILocation(line: 1801, column: 49, scope: !16621)
!16624 = !DILocation(line: 1801, column: 6, scope: !16606)
!16625 = !DILocation(line: 1803, column: 13, scope: !16626)
!16626 = distinct !DILexicalBlock(scope: !16621, file: !2667, line: 1803, column: 13)
!16627 = !DILocation(line: 1803, column: 13, scope: !16621)
!16628 = !DILocation(line: 1805, column: 24, scope: !16629)
!16629 = distinct !DILexicalBlock(scope: !16626, file: !2667, line: 1805, column: 13)
!16630 = !DILocation(line: 1805, column: 21, scope: !16629)
!16631 = !DILocation(line: 1805, column: 34, scope: !16629)
!16632 = !DILocation(line: 1806, column: 20, scope: !16629)
!16633 = !DILocation(line: 1806, column: 44, scope: !16629)
!16634 = !DILocation(line: 1806, column: 30, scope: !16629)
!16635 = !DILocation(line: 1805, column: 13, scope: !16626)
!16636 = !DILocation(line: 1810, column: 42, scope: !16637)
!16637 = distinct !DILexicalBlock(scope: !16629, file: !2667, line: 1808, column: 9)
!16638 = !DILocation(line: 1810, column: 3, scope: !16637)
!16639 = !DILocation(line: 1811, column: 22, scope: !16637)
!16640 = !DILocation(line: 1811, column: 3, scope: !16637)
!16641 = !DILocation(line: 0, scope: !15368, inlinedAt: !16642)
!16642 = distinct !DILocation(line: 1814, column: 9, scope: !16637)
!16643 = !DILocation(line: 196, column: 9, scope: !15368, inlinedAt: !16642)
!16644 = !DILocation(line: 1817, column: 3, scope: !16637)
!16645 = !DILocation(line: 0, scope: !16621)
!16646 = !DILocation(line: 0, scope: !14784, inlinedAt: !16647)
!16647 = distinct !DILocation(line: 1822, column: 2, scope: !16606)
!16648 = !DILocation(line: 0, scope: !14792, inlinedAt: !16649)
!16649 = distinct !DILocation(line: 215, column: 2, scope: !14784, inlinedAt: !16647)
!16650 = !DILocation(line: 95, column: 2, scope: !14792, inlinedAt: !16649)
!16651 = !DILocation(line: 1823, column: 2, scope: !16606)
!16652 = !DILocation(line: 1824, column: 1, scope: !16606)
!16653 = distinct !DISubprogram(name: "z_sched_wake", scope: !2667, file: !2667, line: 1882, type: !16654, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16656)
!16654 = !DISubroutineType(types: !16655)
!16655 = !{!422, !2593, !108, !104}
!16656 = !{!16657, !16658, !16659, !16660, !16661, !16662, !16664}
!16657 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16653, file: !2667, line: 1882, type: !2593)
!16658 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16653, file: !2667, line: 1882, type: !108)
!16659 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16653, file: !2667, line: 1882, type: !104)
!16660 = !DILocalVariable(name: "thread", scope: !16653, file: !2667, line: 1884, type: !2562)
!16661 = !DILocalVariable(name: "ret", scope: !16653, file: !2667, line: 1885, type: !422)
!16662 = !DILocalVariable(name: "__i", scope: !16663, file: !2667, line: 1887, type: !14749)
!16663 = distinct !DILexicalBlock(scope: !16653, file: !2667, line: 1887, column: 2)
!16664 = !DILocalVariable(name: "__key", scope: !16663, file: !2667, line: 1887, type: !14749)
!16665 = !DILocation(line: 0, scope: !16653)
!16666 = !DILocation(line: 0, scope: !16663)
!16667 = !DILocation(line: 0, scope: !14757, inlinedAt: !16668)
!16668 = distinct !DILocation(line: 1887, column: 2, scope: !16663)
!16669 = !DILocation(line: 55, column: 2, scope: !14766, inlinedAt: !16670)
!16670 = distinct !DILocation(line: 145, column: 10, scope: !14757, inlinedAt: !16668)
!16671 = !DILocation(line: 0, scope: !14766, inlinedAt: !16670)
!16672 = !DILocation(line: 1888, column: 12, scope: !16673)
!16673 = distinct !DILexicalBlock(scope: !16674, file: !2667, line: 1887, column: 26)
!16674 = distinct !DILexicalBlock(scope: !16663, file: !2667, line: 1887, column: 2)
!16675 = !DILocation(line: 1890, column: 14, scope: !16676)
!16676 = distinct !DILexicalBlock(scope: !16673, file: !2667, line: 1890, column: 7)
!16677 = !DILocation(line: 1890, column: 7, scope: !16673)
!16678 = !DILocalVariable(name: "thread", arg: 1, scope: !16679, file: !16680, line: 134, type: !2562)
!16679 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16680, file: !16680, line: 134, type: !16681, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16683)
!16680 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16681 = !DISubroutineType(types: !16682)
!16682 = !{null, !2562, !32, !104}
!16683 = !{!16678, !16684, !16685}
!16684 = !DILocalVariable(name: "value", arg: 2, scope: !16679, file: !16680, line: 135, type: !32)
!16685 = !DILocalVariable(name: "data", arg: 3, scope: !16679, file: !16680, line: 136, type: !104)
!16686 = !DILocation(line: 0, scope: !16679, inlinedAt: !16687)
!16687 = distinct !DILocation(line: 1891, column: 4, scope: !16688)
!16688 = distinct !DILexicalBlock(scope: !16676, file: !2667, line: 1890, column: 23)
!16689 = !DILocation(line: 0, scope: !16593, inlinedAt: !16690)
!16690 = distinct !DILocation(line: 138, column: 2, scope: !16679, inlinedAt: !16687)
!16691 = !DILocation(line: 67, column: 15, scope: !16593, inlinedAt: !16690)
!16692 = !DILocation(line: 67, column: 33, scope: !16593, inlinedAt: !16690)
!16693 = !DILocation(line: 139, column: 15, scope: !16679, inlinedAt: !16687)
!16694 = !DILocation(line: 139, column: 25, scope: !16679, inlinedAt: !16687)
!16695 = !DILocation(line: 1894, column: 4, scope: !16688)
!16696 = !DILocation(line: 1895, column: 10, scope: !16688)
!16697 = !DILocation(line: 1896, column: 4, scope: !16688)
!16698 = !DILocation(line: 1898, column: 3, scope: !16688)
!16699 = !DILocation(line: 0, scope: !14784, inlinedAt: !16700)
!16700 = distinct !DILocation(line: 1887, column: 2, scope: !16674)
!16701 = !DILocation(line: 0, scope: !14792, inlinedAt: !16702)
!16702 = distinct !DILocation(line: 215, column: 2, scope: !14784, inlinedAt: !16700)
!16703 = !DILocation(line: 95, column: 2, scope: !14792, inlinedAt: !16702)
!16704 = !DILocation(line: 1901, column: 2, scope: !16653)
!16705 = distinct !DISubprogram(name: "z_sched_wait", scope: !2667, file: !2667, line: 1904, type: !16706, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !16709)
!16706 = !DISubroutineType(types: !16707)
!16707 = !{!108, !14760, !14749, !2593, !15548, !16708}
!16708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 32)
!16709 = !{!16710, !16711, !16712, !16713, !16714, !16715}
!16710 = !DILocalVariable(name: "lock", arg: 1, scope: !16705, file: !2667, line: 1904, type: !14760)
!16711 = !DILocalVariable(name: "key", arg: 2, scope: !16705, file: !2667, line: 1904, type: !14749)
!16712 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16705, file: !2667, line: 1905, type: !2593)
!16713 = !DILocalVariable(name: "timeout", arg: 4, scope: !16705, file: !2667, line: 1905, type: !15548)
!16714 = !DILocalVariable(name: "data", arg: 5, scope: !16705, file: !2667, line: 1905, type: !16708)
!16715 = !DILocalVariable(name: "ret", scope: !16705, file: !2667, line: 1907, type: !108)
!16716 = !DILocation(line: 0, scope: !16705)
!16717 = !DILocation(line: 1907, column: 12, scope: !16705)
!16718 = !DILocation(line: 1909, column: 11, scope: !16719)
!16719 = distinct !DILexicalBlock(scope: !16705, file: !2667, line: 1909, column: 6)
!16720 = !DILocation(line: 1909, column: 6, scope: !16705)
!16721 = !DILocation(line: 1910, column: 11, scope: !16722)
!16722 = distinct !DILexicalBlock(scope: !16719, file: !2667, line: 1909, column: 20)
!16723 = !DILocation(line: 1910, column: 26, scope: !16722)
!16724 = !DILocation(line: 1910, column: 9, scope: !16722)
!16725 = !DILocation(line: 1911, column: 2, scope: !16722)
!16726 = !DILocation(line: 1912, column: 2, scope: !16705)
!16727 = distinct !DISubprogram(name: "z_data_copy", scope: !16728, file: !16728, line: 22, type: !3413, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3396, retainedNodes: !437)
!16728 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16729 = !DILocation(line: 24, column: 2, scope: !16727)
!16730 = !DILocation(line: 27, column: 2, scope: !16727)
!16731 = !DILocation(line: 31, column: 2, scope: !16727)
!16732 = !DILocation(line: 71, column: 1, scope: !16727)
!16733 = distinct !DISubprogram(name: "z_add_timeout", scope: !2704, file: !2704, line: 88, type: !16734, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !16740)
!16734 = !DISubroutineType(types: !16735)
!16735 = !{null, !2677, !2696, !16736}
!16736 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !16737)
!16737 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !16738)
!16738 = !{!16739}
!16739 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16737, file: !110, line: 66, baseType: !109, size: 64)
!16740 = !{!16741, !16742, !16743, !16744, !16750, !16751, !16754, !16757}
!16741 = !DILocalVariable(name: "to", arg: 1, scope: !16733, file: !2704, line: 88, type: !2677)
!16742 = !DILocalVariable(name: "fn", arg: 2, scope: !16733, file: !2704, line: 88, type: !2696)
!16743 = !DILocalVariable(name: "timeout", arg: 3, scope: !16733, file: !2704, line: 89, type: !16736)
!16744 = !DILocalVariable(name: "__i", scope: !16745, file: !2704, line: 102, type: !16746)
!16745 = distinct !DILexicalBlock(scope: !16733, file: !2704, line: 102, column: 2)
!16746 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !16747)
!16747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !16748)
!16748 = !{!16749}
!16749 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16747, file: !436, line: 33, baseType: !108, size: 32)
!16750 = !DILocalVariable(name: "__key", scope: !16745, file: !2704, line: 102, type: !16746)
!16751 = !DILocalVariable(name: "t", scope: !16752, file: !2704, line: 103, type: !2677)
!16752 = distinct !DILexicalBlock(scope: !16753, file: !2704, line: 102, column: 24)
!16753 = distinct !DILexicalBlock(scope: !16745, file: !2704, line: 102, column: 2)
!16754 = !DILocalVariable(name: "ticks", scope: !16755, file: !2704, line: 107, type: !109)
!16755 = distinct !DILexicalBlock(scope: !16756, file: !2704, line: 106, column: 39)
!16756 = distinct !DILexicalBlock(scope: !16752, file: !2704, line: 105, column: 7)
!16757 = !DILocalVariable(name: "next_time", scope: !16758, file: !2704, line: 137, type: !220)
!16758 = distinct !DILexicalBlock(scope: !16759, file: !2704, line: 127, column: 22)
!16759 = distinct !DILexicalBlock(scope: !16752, file: !2704, line: 127, column: 7)
!16760 = !DILocation(line: 0, scope: !16733)
!16761 = !DILocation(line: 91, column: 6, scope: !16762)
!16762 = distinct !DILexicalBlock(scope: !16733, file: !2704, line: 91, column: 6)
!16763 = !DILocation(line: 91, column: 6, scope: !16733)
!16764 = !DILocation(line: 100, column: 6, scope: !16733)
!16765 = !DILocation(line: 100, column: 9, scope: !16733)
!16766 = !DILocation(line: 0, scope: !16745)
!16767 = !DILocalVariable(name: "l", arg: 1, scope: !16768, file: !436, line: 136, type: !16771)
!16768 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !16769, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !16772)
!16769 = !DISubroutineType(types: !16770)
!16770 = !{!16746, !16771}
!16771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2705, size: 32)
!16772 = !{!16767, !16773}
!16773 = !DILocalVariable(name: "k", scope: !16768, file: !436, line: 139, type: !16746)
!16774 = !DILocation(line: 0, scope: !16768, inlinedAt: !16775)
!16775 = distinct !DILocation(line: 102, column: 2, scope: !16745)
!16776 = !DILocation(line: 55, column: 2, scope: !16777, inlinedAt: !16781)
!16777 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4087, file: !4087, line: 42, type: !4088, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !16778)
!16778 = !{!16779, !16780}
!16779 = !DILocalVariable(name: "key", scope: !16777, file: !4087, line: 44, type: !32)
!16780 = !DILocalVariable(name: "tmp", scope: !16777, file: !4087, line: 53, type: !32)
!16781 = distinct !DILocation(line: 145, column: 10, scope: !16768, inlinedAt: !16775)
!16782 = !{i64 2245270}
!16783 = !DILocation(line: 0, scope: !16777, inlinedAt: !16781)
!16784 = !DILocation(line: 106, column: 33, scope: !16756)
!16785 = !DILocation(line: 105, column: 7, scope: !16752)
!16786 = !DILocation(line: 107, column: 50, scope: !16755)
!16787 = !DILocation(line: 107, column: 48, scope: !16755)
!16788 = !DILocation(line: 0, scope: !16755)
!16789 = !DILocation(line: 109, column: 17, scope: !16755)
!16790 = !DILocation(line: 110, column: 3, scope: !16755)
!16791 = !DILocation(line: 111, column: 31, scope: !16792)
!16792 = distinct !DILexicalBlock(scope: !16756, file: !2704, line: 110, column: 10)
!16793 = !DILocation(line: 111, column: 37, scope: !16792)
!16794 = !DILocation(line: 111, column: 35, scope: !16792)
!16795 = !DILocation(line: 0, scope: !16756)
!16796 = !DILocation(line: 109, column: 8, scope: !16755)
!16797 = !DILocation(line: 109, column: 15, scope: !16755)
!16798 = !DILocation(line: 114, column: 12, scope: !16799)
!16799 = distinct !DILexicalBlock(scope: !16752, file: !2704, line: 114, column: 3)
!16800 = !DILocation(line: 0, scope: !16752)
!16801 = !DILocation(line: 114, column: 3, scope: !16799)
!16802 = !DILocation(line: 115, column: 24, scope: !16803)
!16803 = distinct !DILexicalBlock(scope: !16804, file: !2704, line: 115, column: 8)
!16804 = distinct !DILexicalBlock(scope: !16805, file: !2704, line: 114, column: 45)
!16805 = distinct !DILexicalBlock(scope: !16799, file: !2704, line: 114, column: 3)
!16806 = !DILocation(line: 115, column: 11, scope: !16803)
!16807 = !DILocation(line: 115, column: 18, scope: !16803)
!16808 = !DILocation(line: 115, column: 8, scope: !16804)
!16809 = !DILocation(line: 116, column: 15, scope: !16810)
!16810 = distinct !DILexicalBlock(scope: !16803, file: !2704, line: 115, column: 32)
!16811 = !DILocation(line: 117, column: 26, scope: !16810)
!16812 = !DILocation(line: 117, column: 37, scope: !16810)
!16813 = !DILocation(line: 117, column: 5, scope: !16810)
!16814 = !DILocation(line: 123, column: 7, scope: !16752)
!16815 = !DILocation(line: 120, column: 15, scope: !16804)
!16816 = !DILocation(line: 114, column: 36, scope: !16805)
!16817 = distinct !{!16817, !16801, !16818}
!16818 = !DILocation(line: 121, column: 3, scope: !16799)
!16819 = !DILocation(line: 124, column: 41, scope: !16820)
!16820 = distinct !DILexicalBlock(scope: !16821, file: !2704, line: 123, column: 18)
!16821 = distinct !DILexicalBlock(scope: !16752, file: !2704, line: 123, column: 7)
!16822 = !DILocation(line: 124, column: 4, scope: !16820)
!16823 = !DILocation(line: 125, column: 3, scope: !16820)
!16824 = !DILocation(line: 127, column: 13, scope: !16759)
!16825 = !DILocation(line: 127, column: 10, scope: !16759)
!16826 = !DILocation(line: 127, column: 7, scope: !16752)
!16827 = !DILocation(line: 137, column: 24, scope: !16758)
!16828 = !DILocation(line: 0, scope: !16758)
!16829 = !DILocation(line: 139, column: 18, scope: !16830)
!16830 = distinct !DILexicalBlock(scope: !16758, file: !2704, line: 139, column: 8)
!16831 = !DILocation(line: 139, column: 23, scope: !16830)
!16832 = !DILocation(line: 141, column: 5, scope: !16833)
!16833 = distinct !DILexicalBlock(scope: !16830, file: !2704, line: 140, column: 48)
!16834 = !DILocation(line: 142, column: 4, scope: !16833)
!16835 = !DILocalVariable(name: "key", arg: 2, scope: !16836, file: !436, line: 190, type: !16746)
!16836 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !16837, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !16839)
!16837 = !DISubroutineType(types: !16838)
!16838 = !{null, !16771, !16746}
!16839 = !{!16840, !16835}
!16840 = !DILocalVariable(name: "l", arg: 1, scope: !16836, file: !436, line: 189, type: !16771)
!16841 = !DILocation(line: 0, scope: !16836, inlinedAt: !16842)
!16842 = distinct !DILocation(line: 102, column: 2, scope: !16753)
!16843 = !DILocalVariable(name: "key", arg: 1, scope: !16844, file: !4087, line: 84, type: !32)
!16844 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4087, file: !4087, line: 84, type: !4100, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !16845)
!16845 = !{!16843}
!16846 = !DILocation(line: 0, scope: !16844, inlinedAt: !16847)
!16847 = distinct !DILocation(line: 215, column: 2, scope: !16836, inlinedAt: !16842)
!16848 = !DILocation(line: 95, column: 2, scope: !16844, inlinedAt: !16847)
!16849 = !{i64 2246087}
!16850 = !DILocation(line: 148, column: 1, scope: !16733)
!16851 = distinct !DISubprogram(name: "elapsed", scope: !2704, file: !2704, line: 62, type: !16852, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !437)
!16852 = !DISubroutineType(types: !16853)
!16853 = !{!220}
!16854 = !DILocation(line: 64, column: 9, scope: !16851)
!16855 = !DILocation(line: 64, column: 28, scope: !16851)
!16856 = !DILocation(line: 64, column: 35, scope: !16851)
!16857 = !DILocation(line: 64, column: 2, scope: !16851)
!16858 = distinct !DISubprogram(name: "first", scope: !2704, file: !2704, line: 39, type: !16859, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !16861)
!16859 = !DISubroutineType(types: !16860)
!16860 = !{!2677}
!16861 = !{!16862}
!16862 = !DILocalVariable(name: "t", scope: !16858, file: !2704, line: 41, type: !16863)
!16863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2681, size: 32)
!16864 = !DILocation(line: 41, column: 19, scope: !16858)
!16865 = !DILocation(line: 0, scope: !16858)
!16866 = !DILocation(line: 43, column: 9, scope: !16858)
!16867 = !DILocation(line: 43, column: 2, scope: !16858)
!16868 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !367, file: !367, line: 443, type: !16869, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !16871)
!16869 = !DISubroutineType(types: !16870)
!16870 = !{null, !16863, !16863}
!16871 = !{!16872, !16873, !16874}
!16872 = !DILocalVariable(name: "successor", arg: 1, scope: !16868, file: !367, line: 443, type: !16863)
!16873 = !DILocalVariable(name: "node", arg: 2, scope: !16868, file: !367, line: 443, type: !16863)
!16874 = !DILocalVariable(name: "prev", scope: !16868, file: !367, line: 445, type: !16875)
!16875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16863)
!16876 = !DILocation(line: 0, scope: !16868)
!16877 = !DILocation(line: 445, column: 39, scope: !16868)
!16878 = !DILocation(line: 447, column: 8, scope: !16868)
!16879 = !DILocation(line: 447, column: 13, scope: !16868)
!16880 = !DILocation(line: 448, column: 8, scope: !16868)
!16881 = !DILocation(line: 448, column: 13, scope: !16868)
!16882 = !DILocation(line: 449, column: 8, scope: !16868)
!16883 = !DILocation(line: 449, column: 13, scope: !16868)
!16884 = !DILocation(line: 450, column: 18, scope: !16868)
!16885 = !DILocation(line: 451, column: 1, scope: !16868)
!16886 = distinct !DISubprogram(name: "next", scope: !2704, file: !2704, line: 46, type: !16887, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !16889)
!16887 = !DISubroutineType(types: !16888)
!16888 = !{!2677, !2677}
!16889 = !{!16890, !16891}
!16890 = !DILocalVariable(name: "t", arg: 1, scope: !16886, file: !2704, line: 46, type: !2677)
!16891 = !DILocalVariable(name: "n", scope: !16886, file: !2704, line: 48, type: !16863)
!16892 = !DILocation(line: 0, scope: !16886)
!16893 = !DILocation(line: 48, column: 58, scope: !16886)
!16894 = !DILocation(line: 48, column: 19, scope: !16886)
!16895 = !DILocation(line: 50, column: 9, scope: !16886)
!16896 = !DILocation(line: 50, column: 2, scope: !16886)
!16897 = distinct !DISubprogram(name: "sys_dlist_append", scope: !367, file: !367, line: 404, type: !16898, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !16901)
!16898 = !DISubroutineType(types: !16899)
!16899 = !{null, !16900, !16863}
!16900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2710, size: 32)
!16901 = !{!16902, !16903, !16904}
!16902 = !DILocalVariable(name: "list", arg: 1, scope: !16897, file: !367, line: 404, type: !16900)
!16903 = !DILocalVariable(name: "node", arg: 2, scope: !16897, file: !367, line: 404, type: !16863)
!16904 = !DILocalVariable(name: "tail", scope: !16897, file: !367, line: 406, type: !16875)
!16905 = !DILocation(line: 0, scope: !16897)
!16906 = !DILocation(line: 406, column: 34, scope: !16897)
!16907 = !DILocation(line: 408, column: 8, scope: !16897)
!16908 = !DILocation(line: 408, column: 13, scope: !16897)
!16909 = !DILocation(line: 409, column: 8, scope: !16897)
!16910 = !DILocation(line: 409, column: 13, scope: !16897)
!16911 = !DILocation(line: 411, column: 8, scope: !16897)
!16912 = !DILocation(line: 411, column: 13, scope: !16897)
!16913 = !DILocation(line: 412, column: 13, scope: !16897)
!16914 = !DILocation(line: 413, column: 1, scope: !16897)
!16915 = distinct !DISubprogram(name: "next_timeout", scope: !2704, file: !2704, line: 67, type: !16852, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !16916)
!16916 = !{!16917, !16918, !16919}
!16917 = !DILocalVariable(name: "to", scope: !16915, file: !2704, line: 69, type: !2677)
!16918 = !DILocalVariable(name: "ticks_elapsed", scope: !16915, file: !2704, line: 70, type: !220)
!16919 = !DILocalVariable(name: "ret", scope: !16915, file: !2704, line: 71, type: !220)
!16920 = !DILocation(line: 69, column: 24, scope: !16915)
!16921 = !DILocation(line: 0, scope: !16915)
!16922 = !DILocation(line: 70, column: 26, scope: !16915)
!16923 = !DILocation(line: 73, column: 10, scope: !16924)
!16924 = distinct !DILexicalBlock(scope: !16915, file: !2704, line: 73, column: 6)
!16925 = !DILocation(line: 73, column: 19, scope: !16924)
!16926 = !DILocation(line: 74, column: 21, scope: !16924)
!16927 = !DILocation(line: 74, column: 30, scope: !16924)
!16928 = !DILocation(line: 74, column: 28, scope: !16924)
!16929 = !DILocation(line: 74, column: 45, scope: !16924)
!16930 = !DILocation(line: 73, column: 6, scope: !16915)
!16931 = !DILocation(line: 77, column: 9, scope: !16932)
!16932 = distinct !DILexicalBlock(scope: !16924, file: !2704, line: 76, column: 9)
!16933 = !DILocation(line: 0, scope: !16924)
!16934 = !DILocation(line: 81, column: 20, scope: !16935)
!16935 = distinct !DILexicalBlock(scope: !16915, file: !2704, line: 81, column: 6)
!16936 = !DILocation(line: 81, column: 6, scope: !16935)
!16937 = !DILocation(line: 81, column: 32, scope: !16935)
!16938 = !DILocation(line: 85, column: 2, scope: !16915)
!16939 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !367, file: !367, line: 341, type: !16940, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !16942)
!16940 = !DISubroutineType(types: !16941)
!16941 = !{!16863, !16900, !16863}
!16942 = !{!16943, !16944}
!16943 = !DILocalVariable(name: "list", arg: 1, scope: !16939, file: !367, line: 341, type: !16900)
!16944 = !DILocalVariable(name: "node", arg: 2, scope: !16939, file: !367, line: 342, type: !16863)
!16945 = !DILocation(line: 0, scope: !16939)
!16946 = !DILocation(line: 344, column: 15, scope: !16939)
!16947 = !DILocation(line: 344, column: 9, scope: !16939)
!16948 = !DILocation(line: 344, column: 26, scope: !16939)
!16949 = !DILocation(line: 344, column: 2, scope: !16939)
!16950 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !367, file: !367, line: 325, type: !16940, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !16951)
!16951 = !{!16952, !16953}
!16952 = !DILocalVariable(name: "list", arg: 1, scope: !16950, file: !367, line: 325, type: !16900)
!16953 = !DILocalVariable(name: "node", arg: 2, scope: !16950, file: !367, line: 326, type: !16863)
!16954 = !DILocation(line: 0, scope: !16950)
!16955 = !DILocation(line: 328, column: 24, scope: !16950)
!16956 = !DILocation(line: 328, column: 15, scope: !16950)
!16957 = !DILocation(line: 328, column: 9, scope: !16950)
!16958 = !DILocation(line: 328, column: 45, scope: !16950)
!16959 = !DILocation(line: 328, column: 2, scope: !16950)
!16960 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !367, file: !367, line: 294, type: !16961, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !16963)
!16961 = !DISubroutineType(types: !16962)
!16962 = !{!16863, !16900}
!16963 = !{!16964}
!16964 = !DILocalVariable(name: "list", arg: 1, scope: !16960, file: !367, line: 294, type: !16900)
!16965 = !DILocation(line: 0, scope: !16960)
!16966 = !DILocation(line: 296, column: 9, scope: !16960)
!16967 = !DILocation(line: 296, column: 2, scope: !16960)
!16968 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !367, file: !367, line: 266, type: !16969, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !16971)
!16969 = !DISubroutineType(types: !16970)
!16970 = !{!422, !16900}
!16971 = !{!16972}
!16972 = !DILocalVariable(name: "list", arg: 1, scope: !16968, file: !367, line: 266, type: !16900)
!16973 = !DILocation(line: 0, scope: !16968)
!16974 = !DILocation(line: 268, column: 15, scope: !16968)
!16975 = !DILocation(line: 268, column: 20, scope: !16968)
!16976 = !DILocation(line: 268, column: 2, scope: !16968)
!16977 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2704, file: !2704, line: 150, type: !16978, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !16980)
!16978 = !DISubroutineType(types: !16979)
!16979 = !{!108, !2677}
!16980 = !{!16981, !16982, !16983, !16985}
!16981 = !DILocalVariable(name: "to", arg: 1, scope: !16977, file: !2704, line: 150, type: !2677)
!16982 = !DILocalVariable(name: "ret", scope: !16977, file: !2704, line: 152, type: !108)
!16983 = !DILocalVariable(name: "__i", scope: !16984, file: !2704, line: 154, type: !16746)
!16984 = distinct !DILexicalBlock(scope: !16977, file: !2704, line: 154, column: 2)
!16985 = !DILocalVariable(name: "__key", scope: !16984, file: !2704, line: 154, type: !16746)
!16986 = !DILocation(line: 0, scope: !16977)
!16987 = !DILocation(line: 0, scope: !16984)
!16988 = !DILocation(line: 0, scope: !16768, inlinedAt: !16989)
!16989 = distinct !DILocation(line: 154, column: 2, scope: !16984)
!16990 = !DILocation(line: 55, column: 2, scope: !16777, inlinedAt: !16991)
!16991 = distinct !DILocation(line: 145, column: 10, scope: !16768, inlinedAt: !16989)
!16992 = !DILocation(line: 0, scope: !16777, inlinedAt: !16991)
!16993 = !DILocation(line: 155, column: 7, scope: !16994)
!16994 = distinct !DILexicalBlock(scope: !16995, file: !2704, line: 155, column: 7)
!16995 = distinct !DILexicalBlock(scope: !16996, file: !2704, line: 154, column: 24)
!16996 = distinct !DILexicalBlock(scope: !16984, file: !2704, line: 154, column: 2)
!16997 = !DILocation(line: 155, column: 7, scope: !16995)
!16998 = !DILocation(line: 156, column: 4, scope: !16999)
!16999 = distinct !DILexicalBlock(scope: !16994, file: !2704, line: 155, column: 39)
!17000 = !DILocation(line: 158, column: 3, scope: !16999)
!17001 = !DILocation(line: 0, scope: !16836, inlinedAt: !17002)
!17002 = distinct !DILocation(line: 154, column: 2, scope: !16996)
!17003 = !DILocation(line: 0, scope: !16844, inlinedAt: !17004)
!17004 = distinct !DILocation(line: 215, column: 2, scope: !16836, inlinedAt: !17002)
!17005 = !DILocation(line: 95, column: 2, scope: !16844, inlinedAt: !17004)
!17006 = !DILocation(line: 161, column: 2, scope: !16977)
!17007 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !367, file: !367, line: 225, type: !17008, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !17012)
!17008 = !DISubroutineType(types: !17009)
!17009 = !{!422, !17010}
!17010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17011, size: 32)
!17011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2681)
!17012 = !{!17013}
!17013 = !DILocalVariable(name: "node", arg: 1, scope: !17007, file: !367, line: 225, type: !17010)
!17014 = !DILocation(line: 0, scope: !17007)
!17015 = !DILocation(line: 227, column: 15, scope: !17007)
!17016 = !DILocation(line: 227, column: 20, scope: !17007)
!17017 = !DILocation(line: 227, column: 2, scope: !17007)
!17018 = distinct !DISubprogram(name: "remove_timeout", scope: !2704, file: !2704, line: 53, type: !2698, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !17019)
!17019 = !{!17020}
!17020 = !DILocalVariable(name: "t", arg: 1, scope: !17018, file: !2704, line: 53, type: !2677)
!17021 = !DILocation(line: 0, scope: !17018)
!17022 = !DILocation(line: 55, column: 6, scope: !17023)
!17023 = distinct !DILexicalBlock(scope: !17018, file: !2704, line: 55, column: 6)
!17024 = !DILocation(line: 55, column: 14, scope: !17023)
!17025 = !DILocation(line: 55, column: 6, scope: !17018)
!17026 = !DILocation(line: 56, column: 25, scope: !17027)
!17027 = distinct !DILexicalBlock(scope: !17023, file: !2704, line: 55, column: 23)
!17028 = !DILocation(line: 56, column: 12, scope: !17027)
!17029 = !DILocation(line: 56, column: 19, scope: !17027)
!17030 = !DILocation(line: 57, column: 2, scope: !17027)
!17031 = !DILocation(line: 59, column: 23, scope: !17018)
!17032 = !DILocation(line: 59, column: 2, scope: !17018)
!17033 = !DILocation(line: 60, column: 1, scope: !17018)
!17034 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !367, file: !367, line: 496, type: !17035, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !17037)
!17035 = !DISubroutineType(types: !17036)
!17036 = !{null, !16863}
!17037 = !{!17038, !17039, !17040}
!17038 = !DILocalVariable(name: "node", arg: 1, scope: !17034, file: !367, line: 496, type: !16863)
!17039 = !DILocalVariable(name: "prev", scope: !17034, file: !367, line: 498, type: !16875)
!17040 = !DILocalVariable(name: "next", scope: !17034, file: !367, line: 499, type: !16875)
!17041 = !DILocation(line: 0, scope: !17034)
!17042 = !DILocation(line: 498, column: 34, scope: !17034)
!17043 = !DILocation(line: 499, column: 34, scope: !17034)
!17044 = !DILocation(line: 501, column: 8, scope: !17034)
!17045 = !DILocation(line: 501, column: 13, scope: !17034)
!17046 = !DILocation(line: 502, column: 8, scope: !17034)
!17047 = !DILocation(line: 502, column: 13, scope: !17034)
!17048 = !DILocation(line: 503, column: 2, scope: !17034)
!17049 = !DILocation(line: 504, column: 1, scope: !17034)
!17050 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !17035, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !17051)
!17051 = !{!17052}
!17052 = !DILocalVariable(name: "node", arg: 1, scope: !17050, file: !367, line: 211, type: !16863)
!17053 = !DILocation(line: 0, scope: !17050)
!17054 = !DILocation(line: 213, column: 8, scope: !17050)
!17055 = !DILocation(line: 213, column: 13, scope: !17050)
!17056 = !DILocation(line: 214, column: 8, scope: !17050)
!17057 = !DILocation(line: 214, column: 13, scope: !17050)
!17058 = !DILocation(line: 215, column: 1, scope: !17050)
!17059 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2704, file: !2704, line: 183, type: !17060, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !17064)
!17060 = !DISubroutineType(types: !17061)
!17061 = !{!109, !17062}
!17062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17063, size: 32)
!17063 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2678)
!17064 = !{!17065, !17066, !17067, !17069}
!17065 = !DILocalVariable(name: "timeout", arg: 1, scope: !17059, file: !2704, line: 183, type: !17062)
!17066 = !DILocalVariable(name: "ticks", scope: !17059, file: !2704, line: 185, type: !109)
!17067 = !DILocalVariable(name: "__i", scope: !17068, file: !2704, line: 187, type: !16746)
!17068 = distinct !DILexicalBlock(scope: !17059, file: !2704, line: 187, column: 2)
!17069 = !DILocalVariable(name: "__key", scope: !17068, file: !2704, line: 187, type: !16746)
!17070 = !DILocation(line: 0, scope: !17059)
!17071 = !DILocation(line: 0, scope: !17068)
!17072 = !DILocation(line: 0, scope: !16768, inlinedAt: !17073)
!17073 = distinct !DILocation(line: 187, column: 2, scope: !17068)
!17074 = !DILocation(line: 55, column: 2, scope: !16777, inlinedAt: !17075)
!17075 = distinct !DILocation(line: 145, column: 10, scope: !16768, inlinedAt: !17073)
!17076 = !DILocation(line: 0, scope: !16777, inlinedAt: !17075)
!17077 = !DILocation(line: 188, column: 11, scope: !17078)
!17078 = distinct !DILexicalBlock(scope: !17079, file: !2704, line: 187, column: 24)
!17079 = distinct !DILexicalBlock(scope: !17068, file: !2704, line: 187, column: 2)
!17080 = !DILocation(line: 0, scope: !16836, inlinedAt: !17081)
!17081 = distinct !DILocation(line: 187, column: 2, scope: !17079)
!17082 = !DILocation(line: 0, scope: !16844, inlinedAt: !17083)
!17083 = distinct !DILocation(line: 215, column: 2, scope: !16836, inlinedAt: !17081)
!17084 = !DILocation(line: 95, column: 2, scope: !16844, inlinedAt: !17083)
!17085 = !DILocation(line: 191, column: 2, scope: !17059)
!17086 = distinct !DISubprogram(name: "timeout_rem", scope: !2704, file: !2704, line: 165, type: !17060, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !17087)
!17087 = !{!17088, !17089, !17090}
!17088 = !DILocalVariable(name: "timeout", arg: 1, scope: !17086, file: !2704, line: 165, type: !17062)
!17089 = !DILocalVariable(name: "ticks", scope: !17086, file: !2704, line: 167, type: !109)
!17090 = !DILocalVariable(name: "t", scope: !17091, file: !2704, line: 173, type: !2677)
!17091 = distinct !DILexicalBlock(scope: !17086, file: !2704, line: 173, column: 2)
!17092 = !DILocation(line: 0, scope: !17086)
!17093 = !DILocation(line: 169, column: 6, scope: !17094)
!17094 = distinct !DILexicalBlock(scope: !17086, file: !2704, line: 169, column: 6)
!17095 = !DILocation(line: 169, column: 6, scope: !17086)
!17096 = !DILocation(line: 173, column: 28, scope: !17091)
!17097 = !DILocation(line: 0, scope: !17091)
!17098 = !DILocation(line: 173, column: 39, scope: !17099)
!17099 = distinct !DILexicalBlock(scope: !17091, file: !2704, line: 173, column: 2)
!17100 = !DILocation(line: 173, column: 2, scope: !17091)
!17101 = !DILocation(line: 174, column: 15, scope: !17102)
!17102 = distinct !DILexicalBlock(scope: !17099, file: !2704, line: 173, column: 61)
!17103 = !DILocation(line: 174, column: 9, scope: !17102)
!17104 = !DILocation(line: 175, column: 15, scope: !17105)
!17105 = distinct !DILexicalBlock(scope: !17102, file: !2704, line: 175, column: 7)
!17106 = !DILocation(line: 175, column: 7, scope: !17102)
!17107 = !DILocation(line: 173, column: 52, scope: !17099)
!17108 = distinct !{!17108, !17100, !17109}
!17109 = !DILocation(line: 178, column: 2, scope: !17091)
!17110 = !DILocation(line: 180, column: 17, scope: !17086)
!17111 = !DILocation(line: 180, column: 15, scope: !17086)
!17112 = !DILocation(line: 180, column: 2, scope: !17086)
!17113 = !DILocation(line: 181, column: 1, scope: !17086)
!17114 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14428, file: !14428, line: 35, type: !17115, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !17117)
!17115 = !DISubroutineType(types: !17116)
!17116 = !{!422, !17062}
!17117 = !{!17118}
!17118 = !DILocalVariable(name: "to", arg: 1, scope: !17114, file: !14428, line: 35, type: !17062)
!17119 = !DILocation(line: 0, scope: !17114)
!17120 = !DILocation(line: 37, column: 35, scope: !17114)
!17121 = !DILocation(line: 37, column: 10, scope: !17114)
!17122 = !DILocation(line: 37, column: 9, scope: !17114)
!17123 = !DILocation(line: 37, column: 2, scope: !17114)
!17124 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2704, file: !2704, line: 194, type: !17060, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !17125)
!17125 = !{!17126, !17127, !17128, !17130}
!17126 = !DILocalVariable(name: "timeout", arg: 1, scope: !17124, file: !2704, line: 194, type: !17062)
!17127 = !DILocalVariable(name: "ticks", scope: !17124, file: !2704, line: 196, type: !109)
!17128 = !DILocalVariable(name: "__i", scope: !17129, file: !2704, line: 198, type: !16746)
!17129 = distinct !DILexicalBlock(scope: !17124, file: !2704, line: 198, column: 2)
!17130 = !DILocalVariable(name: "__key", scope: !17129, file: !2704, line: 198, type: !16746)
!17131 = !DILocation(line: 0, scope: !17124)
!17132 = !DILocation(line: 0, scope: !17129)
!17133 = !DILocation(line: 0, scope: !16768, inlinedAt: !17134)
!17134 = distinct !DILocation(line: 198, column: 2, scope: !17129)
!17135 = !DILocation(line: 55, column: 2, scope: !16777, inlinedAt: !17136)
!17136 = distinct !DILocation(line: 145, column: 10, scope: !16768, inlinedAt: !17134)
!17137 = !DILocation(line: 0, scope: !16777, inlinedAt: !17136)
!17138 = !DILocation(line: 199, column: 11, scope: !17139)
!17139 = distinct !DILexicalBlock(scope: !17140, file: !2704, line: 198, column: 24)
!17140 = distinct !DILexicalBlock(scope: !17129, file: !2704, line: 198, column: 2)
!17141 = !DILocation(line: 199, column: 23, scope: !17139)
!17142 = !DILocation(line: 0, scope: !16836, inlinedAt: !17143)
!17143 = distinct !DILocation(line: 198, column: 2, scope: !17140)
!17144 = !DILocation(line: 0, scope: !16844, inlinedAt: !17145)
!17145 = distinct !DILocation(line: 215, column: 2, scope: !16836, inlinedAt: !17143)
!17146 = !DILocation(line: 95, column: 2, scope: !16844, inlinedAt: !17145)
!17147 = !DILocation(line: 199, column: 21, scope: !17139)
!17148 = !DILocation(line: 202, column: 2, scope: !17124)
!17149 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2704, file: !2704, line: 205, type: !16852, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !17150)
!17150 = !{!17151, !17152, !17154}
!17151 = !DILocalVariable(name: "ret", scope: !17149, file: !2704, line: 207, type: !220)
!17152 = !DILocalVariable(name: "__i", scope: !17153, file: !2704, line: 209, type: !16746)
!17153 = distinct !DILexicalBlock(scope: !17149, file: !2704, line: 209, column: 2)
!17154 = !DILocalVariable(name: "__key", scope: !17153, file: !2704, line: 209, type: !16746)
!17155 = !DILocation(line: 0, scope: !17149)
!17156 = !DILocation(line: 0, scope: !17153)
!17157 = !DILocation(line: 0, scope: !16768, inlinedAt: !17158)
!17158 = distinct !DILocation(line: 209, column: 2, scope: !17153)
!17159 = !DILocation(line: 55, column: 2, scope: !16777, inlinedAt: !17160)
!17160 = distinct !DILocation(line: 145, column: 10, scope: !16768, inlinedAt: !17158)
!17161 = !DILocation(line: 0, scope: !16777, inlinedAt: !17160)
!17162 = !DILocation(line: 210, column: 9, scope: !17163)
!17163 = distinct !DILexicalBlock(scope: !17164, file: !2704, line: 209, column: 24)
!17164 = distinct !DILexicalBlock(scope: !17153, file: !2704, line: 209, column: 2)
!17165 = !DILocation(line: 0, scope: !16836, inlinedAt: !17166)
!17166 = distinct !DILocation(line: 209, column: 2, scope: !17164)
!17167 = !DILocation(line: 0, scope: !16844, inlinedAt: !17168)
!17168 = distinct !DILocation(line: 215, column: 2, scope: !16836, inlinedAt: !17166)
!17169 = !DILocation(line: 95, column: 2, scope: !16844, inlinedAt: !17168)
!17170 = !DILocation(line: 212, column: 2, scope: !17149)
!17171 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2704, file: !2704, line: 215, type: !11984, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !17172)
!17172 = !{!17173, !17174, !17175, !17177, !17178, !17181, !17182}
!17173 = !DILocalVariable(name: "ticks", arg: 1, scope: !17171, file: !2704, line: 215, type: !220)
!17174 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17171, file: !2704, line: 215, type: !422)
!17175 = !DILocalVariable(name: "__i", scope: !17176, file: !2704, line: 217, type: !16746)
!17176 = distinct !DILexicalBlock(scope: !17171, file: !2704, line: 217, column: 2)
!17177 = !DILocalVariable(name: "__key", scope: !17176, file: !2704, line: 217, type: !16746)
!17178 = !DILocalVariable(name: "next_to", scope: !17179, file: !2704, line: 218, type: !108)
!17179 = distinct !DILexicalBlock(scope: !17180, file: !2704, line: 217, column: 24)
!17180 = distinct !DILexicalBlock(scope: !17176, file: !2704, line: 217, column: 2)
!17181 = !DILocalVariable(name: "sooner", scope: !17179, file: !2704, line: 219, type: !422)
!17182 = !DILocalVariable(name: "imminent", scope: !17179, file: !2704, line: 221, type: !422)
!17183 = !DILocation(line: 0, scope: !17171)
!17184 = !DILocation(line: 0, scope: !17176)
!17185 = !DILocation(line: 0, scope: !16768, inlinedAt: !17186)
!17186 = distinct !DILocation(line: 217, column: 2, scope: !17176)
!17187 = !DILocation(line: 55, column: 2, scope: !16777, inlinedAt: !17188)
!17188 = distinct !DILocation(line: 145, column: 10, scope: !16768, inlinedAt: !17186)
!17189 = !DILocation(line: 0, scope: !16777, inlinedAt: !17188)
!17190 = !DILocation(line: 218, column: 17, scope: !17179)
!17191 = !DILocation(line: 0, scope: !17179)
!17192 = !DILocation(line: 221, column: 27, scope: !17179)
!17193 = !DILocation(line: 233, column: 17, scope: !17194)
!17194 = distinct !DILexicalBlock(scope: !17179, file: !2704, line: 233, column: 7)
!17195 = !DILocation(line: 234, column: 26, scope: !17196)
!17196 = distinct !DILexicalBlock(scope: !17194, file: !2704, line: 233, column: 56)
!17197 = !DILocation(line: 234, column: 4, scope: !17196)
!17198 = !DILocation(line: 235, column: 3, scope: !17196)
!17199 = !DILocation(line: 0, scope: !16836, inlinedAt: !17200)
!17200 = distinct !DILocation(line: 217, column: 2, scope: !17180)
!17201 = !DILocation(line: 0, scope: !16844, inlinedAt: !17202)
!17202 = distinct !DILocation(line: 215, column: 2, scope: !16836, inlinedAt: !17200)
!17203 = !DILocation(line: 95, column: 2, scope: !16844, inlinedAt: !17202)
!17204 = !DILocation(line: 237, column: 1, scope: !17171)
!17205 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2704, file: !2704, line: 239, type: !17206, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !17208)
!17206 = !DISubroutineType(types: !17207)
!17207 = !{null, !220}
!17208 = !{!17209, !17210, !17211, !17213}
!17209 = !DILocalVariable(name: "ticks", arg: 1, scope: !17205, file: !2704, line: 239, type: !220)
!17210 = !DILocalVariable(name: "key", scope: !17205, file: !2704, line: 245, type: !16746)
!17211 = !DILocalVariable(name: "t", scope: !17212, file: !2704, line: 262, type: !2677)
!17212 = distinct !DILexicalBlock(scope: !17205, file: !2704, line: 261, column: 67)
!17213 = !DILocalVariable(name: "dt", scope: !17212, file: !2704, line: 263, type: !108)
!17214 = !DILocation(line: 0, scope: !17205)
!17215 = !DILocation(line: 242, column: 2, scope: !17205)
!17216 = !DILocation(line: 0, scope: !16768, inlinedAt: !17217)
!17217 = distinct !DILocation(line: 245, column: 25, scope: !17205)
!17218 = !DILocation(line: 55, column: 2, scope: !16777, inlinedAt: !17219)
!17219 = distinct !DILocation(line: 145, column: 10, scope: !16768, inlinedAt: !17217)
!17220 = !DILocation(line: 0, scope: !16777, inlinedAt: !17219)
!17221 = !DILocation(line: 261, column: 9, scope: !17205)
!17222 = !DILocation(line: 261, column: 17, scope: !17205)
!17223 = !DILocation(line: 261, column: 25, scope: !17205)
!17224 = !DILocation(line: 261, column: 37, scope: !17205)
!17225 = !DILocation(line: 261, column: 47, scope: !17205)
!17226 = !DILocation(line: 261, column: 44, scope: !17205)
!17227 = !DILocation(line: 261, column: 2, scope: !17205)
!17228 = !DILocation(line: 0, scope: !17212)
!17229 = !DILocation(line: 263, column: 12, scope: !17212)
!17230 = !DILocation(line: 265, column: 16, scope: !17212)
!17231 = !DILocation(line: 265, column: 13, scope: !17212)
!17232 = !DILocation(line: 266, column: 13, scope: !17212)
!17233 = !DILocation(line: 267, column: 3, scope: !17212)
!17234 = !DILocation(line: 0, scope: !16836, inlinedAt: !17235)
!17235 = distinct !DILocation(line: 269, column: 3, scope: !17212)
!17236 = !DILocation(line: 0, scope: !16844, inlinedAt: !17237)
!17237 = distinct !DILocation(line: 215, column: 2, scope: !16836, inlinedAt: !17235)
!17238 = !DILocation(line: 95, column: 2, scope: !16844, inlinedAt: !17237)
!17239 = !DILocation(line: 270, column: 6, scope: !17212)
!17240 = !DILocation(line: 270, column: 3, scope: !17212)
!17241 = !DILocation(line: 0, scope: !16768, inlinedAt: !17242)
!17242 = distinct !DILocation(line: 271, column: 9, scope: !17212)
!17243 = !DILocation(line: 55, column: 2, scope: !16777, inlinedAt: !17244)
!17244 = distinct !DILocation(line: 145, column: 10, scope: !16768, inlinedAt: !17242)
!17245 = !DILocation(line: 0, scope: !16777, inlinedAt: !17244)
!17246 = !DILocation(line: 272, column: 22, scope: !17212)
!17247 = distinct !{!17247, !17227, !17248}
!17248 = !DILocation(line: 273, column: 2, scope: !17205)
!17249 = !DILocation(line: 276, column: 19, scope: !17250)
!17250 = distinct !DILexicalBlock(scope: !17251, file: !2704, line: 275, column: 23)
!17251 = distinct !DILexicalBlock(scope: !17205, file: !2704, line: 275, column: 6)
!17252 = !DILocation(line: 277, column: 2, scope: !17250)
!17253 = !DILocation(line: 279, column: 15, scope: !17205)
!17254 = !DILocation(line: 279, column: 12, scope: !17205)
!17255 = !DILocation(line: 280, column: 21, scope: !17205)
!17256 = !DILocation(line: 282, column: 24, scope: !17205)
!17257 = !DILocation(line: 282, column: 2, scope: !17205)
!17258 = !DILocation(line: 0, scope: !16836, inlinedAt: !17259)
!17259 = distinct !DILocation(line: 284, column: 2, scope: !17205)
!17260 = !DILocation(line: 0, scope: !16844, inlinedAt: !17261)
!17261 = distinct !DILocation(line: 215, column: 2, scope: !16836, inlinedAt: !17259)
!17262 = !DILocation(line: 95, column: 2, scope: !16844, inlinedAt: !17261)
!17263 = !DILocation(line: 285, column: 1, scope: !17205)
!17264 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2704, file: !2704, line: 287, type: !17265, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !17267)
!17265 = !DISubroutineType(types: !17266)
!17266 = !{!111}
!17267 = !{!17268, !17269, !17271}
!17268 = !DILocalVariable(name: "t", scope: !17264, file: !2704, line: 289, type: !114)
!17269 = !DILocalVariable(name: "__i", scope: !17270, file: !2704, line: 291, type: !16746)
!17270 = distinct !DILexicalBlock(scope: !17264, file: !2704, line: 291, column: 2)
!17271 = !DILocalVariable(name: "__key", scope: !17270, file: !2704, line: 291, type: !16746)
!17272 = !DILocation(line: 0, scope: !17264)
!17273 = !DILocation(line: 0, scope: !17270)
!17274 = !DILocation(line: 0, scope: !16768, inlinedAt: !17275)
!17275 = distinct !DILocation(line: 291, column: 2, scope: !17270)
!17276 = !DILocation(line: 55, column: 2, scope: !16777, inlinedAt: !17277)
!17277 = distinct !DILocation(line: 145, column: 10, scope: !16768, inlinedAt: !17275)
!17278 = !DILocation(line: 0, scope: !16777, inlinedAt: !17277)
!17279 = !DILocation(line: 292, column: 7, scope: !17280)
!17280 = distinct !DILexicalBlock(scope: !17281, file: !2704, line: 291, column: 24)
!17281 = distinct !DILexicalBlock(scope: !17270, file: !2704, line: 291, column: 2)
!17282 = !DILocation(line: 292, column: 19, scope: !17280)
!17283 = !DILocation(line: 0, scope: !16836, inlinedAt: !17284)
!17284 = distinct !DILocation(line: 291, column: 2, scope: !17281)
!17285 = !DILocation(line: 0, scope: !16844, inlinedAt: !17286)
!17286 = distinct !DILocation(line: 215, column: 2, scope: !16836, inlinedAt: !17284)
!17287 = !DILocation(line: 95, column: 2, scope: !16844, inlinedAt: !17286)
!17288 = !DILocation(line: 292, column: 17, scope: !17280)
!17289 = !DILocation(line: 294, column: 2, scope: !17264)
!17290 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2704, file: !2704, line: 297, type: !7144, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !437)
!17291 = !DILocation(line: 300, column: 19, scope: !17290)
!17292 = !DILocation(line: 300, column: 9, scope: !17290)
!17293 = !DILocation(line: 300, column: 2, scope: !17290)
!17294 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2704, file: !2704, line: 306, type: !17265, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !437)
!17295 = !DILocation(line: 308, column: 9, scope: !17294)
!17296 = !DILocation(line: 308, column: 2, scope: !17294)
!17297 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2704, file: !2704, line: 319, type: !7154, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !17298)
!17298 = !{!17299, !17300, !17301, !17302}
!17299 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17297, file: !2704, line: 319, type: !113)
!17300 = !DILocalVariable(name: "start_cycles", scope: !17297, file: !2704, line: 328, type: !113)
!17301 = !DILocalVariable(name: "cycles_to_wait", scope: !17297, file: !2704, line: 331, type: !113)
!17302 = !DILocalVariable(name: "current_cycles", scope: !17303, file: !2704, line: 338, type: !113)
!17303 = distinct !DILexicalBlock(scope: !17304, file: !2704, line: 337, column: 11)
!17304 = distinct !DILexicalBlock(scope: !17305, file: !2704, line: 337, column: 2)
!17305 = distinct !DILexicalBlock(scope: !17297, file: !2704, line: 337, column: 2)
!17306 = !DILocation(line: 0, scope: !17297)
!17307 = !DILocation(line: 322, column: 19, scope: !17308)
!17308 = distinct !DILexicalBlock(scope: !17297, file: !2704, line: 322, column: 6)
!17309 = !DILocation(line: 322, column: 6, scope: !17297)
!17310 = !DILocation(line: 328, column: 26, scope: !17297)
!17311 = !DILocation(line: 333, column: 43, scope: !17297)
!17312 = !DILocation(line: 337, column: 2, scope: !17297)
!17313 = !DILocation(line: 338, column: 29, scope: !17303)
!17314 = !DILocation(line: 0, scope: !17303)
!17315 = !DILocation(line: 341, column: 23, scope: !17316)
!17316 = distinct !DILexicalBlock(scope: !17303, file: !2704, line: 341, column: 7)
!17317 = !DILocation(line: 341, column: 39, scope: !17316)
!17318 = !DILocation(line: 349, column: 1, scope: !17297)
!17319 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !359, file: !359, line: 1675, type: !7144, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !437)
!17320 = !DILocation(line: 1677, column: 9, scope: !17319)
!17321 = !DILocation(line: 1677, column: 2, scope: !17319)
!17322 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17323, file: !17323, line: 24, type: !7144, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !437)
!17323 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17324 = !DILocation(line: 26, column: 9, scope: !17322)
!17325 = !DILocation(line: 26, column: 2, scope: !17322)
!17326 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2704, file: !2704, line: 364, type: !17327, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !17329)
!17327 = !DISubroutineType(types: !17328)
!17328 = !{!114, !16736}
!17329 = !{!17330, !17331}
!17330 = !DILocalVariable(name: "timeout", arg: 1, scope: !17326, file: !2704, line: 364, type: !16736)
!17331 = !DILocalVariable(name: "dt", scope: !17326, file: !2704, line: 366, type: !109)
!17332 = !DILocation(line: 0, scope: !17326)
!17333 = !DILocation(line: 368, column: 6, scope: !17326)
!17334 = !DILocation(line: 371, column: 10, scope: !17335)
!17335 = distinct !DILexicalBlock(scope: !17336, file: !2704, line: 370, column: 47)
!17336 = distinct !DILexicalBlock(scope: !17337, file: !2704, line: 370, column: 13)
!17337 = distinct !DILexicalBlock(scope: !17326, file: !2704, line: 368, column: 6)
!17338 = !DILocation(line: 371, column: 3, scope: !17335)
!17339 = !DILocation(line: 376, column: 58, scope: !17340)
!17340 = distinct !DILexicalBlock(scope: !17341, file: !2704, line: 376, column: 7)
!17341 = distinct !DILexicalBlock(scope: !17336, file: !2704, line: 372, column: 9)
!17342 = !DILocation(line: 376, column: 7, scope: !17341)
!17343 = !DILocation(line: 376, column: 43, scope: !17340)
!17344 = !DILocation(line: 377, column: 4, scope: !17345)
!17345 = distinct !DILexicalBlock(scope: !17340, file: !2704, line: 376, column: 64)
!17346 = !DILocation(line: 379, column: 10, scope: !17341)
!17347 = !DILocation(line: 379, column: 33, scope: !17341)
!17348 = !DILocation(line: 379, column: 31, scope: !17341)
!17349 = !DILocation(line: 379, column: 3, scope: !17341)
!17350 = !DILocation(line: 0, scope: !17337)
!17351 = !DILocation(line: 381, column: 1, scope: !17326)
!17352 = distinct !DISubprogram(name: "z_timer_expiration_handler", scope: !2835, file: !2835, line: 23, type: !2740, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !17353)
!17353 = !{!17354, !17355, !17356, !17357, !17362}
!17354 = !DILocalVariable(name: "t", arg: 1, scope: !17352, file: !2835, line: 23, type: !2742)
!17355 = !DILocalVariable(name: "timer", scope: !17352, file: !2835, line: 25, type: !2716)
!17356 = !DILocalVariable(name: "thread", scope: !17352, file: !2835, line: 26, type: !2762)
!17357 = !DILocalVariable(name: "key", scope: !17352, file: !2835, line: 27, type: !17358)
!17358 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !17359)
!17359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !17360)
!17360 = !{!17361}
!17361 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17359, file: !436, line: 33, baseType: !108, size: 32)
!17362 = !DILocalVariable(name: "next", scope: !17363, file: !2835, line: 35, type: !2756)
!17363 = distinct !DILexicalBlock(scope: !17364, file: !2835, line: 34, column: 47)
!17364 = distinct !DILexicalBlock(scope: !17352, file: !2835, line: 33, column: 6)
!17365 = !DILocation(line: 0, scope: !17352)
!17366 = !DILocation(line: 25, column: 26, scope: !17352)
!17367 = !DILocalVariable(name: "l", arg: 1, scope: !17368, file: !436, line: 136, type: !17371)
!17368 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !17369, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !17372)
!17369 = !DISubroutineType(types: !17370)
!17370 = !{!17358, !17371}
!17371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2827, size: 32)
!17372 = !{!17367, !17373}
!17373 = !DILocalVariable(name: "k", scope: !17368, file: !436, line: 139, type: !17358)
!17374 = !DILocation(line: 0, scope: !17368, inlinedAt: !17375)
!17375 = distinct !DILocation(line: 27, column: 25, scope: !17352)
!17376 = !DILocation(line: 55, column: 2, scope: !17377, inlinedAt: !17381)
!17377 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4087, file: !4087, line: 42, type: !4088, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !17378)
!17378 = !{!17379, !17380}
!17379 = !DILocalVariable(name: "key", scope: !17377, file: !4087, line: 44, type: !32)
!17380 = !DILocalVariable(name: "tmp", scope: !17377, file: !4087, line: 53, type: !32)
!17381 = distinct !DILocation(line: 145, column: 10, scope: !17368, inlinedAt: !17375)
!17382 = !{i64 2244321}
!17383 = !DILocation(line: 0, scope: !17377, inlinedAt: !17381)
!17384 = !DILocation(line: 33, column: 7, scope: !17364)
!17385 = !DILocation(line: 33, column: 46, scope: !17364)
!17386 = !DILocation(line: 0, scope: !17363)
!17387 = !DILocation(line: 49, column: 10, scope: !17363)
!17388 = !DILocation(line: 52, column: 3, scope: !17363)
!17389 = !DILocation(line: 54, column: 2, scope: !17363)
!17390 = !DILocation(line: 57, column: 9, scope: !17352)
!17391 = !DILocation(line: 57, column: 16, scope: !17352)
!17392 = !DILocation(line: 60, column: 13, scope: !17393)
!17393 = distinct !DILexicalBlock(scope: !17352, file: !2835, line: 60, column: 6)
!17394 = !DILocation(line: 60, column: 23, scope: !17393)
!17395 = !DILocation(line: 60, column: 6, scope: !17352)
!17396 = !DILocalVariable(name: "key", arg: 2, scope: !17397, file: !436, line: 190, type: !17358)
!17397 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !17398, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !17400)
!17398 = !DISubroutineType(types: !17399)
!17399 = !{null, !17371, !17358}
!17400 = !{!17401, !17396}
!17401 = !DILocalVariable(name: "l", arg: 1, scope: !17397, file: !436, line: 189, type: !17371)
!17402 = !DILocation(line: 0, scope: !17397, inlinedAt: !17403)
!17403 = distinct !DILocation(line: 62, column: 3, scope: !17404)
!17404 = distinct !DILexicalBlock(scope: !17393, file: !2835, line: 60, column: 32)
!17405 = !DILocalVariable(name: "key", arg: 1, scope: !17406, file: !4087, line: 84, type: !32)
!17406 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4087, file: !4087, line: 84, type: !4100, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !17407)
!17407 = !{!17405}
!17408 = !DILocation(line: 0, scope: !17406, inlinedAt: !17409)
!17409 = distinct !DILocation(line: 215, column: 2, scope: !17397, inlinedAt: !17403)
!17410 = !DILocation(line: 95, column: 2, scope: !17406, inlinedAt: !17409)
!17411 = !{i64 2245138}
!17412 = !DILocation(line: 63, column: 10, scope: !17404)
!17413 = !DILocation(line: 63, column: 3, scope: !17404)
!17414 = !DILocation(line: 0, scope: !17368, inlinedAt: !17415)
!17415 = distinct !DILocation(line: 64, column: 9, scope: !17404)
!17416 = !DILocation(line: 55, column: 2, scope: !17377, inlinedAt: !17417)
!17417 = distinct !DILocation(line: 145, column: 10, scope: !17368, inlinedAt: !17415)
!17418 = !DILocation(line: 0, scope: !17377, inlinedAt: !17417)
!17419 = !DILocation(line: 65, column: 2, scope: !17404)
!17420 = !DILocation(line: 72, column: 32, scope: !17352)
!17421 = !DILocation(line: 72, column: 11, scope: !17352)
!17422 = !DILocation(line: 74, column: 13, scope: !17423)
!17423 = distinct !DILexicalBlock(scope: !17352, file: !2835, line: 74, column: 6)
!17424 = !DILocation(line: 74, column: 6, scope: !17352)
!17425 = !DILocation(line: 0, scope: !17397, inlinedAt: !17426)
!17426 = distinct !DILocation(line: 75, column: 3, scope: !17427)
!17427 = distinct !DILexicalBlock(scope: !17423, file: !2835, line: 74, column: 22)
!17428 = !DILocation(line: 0, scope: !17406, inlinedAt: !17429)
!17429 = distinct !DILocation(line: 215, column: 2, scope: !17397, inlinedAt: !17426)
!17430 = !DILocation(line: 95, column: 2, scope: !17406, inlinedAt: !17429)
!17431 = !DILocation(line: 76, column: 3, scope: !17427)
!17432 = !DILocation(line: 79, column: 2, scope: !17352)
!17433 = !DILocalVariable(name: "thread", arg: 1, scope: !17434, file: !14054, line: 65, type: !2762)
!17434 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14054, file: !14054, line: 65, type: !17435, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !17437)
!17435 = !DISubroutineType(types: !17436)
!17436 = !{null, !2762, !32}
!17437 = !{!17433, !17438}
!17438 = !DILocalVariable(name: "value", arg: 2, scope: !17434, file: !14054, line: 65, type: !32)
!17439 = !DILocation(line: 0, scope: !17434, inlinedAt: !17440)
!17440 = distinct !DILocation(line: 81, column: 2, scope: !17352)
!17441 = !DILocation(line: 67, column: 15, scope: !17434, inlinedAt: !17440)
!17442 = !DILocation(line: 67, column: 33, scope: !17434, inlinedAt: !17440)
!17443 = !DILocation(line: 0, scope: !17397, inlinedAt: !17444)
!17444 = distinct !DILocation(line: 83, column: 2, scope: !17352)
!17445 = !DILocation(line: 0, scope: !17406, inlinedAt: !17446)
!17446 = distinct !DILocation(line: 215, column: 2, scope: !17397, inlinedAt: !17444)
!17447 = !DILocation(line: 95, column: 2, scope: !17406, inlinedAt: !17446)
!17448 = !DILocation(line: 85, column: 2, scope: !17352)
!17449 = !DILocation(line: 86, column: 1, scope: !17352)
!17450 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !3809, file: !3809, line: 564, type: !17265, scopeLine: 565, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !437)
!17451 = !DILocation(line: 573, column: 2, scope: !17452)
!17452 = distinct !DILexicalBlock(scope: !17450, file: !3809, line: 573, column: 2)
!17453 = !{i64 2154863579}
!17454 = !DILocation(line: 574, column: 9, scope: !17450)
!17455 = !DILocation(line: 574, column: 2, scope: !17450)
!17456 = distinct !DISubprogram(name: "z_waitq_head", scope: !14360, file: !14360, line: 52, type: !17457, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !17459)
!17457 = !DISubroutineType(types: !17458)
!17458 = !{!2762, !2779}
!17459 = !{!17460}
!17460 = !DILocalVariable(name: "w", arg: 1, scope: !17456, file: !14360, line: 52, type: !2779)
!17461 = !DILocation(line: 0, scope: !17456)
!17462 = !DILocation(line: 54, column: 52, scope: !17456)
!17463 = !DILocation(line: 54, column: 28, scope: !17456)
!17464 = !DILocation(line: 54, column: 9, scope: !17456)
!17465 = !DILocation(line: 54, column: 2, scope: !17456)
!17466 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !367, file: !367, line: 294, type: !17467, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !17470)
!17467 = !DISubroutineType(types: !17468)
!17468 = !{!2833, !17469}
!17469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2749, size: 32)
!17470 = !{!17471}
!17471 = !DILocalVariable(name: "list", arg: 1, scope: !17466, file: !367, line: 294, type: !17469)
!17472 = !DILocation(line: 0, scope: !17466)
!17473 = !DILocation(line: 296, column: 9, scope: !17466)
!17474 = !DILocation(line: 296, column: 49, scope: !17466)
!17475 = !DILocation(line: 296, column: 2, scope: !17466)
!17476 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !367, file: !367, line: 266, type: !17477, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !17479)
!17477 = !DISubroutineType(types: !17478)
!17478 = !{!422, !17469}
!17479 = !{!17480}
!17480 = !DILocalVariable(name: "list", arg: 1, scope: !17476, file: !367, line: 266, type: !17469)
!17481 = !DILocation(line: 0, scope: !17476)
!17482 = !DILocation(line: 268, column: 15, scope: !17476)
!17483 = !DILocation(line: 268, column: 20, scope: !17476)
!17484 = !DILocation(line: 268, column: 2, scope: !17476)
!17485 = distinct !DISubprogram(name: "k_timer_init", scope: !2835, file: !2835, line: 89, type: !17486, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !17490)
!17486 = !DISubroutineType(types: !17487)
!17487 = !{null, !2716, !17488, !17489}
!17488 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timer_expiry_t", file: !359, line: 1381, baseType: !2751)
!17489 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timer_stop_t", file: !359, line: 1397, baseType: !2751)
!17490 = !{!17491, !17492, !17493}
!17491 = !DILocalVariable(name: "timer", arg: 1, scope: !17485, file: !2835, line: 89, type: !2716)
!17492 = !DILocalVariable(name: "expiry_fn", arg: 2, scope: !17485, file: !2835, line: 90, type: !17488)
!17493 = !DILocalVariable(name: "stop_fn", arg: 3, scope: !17485, file: !2835, line: 91, type: !17489)
!17494 = !DILocation(line: 0, scope: !17485)
!17495 = !DILocation(line: 93, column: 9, scope: !17485)
!17496 = !DILocation(line: 93, column: 19, scope: !17485)
!17497 = !DILocation(line: 94, column: 9, scope: !17485)
!17498 = !DILocation(line: 94, column: 17, scope: !17485)
!17499 = !DILocation(line: 95, column: 9, scope: !17485)
!17500 = !DILocation(line: 95, column: 16, scope: !17485)
!17501 = !DILocation(line: 98, column: 24, scope: !17502)
!17502 = distinct !DILexicalBlock(scope: !17503, file: !2835, line: 97, column: 41)
!17503 = distinct !DILexicalBlock(scope: !17485, file: !2835, line: 97, column: 6)
!17504 = !DILocation(line: 98, column: 3, scope: !17502)
!17505 = !DILocation(line: 101, column: 25, scope: !17485)
!17506 = !DILocation(line: 101, column: 2, scope: !17485)
!17507 = !DILocation(line: 105, column: 9, scope: !17485)
!17508 = !DILocation(line: 105, column: 19, scope: !17485)
!17509 = !DILocation(line: 108, column: 1, scope: !17485)
!17510 = distinct !DISubprogram(name: "z_waitq_init", scope: !14360, file: !14360, line: 47, type: !17511, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !17513)
!17511 = !DISubroutineType(types: !17512)
!17512 = !{null, !2779}
!17513 = !{!17514}
!17514 = !DILocalVariable(name: "w", arg: 1, scope: !17510, file: !14360, line: 47, type: !2779)
!17515 = !DILocation(line: 0, scope: !17510)
!17516 = !DILocation(line: 49, column: 21, scope: !17510)
!17517 = !DILocation(line: 49, column: 2, scope: !17510)
!17518 = !DILocation(line: 50, column: 1, scope: !17510)
!17519 = distinct !DISubprogram(name: "z_init_timeout", scope: !14428, file: !14428, line: 25, type: !2740, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !17520)
!17520 = !{!17521}
!17521 = !DILocalVariable(name: "to", arg: 1, scope: !17519, file: !14428, line: 25, type: !2742)
!17522 = !DILocation(line: 0, scope: !17519)
!17523 = !DILocation(line: 27, column: 22, scope: !17519)
!17524 = !DILocation(line: 27, column: 2, scope: !17519)
!17525 = !DILocation(line: 28, column: 1, scope: !17519)
!17526 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !17527, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !17529)
!17527 = !DISubroutineType(types: !17528)
!17528 = !{null, !2833}
!17529 = !{!17530}
!17530 = !DILocalVariable(name: "node", arg: 1, scope: !17526, file: !367, line: 211, type: !2833)
!17531 = !DILocation(line: 0, scope: !17526)
!17532 = !DILocation(line: 213, column: 8, scope: !17526)
!17533 = !DILocation(line: 213, column: 13, scope: !17526)
!17534 = !DILocation(line: 214, column: 8, scope: !17526)
!17535 = !DILocation(line: 214, column: 13, scope: !17526)
!17536 = !DILocation(line: 215, column: 1, scope: !17526)
!17537 = distinct !DISubprogram(name: "sys_dlist_init", scope: !367, file: !367, line: 197, type: !17538, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !17540)
!17538 = !DISubroutineType(types: !17539)
!17539 = !{null, !17469}
!17540 = !{!17541}
!17541 = !DILocalVariable(name: "list", arg: 1, scope: !17537, file: !367, line: 197, type: !17469)
!17542 = !DILocation(line: 0, scope: !17537)
!17543 = !DILocation(line: 199, column: 8, scope: !17537)
!17544 = !DILocation(line: 199, column: 13, scope: !17537)
!17545 = !DILocation(line: 200, column: 8, scope: !17537)
!17546 = !DILocation(line: 200, column: 13, scope: !17537)
!17547 = !DILocation(line: 201, column: 1, scope: !17537)
!17548 = distinct !DISubprogram(name: "z_impl_k_timer_start", scope: !2835, file: !2835, line: 111, type: !17549, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !17551)
!17549 = !DISubroutineType(types: !17550)
!17550 = !{null, !2716, !2756, !2756}
!17551 = !{!17552, !17553, !17554}
!17552 = !DILocalVariable(name: "timer", arg: 1, scope: !17548, file: !2835, line: 111, type: !2716)
!17553 = !DILocalVariable(name: "duration", arg: 2, scope: !17548, file: !2835, line: 111, type: !2756)
!17554 = !DILocalVariable(name: "period", arg: 3, scope: !17548, file: !2835, line: 112, type: !2756)
!17555 = !DILocation(line: 0, scope: !17548)
!17556 = !DILocation(line: 116, column: 6, scope: !17557)
!17557 = distinct !DILexicalBlock(scope: !17548, file: !2835, line: 116, column: 6)
!17558 = !DILocation(line: 116, column: 6, scope: !17548)
!17559 = !DILocation(line: 133, column: 39, scope: !17560)
!17560 = distinct !DILexicalBlock(scope: !17548, file: !2835, line: 133, column: 6)
!17561 = !DILocation(line: 137, column: 33, scope: !17562)
!17562 = distinct !DILexicalBlock(scope: !17548, file: !2835, line: 137, column: 6)
!17563 = !DILocation(line: 137, column: 6, scope: !17548)
!17564 = !DILocation(line: 141, column: 32, scope: !17548)
!17565 = !DILocation(line: 141, column: 8, scope: !17548)
!17566 = !DILocation(line: 142, column: 18, scope: !17548)
!17567 = !DILocation(line: 143, column: 9, scope: !17548)
!17568 = !DILocation(line: 143, column: 16, scope: !17548)
!17569 = !DILocation(line: 145, column: 2, scope: !17548)
!17570 = !DILocation(line: 147, column: 1, scope: !17548)
!17571 = distinct !DISubprogram(name: "z_impl_k_timer_stop", scope: !2835, file: !2835, line: 160, type: !2752, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !17572)
!17572 = !{!17573, !17574, !17575}
!17573 = !DILocalVariable(name: "timer", arg: 1, scope: !17571, file: !2835, line: 160, type: !2716)
!17574 = !DILocalVariable(name: "inactive", scope: !17571, file: !2835, line: 164, type: !422)
!17575 = !DILocalVariable(name: "pending_thread", scope: !17576, file: !2835, line: 175, type: !2762)
!17576 = distinct !DILexicalBlock(scope: !17577, file: !2835, line: 174, column: 41)
!17577 = distinct !DILexicalBlock(scope: !17571, file: !2835, line: 174, column: 6)
!17578 = !DILocation(line: 0, scope: !17571)
!17579 = !DILocation(line: 164, column: 43, scope: !17571)
!17580 = !DILocation(line: 164, column: 19, scope: !17571)
!17581 = !DILocation(line: 164, column: 52, scope: !17571)
!17582 = !DILocation(line: 166, column: 6, scope: !17571)
!17583 = !DILocation(line: 170, column: 13, scope: !17584)
!17584 = distinct !DILexicalBlock(scope: !17571, file: !2835, line: 170, column: 6)
!17585 = !DILocation(line: 170, column: 21, scope: !17584)
!17586 = !DILocation(line: 170, column: 6, scope: !17571)
!17587 = !DILocation(line: 171, column: 3, scope: !17588)
!17588 = distinct !DILexicalBlock(scope: !17584, file: !2835, line: 170, column: 30)
!17589 = !DILocation(line: 172, column: 2, scope: !17588)
!17590 = !DILocation(line: 175, column: 66, scope: !17576)
!17591 = !DILocation(line: 175, column: 37, scope: !17576)
!17592 = !DILocation(line: 0, scope: !17576)
!17593 = !DILocation(line: 177, column: 22, scope: !17594)
!17594 = distinct !DILexicalBlock(scope: !17576, file: !2835, line: 177, column: 7)
!17595 = !DILocation(line: 177, column: 7, scope: !17576)
!17596 = !DILocation(line: 178, column: 4, scope: !17597)
!17597 = distinct !DILexicalBlock(scope: !17594, file: !2835, line: 177, column: 31)
!17598 = !DILocation(line: 179, column: 4, scope: !17597)
!17599 = !DILocation(line: 180, column: 3, scope: !17597)
!17600 = !DILocation(line: 182, column: 1, scope: !17571)
!17601 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14034, file: !14034, line: 73, type: !3413, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !437)
!17602 = !DILocation(line: 55, column: 2, scope: !17377, inlinedAt: !17603)
!17603 = distinct !DILocation(line: 75, column: 30, scope: !17601)
!17604 = !DILocation(line: 0, scope: !17377, inlinedAt: !17603)
!17605 = !DILocation(line: 75, column: 9, scope: !17601)
!17606 = !DILocation(line: 76, column: 1, scope: !17601)
!17607 = distinct !DISubprogram(name: "z_impl_k_timer_status_get", scope: !2835, file: !2835, line: 193, type: !17608, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !17610)
!17608 = !DISubroutineType(types: !17609)
!17609 = !{!113, !2716}
!17610 = !{!17611, !17612, !17613}
!17611 = !DILocalVariable(name: "timer", arg: 1, scope: !17607, file: !2835, line: 193, type: !2716)
!17612 = !DILocalVariable(name: "key", scope: !17607, file: !2835, line: 195, type: !17358)
!17613 = !DILocalVariable(name: "result", scope: !17607, file: !2835, line: 196, type: !113)
!17614 = !DILocation(line: 0, scope: !17607)
!17615 = !DILocation(line: 0, scope: !17368, inlinedAt: !17616)
!17616 = distinct !DILocation(line: 195, column: 25, scope: !17607)
!17617 = !DILocation(line: 55, column: 2, scope: !17377, inlinedAt: !17618)
!17618 = distinct !DILocation(line: 145, column: 10, scope: !17368, inlinedAt: !17616)
!17619 = !DILocation(line: 0, scope: !17377, inlinedAt: !17618)
!17620 = !DILocation(line: 196, column: 27, scope: !17607)
!17621 = !DILocation(line: 198, column: 16, scope: !17607)
!17622 = !DILocation(line: 0, scope: !17397, inlinedAt: !17623)
!17623 = distinct !DILocation(line: 199, column: 2, scope: !17607)
!17624 = !DILocation(line: 0, scope: !17406, inlinedAt: !17625)
!17625 = distinct !DILocation(line: 215, column: 2, scope: !17397, inlinedAt: !17623)
!17626 = !DILocation(line: 95, column: 2, scope: !17406, inlinedAt: !17625)
!17627 = !DILocation(line: 201, column: 2, scope: !17607)
!17628 = distinct !DISubprogram(name: "z_impl_k_timer_status_sync", scope: !2835, file: !2835, line: 213, type: !17608, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !17629)
!17629 = !{!17630, !17631, !17632}
!17630 = !DILocalVariable(name: "timer", arg: 1, scope: !17628, file: !2835, line: 213, type: !2716)
!17631 = !DILocalVariable(name: "key", scope: !17628, file: !2835, line: 241, type: !17358)
!17632 = !DILocalVariable(name: "result", scope: !17628, file: !2835, line: 242, type: !113)
!17633 = !DILocation(line: 0, scope: !17628)
!17634 = !DILocation(line: 0, scope: !17368, inlinedAt: !17635)
!17635 = distinct !DILocation(line: 241, column: 25, scope: !17628)
!17636 = !DILocation(line: 55, column: 2, scope: !17377, inlinedAt: !17637)
!17637 = distinct !DILocation(line: 145, column: 10, scope: !17368, inlinedAt: !17635)
!17638 = !DILocation(line: 0, scope: !17377, inlinedAt: !17637)
!17639 = !DILocation(line: 242, column: 27, scope: !17628)
!17640 = !DILocation(line: 244, column: 13, scope: !17641)
!17641 = distinct !DILexicalBlock(scope: !17628, file: !2835, line: 244, column: 6)
!17642 = !DILocation(line: 244, column: 6, scope: !17628)
!17643 = !DILocation(line: 245, column: 38, scope: !17644)
!17644 = distinct !DILexicalBlock(scope: !17645, file: !2835, line: 245, column: 7)
!17645 = distinct !DILexicalBlock(scope: !17641, file: !2835, line: 244, column: 20)
!17646 = !DILocation(line: 245, column: 8, scope: !17644)
!17647 = !DILocation(line: 245, column: 7, scope: !17645)
!17648 = !DILocation(line: 249, column: 42, scope: !17649)
!17649 = distinct !DILexicalBlock(scope: !17644, file: !2835, line: 245, column: 48)
!17650 = !DILocation(line: 249, column: 10, scope: !17649)
!17651 = !DILocation(line: 0, scope: !17368, inlinedAt: !17652)
!17652 = distinct !DILocation(line: 252, column: 10, scope: !17649)
!17653 = !DILocation(line: 55, column: 2, scope: !17377, inlinedAt: !17654)
!17654 = distinct !DILocation(line: 145, column: 10, scope: !17368, inlinedAt: !17652)
!17655 = !DILocation(line: 0, scope: !17377, inlinedAt: !17654)
!17656 = !DILocation(line: 253, column: 20, scope: !17649)
!17657 = !DILocation(line: 254, column: 3, scope: !17649)
!17658 = !DILocation(line: 261, column: 16, scope: !17628)
!17659 = !DILocation(line: 0, scope: !17397, inlinedAt: !17660)
!17660 = distinct !DILocation(line: 262, column: 2, scope: !17628)
!17661 = !DILocation(line: 0, scope: !17406, inlinedAt: !17662)
!17662 = distinct !DILocation(line: 215, column: 2, scope: !17397, inlinedAt: !17660)
!17663 = !DILocation(line: 95, column: 2, scope: !17406, inlinedAt: !17662)
!17664 = !DILocation(line: 269, column: 2, scope: !17628)
!17665 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14428, file: !14428, line: 35, type: !17666, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !17670)
!17666 = !DISubroutineType(types: !17667)
!17667 = !{!422, !17668}
!17668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17669, size: 32)
!17669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2720)
!17670 = !{!17671}
!17671 = !DILocalVariable(name: "to", arg: 1, scope: !17665, file: !14428, line: 35, type: !17668)
!17672 = !DILocation(line: 0, scope: !17665)
!17673 = !DILocation(line: 37, column: 35, scope: !17665)
!17674 = !DILocation(line: 37, column: 10, scope: !17665)
!17675 = !DILocation(line: 37, column: 9, scope: !17665)
!17676 = !DILocation(line: 37, column: 2, scope: !17665)
!17677 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !367, file: !367, line: 225, type: !17678, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !17682)
!17678 = !DISubroutineType(types: !17679)
!17679 = !{!422, !17680}
!17680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17681, size: 32)
!17681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2723)
!17682 = !{!17683}
!17683 = !DILocalVariable(name: "node", arg: 1, scope: !17677, file: !367, line: 225, type: !17680)
!17684 = !DILocation(line: 0, scope: !17677)
!17685 = !DILocation(line: 227, column: 15, scope: !17677)
!17686 = !DILocation(line: 227, column: 20, scope: !17677)
!17687 = !DILocation(line: 227, column: 2, scope: !17677)
!17688 = distinct !DISubprogram(name: "boot_banner", scope: !17689, file: !17689, line: 26, type: !3413, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3399, retainedNodes: !437)
!17689 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17690 = !DILocation(line: 34, column: 2, scope: !17688)
!17691 = !DILocation(line: 36, column: 1, scope: !17688)
