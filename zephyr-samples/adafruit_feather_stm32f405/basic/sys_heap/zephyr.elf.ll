; ModuleID = 'build/adafruit_feather_stm32f405/basic/sys_heap/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, i32, i32, i32, [0 x %struct.z_heap_bucket] }
%struct.z_heap_bucket = type { i32 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct.sys_memory_stats, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct.sys_memory_stats = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.z_heap_stress_result = type { i32, i32, i32, i64 }
%struct.z_heap_stress_rec = type { i8* (i8*, i32)*, void (i8*, i8*)*, i8*, i32, %struct.z_heap_stress_block*, i32, i32, i32, i32 }
%struct.z_heap_stress_block = type { i8*, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [82 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [82 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231376 to i8*), void (i8*)* inttoptr (i32 134229519 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231376 to i8*), void (i8*)* inttoptr (i32 134229499 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231376 to i8*), void (i8*)* inttoptr (i32 134229489 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231376 to i8*), void (i8*)* inttoptr (i32 134229589 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231376 to i8*), void (i8*)* inttoptr (i32 134229579 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231376 to i8*), void (i8*)* inttoptr (i32 134229569 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231376 to i8*), void (i8*)* inttoptr (i32 134229559 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231376 to i8*), void (i8*)* inttoptr (i32 134229549 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231376 to i8*), void (i8*)* inttoptr (i32 134229539 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231376 to i8*), void (i8*)* inttoptr (i32 134229529 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231376 to i8*), void (i8*)* inttoptr (i32 134229509 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [21 x i8] c"System heap sample\0A\0A\00", align 1
@heap = internal global %struct.sys_heap zeroinitializer, align 4, !dbg !25
@heap_mem = internal global [256 x i8] zeroinitializer, align 1, !dbg !105
@.str.1 = private unnamed_addr constant [58 x i8] c"allocated %zu, free %zu, max allocated %zu, heap size %u\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !122
@.str.24 = private unnamed_addr constant [45 x i8] c"Heap at %p contains %d units in %d buckets\0A\0A\00", align 1
@.str.1.25 = private unnamed_addr constant [187 x i8] c"  bucket#    min units        total      largest      largest\0A             threshold       chunks      (units)      (bytes)\0A  -----------------------------------------------------------\0A\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"%9d %12d %12d %12d %12zd\0A\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"\0AChunk dump:\0A\00", align 1
@.str.4 = private unnamed_addr constant [46 x i8] c"chunk %4d: [%c] size=%-4d left=%-4d right=%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [72 x i8] c"\0A%zd free bytes, %zd allocated bytes, overhead = %zd bytes (%zd.%zd%%)\0A\00", align 1
@rand32.state = internal unnamed_addr global i64 123456789, align 8, !dbg !131
@.str.28 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [39 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_37 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_21 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !165
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !220
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !249
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !255
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !395
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !431
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0), %struct.z_heap_bucket { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.52, i32 0, i32 0), %struct.z_heap_bucket { i32 285933600 } }], align 4, !dbg !441
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !446
@.str.51 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.52 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !466
@__devicehdl_dts_ord_37 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !660
@.str.53 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_37 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !621
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !604
@__device_dts_ord_37 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.53, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_37, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_37, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !577
@__init___device_dts_ord_37 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_37 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !593
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !623
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !637
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !639
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !641
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !643
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !645
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !647
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !649
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !651
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !653
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !655
@__devicehdl_dts_ord_9 = dso_local constant [13 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 32767], section ".__device_handles_pass2", align 2, !dbg !665
@.str.55 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !694
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !787
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !776
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !828
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !687
@.str.64 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !894
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1181
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1147
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1133
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1072
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !685
@.str.1.65 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1183
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1151
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1149
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1089
@__devicehdl_dts_ord_21 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !683
@.str.2.66 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1196
@__devstate_dts_ord_21 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1155
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1153
@__init___device_dts_ord_21 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_21 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1095
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !681
@.str.3.67 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1198
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1159
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1157
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1101
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !679
@.str.4.68 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1200
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1163
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1161
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1107
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !677
@.str.5.69 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1202
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1167
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1165
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1113
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !675
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1204
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1171
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1169
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1119
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !673
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1206
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1175
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1173
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1125
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !671
@.str.8 = private unnamed_addr constant [14 x i8] c"gpio@40022000\00", align 1
@gpio_stm32_cfg_i = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073881088 to i32*), i32 8, %struct._thread_arch { i32 48, i32 256 } }, align 4, !dbg !1208
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1179
@gpio_stm32_data_i = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1177
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1131
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !689
@.str.75 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1210
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1401
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1362
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1403
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.75, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1353
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1355
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1364
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1372
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1395
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 839, i32 512 }, %struct._thread_arch { i32 871, i32 0 }], align 4, !dbg !1398
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.55, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([13 x i16], [13 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !760
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1425
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1536
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1538
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1534
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1505
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_21, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null], align 4, !dbg !1540
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.64, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1070
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.65, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1087
@__device_dts_ord_21 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.66, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_21, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_21, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1093
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.67, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1099
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.68, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1105
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.69, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1111
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1117
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1123
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_i to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_i to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1129
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1630
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1670
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1673
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1680
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@__ccm_bss_start = external dso_local global [0 x i8], align 1
@__ccm_bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1687
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !1897
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1906
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !1913
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1918
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.125 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.128, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.129, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.130, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.131, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.132, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.133, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.127, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.134, i32 0, i32 0)], align 4, !dbg !1944
@.str.128 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.129 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.130 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.131 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.132 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.133 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.127 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.134 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2056
@.str.8.126 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2069
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2177
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2180
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2182
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1911
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1908
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@__ccm_data_start = external dso_local global [0 x i8], align 1
@__ccm_data_rom_start = external dso_local global [0 x i8], align 1
@__ccm_data_end = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2184
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2220
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1775
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2218
@.str.187 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2824 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #24, !dbg !2828, !srcloc !2829
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #24, !dbg !2830, !srcloc !2831
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #24, !dbg !2832, !srcloc !2833
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #24, !dbg !2834, !srcloc !2835
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #24, !dbg !2836, !srcloc !2837
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #24, !dbg !2838, !srcloc !2839
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #24, !dbg !2840, !srcloc !2841
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #24, !dbg !2842, !srcloc !2843
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #24, !dbg !2844, !srcloc !2845
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #24, !dbg !2846, !srcloc !2847
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #24, !dbg !2848, !srcloc !2849
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #24, !dbg !2850, !srcloc !2851
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #24, !dbg !2852, !srcloc !2853
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #24, !dbg !2854, !srcloc !2855
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #24, !dbg !2856, !srcloc !2857
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #24, !dbg !2858, !srcloc !2859
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #24, !dbg !2860, !srcloc !2861
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #24, !dbg !2862, !srcloc !2863
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !2864, !srcloc !2865
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #24, !dbg !2866, !srcloc !2867
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #24, !dbg !2868, !srcloc !2869
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #24, !dbg !2870, !srcloc !2871
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #24, !dbg !2872, !srcloc !2873
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #24, !dbg !2874, !srcloc !2875
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #24, !dbg !2876, !srcloc !2877
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #24, !dbg !2878, !srcloc !2879
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #24, !dbg !2880, !srcloc !2881
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #24, !dbg !2882, !srcloc !2885
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #24, !dbg !2886, !srcloc !2887
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #24, !dbg !2888, !srcloc !2889
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #24, !dbg !2890, !srcloc !2891
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #24, !dbg !2892, !srcloc !2893
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #24, !dbg !2894, !srcloc !2895
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #24, !dbg !2896, !srcloc !2897
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #24, !dbg !2898, !srcloc !2899
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #24, !dbg !2900, !srcloc !2901
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #24, !dbg !2902, !srcloc !2903
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !2904, !srcloc !2905
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !2906, !srcloc !2907
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #24, !dbg !2908, !srcloc !2909
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #24, !dbg !2910, !srcloc !2911
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #24, !dbg !2912, !srcloc !2913
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #24, !dbg !2914, !srcloc !2915
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #24, !dbg !2916, !srcloc !2917
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #24, !dbg !2918, !srcloc !2919
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #24, !dbg !2920, !srcloc !2921
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #24, !dbg !2922, !srcloc !2923
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #24, !dbg !2924, !srcloc !2925
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #24, !dbg !2926, !srcloc !2927
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !2928, !srcloc !2929
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #24, !dbg !2930, !srcloc !2931
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #24, !dbg !2932, !srcloc !2933
  ret void, !dbg !2934
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !2937 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i32 0, i32 0)) #25, !dbg !2940
  tail call void @sys_heap_init(%struct.sys_heap* noundef nonnull @heap, i8* noundef getelementptr inbounds ([256 x i8], [256 x i8]* @heap_mem, i32 0, i32 0), i32 noundef 256) #25, !dbg !2941
  tail call void @print_sys_memory_stats() #26, !dbg !2942
  %1 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull @heap, i32 noundef 150) #25, !dbg !2943
  call void @llvm.dbg.value(metadata i8* %1, metadata !2939, metadata !DIExpression()), !dbg !2944
  tail call void @print_sys_memory_stats() #26, !dbg !2945
  %2 = tail call i8* @sys_heap_aligned_realloc(%struct.sys_heap* noundef nonnull @heap, i8* noundef %1, i32 noundef 0, i32 noundef 100) #25, !dbg !2946
  call void @llvm.dbg.value(metadata i8* %2, metadata !2939, metadata !DIExpression()), !dbg !2944
  tail call void @print_sys_memory_stats() #26, !dbg !2947
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull @heap, i8* noundef %2) #25, !dbg !2948
  tail call void @print_sys_memory_stats() #26, !dbg !2949
  ret void, !dbg !2950
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_sys_memory_stats() local_unnamed_addr #1 !dbg !2951 {
  %1 = alloca %struct.sys_memory_stats, align 4
  %2 = bitcast %struct.sys_memory_stats* %1 to i8*, !dbg !2960
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %2) #24, !dbg !2960
  call void @llvm.dbg.declare(metadata %struct.sys_memory_stats* %1, metadata !2953, metadata !DIExpression()), !dbg !2961
  %3 = call i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef nonnull @heap, %struct.sys_memory_stats* noundef nonnull %1) #25, !dbg !2962
  %4 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !2963
  %5 = load i32, i32* %4, align 4, !dbg !2963
  %6 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !2964
  %7 = load i32, i32* %6, align 4, !dbg !2964
  %8 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !2965
  %9 = load i32, i32* %8, align 4, !dbg !2965
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i32 0, i32 0), i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef 256) #25, !dbg !2966
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %2) #24, !dbg !2967
  ret void, !dbg !2967
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !2968 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2970, metadata !DIExpression()), !dbg !2971
  ret i32 0, !dbg !2972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !2973 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !2977, metadata !DIExpression()), !dbg !2978
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !2979
  ret void, !dbg !2980
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !2981 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !2984
  ret i8* %1, !dbg !2985
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !2986 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !2998, metadata !DIExpression()), !dbg !3007
  call void @llvm.dbg.value(metadata i8* %0, metadata !2997, metadata !DIExpression()), !dbg !3007
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !3008
  ret void, !dbg !3010
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3011 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3015, metadata !DIExpression()), !dbg !3017
  call void @llvm.dbg.value(metadata i8* %1, metadata !3016, metadata !DIExpression()), !dbg !3017
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3018
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !3018
  ret i32 %4, !dbg !3019
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3020 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3032, metadata !DIExpression()), !dbg !3033
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3029, metadata !DIExpression()), !dbg !3033
  call void @llvm.dbg.value(metadata i8* %1, metadata !3030, metadata !DIExpression()), !dbg !3033
  call void @llvm.dbg.value(metadata i8* %2, metadata !3031, metadata !DIExpression()), !dbg !3033
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !3034
  ret void, !dbg !3035
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3036 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3040, metadata !DIExpression()), !dbg !3043
  call void @llvm.dbg.value(metadata i32 %1, metadata !3041, metadata !DIExpression()), !dbg !3043
  call void @llvm.dbg.value(metadata i32 0, metadata !3042, metadata !DIExpression()), !dbg !3043
  %3 = icmp eq i32 %1, 0, !dbg !3044
  br i1 %3, label %13, label %4, !dbg !3047

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3042, metadata !DIExpression()), !dbg !3043
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3048
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3050
  %8 = load i8, i8* %7, align 1, !dbg !3050
  %9 = zext i8 %8 to i32, !dbg !3050
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !3048
  %11 = add nuw i32 %5, 1, !dbg !3051
  call void @llvm.dbg.value(metadata i32 %11, metadata !3042, metadata !DIExpression()), !dbg !3043
  %12 = icmp eq i32 %11, %1, !dbg !3044
  br i1 %12, label %13, label %4, !dbg !3047, !llvm.loop !3052

13:                                               ; preds = %4, %2
  ret void, !dbg !3054
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3055 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3059, metadata !DIExpression()), !dbg !3061
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3062
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3062
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3060, metadata !DIExpression()), !dbg !3063
  call void @llvm.va_start(i8* nonnull %3), !dbg !3064
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3065
  %5 = load i32, i32* %4, align 4, !dbg !3065
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3065
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !3065
  call void @llvm.va_end(i8* nonnull %3), !dbg !3066
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3067
  ret void, !dbg !3067
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3068 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3072, metadata !DIExpression()), !dbg !3077
  call void @llvm.dbg.value(metadata i32 %1, metadata !3073, metadata !DIExpression()), !dbg !3077
  call void @llvm.dbg.value(metadata i8* %2, metadata !3074, metadata !DIExpression()), !dbg !3077
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3078
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3078
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3075, metadata !DIExpression()), !dbg !3079
  call void @llvm.va_start(i8* nonnull %5), !dbg !3080
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3081
  %7 = load i32, i32* %6, align 4, !dbg !3081
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3081
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !3081
  call void @llvm.dbg.value(metadata i32 %9, metadata !3076, metadata !DIExpression()), !dbg !3077
  call void @llvm.va_end(i8* nonnull %5), !dbg !3082
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3083
  ret i32 %9, !dbg !3084
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3085 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3092, metadata !DIExpression()), !dbg !3099
  call void @llvm.dbg.value(metadata i8* %0, metadata !3089, metadata !DIExpression()), !dbg !3099
  call void @llvm.dbg.value(metadata i32 %1, metadata !3090, metadata !DIExpression()), !dbg !3099
  call void @llvm.dbg.value(metadata i8* %2, metadata !3091, metadata !DIExpression()), !dbg !3099
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3100
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3100
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3093, metadata !DIExpression()), !dbg !3101
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3102
  store i8* %0, i8** %7, align 4, !dbg !3102
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3102
  store i32 %1, i32* %8, align 4, !dbg !3102
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3102
  store i32 0, i32* %9, align 4, !dbg !3102
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !3103
  %10 = load i32, i32* %9, align 4, !dbg !3104
  %11 = load i32, i32* %8, align 4, !dbg !3106
  %12 = icmp slt i32 %10, %11, !dbg !3107
  br i1 %12, label %13, label %15, !dbg !3108

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3109
  store i8 0, i8* %14, align 1, !dbg !3111
  br label %15, !dbg !3112

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3113
  ret i32 %10, !dbg !3114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #7 !dbg !3115 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3120, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3121, metadata !DIExpression()), !dbg !3122
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3123
  %4 = load i8*, i8** %3, align 4, !dbg !3123
  %5 = icmp eq i8* %4, null, !dbg !3125
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3126
  br i1 %5, label %12, label %8, !dbg !3127

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3128
  %10 = load i32, i32* %9, align 4, !dbg !3128
  %11 = icmp slt i32 %7, %10, !dbg !3129
  br i1 %11, label %15, label %12, !dbg !3130

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3131
  %14 = add nsw i32 %7, 1, !dbg !3133
  store i32 %14, i32* %13, align 4, !dbg !3133
  br label %25, !dbg !3134

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3135
  %17 = icmp eq i32 %7, %16, !dbg !3137
  br i1 %17, label %18, label %21, !dbg !3138

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3139
  store i32 %19, i32* %6, align 4, !dbg !3139
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3141
  store i8 0, i8* %20, align 1, !dbg !3142
  br label %25, !dbg !3143

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3144
  %23 = add nsw i32 %7, 1, !dbg !3146
  store i32 %23, i32* %6, align 4, !dbg !3146
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3147
  store i8 %22, i8* %24, align 1, !dbg !3148
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3149
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #8 !dbg !3150 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3160, metadata !DIExpression()), !dbg !3164
  call void @llvm.dbg.value(metadata i8* %1, metadata !3161, metadata !DIExpression()), !dbg !3164
  call void @llvm.dbg.value(metadata i8* %2, metadata !3162, metadata !DIExpression()), !dbg !3164
  call void @llvm.dbg.value(metadata i8* %3, metadata !3163, metadata !DIExpression()), !dbg !3164
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !3165
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #27, !dbg !3166
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !3167
  unreachable, !dbg !3168
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3169 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #27, !dbg !3273
  ret %struct.k_thread* %1, !dbg !3274
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3275 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3280, metadata !DIExpression()), !dbg !3281
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3282, !srcloc !3284
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !3285
  ret void, !dbg !3286
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3287 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3288, !srcloc !3290
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !3291
  ret %struct.k_thread* %1, !dbg !3292
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3293 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3304, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i8* %1, metadata !3305, metadata !DIExpression()), !dbg !3308
  %3 = icmp eq i8* %1, null, !dbg !3309
  br i1 %3, label %13, label %4, !dbg !3311

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3312
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3312
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3306, metadata !DIExpression()), !dbg !3308
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3313, !range !3314
  call void @llvm.dbg.value(metadata i32 %7, metadata !3307, metadata !DIExpression()), !dbg !3308
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !3315
  %8 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3316, !range !3317
  %9 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %8) #26, !dbg !3318
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 4, !dbg !3319
  %11 = load i32, i32* %10, align 4, !dbg !3320
  %12 = sub i32 %11, %9, !dbg !3320
  store i32 %12, i32* %10, align 4, !dbg !3320
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3321
  br label %13

13:                                               ; preds = %2, %4
  ret void, !dbg !3322
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3323 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3327, metadata !DIExpression()), !dbg !3331
  call void @llvm.dbg.value(metadata i8* %1, metadata !3328, metadata !DIExpression()), !dbg !3331
  call void @llvm.dbg.value(metadata i8* %1, metadata !3329, metadata !DIExpression()), !dbg !3331
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3332
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3330, metadata !DIExpression()), !dbg !3331
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3333
  %5 = ptrtoint i8* %4 to i32, !dbg !3334
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3334
  %7 = sub i32 %5, %6, !dbg !3334
  %8 = lshr i32 %7, 3, !dbg !3335
  ret i32 %8, !dbg !3336
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #7 !dbg !3337 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3341, metadata !DIExpression()), !dbg !3346
  call void @llvm.dbg.value(metadata i32 %1, metadata !3342, metadata !DIExpression()), !dbg !3346
  call void @llvm.dbg.value(metadata i1 %2, metadata !3343, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3346
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3347
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3344, metadata !DIExpression()), !dbg !3346
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3345, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3346
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3348
  %6 = bitcast i8* %5 to i16*, !dbg !3348
  %7 = load i16, i16* %6, align 2, !dbg !3348
  %8 = and i16 %7, -2, !dbg !3352
  %9 = zext i1 %2 to i16, !dbg !3352
  %10 = or i16 %8, %9, !dbg !3352
  store i16 %10, i16* %6, align 2, !dbg !3348
  ret void, !dbg !3353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3354 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3359, metadata !DIExpression()), !dbg !3361
  call void @llvm.dbg.value(metadata i32 %1, metadata !3360, metadata !DIExpression()), !dbg !3361
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3362
  %4 = lshr i32 %3, 1, !dbg !3363
  ret i32 %4, !dbg !3364
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3365 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3369, metadata !DIExpression()), !dbg !3371
  call void @llvm.dbg.value(metadata i32 %1, metadata !3370, metadata !DIExpression()), !dbg !3371
  %3 = shl i32 %1, 3, !dbg !3372
  %4 = add i32 %3, -4, !dbg !3373
  ret i32 %4, !dbg !3374
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3375 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3379, metadata !DIExpression()), !dbg !3381
  call void @llvm.dbg.value(metadata i32 %1, metadata !3380, metadata !DIExpression()), !dbg !3381
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3382
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3384
  br i1 %4, label %7, label %5, !dbg !3385

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3386
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3388
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3389
  br label %7, !dbg !3390

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3391, !range !3393
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3394
  br i1 %9, label %13, label %10, !dbg !3395

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3396
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3398, !range !3393
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !3399
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3400
  call void @llvm.dbg.value(metadata i32 %12, metadata !3380, metadata !DIExpression()), !dbg !3381
  br label %13, !dbg !3401

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3380, metadata !DIExpression()), !dbg !3381
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !3402
  ret void, !dbg !3403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3404 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3408, metadata !DIExpression()), !dbg !3410
  call void @llvm.dbg.value(metadata i32 %1, metadata !3409, metadata !DIExpression()), !dbg !3410
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3411
  %4 = add i32 %3, %1, !dbg !3412
  ret i32 %4, !dbg !3413
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3414 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3418, metadata !DIExpression()), !dbg !3420
  call void @llvm.dbg.value(metadata i32 %1, metadata !3419, metadata !DIExpression()), !dbg !3420
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3421
  %4 = and i32 %3, 1, !dbg !3422
  %5 = icmp ne i32 %4, 0, !dbg !3421
  ret i1 %5, !dbg !3423
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3424 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3426, metadata !DIExpression()), !dbg !3431
  call void @llvm.dbg.value(metadata i32 %1, metadata !3427, metadata !DIExpression()), !dbg !3431
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3432, !range !3317
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3433
  call void @llvm.dbg.value(metadata i32 %4, metadata !3428, metadata !DIExpression()), !dbg !3434
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3435
  ret void, !dbg !3436
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3437 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3441, metadata !DIExpression()), !dbg !3445
  call void @llvm.dbg.value(metadata i32 %1, metadata !3442, metadata !DIExpression()), !dbg !3445
  call void @llvm.dbg.value(metadata i32 %2, metadata !3443, metadata !DIExpression()), !dbg !3445
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3446
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3447
  %6 = add i32 %5, %4, !dbg !3448
  call void @llvm.dbg.value(metadata i32 %6, metadata !3444, metadata !DIExpression()), !dbg !3445
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3449
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3450
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3451
  ret void, !dbg !3452
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3453 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3455, metadata !DIExpression()), !dbg !3457
  call void @llvm.dbg.value(metadata i32 %1, metadata !3456, metadata !DIExpression()), !dbg !3457
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !3458
  %4 = sub i32 %1, %3, !dbg !3459
  ret i32 %4, !dbg !3460
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3461 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3463, metadata !DIExpression()), !dbg !3468
  call void @llvm.dbg.value(metadata i32 %1, metadata !3464, metadata !DIExpression()), !dbg !3468
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3469, !range !3317
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3470
  call void @llvm.dbg.value(metadata i32 %4, metadata !3465, metadata !DIExpression()), !dbg !3471
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3472
  ret void, !dbg !3473
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3474 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3478, metadata !DIExpression()), !dbg !3481
  call void @llvm.dbg.value(metadata i32 %1, metadata !3479, metadata !DIExpression()), !dbg !3481
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !3482
  %4 = add i32 %1, 1, !dbg !3483
  %5 = sub i32 %4, %3, !dbg !3484
  call void @llvm.dbg.value(metadata i32 %5, metadata !3480, metadata !DIExpression()), !dbg !3481
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3485, !range !3486
  %7 = sub nsw i32 31, %6, !dbg !3487
  ret i32 %7, !dbg !3488
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3489 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3493, metadata !DIExpression()), !dbg !3502
  call void @llvm.dbg.value(metadata i32 %1, metadata !3494, metadata !DIExpression()), !dbg !3502
  call void @llvm.dbg.value(metadata i32 %2, metadata !3495, metadata !DIExpression()), !dbg !3502
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3496, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 28, DW_OP_stack_value)), !dbg !3502
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %2, i32 0, !dbg !3503
  %5 = load i32, i32* %4, align 4, !dbg !3503
  %6 = icmp eq i32 %5, 0, !dbg !3504
  br i1 %6, label %7, label %12, !dbg !3505

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3506
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3508
  %10 = load i32, i32* %9, align 4, !dbg !3509
  %11 = or i32 %10, %8, !dbg !3509
  store i32 %11, i32* %9, align 4, !dbg !3509
  store i32 %1, i32* %4, align 4, !dbg !3510
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3511
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3512
  br label %14, !dbg !3513

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3498, metadata !DIExpression()), !dbg !3514
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !3515, !range !3516
  call void @llvm.dbg.value(metadata i32 %13, metadata !3501, metadata !DIExpression()), !dbg !3514
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !3517
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !3518
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !3519
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !3520
  br label %14

14:                                               ; preds = %12, %7
  %15 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !3521, !range !3317
  %16 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef nonnull %0, i32 noundef %15) #26, !dbg !3522
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, !dbg !3523
  %18 = load i32, i32* %17, align 4, !dbg !3524
  %19 = add i32 %18, %16, !dbg !3524
  store i32 %19, i32* %17, align 4, !dbg !3524
  ret void, !dbg !3525
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3526 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3528, metadata !DIExpression()), !dbg !3531
  call void @llvm.dbg.value(metadata i32 %1, metadata !3529, metadata !DIExpression()), !dbg !3531
  call void @llvm.dbg.value(metadata i32 %2, metadata !3530, metadata !DIExpression()), !dbg !3531
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !3532
  ret void, !dbg !3533
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3534 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3536, metadata !DIExpression()), !dbg !3539
  call void @llvm.dbg.value(metadata i32 %1, metadata !3537, metadata !DIExpression()), !dbg !3539
  call void @llvm.dbg.value(metadata i32 %2, metadata !3538, metadata !DIExpression()), !dbg !3539
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !3540
  ret void, !dbg !3541
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3542 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3544, metadata !DIExpression()), !dbg !3546
  call void @llvm.dbg.value(metadata i32 %1, metadata !3545, metadata !DIExpression()), !dbg !3546
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !3547
  ret i32 %3, !dbg !3548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !3549 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3553, metadata !DIExpression()), !dbg !3558
  call void @llvm.dbg.value(metadata i32 %1, metadata !3554, metadata !DIExpression()), !dbg !3558
  call void @llvm.dbg.value(metadata i32 %2, metadata !3555, metadata !DIExpression()), !dbg !3558
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3559
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3556, metadata !DIExpression()), !dbg !3558
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3557, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3558
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3557, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3558
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !3560
  call void @llvm.dbg.value(metadata i8* %5, metadata !3557, metadata !DIExpression()), !dbg !3558
  %6 = bitcast i8* %5 to i16*, !dbg !3561
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !3564
  %8 = load i16, i16* %7, align 2, !dbg !3564
  %9 = zext i16 %8 to i32, !dbg !3564
  ret i32 %9, !dbg !3565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !3566 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3570, metadata !DIExpression()), !dbg !3571
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !3572
  ret %struct.chunk_unit_t* %2, !dbg !3573
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !3574 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3578, metadata !DIExpression()), !dbg !3584
  call void @llvm.dbg.value(metadata i32 %1, metadata !3579, metadata !DIExpression()), !dbg !3584
  call void @llvm.dbg.value(metadata i32 %2, metadata !3580, metadata !DIExpression()), !dbg !3584
  call void @llvm.dbg.value(metadata i32 %3, metadata !3581, metadata !DIExpression()), !dbg !3584
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3585
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !3582, metadata !DIExpression()), !dbg !3584
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !3583, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3584
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !3586
  call void @llvm.dbg.value(metadata i8* %6, metadata !3583, metadata !DIExpression()), !dbg !3584
  %7 = trunc i32 %3 to i16, !dbg !3587
  %8 = bitcast i8* %6 to i16*, !dbg !3590
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !3591
  store i16 %7, i16* %9, align 2, !dbg !3592
  ret void, !dbg !3593
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !3594 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3598, metadata !DIExpression()), !dbg !3599
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !3600
  ret i32 %2, !dbg !3601
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3602 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3606, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i32 %1, metadata !3607, metadata !DIExpression()), !dbg !3608
  %3 = add i32 %1, 4, !dbg !3609
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !3610
  ret i32 %4, !dbg !3611
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !3612 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3616, metadata !DIExpression()), !dbg !3617
  %2 = add i32 %0, 7, !dbg !3618
  %3 = lshr i32 %2, 3, !dbg !3619
  ret i32 %3, !dbg !3620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3621 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3625, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata i32 %1, metadata !3626, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata i32 %2, metadata !3627, metadata !DIExpression()), !dbg !3628
  %4 = shl i32 %2, 1, !dbg !3629
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !3630
  ret void, !dbg !3631
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3632 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3634, metadata !DIExpression()), !dbg !3637
  call void @llvm.dbg.value(metadata i32 %1, metadata !3635, metadata !DIExpression()), !dbg !3637
  call void @llvm.dbg.value(metadata i32 %2, metadata !3636, metadata !DIExpression()), !dbg !3637
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !3638
  ret void, !dbg !3639
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3640 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3642, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.value(metadata i32 %1, metadata !3643, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.value(metadata i32 %2, metadata !3644, metadata !DIExpression()), !dbg !3650
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %2, !dbg !3651
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !3645, metadata !DIExpression()), !dbg !3650
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3652
  %6 = icmp eq i32 %5, %1, !dbg !3653
  br i1 %6, label %7, label %14, !dbg !3654

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3655
  %9 = xor i32 %8, -1, !dbg !3657
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3658
  %11 = load i32, i32* %10, align 4, !dbg !3659
  %12 = and i32 %11, %9, !dbg !3659
  store i32 %12, i32* %10, align 4, !dbg !3659
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3660
  store i32 0, i32* %13, align 4, !dbg !3661
  br label %17, !dbg !3662

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3663
  call void @llvm.dbg.value(metadata i32 %15, metadata !3646, metadata !DIExpression()), !dbg !3664
  call void @llvm.dbg.value(metadata i32 %5, metadata !3649, metadata !DIExpression()), !dbg !3664
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3665
  store i32 %5, i32* %16, align 4, !dbg !3666
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !3667
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !3668
  br label %17

17:                                               ; preds = %14, %7
  %18 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !3669, !range !3317
  %19 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef nonnull %0, i32 noundef %18) #26, !dbg !3670
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, !dbg !3671
  %21 = load i32, i32* %20, align 4, !dbg !3672
  %22 = sub i32 %21, %19, !dbg !3672
  store i32 %22, i32* %20, align 4, !dbg !3672
  ret void, !dbg !3673
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3674 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3676, metadata !DIExpression()), !dbg !3678
  call void @llvm.dbg.value(metadata i32 %1, metadata !3677, metadata !DIExpression()), !dbg !3678
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !3679
  ret i32 %3, !dbg !3680
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !3681 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3685, metadata !DIExpression()), !dbg !3692
  call void @llvm.dbg.value(metadata i8* %1, metadata !3686, metadata !DIExpression()), !dbg !3692
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3693
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !3693
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !3687, metadata !DIExpression()), !dbg !3692
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !3694
  call void @llvm.dbg.value(metadata i32 %5, metadata !3688, metadata !DIExpression()), !dbg !3692
  %6 = ptrtoint i8* %1 to i32, !dbg !3695
  call void @llvm.dbg.value(metadata i32 %6, metadata !3689, metadata !DIExpression()), !dbg !3692
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !3696
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !3696
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !3697
  call void @llvm.dbg.value(metadata i32 %9, metadata !3690, metadata !DIExpression()), !dbg !3692
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !3698
  %11 = shl i32 %10, 3, !dbg !3699
  call void @llvm.dbg.value(metadata i32 %11, metadata !3691, metadata !DIExpression()), !dbg !3692
  %12 = sub i32 %9, %6, !dbg !3700
  %13 = add i32 %12, %11, !dbg !3701
  ret i32 %13, !dbg !3702
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !3703 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3707, metadata !DIExpression()), !dbg !3713
  call void @llvm.dbg.value(metadata i32 %1, metadata !3708, metadata !DIExpression()), !dbg !3713
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3714
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !3714
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !3709, metadata !DIExpression()), !dbg !3713
  %5 = icmp eq i32 %1, 0, !dbg !3715
  br i1 %5, label %21, label %6, !dbg !3717

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !3718
  br i1 %7, label %21, label %8, !dbg !3719

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !3720, !range !3314
  call void @llvm.dbg.value(metadata i32 %9, metadata !3711, metadata !DIExpression()), !dbg !3713
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !3721
  call void @llvm.dbg.value(metadata i32 %10, metadata !3712, metadata !DIExpression()), !dbg !3713
  %11 = icmp eq i32 %10, 0, !dbg !3722
  br i1 %11, label %21, label %12, !dbg !3724

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !3725
  %14 = icmp ugt i32 %13, %9, !dbg !3727
  br i1 %14, label %15, label %17, !dbg !3728

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !3729
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !3731
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !3732
  br label %17, !dbg !3733

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !3734
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !3735
  call void @llvm.dbg.value(metadata i8* %18, metadata !3710, metadata !DIExpression()), !dbg !3713
  %19 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !3736, !range !3317
  %20 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %4, i32 noundef %19) #26, !dbg !3737, !range !3738
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %4, i32 noundef %20) #26, !dbg !3739
  br label %21, !dbg !3740

21:                                               ; preds = %17, %8, %2, %6
  %22 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !3713
  ret i8* %22, !dbg !3741
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3742 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3746, metadata !DIExpression()), !dbg !3748
  call void @llvm.dbg.value(metadata i32 %1, metadata !3747, metadata !DIExpression()), !dbg !3748
  %3 = lshr i32 %1, 3, !dbg !3749
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !3750
  %5 = load i32, i32* %4, align 4, !dbg !3750
  %6 = icmp uge i32 %3, %5, !dbg !3751
  ret i1 %6, !dbg !3752
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !3753 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3757, metadata !DIExpression()), !dbg !3772
  call void @llvm.dbg.value(metadata i32 %1, metadata !3758, metadata !DIExpression()), !dbg !3772
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3773
  call void @llvm.dbg.value(metadata i32 %3, metadata !3759, metadata !DIExpression()), !dbg !3772
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !3760, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 28, DW_OP_stack_value)), !dbg !3772
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %3, i32 0, !dbg !3774
  %5 = load i32, i32* %4, align 4, !dbg !3774
  %6 = icmp eq i32 %5, 0, !dbg !3775
  br i1 %6, label %19, label %7, !dbg !3776

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !3777
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !3778
  call void @llvm.dbg.value(metadata i32 %9, metadata !3764, metadata !DIExpression()), !dbg !3778
  call void @llvm.dbg.value(metadata i32 %8, metadata !3765, metadata !DIExpression()), !dbg !3779
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !3780
  %11 = icmp ult i32 %10, %1, !dbg !3782
  br i1 %11, label %13, label %12, !dbg !3783

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !3784
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !3786
  store i32 %14, i32* %4, align 4, !dbg !3787
  %15 = add nsw i32 %9, -1, !dbg !3788
  call void @llvm.dbg.value(metadata i32 %15, metadata !3764, metadata !DIExpression()), !dbg !3778
  %16 = icmp eq i32 %15, 0, !dbg !3788
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !3789
  br i1 %18, label %19, label %7, !dbg !3789, !llvm.loop !3790

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3793
  %21 = load i32, i32* %20, align 4, !dbg !3793
  %22 = add nsw i32 %3, 1, !dbg !3794
  %23 = shl nsw i32 -1, %22, !dbg !3794
  %24 = and i32 %21, %23, !dbg !3795
  call void @llvm.dbg.value(metadata i32 %24, metadata !3767, metadata !DIExpression()), !dbg !3772
  %25 = icmp eq i32 %24, 0, !dbg !3796
  br i1 %25, label %30, label %26, !dbg !3797

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !3798, !range !3486
  call void @llvm.dbg.value(metadata i32 %27, metadata !3768, metadata !DIExpression()), !dbg !3799
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %27, i32 0, !dbg !3800
  %29 = load i32, i32* %28, align 4, !dbg !3800
  call void @llvm.dbg.value(metadata i32 %29, metadata !3771, metadata !DIExpression()), !dbg !3799
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !3801
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !3772
  ret i32 %31, !dbg !3802
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3803 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3805, metadata !DIExpression()), !dbg !3811
  call void @llvm.dbg.value(metadata i32 %1, metadata !3806, metadata !DIExpression()), !dbg !3811
  call void @llvm.dbg.value(metadata i32 %2, metadata !3807, metadata !DIExpression()), !dbg !3811
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3812
  call void @llvm.dbg.value(metadata i32 %4, metadata !3808, metadata !DIExpression()), !dbg !3811
  %5 = sub i32 %2, %1, !dbg !3813
  call void @llvm.dbg.value(metadata i32 %5, metadata !3809, metadata !DIExpression()), !dbg !3811
  %6 = sub i32 %4, %5, !dbg !3814
  call void @llvm.dbg.value(metadata i32 %6, metadata !3810, metadata !DIExpression()), !dbg !3811
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !3815
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !3816
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !3817
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3818
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3819
  ret void, !dbg !3820
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3821 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3825, metadata !DIExpression()), !dbg !3829
  call void @llvm.dbg.value(metadata i32 %1, metadata !3826, metadata !DIExpression()), !dbg !3829
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3830
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3827, metadata !DIExpression()), !dbg !3829
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !3831
  call void @llvm.dbg.value(metadata i8* %4, metadata !3828, metadata !DIExpression()), !dbg !3829
  ret i8* %4, !dbg !3832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @increase_allocated_bytes(%struct.z_heap* nocapture noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !3833 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3837, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i32 %1, metadata !3838, metadata !DIExpression()), !dbg !3839
  %3 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 4, !dbg !3840
  %4 = load i32, i32* %3, align 4, !dbg !3841
  %5 = add i32 %4, %1, !dbg !3841
  store i32 %5, i32* %3, align 4, !dbg !3841
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 5, !dbg !3842
  %7 = load i32, i32* %6, align 4, !dbg !3842
  %8 = icmp ugt i32 %7, %5, !dbg !3842
  %9 = select i1 %8, i32 %7, i32 %5, !dbg !3842
  store i32 %9, i32* %6, align 4, !dbg !3843
  ret void, !dbg !3844
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !3845 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3849, metadata !DIExpression()), !dbg !3861
  call void @llvm.dbg.value(metadata i32 %1, metadata !3850, metadata !DIExpression()), !dbg !3861
  call void @llvm.dbg.value(metadata i32 %2, metadata !3851, metadata !DIExpression()), !dbg !3861
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3862
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !3862
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !3852, metadata !DIExpression()), !dbg !3861
  %6 = sub i32 0, %1, !dbg !3863
  %7 = and i32 %6, %1, !dbg !3864
  call void @llvm.dbg.value(metadata i32 %7, metadata !3854, metadata !DIExpression()), !dbg !3861
  %8 = icmp eq i32 %7, %1, !dbg !3865
  br i1 %8, label %13, label %9, !dbg !3867

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !3868
  call void @llvm.dbg.value(metadata i32 %10, metadata !3850, metadata !DIExpression()), !dbg !3861
  %11 = icmp ult i32 %7, 4, !dbg !3870
  %12 = select i1 %11, i32 %7, i32 4, !dbg !3870
  br label %17, !dbg !3870

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !3871
  br i1 %14, label %15, label %17, !dbg !3874

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !3875
  br label %59, !dbg !3877

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !3861
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !3878
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !3850, metadata !DIExpression()), !dbg !3861
  call void @llvm.dbg.value(metadata i32 %19, metadata !3853, metadata !DIExpression()), !dbg !3861
  call void @llvm.dbg.value(metadata i32 %18, metadata !3854, metadata !DIExpression()), !dbg !3861
  %21 = icmp eq i32 %2, 0, !dbg !3879
  br i1 %21, label %59, label %22, !dbg !3881

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !3882
  br i1 %23, label %59, label %24, !dbg !3883

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !3884
  %26 = add i32 %25, %20, !dbg !3885
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !3886, !range !3314
  call void @llvm.dbg.value(metadata i32 %27, metadata !3855, metadata !DIExpression()), !dbg !3861
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !3887
  call void @llvm.dbg.value(metadata i32 %28, metadata !3856, metadata !DIExpression()), !dbg !3861
  %29 = icmp eq i32 %28, 0, !dbg !3888
  br i1 %29, label %59, label %30, !dbg !3890

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !3891
  call void @llvm.dbg.value(metadata i8* %31, metadata !3857, metadata !DIExpression()), !dbg !3861
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !3892
  %33 = ptrtoint i8* %32 to i32, !dbg !3892
  %34 = add i32 %20, -1, !dbg !3892
  %35 = add i32 %34, %33, !dbg !3892
  %36 = sub i32 0, %20, !dbg !3892
  %37 = and i32 %35, %36, !dbg !3892
  %38 = inttoptr i32 %37 to i8*, !dbg !3893
  %39 = sub i32 0, %18, !dbg !3894
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !3894
  call void @llvm.dbg.value(metadata i8* %40, metadata !3857, metadata !DIExpression()), !dbg !3861
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !3895
  %42 = ptrtoint i8* %41 to i32, !dbg !3895
  %43 = add i32 %42, 7, !dbg !3895
  %44 = and i32 %43, -8, !dbg !3895
  call void @llvm.dbg.value(metadata i32 %44, metadata !3858, metadata !DIExpression()), !dbg !3861
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !3896
  call void @llvm.dbg.value(metadata i32 %45, metadata !3859, metadata !DIExpression()), !dbg !3861
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !3897
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !3898
  %48 = sub i32 %44, %47, !dbg !3898
  %49 = ashr exact i32 %48, 3, !dbg !3898
  call void @llvm.dbg.value(metadata i32 %49, metadata !3860, metadata !DIExpression()), !dbg !3861
  %50 = icmp ugt i32 %45, %28, !dbg !3899
  br i1 %50, label %51, label %52, !dbg !3901

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !3902
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !3904
  br label %52, !dbg !3905

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !3906
  %54 = icmp ugt i32 %53, %49, !dbg !3908
  br i1 %54, label %55, label %56, !dbg !3909

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !3910
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !3912
  br label %56, !dbg !3913

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !3914
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !3915, !range !3317
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %5, i32 noundef %57) #26, !dbg !3916, !range !3738
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %5, i32 noundef %58) #26, !dbg !3917
  br label %59

59:                                               ; preds = %56, %24, %17, %22, %15
  %60 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !3861
  ret i8* %60, !dbg !3918
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !3919 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3923, metadata !DIExpression()), !dbg !3942
  call void @llvm.dbg.value(metadata i8* %1, metadata !3924, metadata !DIExpression()), !dbg !3942
  call void @llvm.dbg.value(metadata i32 %2, metadata !3925, metadata !DIExpression()), !dbg !3942
  call void @llvm.dbg.value(metadata i32 %3, metadata !3926, metadata !DIExpression()), !dbg !3942
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3943
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3943
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3927, metadata !DIExpression()), !dbg !3942
  %7 = icmp eq i8* %1, null, !dbg !3944
  br i1 %7, label %8, label %10, !dbg !3946

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !3947
  br label %65, !dbg !3949

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !3950
  br i1 %11, label %12, label %13, !dbg !3952

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !3953
  br label %65, !dbg !3955

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !3956
  br i1 %14, label %65, label %15, !dbg !3958

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3959, !range !3314
  call void @llvm.dbg.value(metadata i32 %16, metadata !3928, metadata !DIExpression()), !dbg !3942
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !3960
  call void @llvm.dbg.value(metadata i32 %17, metadata !3929, metadata !DIExpression()), !dbg !3942
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !3961
  %19 = ptrtoint i8* %1 to i32, !dbg !3962
  %20 = ptrtoint i8* %18 to i32, !dbg !3962
  %21 = sub i32 %19, %20, !dbg !3962
  call void @llvm.dbg.value(metadata i32 %21, metadata !3930, metadata !DIExpression()), !dbg !3942
  %22 = add i32 %21, %3, !dbg !3963
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !3964
  call void @llvm.dbg.value(metadata i32 %23, metadata !3931, metadata !DIExpression()), !dbg !3942
  %24 = icmp eq i32 %2, 0, !dbg !3965
  br i1 %24, label %29, label %25, !dbg !3966

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !3967
  %27 = and i32 %26, %19, !dbg !3968
  %28 = icmp eq i32 %27, 0, !dbg !3968
  br i1 %28, label %29, label %55, !dbg !3969

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !3970
  %31 = icmp eq i32 %23, %30, !dbg !3971
  br i1 %31, label %65, label %32, !dbg !3972

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !3973
  br i1 %33, label %34, label %41, !dbg !3974

34:                                               ; preds = %32
  %35 = sub i32 %23, %30, !dbg !3975
  %36 = shl i32 %35, 3, !dbg !3977
  %37 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 4, !dbg !3978
  %38 = load i32, i32* %37, align 4, !dbg !3979
  %39 = add i32 %38, %36, !dbg !3979
  store i32 %39, i32* %37, align 4, !dbg !3979
  %40 = add i32 %23, %16, !dbg !3980
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %40) #26, !dbg !3981
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !3982
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %40) #26, !dbg !3983
  br label %65, !dbg !3984

41:                                               ; preds = %32
  %42 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !3985
  br i1 %42, label %55, label %43, !dbg !3986

43:                                               ; preds = %41
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !3987
  %45 = add i32 %44, %30, !dbg !3988
  %46 = icmp ult i32 %45, %23, !dbg !3989
  br i1 %46, label %55, label %47, !dbg !3990

47:                                               ; preds = %43
  %48 = sub i32 %23, %30, !dbg !3991
  call void @llvm.dbg.value(metadata i32 %48, metadata !3932, metadata !DIExpression()), !dbg !3992
  %49 = shl i32 %48, 3, !dbg !3993
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %6, i32 noundef %49) #26, !dbg !3994
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !3995
  %50 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !3996
  %51 = icmp ult i32 %48, %50, !dbg !3998
  br i1 %51, label %52, label %54, !dbg !3999

52:                                               ; preds = %47
  %53 = add i32 %48, %17, !dbg !4000
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %53) #26, !dbg !4002
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !4003
  br label %54, !dbg !4004

54:                                               ; preds = %52, %47
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !4005
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4006
  br label %65

55:                                               ; preds = %43, %41, %25
  %56 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4007
  call void @llvm.dbg.value(metadata i8* %56, metadata !3938, metadata !DIExpression()), !dbg !3942
  %57 = icmp eq i8* %56, null, !dbg !4008
  br i1 %57, label %65, label %58, !dbg !4009

58:                                               ; preds = %55
  %59 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4010, !range !3317
  %60 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %59) #26, !dbg !4011
  %61 = sub i32 %60, %21, !dbg !4012
  call void @llvm.dbg.value(metadata i32 %61, metadata !3939, metadata !DIExpression()), !dbg !4013
  %62 = icmp ult i32 %61, %3, !dbg !4014
  %63 = select i1 %62, i32 %61, i32 %3, !dbg !4014
  %64 = tail call i8* @memcpy(i8* noundef nonnull %56, i8* noundef nonnull %1, i32 noundef %63) #25, !dbg !4015
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4016
  br label %65, !dbg !4017

65:                                               ; preds = %34, %54, %29, %58, %55, %13, %12, %8
  %66 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %54 ], [ %1, %29 ], [ %56, %58 ], [ null, %55 ], !dbg !3942
  ret i8* %66, !dbg !4018
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4019 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4023, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8* %1, metadata !4024, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %2, metadata !4025, metadata !DIExpression()), !dbg !4034
  %4 = add i32 %2, -4, !dbg !4035
  call void @llvm.dbg.value(metadata i32 %4, metadata !4025, metadata !DIExpression()), !dbg !4034
  %5 = ptrtoint i8* %1 to i32, !dbg !4036
  %6 = add i32 %5, 7, !dbg !4036
  %7 = and i32 %6, -8, !dbg !4036
  call void @llvm.dbg.value(metadata i32 %7, metadata !4026, metadata !DIExpression()), !dbg !4034
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4037
  %9 = ptrtoint i8* %8 to i32, !dbg !4037
  %10 = and i32 %9, -8, !dbg !4037
  call void @llvm.dbg.value(metadata i32 %10, metadata !4027, metadata !DIExpression()), !dbg !4034
  %11 = sub i32 %10, %7, !dbg !4038
  %12 = lshr exact i32 %11, 3, !dbg !4039
  call void @llvm.dbg.value(metadata i32 %12, metadata !4028, metadata !DIExpression()), !dbg !4034
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4040
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4029, metadata !DIExpression()), !dbg !4034
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4041
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4042
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4043
  store i32 %12, i32* %15, align 8, !dbg !4044
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4045
  store i32 0, i32* %16, align 4, !dbg !4046
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, !dbg !4047
  store i32 0, i32* %17, align 8, !dbg !4048
  %18 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 4, !dbg !4049
  store i32 0, i32* %18, align 4, !dbg !4050
  %19 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 5, !dbg !4051
  store i32 0, i32* %19, align 8, !dbg !4052
  %20 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !4053
  call void @llvm.dbg.value(metadata i32 %20, metadata !4030, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4034
  %21 = shl i32 %20, 2, !dbg !4054
  %22 = add i32 %21, 32, !dbg !4055
  %23 = tail call fastcc i32 @chunksz(i32 noundef %22) #26, !dbg !4056
  call void @llvm.dbg.value(metadata i32 %23, metadata !4031, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 0, metadata !4032, metadata !DIExpression()), !dbg !4057
  %24 = icmp slt i32 %20, 0, !dbg !4058
  br i1 %24, label %25, label %27, !dbg !4060

25:                                               ; preds = %27, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %23) #26, !dbg !4061
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !4062
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !4063
  %26 = sub i32 %12, %23, !dbg !4064
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %23, i32 noundef %26) #26, !dbg !4065
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %23, i32 noundef %23) #26, !dbg !4066
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !4067
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %26) #26, !dbg !4068
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !4069
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %23) #26, !dbg !4070
  ret void, !dbg !4071

27:                                               ; preds = %3, %27
  %28 = phi i32 [ %30, %27 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %28, metadata !4032, metadata !DIExpression()), !dbg !4057
  %29 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 6, i32 %28, i32 0, !dbg !4072
  store i32 0, i32* %29, align 4, !dbg !4074
  %30 = add nuw i32 %28, 1, !dbg !4075
  call void @llvm.dbg.value(metadata i32 %30, metadata !4032, metadata !DIExpression()), !dbg !4057
  %31 = icmp eq i32 %28, %20, !dbg !4058
  br i1 %31, label %25, label %27, !dbg !4060, !llvm.loop !4076
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local zeroext i1 @sys_heap_validate(%struct.sys_heap* noundef %0) local_unnamed_addr #12 !dbg !4078 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.sys_memory_stats, align 4
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4102, metadata !DIExpression()), !dbg !4128
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4129
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4129
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4103, metadata !DIExpression()), !dbg !4128
  %7 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef 0) #26, !dbg !4130
  call void @llvm.dbg.value(metadata i32 %7, metadata !4104, metadata !DIExpression()), !dbg !4128
  %8 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  call void @llvm.dbg.value(metadata i32 %7, metadata !4104, metadata !DIExpression()), !dbg !4128
  %10 = icmp ult i32 %7, %9, !dbg !4132
  br i1 %10, label %11, label %17, !dbg !4134

11:                                               ; preds = %1, %14
  %12 = phi i32 [ %15, %14 ], [ %7, %1 ]
  call void @llvm.dbg.value(metadata i32 %12, metadata !4104, metadata !DIExpression()), !dbg !4128
  %13 = tail call fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef nonnull %6, i32 noundef %12) #26, !dbg !4135
  br i1 %13, label %14, label %138, !dbg !4138

14:                                               ; preds = %11
  %15 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef %12) #26, !dbg !4139
  call void @llvm.dbg.value(metadata i32 %15, metadata !4104, metadata !DIExpression()), !dbg !4128
  %16 = icmp ult i32 %15, %9, !dbg !4132
  br i1 %16, label %11, label %17, !dbg !4134, !llvm.loop !4140

17:                                               ; preds = %14, %1
  %18 = phi i32 [ %7, %1 ], [ %15, %14 ], !dbg !4142
  %19 = icmp eq i32 %18, %9, !dbg !4143
  br i1 %19, label %20, label %138, !dbg !4145

20:                                               ; preds = %17
  %21 = bitcast i32* %2 to i8*, !dbg !4146
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #24, !dbg !4146
  %22 = bitcast i32* %3 to i8*, !dbg !4146
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #24, !dbg !4146
  %23 = bitcast %struct.sys_memory_stats* %4 to i8*, !dbg !4147
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %23) #24, !dbg !4147
  call void @llvm.dbg.declare(metadata %struct.sys_memory_stats* %4, metadata !4107, metadata !DIExpression()), !dbg !4148
  call void @llvm.dbg.value(metadata i32* %2, metadata !4105, metadata !DIExpression(DW_OP_deref)), !dbg !4128
  call void @llvm.dbg.value(metadata i32* %3, metadata !4106, metadata !DIExpression(DW_OP_deref)), !dbg !4128
  call fastcc void @get_alloc_info(%struct.z_heap* noundef nonnull %6, i32* noundef nonnull %2, i32* noundef nonnull %3) #26, !dbg !4149
  %24 = call i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef %0, %struct.sys_memory_stats* noundef nonnull %4) #26, !dbg !4150
  %25 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %4, i32 0, i32 1, !dbg !4151
  %26 = load i32, i32* %25, align 4, !dbg !4151
  %27 = load i32, i32* %2, align 4, !dbg !4153
  call void @llvm.dbg.value(metadata i32 %27, metadata !4105, metadata !DIExpression()), !dbg !4128
  %28 = icmp eq i32 %26, %27, !dbg !4154
  br i1 %28, label %29, label %136, !dbg !4155

29:                                               ; preds = %20
  %30 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %4, i32 0, i32 0, !dbg !4156
  %31 = load i32, i32* %30, align 4, !dbg !4156
  %32 = load i32, i32* %3, align 4, !dbg !4157
  call void @llvm.dbg.value(metadata i32 %32, metadata !4106, metadata !DIExpression()), !dbg !4128
  %33 = icmp eq i32 %31, %32, !dbg !4158
  br i1 %33, label %34, label %136, !dbg !4159

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 0, metadata !4113, metadata !DIExpression()), !dbg !4160
  %35 = load i32, i32* %8, align 4, !dbg !4161
  %36 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %35) #26, !dbg !4162
  %37 = icmp slt i32 %36, 0, !dbg !4163
  br i1 %37, label %84, label %38, !dbg !4164

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 2
  br label %40, !dbg !4164

40:                                               ; preds = %38, %79
  %41 = phi i32 [ 0, %38 ], [ %80, %79 ]
  call void @llvm.dbg.value(metadata i32 %41, metadata !4113, metadata !DIExpression()), !dbg !4160
  %42 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 6, i32 %41, i32 0, !dbg !4165
  %43 = load i32, i32* %42, align 4, !dbg !4165
  call void @llvm.dbg.value(metadata i32 %43, metadata !4115, metadata !DIExpression()), !dbg !4166
  call void @llvm.dbg.value(metadata i32 0, metadata !4118, metadata !DIExpression()), !dbg !4166
  call void @llvm.dbg.value(metadata i32 %43, metadata !4104, metadata !DIExpression()), !dbg !4128
  %44 = icmp eq i32 %43, 0, !dbg !4167
  br i1 %44, label %45, label %50, !dbg !4170

45:                                               ; preds = %40
  %46 = load i32, i32* %39, align 4, !dbg !4171
  %47 = shl nuw i32 1, %41, !dbg !4172
  %48 = and i32 %46, %47, !dbg !4173
  %49 = icmp eq i32 %48, 0, !dbg !4174
  call void @llvm.dbg.value(metadata i1 %71, metadata !4119, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4166
  call void @llvm.dbg.value(metadata i1 %72, metadata !4120, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4166
  br i1 %49, label %76, label %136, !dbg !4175

50:                                               ; preds = %40, %63
  %51 = phi i32 [ %65, %63 ], [ %43, %40 ]
  %52 = phi i32 [ %64, %63 ], [ 0, %40 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4104, metadata !DIExpression()), !dbg !4128
  call void @llvm.dbg.value(metadata i32 %52, metadata !4118, metadata !DIExpression()), !dbg !4166
  %53 = icmp eq i32 %52, 0, !dbg !4176
  %54 = icmp ne i32 %51, %43, !dbg !4177
  %55 = select i1 %53, i1 true, i1 %54, !dbg !4177
  br i1 %55, label %61, label %56, !dbg !4178

56:                                               ; preds = %50
  %57 = load i32, i32* %39, align 4, !dbg !4171
  %58 = shl nuw i32 1, %41, !dbg !4172
  %59 = and i32 %57, %58, !dbg !4173
  %60 = icmp eq i32 %59, 0, !dbg !4174
  call void @llvm.dbg.value(metadata i1 %71, metadata !4119, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4166
  call void @llvm.dbg.value(metadata i1 %72, metadata !4120, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4166
  br i1 %60, label %136, label %74, !dbg !4175

61:                                               ; preds = %50
  %62 = call fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef %6, i32 noundef %51) #26, !dbg !4179
  br i1 %62, label %63, label %136, !dbg !4182

63:                                               ; preds = %61
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %51, i1 noundef zeroext true) #26, !dbg !4183
  %64 = add i32 %52, 1, !dbg !4184
  call void @llvm.dbg.value(metadata i32 %64, metadata !4118, metadata !DIExpression()), !dbg !4166
  %65 = call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %6, i32 noundef %51) #26, !dbg !4185
  call void @llvm.dbg.value(metadata i32 %65, metadata !4104, metadata !DIExpression()), !dbg !4128
  %66 = icmp eq i32 %65, 0, !dbg !4167
  br i1 %66, label %67, label %50, !dbg !4170, !llvm.loop !4186

67:                                               ; preds = %63
  %68 = load i32, i32* %39, align 4, !dbg !4171
  %69 = shl nuw i32 1, %41, !dbg !4172
  %70 = and i32 %68, %69, !dbg !4173
  %71 = icmp eq i32 %70, 0, !dbg !4174
  call void @llvm.dbg.value(metadata i1 %71, metadata !4119, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4166
  %72 = icmp ne i32 %64, 0, !dbg !4188
  call void @llvm.dbg.value(metadata i1 %72, metadata !4120, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4166
  %73 = xor i1 %72, %71, !dbg !4189
  br i1 %73, label %74, label %136, !dbg !4175

74:                                               ; preds = %56, %67
  %75 = phi i1 [ %71, %67 ], [ %60, %56 ]
  br i1 %75, label %76, label %79, !dbg !4191

76:                                               ; preds = %45, %74
  %77 = load i32, i32* %42, align 4, !dbg !4193
  %78 = icmp eq i32 %77, 0, !dbg !4194
  br i1 %78, label %79, label %136, !dbg !4195

79:                                               ; preds = %76, %74
  %80 = add nuw nsw i32 %41, 1, !dbg !4196
  call void @llvm.dbg.value(metadata i32 %80, metadata !4113, metadata !DIExpression()), !dbg !4160
  %81 = load i32, i32* %8, align 4, !dbg !4161
  %82 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %81) #26, !dbg !4162
  %83 = icmp slt i32 %41, %82, !dbg !4163
  br i1 %83, label %40, label %84, !dbg !4164, !llvm.loop !4197

84:                                               ; preds = %79, %34
  %85 = phi i32 [ %35, %34 ], [ %81, %79 ], !dbg !4199
  call void @llvm.dbg.value(metadata i32 0, metadata !4121, metadata !DIExpression()), !dbg !4128
  %86 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef 0) #26, !dbg !4202
  call void @llvm.dbg.value(metadata i32 %86, metadata !4104, metadata !DIExpression()), !dbg !4128
  %87 = icmp ult i32 %86, %85, !dbg !4203
  br i1 %87, label %88, label %99, !dbg !4204

88:                                               ; preds = %84, %95
  %89 = phi i32 [ %90, %95 ], [ 0, %84 ]
  %90 = phi i32 [ %96, %95 ], [ %86, %84 ]
  call void @llvm.dbg.value(metadata i32 %89, metadata !4121, metadata !DIExpression()), !dbg !4128
  call void @llvm.dbg.value(metadata i32 %90, metadata !4104, metadata !DIExpression()), !dbg !4128
  %91 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %6, i32 noundef %90) #26, !dbg !4205
  br i1 %91, label %92, label %136, !dbg !4208

92:                                               ; preds = %88
  %93 = call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %6, i32 noundef %90) #26, !dbg !4209
  %94 = icmp eq i32 %93, %89, !dbg !4211
  br i1 %94, label %95, label %136, !dbg !4212

95:                                               ; preds = %92
  call void @llvm.dbg.value(metadata i32 %90, metadata !4121, metadata !DIExpression()), !dbg !4128
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %90, i1 noundef zeroext false) #26, !dbg !4213
  %96 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef %90) #26, !dbg !4214
  call void @llvm.dbg.value(metadata i32 %96, metadata !4104, metadata !DIExpression()), !dbg !4128
  %97 = load i32, i32* %8, align 4, !dbg !4199
  %98 = icmp ult i32 %96, %97, !dbg !4203
  br i1 %98, label %88, label %99, !dbg !4204, !llvm.loop !4215

99:                                               ; preds = %95, %84
  %100 = phi i32 [ %86, %84 ], [ %96, %95 ], !dbg !4217
  %101 = phi i32 [ %85, %84 ], [ %97, %95 ], !dbg !4199
  %102 = icmp eq i32 %100, %101, !dbg !4218
  br i1 %102, label %103, label %136, !dbg !4220

103:                                              ; preds = %99
  call void @llvm.dbg.value(metadata i32 0, metadata !4122, metadata !DIExpression()), !dbg !4221
  %104 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %100) #26, !dbg !4222
  %105 = icmp slt i32 %104, 0, !dbg !4223
  br i1 %105, label %125, label %106, !dbg !4224

106:                                              ; preds = %103, %120
  %107 = phi i32 [ %121, %120 ], [ %100, %103 ]
  %108 = phi i32 [ %122, %120 ], [ 0, %103 ]
  call void @llvm.dbg.value(metadata i32 %108, metadata !4122, metadata !DIExpression()), !dbg !4221
  %109 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 6, i32 %108, i32 0, !dbg !4225
  %110 = load i32, i32* %109, align 4, !dbg !4225
  call void @llvm.dbg.value(metadata i32 %110, metadata !4124, metadata !DIExpression()), !dbg !4226
  call void @llvm.dbg.value(metadata i32 0, metadata !4127, metadata !DIExpression()), !dbg !4226
  %111 = icmp eq i32 %110, 0, !dbg !4227
  br i1 %111, label %120, label %112, !dbg !4229

112:                                              ; preds = %106, %115
  %113 = phi i32 [ %116, %115 ], [ %110, %106 ]
  call void @llvm.dbg.value(metadata i32 poison, metadata !4127, metadata !DIExpression()), !dbg !4226
  call void @llvm.dbg.value(metadata i32 %113, metadata !4104, metadata !DIExpression()), !dbg !4128
  %114 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %6, i32 noundef %113) #26, !dbg !4230
  br i1 %114, label %136, label %115, !dbg !4235

115:                                              ; preds = %112
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %113, i1 noundef zeroext true) #26, !dbg !4236
  call void @llvm.dbg.value(metadata i32 poison, metadata !4127, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4226
  %116 = call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %6, i32 noundef %113) #26, !dbg !4237
  call void @llvm.dbg.value(metadata i32 %116, metadata !4104, metadata !DIExpression()), !dbg !4128
  %117 = icmp eq i32 %116, %110, !dbg !4238
  br i1 %117, label %118, label %112, !dbg !4239, !llvm.loop !4240

118:                                              ; preds = %115
  %119 = load i32, i32* %8, align 4, !dbg !4242
  br label %120, !dbg !4243

120:                                              ; preds = %118, %106
  %121 = phi i32 [ %119, %118 ], [ %107, %106 ], !dbg !4242
  %122 = add nuw nsw i32 %108, 1, !dbg !4243
  call void @llvm.dbg.value(metadata i32 %122, metadata !4122, metadata !DIExpression()), !dbg !4221
  %123 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %121) #26, !dbg !4222
  %124 = icmp slt i32 %108, %123, !dbg !4223
  br i1 %124, label %106, label %125, !dbg !4224, !llvm.loop !4244

125:                                              ; preds = %120, %103
  %126 = phi i32 [ %100, %103 ], [ %121, %120 ], !dbg !4246
  %127 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef 0) #26, !dbg !4249
  call void @llvm.dbg.value(metadata i32 %127, metadata !4104, metadata !DIExpression()), !dbg !4128
  %128 = icmp ult i32 %127, %126, !dbg !4250
  br i1 %128, label %129, label %136, !dbg !4251

129:                                              ; preds = %125, %129
  %130 = phi i32 [ %133, %129 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i32 %130, metadata !4104, metadata !DIExpression()), !dbg !4128
  %131 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %6, i32 noundef %130) #26, !dbg !4252
  %132 = xor i1 %131, true, !dbg !4254
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef nonnull %6, i32 noundef %130, i1 noundef zeroext %132) #26, !dbg !4255
  %133 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef %130) #26, !dbg !4256
  call void @llvm.dbg.value(metadata i32 %133, metadata !4104, metadata !DIExpression()), !dbg !4128
  %134 = load i32, i32* %8, align 4, !dbg !4246
  %135 = icmp ult i32 %133, %134, !dbg !4250
  br i1 %135, label %129, label %136, !dbg !4251, !llvm.loop !4257

136:                                              ; preds = %76, %67, %45, %56, %61, %88, %92, %112, %129, %125, %99, %20, %29
  %137 = phi i1 [ false, %29 ], [ false, %20 ], [ false, %99 ], [ true, %125 ], [ true, %129 ], [ false, %112 ], [ false, %92 ], [ false, %88 ], [ false, %61 ], [ false, %56 ], [ false, %45 ], [ false, %67 ], [ false, %76 ], !dbg !4128
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %23) #24, !dbg !4259
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #24, !dbg !4259
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #24, !dbg !4259
  br label %138

138:                                              ; preds = %11, %17, %136
  %139 = phi i1 [ %137, %136 ], [ false, %17 ], [ false, %11 ], !dbg !4128
  ret i1 %139, !dbg !4259
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4260 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4264, metadata !DIExpression()), !dbg !4266
  call void @llvm.dbg.value(metadata i32 %1, metadata !4265, metadata !DIExpression()), !dbg !4266
  %3 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4267
  %4 = add i32 %3, %1, !dbg !4268
  ret i32 %4, !dbg !4269
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4270 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4274, metadata !DIExpression()), !dbg !4276
  call void @llvm.dbg.value(metadata i32 %1, metadata !4275, metadata !DIExpression()), !dbg !4276
  %3 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4277
  %4 = icmp eq i32 %3, 0, !dbg !4277
  br i1 %4, label %33, label %5, !dbg !4280

5:                                                ; preds = %2
  %6 = add i32 %3, %1, !dbg !4281
  %7 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4281
  %8 = load i32, i32* %7, align 4, !dbg !4281
  %9 = icmp ugt i32 %6, %8, !dbg !4281
  br i1 %9, label %33, label %10, !dbg !4284

10:                                               ; preds = %5
  %11 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4285
  br i1 %11, label %12, label %33, !dbg !4288

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4289
  %14 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %13) #26, !dbg !4289
  %15 = icmp eq i32 %14, %1, !dbg !4289
  br i1 %15, label %16, label %33, !dbg !4292

16:                                               ; preds = %12
  %17 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4293
  %18 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %0, i32 noundef %17) #26, !dbg !4293
  %19 = icmp eq i32 %18, %1, !dbg !4293
  br i1 %19, label %20, label %33, !dbg !4296

20:                                               ; preds = %16
  %21 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4297
  br i1 %21, label %32, label %22, !dbg !4299

22:                                               ; preds = %20
  %23 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %13) #26, !dbg !4300
  br i1 %23, label %24, label %33, !dbg !4304

24:                                               ; preds = %22
  %25 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %17) #26, !dbg !4305
  br i1 %25, label %26, label %33, !dbg !4308

26:                                               ; preds = %24
  %27 = tail call fastcc i32 @prev_free_chunk.23(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4309, !range !3516
  %28 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %27) #26, !dbg !4309
  br i1 %28, label %29, label %33, !dbg !4314

29:                                               ; preds = %26
  %30 = tail call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4315, !range !3516
  %31 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %30) #26, !dbg !4315
  br i1 %31, label %32, label %33, !dbg !4318

32:                                               ; preds = %20, %29
  br label %33, !dbg !4319

33:                                               ; preds = %29, %26, %24, %22, %16, %12, %10, %5, %2, %32
  %34 = phi i1 [ true, %32 ], [ false, %2 ], [ false, %5 ], [ false, %10 ], [ false, %12 ], [ false, %16 ], [ false, %22 ], [ false, %24 ], [ false, %26 ], [ false, %29 ], !dbg !4276
  ret i1 %34, !dbg !4320
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @get_alloc_info(%struct.z_heap* noundef %0, i32* nocapture noundef %1, i32* nocapture noundef %2) unnamed_addr #13 !dbg !4321 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4325, metadata !DIExpression()), !dbg !4329
  call void @llvm.dbg.value(metadata i32* %1, metadata !4326, metadata !DIExpression()), !dbg !4329
  call void @llvm.dbg.value(metadata i32* %2, metadata !4327, metadata !DIExpression()), !dbg !4329
  store i32 0, i32* %1, align 4, !dbg !4330
  store i32 0, i32* %2, align 4, !dbg !4331
  %4 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef 0) #26, !dbg !4332
  call void @llvm.dbg.value(metadata i32 %4, metadata !4328, metadata !DIExpression()), !dbg !4329
  %5 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1
  call void @llvm.dbg.value(metadata i32 %4, metadata !4328, metadata !DIExpression()), !dbg !4329
  %6 = load i32, i32* %5, align 4, !dbg !4334
  %7 = icmp ult i32 %4, %6, !dbg !4336
  br i1 %7, label %8, label %19, !dbg !4337

8:                                                ; preds = %3, %8
  %9 = phi i32 [ %16, %8 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4328, metadata !DIExpression()), !dbg !4329
  %10 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %9) #26, !dbg !4338
  %11 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef nonnull %0, i32 noundef %9) #26, !dbg !4341, !range !3317
  %12 = tail call fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* noundef nonnull %0, i32 noundef %11) #26, !dbg !4341
  %13 = select i1 %10, i32* %1, i32* %2, !dbg !4341
  %14 = load i32, i32* %13, align 4, !dbg !4341
  %15 = add i32 %14, %12, !dbg !4341
  store i32 %15, i32* %13, align 4, !dbg !4341
  %16 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %9) #26, !dbg !4342
  call void @llvm.dbg.value(metadata i32 %16, metadata !4328, metadata !DIExpression()), !dbg !4329
  %17 = load i32, i32* %5, align 4, !dbg !4334
  %18 = icmp ult i32 %16, %17, !dbg !4336
  br i1 %18, label %8, label %19, !dbg !4337, !llvm.loop !4343

19:                                               ; preds = %8, %3
  ret void, !dbg !4345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef readonly %0, %struct.sys_memory_stats* noundef writeonly %1) local_unnamed_addr #7 !dbg !4346 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4351, metadata !DIExpression()), !dbg !4353
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !4352, metadata !DIExpression()), !dbg !4353
  %3 = icmp eq %struct.sys_heap* %0, null, !dbg !4354
  %4 = icmp eq %struct.sys_memory_stats* %1, null
  %5 = or i1 %3, %4, !dbg !4356
  br i1 %5, label %20, label %6, !dbg !4356

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4357
  %8 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !4357
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %8, i32 0, i32 3, !dbg !4358
  %10 = load i32, i32* %9, align 4, !dbg !4358
  %11 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !4359
  store i32 %10, i32* %11, align 4, !dbg !4360
  %12 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !4361
  %13 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %12, i32 0, i32 4, !dbg !4362
  %14 = load i32, i32* %13, align 4, !dbg !4362
  %15 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !4363
  store i32 %14, i32* %15, align 4, !dbg !4364
  %16 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !4365
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %16, i32 0, i32 5, !dbg !4366
  %18 = load i32, i32* %17, align 4, !dbg !4366
  %19 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !4367
  store i32 %18, i32* %19, align 4, !dbg !4368
  br label %20, !dbg !4369

20:                                               ; preds = %2, %6
  %21 = phi i32 [ 0, %6 ], [ -22, %2 ], !dbg !4353
  ret i32 %21, !dbg !4370
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx.14(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !4371 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4375, metadata !DIExpression()), !dbg !4378
  call void @llvm.dbg.value(metadata i32 %1, metadata !4376, metadata !DIExpression()), !dbg !4378
  call void @llvm.dbg.value(metadata i32 %1, metadata !4377, metadata !DIExpression()), !dbg !4378
  %3 = tail call i32 @llvm.ctlz.i32(i32 %1, i1 false), !dbg !4379, !range !3486
  %4 = sub nsw i32 31, %3, !dbg !4380
  ret i32 %4, !dbg !4381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used.15(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #7 !dbg !4382 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4386, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.value(metadata i32 %1, metadata !4387, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.value(metadata i1 %2, metadata !4388, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4391
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #26, !dbg !4392
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4389, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4390, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4391
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !4393
  %6 = bitcast i8* %5 to i16*, !dbg !4393
  %7 = load i16, i16* %6, align 2, !dbg !4393
  %8 = and i16 %7, -2, !dbg !4397
  %9 = zext i1 %2 to i16, !dbg !4397
  %10 = or i16 %8, %9, !dbg !4397
  store i16 %10, i16* %6, align 2, !dbg !4393
  ret void, !dbg !4398
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4399 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4401, metadata !DIExpression()), !dbg !4403
  call void @llvm.dbg.value(metadata i32 %1, metadata !4402, metadata !DIExpression()), !dbg !4403
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4404
  ret i32 %3, !dbg !4405
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4406 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4408, metadata !DIExpression()), !dbg !4410
  call void @llvm.dbg.value(metadata i32 %1, metadata !4409, metadata !DIExpression()), !dbg !4410
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4411
  %4 = and i32 %3, 1, !dbg !4412
  %5 = icmp ne i32 %4, 0, !dbg !4411
  ret i1 %5, !dbg !4413
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk.18(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4414 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4416, metadata !DIExpression()), !dbg !4418
  call void @llvm.dbg.value(metadata i32 %1, metadata !4417, metadata !DIExpression()), !dbg !4418
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !4419
  %4 = sub i32 %1, %3, !dbg !4420
  ret i32 %4, !dbg !4421
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field.19(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !4422 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4426, metadata !DIExpression()), !dbg !4431
  call void @llvm.dbg.value(metadata i32 %1, metadata !4427, metadata !DIExpression()), !dbg !4431
  call void @llvm.dbg.value(metadata i32 %2, metadata !4428, metadata !DIExpression()), !dbg !4431
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #26, !dbg !4432
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4429, metadata !DIExpression()), !dbg !4431
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4430, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4431
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4430, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4431
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !4433
  call void @llvm.dbg.value(metadata i8* %5, metadata !4430, metadata !DIExpression()), !dbg !4431
  %6 = bitcast i8* %5 to i16*, !dbg !4434
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !4437
  %8 = load i16, i16* %7, align 2, !dbg !4437
  %9 = zext i16 %8 to i32, !dbg !4437
  ret i32 %9, !dbg !4438
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !4439 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4443, metadata !DIExpression()), !dbg !4444
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !4445
  ret %struct.chunk_unit_t* %2, !dbg !4446
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4447 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4451, metadata !DIExpression()), !dbg !4453
  call void @llvm.dbg.value(metadata i32 %1, metadata !4452, metadata !DIExpression()), !dbg !4453
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4454
  %4 = lshr i32 %3, 1, !dbg !4455
  ret i32 %4, !dbg !4456
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4457 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4461, metadata !DIExpression()), !dbg !4463
  call void @llvm.dbg.value(metadata i32 %1, metadata !4462, metadata !DIExpression()), !dbg !4463
  %3 = shl i32 %1, 3, !dbg !4464
  %4 = add i32 %3, -4, !dbg !4465
  ret i32 %4, !dbg !4466
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4467 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4469, metadata !DIExpression()), !dbg !4471
  call void @llvm.dbg.value(metadata i32 %1, metadata !4470, metadata !DIExpression()), !dbg !4471
  %3 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef 0) #26, !dbg !4472
  %4 = icmp ugt i32 %3, %1, !dbg !4472
  br i1 %4, label %12, label %5, !dbg !4475

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4476
  %7 = load i32, i32* %6, align 4, !dbg !4476
  %8 = icmp ugt i32 %7, %1, !dbg !4476
  br i1 %8, label %9, label %12, !dbg !4479

9:                                                ; preds = %5
  %10 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4480
  %11 = icmp ult i32 %10, %7, !dbg !4480
  br label %12, !dbg !4471

12:                                               ; preds = %9, %5, %2
  %13 = phi i1 [ false, %2 ], [ false, %5 ], [ %11, %9 ], !dbg !4471
  ret i1 %13, !dbg !4483
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk.23(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4484 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4486, metadata !DIExpression()), !dbg !4488
  call void @llvm.dbg.value(metadata i32 %1, metadata !4487, metadata !DIExpression()), !dbg !4488
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !4489
  ret i32 %3, !dbg !4490
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_stress(i8* (i8*, i32)* noundef %0, void (i8*, i8*)* noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4, i8* noundef %5, i32 noundef %6, i32 noundef %7, %struct.z_heap_stress_result* nocapture noundef %8) local_unnamed_addr #1 !dbg !4491 {
  %10 = alloca %struct.z_heap_stress_rec, align 4
  call void @llvm.dbg.value(metadata i8* (i8*, i32)* %0, metadata !4508, metadata !DIExpression()), !dbg !4546
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %1, metadata !4509, metadata !DIExpression()), !dbg !4546
  call void @llvm.dbg.value(metadata i8* %2, metadata !4510, metadata !DIExpression()), !dbg !4546
  call void @llvm.dbg.value(metadata i32 %3, metadata !4511, metadata !DIExpression()), !dbg !4546
  call void @llvm.dbg.value(metadata i32 %4, metadata !4512, metadata !DIExpression()), !dbg !4546
  call void @llvm.dbg.value(metadata i8* %5, metadata !4513, metadata !DIExpression()), !dbg !4546
  call void @llvm.dbg.value(metadata i32 %6, metadata !4514, metadata !DIExpression()), !dbg !4546
  call void @llvm.dbg.value(metadata i32 %7, metadata !4515, metadata !DIExpression()), !dbg !4546
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_result* %8, metadata !4516, metadata !DIExpression()), !dbg !4546
  %11 = bitcast %struct.z_heap_stress_rec* %10 to i8*, !dbg !4547
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %11) #24, !dbg !4547
  call void @llvm.dbg.declare(metadata %struct.z_heap_stress_rec* %10, metadata !4517, metadata !DIExpression()), !dbg !4548
  %12 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 0, !dbg !4549
  store i8* (i8*, i32)* %0, i8* (i8*, i32)** %12, align 4, !dbg !4549
  %13 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 1, !dbg !4549
  store void (i8*, i8*)* %1, void (i8*, i8*)** %13, align 4, !dbg !4549
  %14 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 2, !dbg !4549
  store i8* %2, i8** %14, align 4, !dbg !4549
  %15 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 3, !dbg !4549
  store i32 %3, i32* %15, align 4, !dbg !4549
  %16 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 4, !dbg !4549
  %17 = bitcast %struct.z_heap_stress_block** %16 to i8**, !dbg !4549
  store i8* %5, i8** %17, align 4, !dbg !4549
  %18 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 5, !dbg !4549
  %19 = lshr i32 %6, 3, !dbg !4550
  store i32 %19, i32* %18, align 4, !dbg !4549
  %20 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 6, !dbg !4549
  store i32 0, i32* %20, align 4, !dbg !4549
  %21 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 7, !dbg !4549
  store i32 0, i32* %21, align 4, !dbg !4549
  %22 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 8, !dbg !4549
  store i32 %7, i32* %22, align 4, !dbg !4549
  %23 = bitcast %struct.z_heap_stress_result* %8 to i8*, !dbg !4551
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %23, i8 0, i32 24, i1 false), !dbg !4551
  call void @llvm.dbg.value(metadata i32 0, metadata !4534, metadata !DIExpression()), !dbg !4552
  %24 = icmp eq i32 %4, 0, !dbg !4553
  %25 = bitcast i8* %5 to %struct.z_heap_stress_block*, !dbg !4554
  br i1 %24, label %31, label %26, !dbg !4554

26:                                               ; preds = %9
  %27 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 2
  %28 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 0
  %29 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 1
  %30 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 3
  br label %32, !dbg !4554

31:                                               ; preds = %65, %9
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %11) #24, !dbg !4555
  ret void, !dbg !4555

32:                                               ; preds = %26, %65
  %33 = phi i32 [ 0, %26 ], [ %66, %65 ]
  %34 = phi i32 [ 0, %26 ], [ %67, %65 ]
  %35 = phi i32 [ 0, %26 ], [ %71, %65 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !4534, metadata !DIExpression()), !dbg !4552
  %36 = call fastcc zeroext i1 @rand_alloc_choice(%struct.z_heap_stress_rec* noundef nonnull %10) #26, !dbg !4556
  br i1 %36, label %37, label %50, !dbg !4557

37:                                               ; preds = %32
  %38 = tail call fastcc i32 @rand_alloc_size() #26, !dbg !4558
  call void @llvm.dbg.value(metadata i32 %38, metadata !4536, metadata !DIExpression()), !dbg !4559
  %39 = tail call i8* %0(i8* noundef %2, i32 noundef %38) #25, !dbg !4560
  call void @llvm.dbg.value(metadata i8* %39, metadata !4541, metadata !DIExpression()), !dbg !4559
  %40 = load i32, i32* %28, align 8, !dbg !4561
  %41 = add i32 %40, 1, !dbg !4561
  store i32 %41, i32* %28, align 8, !dbg !4561
  %42 = icmp eq i8* %39, null, !dbg !4562
  br i1 %42, label %65, label %43, !dbg !4564

43:                                               ; preds = %37
  %44 = load i32, i32* %29, align 4, !dbg !4565
  %45 = add i32 %44, 1, !dbg !4565
  store i32 %45, i32* %29, align 4, !dbg !4565
  %46 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %34, i32 0, !dbg !4567
  store i8* %39, i8** %46, align 4, !dbg !4568
  %47 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %34, i32 1, !dbg !4569
  store i32 %38, i32* %47, align 4, !dbg !4570
  %48 = add i32 %34, 1, !dbg !4571
  store i32 %48, i32* %20, align 4, !dbg !4571
  %49 = add i32 %33, %38, !dbg !4572
  store i32 %49, i32* %21, align 4, !dbg !4572
  br label %65, !dbg !4573

50:                                               ; preds = %32
  %51 = call fastcc i32 @rand_free_choice(%struct.z_heap_stress_rec* noundef nonnull %10) #26, !dbg !4574
  call void @llvm.dbg.value(metadata i32 %51, metadata !4542, metadata !DIExpression()), !dbg !4575
  %52 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, i32 0, !dbg !4576
  %53 = load i8*, i8** %52, align 4, !dbg !4576
  call void @llvm.dbg.value(metadata i8* %53, metadata !4544, metadata !DIExpression()), !dbg !4575
  %54 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, i32 1, !dbg !4577
  %55 = load i32, i32* %54, align 4, !dbg !4577
  call void @llvm.dbg.value(metadata i32 %55, metadata !4545, metadata !DIExpression()), !dbg !4575
  %56 = load i32, i32* %27, align 8, !dbg !4578
  %57 = add i32 %56, 1, !dbg !4578
  store i32 %57, i32* %27, align 8, !dbg !4578
  %58 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, !dbg !4579
  %59 = add i32 %34, -1, !dbg !4580
  %60 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %59, !dbg !4581
  %61 = bitcast %struct.z_heap_stress_block* %60 to i64*, !dbg !4581
  %62 = bitcast %struct.z_heap_stress_block* %58 to i64*, !dbg !4581
  %63 = load i64, i64* %61, align 4, !dbg !4581
  store i64 %63, i64* %62, align 4, !dbg !4581
  store i32 %59, i32* %20, align 4, !dbg !4582
  %64 = sub i32 %33, %55, !dbg !4583
  store i32 %64, i32* %21, align 4, !dbg !4583
  tail call void %1(i8* noundef %2, i8* noundef %53) #25, !dbg !4584
  br label %65

65:                                               ; preds = %37, %43, %50
  %66 = phi i32 [ %33, %37 ], [ %49, %43 ], [ %64, %50 ], !dbg !4585
  %67 = phi i32 [ %34, %37 ], [ %48, %43 ], [ %59, %50 ]
  %68 = zext i32 %66 to i64, !dbg !4586
  %69 = load i64, i64* %30, align 8, !dbg !4587
  %70 = add i64 %69, %68, !dbg !4587
  store i64 %70, i64* %30, align 8, !dbg !4587
  %71 = add nuw i32 %35, 1, !dbg !4588
  call void @llvm.dbg.value(metadata i32 %71, metadata !4534, metadata !DIExpression()), !dbg !4552
  %72 = icmp eq i32 %71, %4, !dbg !4553
  br i1 %72, label %31, label %32, !dbg !4554, !llvm.loop !4589
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #14

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc zeroext i1 @rand_alloc_choice(%struct.z_heap_stress_rec* nocapture noundef readonly %0) unnamed_addr #7 !dbg !4591 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* %0, metadata !4596, metadata !DIExpression()), !dbg !4603
  %2 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 6, !dbg !4604
  %3 = load i32, i32* %2, align 4, !dbg !4604
  %4 = icmp eq i32 %3, 0, !dbg !4605
  br i1 %4, label %26, label %5, !dbg !4606

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 5, !dbg !4607
  %7 = load i32, i32* %6, align 4, !dbg !4607
  %8 = icmp ult i32 %3, %7, !dbg !4608
  br i1 %8, label %9, label %26, !dbg !4609

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 7, !dbg !4610
  %11 = load i32, i32* %10, align 4, !dbg !4610
  %12 = mul i32 %11, 100, !dbg !4611
  %13 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 3, !dbg !4612
  %14 = load i32, i32* %13, align 4, !dbg !4612
  %15 = udiv i32 %12, %14, !dbg !4613
  call void @llvm.dbg.value(metadata i32 %15, metadata !4597, metadata !DIExpression()), !dbg !4614
  %16 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 8, !dbg !4615
  %17 = load i32, i32* %16, align 4, !dbg !4615
  call void @llvm.dbg.value(metadata i32 undef, metadata !4601, metadata !DIExpression()), !dbg !4614
  call void @llvm.dbg.value(metadata i32 -1, metadata !4602, metadata !DIExpression()), !dbg !4614
  %18 = icmp ult i32 %15, %17, !dbg !4616
  br i1 %18, label %19, label %22, !dbg !4618

19:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %17, metadata !4601, metadata !DIExpression()), !dbg !4614
  %20 = udiv i32 -2147483648, %17, !dbg !4619
  %21 = mul i32 %20, %15, !dbg !4621
  call void @llvm.dbg.value(metadata i32 %21, metadata !4602, metadata !DIExpression()), !dbg !4614
  br label %22, !dbg !4622

22:                                               ; preds = %19, %9
  %23 = phi i32 [ %21, %19 ], [ -1, %9 ], !dbg !4614
  call void @llvm.dbg.value(metadata i32 %23, metadata !4602, metadata !DIExpression()), !dbg !4614
  %24 = tail call fastcc i32 @rand32() #26, !dbg !4623
  %25 = icmp ugt i32 %24, %23, !dbg !4624
  br label %26

26:                                               ; preds = %5, %1, %22
  %27 = phi i1 [ %25, %22 ], [ true, %1 ], [ false, %5 ], !dbg !4625
  ret i1 %27, !dbg !4626
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc i32 @rand_alloc_size() unnamed_addr #10 !dbg !4627 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* undef, metadata !4631, metadata !DIExpression()), !dbg !4633
  %1 = tail call fastcc i32 @rand32() #26, !dbg !4634
  %2 = tail call i32 @llvm.ctlz.i32(i32 %1, i1 false), !dbg !4635, !range !3486
  call void @llvm.dbg.value(metadata i32 %2, metadata !4632, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !4633
  %3 = tail call fastcc i32 @rand32() #26, !dbg !4636
  %4 = shl i32 16, %2, !dbg !4637
  %5 = add i32 %4, -1, !dbg !4637
  %6 = and i32 %5, %3, !dbg !4638
  ret i32 %6, !dbg !4639
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @rand_free_choice(%struct.z_heap_stress_rec* nocapture noundef readonly %0) unnamed_addr #7 !dbg !4640 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* %0, metadata !4642, metadata !DIExpression()), !dbg !4643
  %2 = tail call fastcc i32 @rand32() #26, !dbg !4644
  %3 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 6, !dbg !4645
  %4 = load i32, i32* %3, align 4, !dbg !4645
  %5 = urem i32 %2, %4, !dbg !4646
  ret i32 %5, !dbg !4647
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @rand32() unnamed_addr #7 !dbg !133 {
  %1 = load i64, i64* @rand32.state, align 8, !dbg !4648
  %2 = mul i64 %1, 2862933555777941757, !dbg !4649
  %3 = add i64 %2, 3037000493, !dbg !4650
  store i64 %3, i64* @rand32.state, align 8, !dbg !4651
  %4 = lshr i64 %3, 32, !dbg !4652
  %5 = trunc i64 %4 to i32, !dbg !4653
  ret i32 %5, !dbg !4654
}

; Function Attrs: noinline nounwind optsize
define dso_local void @heap_print_info(%struct.z_heap* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !4655 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4659, metadata !DIExpression()), !dbg !4680
  call void @llvm.dbg.value(metadata i1 %1, metadata !4660, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4680
  %5 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4681
  %6 = load i32, i32* %5, align 4, !dbg !4681
  %7 = tail call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef %0, i32 noundef %6) #26, !dbg !4682
  %8 = add i32 %7, 1, !dbg !4683
  call void @llvm.dbg.value(metadata i32 %8, metadata !4662, metadata !DIExpression()), !dbg !4680
  %9 = bitcast i32* %3 to i8*, !dbg !4684
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #24, !dbg !4684
  %10 = bitcast i32* %4 to i8*, !dbg !4684
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #24, !dbg !4684
  %11 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #26, !dbg !4685
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.24, i32 0, i32 0), %struct.chunk_unit_t* noundef %11, i32 noundef %6, i32 noundef %8) #25, !dbg !4686
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([187 x i8], [187 x i8]* @.str.1.25, i32 0, i32 0)) #25, !dbg !4687
  call void @llvm.dbg.value(metadata i32 0, metadata !4661, metadata !DIExpression()), !dbg !4680
  %12 = icmp slt i32 %7, 0, !dbg !4688
  br i1 %12, label %34, label %13, !dbg !4689

13:                                               ; preds = %2, %31
  %14 = phi i32 [ %32, %31 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4661, metadata !DIExpression()), !dbg !4680
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %14, i32 0, !dbg !4690
  %16 = load i32, i32* %15, align 4, !dbg !4690
  call void @llvm.dbg.value(metadata i32 %16, metadata !4667, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 0, metadata !4671, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 0, metadata !4672, metadata !DIExpression()), !dbg !4691
  %17 = icmp eq i32 %16, 0, !dbg !4692
  br i1 %17, label %31, label %18, !dbg !4693

18:                                               ; preds = %13, %18
  %19 = phi i32 [ %25, %18 ], [ 0, %13 ], !dbg !4691
  %20 = phi i32 [ %22, %18 ], [ 0, %13 ], !dbg !4691
  %21 = phi i32 [ %26, %18 ], [ %16, %13 ], !dbg !4694
  call void @llvm.dbg.value(metadata i32 %21, metadata !4673, metadata !DIExpression()), !dbg !4694
  call void @llvm.dbg.value(metadata i32 %20, metadata !4672, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 %19, metadata !4671, metadata !DIExpression()), !dbg !4691
  %22 = add nuw nsw i32 %20, 1, !dbg !4695
  call void @llvm.dbg.value(metadata i32 %22, metadata !4672, metadata !DIExpression()), !dbg !4691
  %23 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %21) #26, !dbg !4697
  %24 = icmp ugt i32 %19, %23, !dbg !4697
  %25 = select i1 %24, i32 %19, i32 %23, !dbg !4697
  call void @llvm.dbg.value(metadata i32 %25, metadata !4671, metadata !DIExpression()), !dbg !4691
  %26 = tail call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %0, i32 noundef %21) #26, !dbg !4698
  call void @llvm.dbg.value(metadata i32 %26, metadata !4673, metadata !DIExpression()), !dbg !4694
  %27 = icmp eq i32 %26, %16, !dbg !4699
  br i1 %27, label %28, label %18, !dbg !4700, !llvm.loop !4701

28:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %22, metadata !4672, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 %25, metadata !4671, metadata !DIExpression()), !dbg !4691
  %29 = shl nuw i32 1, %14, !dbg !4704
  %30 = tail call fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* noundef %0, i32 noundef %25) #26, !dbg !4707, !range !3738
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i32 0, i32 0), i32 noundef %14, i32 noundef %29, i32 noundef %22, i32 noundef %25, i32 noundef %30) #25, !dbg !4708
  br label %31, !dbg !4709

31:                                               ; preds = %13, %28
  %32 = add nuw i32 %14, 1, !dbg !4710
  call void @llvm.dbg.value(metadata i32 %32, metadata !4661, metadata !DIExpression()), !dbg !4680
  %33 = icmp eq i32 %14, %7, !dbg !4688
  br i1 %33, label %34, label %13, !dbg !4689, !llvm.loop !4711

34:                                               ; preds = %31, %2
  br i1 %1, label %35, label %47, !dbg !4713

35:                                               ; preds = %34
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0)) #25, !dbg !4714
  call void @llvm.dbg.value(metadata i32 0, metadata !4676, metadata !DIExpression()), !dbg !4715
  br label %36, !dbg !4716

36:                                               ; preds = %45, %35
  %37 = phi i32 [ 0, %35 ], [ %46, %45 ], !dbg !4715
  call void @llvm.dbg.value(metadata i32 %37, metadata !4676, metadata !DIExpression()), !dbg !4715
  %38 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4717
  %39 = select i1 %38, i32 42, i32 45, !dbg !4717
  %40 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4720
  %41 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4721
  %42 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4722
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4, i32 0, i32 0), i32 noundef %37, i32 noundef %39, i32 noundef %40, i32 noundef %41, i32 noundef %42) #25, !dbg !4723
  %43 = load i32, i32* %5, align 4, !dbg !4724
  %44 = icmp eq i32 %37, %43, !dbg !4726
  br i1 %44, label %47, label %45, !dbg !4727

45:                                               ; preds = %36
  %46 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %37) #26, !dbg !4728
  call void @llvm.dbg.value(metadata i32 %46, metadata !4676, metadata !DIExpression()), !dbg !4715
  br label %36, !dbg !4729, !llvm.loop !4730

47:                                               ; preds = %36, %34
  call void @llvm.dbg.value(metadata i32* %3, metadata !4663, metadata !DIExpression(DW_OP_deref)), !dbg !4680
  call void @llvm.dbg.value(metadata i32* %4, metadata !4664, metadata !DIExpression(DW_OP_deref)), !dbg !4680
  call fastcc void @get_alloc_info(%struct.z_heap* noundef %0, i32* noundef nonnull %4, i32* noundef nonnull %3) #26, !dbg !4733
  %48 = load i32, i32* %5, align 4, !dbg !4734
  %49 = shl i32 %48, 3, !dbg !4735
  %50 = or i32 %49, 4, !dbg !4736
  call void @llvm.dbg.value(metadata i32 %50, metadata !4665, metadata !DIExpression()), !dbg !4680
  %51 = load i32, i32* %3, align 4, !dbg !4737
  call void @llvm.dbg.value(metadata i32 %51, metadata !4663, metadata !DIExpression()), !dbg !4680
  %52 = load i32, i32* %4, align 4, !dbg !4738
  call void @llvm.dbg.value(metadata i32 %52, metadata !4664, metadata !DIExpression()), !dbg !4680
  %53 = add i32 %52, %51, !dbg !4739
  %54 = sub i32 %50, %53, !dbg !4739
  call void @llvm.dbg.value(metadata i32 %54, metadata !4666, metadata !DIExpression()), !dbg !4680
  %55 = mul i32 %54, 1000, !dbg !4740
  %56 = lshr exact i32 %50, 1, !dbg !4741
  %57 = add i32 %55, %56, !dbg !4742
  %58 = udiv i32 %57, %50, !dbg !4743
  %59 = freeze i32 %58
  %60 = udiv i32 %59, 10, !dbg !4744
  %61 = mul i32 %60, 10
  %62 = sub i32 %59, %61
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.5, i32 0, i32 0), i32 noundef %51, i32 noundef %52, i32 noundef %54, i32 noundef %60, i32 noundef %62) #25, !dbg !4745
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #24, !dbg !4746
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #24, !dbg !4746
  ret void, !dbg !4746
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_print_info(%struct.sys_heap* nocapture noundef readonly %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !4747 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4751, metadata !DIExpression()), !dbg !4753
  call void @llvm.dbg.value(metadata i1 %1, metadata !4752, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4753
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4754
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4754
  tail call void @heap_print_info(%struct.z_heap* noundef %4, i1 noundef zeroext %1) #26, !dbg !4755
  ret void, !dbg !4756
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @sys_heap_runtime_stats_reset_max(%struct.sys_heap* noundef readonly %0) local_unnamed_addr #7 !dbg !4757 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4761, metadata !DIExpression()), !dbg !4762
  %2 = icmp eq %struct.sys_heap* %0, null, !dbg !4763
  br i1 %2, label %9, label %3, !dbg !4765

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4766
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4766
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %5, i32 0, i32 4, !dbg !4767
  %7 = load i32, i32* %6, align 4, !dbg !4767
  %8 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %5, i32 0, i32 5, !dbg !4768
  store i32 %7, i32* %8, align 4, !dbg !4769
  br label %9, !dbg !4770

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -22, %1 ], !dbg !4762
  ret i32 %10, !dbg !4771
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4772 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4785, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4782, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i8* %1, metadata !4783, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i8* %2, metadata !4784, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i32 %4, metadata !4786, metadata !DIExpression()), !dbg !4913
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4914
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #24, !dbg !4914
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4787, metadata !DIExpression()), !dbg !4915
  call void @llvm.dbg.value(metadata i32 0, metadata !4791, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i1 undef, metadata !4793, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4913
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4916

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4916

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4917
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4785, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i8* %30, metadata !4784, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i32 %29, metadata !4791, metadata !DIExpression()), !dbg !4913
  %31 = load i8, i8* %30, align 1, !dbg !4918
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4916

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4918
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4919
  call void @llvm.dbg.value(metadata i8* %34, metadata !4784, metadata !DIExpression()), !dbg !4913
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4919
  call void @llvm.dbg.value(metadata i32 %35, metadata !4795, metadata !DIExpression()), !dbg !4920
  %36 = icmp slt i32 %35, 0, !dbg !4921
  %37 = add i32 %29, 1, !dbg !4919
  call void @llvm.dbg.value(metadata i32 undef, metadata !4791, metadata !DIExpression()), !dbg !4913
  br i1 %36, label %365, label %28, !llvm.loop !4923

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4925
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4800, metadata !DIExpression()), !dbg !4926
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4926
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4845, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4848, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.value(metadata i8* %30, metadata !4851, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.value(metadata i32 -1, metadata !4852, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.value(metadata i32 -1, metadata !4853, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.value(metadata i8* null, metadata !4854, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.value(metadata i8* %14, metadata !4855, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.value(metadata i8 0, metadata !4856, metadata !DIExpression()), !dbg !4927
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !4928
  call void @llvm.dbg.value(metadata i8* %39, metadata !4784, metadata !DIExpression()), !dbg !4913
  %40 = load i24, i24* %15, align 8, !dbg !4929
  %41 = and i24 %40, 256, !dbg !4929
  %42 = icmp eq i24 %41, 0, !dbg !4929
  br i1 %42, label %51, label %43, !dbg !4931

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4932
  call void @llvm.dbg.value(metadata i8* %44, metadata !4785, metadata !DIExpression()), !dbg !4913
  %45 = bitcast i8* %27 to i32*, !dbg !4932
  %46 = load i32, i32* %45, align 4, !dbg !4932
  call void @llvm.dbg.value(metadata i32 %46, metadata !4852, metadata !DIExpression()), !dbg !4927
  %47 = icmp slt i32 %46, 0, !dbg !4934
  br i1 %47, label %48, label %56, !dbg !4936

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4937
  store i24 %49, i24* %15, align 8, !dbg !4937
  %50 = sub nsw i32 0, %46, !dbg !4939
  call void @llvm.dbg.value(metadata i32 %50, metadata !4852, metadata !DIExpression()), !dbg !4927
  br label %56, !dbg !4940

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4941
  %53 = icmp eq i24 %52, 0, !dbg !4941
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4943
  br label %56, !dbg !4943

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4944
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4927
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4785, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i32 %58, metadata !4852, metadata !DIExpression()), !dbg !4927
  %60 = and i24 %57, 1024, !dbg !4944
  %61 = icmp eq i24 %60, 0, !dbg !4944
  br i1 %61, label %69, label %62, !dbg !4945

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4946
  call void @llvm.dbg.value(metadata i8* %63, metadata !4785, metadata !DIExpression()), !dbg !4913
  %64 = bitcast i8* %59 to i32*, !dbg !4946
  %65 = load i32, i32* %64, align 4, !dbg !4946
  call void @llvm.dbg.value(metadata i32 %65, metadata !4857, metadata !DIExpression()), !dbg !4947
  %66 = icmp slt i32 %65, 0, !dbg !4948
  br i1 %66, label %67, label %74, !dbg !4950

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4951
  store i24 %68, i24* %15, align 8, !dbg !4951
  br label %74, !dbg !4953

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4954
  %71 = icmp eq i24 %70, 0, !dbg !4954
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4956
  br label %74, !dbg !4956

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4957
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4927
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4927
  call void @llvm.dbg.value(metadata i8* %77, metadata !4785, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i32 %76, metadata !4853, metadata !DIExpression()), !dbg !4927
  store i32 0, i32* %16, align 4, !dbg !4958
  store i32 0, i32* %17, align 8, !dbg !4959
  %78 = lshr i24 %75, 16, !dbg !4957
  call void @llvm.dbg.value(metadata i24 %78, metadata !4860, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4927
  %79 = lshr i24 %75, 11, !dbg !4960
  %80 = and i24 %79, 15, !dbg !4960
  %81 = zext i24 %80 to i32, !dbg !4960
  call void @llvm.dbg.value(metadata i32 %81, metadata !4861, metadata !DIExpression()), !dbg !4927
  %82 = trunc i24 %78 to i3, !dbg !4961
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4961

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4962

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4965
  call void @llvm.dbg.value(metadata i8* %85, metadata !4785, metadata !DIExpression()), !dbg !4913
  %86 = bitcast i8* %77 to i32*, !dbg !4965
  %87 = load i32, i32* %86, align 4, !dbg !4965
  %88 = sext i32 %87 to i64, !dbg !4965
  store i64 %88, i64* %20, align 8, !dbg !4967
  br label %115, !dbg !4968

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4969
  call void @llvm.dbg.value(metadata i8* %90, metadata !4785, metadata !DIExpression()), !dbg !4913
  %91 = bitcast i8* %77 to i32*, !dbg !4969
  %92 = load i32, i32* %91, align 4, !dbg !4969
  %93 = sext i32 %92 to i64, !dbg !4969
  store i64 %93, i64* %20, align 8, !dbg !4972
  br label %115, !dbg !4973

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4974
  %96 = add i32 %95, 7, !dbg !4974
  %97 = and i32 %96, -8, !dbg !4974
  %98 = inttoptr i32 %97 to i8*, !dbg !4974
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4974
  call void @llvm.dbg.value(metadata i8* %99, metadata !4785, metadata !DIExpression()), !dbg !4913
  %100 = inttoptr i32 %97 to i64*, !dbg !4974
  %101 = load i64, i64* %100, align 8, !dbg !4974
  store i64 %101, i64* %20, align 8, !dbg !4975
  br label %115, !dbg !4976

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4977
  %104 = add i32 %103, 7, !dbg !4977
  %105 = and i32 %104, -8, !dbg !4977
  %106 = inttoptr i32 %105 to i8*, !dbg !4977
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4977
  call void @llvm.dbg.value(metadata i8* %107, metadata !4785, metadata !DIExpression()), !dbg !4913
  %108 = inttoptr i32 %105 to i64*, !dbg !4977
  %109 = load i64, i64* %108, align 8, !dbg !4977
  store i64 %109, i64* %20, align 8, !dbg !4978
  br label %115, !dbg !4979

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4980
  call void @llvm.dbg.value(metadata i8* %111, metadata !4785, metadata !DIExpression()), !dbg !4913
  %112 = bitcast i8* %77 to i32*, !dbg !4980
  %113 = load i32, i32* %112, align 4, !dbg !4980
  %114 = sext i32 %113 to i64, !dbg !4981
  store i64 %114, i64* %20, align 8, !dbg !4982
  br label %115, !dbg !4983

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4984
  call void @llvm.dbg.value(metadata i8* %117, metadata !4785, metadata !DIExpression()), !dbg !4913
  %118 = trunc i24 %79 to i4, !dbg !4985
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4985

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4986
  %121 = ashr exact i64 %120, 56, !dbg !4986
  store i64 %121, i64* %20, align 8, !dbg !4989
  br label %177, !dbg !4990

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4991
  %124 = ashr exact i64 %123, 48, !dbg !4991
  store i64 %124, i64* %20, align 8, !dbg !4994
  br label %177, !dbg !4995

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4996

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4999
  call void @llvm.dbg.value(metadata i8* %127, metadata !4785, metadata !DIExpression()), !dbg !4913
  %128 = bitcast i8* %77 to i32*, !dbg !4999
  %129 = load i32, i32* %128, align 4, !dbg !4999
  %130 = zext i32 %129 to i64, !dbg !4999
  store i64 %130, i64* %20, align 8, !dbg !5001
  br label %157, !dbg !5002

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5003
  call void @llvm.dbg.value(metadata i8* %132, metadata !4785, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i8* %132, metadata !4785, metadata !DIExpression()), !dbg !4913
  %133 = bitcast i8* %77 to i32*, !dbg !5003
  %134 = load i32, i32* %133, align 4, !dbg !5003
  %135 = zext i32 %134 to i64, !dbg !5003
  store i64 %135, i64* %20, align 8, !dbg !5003
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5005
  %138 = add i32 %137, 7, !dbg !5005
  %139 = and i32 %138, -8, !dbg !5005
  %140 = inttoptr i32 %139 to i8*, !dbg !5005
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5005
  call void @llvm.dbg.value(metadata i8* %141, metadata !4785, metadata !DIExpression()), !dbg !4913
  %142 = inttoptr i32 %139 to i64*, !dbg !5005
  %143 = load i64, i64* %142, align 8, !dbg !5005
  store i64 %143, i64* %20, align 8, !dbg !5006
  br label %157, !dbg !5007

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5008
  %146 = add i32 %145, 7, !dbg !5008
  %147 = and i32 %146, -8, !dbg !5008
  %148 = inttoptr i32 %147 to i8*, !dbg !5008
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5008
  call void @llvm.dbg.value(metadata i8* %149, metadata !4785, metadata !DIExpression()), !dbg !4913
  %150 = inttoptr i32 %147 to i64*, !dbg !5008
  %151 = load i64, i64* %150, align 8, !dbg !5008
  store i64 %151, i64* %20, align 8, !dbg !5009
  br label %157, !dbg !5010

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5011
  call void @llvm.dbg.value(metadata i8* %153, metadata !4785, metadata !DIExpression()), !dbg !4913
  %154 = bitcast i8* %77 to i32*, !dbg !5011
  %155 = load i32, i32* %154, align 4, !dbg !5011
  %156 = zext i32 %155 to i64, !dbg !5012
  store i64 %156, i64* %20, align 8, !dbg !5013
  br label %157, !dbg !5014

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5015
  call void @llvm.dbg.value(metadata i8* %159, metadata !4785, metadata !DIExpression()), !dbg !4913
  %160 = trunc i24 %79 to i4, !dbg !5016
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5016

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5017
  store i64 %162, i64* %20, align 8, !dbg !5020
  br label %177, !dbg !5021

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5022
  store i64 %164, i64* %20, align 8, !dbg !5025
  br label %177, !dbg !5026

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5027
  %167 = add i32 %166, 7, !dbg !5027
  %168 = and i32 %167, -8, !dbg !5027
  %169 = inttoptr i32 %168 to i8*, !dbg !5027
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5027
  call void @llvm.dbg.value(metadata i8* %170, metadata !4785, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i8* %170, metadata !4785, metadata !DIExpression()), !dbg !4913
  %171 = inttoptr i32 %168 to double*, !dbg !5027
  %172 = load double, double* %171, align 8, !dbg !5027
  store double %172, double* %19, align 8, !dbg !5027
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5031
  call void @llvm.dbg.value(metadata i8* %174, metadata !4785, metadata !DIExpression()), !dbg !4913
  %175 = bitcast i8* %77 to i8**, !dbg !5031
  %176 = load i8*, i8** %175, align 4, !dbg !5031
  store i8* %176, i8** %18, align 8, !dbg !5034
  br label %177, !dbg !5035

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4927
  call void @llvm.dbg.value(metadata i8* %178, metadata !4785, metadata !DIExpression()), !dbg !4913
  %179 = and i24 %75, 3, !dbg !5036
  %180 = icmp eq i24 %179, 0, !dbg !5036
  br i1 %180, label %185, label %181, !dbg !5036

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !5037
  call void @llvm.dbg.value(metadata i32 %182, metadata !4862, metadata !DIExpression()), !dbg !5038
  %183 = icmp slt i32 %182, 0, !dbg !5039
  %184 = add i32 %182, %29, !dbg !5037
  call void @llvm.dbg.value(metadata i32 undef, metadata !4791, metadata !DIExpression()), !dbg !4913
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5041
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5042

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !5043
  call void @llvm.dbg.value(metadata i32 %188, metadata !4866, metadata !DIExpression()), !dbg !5044
  %189 = icmp slt i32 %188, 0, !dbg !5045
  %190 = add i32 %29, 1, !dbg !5043
  call void @llvm.dbg.value(metadata i32 undef, metadata !4791, metadata !DIExpression()), !dbg !4913
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5047
  call void @llvm.dbg.value(metadata i8* %192, metadata !4854, metadata !DIExpression()), !dbg !4927
  %193 = icmp sgt i32 %76, -1, !dbg !5048
  br i1 %193, label %194, label %196, !dbg !5050

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !5051
  call void @llvm.dbg.value(metadata i32 %195, metadata !4869, metadata !DIExpression()), !dbg !5053
  br label %241, !dbg !5054

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !5055
  call void @llvm.dbg.value(metadata i32 %197, metadata !4869, metadata !DIExpression()), !dbg !5053
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4854, metadata !DIExpression()), !dbg !4927
  %199 = load i64, i64* %20, align 8, !dbg !5057
  %200 = trunc i64 %199 to i8, !dbg !5058
  store i8 %200, i8* %10, align 1, !dbg !5059
  call void @llvm.dbg.value(metadata i8* %23, metadata !4855, metadata !DIExpression()), !dbg !4927
  br label %245, !dbg !5060

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5061
  %203 = icmp eq i24 %202, 0, !dbg !5061
  %204 = trunc i24 %75 to i8, !dbg !5063
  %205 = shl i8 %204, 1, !dbg !5063
  %206 = and i8 %205, 32, !dbg !5063
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5063
  call void @llvm.dbg.value(metadata i8 %207, metadata !4856, metadata !DIExpression()), !dbg !4927
  %208 = load i64, i64* %20, align 8, !dbg !5064
  call void @llvm.dbg.value(metadata i64 %208, metadata !4792, metadata !DIExpression()), !dbg !4913
  %209 = icmp slt i64 %208, 0, !dbg !5065
  br i1 %209, label %210, label %212, !dbg !5067

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4856, metadata !DIExpression()), !dbg !4927
  %211 = sub nsw i64 0, %208, !dbg !5068
  store i64 %211, i64* %20, align 8, !dbg !5070
  br label %212, !dbg !5071

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4927
  call void @llvm.dbg.value(metadata i8 %213, metadata !4856, metadata !DIExpression()), !dbg !4927
  %214 = load i64, i64* %20, align 8, !dbg !5072
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5073
  call void @llvm.dbg.value(metadata i8* %215, metadata !4854, metadata !DIExpression()), !dbg !4927
  br label %216, !dbg !5074

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5075
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5076
  call void @llvm.dbg.value(metadata i8* %218, metadata !4854, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.value(metadata i8 %217, metadata !4856, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.label(metadata !4912), !dbg !5077
  %219 = icmp sgt i32 %76, -1, !dbg !5078
  br i1 %219, label %222, label %220, !dbg !5079

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5080
  br label %245, !dbg !5079

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5082
  %224 = sub i32 %22, %223, !dbg !5082
  call void @llvm.dbg.value(metadata i32 %224, metadata !4871, metadata !DIExpression()), !dbg !5083
  %225 = load i24, i24* %15, align 8, !dbg !5084
  %226 = and i24 %225, -65, !dbg !5084
  store i24 %226, i24* %15, align 8, !dbg !5084
  %227 = icmp ugt i32 %76, %224, !dbg !5085
  br i1 %227, label %228, label %245, !dbg !5087

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5088
  store i32 %229, i32* %16, align 4, !dbg !5090
  br label %245, !dbg !5091

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5092
  %232 = icmp eq i8* %231, null, !dbg !5094
  br i1 %232, label %245, label %233, !dbg !5095

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5096
  %235 = zext i32 %234 to i64, !dbg !5096
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5098
  call void @llvm.dbg.value(metadata i8* %236, metadata !4854, metadata !DIExpression()), !dbg !4927
  %237 = load i24, i24* %15, align 8, !dbg !5099
  %238 = or i24 %237, 1048576, !dbg !5099
  store i24 %238, i24* %15, align 8, !dbg !5099
  store i8 120, i8* %21, align 1, !dbg !5100
  br label %216, !dbg !5101

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5102
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !5105
  br label %363, !dbg !5106

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5107
  call void @llvm.dbg.value(metadata i32 %242, metadata !4869, metadata !DIExpression()), !dbg !5053
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5108
  call void @llvm.dbg.value(metadata i32 -1, metadata !4853, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.value(metadata i32 %29, metadata !4791, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i8* %192, metadata !4854, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.value(metadata i8* %243, metadata !4855, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.value(metadata i8 0, metadata !4856, metadata !DIExpression()), !dbg !4927
  %244 = icmp eq i8* %192, null, !dbg !5109
  br i1 %244, label %363, label %245, !dbg !5111, !llvm.loop !4923

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5080
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4874, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4927
  call void @llvm.dbg.value(metadata i32 0, metadata !4875, metadata !DIExpression()), !dbg !4927
  %250 = zext i8 %249 to i32, !dbg !5112
  %251 = icmp eq i8 %249, 0, !dbg !5114
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4874, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4927
  call void @llvm.dbg.value(metadata i32 undef, metadata !4874, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4874, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4927
  call void @llvm.dbg.value(metadata i32 undef, metadata !4874, metadata !DIExpression()), !dbg !4927
  %252 = icmp sgt i32 %58, 0, !dbg !5115
  br i1 %252, label %253, label %302, !dbg !5116

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5080
  %255 = icmp eq i24 %254, 0, !dbg !5080
  %256 = ptrtoint i8* %248 to i32, !dbg !5117
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4874, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4927
  %257 = ptrtoint i8* %247 to i32, !dbg !5117
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4874, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4927
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4874, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4927
  %258 = xor i1 %251, true, !dbg !5118
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4874, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4927
  %259 = sext i1 %258 to i32, !dbg !5118
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4874, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4927
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4874, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4927
  %260 = lshr i24 %246, 19, !dbg !5119
  %261 = and i24 %260, 1, !dbg !5119
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5119
  %263 = zext i24 %262 to i32, !dbg !5119
  %264 = add i32 %257, %259, !dbg !5119
  %265 = add i32 %256, %263, !dbg !5119
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4874, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4927
  %266 = and i24 %246, 4194304, !dbg !5120
  %267 = icmp eq i24 %266, 0, !dbg !5120
  %268 = load i32, i32* %16, align 4, !dbg !5122
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4874, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4927
  call void @llvm.dbg.value(metadata i32 undef, metadata !4874, metadata !DIExpression()), !dbg !4927
  %269 = load i32, i32* %17, align 8, !dbg !5123
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5123
  call void @llvm.dbg.value(metadata i32 undef, metadata !4874, metadata !DIExpression()), !dbg !4927
  %271 = add i32 %264, %58, !dbg !5123
  %272 = add i32 %265, %268, !dbg !5123
  %273 = add i32 %272, %270, !dbg !5124
  %274 = sub i32 %271, %273, !dbg !5124
  call void @llvm.dbg.value(metadata i32 %274, metadata !4852, metadata !DIExpression()), !dbg !4927
  %275 = and i24 %246, 4, !dbg !5125
  %276 = icmp eq i24 %275, 0, !dbg !5125
  br i1 %276, label %277, label %302, !dbg !5126

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4876, metadata !DIExpression()), !dbg !5127
  %278 = and i24 %246, 64, !dbg !5128
  %279 = icmp eq i24 %278, 0, !dbg !5128
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5129
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5129
  %282 = select i1 %279, i32 32, i32 48, !dbg !5129
  br i1 %280, label %287, label %283, !dbg !5129

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !5130
  call void @llvm.dbg.value(metadata i32 %284, metadata !4881, metadata !DIExpression()), !dbg !5131
  %285 = icmp slt i32 %284, 0, !dbg !5132
  %286 = add i32 %29, 1, !dbg !5130
  call void @llvm.dbg.value(metadata i32 undef, metadata !4791, metadata !DIExpression()), !dbg !4913
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4927
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4917
  call void @llvm.dbg.value(metadata i32 %290, metadata !4791, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i8 undef, metadata !4876, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.value(metadata i8 %288, metadata !4856, metadata !DIExpression()), !dbg !4927
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5134
  %292 = add i32 %291, -1, !dbg !5134
  br label %293, !dbg !5134

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5135
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4917
  call void @llvm.dbg.value(metadata i32 %295, metadata !4791, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i32 %294, metadata !4852, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.value(metadata i32 %294, metadata !4852, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4927
  %296 = icmp sgt i32 %294, 0, !dbg !5136
  br i1 %296, label %297, label %302, !dbg !5134

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5137
  call void @llvm.dbg.value(metadata i32 %298, metadata !4852, metadata !DIExpression()), !dbg !4927
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !5138
  call void @llvm.dbg.value(metadata i32 %299, metadata !4887, metadata !DIExpression()), !dbg !5139
  %300 = icmp slt i32 %299, 0, !dbg !5140
  %301 = add i32 %295, 1, !dbg !5138
  call void @llvm.dbg.value(metadata i32 undef, metadata !4791, metadata !DIExpression()), !dbg !4913
  br i1 %300, label %361, label %293, !llvm.loop !5142

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4927
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4927
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4917
  call void @llvm.dbg.value(metadata i32 %305, metadata !4791, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i32 %304, metadata !4852, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.value(metadata i8 %303, metadata !4856, metadata !DIExpression()), !dbg !4927
  %306 = icmp eq i8 %303, 0, !dbg !5144
  br i1 %306, label %312, label %307, !dbg !5145

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5146
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !5147
  call void @llvm.dbg.value(metadata i32 %309, metadata !4890, metadata !DIExpression()), !dbg !5148
  %310 = icmp slt i32 %309, 0, !dbg !5149
  %311 = add i32 %305, 1, !dbg !5147
  call void @llvm.dbg.value(metadata i32 undef, metadata !4791, metadata !DIExpression()), !dbg !4913
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4917
  call void @llvm.dbg.value(metadata i32 %313, metadata !4791, metadata !DIExpression()), !dbg !4913
  %314 = lshr i24 %246, 20, !dbg !5151
  %315 = lshr i24 %246, 19, !dbg !5152
  %316 = or i24 %314, %315, !dbg !5153
  %317 = and i24 %316, 1, !dbg !5153
  %318 = icmp eq i24 %317, 0, !dbg !5153
  br i1 %318, label %323, label %319, !dbg !5154

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5155
  call void @llvm.dbg.value(metadata i32 %320, metadata !4894, metadata !DIExpression()), !dbg !5156
  %321 = icmp slt i32 %320, 0, !dbg !5157
  %322 = add i32 %313, 1, !dbg !5155
  call void @llvm.dbg.value(metadata i32 undef, metadata !4791, metadata !DIExpression()), !dbg !4913
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4917
  call void @llvm.dbg.value(metadata i32 %324, metadata !4791, metadata !DIExpression()), !dbg !4913
  %325 = and i24 %246, 1048576, !dbg !5159
  %326 = icmp eq i24 %325, 0, !dbg !5159
  br i1 %326, label %333, label %327, !dbg !5160

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5161
  %329 = zext i8 %328 to i32, !dbg !5161
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !5161
  call void @llvm.dbg.value(metadata i32 %330, metadata !4900, metadata !DIExpression()), !dbg !5162
  %331 = icmp slt i32 %330, 0, !dbg !5163
  %332 = add i32 %324, 1, !dbg !5161
  call void @llvm.dbg.value(metadata i32 undef, metadata !4791, metadata !DIExpression()), !dbg !4913
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4917
  call void @llvm.dbg.value(metadata i32 %334, metadata !4791, metadata !DIExpression()), !dbg !4913
  %335 = load i32, i32* %16, align 4, !dbg !5165
  call void @llvm.dbg.value(metadata i32 %335, metadata !4875, metadata !DIExpression()), !dbg !4927
  br label %336, !dbg !5166

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5167
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4917
  call void @llvm.dbg.value(metadata i32 %338, metadata !4791, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i32 %337, metadata !4875, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4927
  %339 = icmp sgt i32 %337, 0, !dbg !5168
  br i1 %339, label %340, label %345, !dbg !5166

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5169
  call void @llvm.dbg.value(metadata i32 %341, metadata !4875, metadata !DIExpression()), !dbg !4927
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5170
  call void @llvm.dbg.value(metadata i32 %342, metadata !4904, metadata !DIExpression()), !dbg !5171
  %343 = icmp slt i32 %342, 0, !dbg !5172
  %344 = add i32 %338, 1, !dbg !5170
  call void @llvm.dbg.value(metadata i32 undef, metadata !4791, metadata !DIExpression()), !dbg !4913
  br i1 %343, label %361, label %336, !llvm.loop !5174

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !5176
  call void @llvm.dbg.value(metadata i32 %346, metadata !4907, metadata !DIExpression()), !dbg !5177
  %347 = icmp slt i32 %346, 0, !dbg !5178
  call void @llvm.dbg.value(metadata i32 undef, metadata !4791, metadata !DIExpression()), !dbg !4913
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5176
  call void @llvm.dbg.value(metadata i32 %349, metadata !4791, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i32 %304, metadata !4852, metadata !DIExpression()), !dbg !4927
  %350 = icmp sgt i32 %304, 0, !dbg !5180
  br i1 %350, label %351, label %363, !dbg !5181

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5181
  %353 = add i32 %352, %338, !dbg !5181
  br label %354, !dbg !5181

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4791, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i32 %355, metadata !4852, metadata !DIExpression()), !dbg !4927
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !5182
  call void @llvm.dbg.value(metadata i32 %356, metadata !4909, metadata !DIExpression()), !dbg !5183
  %357 = icmp slt i32 %356, 0, !dbg !5184
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5186
  call void @llvm.dbg.value(metadata i32 undef, metadata !4791, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4913
  call void @llvm.dbg.value(metadata i32 %359, metadata !4852, metadata !DIExpression()), !dbg !4927
  %360 = icmp sgt i32 %355, 1, !dbg !5180
  br i1 %360, label %354, label %363, !dbg !5181, !llvm.loop !5187

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4791, metadata !DIExpression()), !dbg !4913
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4924
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4917
  call void @llvm.dbg.value(metadata i32 %364, metadata !4791, metadata !DIExpression()), !dbg !4913
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4924
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4913
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #24, !dbg !5189
  ret i32 %366, !dbg !5189
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5190 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5194, metadata !DIExpression()), !dbg !5196
  call void @llvm.dbg.value(metadata i8* %1, metadata !5195, metadata !DIExpression()), !dbg !5196
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5197
  store i24 0, i24* %3, align 4, !dbg !5197
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5197
  store i8 0, i8* %4, align 1, !dbg !5197
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5197
  store i32 0, i32* %5, align 4, !dbg !5197
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5197
  store i32 0, i32* %6, align 4, !dbg !5197
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5198
  call void @llvm.dbg.value(metadata i8* %7, metadata !5195, metadata !DIExpression()), !dbg !5196
  %8 = load i8, i8* %7, align 1, !dbg !5199
  %9 = icmp eq i8 %8, 37, !dbg !5201
  br i1 %9, label %10, label %12, !dbg !5202

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5203
  call void @llvm.dbg.value(metadata i8* %11, metadata !5195, metadata !DIExpression()), !dbg !5196
  store i8 37, i8* %4, align 1, !dbg !5205
  br label %18, !dbg !5206

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !5207
  call void @llvm.dbg.value(metadata i8* %13, metadata !5195, metadata !DIExpression()), !dbg !5196
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !5208
  call void @llvm.dbg.value(metadata i8* %14, metadata !5195, metadata !DIExpression()), !dbg !5196
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !5209
  call void @llvm.dbg.value(metadata i8* %15, metadata !5195, metadata !DIExpression()), !dbg !5196
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !5210
  call void @llvm.dbg.value(metadata i8* %16, metadata !5195, metadata !DIExpression()), !dbg !5196
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !5211
  call void @llvm.dbg.value(metadata i8* %17, metadata !5195, metadata !DIExpression()), !dbg !5196
  br label %18, !dbg !5212

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5196
  ret i8* %19, !dbg !5213
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5214 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5218, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata i8* %1, metadata !5219, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata i8* %2, metadata !5220, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata i8* %3, metadata !5221, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata i32 0, metadata !5222, metadata !DIExpression()), !dbg !5225
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5226

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5227
  call void @llvm.dbg.value(metadata i32 %9, metadata !5222, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata i8* %8, metadata !5220, metadata !DIExpression()), !dbg !5225
  %10 = icmp ult i8* %8, %3, !dbg !5228
  br i1 %10, label %11, label %13, !dbg !5229

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5230
  br label %17, !dbg !5229

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5231

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5232
  %16 = icmp eq i8 %15, 0, !dbg !5231
  br i1 %16, label %24, label %17, !dbg !5226

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5230
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5233
  call void @llvm.dbg.value(metadata i8* %19, metadata !5220, metadata !DIExpression()), !dbg !5225
  %20 = zext i8 %18 to i32, !dbg !5234
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5235
  call void @llvm.dbg.value(metadata i32 %21, metadata !5223, metadata !DIExpression()), !dbg !5236
  %22 = icmp slt i32 %21, 0, !dbg !5237
  %23 = add i32 %9, 1, !dbg !5239
  call void @llvm.dbg.value(metadata i32 undef, metadata !5222, metadata !DIExpression()), !dbg !5225
  br i1 %22, label %24, label %7, !llvm.loop !5240

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5225
  ret i32 %25, !dbg !5242
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !5243 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5247, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5248, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.value(metadata i8* %2, metadata !5249, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.value(metadata i8* %3, metadata !5250, metadata !DIExpression()), !dbg !5257
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5258
  %6 = load i8, i8* %5, align 1, !dbg !5258
  %7 = zext i8 %6 to i32, !dbg !5259
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !5260
  %9 = icmp eq i32 %8, 0, !dbg !5260
  call void @llvm.dbg.value(metadata i1 %9, metadata !5251, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5257
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !5261
  call void @llvm.dbg.value(metadata i32 %10, metadata !5252, metadata !DIExpression()), !dbg !5257
  %11 = ptrtoint i8* %3 to i32, !dbg !5262
  %12 = ptrtoint i8* %2 to i32, !dbg !5262
  %13 = sub i32 %11, %12, !dbg !5262
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5263
  call void @llvm.dbg.value(metadata i8* %14, metadata !5254, metadata !DIExpression()), !dbg !5257
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5264

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5257
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5247, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.value(metadata i8* %18, metadata !5254, metadata !DIExpression()), !dbg !5257
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5265
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5266
  call void @llvm.dbg.value(metadata i32 %25, metadata !5255, metadata !DIExpression()), !dbg !5267
  %26 = icmp ult i32 %25, 10, !dbg !5268
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5269
  %28 = add i32 %27, %25, !dbg !5267
  %29 = trunc i32 %28 to i8, !dbg !5269
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5270
  call void @llvm.dbg.value(metadata i8* %30, metadata !5254, metadata !DIExpression()), !dbg !5257
  store i8 %29, i8* %30, align 1, !dbg !5271
  call void @llvm.dbg.value(metadata i64 %22, metadata !5247, metadata !DIExpression()), !dbg !5257
  %31 = icmp uge i64 %19, %15, !dbg !5272
  %32 = icmp ugt i8* %30, %2, !dbg !5273
  %33 = and i1 %31, %32, !dbg !5273
  br i1 %33, label %17, label %34, !dbg !5274, !llvm.loop !5275

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5277
  %36 = load i24, i24* %35, align 4, !dbg !5277
  %37 = and i24 %36, 32, !dbg !5277
  %38 = icmp eq i24 %37, 0, !dbg !5277
  br i1 %38, label %44, label %39, !dbg !5279

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5280

40:                                               ; preds = %39
  br label %41, !dbg !5282

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5286
  store i24 %43, i24* %35, align 4, !dbg !5286
  br label %44, !dbg !5287

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5287
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #7 !dbg !5288 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5294, metadata !DIExpression()), !dbg !5297
  call void @llvm.dbg.value(metadata i8* %1, metadata !5295, metadata !DIExpression()), !dbg !5297
  call void @llvm.dbg.value(metadata i32 %2, metadata !5296, metadata !DIExpression()), !dbg !5297
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5298
  %5 = load i24, i24* %4, align 4, !dbg !5298
  %6 = lshr i24 %5, 11, !dbg !5298
  %7 = and i24 %6, 15, !dbg !5298
  %8 = zext i24 %7 to i32, !dbg !5298
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5299

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5300
  store i32 %2, i32* %10, align 4, !dbg !5302
  br label %28, !dbg !5303

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5304
  store i8 %12, i8* %1, align 1, !dbg !5305
  br label %28, !dbg !5306

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5307
  %15 = bitcast i8* %1 to i16*, !dbg !5308
  store i16 %14, i16* %15, align 2, !dbg !5309
  br label %28, !dbg !5310

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5311
  store i32 %2, i32* %17, align 4, !dbg !5312
  br label %28, !dbg !5313

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5314
  %20 = bitcast i8* %1 to i64*, !dbg !5315
  store i64 %19, i64* %20, align 8, !dbg !5316
  br label %28, !dbg !5317

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5318
  %23 = bitcast i8* %1 to i64*, !dbg !5319
  store i64 %22, i64* %23, align 8, !dbg !5320
  br label %28, !dbg !5321

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5322
  store i32 %2, i32* %25, align 4, !dbg !5323
  br label %28, !dbg !5324

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5325
  store i32 %2, i32* %27, align 4, !dbg !5326
  br label %28, !dbg !5327

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5328
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !5329 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5332, metadata !DIExpression()), !dbg !5333
  %2 = add i32 %0, -65, !dbg !5334
  %3 = icmp ult i32 %2, 26, !dbg !5335
  %4 = zext i1 %3 to i32, !dbg !5335
  ret i32 %4, !dbg !5336
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !5337 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5341, metadata !DIExpression()), !dbg !5342
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5343

2:                                                ; preds = %1
  br label %4, !dbg !5344

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5346

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5347
  ret i32 %5, !dbg !5348
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5349 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5351, metadata !DIExpression()), !dbg !5354
  call void @llvm.dbg.value(metadata i8* %1, metadata !5352, metadata !DIExpression()), !dbg !5354
  call void @llvm.dbg.value(metadata i8 1, metadata !5353, metadata !DIExpression()), !dbg !5354
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5355

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5353, metadata !DIExpression()), !dbg !5354
  call void @llvm.dbg.value(metadata i8* %5, metadata !5352, metadata !DIExpression()), !dbg !5354
  %6 = load i8, i8* %5, align 1, !dbg !5356
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5358

7:                                                ; preds = %4
  br label %11, !dbg !5359

8:                                                ; preds = %4
  br label %11, !dbg !5361

9:                                                ; preds = %4
  br label %11, !dbg !5362

10:                                               ; preds = %4
  br label %11, !dbg !5363

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5364
  %14 = or i24 %13, %12, !dbg !5364
  store i24 %14, i24* %3, align 4, !dbg !5364
  call void @llvm.dbg.value(metadata i8 poison, metadata !5353, metadata !DIExpression()), !dbg !5354
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5352, metadata !DIExpression()), !dbg !5354
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5353, metadata !DIExpression()), !dbg !5354
  call void @llvm.dbg.value(metadata i8* %15, metadata !5352, metadata !DIExpression()), !dbg !5354
  %17 = load i24, i24* %3, align 4, !dbg !5365
  %18 = and i24 %17, 68, !dbg !5367
  %19 = icmp eq i24 %18, 68, !dbg !5367
  br i1 %19, label %20, label %22, !dbg !5367

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5368
  store i24 %21, i24* %3, align 4, !dbg !5368
  br label %22, !dbg !5370

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5371
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5372 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5374, metadata !DIExpression()), !dbg !5378
  call void @llvm.dbg.value(metadata i8* %1, metadata !5375, metadata !DIExpression()), !dbg !5378
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5379
  %5 = load i24, i24* %4, align 4, !dbg !5380
  %6 = or i24 %5, 128, !dbg !5380
  store i24 %6, i24* %4, align 4, !dbg !5380
  call void @llvm.dbg.value(metadata i8* %1, metadata !5375, metadata !DIExpression()), !dbg !5378
  %7 = load i8, i8* %1, align 1, !dbg !5381
  %8 = icmp eq i8 %7, 42, !dbg !5383
  br i1 %8, label %9, label %12, !dbg !5384

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5385
  store i24 %10, i24* %4, align 4, !dbg !5385
  call void @llvm.dbg.value(metadata i8* %1, metadata !5375, metadata !DIExpression()), !dbg !5378
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5387
  call void @llvm.dbg.value(metadata i8* %11, metadata !5375, metadata !DIExpression()), !dbg !5378
  store i8* %11, i8** %3, align 4, !dbg !5387
  br label %29, !dbg !5388

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5376, metadata !DIExpression()), !dbg !5378
  call void @llvm.dbg.value(metadata i8** %3, metadata !5375, metadata !DIExpression(DW_OP_deref)), !dbg !5378
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5389
  call void @llvm.dbg.value(metadata i32 %13, metadata !5377, metadata !DIExpression()), !dbg !5378
  %14 = load i8*, i8** %3, align 4, !dbg !5390
  call void @llvm.dbg.value(metadata i8* %14, metadata !5375, metadata !DIExpression()), !dbg !5378
  %15 = icmp eq i8* %14, %1, !dbg !5392
  br i1 %15, label %29, label %16, !dbg !5393

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5394
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5396
  store i32 %13, i32* %18, align 4, !dbg !5397
  %19 = lshr i32 %13, 31, !dbg !5398
  %20 = lshr i24 %17, 1, !dbg !5399
  %21 = and i24 %20, 1, !dbg !5399
  %22 = zext i24 %21 to i32, !dbg !5399
  %23 = or i32 %19, %22, !dbg !5399
  %24 = trunc i32 %23 to i24, !dbg !5399
  %25 = shl nuw nsw i24 %24, 1, !dbg !5399
  %26 = and i24 %17, -131, !dbg !5399
  %27 = or i24 %26, 128, !dbg !5399
  %28 = or i24 %25, %27, !dbg !5399
  store i24 %28, i24* %4, align 4, !dbg !5399
  br label %29, !dbg !5400

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5378
  ret i8* %30, !dbg !5401
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5402 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5404, metadata !DIExpression()), !dbg !5407
  call void @llvm.dbg.value(metadata i8* %1, metadata !5405, metadata !DIExpression()), !dbg !5407
  %4 = load i8, i8* %1, align 1, !dbg !5408
  %5 = icmp eq i8 %4, 46, !dbg !5409
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5410
  %7 = load i24, i24* %6, align 4, !dbg !5411
  %8 = select i1 %5, i24 512, i24 0, !dbg !5411
  %9 = and i24 %7, -513, !dbg !5411
  %10 = or i24 %9, %8, !dbg !5411
  store i24 %10, i24* %6, align 4, !dbg !5411
  br i1 %5, label %11, label %32, !dbg !5412

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5405, metadata !DIExpression()), !dbg !5407
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5413
  call void @llvm.dbg.value(metadata i8* %12, metadata !5405, metadata !DIExpression()), !dbg !5407
  store i8* %12, i8** %3, align 4, !dbg !5413
  %13 = load i8, i8* %12, align 1, !dbg !5414
  %14 = icmp eq i8 %13, 42, !dbg !5416
  br i1 %14, label %15, label %18, !dbg !5417

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5418
  store i24 %16, i24* %6, align 4, !dbg !5418
  call void @llvm.dbg.value(metadata i8* %12, metadata !5405, metadata !DIExpression()), !dbg !5407
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5420
  call void @llvm.dbg.value(metadata i8* %17, metadata !5405, metadata !DIExpression()), !dbg !5407
  store i8* %17, i8** %3, align 4, !dbg !5420
  br label %32, !dbg !5421

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5405, metadata !DIExpression(DW_OP_deref)), !dbg !5407
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5422
  call void @llvm.dbg.value(metadata i32 %19, metadata !5406, metadata !DIExpression()), !dbg !5407
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5423
  store i32 %19, i32* %20, align 4, !dbg !5424
  %21 = lshr i32 %19, 31, !dbg !5425
  %22 = load i24, i24* %6, align 4, !dbg !5426
  %23 = lshr i24 %22, 1, !dbg !5426
  %24 = and i24 %23, 1, !dbg !5426
  %25 = zext i24 %24 to i32, !dbg !5426
  %26 = or i32 %21, %25, !dbg !5426
  %27 = trunc i32 %26 to i24, !dbg !5426
  %28 = shl nuw nsw i24 %27, 1, !dbg !5426
  %29 = and i24 %22, -3, !dbg !5426
  %30 = or i24 %28, %29, !dbg !5426
  store i24 %30, i24* %6, align 4, !dbg !5426
  %31 = load i8*, i8** %3, align 4, !dbg !5427
  call void @llvm.dbg.value(metadata i8* %31, metadata !5405, metadata !DIExpression()), !dbg !5407
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5407
  ret i8* %33, !dbg !5428
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5429 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5431, metadata !DIExpression()), !dbg !5433
  call void @llvm.dbg.value(metadata i8* %1, metadata !5432, metadata !DIExpression()), !dbg !5433
  %3 = load i8, i8* %1, align 1, !dbg !5434
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5435

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5436
  call void @llvm.dbg.value(metadata i8* %5, metadata !5432, metadata !DIExpression()), !dbg !5433
  %6 = load i8, i8* %5, align 1, !dbg !5439
  %7 = icmp eq i8 %6, 104, !dbg !5440
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5441
  %9 = load i24, i24* %8, align 4, !dbg !5441
  %10 = and i24 %9, -30721, !dbg !5441
  br i1 %7, label %11, label %14, !dbg !5442

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5443
  store i24 %12, i24* %8, align 4, !dbg !5443
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5445
  call void @llvm.dbg.value(metadata i8* %13, metadata !5432, metadata !DIExpression()), !dbg !5433
  br label %56, !dbg !5446

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5447
  store i24 %15, i24* %8, align 4, !dbg !5447
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5449
  call void @llvm.dbg.value(metadata i8* %17, metadata !5432, metadata !DIExpression()), !dbg !5433
  %18 = load i8, i8* %17, align 1, !dbg !5451
  %19 = icmp eq i8 %18, 108, !dbg !5452
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5453
  %21 = load i24, i24* %20, align 4, !dbg !5453
  %22 = and i24 %21, -30721, !dbg !5453
  br i1 %19, label %23, label %26, !dbg !5454

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5455
  store i24 %24, i24* %20, align 4, !dbg !5455
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5457
  call void @llvm.dbg.value(metadata i8* %25, metadata !5432, metadata !DIExpression()), !dbg !5433
  br label %56, !dbg !5458

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5459
  store i24 %27, i24* %20, align 4, !dbg !5459
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5461
  %30 = load i24, i24* %29, align 4, !dbg !5462
  %31 = and i24 %30, -30721, !dbg !5462
  %32 = or i24 %31, 10240, !dbg !5462
  store i24 %32, i24* %29, align 4, !dbg !5462
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5463
  call void @llvm.dbg.value(metadata i8* %33, metadata !5432, metadata !DIExpression()), !dbg !5433
  br label %56, !dbg !5464

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5465
  %36 = load i24, i24* %35, align 4, !dbg !5466
  %37 = and i24 %36, -30721, !dbg !5466
  %38 = or i24 %37, 12288, !dbg !5466
  store i24 %38, i24* %35, align 4, !dbg !5466
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5467
  call void @llvm.dbg.value(metadata i8* %39, metadata !5432, metadata !DIExpression()), !dbg !5433
  br label %56, !dbg !5468

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5469
  %42 = load i24, i24* %41, align 4, !dbg !5470
  %43 = and i24 %42, -30721, !dbg !5470
  %44 = or i24 %43, 14336, !dbg !5470
  store i24 %44, i24* %41, align 4, !dbg !5470
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5471
  call void @llvm.dbg.value(metadata i8* %45, metadata !5432, metadata !DIExpression()), !dbg !5433
  br label %56, !dbg !5472

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5473
  %48 = load i24, i24* %47, align 4, !dbg !5474
  %49 = and i24 %48, -30723, !dbg !5474
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5475
  call void @llvm.dbg.value(metadata i8* %50, metadata !5432, metadata !DIExpression()), !dbg !5433
  %51 = or i24 %49, 16386, !dbg !5476
  store i24 %51, i24* %47, align 4, !dbg !5476
  br label %56, !dbg !5477

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5478
  %54 = load i24, i24* %53, align 4, !dbg !5479
  %55 = and i24 %54, -30721, !dbg !5479
  store i24 %55, i24* %53, align 4, !dbg !5479
  br label %56, !dbg !5480

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5432, metadata !DIExpression()), !dbg !5433
  ret i8* %57, !dbg !5481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5482 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5484, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.value(metadata i8* %1, metadata !5485, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.value(metadata i8 0, metadata !5486, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.value(metadata i8* %1, metadata !5485, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5489
  %3 = load i8, i8* %1, align 1, !dbg !5490
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5491
  store i8 %3, i8* %4, align 1, !dbg !5492
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5493

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5494

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5495
  %9 = load i24, i24* %8, align 4, !dbg !5495
  %10 = and i24 %9, -458753, !dbg !5495
  %11 = or i24 %10, %7, !dbg !5495
  call void @llvm.dbg.label(metadata !5487), !dbg !5496
  %12 = and i24 %9, 30720, !dbg !5497
  %13 = icmp eq i24 %12, 16384, !dbg !5497
  %14 = zext i1 %13 to i24, !dbg !5499
  %15 = or i24 %11, %14, !dbg !5499
  %16 = icmp eq i8 %3, 99, !dbg !5500
  br i1 %16, label %17, label %43, !dbg !5502

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5503
  %19 = icmp ne i24 %18, 0, !dbg !5503
  call void @llvm.dbg.value(metadata i1 %19, metadata !5486, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5489
  br label %43, !dbg !5505

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5506
  %22 = load i24, i24* %21, align 4, !dbg !5507
  %23 = and i24 %22, -458753, !dbg !5507
  %24 = or i24 %23, 262144, !dbg !5507
  call void @llvm.dbg.value(metadata i8 1, metadata !5486, metadata !DIExpression()), !dbg !5489
  br label %43, !dbg !5508

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5511
  %27 = load i24, i24* %26, align 4, !dbg !5512
  %28 = and i24 %27, -458753, !dbg !5512
  %29 = or i24 %28, 196608, !dbg !5512
  %30 = and i24 %27, 30720, !dbg !5513
  %31 = icmp eq i24 %30, 16384, !dbg !5513
  br label %43, !dbg !5515

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5516
  %34 = load i24, i24* %33, align 4, !dbg !5517
  %35 = and i24 %34, -458753, !dbg !5517
  %36 = or i24 %35, 196608, !dbg !5517
  %37 = and i24 %34, 30720, !dbg !5518
  %38 = icmp ne i24 %37, 0, !dbg !5518
  br label %43, !dbg !5520

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5521
  %41 = load i24, i24* %40, align 4, !dbg !5522
  %42 = or i24 %41, 1, !dbg !5522
  br label %43, !dbg !5523

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5524
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5525
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5526
  call void @llvm.dbg.value(metadata i8* %48, metadata !5485, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.value(metadata i8 poison, metadata !5486, metadata !DIExpression()), !dbg !5489
  %49 = lshr i24 %44, 1, !dbg !5524
  %50 = and i24 %49, 1, !dbg !5524
  %51 = zext i24 %50 to i32, !dbg !5524
  %52 = or i32 %51, %47, !dbg !5524
  %53 = trunc i32 %52 to i24, !dbg !5524
  %54 = shl nuw nsw i24 %53, 1, !dbg !5524
  %55 = and i24 %44, -3, !dbg !5524
  %56 = or i24 %54, %55, !dbg !5524
  store i24 %56, i24* %46, align 4, !dbg !5524
  ret i8* %48, !dbg !5527
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5528 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5533, metadata !DIExpression()), !dbg !5536
  %2 = load i8*, i8** %0, align 4, !dbg !5537
  call void @llvm.dbg.value(metadata i8* %2, metadata !5534, metadata !DIExpression()), !dbg !5536
  call void @llvm.dbg.value(metadata i32 0, metadata !5535, metadata !DIExpression()), !dbg !5536
  %3 = load i8, i8* %2, align 1, !dbg !5538
  %4 = zext i8 %3 to i32, !dbg !5539
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !5540
  %6 = icmp eq i32 %5, 0, !dbg !5541
  br i1 %6, label %19, label %7, !dbg !5541

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5535, metadata !DIExpression()), !dbg !5536
  call void @llvm.dbg.value(metadata i8* %10, metadata !5534, metadata !DIExpression()), !dbg !5536
  %11 = mul i32 %9, 10, !dbg !5542
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5544
  call void @llvm.dbg.value(metadata i8* %12, metadata !5534, metadata !DIExpression()), !dbg !5536
  %13 = add i32 %11, -48, !dbg !5545
  %14 = add i32 %13, %8, !dbg !5546
  call void @llvm.dbg.value(metadata i32 %14, metadata !5535, metadata !DIExpression()), !dbg !5536
  %15 = load i8, i8* %12, align 1, !dbg !5538
  %16 = zext i8 %15 to i32, !dbg !5539
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !5540
  %18 = icmp eq i32 %17, 0, !dbg !5541
  br i1 %18, label %19, label %7, !dbg !5541, !llvm.loop !5547

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5536
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5536
  store i8* %20, i8** %0, align 4, !dbg !5549
  ret i32 %21, !dbg !5550
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5551 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5553, metadata !DIExpression()), !dbg !5554
  %2 = add i32 %0, -48, !dbg !5555
  %3 = icmp ult i32 %2, 10, !dbg !5556
  %4 = zext i1 %3 to i32, !dbg !5556
  ret i32 %4, !dbg !5557
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5558 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #24, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #24, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #24, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #24, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #24, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,82\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #24, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,168000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #24, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #24, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #24, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #24, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #24, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #24, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #24, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #24, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #24, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #24, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #24, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #24, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #24, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #24, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #24, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #24, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #24, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #24, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #24, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,%object", ""() #24, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #24, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #24, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #24, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #24, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #24, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED\0A\09.equ\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,%object", ""() #24, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #24, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,%object", ""() #24, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #24, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #24, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #24, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #24, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #24, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #24, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #24, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #24, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #24, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #24, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #24, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #24, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #24, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,%object", ""() #24, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #24, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #24, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #24, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #24, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #24, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #24, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #24, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #24, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #24, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #24, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #24, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #24, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #24, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #24, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #24, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #24, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #24, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #24, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #24, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #24, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #24, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #24, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #24, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #24, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #24, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #24, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #24, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #24, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #24, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #24, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #24, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #24, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #24, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405\0A\09.equ\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,1\0A\09.type\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,%object", ""() #24, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #24, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #24, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #24, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #24, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #24, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_STM32_CCM\0A\09.equ\09CONFIG_STM32_CCM,1\0A\09.type\09CONFIG_STM32_CCM,%object", ""() #24, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F405XG\0A\09.equ\09CONFIG_SOC_STM32F405XG,1\0A\09.type\09CONFIG_SOC_STM32F405XG,%object", ""() #24, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #24, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #24, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #24, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #24, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #24, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #24, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #24, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #24, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #24, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #24, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #24, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #24, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #24, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #24, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #24, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #24, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #24, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #24, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #24, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #24, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #24, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #24, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #24, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #24, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #24, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #24, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #24, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #24, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #24, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #24, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #24, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #24, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #24, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #24, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #24, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #24, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #24, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #24, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #24, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #24, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #24, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #24, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #24, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #24, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #24, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #24, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #24, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #24, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #24, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #24, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #24, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #24, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #24, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #24, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #24, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #24, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #24, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #24, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #24, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #24, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #24, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #24, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #24, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #24, !dbg !5874, !srcloc !5875
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #24, !dbg !5876, !srcloc !5877
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #24, !dbg !5878, !srcloc !5879
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #24, !dbg !5880, !srcloc !5881
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #24, !dbg !5882, !srcloc !5883
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #24, !dbg !5884, !srcloc !5885
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #24, !dbg !5886, !srcloc !5887
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #24, !dbg !5888, !srcloc !5889
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #24, !dbg !5890, !srcloc !5891
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #24, !dbg !5892, !srcloc !5893
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #24, !dbg !5894, !srcloc !5895
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #24, !dbg !5896, !srcloc !5897
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #24, !dbg !5898, !srcloc !5899
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #24, !dbg !5900, !srcloc !5901
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #24, !dbg !5902, !srcloc !5903
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #24, !dbg !5904, !srcloc !5905
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #24, !dbg !5906, !srcloc !5907
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #24, !dbg !5908, !srcloc !5909
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #24, !dbg !5910, !srcloc !5911
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #24, !dbg !5912, !srcloc !5913
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #24, !dbg !5914, !srcloc !5915
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #24, !dbg !5916, !srcloc !5917
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #24, !dbg !5918, !srcloc !5919
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #24, !dbg !5920, !srcloc !5921
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #24, !dbg !5922, !srcloc !5923
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #24, !dbg !5924, !srcloc !5925
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #24, !dbg !5926, !srcloc !5927
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #24, !dbg !5928, !srcloc !5929
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #24, !dbg !5930, !srcloc !5931
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #24, !dbg !5932, !srcloc !5933
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #24, !dbg !5934, !srcloc !5935
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #24, !dbg !5936, !srcloc !5937
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #24, !dbg !5938, !srcloc !5939
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #24, !dbg !5940, !srcloc !5941
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5942, !srcloc !5943
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #24, !dbg !5944, !srcloc !5945
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #24, !dbg !5946, !srcloc !5947
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #24, !dbg !5948, !srcloc !5949
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #24, !dbg !5950, !srcloc !5951
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #24, !dbg !5952, !srcloc !5953
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #24, !dbg !5954, !srcloc !5955
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #24, !dbg !5956, !srcloc !5957
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #24, !dbg !5958, !srcloc !5959
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #24, !dbg !5960, !srcloc !5961
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #24, !dbg !5962, !srcloc !5963
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #24, !dbg !5964, !srcloc !5965
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #24, !dbg !5966, !srcloc !5967
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #24, !dbg !5968, !srcloc !5969
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #24, !dbg !5970, !srcloc !5971
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #24, !dbg !5972, !srcloc !5973
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #24, !dbg !5974, !srcloc !5975
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #24, !dbg !5976, !srcloc !5977
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #24, !dbg !5978, !srcloc !5979
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #24, !dbg !5980, !srcloc !5981
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #24, !dbg !5982, !srcloc !5983
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #24, !dbg !5984, !srcloc !5985
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #24, !dbg !5986, !srcloc !5987
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #24, !dbg !5988, !srcloc !5989
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #24, !dbg !5990, !srcloc !5991
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #24, !dbg !5992, !srcloc !5993
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #24, !dbg !5994, !srcloc !5995
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #24, !dbg !5996, !srcloc !5997
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #24, !dbg !5998, !srcloc !5999
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #24, !dbg !6000, !srcloc !6001
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,12000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #24, !dbg !6002, !srcloc !6003
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #24, !dbg !6004, !srcloc !6005
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #24, !dbg !6006, !srcloc !6007
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #24, !dbg !6008, !srcloc !6009
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #24, !dbg !6010, !srcloc !6011
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #24, !dbg !6012, !srcloc !6013
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #24, !dbg !6014, !srcloc !6015
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #24, !dbg !6016, !srcloc !6017
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #24, !dbg !6018, !srcloc !6019
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #24, !dbg !6020, !srcloc !6021
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #24, !dbg !6022, !srcloc !6023
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #24, !dbg !6024, !srcloc !6025
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #24, !dbg !6026, !srcloc !6027
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #24, !dbg !6028, !srcloc !6029
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #24, !dbg !6030, !srcloc !6031
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #24, !dbg !6032, !srcloc !6033
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #24, !dbg !6034, !srcloc !6035
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #24, !dbg !6036, !srcloc !6037
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #24, !dbg !6038, !srcloc !6039
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #24, !dbg !6040, !srcloc !6041
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #24, !dbg !6042, !srcloc !6043
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #24, !dbg !6044, !srcloc !6045
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #24, !dbg !6046, !srcloc !6047
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_RUNTIME_STATS\0A\09.equ\09CONFIG_SYS_HEAP_RUNTIME_STATS,1\0A\09.type\09CONFIG_SYS_HEAP_RUNTIME_STATS,%object", ""() #24, !dbg !6048, !srcloc !6049
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #24, !dbg !6050, !srcloc !6051
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #24, !dbg !6052, !srcloc !6053
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #24, !dbg !6054, !srcloc !6055
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #24, !dbg !6056, !srcloc !6057
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #24, !dbg !6058, !srcloc !6059
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #24, !dbg !6060, !srcloc !6061
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #24, !dbg !6062, !srcloc !6063
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #24, !dbg !6064, !srcloc !6065
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !6066, !srcloc !6067
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #24, !dbg !6068, !srcloc !6069
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !6070, !srcloc !6071
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !6072, !srcloc !6073
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #24, !dbg !6074, !srcloc !6075
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #24, !dbg !6076, !srcloc !6077
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #24, !dbg !6078, !srcloc !6079
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #24, !dbg !6080, !srcloc !6081
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #24, !dbg !6082, !srcloc !6083
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #24, !dbg !6084, !srcloc !6085
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #24, !dbg !6086, !srcloc !6087
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #24, !dbg !6088, !srcloc !6089
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #24, !dbg !6090, !srcloc !6091
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #24, !dbg !6092, !srcloc !6093
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #24, !dbg !6094, !srcloc !6095
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #24, !dbg !6096, !srcloc !6097
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #24, !dbg !6098, !srcloc !6099
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #24, !dbg !6100, !srcloc !6101
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #24, !dbg !6102, !srcloc !6103
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #24, !dbg !6104, !srcloc !6105
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #24, !dbg !6106, !srcloc !6107
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #24, !dbg !6108, !srcloc !6109
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #24, !dbg !6110, !srcloc !6111
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #24, !dbg !6112, !srcloc !6113
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #24, !dbg !6114, !srcloc !6115
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #24, !dbg !6116, !srcloc !6117
  ret void, !dbg !6118
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6119 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6121, metadata !DIExpression()), !dbg !6123
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !6124
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !6125
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !6126, !srcloc !6135
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6126
  call void @llvm.dbg.value(metadata i32 %3, metadata !6132, metadata !DIExpression()) #24, !dbg !6136
  call void @llvm.dbg.value(metadata i32 undef, metadata !6133, metadata !DIExpression()) #24, !dbg !6136
  call void @llvm.dbg.value(metadata i32 %3, metadata !6122, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.value(metadata i32 %3, metadata !6137, metadata !DIExpression()) #24, !dbg !6142
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !6144, !srcloc !6145
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6146
  ret i32 0, !dbg !6147
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6148 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6150
  %2 = or i32 %1, 512, !dbg !6150
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6150
  ret void, !dbg !6151
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !6152 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6153
  %2 = or i32 %1, 1024, !dbg !6153
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6153
  ret void, !dbg !6154
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !6155 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6157, metadata !DIExpression()), !dbg !6158
  ret i32 0, !dbg !6159
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6160 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6209, metadata !DIExpression()), !dbg !6211
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6210, metadata !DIExpression()), !dbg !6211
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6212
  ret void, !dbg !6213
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6214 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6231, metadata !DIExpression()), !dbg !6234
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6232, metadata !DIExpression()), !dbg !6234
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6235
  %4 = load i32, i32* %3, align 4, !dbg !6235
  call void @llvm.dbg.value(metadata i32 %4, metadata !6233, metadata !DIExpression()), !dbg !6234
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !6236
  ret void, !dbg !6237
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !6238 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6242, metadata !DIExpression()), !dbg !6245
  call void @llvm.dbg.value(metadata i8* %0, metadata !6243, metadata !DIExpression()), !dbg !6245
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6246
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #24, !dbg !6246
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6244, metadata !DIExpression()), !dbg !6247
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6247
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6248
  %5 = bitcast i8* %4 to i32*, !dbg !6248
  %6 = load i32, i32* %5, align 4, !dbg !6248
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6249
  store i32 %6, i32* %7, align 4, !dbg !6250
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !6251
  unreachable, !dbg !6252
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6253 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6256, metadata !DIExpression()), !dbg !6257
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !6258
  ret void, !dbg !6259
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6260 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6264, metadata !DIExpression()), !dbg !6265
  %2 = icmp sgt i32 %0, -1, !dbg !6266
  br i1 %2, label %3, label %8, !dbg !6268

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6269, !srcloc !6271
  %4 = and i32 %0, 31, !dbg !6272
  %5 = shl nuw i32 1, %4, !dbg !6273
  %6 = lshr i32 %0, 5, !dbg !6274
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6275
  store volatile i32 %5, i32* %7, align 4, !dbg !6276
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6277, !srcloc !6278
  br label %8, !dbg !6279

8:                                                ; preds = %3, %1
  ret void, !dbg !6280
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6281 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6283, metadata !DIExpression()), !dbg !6284
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !6285
  ret void, !dbg !6286
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6287 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6289, metadata !DIExpression()), !dbg !6290
  %2 = icmp sgt i32 %0, -1, !dbg !6291
  br i1 %2, label %3, label %8, !dbg !6293

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6294
  %5 = shl nuw i32 1, %4, !dbg !6296
  %6 = lshr i32 %0, 5, !dbg !6297
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6298
  store volatile i32 %5, i32* %7, align 4, !dbg !6299
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6300, !srcloc !6304
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6305, !srcloc !6308
  br label %8, !dbg !6309

8:                                                ; preds = %3, %1
  ret void, !dbg !6310
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6311 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6315, metadata !DIExpression()), !dbg !6316
  %2 = lshr i32 %0, 5, !dbg !6317
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6318
  %4 = load volatile i32, i32* %3, align 4, !dbg !6318
  %5 = and i32 %0, 31, !dbg !6319
  %6 = shl nuw i32 1, %5, !dbg !6319
  %7 = and i32 %4, %6, !dbg !6320
  ret i32 %7, !dbg !6321
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !6322 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6326, metadata !DIExpression()), !dbg !6329
  call void @llvm.dbg.value(metadata i32 %1, metadata !6327, metadata !DIExpression()), !dbg !6329
  call void @llvm.dbg.value(metadata i32 %2, metadata !6328, metadata !DIExpression()), !dbg !6329
  %4 = add i32 %1, 1, !dbg !6330
  call void @llvm.dbg.value(metadata i32 %4, metadata !6327, metadata !DIExpression()), !dbg !6329
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !6333
  ret void, !dbg !6334
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6335 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6339, metadata !DIExpression()), !dbg !6341
  call void @llvm.dbg.value(metadata i32 %1, metadata !6340, metadata !DIExpression()), !dbg !6341
  %3 = trunc i32 %1 to i8, !dbg !6342
  %4 = shl i8 %3, 4, !dbg !6342
  %5 = and i32 %0, 15, !dbg !6344
  %6 = add nsw i32 %5, -4, !dbg !6344
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6344
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6344
  %9 = icmp slt i32 %0, 0, !dbg !6344
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6344
  store volatile i8 %4, i8* %10, align 1, !dbg !6342
  ret void, !dbg !6345
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6346 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6348, metadata !DIExpression()), !dbg !6349
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6350
  ret void, !dbg !6351
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6352 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6354
  tail call void @z_arm_int_exit() #25, !dbg !6355
  ret void, !dbg !6356
}

; Function Attrs: optsize
declare !dbg !6357 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6358 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #8 !dbg !6360 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !6362
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !6363
  tail call void @z_bss_zero() #25, !dbg !6364
  tail call void @z_data_copy() #25, !dbg !6365
  tail call void @z_arm_interrupt_init() #25, !dbg !6366
  tail call void @z_cstart() #28, !dbg !6367
  unreachable, !dbg !6367
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6368 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6369
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6370, !srcloc !6373
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6374, !srcloc !6377
  ret void, !dbg !6378
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6379 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6380
  %2 = and i32 %1, -15728641, !dbg !6380
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6380
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #24, !dbg !6381, !srcloc !6386
  call void @llvm.dbg.value(metadata i32 %3, metadata !6384, metadata !DIExpression()) #24, !dbg !6387
  %4 = and i32 %3, -5, !dbg !6388
  call void @llvm.dbg.value(metadata i32 %4, metadata !6389, metadata !DIExpression()) #24, !dbg !6394
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #24, !dbg !6396, !srcloc !6397
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6398, !srcloc !6377
  ret void, !dbg !6400
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6401 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6404, metadata !DIExpression()), !dbg !6405
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6406
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6407
  store i32 %0, i32* %3, align 4, !dbg !6408
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6409
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6410
  store i32 %4, i32* %5, align 4, !dbg !6411
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6412
  %7 = or i32 %6, 268435456, !dbg !6412
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6412
  call void @llvm.dbg.value(metadata i32 0, metadata !6413, metadata !DIExpression()) #24, !dbg !6416
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !6418, !srcloc !6419
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6420
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6421
  %10 = load i32, i32* %9, align 4, !dbg !6421
  ret i32 %10, !dbg !6422
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6423 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6533, metadata !DIExpression()), !dbg !6541
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6534, metadata !DIExpression()), !dbg !6541
  call void @llvm.dbg.value(metadata i8* %2, metadata !6535, metadata !DIExpression()), !dbg !6541
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6536, metadata !DIExpression()), !dbg !6541
  call void @llvm.dbg.value(metadata i8* %4, metadata !6537, metadata !DIExpression()), !dbg !6541
  call void @llvm.dbg.value(metadata i8* %5, metadata !6538, metadata !DIExpression()), !dbg !6541
  call void @llvm.dbg.value(metadata i8* %6, metadata !6539, metadata !DIExpression()), !dbg !6541
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6542
  call void @llvm.dbg.value(metadata i8* %8, metadata !6540, metadata !DIExpression()), !dbg !6541
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6543
  %10 = bitcast i8* %9 to i32*, !dbg !6543
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6544
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6545
  %12 = bitcast i8* %8 to i32*, !dbg !6546
  store i32 %11, i32* %12, align 4, !dbg !6547
  %13 = ptrtoint i8* %4 to i32, !dbg !6548
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6549
  %15 = bitcast i8* %14 to i32*, !dbg !6549
  store i32 %13, i32* %15, align 4, !dbg !6550
  %16 = ptrtoint i8* %5 to i32, !dbg !6551
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6552
  %18 = bitcast i8* %17 to i32*, !dbg !6552
  store i32 %16, i32* %18, align 4, !dbg !6553
  %19 = ptrtoint i8* %6 to i32, !dbg !6554
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6555
  %21 = bitcast i8* %20 to i32*, !dbg !6555
  store i32 %19, i32* %21, align 4, !dbg !6556
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6557
  %23 = bitcast i8* %22 to i32*, !dbg !6557
  store i32 16777216, i32* %23, align 4, !dbg !6558
  %24 = ptrtoint i8* %8 to i32, !dbg !6559
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6560
  store i32 %24, i32* %25, align 8, !dbg !6561
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6562
  store i32 0, i32* %26, align 4, !dbg !6563
  ret void, !dbg !6564
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !6565 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6570, metadata !DIExpression()), !dbg !6576
  call void @llvm.dbg.value(metadata i32 %1, metadata !6571, metadata !DIExpression()), !dbg !6576
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6577
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6572, metadata !DIExpression()), !dbg !6576
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6578
  br i1 %4, label %19, label %5, !dbg !6580

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6575, metadata !DIExpression()), !dbg !6576
  %6 = icmp eq i32 %0, -22, !dbg !6581
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !6581
  %8 = load i32, i32* %7, align 4, !dbg !6581
  br i1 %6, label %16, label %9, !dbg !6583

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6581
  %11 = icmp ule i32 %10, %0, !dbg !6581
  %12 = icmp ugt i32 %8, %0, !dbg !6581
  %13 = and i1 %12, %11, !dbg !6581
  %14 = icmp ugt i32 %8, %1, !dbg !6581
  %15 = and i1 %14, %13, !dbg !6581
  br i1 %15, label %18, label %19, !dbg !6581

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6581
  br i1 %17, label %18, label %19, !dbg !6583

18:                                               ; preds = %9, %16
  br label %19, !dbg !6584

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6576
  ret i32 %20, !dbg !6586
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #8 !dbg !6587 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6591, metadata !DIExpression()), !dbg !6594
  call void @llvm.dbg.value(metadata i8* %1, metadata !6592, metadata !DIExpression()), !dbg !6594
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6593, metadata !DIExpression()), !dbg !6594
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6595
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6596
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #24, !dbg !6597, !srcloc !6598
  unreachable, !dbg !6599
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6600 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6618, metadata !DIExpression()), !dbg !6628
  call void @llvm.dbg.value(metadata i32 %1, metadata !6619, metadata !DIExpression()), !dbg !6628
  call void @llvm.dbg.value(metadata i32 %2, metadata !6620, metadata !DIExpression()), !dbg !6628
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6621, metadata !DIExpression()), !dbg !6628
  call void @llvm.dbg.value(metadata i32 0, metadata !6622, metadata !DIExpression()), !dbg !6628
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6629
  %9 = and i32 %8, 511, !dbg !6630
  call void @llvm.dbg.value(metadata i32 %9, metadata !6623, metadata !DIExpression()), !dbg !6628
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #24, !dbg !6631
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #24, !dbg !6631
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !6632
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #24, !dbg !6632
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6627, metadata !DIExpression()), !dbg !6633
  call void @llvm.dbg.value(metadata i32 0, metadata !6634, metadata !DIExpression()) #24, !dbg !6637
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !6639, !srcloc !6640
  call void @llvm.dbg.value(metadata i8* %6, metadata !6625, metadata !DIExpression(DW_OP_deref)), !dbg !6628
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !6641
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !6626, metadata !DIExpression()), !dbg !6628
  call void @llvm.dbg.value(metadata i8* %5, metadata !6624, metadata !DIExpression(DW_OP_deref)), !dbg !6628
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !6642
  call void @llvm.dbg.value(metadata i32 %12, metadata !6622, metadata !DIExpression()), !dbg !6628
  %13 = load i8, i8* %5, align 1, !dbg !6643, !range !6645
  call void @llvm.dbg.value(metadata i8 %13, metadata !6624, metadata !DIExpression()), !dbg !6628
  %14 = icmp eq i8 %13, 0, !dbg !6643
  br i1 %14, label %15, label %32, !dbg !6646

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !6647
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !6648
  %18 = load i8, i8* %6, align 1, !dbg !6649, !range !6645
  call void @llvm.dbg.value(metadata i8 %18, metadata !6625, metadata !DIExpression()), !dbg !6628
  %19 = icmp eq i8 %18, 0, !dbg !6649
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6651
  %21 = load i32, i32* %20, align 4, !dbg !6651
  br i1 %19, label %27, label %22, !dbg !6652

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !6653
  %24 = icmp eq i32 %23, 0, !dbg !6656
  br i1 %24, label %25, label %31, !dbg !6657

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !6658
  br label %29, !dbg !6660

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !6661
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !6651
  br label %31, !dbg !6663

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !6663
  br label %32, !dbg !6664

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #24, !dbg !6664
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #24, !dbg !6664
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #24, !dbg !6664
  ret void, !dbg !6664
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !6665 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6670, metadata !DIExpression()), !dbg !6676
  call void @llvm.dbg.value(metadata i32 %1, metadata !6671, metadata !DIExpression()), !dbg !6676
  call void @llvm.dbg.value(metadata i32 %2, metadata !6672, metadata !DIExpression()), !dbg !6676
  call void @llvm.dbg.value(metadata i8* %3, metadata !6673, metadata !DIExpression()), !dbg !6676
  call void @llvm.dbg.value(metadata i8 0, metadata !6674, metadata !DIExpression()), !dbg !6676
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6675, metadata !DIExpression()), !dbg !6676
  store i8 0, i8* %3, align 1, !dbg !6677
  %5 = icmp ult i32 %2, -16777216, !dbg !6678
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6680
  br i1 %8, label %16, label %9, !dbg !6680

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6681
  %11 = icmp eq i32 %10, 0, !dbg !6681
  br i1 %11, label %12, label %13, !dbg !6683

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6675, metadata !DIExpression()), !dbg !6676
  store i8 1, i8* %3, align 1, !dbg !6686
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6676
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6675, metadata !DIExpression()), !dbg !6676
  br label %16, !dbg !6689

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6676
  ret %struct.__esf* %17, !dbg !6690
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6691 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6695, metadata !DIExpression()), !dbg !6699
  call void @llvm.dbg.value(metadata i32 %1, metadata !6696, metadata !DIExpression()), !dbg !6699
  call void @llvm.dbg.value(metadata i8* %2, metadata !6697, metadata !DIExpression()), !dbg !6699
  call void @llvm.dbg.value(metadata i32 0, metadata !6698, metadata !DIExpression()), !dbg !6699
  store i8 0, i8* %2, align 1, !dbg !6700
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6701

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !6702
  call void @llvm.dbg.value(metadata i32 %5, metadata !6698, metadata !DIExpression()), !dbg !6699
  br label %11, !dbg !6704

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6705
  call void @llvm.dbg.value(metadata i32 %7, metadata !6698, metadata !DIExpression()), !dbg !6699
  br label %11, !dbg !6706

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6707
  call void @llvm.dbg.value(metadata i32 0, metadata !6698, metadata !DIExpression()), !dbg !6699
  br label %11, !dbg !6708

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !6709
  call void @llvm.dbg.value(metadata i32 0, metadata !6698, metadata !DIExpression()), !dbg !6699
  br label %11, !dbg !6710

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !6711
  br label %11, !dbg !6712

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6713
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6714 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6718, metadata !DIExpression()), !dbg !6721
  call void @llvm.dbg.value(metadata i8* %1, metadata !6719, metadata !DIExpression()), !dbg !6721
  call void @llvm.dbg.value(metadata i32 0, metadata !6720, metadata !DIExpression()), !dbg !6721
  store i8 0, i8* %1, align 1, !dbg !6722
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6723
  %4 = and i32 %3, 2, !dbg !6725
  %5 = icmp eq i32 %4, 0, !dbg !6726
  br i1 %5, label %6, label %33, !dbg !6727

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6728
  %8 = icmp sgt i32 %7, -1, !dbg !6730
  br i1 %8, label %9, label %33, !dbg !6731

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6732
  %11 = and i32 %10, 1073741824, !dbg !6734
  %12 = icmp eq i32 %11, 0, !dbg !6735
  br i1 %12, label %33, label %13, !dbg !6736

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !6737
  br i1 %14, label %15, label %18, !dbg !6740

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6741
  %17 = load i32, i32* %16, align 4, !dbg !6741
  call void @llvm.dbg.value(metadata i32 %17, metadata !6720, metadata !DIExpression()), !dbg !6721
  br label %33, !dbg !6743

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6744
  %20 = and i32 %19, 255, !dbg !6746
  %21 = icmp eq i32 %20, 0, !dbg !6747
  br i1 %21, label %24, label %22, !dbg !6748

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6749
  call void @llvm.dbg.value(metadata i32 %23, metadata !6720, metadata !DIExpression()), !dbg !6721
  br label %33, !dbg !6751

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6752
  %26 = and i32 %25, 65280, !dbg !6754
  %27 = icmp eq i32 %26, 0, !dbg !6755
  br i1 %27, label %29, label %28, !dbg !6756

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6757
  call void @llvm.dbg.value(metadata i32 0, metadata !6720, metadata !DIExpression()), !dbg !6721
  br label %33, !dbg !6759

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6760
  %31 = icmp ult i32 %30, 65536, !dbg !6762
  br i1 %31, label %33, label %32, !dbg !6763

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !6764
  call void @llvm.dbg.value(metadata i32 0, metadata !6720, metadata !DIExpression()), !dbg !6721
  br label %33, !dbg !6766

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !6721
  call void @llvm.dbg.value(metadata i32 %34, metadata !6720, metadata !DIExpression()), !dbg !6721
  ret i32 %34, !dbg !6767
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6768 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6770, metadata !DIExpression()), !dbg !6783
  call void @llvm.dbg.value(metadata i32 %1, metadata !6771, metadata !DIExpression()), !dbg !6783
  call void @llvm.dbg.value(metadata i8* %2, metadata !6772, metadata !DIExpression()), !dbg !6783
  call void @llvm.dbg.value(metadata i32 0, metadata !6773, metadata !DIExpression()), !dbg !6783
  call void @llvm.dbg.value(metadata i32 -22, metadata !6774, metadata !DIExpression()), !dbg !6783
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6784
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6786
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6788
  %7 = and i32 %6, 2, !dbg !6789
  %8 = icmp eq i32 %7, 0, !dbg !6790
  br i1 %8, label %19, label %9, !dbg !6791

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6792
  call void @llvm.dbg.value(metadata i32 %10, metadata !6775, metadata !DIExpression()), !dbg !6793
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6794
  %12 = and i32 %11, 128, !dbg !6796
  %13 = icmp eq i32 %12, 0, !dbg !6797
  br i1 %13, label %19, label %14, !dbg !6798

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6774, metadata !DIExpression()), !dbg !6783
  %15 = icmp eq i32 %1, 0, !dbg !6799
  br i1 %15, label %19, label %16, !dbg !6802

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6803
  %18 = and i32 %17, -129, !dbg !6803
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6803
  br label %19, !dbg !6805

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6783
  call void @llvm.dbg.value(metadata i32 %20, metadata !6774, metadata !DIExpression()), !dbg !6783
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6806
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6808
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6810
  %24 = and i32 %23, 16, !dbg !6811
  %25 = icmp eq i32 %24, 0, !dbg !6811
  br i1 %25, label %26, label %30, !dbg !6812

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6813
  %28 = and i32 %27, 2, !dbg !6814
  %29 = icmp eq i32 %28, 0, !dbg !6814
  br i1 %29, label %39, label %30, !dbg !6815

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6816
  %32 = and i32 %31, 2048, !dbg !6817
  %33 = icmp eq i32 %32, 0, !dbg !6817
  br i1 %33, label %39, label %34, !dbg !6818

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !6819
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #25, !dbg !6820
  call void @llvm.dbg.value(metadata i32 %36, metadata !6778, metadata !DIExpression()), !dbg !6821
  %37 = icmp eq i32 %36, 0, !dbg !6822
  br i1 %37, label %39, label %38, !dbg !6824

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !6825, metadata !DIExpression()) #24, !dbg !6828
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #24, !dbg !6831, !srcloc !6832
  call void @llvm.dbg.value(metadata i32 2, metadata !6773, metadata !DIExpression()), !dbg !6783
  br label %39, !dbg !6833

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !6783
  call void @llvm.dbg.value(metadata i32 %40, metadata !6773, metadata !DIExpression()), !dbg !6783
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6834
  %42 = and i32 %41, 32, !dbg !6836
  %43 = icmp eq i32 %42, 0, !dbg !6837
  br i1 %43, label %47, label %44, !dbg !6838

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6839
  %46 = and i32 %45, -8193, !dbg !6839
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6839
  br label %47, !dbg !6841

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6842
  %49 = or i32 %48, 255, !dbg !6842
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6842
  store i8 0, i8* %2, align 1, !dbg !6843
  ret i32 %40, !dbg !6844
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6845 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6849, metadata !DIExpression()), !dbg !6856
  call void @llvm.dbg.value(metadata i32 %0, metadata !6850, metadata !DIExpression()), !dbg !6856
  call void @llvm.dbg.value(metadata i8* %1, metadata !6851, metadata !DIExpression()), !dbg !6856
  call void @llvm.dbg.value(metadata i32 0, metadata !6852, metadata !DIExpression()), !dbg !6856
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6857
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6859
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6861
  %6 = and i32 %5, 512, !dbg !6862
  %7 = icmp eq i32 %6, 0, !dbg !6862
  br i1 %7, label %18, label %8, !dbg !6863

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6864
  call void @llvm.dbg.value(metadata i32 %9, metadata !6853, metadata !DIExpression()), !dbg !6865
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6866
  %11 = and i32 %10, 32768, !dbg !6868
  %12 = icmp ne i32 %11, 0, !dbg !6869
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6870
  br i1 %14, label %15, label %18, !dbg !6870

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6871
  %17 = and i32 %16, -32769, !dbg !6871
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6871
  br label %18, !dbg !6875

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6876
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6878
  %21 = and i32 %20, 256, !dbg !6880
  %22 = icmp eq i32 %21, 0, !dbg !6881
  br i1 %22, label %23, label %25, !dbg !6882

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6883
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6885
  %27 = or i32 %26, 65280, !dbg !6885
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6885
  store i8 0, i8* %1, align 1, !dbg !6886
  ret void, !dbg !6887
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !6888 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6894, metadata !DIExpression()), !dbg !6896
  call void @llvm.dbg.value(metadata i32 0, metadata !6895, metadata !DIExpression()), !dbg !6896
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6897
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6899
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6901
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6903
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6905
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6907
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6909
  %8 = or i32 %7, -65536, !dbg !6909
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6909
  ret void, !dbg !6910
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !6911 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6915, metadata !DIExpression()), !dbg !6917
  call void @llvm.dbg.value(metadata i8* %0, metadata !6916, metadata !DIExpression()), !dbg !6917
  store i8 0, i8* %0, align 1, !dbg !6918
  ret void, !dbg !6919
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6920 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6924, metadata !DIExpression()), !dbg !6927
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6928
  %3 = load i32, i32* %2, align 4, !dbg !6928
  %4 = inttoptr i32 %3 to i16*, !dbg !6929
  call void @llvm.dbg.value(metadata i16* %4, metadata !6925, metadata !DIExpression()), !dbg !6927
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6930
  %6 = or i32 %5, 256, !dbg !6930
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6930
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6931, !srcloc !6934
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6935, !srcloc !6938
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6939
  %8 = load i16, i16* %7, align 2, !dbg !6940
  call void @llvm.dbg.value(metadata i16 %8, metadata !6926, metadata !DIExpression()), !dbg !6927
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6941
  %10 = and i32 %9, -257, !dbg !6941
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6941
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6942, !srcloc !6934
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6944, !srcloc !6938
  %11 = icmp eq i16 %8, -8446, !dbg !6946
  ret i1 %11, !dbg !6948
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !6949 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6950
  %2 = or i32 %1, 16, !dbg !6950
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6950
  ret void, !dbg !6951
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !6952 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6955, metadata !DIExpression()), !dbg !6956
  br label %1, !dbg !6957

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6955, metadata !DIExpression()), !dbg !6956
  tail call fastcc void @__NVIC_SetPriority.34(i32 noundef %2) #26, !dbg !6959
  %3 = add nuw nsw i32 %2, 1, !dbg !6962
  call void @llvm.dbg.value(metadata i32 %3, metadata !6955, metadata !DIExpression()), !dbg !6956
  %4 = icmp eq i32 %3, 82, !dbg !6963
  br i1 %4, label %5, label %1, !dbg !6957, !llvm.loop !6964

5:                                                ; preds = %1
  ret void, !dbg !6966
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.34(i32 noundef %0) unnamed_addr #15 !dbg !6967 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6969, metadata !DIExpression()), !dbg !6971
  call void @llvm.dbg.value(metadata i32 1, metadata !6970, metadata !DIExpression()), !dbg !6971
  %2 = and i32 %0, 15, !dbg !6972
  %3 = add nsw i32 %2, -4, !dbg !6972
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6972
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6972
  %6 = icmp slt i32 %0, 0, !dbg !6972
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6972
  store volatile i8 16, i8* %7, align 1, !dbg !6973
  ret void, !dbg !6975
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6976 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7082, metadata !DIExpression()), !dbg !7083
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7084
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7086
  br i1 %3, label %4, label %12, !dbg !7087

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !7088, !srcloc !7100
  call void @llvm.dbg.value(metadata i32 %5, metadata !7091, metadata !DIExpression()) #24, !dbg !7101
  %6 = icmp eq i32 %5, 0, !dbg !7102
  br i1 %6, label %12, label %7, !dbg !7103

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7104
  %9 = or i32 %8, 268435456, !dbg !7104
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7104
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7106
  %11 = and i32 %10, -32769, !dbg !7106
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7106
  br label %12, !dbg !7107

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7108
  ret void, !dbg !7109
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7110 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7111
  ret void, !dbg !7112
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !257 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !375, metadata !DIExpression()), !dbg !7113
  call void @llvm.dbg.value(metadata i8 0, metadata !376, metadata !DIExpression()), !dbg !7113
  call void @llvm.dbg.value(metadata i32 64, metadata !378, metadata !DIExpression()), !dbg !7113
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !7114
  %3 = load i32, i32* %2, align 4, !dbg !7114
  %4 = add i32 %3, -64, !dbg !7116
  call void @llvm.dbg.value(metadata i32 %4, metadata !377, metadata !DIExpression()), !dbg !7113
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7117
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7118
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7119
  call void @llvm.dbg.value(metadata i8 1, metadata !376, metadata !DIExpression()), !dbg !7113
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7120
  ret void, !dbg !7121
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7122 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7123
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7124, !srcloc !7127
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7128, !srcloc !7131
  ret void, !dbg !7132
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7133 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #24, !dbg !7134, !srcloc !7137
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7138
  ret void, !dbg !7139
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #17 !dbg !7140 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7155, metadata !DIExpression()), !dbg !7159
  call void @llvm.dbg.value(metadata i8 %1, metadata !7156, metadata !DIExpression()), !dbg !7159
  call void @llvm.dbg.value(metadata i32 %2, metadata !7157, metadata !DIExpression()), !dbg !7159
  call void @llvm.dbg.value(metadata i32 %3, metadata !7158, metadata !DIExpression()), !dbg !7159
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7160
  ret void, !dbg !7162
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7163 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7168, metadata !DIExpression()), !dbg !7173
  call void @llvm.dbg.value(metadata i8 %1, metadata !7169, metadata !DIExpression()), !dbg !7173
  call void @llvm.dbg.value(metadata i32 undef, metadata !7170, metadata !DIExpression()), !dbg !7173
  call void @llvm.dbg.value(metadata i32 undef, metadata !7171, metadata !DIExpression()), !dbg !7173
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7174
  call void @llvm.dbg.value(metadata i8 %3, metadata !7172, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7173
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !7175
  call void @llvm.dbg.value(metadata i32 %4, metadata !7172, metadata !DIExpression()), !dbg !7173
  %5 = trunc i32 %4 to i8, !dbg !7176
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7177
  ret void, !dbg !7178
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !7179 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7183, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i8 %1, metadata !7184, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i8 %2, metadata !7185, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i1 %3, metadata !7186, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7189
  %5 = zext i8 %2 to i32, !dbg !7190
  call void @llvm.dbg.value(metadata i32 %5, metadata !7188, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i32 0, metadata !7187, metadata !DIExpression()), !dbg !7189
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7188, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i32 0, metadata !7187, metadata !DIExpression()), !dbg !7189
  %7 = icmp eq i8 %1, 0, !dbg !7191
  br i1 %7, label %29, label %8, !dbg !7194

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7188, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i32 %10, metadata !7187, metadata !DIExpression()), !dbg !7189
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7195
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7198
  %13 = load i32, i32* %12, align 4, !dbg !7198
  %14 = icmp eq i32 %13, 0, !dbg !7199
  br i1 %14, label %25, label %15, !dbg !7200

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7201

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7203
  %18 = icmp eq i32 %17, 0, !dbg !7203
  br i1 %18, label %29, label %19, !dbg !7204

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7205
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7206
  call void @llvm.dbg.value(metadata i32 %21, metadata !7188, metadata !DIExpression()), !dbg !7189
  %22 = icmp eq i32 %21, -22, !dbg !7207
  br i1 %22, label %29, label %23, !dbg !7209

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7210
  call void @llvm.dbg.value(metadata i32 %24, metadata !7188, metadata !DIExpression()), !dbg !7189
  br label %25, !dbg !7211

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7189
  call void @llvm.dbg.value(metadata i32 %26, metadata !7188, metadata !DIExpression()), !dbg !7189
  %27 = add nuw nsw i32 %10, 1, !dbg !7212
  call void @llvm.dbg.value(metadata i32 %27, metadata !7187, metadata !DIExpression()), !dbg !7189
  %28 = icmp eq i32 %27, %6, !dbg !7191
  br i1 %28, label %29, label %8, !dbg !7194, !llvm.loop !7213

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7189
  ret i32 %30, !dbg !7215
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !7216 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7220, metadata !DIExpression()), !dbg !7222
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7223
  %3 = load i32, i32* %2, align 4, !dbg !7223
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7224, !range !3486
  %5 = icmp ult i32 %4, 2, !dbg !7224
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7225
  br i1 %7, label %8, label %15, !dbg !7225

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7226
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7227
  %11 = load i32, i32* %10, align 4, !dbg !7227
  %12 = and i32 %11, %9, !dbg !7228
  %13 = icmp eq i32 %12, 0, !dbg !7229
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7221, metadata !DIExpression()), !dbg !7222
  ret i32 %16, !dbg !7230
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !7231 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7235, metadata !DIExpression()), !dbg !7238
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7236, metadata !DIExpression()), !dbg !7238
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7239
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7239
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7237, metadata !DIExpression()), !dbg !7240
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7241
  %6 = load i32, i32* %5, align 4, !dbg !7241
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7242
  store i32 %6, i32* %7, align 4, !dbg !7243
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7244
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7245
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7246
  %11 = load i32, i32* %10, align 4, !dbg !7246
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !7247
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !7248
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7249
  ret i32 %12, !dbg !7250
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !7251 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !7258, metadata !DIExpression()), !dbg !7262
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !7259, metadata !DIExpression()), !dbg !7262
  call void @llvm.dbg.value(metadata i32 undef, metadata !7260, metadata !DIExpression()), !dbg !7262
  call void @llvm.dbg.value(metadata i32 %2, metadata !7261, metadata !DIExpression()), !dbg !7262
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !7263
  %5 = load i32, i32* %4, align 4, !dbg !7263
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !7264
  %7 = or i32 %6, %5, !dbg !7265
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !7266
  store i32 %7, i32* %8, align 4, !dbg !7267
  ret void, !dbg !7268
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7269 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7273, metadata !DIExpression()), !dbg !7275
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7274, metadata !DIExpression()), !dbg !7275
  %3 = zext i8 %0 to i32, !dbg !7276
  %4 = icmp ugt i8 %0, 7, !dbg !7278
  br i1 %4, label %6, label %5, !dbg !7279

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !7280
  br label %6, !dbg !7281

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7275
  ret i32 %7, !dbg !7282
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7283 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7287, metadata !DIExpression()), !dbg !7289
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7288, metadata !DIExpression()), !dbg !7289
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !7290
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7291
  %4 = load i32, i32* %3, align 4, !dbg !7291
  %5 = and i32 %4, -32, !dbg !7292
  %6 = or i32 %5, %0, !dbg !7293
  %7 = or i32 %6, 16, !dbg !7293
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7294
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7295
  %9 = load i32, i32* %8, align 4, !dbg !7295
  %10 = or i32 %9, 1, !dbg !7296
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7297
  ret void, !dbg !7298
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7299 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7302, metadata !DIExpression()), !dbg !7303
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7304
  ret void, !dbg !7305
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !7306 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7310, metadata !DIExpression()), !dbg !7311
  %2 = icmp ult i32 %0, 33, !dbg !7312
  br i1 %2, label %11, label %3, !dbg !7314

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7315
  br i1 %4, label %11, label %5, !dbg !7317

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7318
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7319, !range !3486
  %8 = mul nsw i32 %7, -2, !dbg !7320
  %9 = add nsw i32 %8, 62, !dbg !7320
  %10 = and i32 %9, 62, !dbg !7321
  br label %11, !dbg !7322

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7311
  ret i32 %12, !dbg !7323
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #17 !dbg !7324 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7328, metadata !DIExpression()), !dbg !7330
  call void @llvm.dbg.value(metadata i8 %1, metadata !7329, metadata !DIExpression()), !dbg !7330
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7331
  ret void, !dbg !7333
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7334 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7338, metadata !DIExpression()), !dbg !7345
  call void @llvm.dbg.value(metadata i8 %1, metadata !7339, metadata !DIExpression()), !dbg !7345
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7346
  call void @llvm.dbg.value(metadata i8 %3, metadata !7340, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7345
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !7347
  call void @llvm.dbg.value(metadata i32 %4, metadata !7340, metadata !DIExpression()), !dbg !7345
  %5 = icmp ne i32 %4, -22, !dbg !7348
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7349
  call void @llvm.dbg.value(metadata i32 %4, metadata !7341, metadata !DIExpression()), !dbg !7350
  br i1 %7, label %8, label %12, !dbg !7349

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7341, metadata !DIExpression()), !dbg !7350
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !7351
  %10 = add i32 %9, 1, !dbg !7354
  call void @llvm.dbg.value(metadata i32 %10, metadata !7341, metadata !DIExpression()), !dbg !7350
  %11 = icmp eq i32 %10, 8, !dbg !7355
  br i1 %11, label %12, label %8, !dbg !7356, !llvm.loop !7357

12:                                               ; preds = %8, %2
  ret void, !dbg !7359
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7360 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7363, metadata !DIExpression()), !dbg !7364
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7365
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7366
  ret void, !dbg !7367
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7368 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7373
  %2 = icmp ugt i32 %1, 8, !dbg !7375
  br i1 %2, label %14, label %3, !dbg !7376

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !7377
  call void @llvm.dbg.value(metadata i32 0, metadata !7372, metadata !DIExpression()), !dbg !7378
  %4 = icmp eq i32 %1, 0, !dbg !7379
  br i1 %4, label %12, label %5, !dbg !7382

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7382

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7372, metadata !DIExpression()), !dbg !7378
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7383
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !7385
  %10 = add nuw i32 %8, 1, !dbg !7386
  call void @llvm.dbg.value(metadata i32 %10, metadata !7372, metadata !DIExpression()), !dbg !7378
  %11 = icmp eq i32 %10, %1, !dbg !7379
  br i1 %11, label %12, label %7, !dbg !7382, !llvm.loop !7387

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7389
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7390
  tail call void @arm_core_mpu_enable() #26, !dbg !7391
  br label %14, !dbg !7392

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7378
  ret i32 %15, !dbg !7393
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7394 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7401, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata i8* %1, metadata !7402, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata i8* %0, metadata !7403, metadata !DIExpression()), !dbg !7404
  %3 = load i8, i8* %1, align 1, !dbg !7405
  %4 = icmp eq i8 %3, 0, !dbg !7406
  br i1 %4, label %13, label %5, !dbg !7407

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7401, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata i8* %8, metadata !7402, metadata !DIExpression()), !dbg !7404
  store i8 %6, i8* %7, align 1, !dbg !7408
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7410
  call void @llvm.dbg.value(metadata i8* %9, metadata !7401, metadata !DIExpression()), !dbg !7404
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7411
  call void @llvm.dbg.value(metadata i8* %10, metadata !7402, metadata !DIExpression()), !dbg !7404
  %11 = load i8, i8* %10, align 1, !dbg !7405
  %12 = icmp eq i8 %11, 0, !dbg !7406
  br i1 %12, label %13, label %5, !dbg !7407, !llvm.loop !7412

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7414
  ret i8* %0, !dbg !7415
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7416 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7420, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata i8* %1, metadata !7421, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata i32 %2, metadata !7422, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata i8* %0, metadata !7423, metadata !DIExpression()), !dbg !7424
  %4 = icmp eq i32 %2, 0, !dbg !7425
  br i1 %4, label %22, label %5, !dbg !7426

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7420, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata i32 %7, metadata !7422, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata i8* %8, metadata !7421, metadata !DIExpression()), !dbg !7424
  %9 = load i8, i8* %8, align 1, !dbg !7427
  %10 = icmp eq i8 %9, 0, !dbg !7428
  br i1 %10, label %16, label %11, !dbg !7429

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7430
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7432
  call void @llvm.dbg.value(metadata i8* %12, metadata !7421, metadata !DIExpression()), !dbg !7424
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7433
  call void @llvm.dbg.value(metadata i8* %13, metadata !7420, metadata !DIExpression()), !dbg !7424
  %14 = add i32 %7, -1, !dbg !7434
  call void @llvm.dbg.value(metadata i32 %14, metadata !7422, metadata !DIExpression()), !dbg !7424
  %15 = icmp eq i32 %14, 0, !dbg !7425
  br i1 %15, label %22, label %5, !dbg !7426, !llvm.loop !7435

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7420, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata i32 %18, metadata !7422, metadata !DIExpression()), !dbg !7424
  store i8 0, i8* %17, align 1, !dbg !7437
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7439
  call void @llvm.dbg.value(metadata i8* %19, metadata !7420, metadata !DIExpression()), !dbg !7424
  %20 = add i32 %18, -1, !dbg !7440
  call void @llvm.dbg.value(metadata i32 %20, metadata !7422, metadata !DIExpression()), !dbg !7424
  %21 = icmp eq i32 %20, 0, !dbg !7441
  br i1 %21, label %22, label %16, !dbg !7442, !llvm.loop !7443

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7445
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7446 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7450, metadata !DIExpression()), !dbg !7453
  call void @llvm.dbg.value(metadata i32 %1, metadata !7451, metadata !DIExpression()), !dbg !7453
  call void @llvm.dbg.value(metadata i32 %1, metadata !7452, metadata !DIExpression()), !dbg !7453
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7454

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7450, metadata !DIExpression()), !dbg !7453
  %6 = load i8, i8* %5, align 1, !dbg !7455
  %7 = icmp eq i8 %6, %3, !dbg !7456
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7457
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7458
  call void @llvm.dbg.value(metadata i8* %10, metadata !7450, metadata !DIExpression()), !dbg !7453
  br i1 %9, label %11, label %4, !dbg !7457, !llvm.loop !7460

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7462
  ret i8* %12, !dbg !7463
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7464 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7466, metadata !DIExpression()), !dbg !7469
  call void @llvm.dbg.value(metadata i32 %1, metadata !7467, metadata !DIExpression()), !dbg !7469
  call void @llvm.dbg.value(metadata i8* null, metadata !7468, metadata !DIExpression()), !dbg !7469
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7470

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7469
  call void @llvm.dbg.value(metadata i8* %6, metadata !7468, metadata !DIExpression()), !dbg !7469
  call void @llvm.dbg.value(metadata i8* %5, metadata !7466, metadata !DIExpression()), !dbg !7469
  %7 = load i8, i8* %5, align 1, !dbg !7471
  %8 = icmp eq i8 %7, %3, !dbg !7474
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7475
  call void @llvm.dbg.value(metadata i8* %9, metadata !7468, metadata !DIExpression()), !dbg !7469
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7476
  call void @llvm.dbg.value(metadata i8* %10, metadata !7466, metadata !DIExpression()), !dbg !7469
  %11 = icmp eq i8 %7, 0, !dbg !7477
  br i1 %11, label %12, label %4, !dbg !7477, !llvm.loop !7478

12:                                               ; preds = %4
  ret i8* %9, !dbg !7480
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7481 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7485, metadata !DIExpression()), !dbg !7487
  call void @llvm.dbg.value(metadata i32 0, metadata !7486, metadata !DIExpression()), !dbg !7487
  %2 = load i8, i8* %0, align 1, !dbg !7488
  %3 = icmp eq i8 %2, 0, !dbg !7489
  br i1 %3, label %11, label %4, !dbg !7490

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7486, metadata !DIExpression()), !dbg !7487
  call void @llvm.dbg.value(metadata i8* %6, metadata !7485, metadata !DIExpression()), !dbg !7487
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7491
  call void @llvm.dbg.value(metadata i8* %7, metadata !7485, metadata !DIExpression()), !dbg !7487
  %8 = add i32 %5, 1, !dbg !7493
  call void @llvm.dbg.value(metadata i32 %8, metadata !7486, metadata !DIExpression()), !dbg !7487
  %9 = load i8, i8* %7, align 1, !dbg !7488
  %10 = icmp eq i8 %9, 0, !dbg !7489
  br i1 %10, label %11, label %4, !dbg !7490, !llvm.loop !7494

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7487
  ret i32 %12, !dbg !7496
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7497 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7501, metadata !DIExpression()), !dbg !7504
  call void @llvm.dbg.value(metadata i32 %1, metadata !7502, metadata !DIExpression()), !dbg !7504
  call void @llvm.dbg.value(metadata i32 0, metadata !7503, metadata !DIExpression()), !dbg !7504
  %3 = load i8, i8* %0, align 1, !dbg !7505
  %4 = icmp ne i8 %3, 0, !dbg !7506
  %5 = icmp ne i32 %1, 0, !dbg !7507
  %6 = and i1 %4, %5, !dbg !7507
  br i1 %6, label %7, label %16, !dbg !7508

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7503, metadata !DIExpression()), !dbg !7504
  call void @llvm.dbg.value(metadata i8* %9, metadata !7501, metadata !DIExpression()), !dbg !7504
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7509
  call void @llvm.dbg.value(metadata i8* %10, metadata !7501, metadata !DIExpression()), !dbg !7504
  %11 = add nuw i32 %8, 1, !dbg !7511
  call void @llvm.dbg.value(metadata i32 %11, metadata !7503, metadata !DIExpression()), !dbg !7504
  %12 = load i8, i8* %10, align 1, !dbg !7505
  %13 = icmp ne i8 %12, 0, !dbg !7506
  %14 = icmp ult i32 %11, %1, !dbg !7507
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7507
  br i1 %15, label %7, label %16, !dbg !7508, !llvm.loop !7512

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7504
  ret i32 %17, !dbg !7514
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !7515 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7519, metadata !DIExpression()), !dbg !7521
  call void @llvm.dbg.value(metadata i8* %1, metadata !7520, metadata !DIExpression()), !dbg !7521
  %3 = load i8, i8* %0, align 1, !dbg !7522
  %4 = load i8, i8* %1, align 1, !dbg !7523
  %5 = icmp ne i8 %3, %4, !dbg !7524
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7525
  br i1 %7, label %18, label %8, !dbg !7525

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7520, metadata !DIExpression()), !dbg !7521
  call void @llvm.dbg.value(metadata i8* %10, metadata !7519, metadata !DIExpression()), !dbg !7521
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7526
  call void @llvm.dbg.value(metadata i8* %11, metadata !7519, metadata !DIExpression()), !dbg !7521
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7528
  call void @llvm.dbg.value(metadata i8* %12, metadata !7520, metadata !DIExpression()), !dbg !7521
  %13 = load i8, i8* %11, align 1, !dbg !7522
  %14 = load i8, i8* %12, align 1, !dbg !7523
  %15 = icmp ne i8 %13, %14, !dbg !7524
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7525
  br i1 %17, label %18, label %8, !dbg !7525, !llvm.loop !7529

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7522
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7523
  %21 = zext i8 %19 to i32, !dbg !7532
  %22 = zext i8 %20 to i32, !dbg !7533
  %23 = sub nsw i32 %21, %22, !dbg !7534
  ret i32 %23, !dbg !7535
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7536 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7540, metadata !DIExpression()), !dbg !7543
  call void @llvm.dbg.value(metadata i8* %1, metadata !7541, metadata !DIExpression()), !dbg !7543
  call void @llvm.dbg.value(metadata i32 %2, metadata !7542, metadata !DIExpression()), !dbg !7543
  %4 = icmp eq i32 %2, 0, !dbg !7544
  br i1 %4, label %23, label %5, !dbg !7544

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7542, metadata !DIExpression()), !dbg !7543
  call void @llvm.dbg.value(metadata i8* %7, metadata !7541, metadata !DIExpression()), !dbg !7543
  call void @llvm.dbg.value(metadata i8* %8, metadata !7540, metadata !DIExpression()), !dbg !7543
  %9 = load i8, i8* %8, align 1, !dbg !7545
  %10 = load i8, i8* %7, align 1, !dbg !7546
  %11 = icmp ne i8 %9, %10, !dbg !7547
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7548
  br i1 %13, label %19, label %14, !dbg !7548

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7549
  call void @llvm.dbg.value(metadata i8* %15, metadata !7540, metadata !DIExpression()), !dbg !7543
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7551
  call void @llvm.dbg.value(metadata i8* %16, metadata !7541, metadata !DIExpression()), !dbg !7543
  %17 = add i32 %6, -1, !dbg !7552
  call void @llvm.dbg.value(metadata i32 %17, metadata !7542, metadata !DIExpression()), !dbg !7543
  %18 = icmp eq i32 %17, 0, !dbg !7544
  br i1 %18, label %23, label %5, !dbg !7544, !llvm.loop !7553

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7556
  %21 = zext i8 %10 to i32, !dbg !7557
  %22 = sub nsw i32 %20, %21, !dbg !7558
  br label %23, !dbg !7559

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7559
  ret i32 %24, !dbg !7560
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7561 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7566, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i8* %1, metadata !7567, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i8** %2, metadata !7568, metadata !DIExpression()), !dbg !7571
  %4 = icmp eq i8* %0, null, !dbg !7572
  br i1 %4, label %5, label %7, !dbg !7572

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7573
  br label %7, !dbg !7572

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7572
  call void @llvm.dbg.value(metadata i8* %8, metadata !7569, metadata !DIExpression()), !dbg !7571
  %9 = load i8, i8* %8, align 1, !dbg !7574
  %10 = icmp eq i8 %9, 0, !dbg !7574
  br i1 %10, label %33, label %11, !dbg !7575

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7569, metadata !DIExpression()), !dbg !7571
  %14 = zext i8 %12 to i32, !dbg !7574
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !7576
  %16 = icmp eq i8* %15, null, !dbg !7575
  br i1 %16, label %21, label %17, !dbg !7577

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7578
  call void @llvm.dbg.value(metadata i8* %18, metadata !7569, metadata !DIExpression()), !dbg !7571
  %19 = load i8, i8* %18, align 1, !dbg !7574
  %20 = icmp eq i8 %19, 0, !dbg !7574
  br i1 %20, label %33, label %11, !dbg !7575, !llvm.loop !7580

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7570, metadata !DIExpression()), !dbg !7571
  %24 = zext i8 %22 to i32, !dbg !7582
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !7583
  %26 = icmp eq i8* %25, null, !dbg !7584
  br i1 %26, label %27, label %31, !dbg !7585

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7586
  call void @llvm.dbg.value(metadata i8* %28, metadata !7570, metadata !DIExpression()), !dbg !7571
  %29 = load i8, i8* %28, align 1, !dbg !7582
  %30 = icmp eq i8 %29, 0, !dbg !7582
  br i1 %30, label %33, label %21, !dbg !7588, !llvm.loop !7589

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7591
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7594
  br label %33, !dbg !7595

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7571
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7571
  store i8* %34, i8** %2, align 4, !dbg !7571
  ret i8* %35, !dbg !7596
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7597 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7599, metadata !DIExpression()), !dbg !7601
  call void @llvm.dbg.value(metadata i8* %1, metadata !7600, metadata !DIExpression()), !dbg !7601
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7602
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7603
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !7604
  ret i8* %0, !dbg !7605
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7606 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7608, metadata !DIExpression()), !dbg !7613
  call void @llvm.dbg.value(metadata i8* %1, metadata !7609, metadata !DIExpression()), !dbg !7613
  call void @llvm.dbg.value(metadata i32 %2, metadata !7610, metadata !DIExpression()), !dbg !7613
  call void @llvm.dbg.value(metadata i8* %0, metadata !7611, metadata !DIExpression()), !dbg !7613
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7614
  call void @llvm.dbg.value(metadata i32 %4, metadata !7612, metadata !DIExpression()), !dbg !7613
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7615
  call void @llvm.dbg.value(metadata i8* %5, metadata !7608, metadata !DIExpression()), !dbg !7613
  call void @llvm.dbg.value(metadata i8* %1, metadata !7609, metadata !DIExpression()), !dbg !7613
  call void @llvm.dbg.value(metadata i32 %2, metadata !7610, metadata !DIExpression()), !dbg !7613
  call void @llvm.dbg.value(metadata i32 %2, metadata !7610, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7613
  %6 = icmp eq i32 %2, 0, !dbg !7616
  br i1 %6, label %18, label %7, !dbg !7617

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7618
  call void @llvm.dbg.value(metadata i8* %9, metadata !7608, metadata !DIExpression()), !dbg !7613
  call void @llvm.dbg.value(metadata i8* %10, metadata !7609, metadata !DIExpression()), !dbg !7613
  %12 = load i8, i8* %10, align 1, !dbg !7619
  %13 = icmp eq i8 %12, 0, !dbg !7620
  br i1 %13, label %18, label %14, !dbg !7621

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7622
  call void @llvm.dbg.value(metadata i8* %15, metadata !7609, metadata !DIExpression()), !dbg !7613
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7624
  call void @llvm.dbg.value(metadata i8* %16, metadata !7608, metadata !DIExpression()), !dbg !7613
  store i8 %12, i8* %9, align 1, !dbg !7625
  call void @llvm.dbg.value(metadata i32 %11, metadata !7610, metadata !DIExpression()), !dbg !7613
  call void @llvm.dbg.value(metadata i32 %11, metadata !7610, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7613
  %17 = icmp eq i32 %11, 0, !dbg !7616
  br i1 %17, label %18, label %7, !dbg !7617, !llvm.loop !7626

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7613
  store i8 0, i8* %19, align 1, !dbg !7628
  ret i8* %0, !dbg !7629
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7630 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7634, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i8* %1, metadata !7635, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i32 %2, metadata !7636, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i8* %0, metadata !7637, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i8* %1, metadata !7638, metadata !DIExpression()), !dbg !7639
  %4 = icmp eq i32 %2, 0, !dbg !7640
  br i1 %4, label %31, label %5, !dbg !7642

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7638, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i8* %0, metadata !7637, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i32 %2, metadata !7636, metadata !DIExpression()), !dbg !7639
  %6 = add i32 %2, -1, !dbg !7643
  call void @llvm.dbg.value(metadata i32 %6, metadata !7636, metadata !DIExpression()), !dbg !7639
  %7 = icmp eq i32 %6, 0, !dbg !7644
  br i1 %7, label %23, label %8, !dbg !7645

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7646
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7646
  br label %11, !dbg !7646

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7638, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i8* %14, metadata !7637, metadata !DIExpression()), !dbg !7639
  %15 = load i8, i8* %14, align 1, !dbg !7647
  %16 = load i8, i8* %13, align 1, !dbg !7648
  %17 = icmp eq i8 %15, %16, !dbg !7649
  br i1 %17, label %18, label %23, !dbg !7646

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7650
  call void @llvm.dbg.value(metadata i8* %19, metadata !7637, metadata !DIExpression()), !dbg !7639
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7652
  call void @llvm.dbg.value(metadata i8* %20, metadata !7638, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i32 %12, metadata !7636, metadata !DIExpression()), !dbg !7639
  %21 = add i32 %12, -1, !dbg !7643
  call void @llvm.dbg.value(metadata i32 %21, metadata !7636, metadata !DIExpression()), !dbg !7639
  %22 = icmp eq i32 %21, 0, !dbg !7644
  br i1 %22, label %23, label %11, !dbg !7645, !llvm.loop !7653

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7639
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7639
  %26 = load i8, i8* %24, align 1, !dbg !7655
  %27 = zext i8 %26 to i32, !dbg !7655
  %28 = load i8, i8* %25, align 1, !dbg !7656
  %29 = zext i8 %28 to i32, !dbg !7656
  %30 = sub nsw i32 %27, %29, !dbg !7657
  br label %31, !dbg !7658

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7639
  ret i32 %32, !dbg !7659
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7660 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7664, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i8* %1, metadata !7665, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i32 %2, metadata !7666, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i8* %0, metadata !7667, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i8* %1, metadata !7668, metadata !DIExpression()), !dbg !7669
  %4 = ptrtoint i8* %0 to i32, !dbg !7670
  %5 = ptrtoint i8* %1 to i32, !dbg !7670
  %6 = sub i32 %4, %5, !dbg !7670
  %7 = icmp ult i32 %6, %2, !dbg !7672
  br i1 %7, label %10, label %8, !dbg !7673

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7668, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i8* %0, metadata !7667, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i32 %2, metadata !7666, metadata !DIExpression()), !dbg !7669
  %9 = icmp eq i32 %2, 0, !dbg !7674
  br i1 %9, label %26, label %17, !dbg !7676

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7666, metadata !DIExpression()), !dbg !7669
  %12 = add i32 %11, -1, !dbg !7677
  call void @llvm.dbg.value(metadata i32 %12, metadata !7666, metadata !DIExpression()), !dbg !7669
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7680
  %14 = load i8, i8* %13, align 1, !dbg !7680
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7681
  store i8 %14, i8* %15, align 1, !dbg !7682
  %16 = icmp eq i32 %12, 0, !dbg !7683
  br i1 %16, label %26, label %10, !dbg !7684, !llvm.loop !7685

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7668, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i8* %19, metadata !7667, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i32 %20, metadata !7666, metadata !DIExpression()), !dbg !7669
  %21 = load i8, i8* %18, align 1, !dbg !7687
  store i8 %21, i8* %19, align 1, !dbg !7689
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7690
  call void @llvm.dbg.value(metadata i8* %22, metadata !7667, metadata !DIExpression()), !dbg !7669
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7691
  call void @llvm.dbg.value(metadata i8* %23, metadata !7668, metadata !DIExpression()), !dbg !7669
  %24 = add i32 %20, -1, !dbg !7692
  call void @llvm.dbg.value(metadata i32 %24, metadata !7666, metadata !DIExpression()), !dbg !7669
  %25 = icmp eq i32 %24, 0, !dbg !7674
  br i1 %25, label %26, label %17, !dbg !7676, !llvm.loop !7693

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7695
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7696 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7702, metadata !DIExpression()), !dbg !7707
  call void @llvm.dbg.value(metadata i8* %1, metadata !7703, metadata !DIExpression()), !dbg !7707
  call void @llvm.dbg.value(metadata i32 %2, metadata !7704, metadata !DIExpression()), !dbg !7707
  call void @llvm.dbg.value(metadata i8* %0, metadata !7705, metadata !DIExpression()), !dbg !7707
  call void @llvm.dbg.value(metadata i8* %1, metadata !7706, metadata !DIExpression()), !dbg !7707
  %4 = icmp eq i32 %2, 0, !dbg !7708
  br i1 %4, label %14, label %5, !dbg !7709

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7706, metadata !DIExpression()), !dbg !7707
  call void @llvm.dbg.value(metadata i8* %7, metadata !7705, metadata !DIExpression()), !dbg !7707
  call void @llvm.dbg.value(metadata i32 %8, metadata !7704, metadata !DIExpression()), !dbg !7707
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7710
  call void @llvm.dbg.value(metadata i8* %9, metadata !7706, metadata !DIExpression()), !dbg !7707
  %10 = load i8, i8* %6, align 1, !dbg !7712
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7713
  call void @llvm.dbg.value(metadata i8* %11, metadata !7705, metadata !DIExpression()), !dbg !7707
  store i8 %10, i8* %7, align 1, !dbg !7714
  %12 = add i32 %8, -1, !dbg !7715
  call void @llvm.dbg.value(metadata i32 %12, metadata !7704, metadata !DIExpression()), !dbg !7707
  %13 = icmp eq i32 %12, 0, !dbg !7708
  br i1 %13, label %14, label %5, !dbg !7709, !llvm.loop !7716

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7718
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !7719 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7723, metadata !DIExpression()), !dbg !7728
  call void @llvm.dbg.value(metadata i32 %1, metadata !7724, metadata !DIExpression()), !dbg !7728
  call void @llvm.dbg.value(metadata i32 %2, metadata !7725, metadata !DIExpression()), !dbg !7728
  call void @llvm.dbg.value(metadata i8* %0, metadata !7726, metadata !DIExpression()), !dbg !7728
  %4 = trunc i32 %1 to i8, !dbg !7729
  call void @llvm.dbg.value(metadata i8 %4, metadata !7727, metadata !DIExpression()), !dbg !7728
  call void @llvm.dbg.value(metadata i32 %2, metadata !7725, metadata !DIExpression()), !dbg !7728
  call void @llvm.dbg.value(metadata i8* %0, metadata !7726, metadata !DIExpression()), !dbg !7728
  %5 = icmp eq i32 %2, 0, !dbg !7730
  br i1 %5, label %12, label %6, !dbg !7731

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7725, metadata !DIExpression()), !dbg !7728
  call void @llvm.dbg.value(metadata i8* %8, metadata !7726, metadata !DIExpression()), !dbg !7728
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7732
  call void @llvm.dbg.value(metadata i8* %9, metadata !7726, metadata !DIExpression()), !dbg !7728
  store i8 %4, i8* %8, align 1, !dbg !7734
  %10 = add i32 %7, -1, !dbg !7735
  call void @llvm.dbg.value(metadata i32 %10, metadata !7725, metadata !DIExpression()), !dbg !7728
  %11 = icmp eq i32 %10, 0, !dbg !7730
  br i1 %11, label %12, label %6, !dbg !7731, !llvm.loop !7736

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7738
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7739 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7743, metadata !DIExpression()), !dbg !7749
  call void @llvm.dbg.value(metadata i32 %1, metadata !7744, metadata !DIExpression()), !dbg !7749
  call void @llvm.dbg.value(metadata i32 %2, metadata !7745, metadata !DIExpression()), !dbg !7749
  %4 = icmp eq i32 %2, 0, !dbg !7750
  br i1 %4, label %17, label %5, !dbg !7751

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7752

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7753
  call void @llvm.dbg.value(metadata i8* %9, metadata !7746, metadata !DIExpression()), !dbg !7753
  call void @llvm.dbg.value(metadata i32 %8, metadata !7745, metadata !DIExpression()), !dbg !7749
  call void @llvm.dbg.value(metadata i8* %9, metadata !7746, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7753
  %10 = load i8, i8* %9, align 1, !dbg !7754
  %11 = icmp eq i8 %10, %6, !dbg !7757
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7758
  call void @llvm.dbg.value(metadata i8* %12, metadata !7746, metadata !DIExpression()), !dbg !7753
  call void @llvm.dbg.value(metadata i32 %13, metadata !7745, metadata !DIExpression()), !dbg !7749
  br i1 %15, label %16, label %7, !dbg !7758, !llvm.loop !7759

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7761

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7749
  ret i8* %19, !dbg !7762
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !7763 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7765, metadata !DIExpression()), !dbg !7766
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7767
  ret void, !dbg !7768
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !7769 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7771, metadata !DIExpression()), !dbg !7772
  ret i32 -1, !dbg !7773
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7774 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7778, metadata !DIExpression()), !dbg !7780
  call void @llvm.dbg.value(metadata i32* %1, metadata !7779, metadata !DIExpression()), !dbg !7780
  %3 = ptrtoint i32* %1 to i32, !dbg !7781
  %4 = and i32 %3, -2, !dbg !7781
  %5 = icmp eq i32 %4, 2, !dbg !7781
  br i1 %5, label %6, label %9, !dbg !7781

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7782
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !7782
  br label %9, !dbg !7783

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7783
  ret i32 %10, !dbg !7784
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7785 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7787, metadata !DIExpression()), !dbg !7789
  call void @llvm.dbg.value(metadata i32* %1, metadata !7788, metadata !DIExpression()), !dbg !7789
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7790
  ret i32 %3, !dbg !7791
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7792 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7795, metadata !DIExpression()), !dbg !7797
  call void @llvm.dbg.value(metadata i32* %1, metadata !7796, metadata !DIExpression()), !dbg !7797
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7798, !srcloc !7800
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7801
  ret i32 %3, !dbg !7802
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7803 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7808, metadata !DIExpression()), !dbg !7812
  call void @llvm.dbg.value(metadata i32* %1, metadata !7809, metadata !DIExpression()), !dbg !7812
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !7813
  call void @llvm.dbg.value(metadata i32 %3, metadata !7810, metadata !DIExpression()), !dbg !7812
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !7814
  call void @llvm.dbg.value(metadata i32 %4, metadata !7811, metadata !DIExpression()), !dbg !7812
  %5 = icmp ne i32 %3, %4, !dbg !7815
  %6 = sext i1 %5 to i32, !dbg !7816
  ret i32 %6, !dbg !7817
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7818 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7822, metadata !DIExpression()), !dbg !7826
  call void @llvm.dbg.value(metadata i32 %1, metadata !7823, metadata !DIExpression()), !dbg !7826
  call void @llvm.dbg.value(metadata i32 %2, metadata !7824, metadata !DIExpression()), !dbg !7826
  call void @llvm.dbg.value(metadata i32* %3, metadata !7825, metadata !DIExpression()), !dbg !7826
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7827
  ret i32 %5, !dbg !7828
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7829 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7831, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.value(metadata i32 %1, metadata !7832, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.value(metadata i32 %2, metadata !7833, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.value(metadata i32* %3, metadata !7834, metadata !DIExpression()), !dbg !7835
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7836, !srcloc !7838
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7839
  ret i32 %5, !dbg !7840
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7841 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7843, metadata !DIExpression()), !dbg !7851
  call void @llvm.dbg.value(metadata i32 %1, metadata !7844, metadata !DIExpression()), !dbg !7851
  call void @llvm.dbg.value(metadata i32 %2, metadata !7845, metadata !DIExpression()), !dbg !7851
  call void @llvm.dbg.value(metadata i32* %3, metadata !7846, metadata !DIExpression()), !dbg !7851
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7852
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7854
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7854
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7854
  br i1 %11, label %33, label %12, !dbg !7854

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7851
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7851
  call void @llvm.dbg.value(metadata i8* %14, metadata !7849, metadata !DIExpression()), !dbg !7851
  call void @llvm.dbg.value(metadata i32 %13, metadata !7847, metadata !DIExpression()), !dbg !7851
  call void @llvm.dbg.value(metadata i32 %1, metadata !7848, metadata !DIExpression()), !dbg !7851
  br label %15, !dbg !7855

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7857
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7851
  call void @llvm.dbg.value(metadata i8* %17, metadata !7849, metadata !DIExpression()), !dbg !7851
  call void @llvm.dbg.value(metadata i32 %16, metadata !7848, metadata !DIExpression()), !dbg !7851
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7858
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7861
  call void @llvm.dbg.value(metadata i8* %19, metadata !7849, metadata !DIExpression()), !dbg !7851
  %20 = load i8, i8* %17, align 1, !dbg !7862
  %21 = zext i8 %20 to i32, !dbg !7863
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !7858
  %23 = icmp eq i32 %22, -1, !dbg !7864
  br i1 %23, label %30, label %24, !dbg !7865

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7866
  call void @llvm.dbg.value(metadata i32 %25, metadata !7848, metadata !DIExpression()), !dbg !7851
  %26 = icmp eq i32 %25, 0, !dbg !7867
  br i1 %26, label %27, label %15, !dbg !7868, !llvm.loop !7869

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7871
  call void @llvm.dbg.value(metadata i32 %28, metadata !7847, metadata !DIExpression()), !dbg !7851
  %29 = icmp eq i32 %28, 0, !dbg !7872
  br i1 %29, label %30, label %12, !dbg !7873, !llvm.loop !7874

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7851
  call void @llvm.dbg.value(metadata i32 %31, metadata !7847, metadata !DIExpression()), !dbg !7851
  call void @llvm.dbg.label(metadata !7850), !dbg !7877
  %32 = sub i32 %2, %31, !dbg !7878
  br label %33, !dbg !7879

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7851
  ret i32 %34, !dbg !7880
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7881 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7885, metadata !DIExpression()), !dbg !7886
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7887
  %3 = icmp eq i32 %2, -1, !dbg !7889
  br i1 %3, label %8, label %4, !dbg !7890

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7891
  %6 = icmp eq i32 %5, -1, !dbg !7892
  %7 = sext i1 %6 to i32, !dbg !7891
  br label %8, !dbg !7893

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7886
  ret i32 %9, !dbg !7894
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7895 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7897, metadata !DIExpression()), !dbg !7898
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !7899
  ret void, !dbg !7900
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !7901 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7905, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.value(metadata i32 %1, metadata !7906, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !7907, metadata !DIExpression()), !dbg !7911
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !7912
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !7912
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !7912
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !7908, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.value(metadata i32 %0, metadata !7910, metadata !DIExpression()), !dbg !7911
  %7 = icmp slt i32 %0, %1, !dbg !7913
  br i1 %7, label %8, label %22, !dbg !7916

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7910, metadata !DIExpression()), !dbg !7911
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !7917
  %11 = icmp eq i32 %10, 0, !dbg !7917
  br i1 %11, label %19, label %12, !dbg !7920

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !7921
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7923
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7923
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7925
  br i1 %15, label %19, label %16, !dbg !7926

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7927
  %18 = load i8*, i8** %17, align 4, !dbg !7927
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !7928
  br label %19, !dbg !7929

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7930
  call void @llvm.dbg.value(metadata i32 %20, metadata !7910, metadata !DIExpression()), !dbg !7911
  %21 = icmp eq i32 %20, %1, !dbg !7913
  br i1 %21, label %22, label %8, !dbg !7916, !llvm.loop !7931

22:                                               ; preds = %19, %3
  ret void, !dbg !7933
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !7934 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7936, metadata !DIExpression()), !dbg !7937
  %2 = shl nuw i32 1, %0, !dbg !7938
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !7941
  ret i32 %3, !dbg !7942
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !7943 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7947, metadata !DIExpression()), !dbg !7948
  %2 = shl nuw i32 1, %0, !dbg !7949
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !7952
  ret void, !dbg !7953
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7954 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7957, metadata !DIExpression()), !dbg !7958
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7959
  ret void, !dbg !7960
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7961 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7963, metadata !DIExpression()), !dbg !7964
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7965
  %3 = and i32 %2, %0, !dbg !7965
  %4 = icmp eq i32 %3, %0, !dbg !7966
  %5 = zext i1 %4 to i32, !dbg !7966
  ret i32 %5, !dbg !7967
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !7968 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7970, metadata !DIExpression()), !dbg !7971
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !7972
  ret void, !dbg !7973
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !7974 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7976, metadata !DIExpression()), !dbg !7977
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !7978
  ret void, !dbg !7979
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !7980 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7982, metadata !DIExpression()), !dbg !7983
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !7984
  ret void, !dbg !7985
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !7986 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7988, metadata !DIExpression()), !dbg !7989
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !7990
  ret void, !dbg !7991
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !7992 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7994, metadata !DIExpression()), !dbg !7995
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !7996
  ret void, !dbg !7997
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !7998 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8000, metadata !DIExpression()), !dbg !8001
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !8002
  ret void, !dbg !8003
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8004 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8006, metadata !DIExpression()), !dbg !8007
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !8008
  ret void, !dbg !8009
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8010 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8012, metadata !DIExpression()), !dbg !8013
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !8014
  ret void, !dbg !8015
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8016 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8018, metadata !DIExpression()), !dbg !8019
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !8020
  ret void, !dbg !8021
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8022 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8024, metadata !DIExpression()), !dbg !8025
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !8026
  ret void, !dbg !8027
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8028 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8030, metadata !DIExpression()), !dbg !8031
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !8032
  ret i32 0, !dbg !8033
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !625 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !629, metadata !DIExpression()), !dbg !8034
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8035
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8037
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8039
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8041
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8043
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8045
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8047
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !8049
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !8051
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !8053
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !8055
  ret void, !dbg !8057
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8058 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8060, metadata !DIExpression()), !dbg !8062
  call void @llvm.dbg.value(metadata i32 0, metadata !8061, metadata !DIExpression()), !dbg !8062
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8063
  %3 = load i32, i32* %2, align 4, !dbg !8063
  call void @llvm.dbg.value(metadata i32 %3, metadata !8061, metadata !DIExpression()), !dbg !8062
  %4 = shl nuw i32 1, %0, !dbg !8064
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !8065
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !8066
  ret void, !dbg !8067
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8068 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8070, metadata !DIExpression()), !dbg !8071
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8072
  %3 = or i32 %2, %0, !dbg !8072
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8072
  ret void, !dbg !8073
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !8074 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8076, metadata !DIExpression()), !dbg !8077
  %2 = icmp slt i32 %0, 32, !dbg !8078
  br i1 %2, label %3, label %5, !dbg !8080

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8081
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !8083
  br label %5, !dbg !8084

5:                                                ; preds = %1, %3
  ret void, !dbg !8085
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8088, metadata !DIExpression()), !dbg !8089
  %2 = xor i32 %0, -1, !dbg !8090
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8090
  %4 = and i32 %3, %2, !dbg !8090
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8090
  ret void, !dbg !8091
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !8092 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8096, metadata !DIExpression()), !dbg !8098
  call void @llvm.dbg.value(metadata i32 %1, metadata !8097, metadata !DIExpression()), !dbg !8098
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8099

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8100
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !8102
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !8103
  br label %11, !dbg !8104

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8105
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !8106
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !8107
  br label %11, !dbg !8108

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8109
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !8110
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !8111
  br label %11, !dbg !8112

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8113
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !8114
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !8115
  br label %11, !dbg !8116

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8117
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8118 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8120, metadata !DIExpression()), !dbg !8121
  %2 = xor i32 %0, -1, !dbg !8122
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8122
  %4 = and i32 %3, %2, !dbg !8122
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8122
  ret void, !dbg !8123
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8124 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8126, metadata !DIExpression()), !dbg !8127
  %2 = xor i32 %0, -1, !dbg !8128
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8128
  %4 = and i32 %3, %2, !dbg !8128
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8128
  ret void, !dbg !8129
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8130 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8132, metadata !DIExpression()), !dbg !8133
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8134
  %3 = or i32 %2, %0, !dbg !8134
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8134
  ret void, !dbg !8135
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8136 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8138, metadata !DIExpression()), !dbg !8139
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8140
  %3 = or i32 %2, %0, !dbg !8140
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8140
  ret void, !dbg !8141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !8142 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8146, metadata !DIExpression()), !dbg !8152
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8147, metadata !DIExpression()), !dbg !8152
  call void @llvm.dbg.value(metadata i8* %2, metadata !8148, metadata !DIExpression()), !dbg !8152
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !8149, metadata !DIExpression()), !dbg !8152
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8151, metadata !DIExpression()), !dbg !8152
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8153
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8153
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8155
  br i1 %6, label %7, label %9, !dbg !8156

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8157
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8158
  store i8* %2, i8** %8, align 4, !dbg !8159
  br label %9, !dbg !8160

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8152
  ret i32 %10, !dbg !8161
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !8162 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8164, metadata !DIExpression()), !dbg !8167
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !8165, metadata !DIExpression()), !dbg !8167
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8166, metadata !DIExpression()), !dbg !8167
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8168
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8169
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8170
  store i8* null, i8** %3, align 4, !dbg !8171
  ret void, !dbg !8172
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8173 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8175, metadata !DIExpression()), !dbg !8180
  call void @llvm.dbg.value(metadata i8* %1, metadata !8176, metadata !DIExpression()), !dbg !8180
  call void @llvm.dbg.value(metadata i8* %1, metadata !8177, metadata !DIExpression()), !dbg !8180
  %3 = bitcast i8* %1 to i32*, !dbg !8181
  %4 = load i32, i32* %3, align 4, !dbg !8181
  %5 = add i32 %4, -169, !dbg !8181
  %6 = icmp ult i32 %5, -121, !dbg !8181
  br i1 %6, label %15, label %7, !dbg !8183

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8184
  %9 = inttoptr i32 %8 to i32*, !dbg !8185
  call void @llvm.dbg.value(metadata i32* %9, metadata !8178, metadata !DIExpression()), !dbg !8180
  %10 = load volatile i32, i32* %9, align 4, !dbg !8186
  call void @llvm.dbg.value(metadata i32 %10, metadata !8179, metadata !DIExpression()), !dbg !8180
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8187
  %12 = bitcast i8* %11 to i32*, !dbg !8187
  %13 = load i32, i32* %12, align 4, !dbg !8187
  %14 = or i32 %13, %10, !dbg !8188
  call void @llvm.dbg.value(metadata i32 %14, metadata !8179, metadata !DIExpression()), !dbg !8180
  store volatile i32 %14, i32* %9, align 4, !dbg !8189
  br label %15, !dbg !8190

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8180
  ret i32 %16, !dbg !8191
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8192 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8194, metadata !DIExpression()), !dbg !8199
  call void @llvm.dbg.value(metadata i8* %1, metadata !8195, metadata !DIExpression()), !dbg !8199
  call void @llvm.dbg.value(metadata i8* %1, metadata !8196, metadata !DIExpression()), !dbg !8199
  %3 = bitcast i8* %1 to i32*, !dbg !8200
  %4 = load i32, i32* %3, align 4, !dbg !8200
  %5 = add i32 %4, -169, !dbg !8200
  %6 = icmp ult i32 %5, -121, !dbg !8200
  br i1 %6, label %16, label %7, !dbg !8202

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8203
  %9 = inttoptr i32 %8 to i32*, !dbg !8204
  call void @llvm.dbg.value(metadata i32* %9, metadata !8197, metadata !DIExpression()), !dbg !8199
  %10 = load volatile i32, i32* %9, align 4, !dbg !8205
  call void @llvm.dbg.value(metadata i32 %10, metadata !8198, metadata !DIExpression()), !dbg !8199
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8206
  %12 = bitcast i8* %11 to i32*, !dbg !8206
  %13 = load i32, i32* %12, align 4, !dbg !8206
  %14 = xor i32 %13, -1, !dbg !8207
  %15 = and i32 %10, %14, !dbg !8208
  call void @llvm.dbg.value(metadata i32 %15, metadata !8198, metadata !DIExpression()), !dbg !8199
  store volatile i32 %15, i32* %9, align 4, !dbg !8209
  br label %16, !dbg !8210

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8199
  ret i32 %17, !dbg !8211
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8212 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8214, metadata !DIExpression()), !dbg !8222
  call void @llvm.dbg.value(metadata i8* %1, metadata !8215, metadata !DIExpression()), !dbg !8222
  call void @llvm.dbg.value(metadata i32* %2, metadata !8216, metadata !DIExpression()), !dbg !8222
  call void @llvm.dbg.value(metadata i8* %1, metadata !8217, metadata !DIExpression()), !dbg !8222
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8223
  call void @llvm.dbg.value(metadata i32 %4, metadata !8218, metadata !DIExpression()), !dbg !8222
  call void @llvm.dbg.value(metadata i32 undef, metadata !8219, metadata !DIExpression()), !dbg !8222
  call void @llvm.dbg.value(metadata i32 undef, metadata !8220, metadata !DIExpression()), !dbg !8222
  call void @llvm.dbg.value(metadata i32 %4, metadata !8221, metadata !DIExpression()), !dbg !8222
  %5 = bitcast i8* %1 to i32*, !dbg !8224
  %6 = load i32, i32* %5, align 4, !dbg !8224
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !8225

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 4) #26, !dbg !8226
  call void @llvm.dbg.value(metadata i32 %8, metadata !8219, metadata !DIExpression()), !dbg !8222
  br label %19, !dbg !8227

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #26, !dbg !8229
  call void @llvm.dbg.value(metadata i32 %10, metadata !8220, metadata !DIExpression()), !dbg !8222
  br label %19, !dbg !8230

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8231
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #26, !dbg !8232
  br label %19, !dbg !8233

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8234
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #26, !dbg !8235
  br label %19, !dbg !8236

17:                                               ; preds = %3
  br label %19, !dbg !8237

18:                                               ; preds = %3
  br label %19, !dbg !8238

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !8239
  br label %21, !dbg !8240

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !8222
  ret i32 %22, !dbg !8240
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8241 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8243, metadata !DIExpression()), !dbg !8251
  call void @llvm.dbg.value(metadata i8* %1, metadata !8244, metadata !DIExpression()), !dbg !8251
  call void @llvm.dbg.value(metadata i8* %2, metadata !8245, metadata !DIExpression()), !dbg !8251
  call void @llvm.dbg.value(metadata i8* %1, metadata !8246, metadata !DIExpression()), !dbg !8251
  %4 = bitcast i8* %1 to i32*, !dbg !8252
  %5 = load i32, i32* %4, align 4, !dbg !8252
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !8253
  call void @llvm.dbg.value(metadata i32 %6, metadata !8250, metadata !DIExpression()), !dbg !8251
  %7 = icmp slt i32 %6, 0, !dbg !8254
  br i1 %7, label %22, label %8, !dbg !8256

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8246, metadata !DIExpression()), !dbg !8251
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8257
  %10 = bitcast i8* %9 to i32*, !dbg !8257
  %11 = load i32, i32* %10, align 4, !dbg !8257
  %12 = lshr i32 %11, 16, !dbg !8257
  %13 = and i32 %12, 7, !dbg !8257
  %14 = lshr i32 %11, 8, !dbg !8258
  %15 = and i32 %14, 31, !dbg !8258
  %16 = shl i32 %13, %15, !dbg !8259
  call void @llvm.dbg.value(metadata i32 %16, metadata !8249, metadata !DIExpression()), !dbg !8251
  %17 = and i32 %11, 255, !dbg !8260
  %18 = or i32 %17, 1073887232, !dbg !8261
  %19 = inttoptr i32 %18 to i32*, !dbg !8262
  call void @llvm.dbg.value(metadata i32* %19, metadata !8247, metadata !DIExpression()), !dbg !8251
  %20 = load volatile i32, i32* %19, align 4, !dbg !8263
  call void @llvm.dbg.value(metadata i32 %20, metadata !8248, metadata !DIExpression()), !dbg !8251
  %21 = or i32 %16, %20, !dbg !8264
  call void @llvm.dbg.value(metadata i32 %21, metadata !8248, metadata !DIExpression()), !dbg !8251
  store volatile i32 %21, i32* %19, align 4, !dbg !8265
  br label %22, !dbg !8266

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8251
  ret i32 %23, !dbg !8267
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !8268 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8272, metadata !DIExpression()), !dbg !8274
  call void @llvm.dbg.value(metadata i32 0, metadata !8273, metadata !DIExpression()), !dbg !8274
  %2 = add i32 %0, -1, !dbg !8275
  %3 = icmp ult i32 %2, 6, !dbg !8275
  br i1 %3, label %4, label %7, !dbg !8275

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8275
  %6 = load i32, i32* %5, align 4, !dbg !8275
  call void @llvm.dbg.value(metadata i32 %6, metadata !8273, metadata !DIExpression()), !dbg !8274
  br label %7, !dbg !8276

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8274
  ret i32 %8, !dbg !8277
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8278 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8282, metadata !DIExpression()), !dbg !8284
  call void @llvm.dbg.value(metadata i32 %1, metadata !8283, metadata !DIExpression()), !dbg !8284
  %3 = udiv i32 %0, %1, !dbg !8285
  ret i32 %3, !dbg !8286
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8287 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8291, metadata !DIExpression()), !dbg !8295
  call void @llvm.dbg.value(metadata i32 12, metadata !8292, metadata !DIExpression()), !dbg !8295
  call void @llvm.dbg.value(metadata i32 336, metadata !8293, metadata !DIExpression()), !dbg !8295
  call void @llvm.dbg.value(metadata i32 %1, metadata !8294, metadata !DIExpression()), !dbg !8295
  %3 = mul i32 %0, 336, !dbg !8296
  %4 = mul nsw i32 %1, 12, !dbg !8297
  %5 = udiv i32 %3, %4, !dbg !8298
  ret i32 %5, !dbg !8299
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8300 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8302, metadata !DIExpression()), !dbg !8305
  tail call void @config_enable_default_clocks() #25, !dbg !8306
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8307
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !8307
  %4 = lshr i32 %3, 4, !dbg !8307
  %5 = and i32 %4, 15, !dbg !8307
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8307
  %7 = load i8, i8* %6, align 1, !dbg !8307
  %8 = zext i8 %7 to i32, !dbg !8307
  %9 = lshr i32 %2, %8, !dbg !8307
  call void @llvm.dbg.value(metadata i32 %9, metadata !8303, metadata !DIExpression()), !dbg !8305
  call void @llvm.dbg.value(metadata !DIArgList(i32 168000000, i8 undef), metadata !8304, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8305
  %10 = icmp ult i32 %9, 168000000, !dbg !8308
  br i1 %10, label %11, label %13, !dbg !8310

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #25, !dbg !8311
  br label %13, !dbg !8313

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !8314
  tail call fastcc void @set_up_plls() #26, !dbg !8315
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8316
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !8319
  br label %14, !dbg !8320

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8321
  %16 = icmp eq i32 %15, 8, !dbg !8322
  br i1 %16, label %17, label %14, !dbg !8320, !llvm.loop !8323

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 167999999, !dbg !8325
  br i1 %18, label %19, label %21, !dbg !8327

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #25, !dbg !8328
  br label %21, !dbg !8330

21:                                               ; preds = %19, %17
  store i32 168000000, i32* @SystemCoreClock, align 4, !dbg !8331
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !8332
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !8333
  ret i32 0, !dbg !8334
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8335 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8337
  %2 = and i32 %1, 240, !dbg !8337
  ret i32 %2, !dbg !8338
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8339 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !8340
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !8345
  br label %1, !dbg !8346

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !8347
  %3 = icmp eq i32 %2, 1, !dbg !8348
  br i1 %3, label %4, label %1, !dbg !8346, !llvm.loop !8349

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !8351
  br label %5, !dbg !8354

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !8355
  %7 = icmp eq i32 %6, 1, !dbg !8356
  br i1 %7, label %8, label %5, !dbg !8354, !llvm.loop !8357

8:                                                ; preds = %5
  ret void, !dbg !8359
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8360 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8361
  %2 = icmp eq i32 %1, 8, !dbg !8363
  br i1 %2, label %3, label %4, !dbg !8364

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8365
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !8367
  br label %4, !dbg !8368

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !8369
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8370
  %6 = and i32 %5, -196609, !dbg !8370
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8370
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8371
  %8 = and i32 %7, -251658241, !dbg !8371
  %9 = or i32 %8, 117440512, !dbg !8371
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8371
  tail call void @config_pll_sysclock() #25, !dbg !8372
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !8373
  br label %10, !dbg !8374

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !8375
  %12 = icmp eq i32 %11, 1, !dbg !8376
  br i1 %12, label %13, label %10, !dbg !8374, !llvm.loop !8377

13:                                               ; preds = %10
  ret void, !dbg !8379
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8380 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8382, metadata !DIExpression()), !dbg !8383
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8384
  %2 = and i32 %1, -241, !dbg !8384
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8384
  ret void, !dbg !8385
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8386 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8388, metadata !DIExpression()), !dbg !8389
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8390
  %3 = and i32 %2, -4, !dbg !8390
  %4 = or i32 %3, %0, !dbg !8390
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8390
  ret void, !dbg !8391
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8392 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8393
  %2 = and i32 %1, 12, !dbg !8393
  ret i32 %2, !dbg !8394
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8395 {
  call void @llvm.dbg.value(metadata i32 5120, metadata !8397, metadata !DIExpression()), !dbg !8398
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8399
  %2 = and i32 %1, -7169, !dbg !8399
  %3 = or i32 %2, 5120, !dbg !8399
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8399
  ret void, !dbg !8400
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8401 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !8403, metadata !DIExpression()), !dbg !8404
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8405
  %2 = and i32 %1, -57345, !dbg !8405
  %3 = or i32 %2, 32768, !dbg !8405
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8405
  ret void, !dbg !8406
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8407 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8408
  %2 = icmp eq i32 %1, 1, !dbg !8410
  br i1 %2, label %7, label %3, !dbg !8411

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8412
  br label %4, !dbg !8414

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8415
  %6 = icmp eq i32 %5, 1, !dbg !8416
  br i1 %6, label %7, label %4, !dbg !8414, !llvm.loop !8417

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !8419
  br label %8, !dbg !8420

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8421
  %10 = icmp eq i32 %9, 0, !dbg !8422
  br i1 %10, label %11, label %8, !dbg !8420, !llvm.loop !8423

11:                                               ; preds = %8
  ret void, !dbg !8425
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8426 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8427
  %2 = and i32 %1, -16777217, !dbg !8427
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8427
  ret void, !dbg !8428
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8429 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8430
  %2 = or i32 %1, 16777216, !dbg !8430
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8430
  ret void, !dbg !8431
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8432 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8433
  %2 = lshr i32 %1, 25, !dbg !8434
  %3 = and i32 %2, 1, !dbg !8434
  ret i32 %3, !dbg !8435
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8436 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8437
  %2 = lshr i32 %1, 1, !dbg !8438
  %3 = and i32 %2, 1, !dbg !8438
  ret i32 %3, !dbg !8439
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8440 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8441
  %2 = or i32 %1, 1, !dbg !8441
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8441
  ret void, !dbg !8442
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !8443 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8444
  %2 = and i32 %1, -262145, !dbg !8444
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8444
  ret void, !dbg !8445
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !8446 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8447
  %2 = or i32 %1, 65536, !dbg !8447
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8447
  ret void, !dbg !8448
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !8449 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8450
  %2 = lshr i32 %1, 17, !dbg !8451
  %3 = and i32 %2, 1, !dbg !8451
  ret i32 %3, !dbg !8452
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8453 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8454
  %2 = or i32 %1, 1, !dbg !8454
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8454
  ret void, !dbg !8455
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8456 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8457
  %2 = lshr i32 %1, 1, !dbg !8458
  %3 = and i32 %2, 1, !dbg !8458
  ret i32 %3, !dbg !8459
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !8460 {
  ret i32 12000000, !dbg !8462
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8466 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !8467
  ret void, !dbg !8468
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8469 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8473, metadata !DIExpression()), !dbg !8477
  call void @llvm.dbg.value(metadata i32 12, metadata !8474, metadata !DIExpression()), !dbg !8477
  call void @llvm.dbg.value(metadata i32 336, metadata !8475, metadata !DIExpression()), !dbg !8477
  call void @llvm.dbg.value(metadata i32 0, metadata !8476, metadata !DIExpression()), !dbg !8477
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8478
  %2 = and i32 %1, -4227072, !dbg !8478
  %3 = or i32 %2, 4215820, !dbg !8478
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8478
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8479
  %5 = and i32 %4, -196609, !dbg !8479
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8479
  ret void, !dbg !8480
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !8481 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !8482
  ret void, !dbg !8483
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !8484 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8487, metadata !DIExpression()), !dbg !8489
  %2 = bitcast i32* %1 to i8*, !dbg !8490
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8490
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8488, metadata !DIExpression()), !dbg !8491
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8492
  %4 = or i32 %3, 268435456, !dbg !8492
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8492
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8493
  %6 = and i32 %5, 268435456, !dbg !8493
  store volatile i32 %6, i32* %1, align 4, !dbg !8494
  %7 = load volatile i32, i32* %1, align 4, !dbg !8495
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8496
  ret void, !dbg !8496
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8497 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8499, metadata !DIExpression()), !dbg !8500
  %2 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !8501
  br i1 %2, label %3, label %4, !dbg !8503

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !8504
  br label %4, !dbg !8505

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8500
  ret i32 %5, !dbg !8506
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8507 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8512, metadata !DIExpression()), !dbg !8513
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8514, !srcloc !8516
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !8517
  ret i1 %1, !dbg !8518
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8519 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8520
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8521
  ret void, !dbg !8522
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8523 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8525, metadata !DIExpression()), !dbg !8526
  %2 = icmp eq i32 %0, 10, !dbg !8527
  br i1 %2, label %3, label %4, !dbg !8529

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !8530
  br label %4, !dbg !8532

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8533
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #26, !dbg !8534
  ret i32 %0, !dbg !8535
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8536 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8539, metadata !DIExpression()), !dbg !8541
  call void @llvm.dbg.value(metadata i8 %0, metadata !8540, metadata !DIExpression()), !dbg !8541
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8542, !srcloc !8544
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !8545
  ret void, !dbg !8546
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8547 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8549, metadata !DIExpression()), !dbg !8552
  call void @llvm.dbg.value(metadata i8 %0, metadata !8550, metadata !DIExpression()), !dbg !8552
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8553
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8551, metadata !DIExpression()), !dbg !8552
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8554
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8554
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #25, !dbg !8555
  ret void, !dbg !8556
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !8557 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8559, metadata !DIExpression()), !dbg !8560
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !8561
  ret i1 %1, !dbg !8562
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #11 !dbg !8563 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8610, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8611, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8612, metadata !DIExpression()), !dbg !8613
  ret void, !dbg !8614
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8615 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8617, metadata !DIExpression()), !dbg !8622
  call void @llvm.dbg.value(metadata i8 %1, metadata !8618, metadata !DIExpression()), !dbg !8622
  call void @llvm.dbg.value(metadata i32 %2, metadata !8619, metadata !DIExpression()), !dbg !8622
  %5 = bitcast i32* %4 to i8*, !dbg !8623
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !8623
  call void @llvm.dbg.value(metadata i32* %4, metadata !8621, metadata !DIExpression(DW_OP_deref)), !dbg !8622
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !8624
  call void @llvm.dbg.value(metadata i32 %6, metadata !8620, metadata !DIExpression()), !dbg !8622
  %7 = icmp eq i32 %6, 0, !dbg !8625
  br i1 %7, label %8, label %31, !dbg !8627

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8620, metadata !DIExpression()), !dbg !8622
  %9 = and i32 %2, 131072, !dbg !8628
  %10 = icmp eq i32 %9, 0, !dbg !8630
  br i1 %10, label %28, label %11, !dbg !8631

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8632
  %13 = icmp eq i32 %12, 0, !dbg !8635
  br i1 %13, label %18, label %14, !dbg !8636

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8637
  %16 = shl nuw i32 1, %15, !dbg !8637
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !8639
  br label %25, !dbg !8640

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8641
  %20 = icmp eq i32 %19, 0, !dbg !8643
  %21 = zext i8 %1 to i32, !dbg !8622
  br i1 %20, label %25, label %22, !dbg !8644

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8645
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !8647
  br label %25, !dbg !8648

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !8649
  %27 = load i32, i32* %4, align 4, !dbg !8650
  call void @llvm.dbg.value(metadata i32 %30, metadata !8621, metadata !DIExpression()), !dbg !8622
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !8651
  br label %31, !dbg !8652

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !8649
  %30 = load i32, i32* %4, align 4, !dbg !8650
  call void @llvm.dbg.value(metadata i32 %30, metadata !8621, metadata !DIExpression()), !dbg !8622
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !8651
  call void @llvm.dbg.value(metadata i32 0, metadata !8620, metadata !DIExpression()), !dbg !8622
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !8653
  ret i32 %6, !dbg !8653
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !8654 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8658, metadata !DIExpression()), !dbg !8663
  call void @llvm.dbg.value(metadata i32* %1, metadata !8659, metadata !DIExpression()), !dbg !8663
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8664
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8664
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8664
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8660, metadata !DIExpression()), !dbg !8663
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8665
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8665
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8665
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8662, metadata !DIExpression()), !dbg !8663
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !8666
  store i32 %9, i32* %1, align 4, !dbg !8667
  ret i32 0, !dbg !8668
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !8669 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8671, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata i32 %1, metadata !8672, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata i32 %2, metadata !8673, metadata !DIExpression()), !dbg !8677
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8678
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !8678
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !8678
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !8674, metadata !DIExpression()), !dbg !8677
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !8679
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !8679
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !8679
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !8675, metadata !DIExpression()), !dbg !8677
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !8680
  call void @llvm.dbg.value(metadata i32 %10, metadata !8676, metadata !DIExpression()), !dbg !8677
  %11 = xor i32 %1, -1, !dbg !8681
  %12 = and i32 %10, %11, !dbg !8682
  %13 = and i32 %2, %1, !dbg !8683
  %14 = or i32 %12, %13, !dbg !8684
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !8685
  ret i32 0, !dbg !8686
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8687 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8689, metadata !DIExpression()), !dbg !8693
  call void @llvm.dbg.value(metadata i32 %1, metadata !8690, metadata !DIExpression()), !dbg !8693
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8694
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8694
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8694
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8691, metadata !DIExpression()), !dbg !8693
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8695
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8695
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8695
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8692, metadata !DIExpression()), !dbg !8693
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !8696
  store volatile i32 %1, i32* %9, align 4, !dbg !8696
  ret i32 0, !dbg !8697
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8698 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8700, metadata !DIExpression()), !dbg !8704
  call void @llvm.dbg.value(metadata i32 %1, metadata !8701, metadata !DIExpression()), !dbg !8704
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8705
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8705
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8705
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8702, metadata !DIExpression()), !dbg !8704
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8706
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8706
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8706
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8703, metadata !DIExpression()), !dbg !8704
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !8707
  ret i32 0, !dbg !8708
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8709 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8711, metadata !DIExpression()), !dbg !8715
  call void @llvm.dbg.value(metadata i32 %1, metadata !8712, metadata !DIExpression()), !dbg !8715
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8716
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8716
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8716
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8713, metadata !DIExpression()), !dbg !8715
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8717
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8717
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8717
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8714, metadata !DIExpression()), !dbg !8715
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !8718
  %10 = load volatile i32, i32* %9, align 4, !dbg !8718
  %11 = xor i32 %10, %1, !dbg !8718
  store volatile i32 %11, i32* %9, align 4, !dbg !8718
  ret i32 0, !dbg !8719
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8720 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8722, metadata !DIExpression()), !dbg !8732
  call void @llvm.dbg.value(metadata i8 %1, metadata !8723, metadata !DIExpression()), !dbg !8732
  call void @llvm.dbg.value(metadata i32 %2, metadata !8724, metadata !DIExpression()), !dbg !8732
  call void @llvm.dbg.value(metadata i32 %3, metadata !8725, metadata !DIExpression()), !dbg !8732
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8733
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8733
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8733
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8726, metadata !DIExpression()), !dbg !8732
  call void @llvm.dbg.value(metadata i8* undef, metadata !8727, metadata !DIExpression()), !dbg !8732
  call void @llvm.dbg.value(metadata i32 0, metadata !8729, metadata !DIExpression()), !dbg !8732
  call void @llvm.dbg.value(metadata i32 0, metadata !8730, metadata !DIExpression()), !dbg !8732
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !8734

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8735
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !8739
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8740
  %12 = load i32, i32* %11, align 4, !dbg !8740
  %13 = icmp eq i32 %10, %12, !dbg !8741
  br i1 %13, label %14, label %29, !dbg !8742

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !8743
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !8745
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !8746
  br label %29, !dbg !8747

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8748
  %17 = load i8*, i8** %16, align 4, !dbg !8748
  call void @llvm.dbg.value(metadata i8* %17, metadata !8727, metadata !DIExpression()), !dbg !8732
  %18 = zext i8 %1 to i32, !dbg !8749
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !8751
  %20 = icmp eq i32 %19, 0, !dbg !8752
  br i1 %20, label %21, label %29, !dbg !8753

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8754
  %23 = load i32, i32* %22, align 4, !dbg !8754
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !8755
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !8756

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !8729, metadata !DIExpression()), !dbg !8732
  br label %27, !dbg !8757

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !8729, metadata !DIExpression()), !dbg !8732
  br label %27, !dbg !8759

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !8729, metadata !DIExpression()), !dbg !8732
  br label %27, !dbg !8760

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !8732
  call void @llvm.dbg.value(metadata i32 %28, metadata !8729, metadata !DIExpression()), !dbg !8732
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !8761
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !8762
  br label %29, !dbg !8762

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !8732
  call void @llvm.dbg.value(metadata i32 %30, metadata !8730, metadata !DIExpression()), !dbg !8732
  call void @llvm.dbg.label(metadata !8731), !dbg !8763
  ret i32 %30, !dbg !8764
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #13 !dbg !8765 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8767, metadata !DIExpression()), !dbg !8771
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8768, metadata !DIExpression()), !dbg !8771
  call void @llvm.dbg.value(metadata i1 %2, metadata !8769, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8771
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8772
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !8772
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !8772
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !8770, metadata !DIExpression()), !dbg !8771
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !8773
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !8774
  ret i32 %8, !dbg !8775
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #13 !dbg !8776 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8782, metadata !DIExpression()), !dbg !8785
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8783, metadata !DIExpression()), !dbg !8785
  call void @llvm.dbg.value(metadata i1 %2, metadata !8784, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8785
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !8786
  br i1 %4, label %10, label %5, !dbg !8788

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8789
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !8792
  %8 = or i1 %7, %2, !dbg !8793
  %9 = select i1 %8, i32 0, i32 -22, !dbg !8793
  br i1 %2, label %11, label %13, !dbg !8793

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !8794

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8795
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !8798
  br label %13, !dbg !8799

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !8785
  ret i32 %14, !dbg !8800
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8801 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8805, metadata !DIExpression()), !dbg !8806
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8807
  %3 = icmp eq %struct._snode* %2, null, !dbg !8807
  ret i1 %3, !dbg !8807
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !8808 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8812, metadata !DIExpression()), !dbg !8816
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8813, metadata !DIExpression()), !dbg !8816
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8814, metadata !DIExpression()), !dbg !8816
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8817
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8815, metadata !DIExpression()), !dbg !8816
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8814, metadata !DIExpression()), !dbg !8816
  %4 = icmp eq %struct._snode* %3, null, !dbg !8819
  br i1 %4, label %15, label %5, !dbg !8817

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8815, metadata !DIExpression()), !dbg !8816
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8814, metadata !DIExpression()), !dbg !8816
  %6 = icmp eq %struct._snode* %3, %1, !dbg !8821
  br i1 %6, label %9, label %11, !dbg !8824

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8815, metadata !DIExpression()), !dbg !8816
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8814, metadata !DIExpression()), !dbg !8816
  %8 = icmp eq %struct._snode* %13, %1, !dbg !8821
  br i1 %8, label %9, label %11, !dbg !8824, !llvm.loop !8825

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !8826
  br label %15, !dbg !8826

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8815, metadata !DIExpression()), !dbg !8816
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8814, metadata !DIExpression()), !dbg !8816
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !8819
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8815, metadata !DIExpression()), !dbg !8816
  %14 = icmp eq %struct._snode* %13, null, !dbg !8819
  br i1 %14, label %15, label %7, !dbg !8817, !llvm.loop !8825

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !8828
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8829 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8833, metadata !DIExpression()), !dbg !8835
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8834, metadata !DIExpression()), !dbg !8835
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8836
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !8836
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !8836
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8837
  %5 = icmp eq %struct._snode* %4, null, !dbg !8837
  br i1 %5, label %6, label %8, !dbg !8836

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8839
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !8839
  br label %8, !dbg !8839

8:                                                ; preds = %6, %2
  ret void, !dbg !8836
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8841 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8845, metadata !DIExpression()), !dbg !8846
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8847
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8847
  ret %struct._snode* %3, !dbg !8848
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8849 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8853, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8854, metadata !DIExpression()), !dbg !8855
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8856
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8857
  ret void, !dbg !8858
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8859 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8861, metadata !DIExpression()), !dbg !8863
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8862, metadata !DIExpression()), !dbg !8863
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8864
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8865
  ret void, !dbg !8866
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8867 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8869, metadata !DIExpression()), !dbg !8870
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8871
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8871
  ret %struct._snode* %3, !dbg !8872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8873 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8875, metadata !DIExpression()), !dbg !8877
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8876, metadata !DIExpression()), !dbg !8877
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8878
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8879
  ret void, !dbg !8880
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #7 !dbg !8881 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8885, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8886, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !8887, metadata !DIExpression()), !dbg !8888
  %4 = icmp eq %struct._snode* %1, null, !dbg !8889
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !8891
  br i1 %4, label %6, label %11, !dbg !8892

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !8893
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8895
  %8 = icmp eq %struct._snode* %7, %2, !dbg !8895
  br i1 %8, label %9, label %15, !dbg !8893

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8897
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !8897
  br label %15, !dbg !8897

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !8899
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8901
  %13 = icmp eq %struct._snode* %12, %2, !dbg !8901
  br i1 %13, label %14, label %15, !dbg !8899

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !8903
  br label %15, !dbg !8903

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !8892
  ret void, !dbg !8892
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !8905 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8909, metadata !DIExpression()), !dbg !8910
  %2 = icmp eq %struct._snode* %0, null, !dbg !8911
  br i1 %2, label %5, label %3, !dbg !8911

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !8911
  br label %5, !dbg !8911

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !8911
  ret %struct._snode* %6, !dbg !8911
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8912 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8914, metadata !DIExpression()), !dbg !8915
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !8916
  ret %struct._snode* %2, !dbg !8916
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8917 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8919, metadata !DIExpression()), !dbg !8920
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8921
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8921
  ret %struct._snode* %3, !dbg !8922
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !8923 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8925, metadata !DIExpression()), !dbg !8928
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !8929, !range !8930
  call void @llvm.dbg.value(metadata i32 %2, metadata !8926, metadata !DIExpression()), !dbg !8928
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !8931
  call void @llvm.dbg.value(metadata i32 %3, metadata !8927, metadata !DIExpression()), !dbg !8928
  ret i32 %3, !dbg !8932
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !8933 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8935, metadata !DIExpression()), !dbg !8938
  call void @llvm.dbg.value(metadata i8* %1, metadata !8936, metadata !DIExpression()), !dbg !8938
  call void @llvm.dbg.value(metadata i8* %1, metadata !8937, metadata !DIExpression()), !dbg !8938
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !8939
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !8939
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8940
  %6 = bitcast i8* %5 to %struct.device**, !dbg !8940
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !8940
  %8 = shl nuw i32 1, %0, !dbg !8941
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !8942
  ret void, !dbg !8943
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8944 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !8948, metadata !DIExpression()), !dbg !8954
  call void @llvm.dbg.value(metadata i32 %1, metadata !8949, metadata !DIExpression()), !dbg !8954
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !8950, metadata !DIExpression()), !dbg !8954
  %4 = bitcast i64* %3 to i8*, !dbg !8955
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #24, !dbg !8955
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !8952, metadata !DIExpression()), !dbg !8954
  store i64 70368744177732, i64* %3, align 8, !dbg !8956
  call void @llvm.dbg.value(metadata i64* %3, metadata !8952, metadata !DIExpression(DW_OP_deref)), !dbg !8954
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !8957
  call void @llvm.dbg.value(metadata i32 %5, metadata !8953, metadata !DIExpression()), !dbg !8954
  %6 = icmp eq i32 %5, 0, !dbg !8958
  br i1 %6, label %7, label %8, !dbg !8960

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !8961
  br label %8, !dbg !8962

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #24, !dbg !8963
  ret void, !dbg !8963
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !8964 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !8966, metadata !DIExpression()), !dbg !8969
  call void @llvm.dbg.value(metadata i8* %0, metadata !8967, metadata !DIExpression()), !dbg !8969
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !8970
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !8968, metadata !DIExpression()), !dbg !8969
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !8971
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !8971
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #25, !dbg !8972
  ret i32 %5, !dbg !8973
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8974 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8976, metadata !DIExpression()), !dbg !8979
  call void @llvm.dbg.value(metadata i32 %1, metadata !8977, metadata !DIExpression()), !dbg !8979
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !8980
  call void @llvm.dbg.value(metadata i32 %3, metadata !8978, metadata !DIExpression()), !dbg !8979
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !8981
  ret void, !dbg !8982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !8983 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8987, metadata !DIExpression()), !dbg !8988
  %2 = sdiv i32 %0, 4, !dbg !8989
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !8990
  %6 = add nsw i32 %5, 16, !dbg !8991
  %7 = shl i32 15, %6, !dbg !8992
  %8 = or i32 %7, %2, !dbg !8993
  ret i32 %8, !dbg !8994
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8995 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8999, metadata !DIExpression()), !dbg !9001
  call void @llvm.dbg.value(metadata i32 %1, metadata !9000, metadata !DIExpression()), !dbg !9001
  %3 = and i32 %1, 255, !dbg !9002
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9002
  %5 = load volatile i32, i32* %4, align 4, !dbg !9002
  %6 = lshr i32 %1, 16, !dbg !9002
  %7 = xor i32 %6, -1, !dbg !9002
  %8 = and i32 %5, %7, !dbg !9002
  call void @llvm.dbg.value(metadata i32 %6, metadata !9003, metadata !DIExpression()) #24, !dbg !9007
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !9009, !srcloc !9010
  call void @llvm.dbg.value(metadata i32 %9, metadata !9006, metadata !DIExpression()) #24, !dbg !9007
  call void @llvm.dbg.value(metadata i32 %9, metadata !9011, metadata !DIExpression()) #24, !dbg !9016
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #24, !dbg !9018, !range !3486
  %11 = shl i32 %0, %10, !dbg !9002
  %12 = or i32 %11, %8, !dbg !9002
  store volatile i32 %12, i32* %4, align 4, !dbg !9002
  ret void, !dbg !9019
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9020 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9024, metadata !DIExpression()), !dbg !9029
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9025, metadata !DIExpression()), !dbg !9029
  call void @llvm.dbg.value(metadata i32 %2, metadata !9026, metadata !DIExpression()), !dbg !9029
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9030
  %5 = icmp eq %struct._snode* %4, null, !dbg !9030
  br i1 %5, label %21, label %6, !dbg !9030

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !9032
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9028, metadata !DIExpression()), !dbg !9029
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !9027, metadata !DIExpression()), !dbg !9029
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9033
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !9033
  %11 = load i32, i32* %10, align 4, !dbg !9033
  %12 = and i32 %11, %2, !dbg !9037
  %13 = icmp eq i32 %12, 0, !dbg !9037
  br i1 %13, label %19, label %14, !dbg !9038

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !9027, metadata !DIExpression()), !dbg !9029
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9039
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9039
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9039
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !9041
  br label %19, !dbg !9042

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9027, metadata !DIExpression()), !dbg !9029
  %20 = icmp eq %struct._snode* %8, null, !dbg !9043
  br i1 %20, label %21, label %6, !dbg !9043

21:                                               ; preds = %19, %3
  ret void, !dbg !9044
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9045 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9047, metadata !DIExpression()), !dbg !9048
  %2 = and i32 %0, 255, !dbg !9049
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9049
  %4 = load volatile i32, i32* %3, align 4, !dbg !9049
  %5 = lshr i32 %0, 16, !dbg !9049
  %6 = and i32 %4, %5, !dbg !9049
  call void @llvm.dbg.value(metadata i32 %5, metadata !9003, metadata !DIExpression()) #24, !dbg !9050
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #29, !dbg !9052, !srcloc !9010
  call void @llvm.dbg.value(metadata i32 %7, metadata !9006, metadata !DIExpression()) #24, !dbg !9050
  call void @llvm.dbg.value(metadata i32 %7, metadata !9011, metadata !DIExpression()) #24, !dbg !9053
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !9055, !range !3486
  %9 = lshr i32 %6, %8, !dbg !9056
  ret i32 %9, !dbg !9057
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9058 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9063, metadata !DIExpression()), !dbg !9065
  call void @llvm.dbg.value(metadata i32 %1, metadata !9064, metadata !DIExpression()), !dbg !9065
  %3 = shl i32 %1, 16, !dbg !9066
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9066
  store volatile i32 %3, i32* %4, align 4, !dbg !9066
  ret void, !dbg !9067
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9068 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9072, metadata !DIExpression()), !dbg !9073
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9074
  %3 = load volatile i32, i32* %2, align 4, !dbg !9074
  ret i32 %3, !dbg !9075
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9076 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9078, metadata !DIExpression()), !dbg !9080
  call void @llvm.dbg.value(metadata i32 %1, metadata !9079, metadata !DIExpression()), !dbg !9080
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9081
  store volatile i32 %1, i32* %3, align 4, !dbg !9081
  ret void, !dbg !9082
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9083 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9085, metadata !DIExpression()), !dbg !9086
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9087
  %3 = load volatile i32, i32* %2, align 4, !dbg !9087
  ret i32 %3, !dbg !9088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #7 !dbg !9089 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9093, metadata !DIExpression()), !dbg !9095
  call void @llvm.dbg.value(metadata i32* %1, metadata !9094, metadata !DIExpression()), !dbg !9095
  %3 = and i32 %0, 131072, !dbg !9096
  %4 = icmp eq i32 %3, 0, !dbg !9098
  br i1 %4, label %22, label %5, !dbg !9099

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9100
  %6 = and i32 %0, 2, !dbg !9102
  %7 = icmp eq i32 %6, 0, !dbg !9104
  br i1 %7, label %11, label %8, !dbg !9105

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9106
  %10 = icmp eq i32 %9, 0, !dbg !9106
  br i1 %10, label %33, label %11, !dbg !9109

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9110
  store i32 %12, i32* %1, align 4, !dbg !9110
  %13 = and i32 %0, 16, !dbg !9111
  %14 = icmp eq i32 %13, 0, !dbg !9113
  br i1 %14, label %17, label %15, !dbg !9114

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9115
  br label %31, !dbg !9117

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9118
  %19 = icmp eq i32 %18, 0, !dbg !9120
  br i1 %19, label %33, label %20, !dbg !9121

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9122
  br label %31, !dbg !9124

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9125
  %24 = icmp eq i32 %23, 0, !dbg !9127
  br i1 %24, label %31, label %25, !dbg !9128

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9129
  %27 = icmp eq i32 %26, 0, !dbg !9132
  br i1 %27, label %28, label %31, !dbg !9133

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9134
  br label %33, !dbg !9135

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9095
  ret i32 %34, !dbg !9135
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9136 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9140, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.value(metadata i32 %1, metadata !9141, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.value(metadata i32 %2, metadata !9142, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.value(metadata i32 %3, metadata !9143, metadata !DIExpression()), !dbg !9151
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9152
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9152
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9152
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9144, metadata !DIExpression()), !dbg !9151
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9153
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9153
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9153
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9145, metadata !DIExpression()), !dbg !9151
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !9154
  call void @llvm.dbg.value(metadata i32 %11, metadata !9146, metadata !DIExpression()), !dbg !9151
  %12 = and i32 %2, 48, !dbg !9155
  call void @llvm.dbg.value(metadata i32 %12, metadata !9147, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.value(metadata i32 %2, metadata !9148, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9151
  call void @llvm.dbg.value(metadata i32 %2, metadata !9149, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9151
  call void @llvm.dbg.value(metadata i32 %2, metadata !9150, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9151
  %13 = lshr i32 %2, 6, !dbg !9156
  %14 = and i32 %13, 1, !dbg !9156
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !9157
  %15 = lshr i32 %2, 7, !dbg !9158
  %16 = and i32 %15, 3, !dbg !9158
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !9159
  %17 = lshr i32 %2, 9, !dbg !9160
  %18 = and i32 %17, 3, !dbg !9160
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !9161
  %19 = icmp eq i32 %12, 32, !dbg !9162
  br i1 %19, label %20, label %24, !dbg !9164

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9165
  br i1 %21, label %22, label %23, !dbg !9168

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !9169
  br label %24, !dbg !9171

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !9172
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9174
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !9175
  ret void, !dbg !9176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !9177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9179, metadata !DIExpression()), !dbg !9181
  %2 = shl nuw i32 1, %0, !dbg !9182
  call void @llvm.dbg.value(metadata i32 %2, metadata !9180, metadata !DIExpression()), !dbg !9181
  ret i32 %2, !dbg !9183
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9184 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9188, metadata !DIExpression()), !dbg !9191
  call void @llvm.dbg.value(metadata i32 %1, metadata !9189, metadata !DIExpression()), !dbg !9191
  call void @llvm.dbg.value(metadata i32 %2, metadata !9190, metadata !DIExpression()), !dbg !9191
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9192
  %5 = load volatile i32, i32* %4, align 4, !dbg !9192
  %6 = xor i32 %1, -1, !dbg !9192
  %7 = and i32 %5, %6, !dbg !9192
  %8 = mul i32 %2, %1, !dbg !9192
  %9 = or i32 %7, %8, !dbg !9192
  store volatile i32 %9, i32* %4, align 4, !dbg !9192
  ret void, !dbg !9193
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9194 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9196, metadata !DIExpression()), !dbg !9199
  call void @llvm.dbg.value(metadata i32 %1, metadata !9197, metadata !DIExpression()), !dbg !9199
  call void @llvm.dbg.value(metadata i32 %2, metadata !9198, metadata !DIExpression()), !dbg !9199
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9200
  %5 = load volatile i32, i32* %4, align 4, !dbg !9200
  call void @llvm.dbg.value(metadata i32 %1, metadata !9003, metadata !DIExpression()) #24, !dbg !9201
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9203, !srcloc !9010
  call void @llvm.dbg.value(metadata i32 %6, metadata !9006, metadata !DIExpression()) #24, !dbg !9201
  call void @llvm.dbg.value(metadata i32 %6, metadata !9011, metadata !DIExpression()) #24, !dbg !9204
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9206, !range !3486
  %8 = shl nuw nsw i32 %7, 1, !dbg !9200
  %9 = shl i32 3, %8, !dbg !9200
  %10 = xor i32 %9, -1, !dbg !9200
  %11 = and i32 %5, %10, !dbg !9200
  call void @llvm.dbg.value(metadata i32 %1, metadata !9003, metadata !DIExpression()) #24, !dbg !9207
  call void @llvm.dbg.value(metadata i32 %6, metadata !9006, metadata !DIExpression()) #24, !dbg !9207
  call void @llvm.dbg.value(metadata i32 %6, metadata !9011, metadata !DIExpression()) #24, !dbg !9209
  %12 = shl i32 %2, %8, !dbg !9200
  %13 = or i32 %11, %12, !dbg !9200
  store volatile i32 %13, i32* %4, align 4, !dbg !9200
  ret void, !dbg !9211
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9212 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9214, metadata !DIExpression()), !dbg !9217
  call void @llvm.dbg.value(metadata i32 %1, metadata !9215, metadata !DIExpression()), !dbg !9217
  call void @llvm.dbg.value(metadata i32 %2, metadata !9216, metadata !DIExpression()), !dbg !9217
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9218
  %5 = load volatile i32, i32* %4, align 4, !dbg !9218
  call void @llvm.dbg.value(metadata i32 %1, metadata !9003, metadata !DIExpression()) #24, !dbg !9219
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9221, !srcloc !9010
  call void @llvm.dbg.value(metadata i32 %6, metadata !9006, metadata !DIExpression()) #24, !dbg !9219
  call void @llvm.dbg.value(metadata i32 %6, metadata !9011, metadata !DIExpression()) #24, !dbg !9222
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9224, !range !3486
  %8 = shl nuw nsw i32 %7, 1, !dbg !9218
  %9 = shl i32 3, %8, !dbg !9218
  %10 = xor i32 %9, -1, !dbg !9218
  %11 = and i32 %5, %10, !dbg !9218
  call void @llvm.dbg.value(metadata i32 %1, metadata !9003, metadata !DIExpression()) #24, !dbg !9225
  call void @llvm.dbg.value(metadata i32 %6, metadata !9006, metadata !DIExpression()) #24, !dbg !9225
  call void @llvm.dbg.value(metadata i32 %6, metadata !9011, metadata !DIExpression()) #24, !dbg !9227
  %12 = shl i32 %2, %8, !dbg !9218
  %13 = or i32 %11, %12, !dbg !9218
  store volatile i32 %13, i32* %4, align 4, !dbg !9218
  ret void, !dbg !9229
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9230 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9232, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.value(metadata i32 %1, metadata !9233, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.value(metadata i32 %2, metadata !9234, metadata !DIExpression()), !dbg !9235
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9236
  %5 = load volatile i32, i32* %4, align 4, !dbg !9236
  call void @llvm.dbg.value(metadata i32 %1, metadata !9003, metadata !DIExpression()) #24, !dbg !9237
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9239, !srcloc !9010
  call void @llvm.dbg.value(metadata i32 %6, metadata !9006, metadata !DIExpression()) #24, !dbg !9237
  call void @llvm.dbg.value(metadata i32 %6, metadata !9011, metadata !DIExpression()) #24, !dbg !9240
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9242, !range !3486
  %8 = shl nuw nsw i32 %7, 2, !dbg !9236
  %9 = shl i32 15, %8, !dbg !9236
  %10 = xor i32 %9, -1, !dbg !9236
  %11 = and i32 %5, %10, !dbg !9236
  call void @llvm.dbg.value(metadata i32 %1, metadata !9003, metadata !DIExpression()) #24, !dbg !9243
  call void @llvm.dbg.value(metadata i32 %6, metadata !9006, metadata !DIExpression()) #24, !dbg !9243
  call void @llvm.dbg.value(metadata i32 %6, metadata !9011, metadata !DIExpression()) #24, !dbg !9245
  %12 = shl i32 %2, %8, !dbg !9236
  %13 = or i32 %11, %12, !dbg !9236
  store volatile i32 %13, i32* %4, align 4, !dbg !9236
  ret void, !dbg !9247
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9248 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9250, metadata !DIExpression()), !dbg !9253
  call void @llvm.dbg.value(metadata i32 %1, metadata !9251, metadata !DIExpression()), !dbg !9253
  call void @llvm.dbg.value(metadata i32 %2, metadata !9252, metadata !DIExpression()), !dbg !9253
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9254
  %5 = load volatile i32, i32* %4, align 4, !dbg !9254
  %6 = lshr i32 %1, 8, !dbg !9254
  call void @llvm.dbg.value(metadata i32 %6, metadata !9003, metadata !DIExpression()) #24, !dbg !9255
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !9257, !srcloc !9010
  call void @llvm.dbg.value(metadata i32 %7, metadata !9006, metadata !DIExpression()) #24, !dbg !9255
  call void @llvm.dbg.value(metadata i32 %7, metadata !9011, metadata !DIExpression()) #24, !dbg !9258
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !9260, !range !3486
  %9 = shl nuw nsw i32 %8, 2, !dbg !9254
  %10 = shl i32 15, %9, !dbg !9254
  %11 = xor i32 %10, -1, !dbg !9254
  %12 = and i32 %5, %11, !dbg !9254
  call void @llvm.dbg.value(metadata i32 %6, metadata !9003, metadata !DIExpression()) #24, !dbg !9261
  call void @llvm.dbg.value(metadata i32 %7, metadata !9006, metadata !DIExpression()) #24, !dbg !9261
  call void @llvm.dbg.value(metadata i32 %7, metadata !9011, metadata !DIExpression()) #24, !dbg !9263
  %13 = shl i32 %2, %9, !dbg !9254
  %14 = or i32 %12, %13, !dbg !9254
  store volatile i32 %14, i32* %4, align 4, !dbg !9254
  ret void, !dbg !9265
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9266 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9268, metadata !DIExpression()), !dbg !9271
  call void @llvm.dbg.value(metadata i32 %1, metadata !9269, metadata !DIExpression()), !dbg !9271
  call void @llvm.dbg.value(metadata i32 %2, metadata !9270, metadata !DIExpression()), !dbg !9271
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9272
  %5 = load volatile i32, i32* %4, align 4, !dbg !9272
  call void @llvm.dbg.value(metadata i32 %1, metadata !9003, metadata !DIExpression()) #24, !dbg !9273
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9275, !srcloc !9010
  call void @llvm.dbg.value(metadata i32 %6, metadata !9006, metadata !DIExpression()) #24, !dbg !9273
  call void @llvm.dbg.value(metadata i32 %6, metadata !9011, metadata !DIExpression()) #24, !dbg !9276
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9278, !range !3486
  %8 = shl nuw nsw i32 %7, 1, !dbg !9272
  %9 = shl i32 3, %8, !dbg !9272
  %10 = xor i32 %9, -1, !dbg !9272
  %11 = and i32 %5, %10, !dbg !9272
  call void @llvm.dbg.value(metadata i32 %1, metadata !9003, metadata !DIExpression()) #24, !dbg !9279
  call void @llvm.dbg.value(metadata i32 %6, metadata !9006, metadata !DIExpression()) #24, !dbg !9279
  call void @llvm.dbg.value(metadata i32 %6, metadata !9011, metadata !DIExpression()) #24, !dbg !9281
  %12 = shl i32 %2, %8, !dbg !9272
  %13 = or i32 %11, %12, !dbg !9272
  store volatile i32 %13, i32* %4, align 4, !dbg !9272
  ret void, !dbg !9283
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9284 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9286, metadata !DIExpression()), !dbg !9289
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9290
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9290
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9290
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9287, metadata !DIExpression()), !dbg !9289
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9291
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9292
  %6 = tail call fastcc zeroext i1 @device_is_ready.71() #26, !dbg !9293
  br i1 %6, label %7, label %11, !dbg !9295

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !9296
  call void @llvm.dbg.value(metadata i32 %8, metadata !9288, metadata !DIExpression()), !dbg !9289
  %9 = icmp slt i32 %8, 0, !dbg !9297
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9299
  br label %11, !dbg !9299

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9289
  ret i32 %12, !dbg !9300
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.71() unnamed_addr #1 !dbg !9301 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9305, metadata !DIExpression()), !dbg !9306
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9307, !srcloc !9309
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.72() #26, !dbg !9310
  ret i1 %1, !dbg !9311
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9312 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9316, metadata !DIExpression()), !dbg !9321
  call void @llvm.dbg.value(metadata i8 1, metadata !9317, metadata !DIExpression()), !dbg !9321
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !9318, metadata !DIExpression()), !dbg !9321
  call void @llvm.dbg.value(metadata i32 0, metadata !9319, metadata !DIExpression()), !dbg !9321
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9320, metadata !DIExpression()), !dbg !9321
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9322
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9322
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9322
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9318, metadata !DIExpression()), !dbg !9321
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9323
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9326
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !9327
  call void @llvm.dbg.value(metadata i32 %7, metadata !9319, metadata !DIExpression()), !dbg !9321
  call void @llvm.dbg.value(metadata i32 %7, metadata !9319, metadata !DIExpression()), !dbg !9321
  ret i32 %7, !dbg !9328
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.72() unnamed_addr #1 !dbg !9329 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9331, metadata !DIExpression()), !dbg !9332
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #25, !dbg !9333
  ret i1 %1, !dbg !9334
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9335 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9339, metadata !DIExpression()), !dbg !9347
  call void @llvm.dbg.value(metadata i32 %1, metadata !9340, metadata !DIExpression()), !dbg !9347
  call void @llvm.dbg.value(metadata i32 %2, metadata !9341, metadata !DIExpression()), !dbg !9347
  call void @llvm.dbg.value(metadata i32 %3, metadata !9342, metadata !DIExpression()), !dbg !9347
  call void @llvm.dbg.value(metadata i32 0, metadata !9343, metadata !DIExpression()), !dbg !9347
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !9348
  %5 = icmp eq i32 %3, 17, !dbg !9349
  br i1 %5, label %6, label %14, !dbg !9350

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9351
  call void @llvm.dbg.value(metadata i32 %7, metadata !9344, metadata !DIExpression()), !dbg !9352
  %8 = icmp eq i32 %7, 0, !dbg !9353
  %9 = shl nuw i32 1, %1, !dbg !9355
  br i1 %8, label %12, label %10, !dbg !9356

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9357
  br label %14, !dbg !9359

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9360
  br label %14, !dbg !9363

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9364
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !9365 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9367, metadata !DIExpression()), !dbg !9371
  call void @llvm.dbg.value(metadata i8* %1, metadata !9368, metadata !DIExpression()), !dbg !9371
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9372
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9372
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9372
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9369, metadata !DIExpression()), !dbg !9371
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9373
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9373
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !9375
  %9 = icmp eq i32 %8, 0, !dbg !9375
  br i1 %9, label %12, label %10, !dbg !9376

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9377
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !9379
  br label %12, !dbg !9380

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9381
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9383
  %15 = icmp eq i32 %14, 0, !dbg !9383
  br i1 %15, label %19, label %16, !dbg !9384

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9385
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !9386
  store i8 %18, i8* %1, align 1, !dbg !9387
  br label %19, !dbg !9388

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9371
  ret i32 %20, !dbg !9389
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9390 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9392, metadata !DIExpression()), !dbg !9396
  call void @llvm.dbg.value(metadata i8 %1, metadata !9393, metadata !DIExpression()), !dbg !9396
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9397
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9397
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9397
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9394, metadata !DIExpression()), !dbg !9396
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9398

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9399
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !9402
  %10 = icmp eq i32 %9, 0, !dbg !9402
  br i1 %10, label %18, label %11, !dbg !9403

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !9404, !srcloc !9411
  call void @llvm.dbg.value(metadata i32 undef, metadata !9407, metadata !DIExpression()) #24, !dbg !9412
  call void @llvm.dbg.value(metadata i32 undef, metadata !9408, metadata !DIExpression()) #24, !dbg !9412
  call void @llvm.dbg.value(metadata i32 undef, metadata !9395, metadata !DIExpression()), !dbg !9396
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9413
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9415
  %15 = icmp eq i32 %14, 0, !dbg !9415
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9404
  br i1 %15, label %17, label %19, !dbg !9416

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9407, metadata !DIExpression()) #24, !dbg !9412
  call void @llvm.dbg.value(metadata i32 %16, metadata !9395, metadata !DIExpression()), !dbg !9396
  call void @llvm.dbg.value(metadata i32 undef, metadata !9417, metadata !DIExpression()) #24, !dbg !9420
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #24, !dbg !9422, !srcloc !9423
  br label %18, !dbg !9424

18:                                               ; preds = %17, %7
  br label %7, !dbg !9399, !llvm.loop !9425

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9404
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9427
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !9428
  call void @llvm.dbg.value(metadata i32 %20, metadata !9417, metadata !DIExpression()) #24, !dbg !9429
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #24, !dbg !9431, !srcloc !9423
  ret void, !dbg !9432
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !9433 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9435, metadata !DIExpression()), !dbg !9438
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9439
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9439
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9439
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9436, metadata !DIExpression()), !dbg !9438
  call void @llvm.dbg.value(metadata i32 0, metadata !9437, metadata !DIExpression()), !dbg !9438
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9440
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9440
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9442
  %8 = icmp ne i32 %7, 0, !dbg !9442
  %9 = zext i1 %8 to i32, !dbg !9443
  call void @llvm.dbg.value(metadata i32 %9, metadata !9437, metadata !DIExpression()), !dbg !9438
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9444
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !9446
  %12 = icmp eq i32 %11, 0, !dbg !9446
  %13 = or i32 %9, 2, !dbg !9447
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9447
  call void @llvm.dbg.value(metadata i32 %14, metadata !9437, metadata !DIExpression()), !dbg !9438
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9448
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !9450
  %17 = icmp eq i32 %16, 0, !dbg !9450
  %18 = or i32 %14, 4, !dbg !9451
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9451
  call void @llvm.dbg.value(metadata i32 %19, metadata !9437, metadata !DIExpression()), !dbg !9438
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9452
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !9454
  %22 = icmp eq i32 %21, 0, !dbg !9454
  %23 = or i32 %19, 8, !dbg !9455
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9455
  call void @llvm.dbg.value(metadata i32 %24, metadata !9437, metadata !DIExpression()), !dbg !9438
  %25 = and i32 %24, 8, !dbg !9456
  %26 = icmp eq i32 %25, 0, !dbg !9456
  br i1 %26, label %29, label %27, !dbg !9458

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9459
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !9461
  br label %29, !dbg !9462

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9463
  %31 = icmp eq i32 %30, 0, !dbg !9463
  br i1 %31, label %34, label %32, !dbg !9465

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9466
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !9468
  br label %34, !dbg !9469

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9470
  %36 = icmp eq i32 %35, 0, !dbg !9470
  br i1 %36, label %39, label %37, !dbg !9472

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9473
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !9475
  br label %39, !dbg !9476

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9477
  %41 = icmp eq i32 %40, 0, !dbg !9477
  br i1 %41, label %44, label %42, !dbg !9479

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9480
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !9482
  br label %44, !dbg !9483

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9484
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !9485
  ret i32 %24, !dbg !9486
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9487 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9489, metadata !DIExpression()), !dbg !9498
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9490, metadata !DIExpression()), !dbg !9498
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9499
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9499
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9499
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9491, metadata !DIExpression()), !dbg !9498
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9500
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9500
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9500
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9492, metadata !DIExpression()), !dbg !9498
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9501
  %10 = load i8, i8* %9, align 4, !dbg !9501
  %11 = zext i8 %10 to i32, !dbg !9502
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !9503
  call void @llvm.dbg.value(metadata i32 %12, metadata !9494, metadata !DIExpression()), !dbg !9498
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9504
  %14 = load i8, i8* %13, align 1, !dbg !9504
  %15 = zext i8 %14 to i32, !dbg !9505
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !9506
  call void @llvm.dbg.value(metadata i32 %16, metadata !9495, metadata !DIExpression()), !dbg !9498
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9507
  %18 = load i8, i8* %17, align 2, !dbg !9507
  %19 = zext i8 %18 to i32, !dbg !9508
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !9509
  call void @llvm.dbg.value(metadata i32 %20, metadata !9496, metadata !DIExpression()), !dbg !9498
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9510
  %22 = load i8, i8* %21, align 1, !dbg !9510
  %23 = zext i8 %22 to i32, !dbg !9511
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !9512
  call void @llvm.dbg.value(metadata i32 %24, metadata !9497, metadata !DIExpression()), !dbg !9498
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9513

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9515
  br i1 %26, label %69, label %27, !dbg !9517

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9518

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9519
  br i1 %29, label %65, label %30, !dbg !9519

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9521
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9498
  br i1 %31, label %38, label %34, !dbg !9523

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9524
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073812480, label %36
  ], !dbg !9524

36:                                               ; preds = %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9527
  br i1 %37, label %38, label %69, !dbg !9528

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9529
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !9530
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !9531
  %41 = icmp eq i32 %12, %40, !dbg !9533
  br i1 %41, label %43, label %42, !dbg !9534

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !9535
  br label %43, !dbg !9537

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !9538
  %45 = icmp eq i32 %16, %44, !dbg !9540
  br i1 %45, label %47, label %46, !dbg !9541

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !9542
  br label %47, !dbg !9544

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !9545
  %49 = icmp eq i32 %20, %48, !dbg !9547
  br i1 %49, label %51, label %50, !dbg !9548

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !9549
  br label %51, !dbg !9551

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !9552
  %53 = icmp eq i32 %24, %52, !dbg !9554
  br i1 %53, label %55, label %54, !dbg !9555

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !9556
  br label %55, !dbg !9558

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9559
  %57 = load i32, i32* %56, align 4, !dbg !9559
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9561
  %59 = load i32, i32* %58, align 4, !dbg !9561
  %60 = icmp eq i32 %57, %59, !dbg !9562
  br i1 %60, label %63, label %61, !dbg !9563

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !9564
  %62 = load i32, i32* %56, align 4, !dbg !9566
  store i32 %62, i32* %58, align 4, !dbg !9567
  br label %63, !dbg !9568

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9569
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !9570
  br label %69, !dbg !9571

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9519
  %67 = and i8 %66, 1, !dbg !9519
  %68 = icmp eq i8 %67, 0, !dbg !9519
  br i1 %68, label %30, label %69, !dbg !9519

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9498
  ret i32 %70, !dbg !9572
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !9573 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9575, metadata !DIExpression()), !dbg !9578
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9576, metadata !DIExpression()), !dbg !9578
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9579
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9579
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9579
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9577, metadata !DIExpression()), !dbg !9578
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9580
  %7 = load i32, i32* %6, align 4, !dbg !9580
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9581
  store i32 %7, i32* %8, align 4, !dbg !9582
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9583, !range !9584
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !9585
  %11 = trunc i32 %10 to i8, !dbg !9585
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9586
  store i8 %11, i8* %12, align 4, !dbg !9587
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !9588, !range !9589
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !9590
  %15 = trunc i32 %14 to i8, !dbg !9590
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9591
  store i8 %15, i8* %16, align 1, !dbg !9592
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !9593
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9594, !range !9584
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !9595
  %20 = trunc i32 %19 to i8, !dbg !9595
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9596
  store i8 %20, i8* %21, align 2, !dbg !9597
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !9598, !range !9599
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !9600
  %24 = trunc i32 %23 to i8, !dbg !9600
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9601
  store i8 %24, i8* %25, align 1, !dbg !9602
  ret i32 0, !dbg !9603
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9604 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9608, metadata !DIExpression()), !dbg !9610
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9611
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9611
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9611
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9609, metadata !DIExpression()), !dbg !9610
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9612
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9612
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !9613
  ret i32 %7, !dbg !9614
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !9615 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9619, metadata !DIExpression()), !dbg !9620
  %2 = icmp eq i32 %0, 1024, !dbg !9621
  %3 = select i1 %2, i32 2, i32 0, !dbg !9621
  %4 = icmp eq i32 %0, 1536, !dbg !9621
  %5 = select i1 %4, i32 1, i32 %3, !dbg !9621
  ret i32 %5, !dbg !9622
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9623 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9625, metadata !DIExpression()), !dbg !9627
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9628
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9628
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9628
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9626, metadata !DIExpression()), !dbg !9627
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9629
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9629
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !9630
  ret i32 %7, !dbg !9631
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !9632 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9636, metadata !DIExpression()), !dbg !9637
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !9638
  %3 = icmp ult i32 %2, 4, !dbg !9638
  br i1 %3, label %4, label %7, !dbg !9638

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !9638
  %6 = load i32, i32* %5, align 4, !dbg !9638
  br label %7, !dbg !9638

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !9639
  ret i32 %8, !dbg !9641
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9642 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9644, metadata !DIExpression()), !dbg !9646
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9647
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9647
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9647
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9645, metadata !DIExpression()), !dbg !9646
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9648
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9648
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !9649
  ret i32 %7, !dbg !9650
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9651 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9655, metadata !DIExpression()), !dbg !9657
  call void @llvm.dbg.value(metadata i32 %1, metadata !9656, metadata !DIExpression()), !dbg !9657
  %3 = icmp eq i32 %0, 4096, !dbg !9658
  %4 = icmp eq i32 %1, 0, !dbg !9658
  %5 = select i1 %4, i32 4, i32 3, !dbg !9658
  %6 = select i1 %4, i32 3, i32 2, !dbg !9658
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !9658
  ret i32 %7, !dbg !9659
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9660 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9662, metadata !DIExpression()), !dbg !9664
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9665
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9665
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9665
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9663, metadata !DIExpression()), !dbg !9664
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9666
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9666
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !9667
  ret i32 %7, !dbg !9668
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !9669 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9673, metadata !DIExpression()), !dbg !9674
  %2 = icmp eq i32 %0, 768, !dbg !9675
  %3 = zext i1 %2 to i32, !dbg !9674
  ret i32 %3, !dbg !9677
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9678 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9683, metadata !DIExpression()), !dbg !9684
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9685
  %3 = load volatile i32, i32* %2, align 4, !dbg !9685
  %4 = and i32 %3, 768, !dbg !9685
  ret i32 %4, !dbg !9686
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9687 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9689, metadata !DIExpression()), !dbg !9690
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9691
  %3 = load volatile i32, i32* %2, align 4, !dbg !9691
  %4 = and i32 %3, 4096, !dbg !9691
  ret i32 %4, !dbg !9692
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9693 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9695, metadata !DIExpression()), !dbg !9696
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9697
  %3 = load volatile i32, i32* %2, align 4, !dbg !9697
  %4 = and i32 %3, 12288, !dbg !9697
  ret i32 %4, !dbg !9698
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9699 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9701, metadata !DIExpression()), !dbg !9702
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9703
  %3 = load volatile i32, i32* %2, align 4, !dbg !9703
  %4 = and i32 %3, 1536, !dbg !9703
  ret i32 %4, !dbg !9704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !9705 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9709, metadata !DIExpression()), !dbg !9710
  %2 = icmp eq i32 %0, 2, !dbg !9711
  %3 = select i1 %2, i32 1024, i32 0, !dbg !9711
  %4 = icmp eq i32 %0, 1, !dbg !9711
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !9711
  ret i32 %5, !dbg !9712
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !9713 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9717, metadata !DIExpression()), !dbg !9718
  %2 = icmp ult i32 %0, 3, !dbg !9719
  br i1 %2, label %3, label %6, !dbg !9719

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !9719
  %5 = load i32, i32* %4, align 4, !dbg !9719
  br label %6, !dbg !9719

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !9720
  ret i32 %7, !dbg !9722
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9723 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9727, metadata !DIExpression()), !dbg !9729
  call void @llvm.dbg.value(metadata i32 %1, metadata !9728, metadata !DIExpression()), !dbg !9729
  %3 = icmp eq i32 %0, 4, !dbg !9730
  %4 = icmp eq i32 %1, 0, !dbg !9730
  %5 = select i1 %4, i32 0, i32 4096, !dbg !9730
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !9730
  ret i32 %6, !dbg !9731
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !9732 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9736, metadata !DIExpression()), !dbg !9737
  %2 = icmp eq i32 %0, 1, !dbg !9738
  %3 = select i1 %2, i32 768, i32 0, !dbg !9737
  ret i32 %3, !dbg !9740
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9741 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9745, metadata !DIExpression()), !dbg !9746
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9747
  %3 = load volatile i32, i32* %2, align 4, !dbg !9747
  %4 = and i32 %3, -8193, !dbg !9747
  store volatile i32 %4, i32* %2, align 4, !dbg !9747
  ret void, !dbg !9748
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9749 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9753, metadata !DIExpression()), !dbg !9756
  call void @llvm.dbg.value(metadata i32 %1, metadata !9754, metadata !DIExpression()), !dbg !9756
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9757
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9757
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9757
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9755, metadata !DIExpression()), !dbg !9756
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9758
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9758
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9759
  ret void, !dbg !9760
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9761 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9763, metadata !DIExpression()), !dbg !9766
  call void @llvm.dbg.value(metadata i32 %1, metadata !9764, metadata !DIExpression()), !dbg !9766
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9767
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9767
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9767
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9765, metadata !DIExpression()), !dbg !9766
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9768
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9768
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9769
  ret void, !dbg !9770
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9771 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9773, metadata !DIExpression()), !dbg !9776
  call void @llvm.dbg.value(metadata i32 %1, metadata !9774, metadata !DIExpression()), !dbg !9776
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9777
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9777
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9777
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9775, metadata !DIExpression()), !dbg !9776
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9778
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9778
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9779
  ret void, !dbg !9780
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9781 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9783, metadata !DIExpression()), !dbg !9786
  call void @llvm.dbg.value(metadata i32 %1, metadata !9784, metadata !DIExpression()), !dbg !9786
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9787
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9787
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9787
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9785, metadata !DIExpression()), !dbg !9786
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9788
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9788
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9789
  ret void, !dbg !9790
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !9791 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9793, metadata !DIExpression()), !dbg !9798
  call void @llvm.dbg.value(metadata i32 %1, metadata !9794, metadata !DIExpression()), !dbg !9798
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9799
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9799
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9799
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9795, metadata !DIExpression()), !dbg !9798
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9800
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !9800
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !9800
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !9796, metadata !DIExpression()), !dbg !9798
  %10 = bitcast i32* %3 to i8*, !dbg !9801
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #24, !dbg !9801
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !9802
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !9802
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !9806
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !9806
  %15 = load i8*, i8** %14, align 4, !dbg !9806
  call void @llvm.dbg.value(metadata i32* %3, metadata !9797, metadata !DIExpression(DW_OP_deref)), !dbg !9798
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !9807
  %17 = icmp slt i32 %16, 0, !dbg !9808
  br i1 %17, label %23, label %18, !dbg !9809

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9810
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9810
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #26, !dbg !9811
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9812
  %22 = load i32, i32* %3, align 4, !dbg !9813
  call void @llvm.dbg.value(metadata i32 %22, metadata !9797, metadata !DIExpression()), !dbg !9798
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #26, !dbg !9814
  br label %23, !dbg !9815

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #24, !dbg !9815
  ret void, !dbg !9815
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9816 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9818, metadata !DIExpression()), !dbg !9819
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9820
  %3 = load volatile i32, i32* %2, align 4, !dbg !9820
  %4 = or i32 %3, 8192, !dbg !9820
  store volatile i32 %4, i32* %2, align 4, !dbg !9820
  ret void, !dbg !9821
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !9822 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9824, metadata !DIExpression()), !dbg !9828
  call void @llvm.dbg.value(metadata i8* %1, metadata !9825, metadata !DIExpression()), !dbg !9828
  call void @llvm.dbg.value(metadata i32* %2, metadata !9826, metadata !DIExpression()), !dbg !9828
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !9829
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !9829
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !9829
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !9827, metadata !DIExpression()), !dbg !9828
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !9830
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !9830
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !9832
  br i1 %9, label %12, label %10, !dbg !9833

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !9834
  br label %12, !dbg !9835

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !9828
  ret i32 %13, !dbg !9836
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9837 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9841, metadata !DIExpression()), !dbg !9843
  call void @llvm.dbg.value(metadata i32 0, metadata !9842, metadata !DIExpression()), !dbg !9843
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9844
  %3 = load volatile i32, i32* %2, align 4, !dbg !9844
  %4 = and i32 %3, -32769, !dbg !9844
  store volatile i32 %4, i32* %2, align 4, !dbg !9844
  ret void, !dbg !9845
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9846 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9850, metadata !DIExpression()), !dbg !9854
  call void @llvm.dbg.value(metadata i32 %1, metadata !9851, metadata !DIExpression()), !dbg !9854
  call void @llvm.dbg.value(metadata i32 0, metadata !9852, metadata !DIExpression()), !dbg !9854
  call void @llvm.dbg.value(metadata i32 %2, metadata !9853, metadata !DIExpression()), !dbg !9854
  %4 = zext i32 %1 to i64, !dbg !9855
  %5 = mul nuw nsw i64 %4, 25, !dbg !9855
  %6 = zext i32 %2 to i64, !dbg !9855
  %7 = shl nuw nsw i64 %6, 2, !dbg !9855
  %8 = udiv i64 %5, %7, !dbg !9855
  %9 = trunc i64 %8 to i32, !dbg !9855
  %10 = udiv i32 %9, 100, !dbg !9855
  %11 = shl nuw nsw i32 %10, 4, !dbg !9855
  %12 = mul i32 %10, -100, !dbg !9855
  %13 = add i32 %12, %9, !dbg !9855
  %14 = shl i32 %13, 4, !dbg !9855
  %15 = add i32 %14, 50, !dbg !9855
  %16 = udiv i32 %15, 100, !dbg !9855
  %17 = and i32 %16, 240, !dbg !9855
  %18 = add nuw nsw i32 %17, %11, !dbg !9855
  %19 = and i32 %16, 15, !dbg !9855
  %20 = and i32 %18, 65520, !dbg !9858
  %21 = or i32 %20, %19, !dbg !9858
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !9859
  store volatile i32 %21, i32* %22, align 4, !dbg !9860
  ret void, !dbg !9861
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9862 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9864, metadata !DIExpression()), !dbg !9866
  call void @llvm.dbg.value(metadata i32 %1, metadata !9865, metadata !DIExpression()), !dbg !9866
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9867
  %4 = load volatile i32, i32* %3, align 4, !dbg !9867
  %5 = and i32 %4, -769, !dbg !9867
  %6 = or i32 %5, %1, !dbg !9867
  store volatile i32 %6, i32* %3, align 4, !dbg !9867
  ret void, !dbg !9868
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9869 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9871, metadata !DIExpression()), !dbg !9873
  call void @llvm.dbg.value(metadata i32 %1, metadata !9872, metadata !DIExpression()), !dbg !9873
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9874
  %4 = load volatile i32, i32* %3, align 4, !dbg !9874
  %5 = and i32 %4, -4097, !dbg !9874
  %6 = or i32 %5, %1, !dbg !9874
  store volatile i32 %6, i32* %3, align 4, !dbg !9874
  ret void, !dbg !9875
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9876 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9878, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i32 %1, metadata !9879, metadata !DIExpression()), !dbg !9880
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9881
  %4 = load volatile i32, i32* %3, align 4, !dbg !9881
  %5 = and i32 %4, -12289, !dbg !9881
  %6 = or i32 %5, %1, !dbg !9881
  store volatile i32 %6, i32* %3, align 4, !dbg !9881
  ret void, !dbg !9882
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9883 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9885, metadata !DIExpression()), !dbg !9887
  call void @llvm.dbg.value(metadata i32 %1, metadata !9886, metadata !DIExpression()), !dbg !9887
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9888
  %4 = load volatile i32, i32* %3, align 4, !dbg !9888
  %5 = and i32 %4, -1537, !dbg !9888
  %6 = or i32 %5, %1, !dbg !9888
  store volatile i32 %6, i32* %3, align 4, !dbg !9888
  ret void, !dbg !9889
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9890 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9892, metadata !DIExpression()), !dbg !9893
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9894
  %3 = load volatile i32, i32* %2, align 4, !dbg !9894
  %4 = lshr i32 %3, 3, !dbg !9895
  %5 = and i32 %4, 1, !dbg !9895
  ret i32 %5, !dbg !9896
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9897 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9899, metadata !DIExpression()), !dbg !9900
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9901
  %3 = load volatile i32, i32* %2, align 4, !dbg !9901
  %4 = and i32 %3, 1, !dbg !9901
  ret i32 %4, !dbg !9902
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9903 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9905, metadata !DIExpression()), !dbg !9906
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9907
  %3 = load volatile i32, i32* %2, align 4, !dbg !9907
  %4 = lshr i32 %3, 1, !dbg !9908
  %5 = and i32 %4, 1, !dbg !9908
  ret i32 %5, !dbg !9909
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9910 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9912, metadata !DIExpression()), !dbg !9913
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9914
  %3 = load volatile i32, i32* %2, align 4, !dbg !9914
  %4 = lshr i32 %3, 8, !dbg !9915
  %5 = and i32 %4, 1, !dbg !9915
  ret i32 %5, !dbg !9916
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9917 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9919, metadata !DIExpression()), !dbg !9920
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9921
  store volatile i32 -257, i32* %2, align 4, !dbg !9921
  ret void, !dbg !9922
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9923 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9925, metadata !DIExpression()), !dbg !9927
  %3 = bitcast i32* %2 to i8*, !dbg !9928
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9928
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9926, metadata !DIExpression()), !dbg !9929
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9930
  %5 = load volatile i32, i32* %4, align 4, !dbg !9930
  store volatile i32 %5, i32* %2, align 4, !dbg !9931
  %6 = load volatile i32, i32* %2, align 4, !dbg !9932
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9933
  %8 = load volatile i32, i32* %7, align 4, !dbg !9933
  store volatile i32 %8, i32* %2, align 4, !dbg !9934
  %9 = load volatile i32, i32* %2, align 4, !dbg !9935
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9936
  ret void, !dbg !9936
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9937 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9939, metadata !DIExpression()), !dbg !9941
  %3 = bitcast i32* %2 to i8*, !dbg !9942
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9942
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9940, metadata !DIExpression()), !dbg !9943
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9944
  %5 = load volatile i32, i32* %4, align 4, !dbg !9944
  store volatile i32 %5, i32* %2, align 4, !dbg !9945
  %6 = load volatile i32, i32* %2, align 4, !dbg !9946
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9947
  %8 = load volatile i32, i32* %7, align 4, !dbg !9947
  store volatile i32 %8, i32* %2, align 4, !dbg !9948
  %9 = load volatile i32, i32* %2, align 4, !dbg !9949
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9950
  ret void, !dbg !9950
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9951 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9953, metadata !DIExpression()), !dbg !9955
  %3 = bitcast i32* %2 to i8*, !dbg !9956
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9956
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9954, metadata !DIExpression()), !dbg !9957
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9958
  %5 = load volatile i32, i32* %4, align 4, !dbg !9958
  store volatile i32 %5, i32* %2, align 4, !dbg !9959
  %6 = load volatile i32, i32* %2, align 4, !dbg !9960
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9961
  %8 = load volatile i32, i32* %7, align 4, !dbg !9961
  store volatile i32 %8, i32* %2, align 4, !dbg !9962
  %9 = load volatile i32, i32* %2, align 4, !dbg !9963
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9964
  ret void, !dbg !9964
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9965 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9967, metadata !DIExpression()), !dbg !9969
  %3 = bitcast i32* %2 to i8*, !dbg !9970
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9970
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9968, metadata !DIExpression()), !dbg !9971
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9972
  %5 = load volatile i32, i32* %4, align 4, !dbg !9972
  store volatile i32 %5, i32* %2, align 4, !dbg !9973
  %6 = load volatile i32, i32* %2, align 4, !dbg !9974
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9975
  %8 = load volatile i32, i32* %7, align 4, !dbg !9975
  store volatile i32 %8, i32* %2, align 4, !dbg !9976
  %9 = load volatile i32, i32* %2, align 4, !dbg !9977
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9978
  ret void, !dbg !9978
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9979 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9981, metadata !DIExpression()), !dbg !9982
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9983
  %3 = load volatile i32, i32* %2, align 4, !dbg !9983
  %4 = lshr i32 %3, 7, !dbg !9984
  %5 = and i32 %4, 1, !dbg !9984
  ret i32 %5, !dbg !9985
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !9986 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9990, metadata !DIExpression()), !dbg !9992
  call void @llvm.dbg.value(metadata i8 %1, metadata !9991, metadata !DIExpression()), !dbg !9992
  %3 = zext i8 %1 to i32, !dbg !9993
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9994
  store volatile i32 %3, i32* %4, align 4, !dbg !9995
  ret void, !dbg !9996
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9997 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9999, metadata !DIExpression()), !dbg !10000
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10001
  %3 = load volatile i32, i32* %2, align 4, !dbg !10001
  %4 = lshr i32 %3, 5, !dbg !10002
  %5 = and i32 %4, 1, !dbg !10002
  ret i32 %5, !dbg !10003
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10004 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10008, metadata !DIExpression()), !dbg !10009
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10010
  %3 = load volatile i32, i32* %2, align 4, !dbg !10010
  %4 = trunc i32 %3 to i8, !dbg !10011
  ret i8 %4, !dbg !10012
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !10013 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10015, metadata !DIExpression()), !dbg !10021
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10022
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10022
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10022
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10016, metadata !DIExpression()), !dbg !10021
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10023
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10023
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10023
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10017, metadata !DIExpression()), !dbg !10021
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !10024
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10025
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10025
  %10 = tail call fastcc zeroext i1 @device_is_ready.77(%struct.device* noundef %9) #26, !dbg !10027
  br i1 %10, label %11, label %49, !dbg !10028

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !10029
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10030
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10030
  %15 = load i8*, i8** %14, align 4, !dbg !10030
  %16 = tail call fastcc i32 @clock_control_on.78(%struct.device* noundef %12, i8* noundef %15) #26, !dbg !10031
  call void @llvm.dbg.value(metadata i32 %16, metadata !10020, metadata !DIExpression()), !dbg !10021
  %17 = icmp eq i32 %16, 0, !dbg !10032
  br i1 %17, label %18, label %49, !dbg !10034

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10035
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !10035
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #26, !dbg !10036
  call void @llvm.dbg.value(metadata i32 %21, metadata !10020, metadata !DIExpression()), !dbg !10021
  %22 = icmp slt i32 %21, 0, !dbg !10037
  br i1 %22, label %49, label %23, !dbg !10039

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10040
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10040
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #26, !dbg !10041
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10042
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #26, !dbg !10043
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10044
  %28 = load i32, i32* %27, align 4, !dbg !10044
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !10046

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !10018, metadata !DIExpression()), !dbg !10021
  call void @llvm.dbg.value(metadata i32 4096, metadata !10019, metadata !DIExpression()), !dbg !10021
  br label %31, !dbg !10047

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !10018, metadata !DIExpression()), !dbg !10021
  call void @llvm.dbg.value(metadata i32 0, metadata !10019, metadata !DIExpression()), !dbg !10021
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !10050
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !10050
  call void @llvm.dbg.value(metadata i32 %33, metadata !10019, metadata !DIExpression()), !dbg !10021
  call void @llvm.dbg.value(metadata i32 %32, metadata !10018, metadata !DIExpression()), !dbg !10021
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10051
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #26, !dbg !10052
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10053
  %36 = load i8, i8* %35, align 4, !dbg !10053, !range !6645
  %37 = icmp eq i8 %36, 0, !dbg !10053
  br i1 %37, label %39, label %38, !dbg !10055

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !10056
  br label %39, !dbg !10058

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10059
  %41 = load i32, i32* %40, align 4, !dbg !10059
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #26, !dbg !10060
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10061
  %43 = load i8, i8* %42, align 4, !dbg !10061, !range !6645
  %44 = icmp eq i8 %43, 0, !dbg !10061
  br i1 %44, label %47, label %45, !dbg !10063

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10064
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #26, !dbg !10066
  br label %47, !dbg !10067

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10068
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #26, !dbg !10069
  br label %49, !dbg !10070

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !10021
  ret i32 %50, !dbg !10071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !10072 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10076, metadata !DIExpression()), !dbg !10080
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10081
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10081
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10081
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10077, metadata !DIExpression()), !dbg !10080
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10078, metadata !DIExpression()), !dbg !10080
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10082
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !10083
  ret void, !dbg !10084
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.77(%struct.device* noundef %0) unnamed_addr #1 !dbg !10085 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10089, metadata !DIExpression()), !dbg !10090
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !10091, !srcloc !10093
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.79(%struct.device* noundef %0) #26, !dbg !10094
  ret i1 %2, !dbg !10095
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.78(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10096 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10098, metadata !DIExpression()), !dbg !10101
  call void @llvm.dbg.value(metadata i8* %1, metadata !10099, metadata !DIExpression()), !dbg !10101
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10102
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10102
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10102
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10100, metadata !DIExpression()), !dbg !10101
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10103
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10103
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !10104
  ret i32 %8, !dbg !10105
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10106 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10110, metadata !DIExpression()), !dbg !10114
  call void @llvm.dbg.value(metadata i8 0, metadata !10111, metadata !DIExpression()), !dbg !10114
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10115
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !10115
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10113, metadata !DIExpression(DW_OP_deref)), !dbg !10114
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !10116
  call void @llvm.dbg.value(metadata i32 %4, metadata !10112, metadata !DIExpression()), !dbg !10114
  %5 = icmp slt i32 %4, 0, !dbg !10117
  br i1 %5, label %9, label %6, !dbg !10119

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10120
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10113, metadata !DIExpression()), !dbg !10114
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !10121
  br label %9, !dbg !10122

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10114
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !10123
  ret i32 %10, !dbg !10123
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10124 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10126, metadata !DIExpression()), !dbg !10130
  call void @llvm.dbg.value(metadata i32 12, metadata !10127, metadata !DIExpression()), !dbg !10130
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10131

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10132, metadata !DIExpression()) #24, !dbg !10138
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !10141, !srcloc !10142
  call void @llvm.dbg.value(metadata i32 %4, metadata !10137, metadata !DIExpression()) #24, !dbg !10138
  %5 = or i32 %4, 12, !dbg !10143
  call void @llvm.dbg.value(metadata i32 %5, metadata !10128, metadata !DIExpression()), !dbg !10144
  call void @llvm.dbg.value(metadata i32 %5, metadata !10145, metadata !DIExpression()) #24, !dbg !10152
  call void @llvm.dbg.value(metadata i32* %2, metadata !10150, metadata !DIExpression()) #24, !dbg !10152
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !10154, !srcloc !10155
  call void @llvm.dbg.value(metadata i32 %6, metadata !10151, metadata !DIExpression()) #24, !dbg !10152
  %7 = icmp eq i32 %6, 0, !dbg !10131
  br i1 %7, label %8, label %3, !dbg !10143, !llvm.loop !10156

8:                                                ; preds = %3
  ret void, !dbg !10157
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10158 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10160, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.value(metadata i32 %1, metadata !10161, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.value(metadata i32 %2, metadata !10162, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.value(metadata i32 0, metadata !10163, metadata !DIExpression()), !dbg !10164
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10165
  %5 = load volatile i32, i32* %4, align 4, !dbg !10165
  %6 = and i32 %5, -5633, !dbg !10165
  %7 = or i32 %2, %1, !dbg !10165
  %8 = or i32 %7, %6, !dbg !10165
  store volatile i32 %8, i32* %4, align 4, !dbg !10165
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10166
  %10 = load volatile i32, i32* %9, align 4, !dbg !10166
  %11 = and i32 %10, -12289, !dbg !10166
  store volatile i32 %11, i32* %9, align 4, !dbg !10166
  ret void, !dbg !10167
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10168 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10170, metadata !DIExpression()), !dbg !10171
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10172
  %3 = load volatile i32, i32* %2, align 4, !dbg !10172
  %4 = or i32 %3, 8, !dbg !10172
  store volatile i32 %4, i32* %2, align 4, !dbg !10172
  ret void, !dbg !10173
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10174 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10178, metadata !DIExpression()), !dbg !10181
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10179, metadata !DIExpression()), !dbg !10181
  call void @llvm.dbg.value(metadata i32 0, metadata !10180, metadata !DIExpression()), !dbg !10181
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10182
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10182
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10183
  %5 = load i8, i8* %4, align 4, !dbg !10183
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !10184
  ret i32 %6, !dbg !10185
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.79(%struct.device* noundef %0) unnamed_addr #1 !dbg !10186 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10188, metadata !DIExpression()), !dbg !10189
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !10190
  ret i1 %2, !dbg !10191
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10192 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10194, metadata !DIExpression()), !dbg !10195
  tail call fastcc void @__NVIC_SetPriority.81() #26, !dbg !10196
  store i32 16799, i32* @last_load, align 4, !dbg !10197
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10198
  store volatile i32 16799, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10199
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10200
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10201
  %3 = or i32 %2, 7, !dbg !10201
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10201
  ret i32 0, !dbg !10202
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.81() unnamed_addr #15 !dbg !10203 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10205, metadata !DIExpression()), !dbg !10207
  call void @llvm.dbg.value(metadata i32 1, metadata !10206, metadata !DIExpression()), !dbg !10207
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10208
  ret void, !dbg !10211
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10212 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10214, metadata !DIExpression()), !dbg !10216
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !10217
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10218
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10219
  %5 = add i32 %4, %3, !dbg !10219
  store i32 %5, i32* @cycle_count, align 4, !dbg !10219
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10220
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10221
  %7 = sub i32 %5, %6, !dbg !10224
  %8 = udiv i32 %7, 16800, !dbg !10225
  call void @llvm.dbg.value(metadata i32 %8, metadata !10215, metadata !DIExpression()), !dbg !10216
  %9 = mul nuw i32 %8, 16800, !dbg !10226
  %10 = add i32 %9, %6, !dbg !10227
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10227
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !10228
  tail call void @z_arm_int_exit() #25, !dbg !10229
  ret void, !dbg !10230
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10231 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10236
  call void @llvm.dbg.value(metadata i32 %1, metadata !10233, metadata !DIExpression()), !dbg !10237
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10238
  call void @llvm.dbg.value(metadata i32 %2, metadata !10234, metadata !DIExpression()), !dbg !10237
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10239
  call void @llvm.dbg.value(metadata i32 %3, metadata !10235, metadata !DIExpression()), !dbg !10237
  %4 = and i32 %2, 65536, !dbg !10240
  %5 = icmp ne i32 %4, 0, !dbg !10240
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10242
  %8 = load i32, i32* @last_load, align 4, !dbg !10237
  br i1 %7, label %9, label %13, !dbg !10242

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10243
  %11 = add i32 %10, %8, !dbg !10243
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10243
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10245
  br label %13, !dbg !10246

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10247
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10248
  %16 = add i32 %14, %15, !dbg !10249
  ret i32 %16, !dbg !10250
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10251 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10255, metadata !DIExpression()), !dbg !10268
  call void @llvm.dbg.value(metadata i1 %1, metadata !10256, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10268
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10269
  br i1 %4, label %5, label %8, !dbg !10269

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10271
  %7 = and i32 %6, -2, !dbg !10271
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10271
  store i32 -16777216, i32* @last_load, align 4, !dbg !10273
  br label %54, !dbg !10274

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10275
  call void @llvm.dbg.value(metadata i32 %9, metadata !10260, metadata !DIExpression()), !dbg !10268
  br i1 %3, label %18, label %10, !dbg !10276

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10276
  call void @llvm.dbg.value(metadata i32 undef, metadata !10255, metadata !DIExpression()), !dbg !10268
  %12 = icmp slt i32 %11, 1, !dbg !10277
  br i1 %12, label %18, label %13, !dbg !10277

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 997, !dbg !10277
  %15 = select i1 %14, i32 %11, i32 997, !dbg !10277
  %16 = mul nuw nsw i32 %15, 16800, !dbg !10277
  %17 = add nuw nsw i32 %16, 16799, !dbg !10277
  br label %18, !dbg !10277

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 16799, %10 ], [ 16749599, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10255, metadata !DIExpression()), !dbg !10268
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10278, metadata !DIExpression()) #24, !dbg !10285
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10287, !srcloc !10293
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !10287
  call void @llvm.dbg.value(metadata i32 %21, metadata !10290, metadata !DIExpression()) #24, !dbg !10294
  call void @llvm.dbg.value(metadata i32 undef, metadata !10291, metadata !DIExpression()) #24, !dbg !10294
  call void @llvm.dbg.value(metadata i32 %21, metadata !10284, metadata !DIExpression()) #24, !dbg !10285
  call void @llvm.dbg.value(metadata i32 %21, metadata !10261, metadata !DIExpression()), !dbg !10268
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !10295
  call void @llvm.dbg.value(metadata i32 %22, metadata !10266, metadata !DIExpression()), !dbg !10268
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10296
  call void @llvm.dbg.value(metadata i32 %23, metadata !10258, metadata !DIExpression()), !dbg !10268
  %24 = load i32, i32* @cycle_count, align 4, !dbg !10297
  %25 = add i32 %24, %22, !dbg !10297
  store i32 %25, i32* @cycle_count, align 4, !dbg !10297
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10298
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !10299
  %27 = sub i32 %25, %26, !dbg !10300
  call void @llvm.dbg.value(metadata i32 %27, metadata !10267, metadata !DIExpression()), !dbg !10268
  %28 = icmp slt i32 %27, 0, !dbg !10301
  br i1 %28, label %38, label %29, !dbg !10303

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !10257, metadata !DIExpression()), !dbg !10268
  call void @llvm.dbg.value(metadata i32 undef, metadata !10257, metadata !DIExpression()), !dbg !10268
  %30 = add nuw i32 %19, %27, !dbg !10304
  %31 = urem i32 %30, 16800, !dbg !10306
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !10257, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10268
  %32 = sub nuw nsw i32 %19, %31, !dbg !10307
  call void @llvm.dbg.value(metadata i32 %32, metadata !10257, metadata !DIExpression()), !dbg !10268
  %33 = icmp ugt i32 %32, 1050, !dbg !10308
  br i1 %33, label %34, label %36, !dbg !10308

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !10257, metadata !DIExpression()), !dbg !10268
  %35 = icmp ugt i32 %32, 16749600, !dbg !10309
  br i1 %35, label %38, label %36, !dbg !10311

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1050, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1050, %18 ], [ 16749600, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !10312
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10313
  call void @llvm.dbg.value(metadata i32 %40, metadata !10259, metadata !DIExpression()), !dbg !10268
  %41 = add nsw i32 %39, -1, !dbg !10314
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10315
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10316
  %42 = icmp ult i32 %23, %40, !dbg !10317
  br i1 %42, label %43, label %48, !dbg !10319

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !10320
  %45 = add i32 %23, %9, !dbg !10322
  %46 = sub i32 %45, %40, !dbg !10323
  %47 = add i32 %46, %44, !dbg !10320
  br label %52, !dbg !10324

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !10325
  %50 = load i32, i32* @cycle_count, align 4, !dbg !10327
  %51 = add i32 %49, %50, !dbg !10327
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !10328
  store i32 %53, i32* @cycle_count, align 4, !dbg !10328
  call void @llvm.dbg.value(metadata i32 %21, metadata !10329, metadata !DIExpression()) #24, !dbg !10335
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10334, metadata !DIExpression()) #24, !dbg !10335
  call void @llvm.dbg.value(metadata i32 %21, metadata !10337, metadata !DIExpression()) #24, !dbg !10340
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !10342, !srcloc !10343
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !10344
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10345 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10278, metadata !DIExpression()) #24, !dbg !10349
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10351, !srcloc !10293
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10351
  call void @llvm.dbg.value(metadata i32 %2, metadata !10290, metadata !DIExpression()) #24, !dbg !10353
  call void @llvm.dbg.value(metadata i32 undef, metadata !10291, metadata !DIExpression()) #24, !dbg !10353
  call void @llvm.dbg.value(metadata i32 %2, metadata !10284, metadata !DIExpression()) #24, !dbg !10349
  call void @llvm.dbg.value(metadata i32 %2, metadata !10347, metadata !DIExpression()), !dbg !10354
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !10355
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10356
  %5 = add i32 %4, %3, !dbg !10357
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10358
  %7 = sub i32 %5, %6, !dbg !10359
  call void @llvm.dbg.value(metadata i32 %7, metadata !10348, metadata !DIExpression()), !dbg !10354
  call void @llvm.dbg.value(metadata i32 %2, metadata !10329, metadata !DIExpression()) #24, !dbg !10360
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10334, metadata !DIExpression()) #24, !dbg !10360
  call void @llvm.dbg.value(metadata i32 %2, metadata !10337, metadata !DIExpression()) #24, !dbg !10362
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !10364, !srcloc !10343
  %8 = udiv i32 %7, 16800, !dbg !10365
  ret i32 %8, !dbg !10366
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10367 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10278, metadata !DIExpression()) #24, !dbg !10371
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10373, !srcloc !10293
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10373
  call void @llvm.dbg.value(metadata i32 %2, metadata !10290, metadata !DIExpression()) #24, !dbg !10375
  call void @llvm.dbg.value(metadata i32 undef, metadata !10291, metadata !DIExpression()) #24, !dbg !10375
  call void @llvm.dbg.value(metadata i32 %2, metadata !10284, metadata !DIExpression()) #24, !dbg !10371
  call void @llvm.dbg.value(metadata i32 %2, metadata !10369, metadata !DIExpression()), !dbg !10376
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !10377
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10378
  %5 = add i32 %4, %3, !dbg !10379
  call void @llvm.dbg.value(metadata i32 %5, metadata !10370, metadata !DIExpression()), !dbg !10376
  call void @llvm.dbg.value(metadata i32 %2, metadata !10329, metadata !DIExpression()) #24, !dbg !10380
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10334, metadata !DIExpression()) #24, !dbg !10380
  call void @llvm.dbg.value(metadata i32 %2, metadata !10337, metadata !DIExpression()) #24, !dbg !10382
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !10384, !srcloc !10343
  ret i32 %5, !dbg !10385
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !10386 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10387
  %2 = icmp eq i32 %1, -16777216, !dbg !10389
  br i1 %2, label %3, label %6, !dbg !10390

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10391
  %5 = or i32 %4, 1, !dbg !10391
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10391
  br label %6, !dbg !10393

6:                                                ; preds = %3, %0
  ret void, !dbg !10394
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !10395 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10396
  %2 = and i32 %1, -2, !dbg !10396
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10396
  ret void, !dbg !10397
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !10398 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10424, metadata !DIExpression()), !dbg !10427
  call void @llvm.dbg.value(metadata i8 %1, metadata !10425, metadata !DIExpression()), !dbg !10427
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10426, metadata !DIExpression()), !dbg !10427
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10428
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10428
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10427
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10429
  %8 = load i8, i8* %6, align 4, !dbg !10430
  %9 = zext i8 %8 to i32, !dbg !10431
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10431
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10432
  br i1 %11, label %18, label %24, !dbg !10433

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10427
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10429
  %14 = load i8, i8* %6, align 4, !dbg !10430
  %15 = zext i8 %14 to i32, !dbg !10431
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10431
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10432
  br i1 %17, label %18, label %24, !dbg !10433, !llvm.loop !10434

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10436
  %21 = load i8, i8* %20, align 1, !dbg !10436
  %22 = icmp eq i8 %21, %1, !dbg !10439
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10440
  br i1 %22, label %24, label %12, !dbg !10441

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10427
  ret i32 %25, !dbg !10442
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10443 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10454, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i8 %1, metadata !10455, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i32 %2, metadata !10456, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i32 0, metadata !10459, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i32 0, metadata !10460, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i8 0, metadata !10461, metadata !DIExpression()), !dbg !10471
  %4 = icmp eq i8 %1, 0, !dbg !10472
  br i1 %4, label %35, label %5, !dbg !10473

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10472
  br label %9, !dbg !10473

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10461, metadata !DIExpression()), !dbg !10471
  call void @llvm.dbg.value(metadata i32 %29, metadata !10459, metadata !DIExpression()), !dbg !10470
  %8 = icmp eq i32 %34, %6, !dbg !10472
  br i1 %8, label %35, label %9, !dbg !10473, !llvm.loop !10474

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10461, metadata !DIExpression()), !dbg !10471
  call void @llvm.dbg.value(metadata i32 %11, metadata !10459, metadata !DIExpression()), !dbg !10470
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10476
  %13 = load i32, i32* %12, align 4, !dbg !10476
  call void @llvm.dbg.value(metadata i32 %13, metadata !10458, metadata !DIExpression()), !dbg !10470
  %14 = and i32 %13, 31, !dbg !10477
  %15 = icmp ult i32 %14, 16, !dbg !10478
  br i1 %15, label %16, label %20, !dbg !10479

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10480
  %18 = load i32, i32* %17, align 4, !dbg !10480
  %19 = or i32 %18, 32, !dbg !10482
  call void @llvm.dbg.value(metadata i32 %19, metadata !10459, metadata !DIExpression()), !dbg !10470
  br label %28, !dbg !10483

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10484

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10485
  %23 = load i32, i32* %22, align 4, !dbg !10485
  call void @llvm.dbg.value(metadata i32 %23, metadata !10463, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10486
  %24 = lshr i32 %23, 7, !dbg !10487
  %25 = and i32 %24, 16, !dbg !10487
  %26 = or i32 %25, %23, !dbg !10487
  call void @llvm.dbg.value(metadata i32 %26, metadata !10459, metadata !DIExpression()), !dbg !10470
  br label %28, !dbg !10488

27:                                               ; preds = %20
  br label %28, !dbg !10489

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !10470
  call void @llvm.dbg.value(metadata i32 %29, metadata !10459, metadata !DIExpression()), !dbg !10470
  %30 = lshr i32 %13, 5, !dbg !10489
  %31 = and i32 %30, 255, !dbg !10489
  call void @llvm.dbg.value(metadata i32 %31, metadata !10457, metadata !DIExpression()), !dbg !10470
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !10490
  call void @llvm.dbg.value(metadata i32 %32, metadata !10460, metadata !DIExpression()), !dbg !10470
  %33 = icmp slt i32 %32, 0, !dbg !10491
  %34 = add nuw nsw i32 %10, 1, !dbg !10493
  call void @llvm.dbg.value(metadata i32 %34, metadata !10461, metadata !DIExpression()), !dbg !10471
  br i1 %33, label %35, label %7, !dbg !10494

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10495
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10496 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10500, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata i32 %1, metadata !10501, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata i32 %2, metadata !10502, metadata !DIExpression()), !dbg !10504
  %4 = icmp ugt i32 %0, 175, !dbg !10505
  br i1 %4, label %16, label %5, !dbg !10507

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !10508
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !10509
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !10509
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10503, metadata !DIExpression()), !dbg !10504
  %9 = add nsw i32 %6, -9, !dbg !10510
  %10 = icmp ult i32 %9, 2, !dbg !10510
  br i1 %10, label %16, label %11, !dbg !10512

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.86(%struct.device* noundef %8) #26, !dbg !10513
  br i1 %12, label %13, label %16, !dbg !10514

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !10515
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !10516
  br label %16, !dbg !10517

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !10504
  ret i32 %17, !dbg !10518
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.86(%struct.device* noundef %0) unnamed_addr #1 !dbg !10519 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10523, metadata !DIExpression()), !dbg !10524
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !10525, !srcloc !10527
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.87(%struct.device* noundef %0) #26, !dbg !10528
  ret i1 %2, !dbg !10529
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.87(%struct.device* noundef %0) unnamed_addr #1 !dbg !10530 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10532, metadata !DIExpression()), !dbg !10533
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !10534
  ret i1 %2, !dbg !10535
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !10536 {
  ret void, !dbg !10537
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !10538 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10540, metadata !DIExpression()), !dbg !10545
  call void @llvm.dbg.value(metadata i32 0, metadata !10541, metadata !DIExpression()), !dbg !10545
  call void @llvm.dbg.value(metadata i32 2, metadata !10542, metadata !DIExpression()), !dbg !10545
  call void @llvm.dbg.value(metadata i32 0, metadata !10543, metadata !DIExpression()), !dbg !10545
  call void @llvm.dbg.value(metadata i32 2, metadata !10544, metadata !DIExpression()), !dbg !10545
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10546
  %2 = and i32 %1, 12, !dbg !10547
  call void @llvm.dbg.value(metadata i32 %2, metadata !10540, metadata !DIExpression()), !dbg !10545
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !10548

3:                                                ; preds = %0
  br label %21, !dbg !10549

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10551
  call void @llvm.dbg.value(metadata i32 %5, metadata !10543, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !10545
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10552
  %7 = and i32 %6, 63, !dbg !10553
  call void @llvm.dbg.value(metadata i32 %7, metadata !10544, metadata !DIExpression()), !dbg !10545
  %8 = and i32 %5, 4194304, !dbg !10554
  %9 = icmp eq i32 %8, 0, !dbg !10554
  %10 = select i1 %9, i32 16000000, i32 12000000
  %11 = udiv i32 %10, %7, !dbg !10556
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10556
  %13 = lshr i32 %12, 6, !dbg !10556
  %14 = and i32 %13, 511, !dbg !10556
  %15 = mul i32 %14, %11, !dbg !10556
  call void @llvm.dbg.value(metadata i32 %15, metadata !10541, metadata !DIExpression()), !dbg !10545
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10557
  %17 = lshr i32 %16, 15, !dbg !10558
  %18 = and i32 %17, 6, !dbg !10558
  %19 = add nuw nsw i32 %18, 2, !dbg !10558
  call void @llvm.dbg.value(metadata i32 %19, metadata !10542, metadata !DIExpression()), !dbg !10545
  %20 = udiv i32 %15, %19, !dbg !10559
  br label %21, !dbg !10560

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 12000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !10561
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10562
  %24 = lshr i32 %23, 4, !dbg !10563
  %25 = and i32 %24, 15, !dbg !10563
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !10564
  %27 = load i8, i8* %26, align 1, !dbg !10564
  %28 = zext i8 %27 to i32, !dbg !10564
  call void @llvm.dbg.value(metadata i32 %28, metadata !10540, metadata !DIExpression()), !dbg !10545
  %29 = lshr i32 %22, %28, !dbg !10565
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !10565
  ret void, !dbg !10566
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !10567 {
  ret i32 0, !dbg !10572
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !10573 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10599, metadata !DIExpression()), !dbg !10610
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !10611
  br i1 %3, label %311, label %4, !dbg !10613

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10614
  %6 = load i32, i32* %5, align 4, !dbg !10614
  %7 = and i32 %6, 1, !dbg !10616
  %8 = icmp eq i32 %7, 0, !dbg !10617
  br i1 %8, label %66, label %9, !dbg !10618

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10619
  %11 = and i32 %10, 12, !dbg !10619
  %12 = icmp eq i32 %11, 4, !dbg !10622
  br i1 %12, label %21, label %13, !dbg !10623

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10624
  %15 = and i32 %14, 12, !dbg !10624
  %16 = icmp eq i32 %15, 8, !dbg !10625
  br i1 %16, label %17, label %29, !dbg !10626

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10627
  %19 = and i32 %18, 4194304, !dbg !10628
  %20 = icmp eq i32 %19, 0, !dbg !10629
  br i1 %20, label %29, label %21, !dbg !10630

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10631
  %23 = and i32 %22, 131072, !dbg !10631
  %24 = icmp eq i32 %23, 0, !dbg !10631
  br i1 %24, label %66, label %25, !dbg !10634

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10635
  %27 = load i32, i32* %26, align 4, !dbg !10635
  %28 = icmp eq i32 %27, 0, !dbg !10636
  br i1 %28, label %311, label %66, !dbg !10637

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10638
  %31 = load i32, i32* %30, align 4, !dbg !10638
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !10642

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10643
  %34 = or i32 %33, 65536, !dbg !10643
  br label %45, !dbg !10643

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10645
  %37 = or i32 %36, 262144, !dbg !10645
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10645
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10645
  %39 = or i32 %38, 65536, !dbg !10645
  br label %45, !dbg !10645

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10648
  %42 = and i32 %41, -65537, !dbg !10648
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10648
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10648
  %44 = and i32 %43, -262145, !dbg !10648
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10650
  %47 = load i32, i32* %30, align 4, !dbg !10651
  %48 = icmp eq i32 %47, 0, !dbg !10653
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !10654
  call void @llvm.dbg.value(metadata i32 %49, metadata !10600, metadata !DIExpression()), !dbg !10610
  call void @llvm.dbg.value(metadata i32 %49, metadata !10600, metadata !DIExpression()), !dbg !10610
  br i1 %48, label %58, label %50, !dbg !10655

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10656
  %52 = and i32 %51, 131072, !dbg !10658
  %53 = icmp eq i32 %52, 0, !dbg !10658
  br i1 %53, label %54, label %66, !dbg !10659

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !10660
  %56 = sub i32 %55, %49, !dbg !10663
  %57 = icmp ugt i32 %56, 100, !dbg !10664
  br i1 %57, label %311, label %50, !dbg !10665, !llvm.loop !10666

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10668
  %60 = and i32 %59, 131072, !dbg !10668
  %61 = icmp eq i32 %60, 0, !dbg !10668
  br i1 %61, label %66, label %62, !dbg !10670

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !10671
  %64 = sub i32 %63, %49, !dbg !10674
  %65 = icmp ugt i32 %64, 100, !dbg !10675
  br i1 %65, label %311, label %58, !dbg !10676, !llvm.loop !10677

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !10679
  %68 = and i32 %67, 2, !dbg !10681
  %69 = icmp eq i32 %68, 0, !dbg !10682
  br i1 %69, label %121, label %70, !dbg !10683

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10684
  %72 = and i32 %71, 12, !dbg !10684
  %73 = icmp eq i32 %72, 0, !dbg !10687
  br i1 %73, label %82, label %74, !dbg !10688

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10689
  %76 = and i32 %75, 12, !dbg !10689
  %77 = icmp eq i32 %76, 8, !dbg !10690
  br i1 %77, label %78, label %90, !dbg !10691

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10692
  %80 = and i32 %79, 4194304, !dbg !10693
  %81 = icmp eq i32 %80, 0, !dbg !10694
  br i1 %81, label %82, label %90, !dbg !10695

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10696
  %84 = and i32 %83, 2, !dbg !10696
  %85 = icmp eq i32 %84, 0, !dbg !10696
  br i1 %85, label %114, label %86, !dbg !10699

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10700
  %88 = load i32, i32* %87, align 4, !dbg !10700
  %89 = icmp eq i32 %88, 1, !dbg !10701
  br i1 %89, label %114, label %311, !dbg !10702

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10703
  %92 = load i32, i32* %91, align 4, !dbg !10703
  %93 = icmp eq i32 %92, 0, !dbg !10706
  br i1 %93, label %104, label %94, !dbg !10707

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10708
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !10710
  call void @llvm.dbg.value(metadata i32 %95, metadata !10600, metadata !DIExpression()), !dbg !10610
  br label %96, !dbg !10711

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10712
  %98 = and i32 %97, 2, !dbg !10713
  %99 = icmp eq i32 %98, 0, !dbg !10713
  br i1 %99, label %100, label %114, !dbg !10711

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !10714
  %102 = sub i32 %101, %95, !dbg !10717
  %103 = icmp ugt i32 %102, 2, !dbg !10718
  br i1 %103, label %311, label %96, !dbg !10719, !llvm.loop !10720

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10722
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !10724
  call void @llvm.dbg.value(metadata i32 %105, metadata !10600, metadata !DIExpression()), !dbg !10610
  br label %106, !dbg !10725

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10726
  %108 = and i32 %107, 2, !dbg !10726
  %109 = icmp eq i32 %108, 0, !dbg !10726
  br i1 %109, label %121, label %110, !dbg !10725

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !10727
  %112 = sub i32 %111, %105, !dbg !10730
  %113 = icmp ugt i32 %112, 2, !dbg !10731
  br i1 %113, label %311, label %106, !dbg !10732, !llvm.loop !10733

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10735
  %116 = and i32 %115, -249, !dbg !10735
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10735
  %118 = load i32, i32* %117, align 4, !dbg !10735
  %119 = shl i32 %118, 3, !dbg !10735
  %120 = or i32 %119, %116, !dbg !10735
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10735
  br label %121, !dbg !10736

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !10736
  %123 = and i32 %122, 8, !dbg !10738
  %124 = icmp eq i32 %123, 0, !dbg !10739
  br i1 %124, label %149, label %125, !dbg !10740

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10741
  %127 = load i32, i32* %126, align 4, !dbg !10741
  %128 = icmp eq i32 %127, 0, !dbg !10744
  br i1 %128, label %139, label %129, !dbg !10745

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10746
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !10748
  call void @llvm.dbg.value(metadata i32 %130, metadata !10600, metadata !DIExpression()), !dbg !10610
  br label %131, !dbg !10749

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10750
  %133 = and i32 %132, 2, !dbg !10751
  %134 = icmp eq i32 %133, 0, !dbg !10751
  br i1 %134, label %135, label %149, !dbg !10749

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !10752
  %137 = sub i32 %136, %130, !dbg !10755
  %138 = icmp ugt i32 %137, 2, !dbg !10756
  br i1 %138, label %311, label %131, !dbg !10757, !llvm.loop !10758

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10760
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !10762
  call void @llvm.dbg.value(metadata i32 %140, metadata !10600, metadata !DIExpression()), !dbg !10610
  br label %141, !dbg !10763

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10764
  %143 = and i32 %142, 2, !dbg !10764
  %144 = icmp eq i32 %143, 0, !dbg !10764
  br i1 %144, label %149, label %145, !dbg !10763

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !10765
  %147 = sub i32 %146, %140, !dbg !10768
  %148 = icmp ugt i32 %147, 2, !dbg !10769
  br i1 %148, label %311, label %141, !dbg !10770, !llvm.loop !10771

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !10773
  %151 = and i32 %150, 4, !dbg !10774
  %152 = icmp eq i32 %151, 0, !dbg !10775
  br i1 %152, label %221, label %153, !dbg !10776

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !10602, metadata !DIExpression()), !dbg !10777
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10778
  %155 = and i32 %154, 268435456, !dbg !10778
  %156 = icmp eq i32 %155, 0, !dbg !10778
  br i1 %156, label %157, label %164, !dbg !10779

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !10780
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !10780
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10606, metadata !DIExpression()), !dbg !10780
  store volatile i32 0, i32* %2, align 4, !dbg !10780
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10780
  %160 = or i32 %159, 268435456, !dbg !10780
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10780
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10780
  %162 = and i32 %161, 268435456, !dbg !10780
  store volatile i32 %162, i32* %2, align 4, !dbg !10780
  %163 = load volatile i32, i32* %2, align 4, !dbg !10780
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !10781
  call void @llvm.dbg.value(metadata i32 1, metadata !10602, metadata !DIExpression()), !dbg !10777
  br label %164, !dbg !10782

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !10602, metadata !DIExpression()), !dbg !10777
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10783
  %166 = and i32 %165, 256, !dbg !10783
  %167 = icmp eq i32 %166, 0, !dbg !10783
  br i1 %167, label %168, label %180, !dbg !10785

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10786
  %170 = or i32 %169, 256, !dbg !10786
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10786
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !10788
  call void @llvm.dbg.value(metadata i32 %171, metadata !10600, metadata !DIExpression()), !dbg !10610
  br label %172, !dbg !10789

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10790
  %174 = and i32 %173, 256, !dbg !10790
  %175 = icmp eq i32 %174, 0, !dbg !10790
  br i1 %175, label %176, label %180, !dbg !10789

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !10791
  %178 = sub i32 %177, %171, !dbg !10794
  %179 = icmp ugt i32 %178, 2, !dbg !10795
  br i1 %179, label %311, label %172, !dbg !10796, !llvm.loop !10797

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10799
  %182 = load i32, i32* %181, align 4, !dbg !10799
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !10802

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10803
  %185 = or i32 %184, 1, !dbg !10803
  br label %196, !dbg !10803

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10805
  %188 = or i32 %187, 4, !dbg !10805
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10805
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10805
  %190 = or i32 %189, 1, !dbg !10805
  br label %196, !dbg !10805

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10808
  %193 = and i32 %192, -2, !dbg !10808
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10808
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10808
  %195 = and i32 %194, -5, !dbg !10808
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10810
  %198 = load i32, i32* %181, align 4, !dbg !10811
  %199 = icmp eq i32 %198, 0, !dbg !10813
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !10814
  call void @llvm.dbg.value(metadata i32 %200, metadata !10600, metadata !DIExpression()), !dbg !10610
  call void @llvm.dbg.value(metadata i32 %200, metadata !10600, metadata !DIExpression()), !dbg !10610
  br i1 %199, label %209, label %201, !dbg !10815

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10816
  %203 = and i32 %202, 2, !dbg !10818
  %204 = icmp eq i32 %203, 0, !dbg !10818
  br i1 %204, label %205, label %217, !dbg !10819

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !10820
  %207 = sub i32 %206, %200, !dbg !10823
  %208 = icmp ugt i32 %207, 5000, !dbg !10824
  br i1 %208, label %311, label %201, !dbg !10825, !llvm.loop !10826

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10828
  %211 = and i32 %210, 2, !dbg !10828
  %212 = icmp eq i32 %211, 0, !dbg !10828
  br i1 %212, label %217, label %213, !dbg !10830

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !10831
  %215 = sub i32 %214, %200, !dbg !10834
  %216 = icmp ugt i32 %215, 5000, !dbg !10835
  br i1 %216, label %311, label %209, !dbg !10836, !llvm.loop !10837

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !10839

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10840
  %220 = and i32 %219, -268435457, !dbg !10840
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10840
  br label %221, !dbg !10843

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !10844
  %223 = load i32, i32* %222, align 4, !dbg !10844
  %224 = icmp eq i32 %223, 0, !dbg !10846
  br i1 %224, label %310, label %225, !dbg !10847

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10848
  %227 = and i32 %226, 12, !dbg !10848
  %228 = icmp eq i32 %227, 8, !dbg !10851
  br i1 %228, label %277, label %229, !dbg !10852

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !10853
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10856
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !10856
  call void @llvm.dbg.value(metadata i32 %231, metadata !10600, metadata !DIExpression()), !dbg !10610
  call void @llvm.dbg.value(metadata i32 %231, metadata !10600, metadata !DIExpression()), !dbg !10610
  br i1 %230, label %232, label %269, !dbg !10857

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10858
  %234 = and i32 %233, 33554432, !dbg !10858
  %235 = icmp eq i32 %234, 0, !dbg !10858
  br i1 %235, label %240, label %236, !dbg !10860

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !10861
  %238 = sub i32 %237, %231, !dbg !10864
  %239 = icmp ugt i32 %238, 2, !dbg !10865
  br i1 %239, label %311, label %232, !dbg !10866, !llvm.loop !10867

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10869
  %242 = load i32, i32* %241, align 4, !dbg !10869
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10869
  %244 = load i32, i32* %243, align 4, !dbg !10869
  %245 = or i32 %244, %242, !dbg !10869
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10869
  %247 = load i32, i32* %246, align 4, !dbg !10869
  %248 = shl i32 %247, 6, !dbg !10869
  %249 = or i32 %245, %248, !dbg !10869
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10869
  %251 = load i32, i32* %250, align 4, !dbg !10869
  %252 = shl i32 %251, 15, !dbg !10869
  %253 = add i32 %252, -65536, !dbg !10869
  %254 = and i32 %253, -65536, !dbg !10869
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10869
  %256 = load i32, i32* %255, align 4, !dbg !10869
  %257 = shl i32 %256, 24, !dbg !10869
  %258 = or i32 %249, %257, !dbg !10869
  %259 = or i32 %258, %254, !dbg !10869
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10869
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10870
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !10871
  call void @llvm.dbg.value(metadata i32 %260, metadata !10600, metadata !DIExpression()), !dbg !10610
  br label %261, !dbg !10872

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10873
  %263 = and i32 %262, 33554432, !dbg !10874
  %264 = icmp eq i32 %263, 0, !dbg !10874
  br i1 %264, label %265, label %310, !dbg !10872

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !10875
  %267 = sub i32 %266, %260, !dbg !10878
  %268 = icmp ugt i32 %267, 2, !dbg !10879
  br i1 %268, label %311, label %261, !dbg !10880, !llvm.loop !10881

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10883
  %271 = and i32 %270, 33554432, !dbg !10883
  %272 = icmp eq i32 %271, 0, !dbg !10883
  br i1 %272, label %310, label %273, !dbg !10885

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !10886
  %275 = sub i32 %274, %231, !dbg !10889
  %276 = icmp ugt i32 %275, 2, !dbg !10890
  br i1 %276, label %311, label %269, !dbg !10891, !llvm.loop !10892

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !10894
  br i1 %278, label %311, label %279, !dbg !10897

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10898
  call void @llvm.dbg.value(metadata i32 %280, metadata !10601, metadata !DIExpression()), !dbg !10610
  %281 = and i32 %280, 4194304, !dbg !10900
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10902
  %283 = load i32, i32* %282, align 4, !dbg !10902
  %284 = icmp eq i32 %281, %283, !dbg !10903
  br i1 %284, label %285, label %311, !dbg !10904

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !10905
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10906
  %288 = load i32, i32* %287, align 4, !dbg !10906
  %289 = icmp eq i32 %286, %288, !dbg !10907
  br i1 %289, label %290, label %311, !dbg !10908

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !10909
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10910
  %293 = load i32, i32* %292, align 4, !dbg !10910
  %294 = shl i32 %293, 6, !dbg !10911
  %295 = icmp eq i32 %291, %294, !dbg !10912
  br i1 %295, label %296, label %311, !dbg !10913

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !10914
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10915
  %299 = load i32, i32* %298, align 4, !dbg !10915
  %300 = shl i32 %299, 15, !dbg !10916
  %301 = add i32 %300, -65536, !dbg !10916
  %302 = and i32 %301, -65536, !dbg !10916
  %303 = icmp eq i32 %297, %302, !dbg !10917
  br i1 %303, label %304, label %311, !dbg !10918

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !10919
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10920
  %307 = load i32, i32* %306, align 4, !dbg !10920
  %308 = shl i32 %307, 24, !dbg !10921
  %309 = icmp eq i32 %305, %308, !dbg !10922
  br i1 %309, label %310, label %311, !dbg !10923

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !10924

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !10610
  ret i32 %312, !dbg !10925
}

; Function Attrs: optsize
declare !dbg !10926 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !10928 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !10941, metadata !DIExpression()), !dbg !10944
  call void @llvm.dbg.value(metadata i32 %1, metadata !10942, metadata !DIExpression()), !dbg !10944
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !10945
  br i1 %3, label %115, label %4, !dbg !10947

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10948
  %6 = and i32 %5, 7, !dbg !10948
  %7 = icmp ult i32 %6, %1, !dbg !10950
  br i1 %7, label %8, label %13, !dbg !10951

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !10952
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !10952
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10954
  %11 = and i32 %10, 7, !dbg !10954
  %12 = icmp eq i32 %11, %1, !dbg !10956
  br i1 %12, label %13, label %115, !dbg !10957

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !10958
  %15 = load i32, i32* %14, align 4, !dbg !10958
  %16 = and i32 %15, 2, !dbg !10960
  %17 = icmp eq i32 %16, 0, !dbg !10961
  br i1 %17, label %39, label %18, !dbg !10962

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !10963
  %20 = icmp eq i32 %19, 0, !dbg !10966
  br i1 %20, label %25, label %21, !dbg !10967

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10968
  %23 = or i32 %22, 7168, !dbg !10968
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10968
  %24 = load i32, i32* %14, align 4, !dbg !10970
  br label %25, !dbg !10972

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !10970
  %27 = and i32 %26, 8, !dbg !10973
  %28 = icmp eq i32 %27, 0, !dbg !10974
  br i1 %28, label %32, label %29, !dbg !10975

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10976
  %31 = or i32 %30, 57344, !dbg !10976
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10976
  br label %32, !dbg !10978

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10979
  %34 = and i32 %33, -241, !dbg !10979
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !10979
  %36 = load i32, i32* %35, align 4, !dbg !10979
  %37 = or i32 %34, %36, !dbg !10979
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10979
  %38 = load i32, i32* %14, align 4, !dbg !10980
  br label %39, !dbg !10982

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !10980
  %41 = and i32 %40, 1, !dbg !10983
  %42 = icmp eq i32 %41, 0, !dbg !10984
  br i1 %42, label %73, label %43, !dbg !10985

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !10986
  %45 = load i32, i32* %44, align 4, !dbg !10986
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !10989

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10990
  %48 = and i32 %47, 131072, !dbg !10993
  %49 = icmp eq i32 %48, 0, !dbg !10993
  br i1 %49, label %115, label %58, !dbg !10994

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10995
  %52 = and i32 %51, 33554432, !dbg !10999
  %53 = icmp eq i32 %52, 0, !dbg !10999
  br i1 %53, label %115, label %58, !dbg !11000

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11001
  %56 = and i32 %55, 2, !dbg !11004
  %57 = icmp eq i32 %56, 0, !dbg !11004
  br i1 %57, label %115, label %58, !dbg !11005

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11006
  %60 = and i32 %59, -4, !dbg !11006
  %61 = or i32 %60, %45, !dbg !11006
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11006
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !11007
  call void @llvm.dbg.value(metadata i32 %62, metadata !10943, metadata !DIExpression()), !dbg !10944
  br label %63, !dbg !11008

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11009
  %65 = and i32 %64, 12, !dbg !11009
  %66 = load i32, i32* %44, align 4, !dbg !11010
  %67 = shl i32 %66, 2, !dbg !11011
  %68 = icmp eq i32 %65, %67, !dbg !11012
  br i1 %68, label %73, label %69, !dbg !11008

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !11013
  %71 = sub i32 %70, %62, !dbg !11016
  %72 = icmp ugt i32 %71, 5000, !dbg !11017
  br i1 %72, label %115, label %63, !dbg !11018, !llvm.loop !11019

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11021
  %75 = and i32 %74, 7, !dbg !11021
  %76 = icmp ugt i32 %75, %1, !dbg !11023
  br i1 %76, label %77, label %82, !dbg !11024

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11025
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11025
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11027
  %80 = and i32 %79, 7, !dbg !11027
  %81 = icmp eq i32 %80, %1, !dbg !11029
  br i1 %81, label %82, label %115, !dbg !11030

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11031
  %84 = and i32 %83, 4, !dbg !11033
  %85 = icmp eq i32 %84, 0, !dbg !11034
  br i1 %85, label %93, label %86, !dbg !11035

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11036
  %88 = and i32 %87, -7169, !dbg !11036
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11036
  %90 = load i32, i32* %89, align 4, !dbg !11036
  %91 = or i32 %88, %90, !dbg !11036
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11036
  %92 = load i32, i32* %14, align 4, !dbg !11038
  br label %93, !dbg !11040

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11038
  %95 = and i32 %94, 8, !dbg !11041
  %96 = icmp eq i32 %95, 0, !dbg !11042
  br i1 %96, label %104, label %97, !dbg !11043

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11044
  %99 = and i32 %98, -57345, !dbg !11044
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11044
  %101 = load i32, i32* %100, align 4, !dbg !11044
  %102 = shl i32 %101, 3, !dbg !11044
  %103 = or i32 %102, %99, !dbg !11044
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11044
  br label %104, !dbg !11046

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !11047
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11048
  %107 = lshr i32 %106, 4, !dbg !11049
  %108 = and i32 %107, 15, !dbg !11049
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11050
  %110 = load i8, i8* %109, align 1, !dbg !11050
  %111 = zext i8 %110 to i32, !dbg !11050
  %112 = lshr i32 %105, %111, !dbg !11051
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11052
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11053
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !11054
  br label %115, !dbg !11055

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !10944
  ret i32 %116, !dbg !11056
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11057 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11059, metadata !DIExpression()), !dbg !11063
  call void @llvm.dbg.value(metadata i32 0, metadata !11060, metadata !DIExpression()), !dbg !11063
  call void @llvm.dbg.value(metadata i32 0, metadata !11061, metadata !DIExpression()), !dbg !11063
  call void @llvm.dbg.value(metadata i32 0, metadata !11062, metadata !DIExpression()), !dbg !11063
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11064
  %2 = and i32 %1, 12, !dbg !11065
  switch i32 %2, label %24 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11066

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 12000000, metadata !11062, metadata !DIExpression()), !dbg !11063
  br label %24, !dbg !11067

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11070
  %6 = and i32 %5, 63, !dbg !11072
  call void @llvm.dbg.value(metadata i32 %6, metadata !11059, metadata !DIExpression()), !dbg !11063
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11073
  %8 = and i32 %7, 4194304, !dbg !11073
  %9 = icmp eq i32 %8, 0, !dbg !11075
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11076
  %11 = lshr i32 %10, 6, !dbg !11076
  %12 = and i32 %11, 511, !dbg !11076
  %13 = zext i32 %12 to i64, !dbg !11076
  %14 = select i1 %9, i64 16000000, i64 12000000
  %15 = mul nuw nsw i64 %14, %13, !dbg !11076
  %16 = zext i32 %6 to i64, !dbg !11076
  %17 = udiv i64 %15, %16, !dbg !11076
  %18 = trunc i64 %17 to i32, !dbg !11076
  call void @llvm.dbg.value(metadata i32 %18, metadata !11060, metadata !DIExpression()), !dbg !11063
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11077
  %20 = lshr i32 %19, 15, !dbg !11078
  %21 = and i32 %20, 6, !dbg !11078
  %22 = add nuw nsw i32 %21, 2, !dbg !11078
  call void @llvm.dbg.value(metadata i32 %22, metadata !11061, metadata !DIExpression()), !dbg !11063
  %23 = udiv i32 %18, %22, !dbg !11079
  call void @llvm.dbg.value(metadata i32 %23, metadata !11062, metadata !DIExpression()), !dbg !11063
  br label %24, !dbg !11080

24:                                               ; preds = %0, %4, %3
  %25 = phi i32 [ %23, %4 ], [ 12000000, %3 ], [ 16000000, %0 ], !dbg !11081
  call void @llvm.dbg.value(metadata i32 %25, metadata !11062, metadata !DIExpression()), !dbg !11063
  ret i32 %25, !dbg !11082
}

; Function Attrs: optsize
declare !dbg !11083 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11086 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11090, metadata !DIExpression()), !dbg !11110
  call void @llvm.dbg.value(metadata i32 %1, metadata !11091, metadata !DIExpression()), !dbg !11110
  call void @llvm.dbg.value(metadata i32 %2, metadata !11092, metadata !DIExpression()), !dbg !11110
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11111
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #24, !dbg !11111
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11093, metadata !DIExpression()), !dbg !11112
  %8 = icmp eq i32 %0, 0, !dbg !11113
  br i1 %8, label %9, label %23, !dbg !11114

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !11115
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !11115
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11103, metadata !DIExpression()), !dbg !11115
  store volatile i32 0, i32* %5, align 4, !dbg !11115
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11115
  %12 = or i32 %11, 1, !dbg !11115
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11115
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11115
  %14 = and i32 %13, 1, !dbg !11115
  store volatile i32 %14, i32* %5, align 4, !dbg !11115
  %15 = load volatile i32, i32* %5, align 4, !dbg !11115
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !11116
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11117
  store i32 256, i32* %16, align 4, !dbg !11118
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11119
  store i32 2, i32* %17, align 4, !dbg !11120
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11121
  store i32 3, i32* %18, align 4, !dbg !11122
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11123
  store i32 0, i32* %19, align 4, !dbg !11124
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11125
  store i32 0, i32* %20, align 4, !dbg !11126
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !11127
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11128
  %22 = and i32 %21, -123731969, !dbg !11128
  br label %38, !dbg !11129

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !11130
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !11130
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11107, metadata !DIExpression()), !dbg !11130
  store volatile i32 0, i32* %6, align 4, !dbg !11130
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11130
  %26 = or i32 %25, 4, !dbg !11130
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11130
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11130
  %28 = and i32 %27, 4, !dbg !11130
  store volatile i32 %28, i32* %6, align 4, !dbg !11130
  %29 = load volatile i32, i32* %6, align 4, !dbg !11130
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !11131
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11132
  store i32 512, i32* %30, align 4, !dbg !11133
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11134
  store i32 2, i32* %31, align 4, !dbg !11135
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11136
  store i32 3, i32* %32, align 4, !dbg !11137
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11138
  store i32 0, i32* %33, align 4, !dbg !11139
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11140
  store i32 0, i32* %34, align 4, !dbg !11141
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !11142
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11143
  %36 = and i32 %35, 134217727, !dbg !11143
  %37 = shl i32 %2, 3, !dbg !11143
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !11144
  %42 = or i32 %41, %40, !dbg !11144
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11144
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #24, !dbg !11145
  ret void, !dbg !11145
}

; Function Attrs: optsize
declare !dbg !11146 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !11150 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11151
  ret void, !dbg !11152
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !11153 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11154
  ret void, !dbg !11155
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !11156 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11157
  ret i32 %1, !dbg !11158
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !11159 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11160
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11161
  %3 = lshr i32 %2, 10, !dbg !11162
  %4 = and i32 %3, 7, !dbg !11162
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11163
  %6 = load i8, i8* %5, align 1, !dbg !11163
  %7 = zext i8 %6 to i32, !dbg !11163
  %8 = lshr i32 %1, %7, !dbg !11164
  ret i32 %8, !dbg !11165
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !11166 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11167
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11168
  %3 = lshr i32 %2, 13, !dbg !11169
  %4 = and i32 %3, 7, !dbg !11169
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11170
  %6 = load i8, i8* %5, align 1, !dbg !11170
  %7 = zext i8 %6 to i32, !dbg !11170
  %8 = lshr i32 %1, %7, !dbg !11171
  ret i32 %8, !dbg !11172
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11173 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11177, metadata !DIExpression()), !dbg !11178
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11179
  store i32 15, i32* %2, align 4, !dbg !11180
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11181
  %4 = and i32 %3, 262144, !dbg !11183
  %5 = icmp eq i32 %4, 0, !dbg !11184
  br i1 %5, label %8, label %6, !dbg !11185

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11186
  store i32 327680, i32* %7, align 4, !dbg !11188
  br label %15, !dbg !11189

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11190
  %10 = and i32 %9, 65536, !dbg !11192
  %11 = icmp eq i32 %10, 0, !dbg !11193
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11194
  br i1 %11, label %14, label %13, !dbg !11195

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11196
  br label %15, !dbg !11198

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11199
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11201
  %17 = and i32 %16, 1, !dbg !11203
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11204
  store i32 %17, i32* %18, align 4, !dbg !11206
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11207
  %20 = lshr i32 %19, 3, !dbg !11208
  %21 = and i32 %20, 31, !dbg !11208
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11209
  store i32 %21, i32* %22, align 4, !dbg !11210
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11211
  %24 = and i32 %23, 4, !dbg !11213
  %25 = icmp eq i32 %24, 0, !dbg !11214
  br i1 %25, label %28, label %26, !dbg !11215

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11216
  store i32 5, i32* %27, align 4, !dbg !11218
  br label %35, !dbg !11219

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11220
  %30 = and i32 %29, 1, !dbg !11222
  %31 = icmp eq i32 %30, 0, !dbg !11223
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11224
  br i1 %31, label %34, label %33, !dbg !11225

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11226
  br label %35, !dbg !11228

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11229
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11231
  %37 = and i32 %36, 1, !dbg !11233
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11234
  store i32 %37, i32* %38, align 4, !dbg !11236
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11237
  %40 = and i32 %39, 16777216, !dbg !11239
  %41 = icmp eq i32 %40, 0, !dbg !11240
  %42 = select i1 %41, i32 1, i32 2, !dbg !11241
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11242
  store i32 %42, i32* %43, align 4, !dbg !11244
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11245
  %45 = and i32 %44, 4194304, !dbg !11246
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11247
  store i32 %45, i32* %46, align 4, !dbg !11248
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11249
  %48 = and i32 %47, 63, !dbg !11250
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11251
  store i32 %48, i32* %49, align 4, !dbg !11252
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11253
  %51 = lshr i32 %50, 6, !dbg !11254
  %52 = and i32 %51, 511, !dbg !11254
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11255
  store i32 %52, i32* %53, align 4, !dbg !11256
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11257
  %55 = shl i32 %54, 1, !dbg !11258
  %56 = and i32 %55, 393216, !dbg !11258
  %57 = add nuw nsw i32 %56, 131072, !dbg !11258
  %58 = lshr exact i32 %57, 16, !dbg !11259
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11260
  store i32 %58, i32* %59, align 4, !dbg !11261
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11262
  %61 = lshr i32 %60, 24, !dbg !11263
  %62 = and i32 %61, 15, !dbg !11263
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11264
  store i32 %62, i32* %63, align 4, !dbg !11265
  ret void, !dbg !11266
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !11267 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11271, metadata !DIExpression()), !dbg !11273
  call void @llvm.dbg.value(metadata i32* %1, metadata !11272, metadata !DIExpression()), !dbg !11273
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11274
  store i32 15, i32* %3, align 4, !dbg !11275
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11276
  %5 = and i32 %4, 3, !dbg !11277
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11278
  store i32 %5, i32* %6, align 4, !dbg !11279
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11280
  %8 = and i32 %7, 240, !dbg !11281
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11282
  store i32 %8, i32* %9, align 4, !dbg !11283
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11284
  %11 = and i32 %10, 7168, !dbg !11285
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11286
  store i32 %11, i32* %12, align 4, !dbg !11287
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11288
  %14 = lshr i32 %13, 3, !dbg !11289
  %15 = and i32 %14, 7168, !dbg !11289
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11290
  store i32 %15, i32* %16, align 4, !dbg !11291
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11292
  %18 = and i32 %17, 7, !dbg !11293
  store i32 %18, i32* %1, align 4, !dbg !11294
  ret void, !dbg !11295
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11296 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11297
  %2 = and i32 %1, 128, !dbg !11297
  %3 = icmp eq i32 %2, 0, !dbg !11297
  br i1 %3, label %5, label %4, !dbg !11299

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !11300
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11302
  br label %5, !dbg !11303

5:                                                ; preds = %4, %0
  ret void, !dbg !11304
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11305 {
  ret void, !dbg !11306
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !11307 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11310, metadata !DIExpression()), !dbg !11311
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !11312
  ret void, !dbg !11313
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !11314 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11317, metadata !DIExpression()), !dbg !11319
  call void @llvm.dbg.value(metadata i32 1000, metadata !11318, metadata !DIExpression()), !dbg !11319
  %2 = udiv i32 %0, 1000, !dbg !11320
  %3 = add nsw i32 %2, -1, !dbg !11321
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11322
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11323
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11324
  ret void, !dbg !11325
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !11326 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11328, metadata !DIExpression()), !dbg !11330
  %3 = bitcast i32* %2 to i8*, !dbg !11331
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11331
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11329, metadata !DIExpression()), !dbg !11332
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11333
  store volatile i32 %4, i32* %2, align 4, !dbg !11332
  %5 = load volatile i32, i32* %2, align 4, !dbg !11334
  %6 = icmp eq i32 %0, -1, !dbg !11335
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11328, metadata !DIExpression()), !dbg !11330
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11330
  call void @llvm.dbg.value(metadata i32 %8, metadata !11328, metadata !DIExpression()), !dbg !11330
  br label %9, !dbg !11337

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11328, metadata !DIExpression()), !dbg !11330
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11338
  call void @llvm.dbg.value(metadata i32 undef, metadata !11328, metadata !DIExpression()), !dbg !11330
  %12 = shl i32 %11, 15, !dbg !11330
  %13 = ashr i32 %12, 31, !dbg !11330
  %14 = add i32 %13, %10, !dbg !11330
  call void @llvm.dbg.value(metadata i32 %14, metadata !11328, metadata !DIExpression()), !dbg !11330
  %15 = icmp eq i32 %14, 0, !dbg !11337
  br i1 %15, label %16, label %9, !dbg !11337

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11341
  ret void, !dbg !11341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !11342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11344, metadata !DIExpression()), !dbg !11345
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11346
  ret void, !dbg !11347
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !11348 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11353, metadata !DIExpression()), !dbg !11358
  call void @llvm.dbg.value(metadata i32 0, metadata !11356, metadata !DIExpression()), !dbg !11358
  call void @llvm.dbg.value(metadata i32 0, metadata !11357, metadata !DIExpression()), !dbg !11358
  %2 = icmp eq i32 %0, 0, !dbg !11359
  br i1 %2, label %52, label %3, !dbg !11361

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11362
  %5 = icmp eq i32 %4, 16384, !dbg !11365
  br i1 %5, label %6, label %21, !dbg !11366

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !11367
  %8 = select i1 %7, i32 0, i32 5, !dbg !11370
  call void @llvm.dbg.value(metadata i32 %8, metadata !11356, metadata !DIExpression()), !dbg !11358
  %9 = add i32 %0, -120000001, !dbg !11371
  %10 = icmp ult i32 %9, 30000000, !dbg !11371
  %11 = select i1 %10, i32 4, i32 %8, !dbg !11371
  call void @llvm.dbg.value(metadata i32 %11, metadata !11356, metadata !DIExpression()), !dbg !11358
  %12 = icmp ult i32 %9, -30000000, !dbg !11373
  %13 = select i1 %12, i32 %11, i32 3, !dbg !11373
  call void @llvm.dbg.value(metadata i32 %13, metadata !11356, metadata !DIExpression()), !dbg !11358
  %14 = icmp ugt i32 %0, 60000000, !dbg !11375
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !11377
  br i1 %16, label %21, label %17, !dbg !11377

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !11378
  %19 = and i1 %18, %15, !dbg !11381
  %20 = select i1 %19, i32 1, i32 %13, !dbg !11381
  br label %21, !dbg !11381

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !11358
  call void @llvm.dbg.value(metadata i32 %22, metadata !11356, metadata !DIExpression()), !dbg !11358
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11382
  %24 = icmp eq i32 %23, 0, !dbg !11384
  br i1 %24, label %25, label %41, !dbg !11385

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 12000000, !dbg !11386
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !11389
  %29 = select i1 %28, i32 4, i32 %22, !dbg !11389
  call void @llvm.dbg.value(metadata i32 %29, metadata !11356, metadata !DIExpression()), !dbg !11358
  %30 = icmp ugt i32 %0, 90000000, !dbg !11390
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !11392
  %33 = select i1 %32, i32 3, i32 %29, !dbg !11392
  call void @llvm.dbg.value(metadata i32 %33, metadata !11356, metadata !DIExpression()), !dbg !11358
  %34 = icmp ugt i32 %0, 60000000, !dbg !11393
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !11395
  br i1 %36, label %41, label %37, !dbg !11395

37:                                               ; preds = %25
  %38 = icmp ugt i32 %0, 30000000, !dbg !11396
  %39 = and i1 %38, %35, !dbg !11399
  %40 = select i1 %39, i32 1, i32 %33, !dbg !11399
  br label %41, !dbg !11399

41:                                               ; preds = %37, %25, %21
  %42 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %40, %37 ], !dbg !11400
  call void @llvm.dbg.value(metadata i32 %42, metadata !11356, metadata !DIExpression()), !dbg !11358
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %42) #26, !dbg !11401
  call void @llvm.dbg.value(metadata i32 2, metadata !11354, metadata !DIExpression()), !dbg !11358
  br label %43, !dbg !11402

43:                                               ; preds = %43, %41
  %44 = phi i32 [ 2, %41 ], [ %46, %43 ], !dbg !11400
  call void @llvm.dbg.value(metadata i32 %44, metadata !11354, metadata !DIExpression()), !dbg !11358
  %45 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !11403
  call void @llvm.dbg.value(metadata i32 %45, metadata !11355, metadata !DIExpression()), !dbg !11358
  %46 = add nsw i32 %44, -1, !dbg !11405
  call void @llvm.dbg.value(metadata i32 %46, metadata !11354, metadata !DIExpression()), !dbg !11358
  %47 = icmp ne i32 %45, %42, !dbg !11406
  %48 = icmp ne i32 %46, 0, !dbg !11407
  %49 = select i1 %47, i1 %48, i1 false, !dbg !11407
  br i1 %49, label %43, label %50, !dbg !11408, !llvm.loop !11409

50:                                               ; preds = %43
  %51 = zext i1 %47 to i32
  br label %52

52:                                               ; preds = %50, %1
  %53 = phi i32 [ 1, %1 ], [ %51, %50 ], !dbg !11411
  call void @llvm.dbg.value(metadata i32 %53, metadata !11357, metadata !DIExpression()), !dbg !11358
  ret i32 %53, !dbg !11412
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !11413 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11415
  %2 = and i32 %1, 16384, !dbg !11415
  ret i32 %2, !dbg !11416
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !11417 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11419, metadata !DIExpression()), !dbg !11420
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11421
  %3 = and i32 %2, -8, !dbg !11421
  %4 = or i32 %3, %0, !dbg !11421
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11421
  ret void, !dbg !11422
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !11423 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11424
  %2 = and i32 %1, 7, !dbg !11424
  ret i32 %2, !dbg !11425
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct.sys_memory_stats* nocapture noundef readonly %0, %struct.sys_memory_stats* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !11426 {
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %0, metadata !11444, metadata !DIExpression()), !dbg !11448
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !11445, metadata !DIExpression()), !dbg !11448
  call void @llvm.dbg.value(metadata i32 0, metadata !11446, metadata !DIExpression()), !dbg !11448
  call void @llvm.dbg.value(metadata i32 0, metadata !11447, metadata !DIExpression()), !dbg !11448
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11449
  %4 = icmp eq i32 %3, 0, !dbg !11451
  br i1 %4, label %5, label %21, !dbg !11452

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct.sys_memory_stats* noundef %0) #26, !dbg !11453
  call void @llvm.dbg.value(metadata i32 %6, metadata !11447, metadata !DIExpression()), !dbg !11448
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.96() #26, !dbg !11455
  %8 = icmp eq i32 %7, 1, !dbg !11457
  br i1 %8, label %13, label %9, !dbg !11458

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.97() #26, !dbg !11459
  br label %10, !dbg !11461

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.96() #26, !dbg !11462
  %12 = icmp eq i32 %11, 1, !dbg !11463
  br i1 %12, label %13, label %10, !dbg !11461, !llvm.loop !11464

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %0, i32 0, i32 0, !dbg !11466
  %15 = load i32, i32* %14, align 4, !dbg !11466
  %16 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %0, i32 0, i32 1, !dbg !11467
  %17 = load i32, i32* %16, align 4, !dbg !11467
  %18 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %0, i32 0, i32 2, !dbg !11468
  %19 = load i32, i32* %18, align 4, !dbg !11468
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.98(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !11469
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct.sys_memory_stats* noundef %1) #26, !dbg !11470
  call void @llvm.dbg.value(metadata i32 %20, metadata !11446, metadata !DIExpression()), !dbg !11448
  br label %21, !dbg !11471

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !11472
  call void @llvm.dbg.value(metadata i32 %22, metadata !11446, metadata !DIExpression()), !dbg !11448
  ret i32 %22, !dbg !11473
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !11474 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11478, metadata !DIExpression()), !dbg !11479
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.100() #26, !dbg !11480
  %2 = icmp ne i32 %1, 0, !dbg !11482
  call void @llvm.dbg.value(metadata i1 %2, metadata !11478, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11479
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !11483
  %4 = icmp ne i32 %3, 0, !dbg !11485
  %5 = select i1 %4, i1 true, i1 %2, !dbg !11486
  %6 = zext i1 %5 to i32, !dbg !11486
  call void @llvm.dbg.value(metadata i32 %6, metadata !11478, metadata !DIExpression()), !dbg !11479
  ret i32 %6, !dbg !11487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.sys_memory_stats* nocapture noundef readonly %1) unnamed_addr #5 !dbg !11488 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11492, metadata !DIExpression()), !dbg !11495
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !11493, metadata !DIExpression()), !dbg !11495
  call void @llvm.dbg.value(metadata i32 0, metadata !11494, metadata !DIExpression()), !dbg !11495
  %3 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !11496
  %4 = load i32, i32* %3, align 4, !dbg !11496
  %5 = and i32 %4, 63, !dbg !11497
  %6 = udiv i32 %0, %5, !dbg !11498
  call void @llvm.dbg.value(metadata i32 %6, metadata !11494, metadata !DIExpression()), !dbg !11495
  %7 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !11499
  %8 = load i32, i32* %7, align 4, !dbg !11499
  %9 = and i32 %8, 511, !dbg !11500
  %10 = mul i32 %9, %6, !dbg !11501
  call void @llvm.dbg.value(metadata i32 %10, metadata !11494, metadata !DIExpression()), !dbg !11495
  %11 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !11502
  %12 = load i32, i32* %11, align 4, !dbg !11502
  %13 = lshr i32 %12, 15, !dbg !11503
  %14 = and i32 %13, 131070, !dbg !11503
  %15 = add nuw nsw i32 %14, 2, !dbg !11503
  %16 = udiv i32 %10, %15, !dbg !11504
  call void @llvm.dbg.value(metadata i32 %16, metadata !11494, metadata !DIExpression()), !dbg !11495
  ret i32 %16, !dbg !11505
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.96() unnamed_addr #16 !dbg !11506 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11507
  %2 = lshr i32 %1, 1, !dbg !11508
  %3 = and i32 %2, 1, !dbg !11508
  ret i32 %3, !dbg !11509
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.97() unnamed_addr #15 !dbg !11510 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11511
  %2 = or i32 %1, 1, !dbg !11511
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11511
  ret void, !dbg !11512
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.98(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !11513 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11515, metadata !DIExpression()), !dbg !11519
  call void @llvm.dbg.value(metadata i32 %1, metadata !11516, metadata !DIExpression()), !dbg !11519
  call void @llvm.dbg.value(metadata i32 %2, metadata !11517, metadata !DIExpression()), !dbg !11519
  call void @llvm.dbg.value(metadata i32 %3, metadata !11518, metadata !DIExpression()), !dbg !11519
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11520
  %6 = and i32 %5, -4227072, !dbg !11520
  %7 = or i32 %1, %0, !dbg !11520
  %8 = shl i32 %2, 6, !dbg !11520
  %9 = or i32 %7, %8, !dbg !11520
  %10 = or i32 %9, %6, !dbg !11520
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11520
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11521
  %12 = and i32 %11, -196609, !dbg !11521
  %13 = or i32 %12, %3, !dbg !11521
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11521
  ret void, !dbg !11522
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct.sys_memory_stats* nocapture noundef readonly %1) unnamed_addr #15 !dbg !11523 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11527, metadata !DIExpression()), !dbg !11531
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !11528, metadata !DIExpression()), !dbg !11531
  call void @llvm.dbg.value(metadata i32 0, metadata !11529, metadata !DIExpression()), !dbg !11531
  call void @llvm.dbg.value(metadata i32 0, metadata !11530, metadata !DIExpression()), !dbg !11531
  %3 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !11532
  %4 = load i32, i32* %3, align 4, !dbg !11532
  %5 = lshr i32 %4, 4, !dbg !11532
  %6 = and i32 %5, 15, !dbg !11532
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !11532
  %8 = load i8, i8* %7, align 1, !dbg !11532
  %9 = zext i8 %8 to i32, !dbg !11532
  %10 = lshr i32 %0, %9, !dbg !11532
  call void @llvm.dbg.value(metadata i32 %10, metadata !11530, metadata !DIExpression()), !dbg !11531
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !11533
  %12 = icmp ult i32 %11, %10, !dbg !11535
  br i1 %12, label %13, label %16, !dbg !11536

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11537
  call void @llvm.dbg.value(metadata i32 %14, metadata !11529, metadata !DIExpression()), !dbg !11531
  %15 = icmp eq i32 %14, 0, !dbg !11539
  br i1 %15, label %16, label %30, !dbg !11541

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.99() #26, !dbg !11542
  br label %17, !dbg !11544

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.100() #26, !dbg !11545
  %19 = icmp eq i32 %18, 1, !dbg !11546
  br i1 %19, label %20, label %17, !dbg !11544, !llvm.loop !11547

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !11549
  tail call fastcc void @LL_RCC_SetAHBPrescaler.101(i32 noundef %21) #26, !dbg !11550
  tail call fastcc void @LL_RCC_SetSysClkSource.102() #26, !dbg !11551
  br label %22, !dbg !11552

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.103() #26, !dbg !11553
  %24 = icmp eq i32 %23, 8, !dbg !11554
  br i1 %24, label %25, label %22, !dbg !11552, !llvm.loop !11555

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !11557
  %27 = load i32, i32* %26, align 4, !dbg !11557
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.104(i32 noundef %27) #26, !dbg !11558
  %28 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !11559
  %29 = load i32, i32* %28, align 4, !dbg !11559
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.105(i32 noundef %29) #26, !dbg !11560
  br label %30, !dbg !11561

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !11562
  %33 = icmp ugt i32 %32, %10, !dbg !11564
  br i1 %33, label %34, label %36, !dbg !11565

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11566
  call void @llvm.dbg.value(metadata i32 %35, metadata !11529, metadata !DIExpression()), !dbg !11531
  br label %36, !dbg !11568

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !11531
  call void @llvm.dbg.value(metadata i32 %37, metadata !11529, metadata !DIExpression()), !dbg !11531
  %38 = icmp eq i32 %37, 0, !dbg !11569
  br i1 %38, label %39, label %40, !dbg !11571

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !11572
  br label %40, !dbg !11574

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !11575
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.99() unnamed_addr #15 !dbg !11576 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11577
  %2 = or i32 %1, 16777216, !dbg !11577
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11577
  ret void, !dbg !11578
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.100() unnamed_addr #16 !dbg !11579 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11580
  %2 = lshr i32 %1, 25, !dbg !11581
  %3 = and i32 %2, 1, !dbg !11581
  ret i32 %3, !dbg !11582
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.101(i32 noundef %0) unnamed_addr #15 !dbg !11583 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11585, metadata !DIExpression()), !dbg !11586
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11587
  %3 = and i32 %2, -241, !dbg !11587
  %4 = or i32 %3, %0, !dbg !11587
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11587
  ret void, !dbg !11588
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.102() unnamed_addr #15 !dbg !11589 {
  call void @llvm.dbg.value(metadata i32 2, metadata !11591, metadata !DIExpression()), !dbg !11592
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11593
  %2 = and i32 %1, -4, !dbg !11593
  %3 = or i32 %2, 2, !dbg !11593
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11593
  ret void, !dbg !11594
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.103() unnamed_addr #16 !dbg !11595 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11596
  %2 = and i32 %1, 12, !dbg !11596
  ret i32 %2, !dbg !11597
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.104(i32 noundef %0) unnamed_addr #15 !dbg !11598 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11600, metadata !DIExpression()), !dbg !11601
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11602
  %3 = and i32 %2, -7169, !dbg !11602
  %4 = or i32 %3, %0, !dbg !11602
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11602
  ret void, !dbg !11603
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.105(i32 noundef %0) unnamed_addr #15 !dbg !11604 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11606, metadata !DIExpression()), !dbg !11607
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11608
  %3 = and i32 %2, -57345, !dbg !11608
  %4 = or i32 %3, %0, !dbg !11608
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11608
  ret void, !dbg !11609
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !11610 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11611
  %2 = lshr i32 %1, 27, !dbg !11612
  %3 = and i32 %2, 1, !dbg !11612
  ret i32 %3, !dbg !11613
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct.sys_memory_stats* nocapture noundef readonly %2, %struct.sys_memory_stats* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !11614 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11618, metadata !DIExpression()), !dbg !11624
  call void @llvm.dbg.value(metadata i32 %1, metadata !11619, metadata !DIExpression()), !dbg !11624
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %2, metadata !11620, metadata !DIExpression()), !dbg !11624
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %3, metadata !11621, metadata !DIExpression()), !dbg !11624
  call void @llvm.dbg.value(metadata i32 0, metadata !11622, metadata !DIExpression()), !dbg !11624
  call void @llvm.dbg.value(metadata i32 0, metadata !11623, metadata !DIExpression()), !dbg !11624
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11625
  %6 = icmp eq i32 %5, 0, !dbg !11627
  br i1 %6, label %7, label %27, !dbg !11628

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.sys_memory_stats* noundef %2) #26, !dbg !11629
  call void @llvm.dbg.value(metadata i32 %8, metadata !11623, metadata !DIExpression()), !dbg !11624
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.106() #26, !dbg !11631
  %10 = icmp eq i32 %9, 1, !dbg !11633
  br i1 %10, label %19, label %11, !dbg !11634

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !11635
  br i1 %12, label %13, label %14, !dbg !11638

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !11639
  br label %15, !dbg !11641

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.107() #26, !dbg !11642
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.108() #26, !dbg !11644
  br label %16, !dbg !11645

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.106() #26, !dbg !11646
  %18 = icmp eq i32 %17, 1, !dbg !11647
  br i1 %18, label %19, label %16, !dbg !11645, !llvm.loop !11648

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %2, i32 0, i32 0, !dbg !11650
  %21 = load i32, i32* %20, align 4, !dbg !11650
  %22 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %2, i32 0, i32 1, !dbg !11651
  %23 = load i32, i32* %22, align 4, !dbg !11651
  %24 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %2, i32 0, i32 2, !dbg !11652
  %25 = load i32, i32* %24, align 4, !dbg !11652
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.98(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !11653
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct.sys_memory_stats* noundef %3) #26, !dbg !11654
  call void @llvm.dbg.value(metadata i32 %26, metadata !11622, metadata !DIExpression()), !dbg !11624
  br label %27, !dbg !11655

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !11656
  call void @llvm.dbg.value(metadata i32 %28, metadata !11622, metadata !DIExpression()), !dbg !11624
  ret i32 %28, !dbg !11657
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.106() unnamed_addr #16 !dbg !11658 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11659
  %2 = lshr i32 %1, 17, !dbg !11660
  %3 = and i32 %2, 1, !dbg !11660
  ret i32 %3, !dbg !11661
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !11662 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11663
  %2 = or i32 %1, 262144, !dbg !11663
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11663
  ret void, !dbg !11664
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.107() unnamed_addr #15 !dbg !11665 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11666
  %2 = and i32 %1, -262145, !dbg !11666
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11666
  ret void, !dbg !11667
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.108() unnamed_addr #15 !dbg !11668 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11669
  %2 = or i32 %1, 65536, !dbg !11669
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11669
  ret void, !dbg !11670
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !11671 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11674, metadata !DIExpression()), !dbg !11690
  call void @llvm.dbg.value(metadata i32 undef, metadata !11674, metadata !DIExpression()), !dbg !11690
  call void @llvm.dbg.value(metadata i32 undef, metadata !11674, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !11690
  ret void, !dbg !11691
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !11692 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11696, metadata !DIExpression()), !dbg !11698
  %2 = icmp eq i8* %0, null, !dbg !11699
  br i1 %2, label %29, label %3, !dbg !11701

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !11702
  %5 = icmp eq i8 %4, 0, !dbg !11703
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !11704
  br i1 %6, label %29, label %8, !dbg !11704

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11697, metadata !DIExpression()), !dbg !11698
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !11705

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !11697, metadata !DIExpression()), !dbg !11698
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !11707
  br i1 %10, label %11, label %15, !dbg !11712

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !11713
  %13 = load i8*, i8** %12, align 4, !dbg !11713
  %14 = icmp eq i8* %13, %0, !dbg !11714
  br i1 %14, label %29, label %15, !dbg !11715

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !11716
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !11697, metadata !DIExpression()), !dbg !11698
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11717
  br i1 %17, label %7, label %8, !dbg !11718, !llvm.loop !11719

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !11697, metadata !DIExpression()), !dbg !11698
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !11721
  br i1 %20, label %21, label %26, !dbg !11725

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !11726
  %23 = load i8*, i8** %22, align 4, !dbg !11726
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !11727
  %25 = icmp eq i32 %24, 0, !dbg !11728
  br i1 %25, label %29, label %26, !dbg !11729

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !11730
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !11697, metadata !DIExpression()), !dbg !11698
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11731
  br i1 %28, label %29, label %18, !dbg !11705, !llvm.loop !11732

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !11698
  ret %struct.device* %30, !dbg !11734
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !11735 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11739, metadata !DIExpression()), !dbg !11740
  %2 = icmp eq %struct.device* %0, null, !dbg !11741
  br i1 %2, label %14, label %3, !dbg !11743

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11744
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !11744
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !11745
  %7 = load i8, i8* %6, align 1, !dbg !11745
  %8 = and i8 %7, 1, !dbg !11745
  %9 = icmp eq i8 %8, 0, !dbg !11745
  br i1 %9, label %14, label %10, !dbg !11746

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !11747
  %12 = load i8, i8* %11, align 1, !dbg !11747
  %13 = icmp eq i8 %12, 0, !dbg !11748
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !11740
  ret i1 %15, !dbg !11749
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !11750 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !11755, metadata !DIExpression()), !dbg !11756
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !11757
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !11758
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11759 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11767, metadata !DIExpression()), !dbg !11772
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11768, metadata !DIExpression()), !dbg !11772
  call void @llvm.dbg.value(metadata i8* %2, metadata !11769, metadata !DIExpression()), !dbg !11772
  %5 = bitcast i32* %4 to i8*, !dbg !11773
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11773
  call void @llvm.dbg.value(metadata i32 0, metadata !11770, metadata !DIExpression()), !dbg !11772
  store i32 0, i32* %4, align 4, !dbg !11774
  call void @llvm.dbg.value(metadata i32* %4, metadata !11770, metadata !DIExpression(DW_OP_deref)), !dbg !11772
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !11775
  call void @llvm.dbg.value(metadata i16* %6, metadata !11771, metadata !DIExpression()), !dbg !11772
  %7 = load i32, i32* %4, align 4, !dbg !11776
  call void @llvm.dbg.value(metadata i32 %7, metadata !11770, metadata !DIExpression()), !dbg !11772
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !11777
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11778
  ret i32 %8, !dbg !11779
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !11780 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11784, metadata !DIExpression()), !dbg !11790
  call void @llvm.dbg.value(metadata i32* %1, metadata !11785, metadata !DIExpression()), !dbg !11790
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11791
  %4 = load i16*, i16** %3, align 4, !dbg !11791
  call void @llvm.dbg.value(metadata i16* %4, metadata !11786, metadata !DIExpression()), !dbg !11790
  %5 = icmp eq i16* %4, null, !dbg !11792
  br i1 %5, label %14, label %6, !dbg !11793

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !11794
  call void @llvm.dbg.value(metadata i32 %7, metadata !11787, metadata !DIExpression()), !dbg !11794
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !11795
  %9 = load i16, i16* %8, align 2, !dbg !11795
  %10 = add i16 %9, -32767, !dbg !11796
  %11 = icmp ult i16 %10, 2, !dbg !11796
  %12 = add i32 %7, 1, !dbg !11797
  call void @llvm.dbg.value(metadata i32 %12, metadata !11787, metadata !DIExpression()), !dbg !11794
  br i1 %11, label %13, label %6, !dbg !11796, !llvm.loop !11799

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !11802
  br label %14, !dbg !11803

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !11804
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !11805 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !11809, metadata !DIExpression()), !dbg !11820
  call void @llvm.dbg.value(metadata i32 %1, metadata !11810, metadata !DIExpression()), !dbg !11820
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !11811, metadata !DIExpression()), !dbg !11820
  call void @llvm.dbg.value(metadata i8* %3, metadata !11812, metadata !DIExpression()), !dbg !11820
  call void @llvm.dbg.value(metadata i32 0, metadata !11813, metadata !DIExpression()), !dbg !11821
  %5 = icmp eq i32 %1, 0, !dbg !11822
  br i1 %5, label %16, label %8, !dbg !11823

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !11813, metadata !DIExpression()), !dbg !11821
  %7 = icmp eq i32 %15, %1, !dbg !11822
  br i1 %7, label %16, label %8, !dbg !11823, !llvm.loop !11824

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11813, metadata !DIExpression()), !dbg !11821
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !11826
  %11 = load i16, i16* %10, align 2, !dbg !11826
  call void @llvm.dbg.value(metadata i16 %11, metadata !11815, metadata !DIExpression()), !dbg !11827
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !11828
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !11818, metadata !DIExpression()), !dbg !11827
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !11829
  call void @llvm.dbg.value(metadata i32 %13, metadata !11819, metadata !DIExpression()), !dbg !11827
  %14 = icmp slt i32 %13, 0, !dbg !11830
  %15 = add nuw i32 %9, 1, !dbg !11832
  call void @llvm.dbg.value(metadata i32 %15, metadata !11813, metadata !DIExpression()), !dbg !11821
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !11833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !11834 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !11838, metadata !DIExpression()), !dbg !11841
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !11839, metadata !DIExpression()), !dbg !11841
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !11840, metadata !DIExpression()), !dbg !11841
  %2 = sext i16 %0 to i32, !dbg !11842
  %3 = icmp slt i16 %0, 1, !dbg !11844
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !11845
  %6 = add nsw i32 %2, -1, !dbg !11845
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !11845
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !11845
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11839, metadata !DIExpression()), !dbg !11841
  ret %struct.device* %8, !dbg !11846
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11847 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11849, metadata !DIExpression()), !dbg !11854
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11850, metadata !DIExpression()), !dbg !11854
  call void @llvm.dbg.value(metadata i8* %2, metadata !11851, metadata !DIExpression()), !dbg !11854
  %5 = bitcast i32* %4 to i8*, !dbg !11855
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11855
  call void @llvm.dbg.value(metadata i32 0, metadata !11852, metadata !DIExpression()), !dbg !11854
  store i32 0, i32* %4, align 4, !dbg !11856
  call void @llvm.dbg.value(metadata i32* %4, metadata !11852, metadata !DIExpression(DW_OP_deref)), !dbg !11854
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !11857
  call void @llvm.dbg.value(metadata i16* %6, metadata !11853, metadata !DIExpression()), !dbg !11854
  %7 = load i32, i32* %4, align 4, !dbg !11858
  call void @llvm.dbg.value(metadata i32 %7, metadata !11852, metadata !DIExpression()), !dbg !11854
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !11859
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11860
  ret i32 %8, !dbg !11861
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !11862 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11864, metadata !DIExpression()), !dbg !11869
  call void @llvm.dbg.value(metadata i32* %1, metadata !11865, metadata !DIExpression()), !dbg !11869
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11870
  %4 = load i16*, i16** %3, align 4, !dbg !11870
  call void @llvm.dbg.value(metadata i16* %4, metadata !11866, metadata !DIExpression()), !dbg !11869
  call void @llvm.dbg.value(metadata i32 0, metadata !11867, metadata !DIExpression()), !dbg !11869
  call void @llvm.dbg.value(metadata i32 0, metadata !11868, metadata !DIExpression()), !dbg !11869
  %5 = icmp eq i16* %4, null, !dbg !11871
  br i1 %5, label %22, label %6, !dbg !11873

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !11867, metadata !DIExpression()), !dbg !11869
  call void @llvm.dbg.value(metadata i16* %8, metadata !11866, metadata !DIExpression()), !dbg !11869
  %9 = load i16, i16* %8, align 2, !dbg !11874
  %10 = icmp eq i16 %9, -32768, !dbg !11878
  call void @llvm.dbg.value(metadata i32 undef, metadata !11867, metadata !DIExpression()), !dbg !11869
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !11879
  call void @llvm.dbg.value(metadata i16* %11, metadata !11866, metadata !DIExpression()), !dbg !11869
  %12 = zext i1 %10 to i32, !dbg !11880
  %13 = add i32 %7, %12, !dbg !11880
  call void @llvm.dbg.value(metadata i32 %13, metadata !11867, metadata !DIExpression()), !dbg !11869
  %14 = icmp eq i32 %13, 2, !dbg !11881
  br i1 %14, label %15, label %6, !dbg !11882

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !11869
  call void @llvm.dbg.value(metadata i32 %16, metadata !11868, metadata !DIExpression()), !dbg !11869
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !11883
  %18 = load i16, i16* %17, align 2, !dbg !11883
  %19 = icmp eq i16 %18, 32767, !dbg !11884
  %20 = add i32 %16, 1, !dbg !11885
  call void @llvm.dbg.value(metadata i32 %20, metadata !11868, metadata !DIExpression()), !dbg !11869
  br i1 %19, label %21, label %15, !dbg !11887, !llvm.loop !11888

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !11890
  br label %22, !dbg !11891

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !11892
  call void @llvm.dbg.value(metadata i16* %23, metadata !11866, metadata !DIExpression()), !dbg !11869
  ret i16* %23, !dbg !11893
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !11894 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11897
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !11898
  ret i32* %2, !dbg !11899
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !11900 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12048, metadata !DIExpression()), !dbg !12051
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12049, metadata !DIExpression()), !dbg !12051
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12050, metadata !DIExpression()), !dbg !12051
  ret void, !dbg !12052
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12053 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12057, metadata !DIExpression()), !dbg !12059
  call void @llvm.dbg.value(metadata i32 %1, metadata !12058, metadata !DIExpression()), !dbg !12059
  ret void, !dbg !12060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12061 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12065, metadata !DIExpression()), !dbg !12067
  call void @llvm.dbg.value(metadata i32 %1, metadata !12066, metadata !DIExpression()), !dbg !12067
  ret void, !dbg !12068
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12069 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12073, metadata !DIExpression()), !dbg !12075
  call void @llvm.dbg.value(metadata i8* %1, metadata !12074, metadata !DIExpression()), !dbg !12075
  ret i32 -134, !dbg !12076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12077 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12081, metadata !DIExpression()), !dbg !12083
  call void @llvm.dbg.value(metadata i8* %1, metadata !12082, metadata !DIExpression()), !dbg !12083
  ret i32 -134, !dbg !12084
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12085 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12088, metadata !DIExpression()), !dbg !12089
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12090, !srcloc !12096
  call void @llvm.dbg.value(metadata i32 undef, metadata !12093, metadata !DIExpression()) #24, !dbg !12097
  call void @llvm.dbg.value(metadata i32 undef, metadata !12094, metadata !DIExpression()) #24, !dbg !12097
  br label %3, !dbg !12098

3:                                                ; preds = %3, %1
  br label %3, !dbg !12099, !llvm.loop !12102
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12105 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12109, metadata !DIExpression()), !dbg !12111
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12110, metadata !DIExpression()), !dbg !12111
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !12112
  unreachable, !dbg !12112
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12115, metadata !DIExpression()), !dbg !12116
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !12117
  unreachable, !dbg !12117
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12118 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12120, metadata !DIExpression()), !dbg !12124
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12121, metadata !DIExpression()), !dbg !12124
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12125, !srcloc !12096
  call void @llvm.dbg.value(metadata i32 undef, metadata !12093, metadata !DIExpression()) #24, !dbg !12127
  call void @llvm.dbg.value(metadata i32 undef, metadata !12094, metadata !DIExpression()) #24, !dbg !12127
  call void @llvm.dbg.value(metadata i32 undef, metadata !12122, metadata !DIExpression()), !dbg !12124
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12123, metadata !DIExpression()), !dbg !12124
  %4 = icmp eq %struct.__esf* %1, null, !dbg !12128
  br i1 %4, label %6, label %5, !dbg !12130

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !12131
  br label %7, !dbg !12132

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !12131
  br label %7, !dbg !12135

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !12125
  call void @llvm.dbg.value(metadata i32 %8, metadata !12093, metadata !DIExpression()) #24, !dbg !12127
  call void @llvm.dbg.value(metadata i32 %8, metadata !12122, metadata !DIExpression()), !dbg !12124
  %9 = tail call fastcc %struct.k_thread* @k_current_get.115() #27, !dbg !12137
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12123, metadata !DIExpression()), !dbg !12124
  call void @llvm.dbg.value(metadata i32 undef, metadata !12138, metadata !DIExpression()) #24, !dbg !12141
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !12143, !srcloc !12144
  tail call fastcc void @k_thread_abort.116(%struct.k_thread* noundef %9) #26, !dbg !12145
  ret void, !dbg !12148
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.115() unnamed_addr #9 !dbg !12149 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.117() #27, !dbg !12153
  ret %struct.k_thread* %1, !dbg !12154
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.116(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12155 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12159, metadata !DIExpression()), !dbg !12160
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12161, !srcloc !12163
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !12164
  ret void, !dbg !12165
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.117() unnamed_addr #9 !dbg !12166 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12167, !srcloc !12169
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !12170
  ret %struct.k_thread* %1, !dbg !12171
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12172 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12176, metadata !DIExpression()), !dbg !12179
  call void @llvm.dbg.value(metadata i32 %1, metadata !12177, metadata !DIExpression()), !dbg !12179
  call void @llvm.dbg.value(metadata i32 %2, metadata !12178, metadata !DIExpression()), !dbg !12179
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !12180
  ret void, !dbg !12181
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12182 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12186, metadata !DIExpression()), !dbg !12189
  call void @llvm.dbg.value(metadata i8* %1, metadata !12187, metadata !DIExpression()), !dbg !12189
  call void @llvm.dbg.value(metadata i32 %2, metadata !12188, metadata !DIExpression()), !dbg !12189
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !12190
  ret void, !dbg !12191
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12192 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !12193
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_bss_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_bss_start to i32))) #26, !dbg !12194
  ret void, !dbg !12195
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12196 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12198, metadata !DIExpression()), !dbg !12199
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !12200
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12201
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12202
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12203
  %4 = trunc i32 %0 to i8, !dbg !12204
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12205
  store i8 %4, i8* %5, align 4, !dbg !12206
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12207
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !12208
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12209
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12210
  store i8* %8, i8** %9, align 4, !dbg !12211
  ret void, !dbg !12212
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12213 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12215, metadata !DIExpression()), !dbg !12221
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12222
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12216, metadata !DIExpression()), !dbg !12221
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12223
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12217, metadata !DIExpression()), !dbg !12221
  call void @llvm.dbg.value(metadata i8* null, metadata !12220, metadata !DIExpression()), !dbg !12221
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12224
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12225
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !12226
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !12227
  ret void, !dbg !12228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12229 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12233, metadata !DIExpression()), !dbg !12234
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12235
  ret i8* %2, !dbg !12236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12237 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12242, metadata !DIExpression()), !dbg !12243
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12244
  %3 = load i8, i8* %2, align 1, !dbg !12245
  %4 = and i8 %3, -5, !dbg !12245
  store i8 %4, i8* %2, align 1, !dbg !12245
  ret void, !dbg !12246
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #8 !dbg !12247 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !12250
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !12251
  %3 = ptrtoint i8* %2 to i32, !dbg !12260
  %4 = add i32 %3, 2048, !dbg !12261
  call void @llvm.dbg.value(metadata i32 %4, metadata !12255, metadata !DIExpression()) #24, !dbg !12262
  call void @llvm.dbg.value(metadata i32 %4, metadata !12263, metadata !DIExpression()) #24, !dbg !12266
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #24, !dbg !12268, !srcloc !12269
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12270
  %6 = or i32 %5, 512, !dbg !12270
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12270
  tail call fastcc void @__NVIC_SetPriority.124(i32 noundef -2, i32 noundef 255) #25, !dbg !12271
  tail call fastcc void @__NVIC_SetPriority.124(i32 noundef -5, i32 noundef 0) #25, !dbg !12274
  tail call fastcc void @__NVIC_SetPriority.124(i32 noundef -12, i32 noundef 0) #25, !dbg !12275
  tail call fastcc void @__NVIC_SetPriority.124(i32 noundef -11, i32 noundef 0) #25, !dbg !12276
  tail call fastcc void @__NVIC_SetPriority.124(i32 noundef -10, i32 noundef 0) #25, !dbg !12277
  tail call fastcc void @__NVIC_SetPriority.124(i32 noundef -4, i32 noundef 0) #25, !dbg !12278
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12279
  %8 = or i32 %7, 458752, !dbg !12279
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12279
  tail call void @z_arm_fault_init() #25, !dbg !12280
  tail call void @z_arm_cpu_idle_init() #25, !dbg !12281
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12282
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12285
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !12286
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !12287
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12288
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #24, !dbg !12288
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12249, metadata !DIExpression()), !dbg !12289
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !12290
  call void @z_device_state_init() #25, !dbg !12291
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !12292
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !12293
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !12294
  call fastcc void @switch_to_main_thread(i8* noundef %11) #30, !dbg !12295
  unreachable, !dbg !12295
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1920 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1924, metadata !DIExpression()), !dbg !12296
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12297
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12297
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1925, metadata !DIExpression()), !dbg !12296
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1925, metadata !DIExpression()), !dbg !12296
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12298
  br i1 %7, label %8, label %35, !dbg !12299

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1925, metadata !DIExpression()), !dbg !12296
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12300
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12300
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !1935, metadata !DIExpression()), !dbg !12301
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12302
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12302
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !12303
  call void @llvm.dbg.value(metadata i32 %14, metadata !1939, metadata !DIExpression()), !dbg !12301
  %15 = icmp eq %struct.device* %11, null, !dbg !12304
  br i1 %15, label %32, label %16, !dbg !12306

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12307
  br i1 %17, label %26, label %18, !dbg !12310

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12311
  call void @llvm.dbg.value(metadata i32 %19, metadata !1939, metadata !DIExpression()), !dbg !12301
  %20 = icmp ult i32 %19, 255, !dbg !12313
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12313
  call void @llvm.dbg.value(metadata i32 %21, metadata !1939, metadata !DIExpression()), !dbg !12301
  %22 = trunc i32 %21 to i8, !dbg !12314
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12315
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12315
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12316
  store i8 %22, i8* %25, align 1, !dbg !12317
  br label %26, !dbg !12318

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12319
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12319
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12320
  %30 = load i8, i8* %29, align 1, !dbg !12321
  %31 = or i8 %30, 1, !dbg !12321
  store i8 %31, i8* %29, align 1, !dbg !12321
  br label %32, !dbg !12322

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12323
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1925, metadata !DIExpression()), !dbg !12296
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12298
  br i1 %34, label %8, label %35, !dbg !12299, !llvm.loop !12324

35:                                               ; preds = %32, %1
  ret void, !dbg !12326
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.124(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12327 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12329, metadata !DIExpression()), !dbg !12331
  call void @llvm.dbg.value(metadata i32 %1, metadata !12330, metadata !DIExpression()), !dbg !12331
  %3 = trunc i32 %1 to i8, !dbg !12332
  %4 = shl i8 %3, 4, !dbg !12332
  %5 = and i32 %0, 15, !dbg !12335
  %6 = add nsw i32 %5, -4, !dbg !12336
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12337
  store volatile i8 %4, i8* %7, align 1, !dbg !12338
  ret void, !dbg !12339
}

; Function Attrs: optsize
declare !dbg !12340 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !12341 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12344, metadata !DIExpression()), !dbg !12345
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12346
  store i8 1, i8* %2, align 1, !dbg !12347
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12348
  store i8 1, i8* %3, align 4, !dbg !12349
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12350
  store i32 0, i32* %4, align 4, !dbg !12351
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12352
  store i32 0, i32* %5, align 4, !dbg !12353
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12354
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12355
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12356
  ret void, !dbg !12357
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12358 {
  tail call void @z_sched_init() #25, !dbg !12363
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12364
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.125, i32 0, i32 0)) #25, !dbg !12365
  call void @llvm.dbg.value(metadata i8* %1, metadata !12362, metadata !DIExpression()), !dbg !12366
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !12367
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !12368
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !12369
  ret i8* %1, !dbg !12370
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #8 !dbg !12371 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12375, metadata !DIExpression()), !dbg !12376
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !12377
  unreachable, !dbg !12378
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12379 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12381, metadata !DIExpression()), !dbg !12384
  call void @llvm.dbg.value(metadata i8* %1, metadata !12382, metadata !DIExpression()), !dbg !12384
  call void @llvm.dbg.value(metadata i8* %2, metadata !12383, metadata !DIExpression()), !dbg !12384
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12385
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !12386
  tail call void @boot_banner() #25, !dbg !12387
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !12388
  tail call void @z_init_static_threads() #25, !dbg !12389
  tail call void @main() #25, !dbg !12390
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12391
  %5 = and i8 %4, -2, !dbg !12391
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12391
  ret void, !dbg !12392
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !12393 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12403, metadata !DIExpression()), !dbg !12405
  call void @llvm.dbg.value(metadata i8* %1, metadata !12404, metadata !DIExpression()), !dbg !12405
  ret void, !dbg !12406
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !12407 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12409, metadata !DIExpression()), !dbg !12411
  call void @llvm.dbg.value(metadata i8* %1, metadata !12410, metadata !DIExpression()), !dbg !12411
  ret void, !dbg !12412
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12413 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !12414, !srcloc !12421
  call void @llvm.dbg.value(metadata i32 %1, metadata !12417, metadata !DIExpression()) #24, !dbg !12422
  %2 = icmp ne i32 %1, 0, !dbg !12423
  ret i1 %2, !dbg !12424
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #7 !dbg !12425 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12426
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12427
  %3 = load i8, i8* %2, align 4, !dbg !12428
  %4 = or i8 %3, 1, !dbg !12428
  store i8 %4, i8* %2, align 4, !dbg !12428
  ret void, !dbg !12429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #7 !dbg !12430 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12431
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12432
  %3 = load i8, i8* %2, align 4, !dbg !12433
  %4 = and i8 %3, -2, !dbg !12433
  store i8 %4, i8* %2, align 4, !dbg !12433
  ret void, !dbg !12434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !12435 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12436
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12437
  %3 = load i8, i8* %2, align 4, !dbg !12437
  %4 = and i8 %3, 1, !dbg !12438
  %5 = icmp ne i8 %4, 0, !dbg !12439
  ret i1 %5, !dbg !12440
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12441 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12445, metadata !DIExpression()), !dbg !12447
  call void @llvm.dbg.value(metadata i8* %1, metadata !12446, metadata !DIExpression()), !dbg !12447
  ret i32 -88, !dbg !12448
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !12449 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12453, metadata !DIExpression()), !dbg !12454
  ret i8* null, !dbg !12455
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !12456 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12460, metadata !DIExpression()), !dbg !12463
  call void @llvm.dbg.value(metadata i8* %1, metadata !12461, metadata !DIExpression()), !dbg !12463
  call void @llvm.dbg.value(metadata i32 %2, metadata !12462, metadata !DIExpression()), !dbg !12463
  ret i32 -88, !dbg !12464
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !1946 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2060, metadata !DIExpression()), !dbg !12465
  call void @llvm.dbg.value(metadata i8* %1, metadata !2061, metadata !DIExpression()), !dbg !12465
  call void @llvm.dbg.value(metadata i32 %2, metadata !2062, metadata !DIExpression()), !dbg !12465
  call void @llvm.dbg.value(metadata i32 0, metadata !2063, metadata !DIExpression()), !dbg !12465
  call void @llvm.dbg.value(metadata i8 undef, metadata !2065, metadata !DIExpression()), !dbg !12465
  %4 = icmp eq i8* %1, null, !dbg !12466
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !12468
  br i1 %6, label %46, label %7, !dbg !12468

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12469
  %9 = load i8, i8* %8, align 1, !dbg !12469
  call void @llvm.dbg.value(metadata i8 %9, metadata !2065, metadata !DIExpression()), !dbg !12465
  %10 = add i32 %2, -1, !dbg !12470
  call void @llvm.dbg.value(metadata i32 %10, metadata !2062, metadata !DIExpression()), !dbg !12465
  call void @llvm.dbg.value(metadata i8 0, metadata !2066, metadata !DIExpression()), !dbg !12471
  call void @llvm.dbg.value(metadata i8 %9, metadata !2065, metadata !DIExpression()), !dbg !12465
  call void @llvm.dbg.value(metadata i32 0, metadata !2063, metadata !DIExpression()), !dbg !12465
  %11 = icmp eq i8 %9, 0, !dbg !12472
  br i1 %11, label %12, label %15, !dbg !12474

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !12475
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !12476
  store i8 0, i8* %14, align 1, !dbg !12477
  br label %46, !dbg !12478

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2066, metadata !DIExpression()), !dbg !12471
  call void @llvm.dbg.value(metadata i8 %17, metadata !2065, metadata !DIExpression()), !dbg !12465
  call void @llvm.dbg.value(metadata i32 %18, metadata !2063, metadata !DIExpression()), !dbg !12465
  %19 = zext i8 %17 to i32, !dbg !12479
  %20 = zext i8 %16 to i32, !dbg !12480
  %21 = shl nuw i32 1, %20, !dbg !12480
  call void @llvm.dbg.value(metadata i32 %21, metadata !2064, metadata !DIExpression()), !dbg !12465
  %22 = and i32 %21, %19, !dbg !12482
  %23 = icmp eq i32 %22, 0, !dbg !12484
  br i1 %23, label %42, label %24, !dbg !12485

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !12486
  %26 = sub i32 %10, %18, !dbg !12487
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !12488
  %28 = load i8*, i8** %27, align 4, !dbg !12488
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !12489
  %30 = load i32, i32* %29, align 4, !dbg !12489
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !12490
  %32 = add i32 %31, %18, !dbg !12491
  call void @llvm.dbg.value(metadata i32 %32, metadata !2063, metadata !DIExpression()), !dbg !12465
  %33 = trunc i32 %21 to i8, !dbg !12492
  %34 = xor i8 %33, -1, !dbg !12492
  %35 = and i8 %17, %34, !dbg !12492
  call void @llvm.dbg.value(metadata i8 %35, metadata !2065, metadata !DIExpression()), !dbg !12465
  %36 = icmp eq i8 %35, 0, !dbg !12493
  br i1 %36, label %12, label %37, !dbg !12495

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !12496
  %39 = sub i32 %10, %32, !dbg !12498
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.126, i32 0, i32 0), i32 noundef 1) #26, !dbg !12499
  %41 = add i32 %40, %32, !dbg !12500
  call void @llvm.dbg.value(metadata i32 %41, metadata !2063, metadata !DIExpression()), !dbg !12465
  br label %42, !dbg !12501

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !12465
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !12465
  call void @llvm.dbg.value(metadata i8 %44, metadata !2065, metadata !DIExpression()), !dbg !12465
  call void @llvm.dbg.value(metadata i32 %43, metadata !2063, metadata !DIExpression()), !dbg !12465
  %45 = add i8 %16, 1, !dbg !12502
  call void @llvm.dbg.value(metadata i8 %45, metadata !2066, metadata !DIExpression()), !dbg !12471
  br label %15, !dbg !12474

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.127, i32 0, i32 0), %3 ], !dbg !12465
  ret i8* %47, !dbg !12503
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !12504 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12508, metadata !DIExpression()), !dbg !12513
  call void @llvm.dbg.value(metadata i32 %1, metadata !12509, metadata !DIExpression()), !dbg !12513
  call void @llvm.dbg.value(metadata i8* %2, metadata !12510, metadata !DIExpression()), !dbg !12513
  call void @llvm.dbg.value(metadata i32 %3, metadata !12511, metadata !DIExpression()), !dbg !12513
  %5 = icmp ult i32 %1, %3, !dbg !12514
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !12514
  call void @llvm.dbg.value(metadata i32 %6, metadata !12512, metadata !DIExpression()), !dbg !12513
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !12515
  ret i32 %6, !dbg !12516
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12517 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12521, metadata !DIExpression()), !dbg !12522
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !12523
  ret void, !dbg !12524
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !12525 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12534, metadata !DIExpression()), !dbg !12545
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12535, metadata !DIExpression()), !dbg !12545
  call void @llvm.dbg.value(metadata i32 %2, metadata !12536, metadata !DIExpression()), !dbg !12545
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12537, metadata !DIExpression()), !dbg !12545
  call void @llvm.dbg.value(metadata i8* %4, metadata !12538, metadata !DIExpression()), !dbg !12545
  call void @llvm.dbg.value(metadata i8* %5, metadata !12539, metadata !DIExpression()), !dbg !12545
  call void @llvm.dbg.value(metadata i8* %6, metadata !12540, metadata !DIExpression()), !dbg !12545
  call void @llvm.dbg.value(metadata i32 %7, metadata !12541, metadata !DIExpression()), !dbg !12545
  call void @llvm.dbg.value(metadata i32 %8, metadata !12542, metadata !DIExpression()), !dbg !12545
  call void @llvm.dbg.value(metadata i8* undef, metadata !12543, metadata !DIExpression()), !dbg !12545
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !12546
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #26, !dbg !12547
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !12548
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !12549
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !12550
  call void @llvm.dbg.value(metadata i8* %13, metadata !12544, metadata !DIExpression()), !dbg !12545
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !12551
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !12552
  store i8* null, i8** %14, align 4, !dbg !12553
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12554
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !12554
  br i1 %16, label %20, label %17, !dbg !12556

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !12557
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !12557
  br label %20, !dbg !12558

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !12545
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12559
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !12561
  ret i8* %13, !dbg !12562
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !12563 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12568, metadata !DIExpression()), !dbg !12569
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !12570
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !12571
  ret void, !dbg !12572
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !12573 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12578, metadata !DIExpression()), !dbg !12582
  call void @llvm.dbg.value(metadata i32 %1, metadata !12579, metadata !DIExpression()), !dbg !12582
  call void @llvm.dbg.value(metadata i32 %2, metadata !12580, metadata !DIExpression()), !dbg !12582
  call void @llvm.dbg.value(metadata i32 %3, metadata !12581, metadata !DIExpression()), !dbg !12582
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !12583
  store %union.anon* null, %union.anon** %5, align 8, !dbg !12584
  %6 = trunc i32 %3 to i8, !dbg !12585
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !12586
  store i8 %6, i8* %7, align 4, !dbg !12587
  %8 = trunc i32 %2 to i8, !dbg !12588
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !12589
  store i8 %8, i8* %9, align 1, !dbg !12590
  %10 = trunc i32 %1 to i8, !dbg !12591
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !12592
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !12592
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !12592
  store i8 %10, i8* %13, align 2, !dbg !12593
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !12594
  store i8 0, i8* %14, align 1, !dbg !12595
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !12596
  ret void, !dbg !12597
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !12598 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12602, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12603, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.value(metadata i32 %2, metadata !12604, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.value(metadata i32 0, metadata !12609, metadata !DIExpression()), !dbg !12610
  %4 = add i32 %2, 7, !dbg !12611
  %5 = and i32 %4, -8, !dbg !12611
  %6 = add i32 %5, 64, !dbg !12611
  call void @llvm.dbg.value(metadata i32 %6, metadata !12605, metadata !DIExpression()), !dbg !12610
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.137(%struct.z_thread_stack_element* noundef %1) #26, !dbg !12613
  call void @llvm.dbg.value(metadata i8* %7, metadata !12608, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.value(metadata i32 %5, metadata !12606, metadata !DIExpression()), !dbg !12610
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !12614
  call void @llvm.dbg.value(metadata i8* %8, metadata !12607, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.value(metadata i32 0, metadata !12609, metadata !DIExpression()), !dbg !12610
  %9 = ptrtoint i8* %7 to i32, !dbg !12615
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12616
  store i32 %9, i32* %10, align 4, !dbg !12617
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12618
  store i32 %5, i32* %11, align 4, !dbg !12619
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !12620
  store i32 0, i32* %12, align 4, !dbg !12621
  call void @llvm.dbg.value(metadata i8* %8, metadata !12607, metadata !DIExpression()), !dbg !12610
  ret i8* %8, !dbg !12622
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.137(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12623 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12627, metadata !DIExpression()), !dbg !12628
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12629
  ret i8* %2, !dbg !12630
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12631 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12636, metadata !DIExpression()), !dbg !12637
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !12638
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !12639
  ret void, !dbg !12640
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12641 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12643, metadata !DIExpression()), !dbg !12644
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12645
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !12646
  ret void, !dbg !12647
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12648 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12652, metadata !DIExpression()), !dbg !12653
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12654
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12655
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12656
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12657
  ret void, !dbg !12658
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !12659 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12664, metadata !DIExpression()), !dbg !12665
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12666
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12667
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12668
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12669
  ret void, !dbg !12670
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !12671 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !12688, metadata !DIExpression()), !dbg !12689
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12679, metadata !DIExpression()), !dbg !12689
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12680, metadata !DIExpression()), !dbg !12689
  call void @llvm.dbg.value(metadata i32 %2, metadata !12681, metadata !DIExpression()), !dbg !12689
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12682, metadata !DIExpression()), !dbg !12689
  call void @llvm.dbg.value(metadata i8* %4, metadata !12683, metadata !DIExpression()), !dbg !12689
  call void @llvm.dbg.value(metadata i8* %5, metadata !12684, metadata !DIExpression()), !dbg !12689
  call void @llvm.dbg.value(metadata i8* %6, metadata !12685, metadata !DIExpression()), !dbg !12689
  call void @llvm.dbg.value(metadata i32 %7, metadata !12686, metadata !DIExpression()), !dbg !12689
  call void @llvm.dbg.value(metadata i32 %8, metadata !12687, metadata !DIExpression()), !dbg !12689
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !12690
  %13 = icmp eq i64 %11, -1, !dbg !12691
  br i1 %13, label %15, label %14, !dbg !12693

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !12694
  br label %15, !dbg !12696

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !12697
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12698 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12703, metadata !DIExpression()), !dbg !12704
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12702, metadata !DIExpression()), !dbg !12704
  %4 = icmp eq i64 %3, 0, !dbg !12705
  br i1 %4, label %5, label %6, !dbg !12707

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12708
  br label %7, !dbg !12710

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !12711
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !12713
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12714 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12718, metadata !DIExpression()), !dbg !12719
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12720, !srcloc !12722
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12723
  ret void, !dbg !12724
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12725 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12728, metadata !DIExpression()), !dbg !12729
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12727, metadata !DIExpression()), !dbg !12729
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12730
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !12731
  ret void, !dbg !12732
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !12733 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12735, metadata !DIExpression()), !dbg !12755
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !12756

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !12757
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12753, metadata !DIExpression()), !dbg !12758
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !12759

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !12735, metadata !DIExpression()), !dbg !12755
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !12760
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12760
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !12763
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !12763
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !12764
  %9 = load i32, i32* %8, align 4, !dbg !12764
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !12765
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !12765
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !12766
  %13 = load i8*, i8** %12, align 4, !dbg !12766
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !12767
  %15 = load i8*, i8** %14, align 4, !dbg !12767
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !12768
  %17 = load i8*, i8** %16, align 4, !dbg !12768
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !12769
  %19 = load i32, i32* %18, align 4, !dbg !12769
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !12770
  %21 = load i32, i32* %20, align 4, !dbg !12770
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !12771
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12772
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !12773
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !12774
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !12774
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !12775
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !12735, metadata !DIExpression()), !dbg !12755
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12776
  br i1 %27, label %2, label %1, !dbg !12756, !llvm.loop !12778

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !12757
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12753, metadata !DIExpression()), !dbg !12758
  br label %29, !dbg !12759

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !12780
  ret void, !dbg !12781

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !12753, metadata !DIExpression()), !dbg !12758
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !12782
  %33 = load i32, i32* %32, align 4, !dbg !12782
  %34 = icmp eq i32 %33, -1, !dbg !12786
  br i1 %34, label %43, label %35, !dbg !12787

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !12788
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !12788
  %38 = icmp sgt i32 %33, 0, !dbg !12790
  %39 = select i1 %38, i32 %33, i32 0, !dbg !12790
  %40 = zext i32 %39 to i64, !dbg !12790
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #26, !dbg !12790
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !12791
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !12791
  br label %43, !dbg !12792

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !12793
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !12753, metadata !DIExpression()), !dbg !12758
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12794
  br i1 %45, label %30, label %29, !dbg !12759, !llvm.loop !12796
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !12798 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12803, metadata !DIExpression()), !dbg !12804
  call void @llvm.dbg.value(metadata i64 %0, metadata !12805, metadata !DIExpression()), !dbg !12822
  call void @llvm.dbg.value(metadata i32 1000, metadata !12810, metadata !DIExpression()), !dbg !12822
  call void @llvm.dbg.value(metadata i32 10000, metadata !12811, metadata !DIExpression()), !dbg !12822
  call void @llvm.dbg.value(metadata i8 1, metadata !12812, metadata !DIExpression()), !dbg !12822
  call void @llvm.dbg.value(metadata i8 0, metadata !12813, metadata !DIExpression()), !dbg !12822
  call void @llvm.dbg.value(metadata i8 1, metadata !12814, metadata !DIExpression()), !dbg !12822
  call void @llvm.dbg.value(metadata i8 0, metadata !12815, metadata !DIExpression()), !dbg !12822
  call void @llvm.dbg.value(metadata i8 1, metadata !12816, metadata !DIExpression()), !dbg !12822
  call void @llvm.dbg.value(metadata i8 0, metadata !12817, metadata !DIExpression()), !dbg !12822
  call void @llvm.dbg.value(metadata i64 0, metadata !12818, metadata !DIExpression()), !dbg !12822
  call void @llvm.dbg.value(metadata i64 0, metadata !12818, metadata !DIExpression()), !dbg !12822
  %2 = mul i64 %0, 10, !dbg !12824
  ret i64 %2, !dbg !12830
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #8 !dbg !12831 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !12833, metadata !DIExpression()), !dbg !12837
  call void @llvm.dbg.value(metadata i8* %1, metadata !12834, metadata !DIExpression()), !dbg !12837
  call void @llvm.dbg.value(metadata i8* %2, metadata !12835, metadata !DIExpression()), !dbg !12837
  call void @llvm.dbg.value(metadata i8* %3, metadata !12836, metadata !DIExpression()), !dbg !12837
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12838
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !12839
  %7 = load i8, i8* %6, align 4, !dbg !12840
  %8 = or i8 %7, 4, !dbg !12840
  store i8 %8, i8* %6, align 4, !dbg !12840
  tail call void @z_thread_essential_clear() #26, !dbg !12841
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #28, !dbg !12842
  unreachable, !dbg !12842
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !12843 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12847, metadata !DIExpression()), !dbg !12848
  ret i32 -134, !dbg !12849
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12850 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12854, metadata !DIExpression()), !dbg !12856
  call void @llvm.dbg.value(metadata i32 %1, metadata !12855, metadata !DIExpression()), !dbg !12856
  ret i32 -134, !dbg !12857
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !12858 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12865, metadata !DIExpression()), !dbg !12867
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !12866, metadata !DIExpression()), !dbg !12867
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !12868
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !12870
  %6 = select i1 %5, i32 -22, i32 0, !dbg !12867
  ret i32 %6, !dbg !12871
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !12872 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12876, metadata !DIExpression()), !dbg !12877
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !12878
  %3 = select i1 %2, i32 -22, i32 0, !dbg !12877
  ret i32 %3, !dbg !12880
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !12881 {
  tail call void @sys_clock_idle_exit() #25, !dbg !12883
  ret void, !dbg !12884
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #8 !dbg !12885 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12887, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata i8* %1, metadata !12888, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata i8* %2, metadata !12889, metadata !DIExpression()), !dbg !12890
  br label %4, !dbg !12891

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12892, !srcloc !12899
  call void @llvm.dbg.value(metadata i32 undef, metadata !12895, metadata !DIExpression()) #24, !dbg !12900
  call void @llvm.dbg.value(metadata i32 undef, metadata !12896, metadata !DIExpression()) #24, !dbg !12900
  tail call fastcc void @k_cpu_idle() #26, !dbg !12901
  br label %4, !dbg !12891, !llvm.loop !12902
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !12904 {
  tail call void @arch_cpu_idle() #25, !dbg !12905
  ret void, !dbg !12906
}

; Function Attrs: optsize
declare !dbg !12907 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !12908 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12912, metadata !DIExpression()), !dbg !12916
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12913, metadata !DIExpression()), !dbg !12916
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12917
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !12917
  %5 = load i8, i8* %4, align 2, !dbg !12917
  call void @llvm.dbg.value(metadata i8 %5, metadata !12914, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12916
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !12918
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !12918
  %8 = load i8, i8* %7, align 2, !dbg !12918
  call void @llvm.dbg.value(metadata i8 %8, metadata !12915, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12916
  %9 = icmp eq i8 %8, %5, !dbg !12919
  %10 = sext i8 %5 to i32, !dbg !12921
  %11 = sext i8 %8 to i32, !dbg !12921
  %12 = sub nsw i32 %11, %10, !dbg !12921
  %13 = select i1 %9, i32 0, i32 %12, !dbg !12921
  ret i32 %13, !dbg !12922
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !12923 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12927, metadata !DIExpression()), !dbg !12928
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !12929
  %3 = icmp eq i32 %2, 0, !dbg !12931
  br i1 %3, label %8, label %4, !dbg !12932

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !12933
  %6 = add i32 %5, %2, !dbg !12935
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12936
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !12937
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !12938
  br label %8, !dbg !12939

8:                                                ; preds = %4, %1
  ret void, !dbg !12940
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !12941 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12945, metadata !DIExpression()), !dbg !12947
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !12948
  call void @llvm.dbg.value(metadata i32 %1, metadata !12946, metadata !DIExpression()), !dbg !12947
  ret i32 %1, !dbg !12949
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12950 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12954, metadata !DIExpression()), !dbg !12963
  call void @llvm.dbg.value(metadata i32 %1, metadata !12955, metadata !DIExpression()), !dbg !12963
  call void @llvm.dbg.value(metadata i32 0, metadata !12956, metadata !DIExpression()), !dbg !12964
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12965, metadata !DIExpression()) #24, !dbg !12972
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12974, !srcloc !12980
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12974
  call void @llvm.dbg.value(metadata i32 %4, metadata !12977, metadata !DIExpression()) #24, !dbg !12981
  call void @llvm.dbg.value(metadata i32 undef, metadata !12978, metadata !DIExpression()) #24, !dbg !12981
  call void @llvm.dbg.value(metadata i32 %4, metadata !12971, metadata !DIExpression()) #24, !dbg !12972
  call void @llvm.dbg.value(metadata i32 %4, metadata !12962, metadata !DIExpression()), !dbg !12964
  call void @llvm.dbg.value(metadata i32 undef, metadata !12956, metadata !DIExpression()), !dbg !12964
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12982
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !12985
  %6 = icmp sgt i32 %0, 0, !dbg !12986
  %7 = icmp sgt i32 %5, 2, !dbg !12988
  %8 = select i1 %7, i32 %5, i32 2, !dbg !12988
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !12988
  store i32 %9, i32* @slice_ticks, align 4, !dbg !12989
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !12990
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !12991
  call void @llvm.dbg.value(metadata i32 %4, metadata !12992, metadata !DIExpression()) #24, !dbg !12998
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12997, metadata !DIExpression()) #24, !dbg !12998
  call void @llvm.dbg.value(metadata i32 %4, metadata !13000, metadata !DIExpression()) #24, !dbg !13003
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !13005, !srcloc !13006
  call void @llvm.dbg.value(metadata i32 1, metadata !12956, metadata !DIExpression()), !dbg !12964
  call void @llvm.dbg.value(metadata i32 undef, metadata !12956, metadata !DIExpression()), !dbg !12964
  ret void, !dbg !13007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !13008 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13010, metadata !DIExpression()), !dbg !13011
  call void @llvm.dbg.value(metadata i32 %0, metadata !13012, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13027
  call void @llvm.dbg.value(metadata i32 1000, metadata !13015, metadata !DIExpression()), !dbg !13027
  call void @llvm.dbg.value(metadata i32 10000, metadata !13016, metadata !DIExpression()), !dbg !13027
  call void @llvm.dbg.value(metadata i8 1, metadata !13017, metadata !DIExpression()), !dbg !13027
  call void @llvm.dbg.value(metadata i1 true, metadata !13018, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13027
  call void @llvm.dbg.value(metadata i1 true, metadata !13019, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13027
  call void @llvm.dbg.value(metadata i8 0, metadata !13020, metadata !DIExpression()), !dbg !13027
  call void @llvm.dbg.value(metadata i1 true, metadata !13021, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13027
  call void @llvm.dbg.value(metadata i1 false, metadata !13022, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13027
  call void @llvm.dbg.value(metadata i64 0, metadata !13023, metadata !DIExpression()), !dbg !13027
  call void @llvm.dbg.value(metadata i64 0, metadata !13023, metadata !DIExpression()), !dbg !13027
  %2 = mul i32 %0, 10, !dbg !13029
  ret i32 %2, !dbg !13035
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !13036 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13038, metadata !DIExpression()), !dbg !13040
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12965, metadata !DIExpression()) #24, !dbg !13041
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13043, !srcloc !12980
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13043
  call void @llvm.dbg.value(metadata i32 %3, metadata !12977, metadata !DIExpression()) #24, !dbg !13045
  call void @llvm.dbg.value(metadata i32 undef, metadata !12978, metadata !DIExpression()) #24, !dbg !13045
  call void @llvm.dbg.value(metadata i32 %3, metadata !12971, metadata !DIExpression()) #24, !dbg !13041
  call void @llvm.dbg.value(metadata i32 %3, metadata !13039, metadata !DIExpression()), !dbg !13040
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13046
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13048
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !13049
  br i1 %6, label %7, label %8, !dbg !13050

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13051
  call void @llvm.dbg.value(metadata i32 %3, metadata !12992, metadata !DIExpression()) #24, !dbg !13053
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12997, metadata !DIExpression()) #24, !dbg !13053
  call void @llvm.dbg.value(metadata i32 %3, metadata !13000, metadata !DIExpression()) #24, !dbg !13055
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13057, !srcloc !13006
  br label %24, !dbg !13058

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13059
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !13060
  %10 = icmp eq i32 %9, 0, !dbg !13060
  br i1 %10, label %21, label %11, !dbg !13062

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !13063
  br i1 %12, label %13, label %21, !dbg !13064

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13065
  %15 = icmp sgt i32 %14, %0, !dbg !13068
  br i1 %15, label %19, label %16, !dbg !13069

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13070
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !13070
  call void @llvm.dbg.value(metadata i32 %18, metadata !13039, metadata !DIExpression()), !dbg !13040
  br label %22, !dbg !13072

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !13073
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13073
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13075
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !13040
  call void @llvm.dbg.value(metadata i32 %23, metadata !13039, metadata !DIExpression()), !dbg !13040
  call void @llvm.dbg.value(metadata i32 %23, metadata !12992, metadata !DIExpression()) #24, !dbg !13077
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12997, metadata !DIExpression()) #24, !dbg !13077
  call void @llvm.dbg.value(metadata i32 %23, metadata !13000, metadata !DIExpression()) #24, !dbg !13079
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #24, !dbg !13081, !srcloc !13006
  br label %24, !dbg !13082

24:                                               ; preds = %22, %7
  ret void, !dbg !13082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !13083 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13087, metadata !DIExpression()), !dbg !13089
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !13090
  %3 = icmp eq i32 %2, 0, !dbg !13090
  br i1 %3, label %16, label %4, !dbg !13091

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !13092
  br i1 %5, label %16, label %6, !dbg !13093

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13094
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !13094
  %9 = load i8, i8* %8, align 2, !dbg !13094
  %10 = sext i8 %9 to i32, !dbg !13095
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !13096
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !13097
  br i1 %12, label %16, label %13, !dbg !13098

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !13099
  %15 = xor i1 %14, true, !dbg !13100
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !13089
  call void @llvm.dbg.value(metadata i1 %17, metadata !13088, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13089
  ret i1 %17, !dbg !13101
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !13102 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13106, metadata !DIExpression()), !dbg !13108
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13109
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13107, metadata !DIExpression()), !dbg !13108
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !13110
  br i1 %3, label %5, label %4, !dbg !13112

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !13113
  br label %5, !dbg !13115

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !13106, metadata !DIExpression()), !dbg !13108
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13116
  ret i32 %6, !dbg !13117
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13118 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13120, metadata !DIExpression()), !dbg !13122
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13123
  %3 = load i8, i8* %2, align 1, !dbg !13123
  call void @llvm.dbg.value(metadata i8 %3, metadata !13121, metadata !DIExpression()), !dbg !13122
  %4 = and i8 %3, 31, !dbg !13124
  %5 = icmp ne i8 %4, 0, !dbg !13125
  ret i1 %5, !dbg !13126
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13127 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13129, metadata !DIExpression()), !dbg !13130
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13131
  br i1 %2, label %3, label %7, !dbg !13133

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13134, metadata !DIExpression()) #24, !dbg !13137
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13140
  %5 = load i8, i8* %4, align 1, !dbg !13141
  %6 = and i8 %5, 127, !dbg !13141
  store i8 %6, i8* %4, align 1, !dbg !13141
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13142, metadata !DIExpression()) #24, !dbg !13145
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13149
  br label %7, !dbg !13150

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13151, metadata !DIExpression()) #24, !dbg !13154
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13156
  %9 = load i8, i8* %8, align 1, !dbg !13157
  %10 = or i8 %9, -128, !dbg !13157
  store i8 %10, i8* %8, align 1, !dbg !13157
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13158, metadata !DIExpression()) #24, !dbg !13161
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13165, metadata !DIExpression()) #24, !dbg !13173
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13171, metadata !DIExpression()) #24, !dbg !13173
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13175
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !13172, metadata !DIExpression()) #24, !dbg !13173
  %12 = icmp eq %struct._dnode* %11, null, !dbg !13177
  br i1 %12, label %23, label %13, !dbg !13175

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !13172, metadata !DIExpression()) #24, !dbg !13173
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !13179
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !13172, metadata !DIExpression()) #24, !dbg !13173
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !13180
  %17 = icmp sgt i32 %16, 0, !dbg !13183
  br i1 %17, label %18, label %20, !dbg !13184

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13185
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !13187
  br label %25, !dbg !13188

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !13177
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !13172, metadata !DIExpression()) #24, !dbg !13173
  %22 = icmp eq %struct._dnode* %21, null, !dbg !13177
  br i1 %22, label %23, label %13, !dbg !13175, !llvm.loop !13189

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13191
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !13192
  br label %25, !dbg !13193

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13194
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !13195
  %28 = zext i1 %27 to i32, !dbg !13195
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !13196
  ret void, !dbg !13197
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13198 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13200, metadata !DIExpression()), !dbg !13201
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !13202
  ret i1 %2, !dbg !13203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #7 !dbg !13204 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !13206, metadata !DIExpression()), !dbg !13208
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13207, metadata !DIExpression()), !dbg !13208
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !13209
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !13210
  ret void, !dbg !13211
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !13212 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13216, metadata !DIExpression()), !dbg !13217
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !13218
  br i1 %2, label %6, label %3, !dbg !13218

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13219
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13219
  br label %6, !dbg !13218

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13218
  ret %struct._dnode* %7, !dbg !13220
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13221 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13225, metadata !DIExpression()), !dbg !13229
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13226, metadata !DIExpression()), !dbg !13229
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13230
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13230
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13227, metadata !DIExpression()), !dbg !13229
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13231
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !13232
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13233
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !13234
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13235
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13236
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13237
  ret void, !dbg !13238
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !13239 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13243, metadata !DIExpression()), !dbg !13245
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13244, metadata !DIExpression()), !dbg !13245
  %3 = icmp eq %struct._dnode* %1, null, !dbg !13246
  br i1 %3, label %6, label %4, !dbg !13247

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !13248
  br label %6, !dbg !13247

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !13247
  ret %struct._dnode* %7, !dbg !13249
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13250 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13254, metadata !DIExpression()), !dbg !13257
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13255, metadata !DIExpression()), !dbg !13257
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13258
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13258
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13256, metadata !DIExpression()), !dbg !13257
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13259
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !13260
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13261
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !13262
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13263
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13264
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13265
  ret void, !dbg !13266
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !13267 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13269, metadata !DIExpression()), !dbg !13271
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13272
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13279, metadata !DIExpression()) #24, !dbg !13281
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13282
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !13283
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !13283
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13270, metadata !DIExpression()), !dbg !13271
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13284, metadata !DIExpression()) #24, !dbg !13290
  call void @llvm.dbg.value(metadata i32 %0, metadata !13289, metadata !DIExpression()) #24, !dbg !13290
  %6 = icmp eq i32 %0, 0, !dbg !13293
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13295
  br i1 %6, label %8, label %15, !dbg !13296

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !13297
  br i1 %9, label %15, label %10, !dbg !13299

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !13300
  br i1 %11, label %15, label %12, !dbg !13302

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !13303
  %14 = icmp eq i32 %13, 0, !dbg !13303
  br i1 %14, label %18, label %15, !dbg !13305

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !13306
  br i1 %16, label %18, label %17, !dbg !13309

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13310
  br label %18, !dbg !13312

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !13295
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13295
  ret void, !dbg !13313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !13314 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13318, metadata !DIExpression()), !dbg !13321
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13319, metadata !DIExpression()), !dbg !13321
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !13322
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !13320, metadata !DIExpression()), !dbg !13321
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13319, metadata !DIExpression()), !dbg !13321
  ret %struct.k_thread* %3, !dbg !13323
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13324 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13326, metadata !DIExpression()), !dbg !13327
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13328
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !13329
  %4 = xor i1 %3, true, !dbg !13330
  ret i1 %4, !dbg !13331
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13332 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13334, metadata !DIExpression()), !dbg !13335
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !13336
  %3 = load i16, i16* %2, align 2, !dbg !13336
  %4 = icmp ult i16 %3, 128, !dbg !13337
  %5 = zext i1 %4 to i32, !dbg !13337
  ret i32 %5, !dbg !13338
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13339 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13345, metadata !DIExpression()), !dbg !13346
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13347
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !13348
  %4 = xor i1 %3, true, !dbg !13349
  ret i1 %4, !dbg !13350
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13351 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13357, metadata !DIExpression()), !dbg !13358
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13359
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13359
  %4 = icmp ne %struct._dnode* %3, null, !dbg !13360
  ret i1 %4, !dbg !13361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !13362 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13364, metadata !DIExpression()), !dbg !13366
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13365, metadata !DIExpression()), !dbg !13366
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13367
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13367
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !13368
  br i1 %5, label %9, label %6, !dbg !13369

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13370
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !13370
  br label %9, !dbg !13369

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !13369
  ret %struct._dnode* %10, !dbg !13371
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !13372 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13376, metadata !DIExpression()), !dbg !13377
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13378
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13378
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13379
  ret i1 %4, !dbg !13380
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !13381 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13385, metadata !DIExpression()), !dbg !13388
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13389
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13389
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !13386, metadata !DIExpression()), !dbg !13388
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13390
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13390
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !13387, metadata !DIExpression()), !dbg !13388
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !13391
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !13392
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !13393
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !13394
  tail call fastcc void @sys_dnode_init.142(%struct._dnode* noundef %0) #26, !dbg !13395
  ret void, !dbg !13396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.142(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13397 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13399, metadata !DIExpression()), !dbg !13400
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13401
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13402
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13403
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13404
  ret void, !dbg !13405
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13406 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13410, metadata !DIExpression()), !dbg !13412
  call void @llvm.dbg.value(metadata i32 128, metadata !13411, metadata !DIExpression()), !dbg !13412
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13413
  %3 = load i8, i8* %2, align 1, !dbg !13413
  %4 = icmp slt i8 %3, 0, !dbg !13414
  ret i1 %4, !dbg !13415
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !13416 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13420, metadata !DIExpression()), !dbg !13422
  call void @llvm.dbg.value(metadata i32 %1, metadata !13421, metadata !DIExpression()), !dbg !13422
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !13423
  ret i1 %3, !dbg !13424
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !13425 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13427, metadata !DIExpression()), !dbg !13428
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !13429
  ret i1 %2, !dbg !13430
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !13431 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13433, metadata !DIExpression()), !dbg !13435
  call void @llvm.dbg.value(metadata i32 %1, metadata !13434, metadata !DIExpression()), !dbg !13435
  %3 = icmp slt i32 %0, %1, !dbg !13436
  ret i1 %3, !dbg !13437
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13438 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13440, metadata !DIExpression()), !dbg !13444
  call void @llvm.dbg.value(metadata i32 0, metadata !13441, metadata !DIExpression()), !dbg !13445
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12965, metadata !DIExpression()) #24, !dbg !13446
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13448, !srcloc !12980
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13448
  call void @llvm.dbg.value(metadata i32 %3, metadata !12977, metadata !DIExpression()) #24, !dbg !13450
  call void @llvm.dbg.value(metadata i32 undef, metadata !12978, metadata !DIExpression()) #24, !dbg !13450
  call void @llvm.dbg.value(metadata i32 %3, metadata !12971, metadata !DIExpression()) #24, !dbg !13446
  call void @llvm.dbg.value(metadata i32 %3, metadata !13443, metadata !DIExpression()), !dbg !13445
  call void @llvm.dbg.value(metadata i32 undef, metadata !13441, metadata !DIExpression()), !dbg !13445
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !13451
  call void @llvm.dbg.value(metadata i32 %3, metadata !12992, metadata !DIExpression()) #24, !dbg !13456
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12997, metadata !DIExpression()) #24, !dbg !13456
  call void @llvm.dbg.value(metadata i32 %3, metadata !13000, metadata !DIExpression()) #24, !dbg !13458
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13460, !srcloc !13006
  call void @llvm.dbg.value(metadata i32 1, metadata !13441, metadata !DIExpression()), !dbg !13445
  call void @llvm.dbg.value(metadata i32 undef, metadata !13441, metadata !DIExpression()), !dbg !13445
  ret void, !dbg !13461
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13462 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13464, metadata !DIExpression()), !dbg !13465
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13466
  br i1 %2, label %24, label %3, !dbg !13468

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !13469
  br i1 %4, label %5, label %24, !dbg !13470

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13151, metadata !DIExpression()) #24, !dbg !13471
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13474
  %7 = load i8, i8* %6, align 1, !dbg !13475
  %8 = or i8 %7, -128, !dbg !13475
  store i8 %8, i8* %6, align 1, !dbg !13475
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13158, metadata !DIExpression()) #24, !dbg !13476
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13165, metadata !DIExpression()) #24, !dbg !13478
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13171, metadata !DIExpression()) #24, !dbg !13478
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13480
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !13172, metadata !DIExpression()) #24, !dbg !13478
  %10 = icmp eq %struct._dnode* %9, null, !dbg !13481
  br i1 %10, label %21, label %11, !dbg !13480

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !13172, metadata !DIExpression()) #24, !dbg !13478
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !13482
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13172, metadata !DIExpression()) #24, !dbg !13478
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !13483
  %15 = icmp sgt i32 %14, 0, !dbg !13484
  br i1 %15, label %16, label %18, !dbg !13485

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13486
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !13487
  br label %23, !dbg !13488

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !13481
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !13172, metadata !DIExpression()) #24, !dbg !13478
  %20 = icmp eq %struct._dnode* %19, null, !dbg !13481
  br i1 %20, label %21, label %11, !dbg !13480, !llvm.loop !13489

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13491
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !13492
  br label %23, !dbg !13493

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !13494
  br label %24, !dbg !13495

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !13496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13497 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13499, metadata !DIExpression()), !dbg !13500
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !13501
  br i1 %2, label %6, label %3, !dbg !13502

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !13503
  %5 = xor i1 %4, true, !dbg !13502
  br label %6, !dbg !13502

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !13504
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13505 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13507, metadata !DIExpression()), !dbg !13511
  call void @llvm.dbg.value(metadata i32 0, metadata !13508, metadata !DIExpression()), !dbg !13512
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12965, metadata !DIExpression()) #24, !dbg !13513
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13515, !srcloc !12980
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13515
  call void @llvm.dbg.value(metadata i32 %3, metadata !12977, metadata !DIExpression()) #24, !dbg !13517
  call void @llvm.dbg.value(metadata i32 undef, metadata !12978, metadata !DIExpression()) #24, !dbg !13517
  call void @llvm.dbg.value(metadata i32 %3, metadata !12971, metadata !DIExpression()) #24, !dbg !13513
  call void @llvm.dbg.value(metadata i32 %3, metadata !13510, metadata !DIExpression()), !dbg !13512
  call void @llvm.dbg.value(metadata i32 undef, metadata !13508, metadata !DIExpression()), !dbg !13512
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !13518
  call void @llvm.dbg.value(metadata i32 %3, metadata !12992, metadata !DIExpression()) #24, !dbg !13521
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12997, metadata !DIExpression()) #24, !dbg !13521
  call void @llvm.dbg.value(metadata i32 %3, metadata !13000, metadata !DIExpression()) #24, !dbg !13523
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13525, !srcloc !13006
  call void @llvm.dbg.value(metadata i32 1, metadata !13508, metadata !DIExpression()), !dbg !13512
  call void @llvm.dbg.value(metadata i32 undef, metadata !13508, metadata !DIExpression()), !dbg !13512
  ret void, !dbg !13526
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13527 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13529, metadata !DIExpression()), !dbg !13531
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12965, metadata !DIExpression()) #24, !dbg !13532
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13534, !srcloc !12980
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13534
  call void @llvm.dbg.value(metadata i32 %3, metadata !12977, metadata !DIExpression()) #24, !dbg !13536
  call void @llvm.dbg.value(metadata i32 undef, metadata !12978, metadata !DIExpression()) #24, !dbg !13536
  call void @llvm.dbg.value(metadata i32 %3, metadata !12971, metadata !DIExpression()) #24, !dbg !13532
  call void @llvm.dbg.value(metadata i32 %3, metadata !13530, metadata !DIExpression()), !dbg !13531
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !13537
  br i1 %4, label %5, label %6, !dbg !13539

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12992, metadata !DIExpression()) #24, !dbg !13540
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12997, metadata !DIExpression()) #24, !dbg !13540
  call void @llvm.dbg.value(metadata i32 %3, metadata !13000, metadata !DIExpression()) #24, !dbg !13543
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13545, !srcloc !13006
  br label %8, !dbg !13546

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.147(%struct.k_thread* noundef %0) #26, !dbg !13547
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !13548
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13549
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !13549
  br label %8, !dbg !13550

8:                                                ; preds = %6, %5
  ret void, !dbg !13550
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13551 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13553, metadata !DIExpression()), !dbg !13554
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13555
  %3 = load i8, i8* %2, align 1, !dbg !13555
  %4 = and i8 %3, 4, !dbg !13556
  %5 = icmp eq i8 %4, 0, !dbg !13557
  ret i1 %5, !dbg !13558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.147(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13559 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13561, metadata !DIExpression()), !dbg !13562
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13563
  %3 = load i8, i8* %2, align 1, !dbg !13564
  %4 = and i8 %3, -5, !dbg !13564
  store i8 %4, i8* %2, align 1, !dbg !13564
  ret void, !dbg !13565
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !13566 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !13569, metadata !DIExpression()), !dbg !13570
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13568, metadata !DIExpression()), !dbg !13570
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !13571
  br i1 %4, label %5, label %9, !dbg !13573

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !13574
  br i1 %6, label %7, label %9, !dbg !13575

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !13576, metadata !DIExpression()) #24, !dbg !13582
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13581, metadata !DIExpression()) #24, !dbg !13582
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !13585
  br label %10, !dbg !13586

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !12992, metadata !DIExpression()) #24, !dbg !13587
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12997, metadata !DIExpression()) #24, !dbg !13587
  call void @llvm.dbg.value(metadata i32 %3, metadata !13000, metadata !DIExpression()) #24, !dbg !13590
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13592, !srcloc !13006
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !13593
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !13594 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13598, metadata !DIExpression()), !dbg !13599
  call void @llvm.dbg.value(metadata i32 %0, metadata !13600, metadata !DIExpression()), !dbg !13605
  %2 = icmp eq i32 %0, 0, !dbg !13607
  br i1 %2, label %3, label %6, !dbg !13608

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !13609, !srcloc !13616
  call void @llvm.dbg.value(metadata i32 %4, metadata !13612, metadata !DIExpression()) #24, !dbg !13617
  %5 = icmp eq i32 %4, 0, !dbg !13618
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !13599
  ret i1 %7, !dbg !13619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !13620 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13623
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13622, metadata !DIExpression()), !dbg !13624
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13625
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !13626
  ret i1 %3, !dbg !13627
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !13628 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13630, metadata !DIExpression()), !dbg !13632
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !13633
  call void @llvm.dbg.value(metadata i32 %2, metadata !13631, metadata !DIExpression()), !dbg !13632
  ret i32 %2, !dbg !13634
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13635 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13637, metadata !DIExpression()), !dbg !13641
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !13642
  call void @llvm.dbg.value(metadata i32 0, metadata !13638, metadata !DIExpression()), !dbg !13643
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12965, metadata !DIExpression()) #24, !dbg !13644
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13646, !srcloc !12980
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13646
  call void @llvm.dbg.value(metadata i32 %4, metadata !12977, metadata !DIExpression()) #24, !dbg !13648
  call void @llvm.dbg.value(metadata i32 undef, metadata !12978, metadata !DIExpression()) #24, !dbg !13648
  call void @llvm.dbg.value(metadata i32 %4, metadata !12971, metadata !DIExpression()) #24, !dbg !13644
  call void @llvm.dbg.value(metadata i32 %4, metadata !13640, metadata !DIExpression()), !dbg !13643
  call void @llvm.dbg.value(metadata i32 undef, metadata !13638, metadata !DIExpression()), !dbg !13643
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13649
  br i1 %5, label %6, label %10, !dbg !13653

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13134, metadata !DIExpression()) #24, !dbg !13654
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13657
  %8 = load i8, i8* %7, align 1, !dbg !13658
  %9 = and i8 %8, 127, !dbg !13658
  store i8 %9, i8* %7, align 1, !dbg !13658
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13142, metadata !DIExpression()) #24, !dbg !13659
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13661
  br label %10, !dbg !13662

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !13663
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13664
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !13665
  %13 = zext i1 %12 to i32, !dbg !13665
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !13666
  call void @llvm.dbg.value(metadata i32 %4, metadata !12992, metadata !DIExpression()) #24, !dbg !13667
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12997, metadata !DIExpression()) #24, !dbg !13667
  call void @llvm.dbg.value(metadata i32 %4, metadata !13000, metadata !DIExpression()) #24, !dbg !13669
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !13671, !srcloc !13006
  call void @llvm.dbg.value(metadata i32 1, metadata !13638, metadata !DIExpression()), !dbg !13643
  call void @llvm.dbg.value(metadata i32 undef, metadata !13638, metadata !DIExpression()), !dbg !13643
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13672
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !13674
  br i1 %15, label %16, label %17, !dbg !13675

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !13676
  br label %17, !dbg !13678

17:                                               ; preds = %16, %10
  ret void, !dbg !13679
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13680 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13682, metadata !DIExpression()), !dbg !13683
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13684
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !13685
  ret i32 %3, !dbg !13686
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13687 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13689, metadata !DIExpression()), !dbg !13690
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13691
  %3 = load i8, i8* %2, align 1, !dbg !13692
  %4 = or i8 %3, 16, !dbg !13692
  store i8 %4, i8* %2, align 1, !dbg !13692
  ret void, !dbg !13693
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !13694 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13695, !srcloc !12980
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13695
  call void @llvm.dbg.value(metadata i32 %2, metadata !12977, metadata !DIExpression()) #24, !dbg !13697
  call void @llvm.dbg.value(metadata i32 undef, metadata !12978, metadata !DIExpression()) #24, !dbg !13697
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !13698
  ret void, !dbg !13699
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !13700 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13702, metadata !DIExpression()), !dbg !13703
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !13704
  br i1 %2, label %3, label %5, !dbg !13706

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !13707
  br label %6, !dbg !13709

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !13000, metadata !DIExpression()) #24, !dbg !13710
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #24, !dbg !13713, !srcloc !13006
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !13714
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13715 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13717, metadata !DIExpression()), !dbg !13719
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12965, metadata !DIExpression()) #24, !dbg !13720
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13722, !srcloc !12980
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13722
  call void @llvm.dbg.value(metadata i32 %3, metadata !12977, metadata !DIExpression()) #24, !dbg !13724
  call void @llvm.dbg.value(metadata i32 undef, metadata !12978, metadata !DIExpression()) #24, !dbg !13724
  call void @llvm.dbg.value(metadata i32 %3, metadata !12971, metadata !DIExpression()) #24, !dbg !13720
  call void @llvm.dbg.value(metadata i32 %3, metadata !13718, metadata !DIExpression()), !dbg !13719
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !13725
  br i1 %4, label %6, label %5, !dbg !13727

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12992, metadata !DIExpression()) #24, !dbg !13728
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12997, metadata !DIExpression()) #24, !dbg !13728
  call void @llvm.dbg.value(metadata i32 %3, metadata !13000, metadata !DIExpression()) #24, !dbg !13731
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13733, !srcloc !13006
  br label %8, !dbg !13734

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !13735
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !13736
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13737
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !13737
  br label %8, !dbg !13738

8:                                                ; preds = %6, %5
  ret void, !dbg !13738
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13739 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13741, metadata !DIExpression()), !dbg !13742
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13743
  %3 = load i8, i8* %2, align 1, !dbg !13743
  %4 = and i8 %3, 16, !dbg !13744
  %5 = icmp ne i8 %4, 0, !dbg !13745
  ret i1 %5, !dbg !13746
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13747 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13749, metadata !DIExpression()), !dbg !13750
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13751
  %3 = load i8, i8* %2, align 1, !dbg !13752
  %4 = and i8 %3, -17, !dbg !13752
  store i8 %4, i8* %2, align 1, !dbg !13752
  ret void, !dbg !13753
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13754 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13764, metadata !DIExpression()), !dbg !13768
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13762, metadata !DIExpression()), !dbg !13768
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13763, metadata !DIExpression()), !dbg !13768
  call void @llvm.dbg.value(metadata i32 0, metadata !13765, metadata !DIExpression()), !dbg !13769
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12965, metadata !DIExpression()) #24, !dbg !13770
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13772, !srcloc !12980
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !13772
  call void @llvm.dbg.value(metadata i32 %5, metadata !12977, metadata !DIExpression()) #24, !dbg !13774
  call void @llvm.dbg.value(metadata i32 undef, metadata !12978, metadata !DIExpression()) #24, !dbg !13774
  call void @llvm.dbg.value(metadata i32 %5, metadata !12971, metadata !DIExpression()) #24, !dbg !13770
  call void @llvm.dbg.value(metadata i32 %5, metadata !13767, metadata !DIExpression()), !dbg !13769
  call void @llvm.dbg.value(metadata i32 undef, metadata !13765, metadata !DIExpression()), !dbg !13769
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !13775
  call void @llvm.dbg.value(metadata i32 %5, metadata !12992, metadata !DIExpression()) #24, !dbg !13778
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12997, metadata !DIExpression()) #24, !dbg !13778
  call void @llvm.dbg.value(metadata i32 %5, metadata !13000, metadata !DIExpression()) #24, !dbg !13780
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #24, !dbg !13782, !srcloc !13006
  call void @llvm.dbg.value(metadata i32 1, metadata !13765, metadata !DIExpression()), !dbg !13769
  call void @llvm.dbg.value(metadata i32 undef, metadata !13765, metadata !DIExpression()), !dbg !13769
  ret void, !dbg !13783
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !13784 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13788, metadata !DIExpression()), !dbg !13789
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13786, metadata !DIExpression()), !dbg !13789
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13787, metadata !DIExpression()), !dbg !13789
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #26, !dbg !13790
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !13791
  ret void, !dbg !13792
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !13793 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13797, metadata !DIExpression()), !dbg !13799
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13798, metadata !DIExpression()), !dbg !13799
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !13800
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !13801
  %3 = icmp eq %union.anon* %1, null, !dbg !13802
  br i1 %3, label %21, label %4, !dbg !13804

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13805
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !13807
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !13808
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !13165, metadata !DIExpression()) #24, !dbg !13809
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13171, metadata !DIExpression()) #24, !dbg !13809
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !13811
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13172, metadata !DIExpression()) #24, !dbg !13809
  %8 = icmp eq %struct._dnode* %7, null, !dbg !13812
  br i1 %8, label %19, label %9, !dbg !13811

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13172, metadata !DIExpression()) #24, !dbg !13809
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !13813
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !13172, metadata !DIExpression()) #24, !dbg !13809
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !13814
  %13 = icmp sgt i32 %12, 0, !dbg !13815
  br i1 %13, label %14, label %16, !dbg !13816

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13817
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !13818
  br label %21, !dbg !13819

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !13812
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !13172, metadata !DIExpression()) #24, !dbg !13809
  %18 = icmp eq %struct._dnode* %17, null, !dbg !13812
  br i1 %18, label %19, label %9, !dbg !13811, !llvm.loop !13820

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13822
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !13823
  br label %21, !dbg !13824

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !13825
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13826 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13831, metadata !DIExpression()), !dbg !13832
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13830, metadata !DIExpression()), !dbg !13832
  %4 = icmp eq i64 %3, -1, !dbg !13833
  br i1 %4, label %6, label %5, !dbg !13835

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.148(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !13836
  br label %6, !dbg !13838

6:                                                ; preds = %5, %2
  ret void, !dbg !13839
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.148(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13840 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13843, metadata !DIExpression()), !dbg !13844
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13842, metadata !DIExpression()), !dbg !13844
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13845
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !13846
  ret void, !dbg !13847
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !13848 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13850, metadata !DIExpression()), !dbg !13858
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !13859
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !13859
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13851, metadata !DIExpression()), !dbg !13858
  call void @llvm.dbg.value(metadata i32 0, metadata !13852, metadata !DIExpression()), !dbg !13860
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12965, metadata !DIExpression()) #24, !dbg !13861
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13863, !srcloc !12980
  call void @llvm.dbg.value(metadata i32 undef, metadata !12977, metadata !DIExpression()) #24, !dbg !13865
  call void @llvm.dbg.value(metadata i32 undef, metadata !12978, metadata !DIExpression()) #24, !dbg !13865
  call void @llvm.dbg.value(metadata i32 undef, metadata !12971, metadata !DIExpression()) #24, !dbg !13861
  call void @llvm.dbg.value(metadata i32 undef, metadata !13854, metadata !DIExpression()), !dbg !13860
  call void @llvm.dbg.value(metadata i32 undef, metadata !13852, metadata !DIExpression()), !dbg !13860
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !13866
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !13867
  %7 = load i8, i8* %6, align 1, !dbg !13867
  %8 = and i8 %7, 40, !dbg !13868
  %9 = icmp eq i8 %8, 0, !dbg !13868
  call void @llvm.dbg.value(metadata i1 %9, metadata !13855, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13869
  br i1 %9, label %10, label %17, !dbg !13870

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !13871
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !13871
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !13871
  %14 = icmp eq %union.anon* %13, null, !dbg !13875
  br i1 %14, label %16, label %15, !dbg !13876

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !13877
  br label %16, !dbg !13879

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.147(%struct.k_thread* noundef nonnull %3) #26, !dbg !13880
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !13881
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !13882
  br label %17, !dbg !13883

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !13863
  call void @llvm.dbg.value(metadata i32 %18, metadata !12977, metadata !DIExpression()) #24, !dbg !13865
  call void @llvm.dbg.value(metadata i32 %18, metadata !12971, metadata !DIExpression()) #24, !dbg !13861
  call void @llvm.dbg.value(metadata i32 %18, metadata !13854, metadata !DIExpression()), !dbg !13860
  call void @llvm.dbg.value(metadata i32 undef, metadata !12992, metadata !DIExpression()) #24, !dbg !13884
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12997, metadata !DIExpression()) #24, !dbg !13884
  call void @llvm.dbg.value(metadata i32 undef, metadata !13000, metadata !DIExpression()) #24, !dbg !13886
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !13888, !srcloc !13006
  call void @llvm.dbg.value(metadata i32 1, metadata !13852, metadata !DIExpression()), !dbg !13860
  call void @llvm.dbg.value(metadata i32 undef, metadata !13852, metadata !DIExpression()), !dbg !13860
  ret void, !dbg !13889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13890 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13892, metadata !DIExpression()), !dbg !13893
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !13894
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !13895
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13896
  store %union.anon* null, %union.anon** %2, align 8, !dbg !13897
  ret void, !dbg !13898
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13899 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13901, metadata !DIExpression()), !dbg !13902
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13903
  %3 = load i8, i8* %2, align 1, !dbg !13904
  %4 = and i8 %3, -3, !dbg !13904
  store i8 %4, i8* %2, align 1, !dbg !13904
  ret void, !dbg !13905
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13906 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13908, metadata !DIExpression()), !dbg !13909
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13910
  br i1 %2, label %3, label %7, !dbg !13912

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13134, metadata !DIExpression()) #24, !dbg !13913
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13916
  %5 = load i8, i8* %4, align 1, !dbg !13917
  %6 = and i8 %5, 127, !dbg !13917
  store i8 %6, i8* %4, align 1, !dbg !13917
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13142, metadata !DIExpression()) #24, !dbg !13918
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13920
  br label %7, !dbg !13921

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13922
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !13923
  %10 = zext i1 %9 to i32, !dbg !13923
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !13924
  ret void, !dbg !13925
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13926 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13928, metadata !DIExpression()), !dbg !13929
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13930
  %3 = load i8, i8* %2, align 1, !dbg !13931
  %4 = or i8 %3, 2, !dbg !13931
  store i8 %4, i8* %2, align 1, !dbg !13931
  ret void, !dbg !13932
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #23 !dbg !13933 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13935, metadata !DIExpression()), !dbg !13939
  call void @llvm.dbg.value(metadata i32 0, metadata !13936, metadata !DIExpression()), !dbg !13940
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12965, metadata !DIExpression()) #24, !dbg !13941
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13943, !srcloc !12980
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13943
  call void @llvm.dbg.value(metadata i32 %3, metadata !12977, metadata !DIExpression()) #24, !dbg !13945
  call void @llvm.dbg.value(metadata i32 undef, metadata !12978, metadata !DIExpression()) #24, !dbg !13945
  call void @llvm.dbg.value(metadata i32 %3, metadata !12971, metadata !DIExpression()) #24, !dbg !13941
  call void @llvm.dbg.value(metadata i32 %3, metadata !13938, metadata !DIExpression()), !dbg !13940
  call void @llvm.dbg.value(metadata i32 undef, metadata !13936, metadata !DIExpression()), !dbg !13940
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !13946
  call void @llvm.dbg.value(metadata i32 %3, metadata !12992, metadata !DIExpression()) #24, !dbg !13949
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12997, metadata !DIExpression()) #24, !dbg !13949
  call void @llvm.dbg.value(metadata i32 %3, metadata !13000, metadata !DIExpression()) #24, !dbg !13951
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13953, !srcloc !13006
  call void @llvm.dbg.value(metadata i32 1, metadata !13936, metadata !DIExpression()), !dbg !13940
  call void @llvm.dbg.value(metadata i32 undef, metadata !13936, metadata !DIExpression()), !dbg !13940
  ret void, !dbg !13954
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13955 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13961, metadata !DIExpression()), !dbg !13966
  call void @llvm.dbg.value(metadata i32 %0, metadata !13959, metadata !DIExpression()), !dbg !13966
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13960, metadata !DIExpression()), !dbg !13966
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13967
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !13968
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13969
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13970
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !13971
  call void @llvm.dbg.value(metadata i32 %6, metadata !13962, metadata !DIExpression()), !dbg !13966
  call void @llvm.dbg.value(metadata i32 0, metadata !13963, metadata !DIExpression()), !dbg !13972
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12965, metadata !DIExpression()) #24, !dbg !13973
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13975, !srcloc !12980
  call void @llvm.dbg.value(metadata i32 undef, metadata !12977, metadata !DIExpression()) #24, !dbg !13977
  call void @llvm.dbg.value(metadata i32 undef, metadata !12978, metadata !DIExpression()) #24, !dbg !13977
  call void @llvm.dbg.value(metadata i32 undef, metadata !12971, metadata !DIExpression()) #24, !dbg !13973
  call void @llvm.dbg.value(metadata i32 undef, metadata !13965, metadata !DIExpression()), !dbg !13972
  call void @llvm.dbg.value(metadata i32 undef, metadata !13963, metadata !DIExpression()), !dbg !13972
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13978
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13982
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !13983
  br i1 %10, label %11, label %12, !dbg !13984

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13985
  br label %12, !dbg !13987

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !13975
  call void @llvm.dbg.value(metadata i32 %13, metadata !12977, metadata !DIExpression()) #24, !dbg !13977
  call void @llvm.dbg.value(metadata i32 %13, metadata !12971, metadata !DIExpression()) #24, !dbg !13973
  call void @llvm.dbg.value(metadata i32 %13, metadata !13965, metadata !DIExpression()), !dbg !13972
  call void @llvm.dbg.value(metadata i32 undef, metadata !12992, metadata !DIExpression()) #24, !dbg !13988
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12997, metadata !DIExpression()) #24, !dbg !13988
  call void @llvm.dbg.value(metadata i32 undef, metadata !13000, metadata !DIExpression()) #24, !dbg !13990
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !13992, !srcloc !13006
  call void @llvm.dbg.value(metadata i32 1, metadata !13963, metadata !DIExpression()), !dbg !13972
  call void @llvm.dbg.value(metadata i32 undef, metadata !13963, metadata !DIExpression()), !dbg !13972
  ret i32 %6, !dbg !13993
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !13994 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13999, metadata !DIExpression()), !dbg !14002
  call void @llvm.dbg.value(metadata i64 undef, metadata !14001, metadata !DIExpression()), !dbg !14002
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13998, metadata !DIExpression()), !dbg !14002
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !14000, metadata !DIExpression()), !dbg !14002
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14003
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14004
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12965, metadata !DIExpression()) #24, !dbg !14005
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14007, !srcloc !12980
  call void @llvm.dbg.value(metadata i32 undef, metadata !12977, metadata !DIExpression()) #24, !dbg !14009
  call void @llvm.dbg.value(metadata i32 undef, metadata !12978, metadata !DIExpression()) #24, !dbg !14009
  call void @llvm.dbg.value(metadata i32 undef, metadata !12971, metadata !DIExpression()) #24, !dbg !14005
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14010
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !14011
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !13576, metadata !DIExpression()) #24, !dbg !14012
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13581, metadata !DIExpression()) #24, !dbg !14012
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !14014
  ret i32 %9, !dbg !14015
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14016 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14020, metadata !DIExpression()), !dbg !14025
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14021, metadata !DIExpression()), !dbg !14025
  call void @llvm.dbg.value(metadata i32 0, metadata !14022, metadata !DIExpression()), !dbg !14026
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12965, metadata !DIExpression()) #24, !dbg !14027
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14029, !srcloc !12980
  call void @llvm.dbg.value(metadata i32 undef, metadata !12977, metadata !DIExpression()) #24, !dbg !14031
  call void @llvm.dbg.value(metadata i32 undef, metadata !12978, metadata !DIExpression()) #24, !dbg !14031
  call void @llvm.dbg.value(metadata i32 undef, metadata !12971, metadata !DIExpression()) #24, !dbg !14027
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()), !dbg !14026
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14021, metadata !DIExpression()), !dbg !14025
  call void @llvm.dbg.value(metadata i32 undef, metadata !14022, metadata !DIExpression()), !dbg !14026
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !14032
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14021, metadata !DIExpression()), !dbg !14025
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14035
  br i1 %5, label %7, label %6, !dbg !14037

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14038
  br label %7, !dbg !14040

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !14029
  call void @llvm.dbg.value(metadata i32 %8, metadata !12977, metadata !DIExpression()) #24, !dbg !14031
  call void @llvm.dbg.value(metadata i32 %8, metadata !12971, metadata !DIExpression()) #24, !dbg !14027
  call void @llvm.dbg.value(metadata i32 %8, metadata !14024, metadata !DIExpression()), !dbg !14026
  call void @llvm.dbg.value(metadata i32 undef, metadata !12992, metadata !DIExpression()) #24, !dbg !14041
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12997, metadata !DIExpression()) #24, !dbg !14041
  call void @llvm.dbg.value(metadata i32 undef, metadata !13000, metadata !DIExpression()) #24, !dbg !14043
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !14045, !srcloc !13006
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14021, metadata !DIExpression()), !dbg !14025
  call void @llvm.dbg.value(metadata i32 undef, metadata !14022, metadata !DIExpression()), !dbg !14026
  ret %struct.k_thread* %4, !dbg !14046
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14047 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14049, metadata !DIExpression()), !dbg !14054
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14050, metadata !DIExpression()), !dbg !14054
  call void @llvm.dbg.value(metadata i32 0, metadata !14051, metadata !DIExpression()), !dbg !14055
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12965, metadata !DIExpression()) #24, !dbg !14056
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14058, !srcloc !12980
  call void @llvm.dbg.value(metadata i32 undef, metadata !12977, metadata !DIExpression()) #24, !dbg !14060
  call void @llvm.dbg.value(metadata i32 undef, metadata !12978, metadata !DIExpression()) #24, !dbg !14060
  call void @llvm.dbg.value(metadata i32 undef, metadata !12971, metadata !DIExpression()) #24, !dbg !14056
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()), !dbg !14055
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14050, metadata !DIExpression()), !dbg !14054
  call void @llvm.dbg.value(metadata i32 undef, metadata !14051, metadata !DIExpression()), !dbg !14055
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !14061
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14050, metadata !DIExpression()), !dbg !14054
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14064
  br i1 %5, label %8, label %6, !dbg !14066

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14067
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14069
  br label %8, !dbg !14070

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14058
  call void @llvm.dbg.value(metadata i32 %9, metadata !12977, metadata !DIExpression()) #24, !dbg !14060
  call void @llvm.dbg.value(metadata i32 %9, metadata !12971, metadata !DIExpression()) #24, !dbg !14056
  call void @llvm.dbg.value(metadata i32 %9, metadata !14053, metadata !DIExpression()), !dbg !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !12992, metadata !DIExpression()) #24, !dbg !14071
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12997, metadata !DIExpression()) #24, !dbg !14071
  call void @llvm.dbg.value(metadata i32 undef, metadata !13000, metadata !DIExpression()) #24, !dbg !14073
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !14075, !srcloc !13006
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14050, metadata !DIExpression()), !dbg !14054
  call void @llvm.dbg.value(metadata i32 undef, metadata !14051, metadata !DIExpression()), !dbg !14055
  ret %struct.k_thread* %4, !dbg !14076
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14077 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14079, metadata !DIExpression()), !dbg !14080
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13935, metadata !DIExpression()) #24, !dbg !14081
  call void @llvm.dbg.value(metadata i32 0, metadata !13936, metadata !DIExpression()) #24, !dbg !14083
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12965, metadata !DIExpression()) #24, !dbg !14084
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14086, !srcloc !12980
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14086
  call void @llvm.dbg.value(metadata i32 %3, metadata !12977, metadata !DIExpression()) #24, !dbg !14088
  call void @llvm.dbg.value(metadata i32 undef, metadata !12978, metadata !DIExpression()) #24, !dbg !14088
  call void @llvm.dbg.value(metadata i32 %3, metadata !12971, metadata !DIExpression()) #24, !dbg !14084
  call void @llvm.dbg.value(metadata i32 %3, metadata !13938, metadata !DIExpression()) #24, !dbg !14083
  call void @llvm.dbg.value(metadata i32 undef, metadata !13936, metadata !DIExpression()) #24, !dbg !14083
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !14089
  call void @llvm.dbg.value(metadata i32 %3, metadata !12992, metadata !DIExpression()) #24, !dbg !14090
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12997, metadata !DIExpression()) #24, !dbg !14090
  call void @llvm.dbg.value(metadata i32 %3, metadata !13000, metadata !DIExpression()) #24, !dbg !14092
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14094, !srcloc !13006
  call void @llvm.dbg.value(metadata i32 1, metadata !13936, metadata !DIExpression()) #24, !dbg !14083
  call void @llvm.dbg.value(metadata i32 undef, metadata !13936, metadata !DIExpression()) #24, !dbg !14083
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14095
  ret void, !dbg !14096
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14097 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14099, metadata !DIExpression()), !dbg !14105
  call void @llvm.dbg.value(metadata i32 %1, metadata !14100, metadata !DIExpression()), !dbg !14105
  call void @llvm.dbg.value(metadata i8 0, metadata !14101, metadata !DIExpression()), !dbg !14105
  call void @llvm.dbg.value(metadata i32 0, metadata !14102, metadata !DIExpression()), !dbg !14106
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12965, metadata !DIExpression()) #24, !dbg !14107
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14109, !srcloc !12980
  call void @llvm.dbg.value(metadata i32 undef, metadata !12977, metadata !DIExpression()) #24, !dbg !14111
  call void @llvm.dbg.value(metadata i32 undef, metadata !12978, metadata !DIExpression()) #24, !dbg !14111
  call void @llvm.dbg.value(metadata i32 undef, metadata !12971, metadata !DIExpression()) #24, !dbg !14107
  call void @llvm.dbg.value(metadata i32 undef, metadata !14104, metadata !DIExpression()), !dbg !14106
  call void @llvm.dbg.value(metadata i8 poison, metadata !14101, metadata !DIExpression()), !dbg !14105
  call void @llvm.dbg.value(metadata i32 undef, metadata !14102, metadata !DIExpression()), !dbg !14106
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !14112
  call void @llvm.dbg.value(metadata i1 %6, metadata !14101, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14105
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !14115

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13134, metadata !DIExpression()) #24, !dbg !14116
  %11 = load i8, i8* %4, align 1, !dbg !14122
  %12 = and i8 %11, 127, !dbg !14122
  store i8 %12, i8* %4, align 1, !dbg !14122
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13142, metadata !DIExpression()) #24, !dbg !14123
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14125
  store i8 %9, i8* %8, align 2, !dbg !14126
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13151, metadata !DIExpression()) #24, !dbg !14127
  %13 = load i8, i8* %4, align 1, !dbg !14129
  %14 = or i8 %13, -128, !dbg !14129
  store i8 %14, i8* %4, align 1, !dbg !14129
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13158, metadata !DIExpression()) #24, !dbg !14130
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13165, metadata !DIExpression()) #24, !dbg !14132
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13171, metadata !DIExpression()) #24, !dbg !14132
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14134
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !13172, metadata !DIExpression()) #24, !dbg !14132
  %16 = icmp eq %struct._dnode* %15, null, !dbg !14135
  br i1 %16, label %26, label %17, !dbg !14134

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !13172, metadata !DIExpression()) #24, !dbg !14132
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !14136
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !13172, metadata !DIExpression()) #24, !dbg !14132
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !14137
  %21 = icmp sgt i32 %20, 0, !dbg !14138
  br i1 %21, label %22, label %23, !dbg !14139

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !14140
  br label %27, !dbg !14141

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !14135
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !13172, metadata !DIExpression()) #24, !dbg !14132
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14135
  br i1 %25, label %26, label %17, !dbg !14134, !llvm.loop !14142

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !14144
  br label %27, !dbg !14145

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !14146
  br label %29, !dbg !14147

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !14148
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !14109
  call void @llvm.dbg.value(metadata i32 %30, metadata !12977, metadata !DIExpression()) #24, !dbg !14111
  call void @llvm.dbg.value(metadata i32 %30, metadata !12971, metadata !DIExpression()) #24, !dbg !14107
  call void @llvm.dbg.value(metadata i32 %30, metadata !14104, metadata !DIExpression()), !dbg !14106
  call void @llvm.dbg.value(metadata i32 undef, metadata !12992, metadata !DIExpression()) #24, !dbg !14150
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12997, metadata !DIExpression()) #24, !dbg !14150
  call void @llvm.dbg.value(metadata i32 undef, metadata !13000, metadata !DIExpression()) #24, !dbg !14152
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #24, !dbg !14154, !srcloc !13006
  call void @llvm.dbg.value(metadata i8 poison, metadata !14101, metadata !DIExpression()), !dbg !14105
  call void @llvm.dbg.value(metadata i32 undef, metadata !14102, metadata !DIExpression()), !dbg !14106
  ret i1 %6, !dbg !14155
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14156 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14160, metadata !DIExpression()), !dbg !14163
  call void @llvm.dbg.value(metadata i32 %1, metadata !14161, metadata !DIExpression()), !dbg !14163
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !14164
  call void @llvm.dbg.value(metadata i1 %3, metadata !14162, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14163
  br i1 %3, label %4, label %12, !dbg !14165

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14167
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !14168
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !14168
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !14168
  %9 = load i8, i8* %8, align 1, !dbg !14168
  %10 = icmp eq i8 %9, 0, !dbg !14169
  br i1 %10, label %11, label %12, !dbg !14170

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14171
  br label %12, !dbg !14173

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !14174
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !14175 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14177, metadata !DIExpression()), !dbg !14180
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12965, metadata !DIExpression()) #24, !dbg !14181
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14183, !srcloc !12980
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14183
  call void @llvm.dbg.value(metadata i32 %2, metadata !12977, metadata !DIExpression()) #24, !dbg !14185
  call void @llvm.dbg.value(metadata i32 undef, metadata !12978, metadata !DIExpression()) #24, !dbg !14185
  call void @llvm.dbg.value(metadata i32 %2, metadata !12971, metadata !DIExpression()) #24, !dbg !14181
  call void @llvm.dbg.value(metadata i32 %2, metadata !14179, metadata !DIExpression()), !dbg !14180
  call void @llvm.dbg.value(metadata i32 undef, metadata !14177, metadata !DIExpression()), !dbg !14180
  tail call fastcc void @z_sched_lock() #26, !dbg !14186
  call void @llvm.dbg.value(metadata i32 %2, metadata !12992, metadata !DIExpression()) #24, !dbg !14189
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12997, metadata !DIExpression()) #24, !dbg !14189
  call void @llvm.dbg.value(metadata i32 %2, metadata !13000, metadata !DIExpression()) #24, !dbg !14191
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !14193, !srcloc !13006
  call void @llvm.dbg.value(metadata i32 1, metadata !14177, metadata !DIExpression()), !dbg !14180
  call void @llvm.dbg.value(metadata i32 undef, metadata !14177, metadata !DIExpression()), !dbg !14180
  ret void, !dbg !14194
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !14195 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14196
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14197
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !14197
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !14197
  %5 = load i8, i8* %4, align 1, !dbg !14198
  %6 = add i8 %5, -1, !dbg !14198
  store i8 %6, i8* %4, align 1, !dbg !14198
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14199, !srcloc !14201
  ret void, !dbg !14202
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !14203 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14205, metadata !DIExpression()), !dbg !14208
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12965, metadata !DIExpression()) #24, !dbg !14209
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14211, !srcloc !12980
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14211
  call void @llvm.dbg.value(metadata i32 %2, metadata !12977, metadata !DIExpression()) #24, !dbg !14213
  call void @llvm.dbg.value(metadata i32 undef, metadata !12978, metadata !DIExpression()) #24, !dbg !14213
  call void @llvm.dbg.value(metadata i32 %2, metadata !12971, metadata !DIExpression()) #24, !dbg !14209
  call void @llvm.dbg.value(metadata i32 %2, metadata !14207, metadata !DIExpression()), !dbg !14208
  call void @llvm.dbg.value(metadata i32 undef, metadata !14205, metadata !DIExpression()), !dbg !14208
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14214
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !14217
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !14217
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14217
  %7 = load i8, i8* %6, align 1, !dbg !14218
  %8 = add i8 %7, 1, !dbg !14218
  store i8 %8, i8* %6, align 1, !dbg !14218
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !14219
  call void @llvm.dbg.value(metadata i32 %2, metadata !12992, metadata !DIExpression()) #24, !dbg !14220
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12997, metadata !DIExpression()) #24, !dbg !14220
  call void @llvm.dbg.value(metadata i32 %2, metadata !13000, metadata !DIExpression()) #24, !dbg !14222
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !14224, !srcloc !13006
  call void @llvm.dbg.value(metadata i32 1, metadata !14205, metadata !DIExpression()), !dbg !14208
  call void @llvm.dbg.value(metadata i32 undef, metadata !14205, metadata !DIExpression()), !dbg !14208
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14225
  ret void, !dbg !14226
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !14227 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14228
  ret %struct.k_thread* %1, !dbg !14229
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14230 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !14234, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !14235, metadata !DIExpression()), !dbg !14239
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !14240
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14236, metadata !DIExpression()), !dbg !14239
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !14241
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14237, metadata !DIExpression()), !dbg !14239
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !14242
  call void @llvm.dbg.value(metadata i32 %5, metadata !14238, metadata !DIExpression()), !dbg !14239
  %6 = icmp sgt i32 %5, 0, !dbg !14243
  br i1 %6, label %17, label %7, !dbg !14245

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !14246
  br i1 %8, label %17, label %9, !dbg !14248

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !14249
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !14249
  %12 = load i32, i32* %11, align 8, !dbg !14249
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !14251
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !14251
  %15 = load i32, i32* %14, align 8, !dbg !14251
  %16 = icmp ult i32 %12, %15, !dbg !14252
  br label %17, !dbg !14253

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !14254
  ret i1 %18, !dbg !14255
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14256 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14273, metadata !DIExpression()), !dbg !14288
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14274, metadata !DIExpression()), !dbg !14288
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14289
  %5 = load i32, i32* %4, align 4, !dbg !14290
  %6 = add nsw i32 %5, 1, !dbg !14290
  store i32 %6, i32* %4, align 4, !dbg !14290
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !14291
  store i32 %5, i32* %7, align 8, !dbg !14292
  %8 = load i32, i32* %4, align 4, !dbg !14293
  %9 = icmp eq i32 %8, 0, !dbg !14294
  br i1 %9, label %10, label %32, !dbg !14295

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !14296
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #24, !dbg !14296
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !14276, metadata !DIExpression()), !dbg !14296
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14296
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !14296
  %14 = load i32, i32* %13, align 4, !dbg !14296
  %15 = shl i32 %14, 2, !dbg !14296
  %16 = alloca i8, i32 %15, align 8, !dbg !14296
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !14296
  store i8* %16, i8** %17, align 4, !dbg !14296
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !14296
  %19 = alloca i8, i32 %14, align 8, !dbg !14296
  store i8* %19, i8** %18, align 4, !dbg !14296
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !14296
  store i32 -1, i32* %20, align 4, !dbg !14296
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !14297
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14285, metadata !DIExpression()), !dbg !14298
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14275, metadata !DIExpression()), !dbg !14288
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !14299
  br i1 %22, label %23, label %24, !dbg !14296

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #24, !dbg !14299
  br label %32, !dbg !14300

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !14275, metadata !DIExpression()), !dbg !14288
  %26 = load i32, i32* %4, align 4, !dbg !14301
  %27 = add nsw i32 %26, 1, !dbg !14301
  store i32 %27, i32* %4, align 4, !dbg !14301
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !14303
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !14303
  store i32 %26, i32* %29, align 8, !dbg !14304
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !14297
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14285, metadata !DIExpression()), !dbg !14298
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14275, metadata !DIExpression()), !dbg !14288
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !14299
  br i1 %31, label %23, label %24, !dbg !14296, !llvm.loop !14305

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14307
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14308
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !14309
  ret void, !dbg !14310
}

; Function Attrs: optsize
declare !dbg !14311 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !14316 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14319 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14321, metadata !DIExpression()), !dbg !14323
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14322, metadata !DIExpression()), !dbg !14323
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14324
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14325
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !14326
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !14327
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !14327
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !14329
  br i1 %7, label %8, label %10, !dbg !14330

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14331
  store i32 0, i32* %9, align 4, !dbg !14333
  br label %10, !dbg !14334

10:                                               ; preds = %8, %2
  ret void, !dbg !14335
}

; Function Attrs: optsize
declare !dbg !14336 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !14337 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14341, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14342, metadata !DIExpression()), !dbg !14344
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14345
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !14346
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !14343, metadata !DIExpression()), !dbg !14344
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14342, metadata !DIExpression()), !dbg !14344
  ret %struct.k_thread* %4, !dbg !14347
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !14348 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !14352, metadata !DIExpression()), !dbg !14353
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !14354
  ret %struct.rbnode* %2, !dbg !14355
}

; Function Attrs: optsize
declare !dbg !14356 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !14359 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !14371, metadata !DIExpression()), !dbg !14375
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !14376
  %3 = load i32, i32* %2, align 4, !dbg !14376
  %4 = icmp eq i32 %3, 0, !dbg !14378
  br i1 %4, label %10, label %5, !dbg !14379

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14372, metadata !DIExpression()), !dbg !14375
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !14380, !range !3486
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !14381
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14373, metadata !DIExpression()), !dbg !14375
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !14382
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !14374, metadata !DIExpression()), !dbg !14375
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14372, metadata !DIExpression()), !dbg !14375
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !14375
  ret %struct.k_thread* %11, !dbg !14383
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14384 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14388, metadata !DIExpression()), !dbg !14391
  call void @llvm.dbg.value(metadata i32 0, metadata !14389, metadata !DIExpression()), !dbg !14391
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !14392
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14390, metadata !DIExpression()), !dbg !14391
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14393
  br i1 %3, label %8, label %4, !dbg !14394

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !14395
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !14397
  call void @llvm.dbg.value(metadata i32 1, metadata !14389, metadata !DIExpression()), !dbg !14391
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !14392
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14390, metadata !DIExpression()), !dbg !14391
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !14393
  br i1 %7, label %8, label %4, !dbg !14394, !llvm.loop !14398

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !14391
  ret i32 %9, !dbg !14400
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !14401 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14403, metadata !DIExpression()), !dbg !14404
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14405
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !14406
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !14407
  ret %struct.k_thread* %4, !dbg !14408
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !14409 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !14418, metadata !DIExpression()), !dbg !14419
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !14420
  tail call fastcc void @sys_dlist_init.155(%struct._dnode* noundef nonnull %2) #26, !dbg !14421
  ret void, !dbg !14422
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.155(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14423 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14427, metadata !DIExpression()), !dbg !14428
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14429
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14430
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14431
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14432
  ret void, !dbg !14433
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !14434 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !14435
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !14436
  ret void, !dbg !14437
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !14438 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14443, metadata !DIExpression()), !dbg !14444
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14445
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !14445
  %4 = load i8, i8* %3, align 2, !dbg !14445
  %5 = sext i8 %4 to i32, !dbg !14446
  ret i32 %5, !dbg !14447
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14448 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14452, metadata !DIExpression()), !dbg !14455
  call void @llvm.dbg.value(metadata i32 %1, metadata !14453, metadata !DIExpression()), !dbg !14455
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14454, metadata !DIExpression()), !dbg !14455
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !14456
  ret void, !dbg !14457
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !14458 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !14459
  br i1 %1, label %8, label %2, !dbg !14460

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !14461
  br i1 %3, label %8, label %4, !dbg !14462

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14463
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !14464
  %7 = xor i1 %6, true, !dbg !14462
  br label %8, !dbg !14462

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !14465
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !14466 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !14467, !range !6645
  %2 = icmp eq i8 %1, 0, !dbg !14467
  ret i1 %2, !dbg !14468
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !14469 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12965, metadata !DIExpression()) #24, !dbg !14472
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14474, !srcloc !12980
  call void @llvm.dbg.value(metadata i32 undef, metadata !12977, metadata !DIExpression()) #24, !dbg !14476
  call void @llvm.dbg.value(metadata i32 undef, metadata !12978, metadata !DIExpression()) #24, !dbg !14476
  call void @llvm.dbg.value(metadata i32 undef, metadata !12971, metadata !DIExpression()) #24, !dbg !14472
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()), !dbg !14477
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14478
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13134, metadata !DIExpression()) #24, !dbg !14481
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !14483
  %4 = load i8, i8* %3, align 1, !dbg !14484
  %5 = and i8 %4, 127, !dbg !14484
  store i8 %5, i8* %3, align 1, !dbg !14484
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13142, metadata !DIExpression()) #24, !dbg !14485
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !14487
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14488
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13151, metadata !DIExpression()) #24, !dbg !14489
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !14491
  %8 = load i8, i8* %7, align 1, !dbg !14492
  %9 = or i8 %8, -128, !dbg !14492
  store i8 %9, i8* %7, align 1, !dbg !14492
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13158, metadata !DIExpression()) #24, !dbg !14493
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13165, metadata !DIExpression()) #24, !dbg !14495
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13171, metadata !DIExpression()) #24, !dbg !14495
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14497
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13172, metadata !DIExpression()) #24, !dbg !14495
  %11 = icmp eq %struct._dnode* %10, null, !dbg !14498
  br i1 %11, label %22, label %12, !dbg !14497

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !13172, metadata !DIExpression()) #24, !dbg !14495
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !14499
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13172, metadata !DIExpression()) #24, !dbg !14495
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !14500
  %16 = icmp sgt i32 %15, 0, !dbg !14501
  br i1 %16, label %17, label %19, !dbg !14502

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !14503
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !14504
  br label %24, !dbg !14505

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !14498
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !13172, metadata !DIExpression()) #24, !dbg !14495
  %21 = icmp eq %struct._dnode* %20, null, !dbg !14498
  br i1 %21, label %22, label %12, !dbg !14497, !llvm.loop !14506

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !14508
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !14509
  br label %24, !dbg !14510

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !14474
  call void @llvm.dbg.value(metadata i32 %25, metadata !12977, metadata !DIExpression()) #24, !dbg !14476
  call void @llvm.dbg.value(metadata i32 %25, metadata !12971, metadata !DIExpression()) #24, !dbg !14472
  call void @llvm.dbg.value(metadata i32 %25, metadata !14471, metadata !DIExpression()), !dbg !14477
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !14511
  call void @llvm.dbg.value(metadata i32 undef, metadata !13576, metadata !DIExpression()) #24, !dbg !14512
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13581, metadata !DIExpression()) #24, !dbg !14512
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !14514
  ret void, !dbg !14515
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !14516 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !14520, metadata !DIExpression()), !dbg !14523
  %3 = icmp eq i64 %2, -1, !dbg !14524
  br i1 %3, label %4, label %6, !dbg !14526

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14527
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !14529
  br label %11, !dbg !14530

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !14521, metadata !DIExpression()), !dbg !14523
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !14531
  %8 = sext i32 %7 to i64, !dbg !14531
  call void @llvm.dbg.value(metadata i64 %8, metadata !14521, metadata !DIExpression()), !dbg !14523
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !14532
  %10 = trunc i64 %9 to i32, !dbg !14532
  call void @llvm.dbg.value(metadata i32 %10, metadata !14522, metadata !DIExpression()), !dbg !14523
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !14523
  ret i32 %12, !dbg !14533
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14534 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14538, metadata !DIExpression()), !dbg !14539
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14540, !srcloc !14542
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !14543
  ret void, !dbg !14544
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !14545 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14549, metadata !DIExpression()), !dbg !14553
  %2 = icmp eq i64 %0, 0, !dbg !14554
  br i1 %2, label %3, label %4, !dbg !14556

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !14557
  br label %29, !dbg !14559

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !14551, metadata !DIExpression()), !dbg !14553
  %5 = icmp sgt i64 %0, -3, !dbg !14560
  br i1 %5, label %6, label %10, !dbg !14562

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !14563
  %8 = trunc i64 %0 to i32, !dbg !14565
  %9 = add i32 %7, %8, !dbg !14565
  call void @llvm.dbg.value(metadata i32 %9, metadata !14550, metadata !DIExpression()), !dbg !14553
  br label %13, !dbg !14566

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !14567
  %12 = sub i32 -2, %11, !dbg !14567
  call void @llvm.dbg.value(metadata i32 %12, metadata !14550, metadata !DIExpression()), !dbg !14553
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !14569
  call void @llvm.dbg.value(metadata i32 %14, metadata !14550, metadata !DIExpression()), !dbg !14553
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12965, metadata !DIExpression()) #24, !dbg !14570
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14572, !srcloc !12980
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !14572
  call void @llvm.dbg.value(metadata i32 %16, metadata !12977, metadata !DIExpression()) #24, !dbg !14574
  call void @llvm.dbg.value(metadata i32 undef, metadata !12978, metadata !DIExpression()) #24, !dbg !14574
  call void @llvm.dbg.value(metadata i32 %16, metadata !12971, metadata !DIExpression()) #24, !dbg !14570
  call void @llvm.dbg.value(metadata i32 %16, metadata !14552, metadata !DIExpression()), !dbg !14553
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14575
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !14576
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !14577
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14578
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !14579
  tail call fastcc void @z_add_thread_timeout.148(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !14579
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14580
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !14581
  call void @llvm.dbg.value(metadata i32 %16, metadata !13576, metadata !DIExpression()) #24, !dbg !14582
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13581, metadata !DIExpression()) #24, !dbg !14582
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !14584
  %22 = zext i32 %14 to i64, !dbg !14585
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !14586
  %24 = zext i32 %23 to i64, !dbg !14586
  %25 = sub nsw i64 %22, %24, !dbg !14587
  call void @llvm.dbg.value(metadata i64 %25, metadata !14549, metadata !DIExpression()), !dbg !14553
  %26 = icmp sgt i64 %25, 0, !dbg !14588
  %27 = select i1 %26, i64 %25, i64 0, !dbg !14588
  %28 = trunc i64 %27 to i32, !dbg !14588
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !14553
  ret i32 %30, !dbg !14589
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !14590 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14592, metadata !DIExpression()), !dbg !14593
  call void @llvm.dbg.value(metadata i64 %0, metadata !13012, metadata !DIExpression()), !dbg !14594
  call void @llvm.dbg.value(metadata i32 10000, metadata !13015, metadata !DIExpression()), !dbg !14594
  call void @llvm.dbg.value(metadata i32 1000, metadata !13016, metadata !DIExpression()), !dbg !14594
  call void @llvm.dbg.value(metadata i8 1, metadata !13017, metadata !DIExpression()), !dbg !14594
  call void @llvm.dbg.value(metadata i1 false, metadata !13018, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14594
  call void @llvm.dbg.value(metadata i1 false, metadata !13019, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14594
  call void @llvm.dbg.value(metadata i8 0, metadata !13020, metadata !DIExpression()), !dbg !14594
  call void @llvm.dbg.value(metadata i1 false, metadata !13021, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14594
  call void @llvm.dbg.value(metadata i1 true, metadata !13022, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14594
  call void @llvm.dbg.value(metadata i64 0, metadata !13023, metadata !DIExpression()), !dbg !14594
  call void @llvm.dbg.value(metadata i64 0, metadata !13023, metadata !DIExpression()), !dbg !14594
  call void @llvm.dbg.value(metadata i64 %0, metadata !13012, metadata !DIExpression()), !dbg !14594
  %2 = udiv i64 %0, 10, !dbg !14596
  ret i64 %2, !dbg !14600
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !14601 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14602, !srcloc !14604
  tail call void @z_impl_k_yield() #26, !dbg !14605
  ret void, !dbg !14606
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !14607 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14611, metadata !DIExpression()), !dbg !14613
  %2 = sext i32 %0 to i64, !dbg !14614
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !14615
  call void @llvm.dbg.value(metadata i64 %3, metadata !14612, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14613
  %4 = shl i64 %3, 32, !dbg !14616
  %5 = ashr exact i64 %4, 32, !dbg !14616
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !14617
  call void @llvm.dbg.value(metadata i32 %6, metadata !14612, metadata !DIExpression()), !dbg !14613
  %7 = sext i32 %6 to i64, !dbg !14618
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !14619
  %9 = trunc i64 %8 to i32, !dbg !14619
  ret i32 %9, !dbg !14620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !14621 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14623, metadata !DIExpression()), !dbg !14624
  call void @llvm.dbg.value(metadata i64 %0, metadata !13012, metadata !DIExpression()), !dbg !14625
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13015, metadata !DIExpression()), !dbg !14625
  call void @llvm.dbg.value(metadata i32 10000, metadata !13016, metadata !DIExpression()), !dbg !14625
  call void @llvm.dbg.value(metadata i8 1, metadata !13017, metadata !DIExpression()), !dbg !14625
  call void @llvm.dbg.value(metadata i1 false, metadata !13018, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14625
  call void @llvm.dbg.value(metadata i1 true, metadata !13019, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14625
  call void @llvm.dbg.value(metadata i8 0, metadata !13020, metadata !DIExpression()), !dbg !14625
  call void @llvm.dbg.value(metadata i1 false, metadata !13021, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14625
  call void @llvm.dbg.value(metadata i1 true, metadata !13022, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14625
  call void @llvm.dbg.value(metadata i64 0, metadata !13023, metadata !DIExpression()), !dbg !14625
  call void @llvm.dbg.value(metadata i64 0, metadata !13023, metadata !DIExpression()), !dbg !14625
  %2 = add i64 %0, 99, !dbg !14627
  call void @llvm.dbg.value(metadata i64 %2, metadata !13012, metadata !DIExpression()), !dbg !14625
  %3 = udiv i64 %2, 100, !dbg !14628
  ret i64 %3, !dbg !14629
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !14630 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14632, metadata !DIExpression()), !dbg !14633
  call void @llvm.dbg.value(metadata i64 %0, metadata !13012, metadata !DIExpression()), !dbg !14634
  call void @llvm.dbg.value(metadata i32 10000, metadata !13015, metadata !DIExpression()), !dbg !14634
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13016, metadata !DIExpression()), !dbg !14634
  call void @llvm.dbg.value(metadata i8 1, metadata !13017, metadata !DIExpression()), !dbg !14634
  call void @llvm.dbg.value(metadata i1 false, metadata !13018, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14634
  call void @llvm.dbg.value(metadata i1 false, metadata !13019, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14634
  call void @llvm.dbg.value(metadata i8 0, metadata !13020, metadata !DIExpression()), !dbg !14634
  call void @llvm.dbg.value(metadata i1 true, metadata !13021, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14634
  call void @llvm.dbg.value(metadata i1 false, metadata !13022, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14634
  call void @llvm.dbg.value(metadata i64 0, metadata !13023, metadata !DIExpression()), !dbg !14634
  call void @llvm.dbg.value(metadata i64 0, metadata !13023, metadata !DIExpression()), !dbg !14634
  %2 = mul i64 %0, 100, !dbg !14636
  ret i64 %2, !dbg !14638
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14639 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14641, metadata !DIExpression()), !dbg !14642
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !14643
  br i1 %2, label %14, label %3, !dbg !14645

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14646
  %5 = icmp slt i32 %4, 0, !dbg !14648
  br i1 %5, label %6, label %10, !dbg !14649

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14650
  %8 = load i8, i8* %7, align 1, !dbg !14650
  %9 = icmp eq i8 %8, 16, !dbg !14653
  br i1 %9, label %10, label %14, !dbg !14654

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !14655
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14656
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14657, !srcloc !13616
  call void @llvm.dbg.value(metadata i32 %11, metadata !13612, metadata !DIExpression()) #24, !dbg !14661
  %12 = icmp eq i32 %11, 0, !dbg !14662
  br i1 %12, label %13, label %14, !dbg !14663

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14664
  br label %14, !dbg !14666

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !14667
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14668 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14670, metadata !DIExpression()), !dbg !14671
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14672
  %3 = load i8, i8* %2, align 1, !dbg !14672
  %4 = and i8 %3, 2, !dbg !14673
  %5 = icmp ne i8 %4, 0, !dbg !14674
  ret i1 %5, !dbg !14675
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !14676 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14681
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14680, metadata !DIExpression()), !dbg !14682
  ret %struct.k_thread* %1, !dbg !14683
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !14684 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14685, !srcloc !13616
  call void @llvm.dbg.value(metadata i32 %1, metadata !13612, metadata !DIExpression()) #24, !dbg !14688
  %2 = icmp eq i32 %1, 0, !dbg !14689
  br i1 %2, label %3, label %8, !dbg !14690

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14691
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !14692
  %6 = icmp ne i32 %5, 0, !dbg !14690
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !14693
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14694 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14696, metadata !DIExpression()), !dbg !14698
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12965, metadata !DIExpression()) #24, !dbg !14699
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14701, !srcloc !12980
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14701
  call void @llvm.dbg.value(metadata i32 %3, metadata !12977, metadata !DIExpression()) #24, !dbg !14703
  call void @llvm.dbg.value(metadata i32 undef, metadata !12978, metadata !DIExpression()) #24, !dbg !14703
  call void @llvm.dbg.value(metadata i32 %3, metadata !12971, metadata !DIExpression()) #24, !dbg !14699
  call void @llvm.dbg.value(metadata i32 %3, metadata !14697, metadata !DIExpression()), !dbg !14698
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14704
  %5 = load i8, i8* %4, align 4, !dbg !14704
  %6 = and i8 %5, 1, !dbg !14706
  %7 = icmp eq i8 %6, 0, !dbg !14707
  br i1 %7, label %9, label %8, !dbg !14708

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12992, metadata !DIExpression()) #24, !dbg !14709
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12997, metadata !DIExpression()) #24, !dbg !14709
  call void @llvm.dbg.value(metadata i32 %3, metadata !13000, metadata !DIExpression()) #24, !dbg !14712
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14714, !srcloc !13006
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #24, !dbg !14715, !srcloc !14717
  br label %24, !dbg !14718

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14719
  %11 = load i8, i8* %10, align 1, !dbg !14719
  %12 = and i8 %11, 8, !dbg !14721
  %13 = icmp eq i8 %12, 0, !dbg !14722
  br i1 %13, label %15, label %14, !dbg !14723

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !12992, metadata !DIExpression()) #24, !dbg !14724
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12997, metadata !DIExpression()) #24, !dbg !14724
  call void @llvm.dbg.value(metadata i32 %3, metadata !13000, metadata !DIExpression()) #24, !dbg !14727
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14729, !srcloc !13006
  br label %24, !dbg !14730

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !14731
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14732
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !14734
  br i1 %17, label %18, label %23, !dbg !14735

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14736, !srcloc !13616
  call void @llvm.dbg.value(metadata i32 %19, metadata !13612, metadata !DIExpression()) #24, !dbg !14739
  %20 = icmp eq i32 %19, 0, !dbg !14740
  br i1 %20, label %21, label %23, !dbg !14741

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !13576, metadata !DIExpression()) #24, !dbg !14742
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13581, metadata !DIExpression()) #24, !dbg !14742
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !14745
  br label %23, !dbg !14746

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !12992, metadata !DIExpression()) #24, !dbg !14747
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12997, metadata !DIExpression()) #24, !dbg !14747
  call void @llvm.dbg.value(metadata i32 %3, metadata !13000, metadata !DIExpression()) #24, !dbg !14749
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14751, !srcloc !13006
  br label %24, !dbg !14752

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !14752
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14753 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14755, metadata !DIExpression()), !dbg !14756
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14757
  %3 = load i8, i8* %2, align 1, !dbg !14757
  %4 = and i8 %3, 8, !dbg !14759
  %5 = icmp eq i8 %4, 0, !dbg !14760
  br i1 %5, label %6, label %20, !dbg !14761

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !14762
  %8 = or i8 %7, 8, !dbg !14762
  store i8 %8, i8* %2, align 1, !dbg !14762
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !14764
  br i1 %9, label %10, label %12, !dbg !14766

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13134, metadata !DIExpression()) #24, !dbg !14767
  %11 = and i8 %8, 95, !dbg !14770
  store i8 %11, i8* %2, align 1, !dbg !14770
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13142, metadata !DIExpression()) #24, !dbg !14771
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !14773
  br label %12, !dbg !14774

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14775
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !14775
  %15 = icmp eq %union.anon* %14, null, !dbg !14777
  br i1 %15, label %17, label %16, !dbg !14778

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !14779
  br label %17, !dbg !14781

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !14782
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14783
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #26, !dbg !14784
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !14785
  br label %20, !dbg !14786

20:                                               ; preds = %17, %1
  ret void, !dbg !14787
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !14788 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14792, metadata !DIExpression()), !dbg !14794
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !14795
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14793, metadata !DIExpression()), !dbg !14794
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14796
  br i1 %3, label %10, label %4, !dbg !14797

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !14798
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !14800
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14801, metadata !DIExpression()), !dbg !14807
  call void @llvm.dbg.value(metadata i32 0, metadata !14806, metadata !DIExpression()), !dbg !14807
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !14809
  store i32 0, i32* %7, align 4, !dbg !14810
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !14811
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !14795
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !14793, metadata !DIExpression()), !dbg !14794
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !14796
  br i1 %9, label %10, label %4, !dbg !14797, !llvm.loop !14812

10:                                               ; preds = %4, %1
  ret void, !dbg !14814
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14815 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14820, metadata !DIExpression()), !dbg !14823
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14819, metadata !DIExpression()), !dbg !14823
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12965, metadata !DIExpression()) #24, !dbg !14824
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14826, !srcloc !12980
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14826
  call void @llvm.dbg.value(metadata i32 %4, metadata !12977, metadata !DIExpression()) #24, !dbg !14828
  call void @llvm.dbg.value(metadata i32 undef, metadata !12978, metadata !DIExpression()) #24, !dbg !14828
  call void @llvm.dbg.value(metadata i32 %4, metadata !12971, metadata !DIExpression()) #24, !dbg !14824
  call void @llvm.dbg.value(metadata i32 %4, metadata !14821, metadata !DIExpression()), !dbg !14823
  call void @llvm.dbg.value(metadata i32 0, metadata !14822, metadata !DIExpression()), !dbg !14823
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14829
  %6 = load i8, i8* %5, align 1, !dbg !14829
  %7 = and i8 %6, 8, !dbg !14831
  %8 = icmp eq i8 %7, 0, !dbg !14832
  br i1 %8, label %9, label %24, !dbg !14833

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !14820, metadata !DIExpression()), !dbg !14823
  %11 = icmp eq i64 %10, 0, !dbg !14834
  br i1 %11, label %24, label %12, !dbg !14836

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14837
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !14839
  br i1 %14, label %24, label %15, !dbg !14840

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14841
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !14841
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !14842
  %19 = icmp eq %union.anon* %17, %18, !dbg !14843
  br i1 %19, label %24, label %20, !dbg !14844

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14845
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #26, !dbg !14847
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14848
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !14849
  call void @llvm.dbg.value(metadata i32 %4, metadata !13576, metadata !DIExpression()) #24, !dbg !14850
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13581, metadata !DIExpression()) #24, !dbg !14850
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !14852
  call void @llvm.dbg.value(metadata i32 %23, metadata !14822, metadata !DIExpression()), !dbg !14823
  br label %26, !dbg !14853

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !14854
  call void @llvm.dbg.value(metadata i32 %25, metadata !14822, metadata !DIExpression()), !dbg !14823
  call void @llvm.dbg.value(metadata i32 %4, metadata !12992, metadata !DIExpression()) #24, !dbg !14855
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12997, metadata !DIExpression()) #24, !dbg !14855
  call void @llvm.dbg.value(metadata i32 %4, metadata !13000, metadata !DIExpression()) #24, !dbg !14857
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14859, !srcloc !13006
  br label %26, !dbg !14860

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !14823
  ret i32 %27, !dbg !14861
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14862 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14866, metadata !DIExpression()), !dbg !14874
  call void @llvm.dbg.value(metadata i32 %1, metadata !14867, metadata !DIExpression()), !dbg !14874
  call void @llvm.dbg.value(metadata i8* %2, metadata !14868, metadata !DIExpression()), !dbg !14874
  call void @llvm.dbg.value(metadata i8 0, metadata !14870, metadata !DIExpression()), !dbg !14874
  call void @llvm.dbg.value(metadata i32 0, metadata !14871, metadata !DIExpression()), !dbg !14875
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12965, metadata !DIExpression()) #24, !dbg !14876
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14878, !srcloc !12980
  call void @llvm.dbg.value(metadata i32 undef, metadata !12977, metadata !DIExpression()) #24, !dbg !14880
  call void @llvm.dbg.value(metadata i32 undef, metadata !12978, metadata !DIExpression()) #24, !dbg !14880
  call void @llvm.dbg.value(metadata i32 undef, metadata !12971, metadata !DIExpression()) #24, !dbg !14876
  call void @llvm.dbg.value(metadata i32 undef, metadata !14873, metadata !DIExpression()), !dbg !14875
  call void @llvm.dbg.value(metadata i8 poison, metadata !14870, metadata !DIExpression()), !dbg !14874
  call void @llvm.dbg.value(metadata i32 undef, metadata !14871, metadata !DIExpression()), !dbg !14875
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !14881
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14869, metadata !DIExpression()), !dbg !14874
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !14884
  br i1 %7, label %12, label %8, !dbg !14886

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14887, metadata !DIExpression()), !dbg !14895
  call void @llvm.dbg.value(metadata i32 %1, metadata !14893, metadata !DIExpression()), !dbg !14895
  call void @llvm.dbg.value(metadata i8* %2, metadata !14894, metadata !DIExpression()), !dbg !14895
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14801, metadata !DIExpression()), !dbg !14898
  call void @llvm.dbg.value(metadata i32 %1, metadata !14806, metadata !DIExpression()), !dbg !14898
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !14900
  store i32 %1, i32* %9, align 4, !dbg !14901
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !14902
  store i8* %2, i8** %10, align 4, !dbg !14903
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !14904
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !14905
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !14906
  call void @llvm.dbg.value(metadata i8 1, metadata !14870, metadata !DIExpression()), !dbg !14874
  br label %12, !dbg !14907

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !14878
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !14878
  call void @llvm.dbg.value(metadata i32 %14, metadata !12977, metadata !DIExpression()) #24, !dbg !14880
  call void @llvm.dbg.value(metadata i32 %14, metadata !12971, metadata !DIExpression()) #24, !dbg !14876
  call void @llvm.dbg.value(metadata i32 %14, metadata !14873, metadata !DIExpression()), !dbg !14875
  call void @llvm.dbg.value(metadata i8 poison, metadata !14870, metadata !DIExpression()), !dbg !14874
  call void @llvm.dbg.value(metadata i32 undef, metadata !12992, metadata !DIExpression()) #24, !dbg !14908
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12997, metadata !DIExpression()) #24, !dbg !14908
  call void @llvm.dbg.value(metadata i32 undef, metadata !13000, metadata !DIExpression()) #24, !dbg !14910
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !14912, !srcloc !13006
  call void @llvm.dbg.value(metadata i32 undef, metadata !14871, metadata !DIExpression()), !dbg !14875
  ret i1 %13, !dbg !14913
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !14914 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14920, metadata !DIExpression()), !dbg !14925
  call void @llvm.dbg.value(metadata i64 undef, metadata !14922, metadata !DIExpression()), !dbg !14925
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14919, metadata !DIExpression()), !dbg !14925
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !14921, metadata !DIExpression()), !dbg !14925
  call void @llvm.dbg.value(metadata i8** %4, metadata !14923, metadata !DIExpression()), !dbg !14925
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !14926
  call void @llvm.dbg.value(metadata i32 %6, metadata !14924, metadata !DIExpression()), !dbg !14925
  %7 = icmp eq i8** %4, null, !dbg !14927
  br i1 %7, label %12, label %8, !dbg !14929

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14930
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !14932
  %11 = load i8*, i8** %10, align 4, !dbg !14932
  store i8* %11, i8** %4, align 4, !dbg !14933
  br label %12, !dbg !14934

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !14935
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !14936 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !14938
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !14939
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_rom_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_data_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_data_start to i32))) #25, !dbg !14940
  ret void, !dbg !14941
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14942 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !14952, metadata !DIExpression()), !dbg !14969
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14950, metadata !DIExpression()), !dbg !14969
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !14951, metadata !DIExpression()), !dbg !14969
  %5 = icmp eq i64 %4, -1, !dbg !14970
  br i1 %5, label %55, label %6, !dbg !14972

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !14973
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !14974
  call void @llvm.dbg.value(metadata i32 0, metadata !14953, metadata !DIExpression()), !dbg !14975
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14976, metadata !DIExpression()) #24, !dbg !14983
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14985, !srcloc !14991
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !14985
  call void @llvm.dbg.value(metadata i32 %9, metadata !14988, metadata !DIExpression()) #24, !dbg !14992
  call void @llvm.dbg.value(metadata i32 undef, metadata !14989, metadata !DIExpression()) #24, !dbg !14992
  call void @llvm.dbg.value(metadata i32 %9, metadata !14982, metadata !DIExpression()) #24, !dbg !14983
  call void @llvm.dbg.value(metadata i32 %9, metadata !14959, metadata !DIExpression()), !dbg !14975
  call void @llvm.dbg.value(metadata i32 undef, metadata !14953, metadata !DIExpression()), !dbg !14975
  %10 = icmp slt i64 %4, -1, !dbg !14993
  br i1 %10, label %11, label %17, !dbg !14994

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !14995
  %13 = add i64 %4, %12, !dbg !14996
  %14 = sub i64 -2, %13, !dbg !14996
  call void @llvm.dbg.value(metadata i64 %14, metadata !14963, metadata !DIExpression()), !dbg !14997
  %15 = icmp sgt i64 %14, 1, !dbg !14998
  %16 = select i1 %15, i64 %14, i64 1, !dbg !14998
  br label %22, !dbg !14999

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !15000
  %19 = tail call fastcc i32 @elapsed.166() #26, !dbg !15002
  %20 = sext i32 %19 to i64, !dbg !15002
  %21 = add nsw i64 %18, %20, !dbg !15003
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !15004
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15005
  store i64 %23, i64* %24, align 8, !dbg !15006
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !15007
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !14960, metadata !DIExpression()), !dbg !15009
  %26 = icmp eq %struct._timeout* %25, null, !dbg !15010
  br i1 %26, label %42, label %27, !dbg !15010

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !15011
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !14960, metadata !DIExpression()), !dbg !15009
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15015
  %31 = load i64, i64* %30, align 8, !dbg !15015
  %32 = icmp slt i64 %28, %31, !dbg !15016
  br i1 %32, label %33, label %38, !dbg !15017

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15015
  %35 = sub nsw i64 %31, %28, !dbg !15018
  store i64 %35, i64* %34, align 8, !dbg !15018
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !15020
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15021
  tail call fastcc void @sys_dlist_insert.167(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !15022
  br label %44, !dbg !15023

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !15024
  store i64 %39, i64* %24, align 8, !dbg !15024
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !15025
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !14960, metadata !DIExpression()), !dbg !15009
  %41 = icmp eq %struct._timeout* %40, null, !dbg !15010
  br i1 %41, label %42, label %27, !dbg !15010, !llvm.loop !15026

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15028
  tail call fastcc void @sys_dlist_append.168(%struct._dnode* noundef %43) #26, !dbg !15031
  br label %44, !dbg !15032

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !15033
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !15034
  br i1 %46, label %47, label %54, !dbg !15035

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !15036
  call void @llvm.dbg.value(metadata i32 %48, metadata !14966, metadata !DIExpression()), !dbg !15037
  %49 = icmp ne i32 %48, 0, !dbg !15038
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !15040
  br i1 %52, label %54, label %53, !dbg !15040

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !15041
  br label %54, !dbg !15043

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !15044, metadata !DIExpression()) #24, !dbg !15050
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15049, metadata !DIExpression()) #24, !dbg !15050
  call void @llvm.dbg.value(metadata i32 %9, metadata !15052, metadata !DIExpression()) #24, !dbg !15055
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !15057, !srcloc !15058
  call void @llvm.dbg.value(metadata i32 undef, metadata !14953, metadata !DIExpression()), !dbg !14975
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !15059
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.166() unnamed_addr #1 !dbg !15060 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !15063
  %2 = icmp eq i32 %1, 0, !dbg !15064
  br i1 %2, label %3, label %5, !dbg !15063

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !15065
  br label %5, !dbg !15063

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !15063
  ret i32 %6, !dbg !15066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !15067 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.171() #26, !dbg !15073
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15071, metadata !DIExpression()), !dbg !15074
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !15075
  ret %struct._timeout* %2, !dbg !15076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.167(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !15077 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15081, metadata !DIExpression()), !dbg !15085
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15082, metadata !DIExpression()), !dbg !15085
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15086
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15086
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15083, metadata !DIExpression()), !dbg !15085
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15087
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15088
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15089
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15090
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15091
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15092
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15093
  ret void, !dbg !15094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !15095 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15099, metadata !DIExpression()), !dbg !15101
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15102
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.169(%struct._dnode* noundef %2) #26, !dbg !15103
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15100, metadata !DIExpression()), !dbg !15101
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !15104
  ret %struct._timeout* %4, !dbg !15105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.168(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !15106 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15111, metadata !DIExpression()), !dbg !15114
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15112, metadata !DIExpression()), !dbg !15114
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15115
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15113, metadata !DIExpression()), !dbg !15114
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15116
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !15117
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15118
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !15119
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !15120
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15121
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15122
  ret void, !dbg !15123
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !15124 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !15129
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !15126, metadata !DIExpression()), !dbg !15130
  %2 = tail call fastcc i32 @elapsed.166() #26, !dbg !15131
  call void @llvm.dbg.value(metadata i32 %2, metadata !15127, metadata !DIExpression()), !dbg !15130
  %3 = icmp eq %struct._timeout* %1, null, !dbg !15132
  br i1 %3, label %14, label %4, !dbg !15134

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !15135
  %6 = load i64, i64* %5, align 8, !dbg !15135
  %7 = sext i32 %2 to i64, !dbg !15136
  %8 = sub nsw i64 %6, %7, !dbg !15137
  %9 = icmp sgt i64 %8, 2147483647, !dbg !15138
  br i1 %9, label %14, label %10, !dbg !15139

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !15140
  %12 = select i1 %11, i64 %8, i64 0, !dbg !15140
  %13 = trunc i64 %12 to i32, !dbg !15140
  call void @llvm.dbg.value(metadata i32 %13, metadata !15128, metadata !DIExpression()), !dbg !15130
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !15142
  call void @llvm.dbg.value(metadata i32 %15, metadata !15128, metadata !DIExpression()), !dbg !15130
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15143
  %17 = icmp ne i32 %16, 0, !dbg !15145
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !15146
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !15146
  call void @llvm.dbg.value(metadata i32 %20, metadata !15128, metadata !DIExpression()), !dbg !15130
  ret i32 %20, !dbg !15147
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.169(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15148 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15152, metadata !DIExpression()), !dbg !15154
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15153, metadata !DIExpression()), !dbg !15154
  %2 = icmp eq %struct._dnode* %0, null, !dbg !15155
  br i1 %2, label %5, label %3, !dbg !15156

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.170(%struct._dnode* noundef nonnull %0) #26, !dbg !15157
  br label %5, !dbg !15156

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !15156
  ret %struct._dnode* %6, !dbg !15158
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.170(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15159 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15161, metadata !DIExpression()), !dbg !15163
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15162, metadata !DIExpression()), !dbg !15163
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15164
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !15165
  br i1 %3, label %7, label %4, !dbg !15166

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15167
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !15167
  br label %7, !dbg !15166

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !15166
  ret %struct._dnode* %8, !dbg !15168
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.171() unnamed_addr #5 !dbg !15169 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15173, metadata !DIExpression()), !dbg !15174
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.172() #26, !dbg !15175
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !15175
  ret %struct._dnode* %3, !dbg !15176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.172() unnamed_addr #5 !dbg !15177 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15181, metadata !DIExpression()), !dbg !15182
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !15183
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !15184
  ret i1 %2, !dbg !15185
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15186 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15190, metadata !DIExpression()), !dbg !15195
  call void @llvm.dbg.value(metadata i32 -22, metadata !15191, metadata !DIExpression()), !dbg !15195
  call void @llvm.dbg.value(metadata i32 0, metadata !15192, metadata !DIExpression()), !dbg !15196
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14976, metadata !DIExpression()) #24, !dbg !15197
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15199, !srcloc !14991
  call void @llvm.dbg.value(metadata i32 undef, metadata !14988, metadata !DIExpression()) #24, !dbg !15201
  call void @llvm.dbg.value(metadata i32 undef, metadata !14989, metadata !DIExpression()) #24, !dbg !15201
  call void @llvm.dbg.value(metadata i32 undef, metadata !14982, metadata !DIExpression()) #24, !dbg !15197
  call void @llvm.dbg.value(metadata i32 undef, metadata !15194, metadata !DIExpression()), !dbg !15196
  call void @llvm.dbg.value(metadata i32 -22, metadata !15191, metadata !DIExpression()), !dbg !15195
  call void @llvm.dbg.value(metadata i32 undef, metadata !15192, metadata !DIExpression()), !dbg !15196
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !15191, metadata !DIExpression()), !dbg !15195
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.175(%struct._dnode* noundef %3) #26, !dbg !15202
  br i1 %4, label %5, label %6, !dbg !15206

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !15207
  call void @llvm.dbg.value(metadata i32 0, metadata !15191, metadata !DIExpression()), !dbg !15195
  br label %6, !dbg !15209

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !15195
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15199
  call void @llvm.dbg.value(metadata i32 %8, metadata !14988, metadata !DIExpression()) #24, !dbg !15201
  call void @llvm.dbg.value(metadata i32 %8, metadata !14982, metadata !DIExpression()) #24, !dbg !15197
  call void @llvm.dbg.value(metadata i32 %8, metadata !15194, metadata !DIExpression()), !dbg !15196
  call void @llvm.dbg.value(metadata i32 %7, metadata !15191, metadata !DIExpression()), !dbg !15195
  call void @llvm.dbg.value(metadata i32 undef, metadata !15044, metadata !DIExpression()) #24, !dbg !15210
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15049, metadata !DIExpression()) #24, !dbg !15210
  call void @llvm.dbg.value(metadata i32 undef, metadata !15052, metadata !DIExpression()) #24, !dbg !15212
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !15214, !srcloc !15058
  call void @llvm.dbg.value(metadata i32 undef, metadata !15192, metadata !DIExpression()), !dbg !15196
  ret i32 %7, !dbg !15215
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.175(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15216 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15222, metadata !DIExpression()), !dbg !15223
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15224
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15224
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15225
  ret i1 %4, !dbg !15226
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #7 !dbg !15227 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15229, metadata !DIExpression()), !dbg !15230
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !15231
  %3 = icmp eq %struct._timeout* %2, null, !dbg !15233
  br i1 %3, label %10, label %4, !dbg !15234

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15235
  %6 = load i64, i64* %5, align 8, !dbg !15235
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !15237
  %8 = load i64, i64* %7, align 8, !dbg !15238
  %9 = add nsw i64 %8, %6, !dbg !15238
  store i64 %9, i64* %7, align 8, !dbg !15238
  br label %10, !dbg !15239

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15240
  tail call fastcc void @sys_dlist_remove.176(%struct._dnode* noundef %11) #26, !dbg !15241
  ret void, !dbg !15242
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.176(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !15243 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15247, metadata !DIExpression()), !dbg !15250
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15251
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15251
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15248, metadata !DIExpression()), !dbg !15250
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15252
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15252
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15249, metadata !DIExpression()), !dbg !15250
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15253
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15254
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15255
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15256
  tail call fastcc void @sys_dnode_init.177(%struct._dnode* noundef %0) #26, !dbg !15257
  ret void, !dbg !15258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.177(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !15259 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15261, metadata !DIExpression()), !dbg !15262
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15263
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15264
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15265
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15266
  ret void, !dbg !15267
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15268 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15274, metadata !DIExpression()), !dbg !15279
  call void @llvm.dbg.value(metadata i64 0, metadata !15275, metadata !DIExpression()), !dbg !15279
  call void @llvm.dbg.value(metadata i32 0, metadata !15276, metadata !DIExpression()), !dbg !15280
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14976, metadata !DIExpression()) #24, !dbg !15281
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15283, !srcloc !14991
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15283
  call void @llvm.dbg.value(metadata i32 %3, metadata !14988, metadata !DIExpression()) #24, !dbg !15285
  call void @llvm.dbg.value(metadata i32 undef, metadata !14989, metadata !DIExpression()) #24, !dbg !15285
  call void @llvm.dbg.value(metadata i32 %3, metadata !14982, metadata !DIExpression()) #24, !dbg !15281
  call void @llvm.dbg.value(metadata i32 %3, metadata !15278, metadata !DIExpression()), !dbg !15280
  call void @llvm.dbg.value(metadata i64 0, metadata !15275, metadata !DIExpression()), !dbg !15279
  call void @llvm.dbg.value(metadata i32 undef, metadata !15276, metadata !DIExpression()), !dbg !15280
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !15286
  call void @llvm.dbg.value(metadata i64 %4, metadata !15275, metadata !DIExpression()), !dbg !15279
  call void @llvm.dbg.value(metadata i32 %3, metadata !15044, metadata !DIExpression()) #24, !dbg !15289
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15049, metadata !DIExpression()) #24, !dbg !15289
  call void @llvm.dbg.value(metadata i32 %3, metadata !15052, metadata !DIExpression()) #24, !dbg !15291
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15293, !srcloc !15058
  call void @llvm.dbg.value(metadata i32 undef, metadata !15276, metadata !DIExpression()), !dbg !15280
  ret i64 %4, !dbg !15294
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !15295 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15297, metadata !DIExpression()), !dbg !15301
  call void @llvm.dbg.value(metadata i64 0, metadata !15298, metadata !DIExpression()), !dbg !15301
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.178(%struct._timeout* noundef %0) #26, !dbg !15302
  br i1 %2, label %21, label %3, !dbg !15304

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !15305
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !15299, metadata !DIExpression()), !dbg !15306
  call void @llvm.dbg.value(metadata i64 0, metadata !15298, metadata !DIExpression()), !dbg !15301
  %5 = icmp eq %struct._timeout* %4, null, !dbg !15307
  br i1 %5, label %16, label %6, !dbg !15309

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !15299, metadata !DIExpression()), !dbg !15306
  call void @llvm.dbg.value(metadata i64 %8, metadata !15298, metadata !DIExpression()), !dbg !15301
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !15310
  %10 = load i64, i64* %9, align 8, !dbg !15310
  %11 = add nsw i64 %10, %8, !dbg !15312
  call void @llvm.dbg.value(metadata i64 %11, metadata !15298, metadata !DIExpression()), !dbg !15301
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !15313
  br i1 %12, label %16, label %13, !dbg !15315

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !15316
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !15299, metadata !DIExpression()), !dbg !15306
  call void @llvm.dbg.value(metadata i64 %11, metadata !15298, metadata !DIExpression()), !dbg !15301
  %15 = icmp eq %struct._timeout* %14, null, !dbg !15307
  br i1 %15, label %16, label %6, !dbg !15309, !llvm.loop !15317

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !15301
  call void @llvm.dbg.value(metadata i64 %17, metadata !15298, metadata !DIExpression()), !dbg !15301
  %18 = tail call fastcc i32 @elapsed.166() #26, !dbg !15319
  %19 = sext i32 %18 to i64, !dbg !15319
  %20 = sub nsw i64 %17, %19, !dbg !15320
  br label %21, !dbg !15321

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !15301
  ret i64 %22, !dbg !15322
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.178(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15323 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15327, metadata !DIExpression()), !dbg !15328
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15329
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.175(%struct._dnode* noundef %2) #26, !dbg !15330
  %4 = xor i1 %3, true, !dbg !15331
  ret i1 %4, !dbg !15332
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15333 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15335, metadata !DIExpression()), !dbg !15340
  call void @llvm.dbg.value(metadata i64 0, metadata !15336, metadata !DIExpression()), !dbg !15340
  call void @llvm.dbg.value(metadata i32 0, metadata !15337, metadata !DIExpression()), !dbg !15341
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14976, metadata !DIExpression()) #24, !dbg !15342
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15344, !srcloc !14991
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15344
  call void @llvm.dbg.value(metadata i32 %3, metadata !14988, metadata !DIExpression()) #24, !dbg !15346
  call void @llvm.dbg.value(metadata i32 undef, metadata !14989, metadata !DIExpression()) #24, !dbg !15346
  call void @llvm.dbg.value(metadata i32 %3, metadata !14982, metadata !DIExpression()) #24, !dbg !15342
  call void @llvm.dbg.value(metadata i32 %3, metadata !15339, metadata !DIExpression()), !dbg !15341
  call void @llvm.dbg.value(metadata i64 0, metadata !15336, metadata !DIExpression()), !dbg !15340
  call void @llvm.dbg.value(metadata i32 undef, metadata !15337, metadata !DIExpression()), !dbg !15341
  %4 = load i64, i64* @curr_tick, align 8, !dbg !15347
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !15350
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !15336, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15340
  call void @llvm.dbg.value(metadata i32 %3, metadata !15044, metadata !DIExpression()) #24, !dbg !15351
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15049, metadata !DIExpression()) #24, !dbg !15351
  call void @llvm.dbg.value(metadata i32 %3, metadata !15052, metadata !DIExpression()) #24, !dbg !15353
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15355, !srcloc !15058
  call void @llvm.dbg.value(metadata i32 undef, metadata !15337, metadata !DIExpression()), !dbg !15341
  %6 = add i64 %5, %4, !dbg !15356
  ret i64 %6, !dbg !15357
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !15358 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !15360, metadata !DIExpression()), !dbg !15364
  call void @llvm.dbg.value(metadata i32 0, metadata !15361, metadata !DIExpression()), !dbg !15365
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14976, metadata !DIExpression()) #24, !dbg !15366
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15368, !srcloc !14991
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15368
  call void @llvm.dbg.value(metadata i32 %2, metadata !14988, metadata !DIExpression()) #24, !dbg !15370
  call void @llvm.dbg.value(metadata i32 undef, metadata !14989, metadata !DIExpression()) #24, !dbg !15370
  call void @llvm.dbg.value(metadata i32 %2, metadata !14982, metadata !DIExpression()) #24, !dbg !15366
  call void @llvm.dbg.value(metadata i32 %2, metadata !15363, metadata !DIExpression()), !dbg !15365
  call void @llvm.dbg.value(metadata i32 -1, metadata !15360, metadata !DIExpression()), !dbg !15364
  call void @llvm.dbg.value(metadata i32 undef, metadata !15361, metadata !DIExpression()), !dbg !15365
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !15371
  call void @llvm.dbg.value(metadata i32 %3, metadata !15360, metadata !DIExpression()), !dbg !15364
  call void @llvm.dbg.value(metadata i32 %2, metadata !15044, metadata !DIExpression()) #24, !dbg !15374
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15049, metadata !DIExpression()) #24, !dbg !15374
  call void @llvm.dbg.value(metadata i32 %2, metadata !15052, metadata !DIExpression()) #24, !dbg !15376
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !15378, !srcloc !15058
  call void @llvm.dbg.value(metadata i32 undef, metadata !15361, metadata !DIExpression()), !dbg !15365
  ret i32 %3, !dbg !15379
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !15380 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15382, metadata !DIExpression()), !dbg !15392
  call void @llvm.dbg.value(metadata i1 %1, metadata !15383, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15392
  call void @llvm.dbg.value(metadata i32 0, metadata !15384, metadata !DIExpression()), !dbg !15393
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14976, metadata !DIExpression()) #24, !dbg !15394
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15396, !srcloc !14991
  call void @llvm.dbg.value(metadata i32 undef, metadata !14988, metadata !DIExpression()) #24, !dbg !15398
  call void @llvm.dbg.value(metadata i32 undef, metadata !14989, metadata !DIExpression()) #24, !dbg !15398
  call void @llvm.dbg.value(metadata i32 undef, metadata !14982, metadata !DIExpression()) #24, !dbg !15394
  call void @llvm.dbg.value(metadata i32 undef, metadata !15386, metadata !DIExpression()), !dbg !15393
  call void @llvm.dbg.value(metadata i32 undef, metadata !15384, metadata !DIExpression()), !dbg !15393
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !15399
  call void @llvm.dbg.value(metadata i32 %4, metadata !15387, metadata !DIExpression()), !dbg !15400
  call void @llvm.dbg.value(metadata i1 undef, metadata !15390, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15400
  %5 = icmp slt i32 %4, 2, !dbg !15401
  call void @llvm.dbg.value(metadata i1 %5, metadata !15391, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15400
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !15402
  call void @llvm.dbg.value(metadata i1 %6, metadata !15390, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15400
  br i1 %7, label %11, label %8, !dbg !15402

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !15404
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !15404
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !15406
  br label %11, !dbg !15407

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !15396
  call void @llvm.dbg.value(metadata i32 %12, metadata !14988, metadata !DIExpression()) #24, !dbg !15398
  call void @llvm.dbg.value(metadata i32 %12, metadata !14982, metadata !DIExpression()) #24, !dbg !15394
  call void @llvm.dbg.value(metadata i32 %12, metadata !15386, metadata !DIExpression()), !dbg !15393
  call void @llvm.dbg.value(metadata i32 undef, metadata !15044, metadata !DIExpression()) #24, !dbg !15408
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15049, metadata !DIExpression()) #24, !dbg !15408
  call void @llvm.dbg.value(metadata i32 undef, metadata !15052, metadata !DIExpression()) #24, !dbg !15410
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #24, !dbg !15412, !srcloc !15058
  call void @llvm.dbg.value(metadata i32 1, metadata !15384, metadata !DIExpression()), !dbg !15393
  call void @llvm.dbg.value(metadata i32 undef, metadata !15384, metadata !DIExpression()), !dbg !15393
  ret void, !dbg !15413
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !15414 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15418, metadata !DIExpression()), !dbg !15423
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !15424
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14976, metadata !DIExpression()) #24, !dbg !15425
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15427, !srcloc !14991
  call void @llvm.dbg.value(metadata i32 undef, metadata !14988, metadata !DIExpression()) #24, !dbg !15429
  call void @llvm.dbg.value(metadata i32 undef, metadata !14989, metadata !DIExpression()) #24, !dbg !15429
  call void @llvm.dbg.value(metadata i32 undef, metadata !14982, metadata !DIExpression()) #24, !dbg !15425
  call void @llvm.dbg.value(metadata i32 undef, metadata !15419, metadata !DIExpression()), !dbg !15423
  store i32 %0, i32* @announce_remaining, align 4, !dbg !15423
  call void @llvm.dbg.value(metadata i32 undef, metadata !15419, metadata !DIExpression()), !dbg !15423
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !15430
  %4 = icmp eq %struct._timeout* %3, null, !dbg !15431
  br i1 %4, label %28, label %5, !dbg !15432

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !15433
  %10 = load i64, i64* %9, align 8, !dbg !15433
  %11 = sext i32 %8 to i64, !dbg !15434
  %12 = icmp sgt i64 %10, %11, !dbg !15435
  br i1 %12, label %26, label %13, !dbg !15436

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !15423
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !15420, metadata !DIExpression()), !dbg !15437
  %15 = trunc i64 %10 to i32, !dbg !15438
  call void @llvm.dbg.value(metadata i32 %15, metadata !15422, metadata !DIExpression()), !dbg !15437
  %16 = sext i32 %15 to i64, !dbg !15439
  %17 = load i64, i64* @curr_tick, align 8, !dbg !15440
  %18 = add i64 %17, %16, !dbg !15440
  store i64 %18, i64* @curr_tick, align 8, !dbg !15440
  store i64 0, i64* %9, align 8, !dbg !15441
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !15442
  call void @llvm.dbg.value(metadata i32 %14, metadata !15044, metadata !DIExpression()) #24, !dbg !15443
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15049, metadata !DIExpression()) #24, !dbg !15443
  call void @llvm.dbg.value(metadata i32 %14, metadata !15052, metadata !DIExpression()) #24, !dbg !15445
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !15447, !srcloc !15058
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !15448
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !15448
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !15449
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14976, metadata !DIExpression()) #24, !dbg !15450
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15452, !srcloc !14991
  call void @llvm.dbg.value(metadata i32 undef, metadata !14988, metadata !DIExpression()) #24, !dbg !15454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14989, metadata !DIExpression()) #24, !dbg !15454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14982, metadata !DIExpression()) #24, !dbg !15450
  call void @llvm.dbg.value(metadata i32 undef, metadata !15419, metadata !DIExpression()), !dbg !15423
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !15455
  %23 = sub nsw i32 %22, %15, !dbg !15455
  store i32 %23, i32* @announce_remaining, align 4, !dbg !15423
  call void @llvm.dbg.value(metadata i32 undef, metadata !15419, metadata !DIExpression()), !dbg !15423
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !15430
  %25 = icmp eq %struct._timeout* %24, null, !dbg !15431
  br i1 %25, label %28, label %5, !dbg !15432, !llvm.loop !15456

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !15458
  store i64 %27, i64* %9, align 8, !dbg !15458
  br label %32, !dbg !15461

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !15423
  %31 = sext i32 %30 to i64, !dbg !15462
  br label %32, !dbg !15462

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !15462
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !15423
  %36 = load i64, i64* @curr_tick, align 8, !dbg !15463
  %37 = add i64 %36, %33, !dbg !15463
  store i64 %37, i64* @curr_tick, align 8, !dbg !15463
  store i32 0, i32* @announce_remaining, align 4, !dbg !15464
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !15465
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !15466
  call void @llvm.dbg.value(metadata i32 %35, metadata !15044, metadata !DIExpression()) #24, !dbg !15467
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15049, metadata !DIExpression()) #24, !dbg !15467
  call void @llvm.dbg.value(metadata i32 %35, metadata !15052, metadata !DIExpression()) #24, !dbg !15469
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #24, !dbg !15471, !srcloc !15058
  ret void, !dbg !15472
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !15473 {
  call void @llvm.dbg.value(metadata i64 0, metadata !15477, metadata !DIExpression()), !dbg !15481
  call void @llvm.dbg.value(metadata i32 0, metadata !15478, metadata !DIExpression()), !dbg !15482
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14976, metadata !DIExpression()) #24, !dbg !15483
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15485, !srcloc !14991
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15485
  call void @llvm.dbg.value(metadata i32 %2, metadata !14988, metadata !DIExpression()) #24, !dbg !15487
  call void @llvm.dbg.value(metadata i32 undef, metadata !14989, metadata !DIExpression()) #24, !dbg !15487
  call void @llvm.dbg.value(metadata i32 %2, metadata !14982, metadata !DIExpression()) #24, !dbg !15483
  call void @llvm.dbg.value(metadata i32 %2, metadata !15480, metadata !DIExpression()), !dbg !15482
  call void @llvm.dbg.value(metadata i64 0, metadata !15477, metadata !DIExpression()), !dbg !15481
  call void @llvm.dbg.value(metadata i32 undef, metadata !15478, metadata !DIExpression()), !dbg !15482
  %3 = load i64, i64* @curr_tick, align 8, !dbg !15488
  %4 = tail call fastcc i32 @elapsed.166() #26, !dbg !15491
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !15477, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15481
  call void @llvm.dbg.value(metadata i32 %2, metadata !15044, metadata !DIExpression()) #24, !dbg !15492
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15049, metadata !DIExpression()) #24, !dbg !15492
  call void @llvm.dbg.value(metadata i32 %2, metadata !15052, metadata !DIExpression()) #24, !dbg !15494
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !15496, !srcloc !15058
  call void @llvm.dbg.value(metadata i32 undef, metadata !15478, metadata !DIExpression()), !dbg !15482
  %5 = sext i32 %4 to i64, !dbg !15491
  %6 = add i64 %3, %5, !dbg !15497
  ret i64 %6, !dbg !15498
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !15499 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !15500
  %2 = trunc i64 %1 to i32, !dbg !15501
  ret i32 %2, !dbg !15502
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !15503 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !15504
  ret i64 %1, !dbg !15505
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !15506 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15508, metadata !DIExpression()), !dbg !15515
  %2 = icmp eq i32 %0, 0, !dbg !15516
  br i1 %2, label %10, label %3, !dbg !15518

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !15519
  call void @llvm.dbg.value(metadata i32 %4, metadata !15509, metadata !DIExpression()), !dbg !15515
  %5 = mul i32 %0, 168, !dbg !15520
  call void @llvm.dbg.value(metadata i32 %5, metadata !15510, metadata !DIExpression()), !dbg !15515
  br label %6, !dbg !15521

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !15522
  call void @llvm.dbg.value(metadata i32 %7, metadata !15511, metadata !DIExpression()), !dbg !15523
  %8 = sub i32 %7, %4, !dbg !15524
  %9 = icmp ult i32 %8, %5, !dbg !15526
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !15527
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !15528 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !15529
  ret i32 %1, !dbg !15530
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !15531 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !15533
  ret i32 %1, !dbg !15534
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !15535 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15539, metadata !DIExpression()), !dbg !15541
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !15542

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !15543
  br label %14, !dbg !15547

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15540, metadata !DIExpression()), !dbg !15541
  %6 = icmp slt i64 %2, -1, !dbg !15548
  br i1 %6, label %7, label %9, !dbg !15551

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !15552
  br label %14, !dbg !15553

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !15555
  %11 = icmp ugt i64 %2, 1, !dbg !15556
  %12 = select i1 %11, i64 %2, i64 1, !dbg !15556
  %13 = add nsw i64 %10, %12, !dbg !15557
  br label %14, !dbg !15558

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !15559
  ret i64 %15, !dbg !15560
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !15561 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.187, i32 0, i32 0)) #25, !dbg !15563
  ret void, !dbg !15564
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { nounwind }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #28 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #29 = { nounwind readnone }
attributes #30 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!662, !2, !2223, !27, !124, !2225, !2227, !138, !2253, !2291, !167, !222, !2293, !2304, !2350, !2352, !2380, !2408, !2451, !2522, !2567, !251, !397, !2595, !433, !443, !468, !696, !2600, !830, !896, !1212, !1427, !2637, !1542, !1632, !2639, !2723, !2786, !1682, !2789, !1689, !2051, !2807, !2071, !2809, !2186, !2812}
!llvm.ident = !{!2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814, !2814}
!llvm.module.flags = !{!2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 94, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5248, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 82)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2624, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "heap", scope: !27, file: !107, line: 13, type: !112, isLocal: true, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/basic/sys_heap/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!105, !25}
!105 = !DIGlobalVariableExpression(var: !106, expr: !DIExpression())
!106 = distinct !DIGlobalVariable(name: "heap_mem", scope: !27, file: !107, line: 12, type: !108, isLocal: true, isDefinition: true)
!107 = !DIFile(filename: "zephyr/samples/basic/sys_heap/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 2048, elements: !110)
!109 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!110 = !{!111}
!111 = !DISubrange(count: 256)
!112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !114)
!113 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!114 = !{!115, !118, !119}
!115 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !112, file: !113, line: 57, baseType: !116, size: 32)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!117 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !113, line: 57, flags: DIFlagFwdDecl)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !112, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !112, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !121, line: 214, baseType: !32)
!121 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!122 = !DIGlobalVariableExpression(var: !123, expr: !DIExpression())
!123 = distinct !DIGlobalVariable(name: "_char_out", scope: !124, file: !127, line: 54, type: !128, isLocal: false, isDefinition: true)
!124 = distinct !DICompileUnit(language: DW_LANG_C99, file: !125, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !126, splitDebugInlining: false, nameTableKind: None)
!125 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!126 = !{!122}
!127 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!129 = !DISubroutineType(types: !130)
!130 = !{!103, !103}
!131 = !DIGlobalVariableExpression(var: !132, expr: !DIExpression())
!132 = distinct !DIGlobalVariable(name: "state", scope: !133, file: !134, line: 227, type: !163, isLocal: true, isDefinition: true)
!133 = distinct !DISubprogram(name: "rand32", scope: !134, file: !134, line: 225, type: !135, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !162)
!134 = !DIFile(filename: "zephyr/lib/os/heap-validate.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!135 = !DISubroutineType(types: !136)
!136 = !{!137}
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!138 = distinct !DICompileUnit(language: DW_LANG_C99, file: !139, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !148, globals: !161, splitDebugInlining: false, nameTableKind: None)
!139 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap-validate.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!140 = !{!30, !141}
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !142, line: 54, baseType: !32, size: 32, elements: !143)
!142 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!143 = !{!144, !145, !146, !147}
!144 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!145 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!146 = !DIEnumerator(name: "FREE_PREV", value: 2)
!147 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!148 = !{!102, !103, !149, !150, !137, !153}
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !152)
!152 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !142, line: 58, baseType: !155)
!155 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 58, size: 64, elements: !156)
!156 = !{!157}
!157 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !155, file: !142, line: 58, baseType: !158, size: 64)
!158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 64, elements: !159)
!159 = !{!160}
!160 = !DISubrange(count: 8)
!161 = !{!131}
!162 = !{}
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !164)
!164 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!165 = !DIGlobalVariableExpression(var: !166, expr: !DIExpression())
!166 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !167, file: !184, line: 56, type: !185, isLocal: true, isDefinition: true, align: 32)
!167 = distinct !DICompileUnit(language: DW_LANG_C99, file: !168, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !169, globals: !183, splitDebugInlining: false, nameTableKind: None)
!168 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!169 = !{!170}
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 32)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !172, line: 369, baseType: !173)
!172 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f405xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 360, size: 224, elements: !174)
!174 = !{!175, !177, !178, !179, !180, !181, !182}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !173, file: !172, line: 362, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !137)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !173, file: !172, line: 363, baseType: !176, size: 32, offset: 32)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !173, file: !172, line: 364, baseType: !176, size: 32, offset: 64)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !173, file: !172, line: 365, baseType: !176, size: 32, offset: 96)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !173, file: !172, line: 366, baseType: !176, size: 32, offset: 128)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !173, file: !172, line: 367, baseType: !176, size: 32, offset: 160)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !173, file: !172, line: 368, baseType: !176, size: 32, offset: 192)
!183 = !{!165}
!184 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !188)
!187 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!188 = !{!189, !219}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !186, file: !187, line: 60, baseType: !190, size: 32)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!191 = !DISubroutineType(types: !192)
!192 = !{!103, !193}
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !197)
!196 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!197 = !{!198, !201, !202, !203, !212, !213}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !195, file: !196, line: 380, baseType: !199, size: 32)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !195, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !195, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !195, file: !196, line: 386, baseType: !204, size: 32, offset: 96)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 32)
!205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !206)
!206 = !{!207, !210}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !205, file: !196, line: 359, baseType: !208, size: 8)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !209)
!209 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !205, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!211 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !195, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !195, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 32)
!215 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !216)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !196, line: 43, baseType: !217)
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !218)
!218 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !186, file: !187, line: 65, baseType: !193, size: 32, offset: 32)
!220 = !DIGlobalVariableExpression(var: !221, expr: !DIExpression())
!221 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !222, file: !225, line: 71, type: !226, isLocal: true, isDefinition: true, align: 32)
!222 = distinct !DICompileUnit(language: DW_LANG_C99, file: !223, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !224, splitDebugInlining: false, nameTableKind: None)
!223 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!224 = !{!220}
!225 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !227)
!227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !228)
!228 = !{!229, !248}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !227, file: !187, line: 60, baseType: !230, size: 32)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 32)
!231 = !DISubroutineType(types: !232)
!232 = !{!103, !233}
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !235)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !236)
!236 = !{!237, !238, !239, !240, !246, !247}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !235, file: !196, line: 380, baseType: !199, size: 32)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !235, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !235, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !235, file: !196, line: 386, baseType: !241, size: 32, offset: 96)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !243)
!243 = !{!244, !245}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !242, file: !196, line: 359, baseType: !208, size: 8)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !242, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !235, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !235, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !227, file: !187, line: 65, baseType: !233, size: 32, offset: 32)
!249 = !DIGlobalVariableExpression(var: !250, expr: !DIExpression())
!250 = distinct !DIGlobalVariable(name: "static_regions", scope: !251, file: !258, line: 62, type: !393, isLocal: true, isDefinition: true)
!251 = distinct !DICompileUnit(language: DW_LANG_C99, file: !252, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !253, globals: !254, splitDebugInlining: false, nameTableKind: None)
!252 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!253 = !{!120, !103, !137, !102}
!254 = !{!255, !249}
!255 = !DIGlobalVariableExpression(var: !256, expr: !DIExpression())
!256 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !257, file: !258, line: 198, type: !379, isLocal: true, isDefinition: true)
!257 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !258, file: !258, line: 175, type: !259, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !251, retainedNodes: !374)
!258 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!259 = !DISubroutineType(types: !260)
!260 = !{null, !261}
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !264)
!263 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!264 = !{!265, !332, !345, !346, !347, !348, !354, !369}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !262, file: !263, line: 247, baseType: !266, size: 384)
!266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !267)
!267 = !{!268, !296, !304, !305, !306, !317, !318, !319}
!268 = !DIDerivedType(tag: DW_TAG_member, scope: !266, file: !263, line: 60, baseType: !269, size: 64)
!269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !266, file: !263, line: 60, size: 64, elements: !270)
!270 = !{!271, !287}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !269, file: !263, line: 61, baseType: !272, size: 64)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !274)
!273 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !275)
!275 = !{!276, !282}
!276 = !DIDerivedType(tag: DW_TAG_member, scope: !274, file: !273, line: 38, baseType: !277, size: 32)
!277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !274, file: !273, line: 38, size: 32, elements: !278)
!278 = !{!279, !281}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !277, file: !273, line: 39, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !277, file: !273, line: 40, baseType: !280, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_member, scope: !274, file: !273, line: 42, baseType: !283, size: 32, offset: 32)
!283 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !274, file: !273, line: 42, size: 32, elements: !284)
!284 = !{!285, !286}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !283, file: !273, line: 43, baseType: !280, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !283, file: !273, line: 44, baseType: !280, size: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !269, file: !263, line: 62, baseType: !288, size: 64)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !290)
!289 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!290 = !{!291}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !288, file: !289, line: 50, baseType: !292, size: 64)
!292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 64, elements: !294)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!294 = !{!295}
!295 = !DISubrange(count: 2)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !266, file: !263, line: 68, baseType: !297, size: 32, offset: 64)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 32)
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !300)
!299 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!300 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !301)
!301 = !{!302}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !300, file: !299, line: 232, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !274)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !266, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !266, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!306 = !DIDerivedType(tag: DW_TAG_member, scope: !266, file: !263, line: 90, baseType: !307, size: 16, offset: 112)
!307 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !266, file: !263, line: 90, size: 16, elements: !308)
!308 = !{!309, !316}
!309 = !DIDerivedType(tag: DW_TAG_member, scope: !307, file: !263, line: 91, baseType: !310, size: 16)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !307, file: !263, line: 91, size: 16, elements: !311)
!311 = !{!312, !315}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !310, file: !263, line: 96, baseType: !313, size: 8)
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !314)
!314 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !310, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !307, file: !263, line: 100, baseType: !151, size: 16)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !266, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !266, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !266, file: !263, line: 131, baseType: !320, size: 192, offset: 192)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !321)
!321 = !{!322, !323, !329}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !320, file: !299, line: 245, baseType: !272, size: 64)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !320, file: !299, line: 246, baseType: !324, size: 32, offset: 64)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !325)
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 32)
!326 = !DISubroutineType(types: !327)
!327 = !{null, !328}
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !320, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!330 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !331)
!331 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !262, file: !263, line: 250, baseType: !333, size: 288, offset: 384)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !335)
!334 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!335 = !{!336, !337, !338, !339, !340, !341, !342, !343, !344}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !333, file: !334, line: 26, baseType: !137, size: 32)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !333, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !333, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !333, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !333, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !333, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !333, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !333, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !333, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !262, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !262, file: !263, line: 256, baseType: !298, size: 64, offset: 704)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !262, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !262, file: !263, line: 300, baseType: !349, size: 96, offset: 800)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !350)
!350 = !{!351, !352, !353}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !349, file: !263, line: 153, baseType: !22, size: 32)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !349, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !349, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !262, file: !263, line: 325, baseType: !355, size: 32, offset: 896)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 32)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !358)
!357 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!358 = !{!359, !365, !366}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !356, file: !357, line: 5074, baseType: !360, size: 96)
!360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !361)
!361 = !{!362, !363, !364}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !360, file: !113, line: 57, baseType: !116, size: 32)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !360, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !360, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !356, file: !357, line: 5075, baseType: !298, size: 64, offset: 96)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !356, file: !357, line: 5076, baseType: !367, offset: 160)
!367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!368 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!369 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !262, file: !263, line: 343, baseType: !370, size: 64, offset: 928)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !371)
!371 = !{!372, !373}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !370, file: !334, line: 63, baseType: !137, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !370, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!374 = !{!375, !376, !377, !378}
!375 = !DILocalVariable(name: "thread", arg: 1, scope: !257, file: !258, line: 175, type: !261)
!376 = !DILocalVariable(name: "region_num", scope: !257, file: !258, line: 200, type: !208)
!377 = !DILocalVariable(name: "guard_start", scope: !257, file: !258, line: 265, type: !22)
!378 = !DILocalVariable(name: "guard_size", scope: !257, file: !258, line: 266, type: !120)
!379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 96, elements: !391)
!380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !381, line: 52, size: 96, elements: !382)
!381 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!382 = !{!383, !384, !385}
!383 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !380, file: !381, line: 53, baseType: !22, size: 32)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !380, file: !381, line: 54, baseType: !120, size: 32, offset: 32)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !380, file: !381, line: 55, baseType: !386, size: 32, offset: 64)
!386 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !387, line: 151, baseType: !388)
!387 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!388 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !387, line: 149, size: 32, elements: !389)
!389 = !{!390}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !388, file: !387, line: 150, baseType: !137, size: 32)
!391 = !{!392}
!392 = !DISubrange(count: 1)
!393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 96, elements: !391)
!394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !380)
!395 = !DIGlobalVariableExpression(var: !396, expr: !DIExpression())
!396 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !397, file: !430, line: 39, type: !208, isLocal: true, isDefinition: true)
!397 = distinct !DICompileUnit(language: DW_LANG_C99, file: !398, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !399, globals: !429, splitDebugInlining: false, nameTableKind: None)
!398 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!399 = !{!400, !102, !103, !417, !208}
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !402, line: 1226, baseType: !403)
!402 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!403 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 1213, size: 352, elements: !404)
!404 = !{!405, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416}
!405 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !403, file: !402, line: 1215, baseType: !406, size: 32)
!406 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !176)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !403, file: !402, line: 1216, baseType: !176, size: 32, offset: 32)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !403, file: !402, line: 1217, baseType: !176, size: 32, offset: 64)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !403, file: !402, line: 1218, baseType: !176, size: 32, offset: 96)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !403, file: !402, line: 1219, baseType: !176, size: 32, offset: 128)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !403, file: !402, line: 1220, baseType: !176, size: 32, offset: 160)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !403, file: !402, line: 1221, baseType: !176, size: 32, offset: 192)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !403, file: !402, line: 1222, baseType: !176, size: 32, offset: 224)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !403, file: !402, line: 1223, baseType: !176, size: 32, offset: 256)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !403, file: !402, line: 1224, baseType: !176, size: 32, offset: 288)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !403, file: !402, line: 1225, baseType: !176, size: 32, offset: 320)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !419)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !420, line: 27, size: 96, elements: !421)
!420 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!421 = !{!422, !423, !424}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !419, file: !420, line: 29, baseType: !137, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !419, file: !420, line: 31, baseType: !199, size: 32, offset: 32)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !419, file: !420, line: 37, baseType: !425, size: 32, offset: 64)
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !387, line: 146, baseType: !426)
!426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !387, line: 141, size: 32, elements: !427)
!427 = !{!428}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !426, file: !387, line: 143, baseType: !137, size: 32)
!429 = !{!395}
!430 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!431 = !DIGlobalVariableExpression(var: !432, expr: !DIExpression())
!432 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !433, file: !440, line: 21, type: !128, isLocal: true, isDefinition: true)
!433 = distinct !DICompileUnit(language: DW_LANG_C99, file: !434, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !435, globals: !439, splitDebugInlining: false, nameTableKind: None)
!434 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!435 = !{!436, !103, !102}
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 32)
!437 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !438, line: 22, baseType: !103)
!438 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!439 = !{!431}
!440 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!441 = !DIGlobalVariableExpression(var: !442, expr: !DIExpression())
!442 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !443, file: !448, line: 13, type: !465, isLocal: true, isDefinition: true)
!443 = distinct !DICompileUnit(language: DW_LANG_C99, file: !444, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !445, splitDebugInlining: false, nameTableKind: None)
!444 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!445 = !{!446, !441}
!446 = !DIGlobalVariableExpression(var: !447, expr: !DIExpression())
!447 = distinct !DIGlobalVariable(name: "mpu_config", scope: !443, file: !448, line: 37, type: !449, isLocal: false, isDefinition: true)
!448 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !450)
!450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !420, line: 41, size: 64, elements: !451)
!451 = !{!452, !453}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !450, file: !420, line: 43, baseType: !137, size: 32)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !450, file: !420, line: 45, baseType: !454, size: 32, offset: 32)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !456)
!456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !420, line: 27, size: 96, elements: !457)
!457 = !{!458, !459, !460}
!458 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !456, file: !420, line: 29, baseType: !137, size: 32)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !456, file: !420, line: 31, baseType: !199, size: 32, offset: 32)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !456, file: !420, line: 37, baseType: !461, size: 32, offset: 64)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !387, line: 146, baseType: !462)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !387, line: 141, size: 32, elements: !463)
!463 = !{!464}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !462, file: !387, line: 143, baseType: !137, size: 32)
!465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !455, size: 192, elements: !294)
!466 = !DIGlobalVariableExpression(var: !467, expr: !DIExpression())
!467 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !468, file: !573, line: 72, type: !657, isLocal: true, isDefinition: true)
!468 = distinct !DICompileUnit(language: DW_LANG_C99, file: !469, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !470, retainedTypes: !559, globals: !570, splitDebugInlining: false, nameTableKind: None)
!469 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!470 = !{!30, !471}
!471 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !172, line: 65, baseType: !103, size: 32, elements: !472)
!472 = !{!473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558}
!473 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!474 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!475 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!476 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!477 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!478 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!479 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!480 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!481 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!482 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!483 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!484 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!485 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!486 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!487 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!488 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!489 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!490 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!491 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!492 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!493 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!494 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!495 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!496 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!497 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!498 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!499 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!500 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!501 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!502 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!503 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!504 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!505 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!506 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!507 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!508 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!509 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!510 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!511 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!512 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!513 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!514 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!515 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!516 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!517 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!518 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!519 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!520 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!521 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!522 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!523 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!524 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!525 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!526 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!527 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!528 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!529 = !DIEnumerator(name: "FSMC_IRQn", value: 48)
!530 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!531 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!532 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!533 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!534 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!535 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!536 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!537 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!538 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!539 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!540 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!541 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!542 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!543 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!544 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!545 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!546 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!547 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!548 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!549 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!550 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!551 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!552 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!553 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!554 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!555 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!556 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!557 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!558 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!559 = !{!120, !103, !102, !560}
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !172, line: 354, baseType: !562)
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 346, size: 192, elements: !563)
!563 = !{!564, !565, !566, !567, !568, !569}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !562, file: !172, line: 348, baseType: !176, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !562, file: !172, line: 349, baseType: !176, size: 32, offset: 32)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !562, file: !172, line: 350, baseType: !176, size: 32, offset: 64)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !562, file: !172, line: 351, baseType: !176, size: 32, offset: 96)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !562, file: !172, line: 352, baseType: !176, size: 32, offset: 128)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !562, file: !172, line: 353, baseType: !176, size: 32, offset: 160)
!570 = !{!571, !577, !593, !604, !621, !466, !623, !637, !639, !641, !643, !645, !647, !649, !651, !653, !655}
!571 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression())
!572 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !468, file: !573, line: 424, type: !574, isLocal: false, isDefinition: true, align: 16)
!573 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 64, elements: !575)
!575 = !{!576}
!576 = !DISubrange(count: 4)
!577 = !DIGlobalVariableExpression(var: !578, expr: !DIExpression())
!578 = distinct !DIGlobalVariable(name: "__device_dts_ord_37", scope: !468, file: !573, line: 424, type: !579, isLocal: false, isDefinition: true, align: 32)
!579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !580)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !581)
!581 = !{!582, !583, !584, !585, !591, !592}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !580, file: !196, line: 380, baseType: !199, size: 32)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !580, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !580, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !580, file: !196, line: 386, baseType: !586, size: 32, offset: 96)
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 32)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !588)
!588 = !{!589, !590}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !587, file: !196, line: 359, baseType: !208, size: 8)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !587, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !580, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !580, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!593 = !DIGlobalVariableExpression(var: !594, expr: !DIExpression())
!594 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_37", scope: !468, file: !573, line: 424, type: !595, isLocal: true, isDefinition: true, align: 32)
!595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !596)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !597)
!597 = !{!598, !603}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !596, file: !187, line: 60, baseType: !599, size: 32)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 32)
!600 = !DISubroutineType(types: !601)
!601 = !{!103, !602}
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 32)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !596, file: !187, line: 65, baseType: !602, size: 32, offset: 32)
!604 = !DIGlobalVariableExpression(var: !605, expr: !DIExpression())
!605 = distinct !DIGlobalVariable(name: "exti_data", scope: !468, file: !573, line: 423, type: !606, isLocal: true, isDefinition: true)
!606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !573, line: 107, size: 1472, elements: !607)
!607 = !{!608}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !606, file: !573, line: 109, baseType: !609, size: 1472)
!609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 1472, elements: !619)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !573, line: 101, size: 64, elements: !611)
!611 = !{!612, !618}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !610, file: !573, line: 102, baseType: !613, size: 32)
!613 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !614, line: 63, baseType: !615)
!614 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !616, size: 32)
!616 = !DISubroutineType(types: !617)
!617 = !{null, !103, !102}
!618 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !610, file: !573, line: 103, baseType: !102, size: 32, offset: 32)
!619 = !{!620}
!620 = !DISubrange(count: 23)
!621 = !DIGlobalVariableExpression(var: !622, expr: !DIExpression())
!622 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_37", scope: !468, file: !573, line: 424, type: !587, isLocal: true, isDefinition: true, align: 8)
!623 = !DIGlobalVariableExpression(var: !624, expr: !DIExpression())
!624 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !625, file: !573, line: 493, type: !630, isLocal: true, isDefinition: true, align: 32)
!625 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !573, file: !573, line: 460, type: !626, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !628)
!626 = !DISubroutineType(types: !627)
!627 = !{null, !602}
!628 = !{!629}
!629 = !DILocalVariable(name: "dev", arg: 1, scope: !625, file: !573, line: 460, type: !602)
!630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !631)
!631 = !{!632, !634, !635, !636}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !630, file: !10, line: 55, baseType: !633, size: 32)
!633 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !630, file: !10, line: 57, baseType: !633, size: 32, offset: 32)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !630, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !630, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!637 = !DIGlobalVariableExpression(var: !638, expr: !DIExpression())
!638 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !625, file: !573, line: 497, type: !630, isLocal: true, isDefinition: true, align: 32)
!639 = !DIGlobalVariableExpression(var: !640, expr: !DIExpression())
!640 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !625, file: !573, line: 507, type: !630, isLocal: true, isDefinition: true, align: 32)
!641 = !DIGlobalVariableExpression(var: !642, expr: !DIExpression())
!642 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !625, file: !573, line: 512, type: !630, isLocal: true, isDefinition: true, align: 32)
!643 = !DIGlobalVariableExpression(var: !644, expr: !DIExpression())
!644 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !625, file: !573, line: 516, type: !630, isLocal: true, isDefinition: true, align: 32)
!645 = !DIGlobalVariableExpression(var: !646, expr: !DIExpression())
!646 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !625, file: !573, line: 523, type: !630, isLocal: true, isDefinition: true, align: 32)
!647 = !DIGlobalVariableExpression(var: !648, expr: !DIExpression())
!648 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !625, file: !573, line: 527, type: !630, isLocal: true, isDefinition: true, align: 32)
!649 = !DIGlobalVariableExpression(var: !650, expr: !DIExpression())
!650 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !625, file: !573, line: 581, type: !630, isLocal: true, isDefinition: true, align: 32)
!651 = !DIGlobalVariableExpression(var: !652, expr: !DIExpression())
!652 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !625, file: !573, line: 586, type: !630, isLocal: true, isDefinition: true, align: 32)
!653 = !DIGlobalVariableExpression(var: !654, expr: !DIExpression())
!654 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !625, file: !573, line: 591, type: !630, isLocal: true, isDefinition: true, align: 32)
!655 = !DIGlobalVariableExpression(var: !656, expr: !DIExpression())
!656 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !625, file: !573, line: 595, type: !630, isLocal: true, isDefinition: true, align: 32)
!657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !658, size: 736, elements: !619)
!658 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !659)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !172, line: 155, baseType: !471)
!660 = !DIGlobalVariableExpression(var: !661, expr: !DIExpression())
!661 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !662, file: !667, line: 23, type: !691, isLocal: false, isDefinition: true, align: 16)
!662 = distinct !DICompileUnit(language: DW_LANG_C99, file: !663, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !664, splitDebugInlining: false, nameTableKind: None)
!663 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!664 = !{!665, !660, !671, !673, !675, !677, !679, !681, !683, !685, !687, !689}
!665 = !DIGlobalVariableExpression(var: !666, expr: !DIExpression())
!666 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !662, file: !667, line: 18, type: !668, isLocal: false, isDefinition: true, align: 16)
!667 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 208, elements: !669)
!669 = !{!670}
!670 = !DISubrange(count: 13)
!671 = !DIGlobalVariableExpression(var: !672, expr: !DIExpression())
!672 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !662, file: !667, line: 30, type: !574, isLocal: false, isDefinition: true, align: 16)
!673 = !DIGlobalVariableExpression(var: !674, expr: !DIExpression())
!674 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !662, file: !667, line: 37, type: !574, isLocal: false, isDefinition: true, align: 16)
!675 = !DIGlobalVariableExpression(var: !676, expr: !DIExpression())
!676 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !662, file: !667, line: 44, type: !574, isLocal: false, isDefinition: true, align: 16)
!677 = !DIGlobalVariableExpression(var: !678, expr: !DIExpression())
!678 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !662, file: !667, line: 51, type: !574, isLocal: false, isDefinition: true, align: 16)
!679 = !DIGlobalVariableExpression(var: !680, expr: !DIExpression())
!680 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !662, file: !667, line: 58, type: !574, isLocal: false, isDefinition: true, align: 16)
!681 = !DIGlobalVariableExpression(var: !682, expr: !DIExpression())
!682 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !662, file: !667, line: 65, type: !574, isLocal: false, isDefinition: true, align: 16)
!683 = !DIGlobalVariableExpression(var: !684, expr: !DIExpression())
!684 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !662, file: !667, line: 72, type: !574, isLocal: false, isDefinition: true, align: 16)
!685 = !DIGlobalVariableExpression(var: !686, expr: !DIExpression())
!686 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !662, file: !667, line: 79, type: !574, isLocal: false, isDefinition: true, align: 16)
!687 = !DIGlobalVariableExpression(var: !688, expr: !DIExpression())
!688 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !662, file: !667, line: 86, type: !574, isLocal: false, isDefinition: true, align: 16)
!689 = !DIGlobalVariableExpression(var: !690, expr: !DIExpression())
!690 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !662, file: !667, line: 93, type: !574, isLocal: false, isDefinition: true, align: 16)
!691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 48, elements: !692)
!692 = !{!693}
!693 = !DISubrange(count: 3)
!694 = !DIGlobalVariableExpression(var: !695, expr: !DIExpression())
!695 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !696, file: !756, line: 398, type: !789, isLocal: true, isDefinition: true)
!696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !697, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !698, retainedTypes: !711, globals: !753, splitDebugInlining: false, nameTableKind: None)
!697 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!698 = !{!699, !30, !704}
!699 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !700, line: 197, baseType: !32, size: 32, elements: !701)
!700 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!701 = !{!702, !703}
!702 = !DIEnumerator(name: "SUCCESS", value: 0)
!703 = !DIEnumerator(name: "ERROR", value: 1)
!704 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !705, line: 44, baseType: !32, size: 32, elements: !706)
!705 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!706 = !{!707, !708, !709, !710}
!707 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!708 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!709 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!710 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!711 = !{!102, !103, !137, !712, !747, !149}
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 32)
!713 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 532, baseType: !714)
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 500, size: 1088, elements: !715)
!715 = !{!716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !714, file: !172, line: 502, baseType: !176, size: 32)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !714, file: !172, line: 503, baseType: !176, size: 32, offset: 32)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !714, file: !172, line: 504, baseType: !176, size: 32, offset: 64)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !714, file: !172, line: 505, baseType: !176, size: 32, offset: 96)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !714, file: !172, line: 506, baseType: !176, size: 32, offset: 128)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !714, file: !172, line: 507, baseType: !176, size: 32, offset: 160)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !714, file: !172, line: 508, baseType: !176, size: 32, offset: 192)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !714, file: !172, line: 509, baseType: !137, size: 32, offset: 224)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !714, file: !172, line: 510, baseType: !176, size: 32, offset: 256)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !714, file: !172, line: 511, baseType: !176, size: 32, offset: 288)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !714, file: !172, line: 512, baseType: !727, size: 64, offset: 320)
!727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 64, elements: !294)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !714, file: !172, line: 513, baseType: !176, size: 32, offset: 384)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !714, file: !172, line: 514, baseType: !176, size: 32, offset: 416)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !714, file: !172, line: 515, baseType: !176, size: 32, offset: 448)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !714, file: !172, line: 516, baseType: !137, size: 32, offset: 480)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !714, file: !172, line: 517, baseType: !176, size: 32, offset: 512)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !714, file: !172, line: 518, baseType: !176, size: 32, offset: 544)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !714, file: !172, line: 519, baseType: !727, size: 64, offset: 576)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !714, file: !172, line: 520, baseType: !176, size: 32, offset: 640)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !714, file: !172, line: 521, baseType: !176, size: 32, offset: 672)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !714, file: !172, line: 522, baseType: !176, size: 32, offset: 704)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !714, file: !172, line: 523, baseType: !137, size: 32, offset: 736)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !714, file: !172, line: 524, baseType: !176, size: 32, offset: 768)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !714, file: !172, line: 525, baseType: !176, size: 32, offset: 800)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !714, file: !172, line: 526, baseType: !727, size: 64, offset: 832)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !714, file: !172, line: 527, baseType: !176, size: 32, offset: 896)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !714, file: !172, line: 528, baseType: !176, size: 32, offset: 928)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !714, file: !172, line: 529, baseType: !727, size: 64, offset: 960)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !714, file: !172, line: 530, baseType: !176, size: 32, offset: 1024)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !714, file: !172, line: 531, baseType: !176, size: 32, offset: 1056)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 32)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !749, line: 343, size: 64, elements: !750)
!749 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!750 = !{!751, !752}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !748, file: !749, line: 344, baseType: !137, size: 32)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !748, file: !749, line: 345, baseType: !137, size: 32, offset: 32)
!753 = !{!754, !760, !776, !787, !694}
!754 = !DIGlobalVariableExpression(var: !755, expr: !DIExpression())
!755 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !696, file: !756, line: 752, type: !757, isLocal: false, isDefinition: true, align: 16)
!756 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 928, elements: !758)
!758 = !{!759}
!759 = !DISubrange(count: 58)
!760 = !DIGlobalVariableExpression(var: !761, expr: !DIExpression())
!761 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !696, file: !756, line: 752, type: !762, isLocal: false, isDefinition: true, align: 32)
!762 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !763)
!763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !764)
!764 = !{!765, !766, !767, !768, !774, !775}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !763, file: !196, line: 380, baseType: !199, size: 32)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !763, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !763, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !763, file: !196, line: 386, baseType: !769, size: 32, offset: 96)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 32)
!770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !771)
!771 = !{!772, !773}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !770, file: !196, line: 359, baseType: !208, size: 8)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !770, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !763, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !763, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !696, file: !756, line: 752, type: !778, isLocal: true, isDefinition: true, align: 32)
!778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !779)
!779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !780)
!780 = !{!781, !786}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !779, file: !187, line: 60, baseType: !782, size: 32)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 32)
!783 = !DISubroutineType(types: !784)
!784 = !{!103, !785}
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 32)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !779, file: !187, line: 65, baseType: !785, size: 32, offset: 32)
!787 = !DIGlobalVariableExpression(var: !788, expr: !DIExpression())
!788 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !696, file: !756, line: 752, type: !770, isLocal: true, isDefinition: true, align: 8)
!789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !705, line: 100, size: 224, elements: !790)
!790 = !{!791, !797, !798, !807, !812, !817, !823}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !789, file: !705, line: 101, baseType: !792, size: 32)
!792 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !705, line: 76, baseType: !793)
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 32)
!794 = !DISubroutineType(types: !795)
!795 = !{!103, !785, !796}
!796 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !705, line: 56, baseType: !102)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !789, file: !705, line: 102, baseType: !792, size: 32, offset: 32)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !789, file: !705, line: 103, baseType: !799, size: 32, offset: 64)
!799 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !705, line: 83, baseType: !800)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 32)
!801 = !DISubroutineType(types: !802)
!802 = !{!103, !785, !796, !803, !102}
!803 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !705, line: 72, baseType: !804)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 32)
!805 = !DISubroutineType(types: !806)
!806 = !{null, !785, !796, !102}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !789, file: !705, line: 104, baseType: !808, size: 32, offset: 96)
!808 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !705, line: 79, baseType: !809)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 32)
!810 = !DISubroutineType(types: !811)
!811 = !{!103, !785, !796, !149}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !789, file: !705, line: 105, baseType: !813, size: 32, offset: 128)
!813 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !705, line: 88, baseType: !814)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 32)
!815 = !DISubroutineType(types: !816)
!816 = !{!704, !785, !796}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !789, file: !705, line: 106, baseType: !818, size: 32, offset: 160)
!818 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !705, line: 92, baseType: !819)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 32)
!820 = !DISubroutineType(types: !821)
!821 = !{!103, !785, !796, !822}
!822 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !705, line: 64, baseType: !102)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !789, file: !705, line: 107, baseType: !824, size: 32, offset: 192)
!824 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !705, line: 96, baseType: !825)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 32)
!826 = !DISubroutineType(types: !827)
!827 = !{!103, !785, !796, !102}
!828 = !DIGlobalVariableExpression(var: !829, expr: !DIExpression())
!829 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !830, file: !887, line: 603, type: !889, isLocal: true, isDefinition: true, align: 32)
!830 = distinct !DICompileUnit(language: DW_LANG_C99, file: !831, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !832, globals: !884, splitDebugInlining: false, nameTableKind: None)
!831 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!832 = !{!102, !103, !833}
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 32)
!834 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !835)
!835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !836, line: 336, size: 160, elements: !837)
!836 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!837 = !{!838, !858, !862, !866, !879}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !835, file: !836, line: 365, baseType: !839, size: 32)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 32)
!840 = !DISubroutineType(types: !841)
!841 = !{!103, !842, !857}
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 32)
!843 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !844)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !845)
!845 = !{!846, !847, !848, !849, !855, !856}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !844, file: !196, line: 380, baseType: !199, size: 32)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !844, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !844, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !844, file: !196, line: 386, baseType: !850, size: 32, offset: 96)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 32)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !852)
!852 = !{!853, !854}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !851, file: !196, line: 359, baseType: !208, size: 8)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !851, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !844, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !844, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 32)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !835, file: !836, line: 366, baseType: !859, size: 32, offset: 32)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 32)
!860 = !DISubroutineType(types: !861)
!861 = !{null, !842, !209}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !835, file: !836, line: 374, baseType: !863, size: 32, offset: 64)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 32)
!864 = !DISubroutineType(types: !865)
!865 = !{!103, !842}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !835, file: !836, line: 377, baseType: !867, size: 32, offset: 96)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 32)
!868 = !DISubroutineType(types: !869)
!869 = !{!103, !842, !870}
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 32)
!871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !872)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !836, line: 122, size: 64, elements: !873)
!873 = !{!874, !875, !876, !877, !878}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !872, file: !836, line: 123, baseType: !137, size: 32)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !872, file: !836, line: 124, baseType: !208, size: 8, offset: 32)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !872, file: !836, line: 125, baseType: !208, size: 8, offset: 40)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !872, file: !836, line: 126, baseType: !208, size: 8, offset: 48)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !872, file: !836, line: 127, baseType: !208, size: 8, offset: 56)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !835, file: !836, line: 379, baseType: !880, size: 32, offset: 128)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 32)
!881 = !DISubroutineType(types: !882)
!882 = !{!103, !842, !883}
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !872, size: 32)
!884 = !{!828, !885}
!885 = !DIGlobalVariableExpression(var: !886, expr: !DIExpression())
!886 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !830, file: !887, line: 38, type: !888, isLocal: true, isDefinition: true)
!887 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !842)
!889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !890)
!890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !891)
!891 = !{!892, !893}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !890, file: !187, line: 60, baseType: !863, size: 32)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !890, file: !187, line: 65, baseType: !842, size: 32, offset: 32)
!894 = !DIGlobalVariableExpression(var: !895, expr: !DIExpression())
!895 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !896, file: !1066, line: 762, type: !1185, isLocal: true, isDefinition: true)
!896 = distinct !DICompileUnit(language: DW_LANG_C99, file: !897, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !898, retainedTypes: !916, globals: !1063, splitDebugInlining: false, nameTableKind: None)
!897 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!898 = !{!30, !899, !905, !910, !704}
!899 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !900, line: 506, baseType: !32, size: 32, elements: !901)
!900 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!901 = !{!902, !903, !904}
!902 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!903 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!904 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!905 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !900, line: 512, baseType: !32, size: 32, elements: !906)
!906 = !{!907, !908, !909}
!907 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!908 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!909 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!910 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !614, line: 43, baseType: !32, size: 32, elements: !911)
!911 = !{!912, !913, !914, !915}
!912 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!913 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!914 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!915 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!916 = !{!102, !103, !917, !987, !992, !952, !905, !899, !997, !998, !137, !1012, !967, !1022, !1023, !1024}
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 32)
!918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !919)
!919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !900, line: 523, size: 288, elements: !920)
!920 = !{!921, !942, !948, !953, !957, !958, !959, !963, !983}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !919, file: !900, line: 524, baseType: !922, size: 32)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 32)
!923 = !DISubroutineType(types: !924)
!924 = !{!103, !925, !940, !941}
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 32)
!926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !927)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !928)
!928 = !{!929, !930, !931, !932, !938, !939}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !927, file: !196, line: 380, baseType: !199, size: 32)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !927, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !927, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !927, file: !196, line: 386, baseType: !933, size: 32, offset: 96)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 32)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !935)
!935 = !{!936, !937}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !934, file: !196, line: 359, baseType: !208, size: 8)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !934, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !927, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !927, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!940 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !900, line: 237, baseType: !208)
!941 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !900, line: 257, baseType: !137)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !919, file: !900, line: 530, baseType: !943, size: 32, offset: 32)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 32)
!944 = !DISubroutineType(types: !945)
!945 = !{!103, !925, !946}
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 32)
!947 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !900, line: 229, baseType: !137)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !919, file: !900, line: 532, baseType: !949, size: 32, offset: 64)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 32)
!950 = !DISubroutineType(types: !951)
!951 = !{!103, !925, !952, !947}
!952 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !900, line: 216, baseType: !137)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !919, file: !900, line: 535, baseType: !954, size: 32, offset: 96)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 32)
!955 = !DISubroutineType(types: !956)
!956 = !{!103, !925, !952}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !919, file: !900, line: 537, baseType: !954, size: 32, offset: 128)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !919, file: !900, line: 539, baseType: !954, size: 32, offset: 160)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !919, file: !900, line: 541, baseType: !960, size: 32, offset: 192)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 32)
!961 = !DISubroutineType(types: !962)
!962 = !{!103, !925, !940, !899, !905}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !919, file: !900, line: 544, baseType: !964, size: 32, offset: 224)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 32)
!965 = !DISubroutineType(types: !966)
!966 = !{!103, !925, !967, !211}
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 32)
!968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !900, line: 478, size: 96, elements: !969)
!969 = !{!970, !977, !982}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !968, file: !900, line: 482, baseType: !971, size: 32)
!971 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !972, line: 33, baseType: !973)
!972 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !972, line: 29, size: 32, elements: !974)
!974 = !{!975}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !973, file: !972, line: 30, baseType: !976, size: 32)
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 32)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !968, file: !900, line: 485, baseType: !978, size: 32, offset: 32)
!978 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !900, line: 464, baseType: !979)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 32)
!980 = !DISubroutineType(types: !981)
!981 = !{null, !925, !967, !952}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !968, file: !900, line: 493, baseType: !952, size: 32, offset: 64)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !919, file: !900, line: 547, baseType: !984, size: 32, offset: 256)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 32)
!985 = !DISubroutineType(types: !986)
!986 = !{!137, !925}
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 32)
!988 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !989)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !900, line: 428, size: 32, elements: !990)
!990 = !{!991}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !989, file: !900, line: 434, baseType: !952, size: 32)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 32)
!993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !994)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !900, line: 441, size: 32, elements: !995)
!995 = !{!996}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !994, file: !900, line: 447, baseType: !952, size: 32)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 32)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 32)
!999 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !172, line: 441, baseType: !1000)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 430, size: 320, elements: !1001)
!1001 = !{!1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1000, file: !172, line: 432, baseType: !176, size: 32)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1000, file: !172, line: 433, baseType: !176, size: 32, offset: 32)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1000, file: !172, line: 434, baseType: !176, size: 32, offset: 64)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1000, file: !172, line: 435, baseType: !176, size: 32, offset: 96)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1000, file: !172, line: 436, baseType: !176, size: 32, offset: 128)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1000, file: !172, line: 437, baseType: !176, size: 32, offset: 160)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1000, file: !172, line: 438, baseType: !176, size: 32, offset: 192)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1000, file: !172, line: 439, baseType: !176, size: 32, offset: 224)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1000, file: !172, line: 440, baseType: !1011, size: 64, offset: 256)
!1011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 64, elements: !294)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 32)
!1013 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !172, line: 454, baseType: !1014)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 447, size: 288, elements: !1015)
!1015 = !{!1016, !1017, !1018, !1020, !1021}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1014, file: !172, line: 449, baseType: !176, size: 32)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1014, file: !172, line: 450, baseType: !176, size: 32, offset: 32)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1014, file: !172, line: 451, baseType: !1019, size: 128, offset: 64)
!1019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 128, elements: !575)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1014, file: !172, line: 452, baseType: !727, size: 64, offset: 192)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1014, file: !172, line: 453, baseType: !176, size: 32, offset: 256)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 32)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 32)
!1025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1026)
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !705, line: 100, size: 224, elements: !1027)
!1027 = !{!1028, !1033, !1034, !1043, !1048, !1053, !1058}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1026, file: !705, line: 101, baseType: !1029, size: 32)
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !705, line: 76, baseType: !1030)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 32)
!1031 = !DISubroutineType(types: !1032)
!1032 = !{!103, !925, !796}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1026, file: !705, line: 102, baseType: !1029, size: 32, offset: 32)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1026, file: !705, line: 103, baseType: !1035, size: 32, offset: 64)
!1035 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !705, line: 83, baseType: !1036)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 32)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{!103, !925, !796, !1039, !102}
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !705, line: 72, baseType: !1040)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 32)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{null, !925, !796, !102}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1026, file: !705, line: 104, baseType: !1044, size: 32, offset: 96)
!1044 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !705, line: 79, baseType: !1045)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 32)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!103, !925, !796, !149}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1026, file: !705, line: 105, baseType: !1049, size: 32, offset: 128)
!1049 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !705, line: 88, baseType: !1050)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 32)
!1051 = !DISubroutineType(types: !1052)
!1052 = !{!704, !925, !796}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1026, file: !705, line: 106, baseType: !1054, size: 32, offset: 160)
!1054 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !705, line: 92, baseType: !1055)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 32)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!103, !925, !796, !822}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1026, file: !705, line: 107, baseType: !1059, size: 32, offset: 192)
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !705, line: 96, baseType: !1060)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 32)
!1061 = !DISubroutineType(types: !1062)
!1062 = !{!103, !925, !796, !102}
!1063 = !{!1064, !1070, !1072, !1082, !1087, !1089, !1091, !1093, !1095, !1097, !1099, !1101, !1103, !1105, !1107, !1109, !1111, !1113, !1115, !1117, !1119, !1121, !1123, !1125, !1127, !1129, !1131, !1133, !1147, !1149, !1151, !1153, !1155, !1157, !1159, !1161, !1163, !1165, !1167, !1169, !1171, !1173, !1175, !1177, !1179, !894, !1181, !1183, !1196, !1198, !1200, !1202, !1204, !1206, !1208}
!1064 = !DIGlobalVariableExpression(var: !1065, expr: !DIExpression())
!1065 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !896, file: !1066, line: 762, type: !1067, isLocal: false, isDefinition: true, align: 16)
!1066 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 96, elements: !1068)
!1068 = !{!1069}
!1069 = !DISubrange(count: 6)
!1070 = !DIGlobalVariableExpression(var: !1071, expr: !DIExpression())
!1071 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !896, file: !1066, line: 762, type: !926, isLocal: false, isDefinition: true, align: 32)
!1072 = !DIGlobalVariableExpression(var: !1073, expr: !DIExpression())
!1073 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !896, file: !1066, line: 762, type: !1074, isLocal: true, isDefinition: true, align: 32)
!1074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1075)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !1076)
!1076 = !{!1077, !1081}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1075, file: !187, line: 60, baseType: !1078, size: 32)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 32)
!1079 = !DISubroutineType(types: !1080)
!1080 = !{!103, !925}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1075, file: !187, line: 65, baseType: !925, size: 32, offset: 32)
!1082 = !DIGlobalVariableExpression(var: !1083, expr: !DIExpression())
!1083 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !896, file: !1066, line: 766, type: !1084, isLocal: false, isDefinition: true, align: 16)
!1084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 80, elements: !1085)
!1085 = !{!1086}
!1086 = !DISubrange(count: 5)
!1087 = !DIGlobalVariableExpression(var: !1088, expr: !DIExpression())
!1088 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !896, file: !1066, line: 766, type: !926, isLocal: false, isDefinition: true, align: 32)
!1089 = !DIGlobalVariableExpression(var: !1090, expr: !DIExpression())
!1090 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !896, file: !1066, line: 766, type: !1074, isLocal: true, isDefinition: true, align: 32)
!1091 = !DIGlobalVariableExpression(var: !1092, expr: !DIExpression())
!1092 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !896, file: !1066, line: 770, type: !1067, isLocal: false, isDefinition: true, align: 16)
!1093 = !DIGlobalVariableExpression(var: !1094, expr: !DIExpression())
!1094 = distinct !DIGlobalVariable(name: "__device_dts_ord_21", scope: !896, file: !1066, line: 770, type: !926, isLocal: false, isDefinition: true, align: 32)
!1095 = !DIGlobalVariableExpression(var: !1096, expr: !DIExpression())
!1096 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_21", scope: !896, file: !1066, line: 770, type: !1074, isLocal: true, isDefinition: true, align: 32)
!1097 = !DIGlobalVariableExpression(var: !1098, expr: !DIExpression())
!1098 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !896, file: !1066, line: 774, type: !1084, isLocal: false, isDefinition: true, align: 16)
!1099 = !DIGlobalVariableExpression(var: !1100, expr: !DIExpression())
!1100 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !896, file: !1066, line: 774, type: !926, isLocal: false, isDefinition: true, align: 32)
!1101 = !DIGlobalVariableExpression(var: !1102, expr: !DIExpression())
!1102 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !896, file: !1066, line: 774, type: !1074, isLocal: true, isDefinition: true, align: 32)
!1103 = !DIGlobalVariableExpression(var: !1104, expr: !DIExpression())
!1104 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !896, file: !1066, line: 778, type: !1084, isLocal: false, isDefinition: true, align: 16)
!1105 = !DIGlobalVariableExpression(var: !1106, expr: !DIExpression())
!1106 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !896, file: !1066, line: 778, type: !926, isLocal: false, isDefinition: true, align: 32)
!1107 = !DIGlobalVariableExpression(var: !1108, expr: !DIExpression())
!1108 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !896, file: !1066, line: 778, type: !1074, isLocal: true, isDefinition: true, align: 32)
!1109 = !DIGlobalVariableExpression(var: !1110, expr: !DIExpression())
!1110 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !896, file: !1066, line: 782, type: !1084, isLocal: false, isDefinition: true, align: 16)
!1111 = !DIGlobalVariableExpression(var: !1112, expr: !DIExpression())
!1112 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !896, file: !1066, line: 782, type: !926, isLocal: false, isDefinition: true, align: 32)
!1113 = !DIGlobalVariableExpression(var: !1114, expr: !DIExpression())
!1114 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !896, file: !1066, line: 782, type: !1074, isLocal: true, isDefinition: true, align: 32)
!1115 = !DIGlobalVariableExpression(var: !1116, expr: !DIExpression())
!1116 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !896, file: !1066, line: 786, type: !1084, isLocal: false, isDefinition: true, align: 16)
!1117 = !DIGlobalVariableExpression(var: !1118, expr: !DIExpression())
!1118 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !896, file: !1066, line: 786, type: !926, isLocal: false, isDefinition: true, align: 32)
!1119 = !DIGlobalVariableExpression(var: !1120, expr: !DIExpression())
!1120 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !896, file: !1066, line: 786, type: !1074, isLocal: true, isDefinition: true, align: 32)
!1121 = !DIGlobalVariableExpression(var: !1122, expr: !DIExpression())
!1122 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !896, file: !1066, line: 790, type: !1084, isLocal: false, isDefinition: true, align: 16)
!1123 = !DIGlobalVariableExpression(var: !1124, expr: !DIExpression())
!1124 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !896, file: !1066, line: 790, type: !926, isLocal: false, isDefinition: true, align: 32)
!1125 = !DIGlobalVariableExpression(var: !1126, expr: !DIExpression())
!1126 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !896, file: !1066, line: 790, type: !1074, isLocal: true, isDefinition: true, align: 32)
!1127 = !DIGlobalVariableExpression(var: !1128, expr: !DIExpression())
!1128 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !896, file: !1066, line: 794, type: !1084, isLocal: false, isDefinition: true, align: 16)
!1129 = !DIGlobalVariableExpression(var: !1130, expr: !DIExpression())
!1130 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !896, file: !1066, line: 794, type: !926, isLocal: false, isDefinition: true, align: 32)
!1131 = !DIGlobalVariableExpression(var: !1132, expr: !DIExpression())
!1132 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !896, file: !1066, line: 794, type: !1074, isLocal: true, isDefinition: true, align: 32)
!1133 = !DIGlobalVariableExpression(var: !1134, expr: !DIExpression())
!1134 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !896, file: !1066, line: 762, type: !1135, isLocal: true, isDefinition: true)
!1135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1136, line: 237, size: 128, elements: !1137)
!1136 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1137 = !{!1138, !1139, !1140}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1135, file: !1136, line: 239, baseType: !994, size: 32)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1135, file: !1136, line: 241, baseType: !925, size: 32, offset: 32)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1135, file: !1136, line: 243, baseType: !1141, size: 64, offset: 64)
!1141 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !972, line: 40, baseType: !1142)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !972, line: 35, size: 64, elements: !1143)
!1143 = !{!1144, !1146}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1142, file: !972, line: 36, baseType: !1145, size: 32)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 32)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1142, file: !972, line: 37, baseType: !1145, size: 32, offset: 32)
!1147 = !DIGlobalVariableExpression(var: !1148, expr: !DIExpression())
!1148 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !896, file: !1066, line: 762, type: !934, isLocal: true, isDefinition: true, align: 8)
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !896, file: !1066, line: 766, type: !1135, isLocal: true, isDefinition: true)
!1151 = !DIGlobalVariableExpression(var: !1152, expr: !DIExpression())
!1152 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !896, file: !1066, line: 766, type: !934, isLocal: true, isDefinition: true, align: 8)
!1153 = !DIGlobalVariableExpression(var: !1154, expr: !DIExpression())
!1154 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !896, file: !1066, line: 770, type: !1135, isLocal: true, isDefinition: true)
!1155 = !DIGlobalVariableExpression(var: !1156, expr: !DIExpression())
!1156 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_21", scope: !896, file: !1066, line: 770, type: !934, isLocal: true, isDefinition: true, align: 8)
!1157 = !DIGlobalVariableExpression(var: !1158, expr: !DIExpression())
!1158 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !896, file: !1066, line: 774, type: !1135, isLocal: true, isDefinition: true)
!1159 = !DIGlobalVariableExpression(var: !1160, expr: !DIExpression())
!1160 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !896, file: !1066, line: 774, type: !934, isLocal: true, isDefinition: true, align: 8)
!1161 = !DIGlobalVariableExpression(var: !1162, expr: !DIExpression())
!1162 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !896, file: !1066, line: 778, type: !1135, isLocal: true, isDefinition: true)
!1163 = !DIGlobalVariableExpression(var: !1164, expr: !DIExpression())
!1164 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !896, file: !1066, line: 778, type: !934, isLocal: true, isDefinition: true, align: 8)
!1165 = !DIGlobalVariableExpression(var: !1166, expr: !DIExpression())
!1166 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !896, file: !1066, line: 782, type: !1135, isLocal: true, isDefinition: true)
!1167 = !DIGlobalVariableExpression(var: !1168, expr: !DIExpression())
!1168 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !896, file: !1066, line: 782, type: !934, isLocal: true, isDefinition: true, align: 8)
!1169 = !DIGlobalVariableExpression(var: !1170, expr: !DIExpression())
!1170 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !896, file: !1066, line: 786, type: !1135, isLocal: true, isDefinition: true)
!1171 = !DIGlobalVariableExpression(var: !1172, expr: !DIExpression())
!1172 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !896, file: !1066, line: 786, type: !934, isLocal: true, isDefinition: true, align: 8)
!1173 = !DIGlobalVariableExpression(var: !1174, expr: !DIExpression())
!1174 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !896, file: !1066, line: 790, type: !1135, isLocal: true, isDefinition: true)
!1175 = !DIGlobalVariableExpression(var: !1176, expr: !DIExpression())
!1176 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !896, file: !1066, line: 790, type: !934, isLocal: true, isDefinition: true, align: 8)
!1177 = !DIGlobalVariableExpression(var: !1178, expr: !DIExpression())
!1178 = distinct !DIGlobalVariable(name: "gpio_stm32_data_i", scope: !896, file: !1066, line: 794, type: !1135, isLocal: true, isDefinition: true)
!1179 = !DIGlobalVariableExpression(var: !1180, expr: !DIExpression())
!1180 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !896, file: !1066, line: 794, type: !934, isLocal: true, isDefinition: true, align: 8)
!1181 = !DIGlobalVariableExpression(var: !1182, expr: !DIExpression())
!1182 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !896, file: !1066, line: 656, type: !918, isLocal: true, isDefinition: true)
!1183 = !DIGlobalVariableExpression(var: !1184, expr: !DIExpression())
!1184 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !896, file: !1066, line: 766, type: !1185, isLocal: true, isDefinition: true)
!1185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1186)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1136, line: 224, size: 160, elements: !1187)
!1187 = !{!1188, !1189, !1190, !1191}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1186, file: !1136, line: 226, baseType: !989, size: 32)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1186, file: !1136, line: 228, baseType: !149, size: 32, offset: 32)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1186, file: !1136, line: 230, baseType: !103, size: 32, offset: 64)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1186, file: !1136, line: 231, baseType: !1192, size: 64, offset: 96)
!1192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !749, line: 343, size: 64, elements: !1193)
!1193 = !{!1194, !1195}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1192, file: !749, line: 344, baseType: !137, size: 32)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1192, file: !749, line: 345, baseType: !137, size: 32, offset: 32)
!1196 = !DIGlobalVariableExpression(var: !1197, expr: !DIExpression())
!1197 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !896, file: !1066, line: 770, type: !1185, isLocal: true, isDefinition: true)
!1198 = !DIGlobalVariableExpression(var: !1199, expr: !DIExpression())
!1199 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !896, file: !1066, line: 774, type: !1185, isLocal: true, isDefinition: true)
!1200 = !DIGlobalVariableExpression(var: !1201, expr: !DIExpression())
!1201 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !896, file: !1066, line: 778, type: !1185, isLocal: true, isDefinition: true)
!1202 = !DIGlobalVariableExpression(var: !1203, expr: !DIExpression())
!1203 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !896, file: !1066, line: 782, type: !1185, isLocal: true, isDefinition: true)
!1204 = !DIGlobalVariableExpression(var: !1205, expr: !DIExpression())
!1205 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !896, file: !1066, line: 786, type: !1185, isLocal: true, isDefinition: true)
!1206 = !DIGlobalVariableExpression(var: !1207, expr: !DIExpression())
!1207 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !896, file: !1066, line: 790, type: !1185, isLocal: true, isDefinition: true)
!1208 = !DIGlobalVariableExpression(var: !1209, expr: !DIExpression())
!1209 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_i", scope: !896, file: !1066, line: 794, type: !1185, isLocal: true, isDefinition: true)
!1210 = !DIGlobalVariableExpression(var: !1211, expr: !DIExpression())
!1211 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1212, file: !1351, line: 1914, type: !1410, isLocal: true, isDefinition: true)
!1212 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1213, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1214, retainedTypes: !1247, globals: !1348, splitDebugInlining: false, nameTableKind: None)
!1213 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!1214 = !{!30, !1215, !1222, !1229, !1236, !1242, !704}
!1215 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !836, line: 47, baseType: !32, size: 32, elements: !1216)
!1216 = !{!1217, !1218, !1219, !1220, !1221}
!1217 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1218 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1219 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1220 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1221 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1222 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !836, line: 75, baseType: !32, size: 32, elements: !1223)
!1223 = !{!1224, !1225, !1226, !1227, !1228}
!1224 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1225 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1226 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1227 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1228 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1229 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !836, line: 92, baseType: !32, size: 32, elements: !1230)
!1230 = !{!1231, !1232, !1233, !1234, !1235}
!1231 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1232 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1233 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1234 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1235 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1236 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !836, line: 84, baseType: !32, size: 32, elements: !1237)
!1237 = !{!1238, !1239, !1240, !1241}
!1238 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1239 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1240 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1241 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1242 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !836, line: 107, baseType: !32, size: 32, elements: !1243)
!1243 = !{!1244, !1245, !1246}
!1244 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1245 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1246 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1247 = !{!102, !103, !1248, !209, !208, !1297, !137, !796, !1308, !151, !163, !1347}
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 32)
!1249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1250)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !836, line: 336, size: 160, elements: !1251)
!1251 = !{!1252, !1271, !1275, !1279, !1292}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1250, file: !836, line: 365, baseType: !1253, size: 32)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 32)
!1254 = !DISubroutineType(types: !1255)
!1255 = !{!103, !1256, !857}
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 32)
!1257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1258)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !1259)
!1259 = !{!1260, !1261, !1262, !1263, !1269, !1270}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1258, file: !196, line: 380, baseType: !199, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1258, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1258, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1258, file: !196, line: 386, baseType: !1264, size: 32, offset: 96)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 32)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !1266)
!1266 = !{!1267, !1268}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1265, file: !196, line: 359, baseType: !208, size: 8)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1265, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1258, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1258, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1250, file: !836, line: 366, baseType: !1272, size: 32, offset: 32)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 32)
!1273 = !DISubroutineType(types: !1274)
!1274 = !{null, !1256, !209}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1250, file: !836, line: 374, baseType: !1276, size: 32, offset: 64)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 32)
!1277 = !DISubroutineType(types: !1278)
!1278 = !{!103, !1256}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1250, file: !836, line: 377, baseType: !1280, size: 32, offset: 96)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 32)
!1281 = !DISubroutineType(types: !1282)
!1282 = !{!103, !1256, !1283}
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 32)
!1284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1285)
!1285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !836, line: 122, size: 64, elements: !1286)
!1286 = !{!1287, !1288, !1289, !1290, !1291}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1285, file: !836, line: 123, baseType: !137, size: 32)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1285, file: !836, line: 124, baseType: !208, size: 8, offset: 32)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1285, file: !836, line: 125, baseType: !208, size: 8, offset: 40)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1285, file: !836, line: 126, baseType: !208, size: 8, offset: 48)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1285, file: !836, line: 127, baseType: !208, size: 8, offset: 56)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1250, file: !836, line: 379, baseType: !1293, size: 32, offset: 128)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 32)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!103, !1256, !1296}
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 32)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !172, line: 670, baseType: !1299)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 661, size: 224, elements: !1300)
!1300 = !{!1301, !1302, !1303, !1304, !1305, !1306, !1307}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1299, file: !172, line: 663, baseType: !176, size: 32)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1299, file: !172, line: 664, baseType: !176, size: 32, offset: 32)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1299, file: !172, line: 665, baseType: !176, size: 32, offset: 64)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1299, file: !172, line: 666, baseType: !176, size: 32, offset: 96)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1299, file: !172, line: 667, baseType: !176, size: 32, offset: 128)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1299, file: !172, line: 668, baseType: !176, size: 32, offset: 160)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1299, file: !172, line: 669, baseType: !176, size: 32, offset: 192)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 32)
!1309 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1310)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !705, line: 100, size: 224, elements: !1311)
!1311 = !{!1312, !1317, !1318, !1327, !1332, !1337, !1342}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1310, file: !705, line: 101, baseType: !1313, size: 32)
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !705, line: 76, baseType: !1314)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 32)
!1315 = !DISubroutineType(types: !1316)
!1316 = !{!103, !1256, !796}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1310, file: !705, line: 102, baseType: !1313, size: 32, offset: 32)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1310, file: !705, line: 103, baseType: !1319, size: 32, offset: 64)
!1319 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !705, line: 83, baseType: !1320)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 32)
!1321 = !DISubroutineType(types: !1322)
!1322 = !{!103, !1256, !796, !1323, !102}
!1323 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !705, line: 72, baseType: !1324)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 32)
!1325 = !DISubroutineType(types: !1326)
!1326 = !{null, !1256, !796, !102}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1310, file: !705, line: 104, baseType: !1328, size: 32, offset: 96)
!1328 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !705, line: 79, baseType: !1329)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 32)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{!103, !1256, !796, !149}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1310, file: !705, line: 105, baseType: !1333, size: 32, offset: 128)
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !705, line: 88, baseType: !1334)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 32)
!1335 = !DISubroutineType(types: !1336)
!1336 = !{!704, !1256, !796}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1310, file: !705, line: 106, baseType: !1338, size: 32, offset: 160)
!1338 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !705, line: 92, baseType: !1339)
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 32)
!1340 = !DISubroutineType(types: !1341)
!1341 = !{!103, !1256, !796, !822}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1310, file: !705, line: 107, baseType: !1343, size: 32, offset: 192)
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !705, line: 96, baseType: !1344)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 32)
!1345 = !DISubroutineType(types: !1346)
!1346 = !{!103, !1256, !796, !102}
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 32)
!1348 = !{!1349, !1353, !1355, !1362, !1210, !1364, !1372, !1395, !1398, !1401, !1403}
!1349 = !DIGlobalVariableExpression(var: !1350, expr: !DIExpression())
!1350 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1212, file: !1351, line: 1914, type: !1352, isLocal: false, isDefinition: true, align: 16)
!1351 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 128, elements: !159)
!1353 = !DIGlobalVariableExpression(var: !1354, expr: !DIExpression())
!1354 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1212, file: !1351, line: 1914, type: !1257, isLocal: false, isDefinition: true, align: 32)
!1355 = !DIGlobalVariableExpression(var: !1356, expr: !DIExpression())
!1356 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1212, file: !1351, line: 1914, type: !1357, isLocal: true, isDefinition: true, align: 32)
!1357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1358)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !1359)
!1359 = !{!1360, !1361}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1358, file: !187, line: 60, baseType: !1276, size: 32)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1358, file: !187, line: 65, baseType: !1256, size: 32, offset: 32)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1212, file: !1351, line: 1914, type: !1265, isLocal: true, isDefinition: true, align: 8)
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1212, file: !1351, line: 1914, type: !1366, isLocal: true, isDefinition: true)
!1366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1367, size: 64, elements: !391)
!1367 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1368)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !749, line: 343, size: 64, elements: !1369)
!1369 = !{!1370, !1371}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1368, file: !749, line: 344, baseType: !137, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1368, file: !749, line: 345, baseType: !137, size: 32, offset: 32)
!1372 = !DIGlobalVariableExpression(var: !1373, expr: !DIExpression())
!1373 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1212, file: !1351, line: 1914, type: !1374, isLocal: true, isDefinition: true)
!1374 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1375)
!1375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1376, line: 60, size: 64, elements: !1377)
!1376 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1377 = !{!1378, !1394}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1375, file: !1376, line: 69, baseType: !1379, size: 32)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 32)
!1380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1381)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1376, line: 50, size: 64, elements: !1382)
!1382 = !{!1383, !1392, !1393}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1381, file: !1376, line: 52, baseType: !1384, size: 32)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 32)
!1385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1386)
!1386 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1387, line: 37, baseType: !1388)
!1387 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1387, line: 32, size: 64, elements: !1389)
!1389 = !{!1390, !1391}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1388, file: !1387, line: 34, baseType: !137, size: 32)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1388, file: !1387, line: 36, baseType: !137, size: 32, offset: 32)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1381, file: !1376, line: 54, baseType: !208, size: 8, offset: 32)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1381, file: !1376, line: 56, baseType: !208, size: 8, offset: 40)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1375, file: !1376, line: 71, baseType: !208, size: 8, offset: 32)
!1395 = !DIGlobalVariableExpression(var: !1396, expr: !DIExpression())
!1396 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1212, file: !1351, line: 1914, type: !1397, isLocal: true, isDefinition: true)
!1397 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1380, size: 64, elements: !391)
!1398 = !DIGlobalVariableExpression(var: !1399, expr: !DIExpression())
!1399 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1212, file: !1351, line: 1914, type: !1400, isLocal: true, isDefinition: true)
!1400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1385, size: 128, elements: !294)
!1401 = !DIGlobalVariableExpression(var: !1402, expr: !DIExpression())
!1402 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1212, file: !1351, line: 1539, type: !1249, isLocal: true, isDefinition: true)
!1403 = !DIGlobalVariableExpression(var: !1404, expr: !DIExpression())
!1404 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1212, file: !1351, line: 1914, type: !1405, isLocal: true, isDefinition: true)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1406, line: 74, size: 64, elements: !1407)
!1406 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1407 = !{!1408, !1409}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1405, file: !1406, line: 76, baseType: !137, size: 32)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1405, file: !1406, line: 78, baseType: !1256, size: 32, offset: 32)
!1410 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1411)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1406, line: 22, size: 224, elements: !1412)
!1412 = !{!1413, !1414, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1411, file: !1406, line: 24, baseType: !1297, size: 32)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1411, file: !1406, line: 26, baseType: !1415, size: 32, offset: 32)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 32)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1411, file: !1406, line: 28, baseType: !120, size: 32, offset: 64)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1411, file: !1406, line: 30, baseType: !211, size: 8, offset: 96)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1411, file: !1406, line: 32, baseType: !103, size: 32, offset: 128)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1411, file: !1406, line: 34, baseType: !211, size: 8, offset: 160)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1411, file: !1406, line: 36, baseType: !211, size: 8, offset: 168)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1411, file: !1406, line: 38, baseType: !211, size: 8, offset: 176)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1411, file: !1406, line: 40, baseType: !211, size: 8, offset: 184)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1411, file: !1406, line: 41, baseType: !1424, size: 32, offset: 192)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 32)
!1425 = !DIGlobalVariableExpression(var: !1426, expr: !DIExpression())
!1426 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1427, file: !1507, line: 65, type: !176, isLocal: true, isDefinition: true)
!1427 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1428, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1429, retainedTypes: !1430, globals: !1504, splitDebugInlining: false, nameTableKind: None)
!1428 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!1429 = !{!471}
!1430 = !{!1431, !1433, !633, !208, !137, !1441, !1472}
!1431 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1432, line: 46, baseType: !330)
!1432 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 32)
!1434 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !402, line: 770, baseType: !1435)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 764, size: 128, elements: !1436)
!1436 = !{!1437, !1438, !1439, !1440}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1435, file: !402, line: 766, baseType: !176, size: 32)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1435, file: !402, line: 767, baseType: !176, size: 32, offset: 32)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1435, file: !402, line: 768, baseType: !176, size: 32, offset: 64)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1435, file: !402, line: 769, baseType: !406, size: 32, offset: 96)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 32)
!1442 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !402, line: 426, baseType: !1443)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 411, size: 28704, elements: !1444)
!1444 = !{!1445, !1447, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1462, !1467, !1471}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1443, file: !402, line: 413, baseType: !1446, size: 256)
!1446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 256, elements: !159)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1443, file: !402, line: 414, baseType: !1448, size: 768, offset: 256)
!1448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 768, elements: !1449)
!1449 = !{!1450}
!1450 = !DISubrange(count: 24)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1443, file: !402, line: 415, baseType: !1446, size: 256, offset: 1024)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1443, file: !402, line: 416, baseType: !1448, size: 768, offset: 1280)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1443, file: !402, line: 417, baseType: !1446, size: 256, offset: 2048)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1443, file: !402, line: 418, baseType: !1448, size: 768, offset: 2304)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1443, file: !402, line: 419, baseType: !1446, size: 256, offset: 3072)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1443, file: !402, line: 420, baseType: !1448, size: 768, offset: 3328)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1443, file: !402, line: 421, baseType: !1446, size: 256, offset: 4096)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1443, file: !402, line: 422, baseType: !1459, size: 1792, offset: 4352)
!1459 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 1792, elements: !1460)
!1460 = !{!1461}
!1461 = !DISubrange(count: 56)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1443, file: !402, line: 423, baseType: !1463, size: 1920, offset: 6144)
!1463 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1464, size: 1920, elements: !1465)
!1464 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !208)
!1465 = !{!1466}
!1466 = !DISubrange(count: 240)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1443, file: !402, line: 424, baseType: !1468, size: 20608, offset: 8064)
!1468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 20608, elements: !1469)
!1469 = !{!1470}
!1470 = !DISubrange(count: 644)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1443, file: !402, line: 425, baseType: !176, size: 32, offset: 28672)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 32)
!1473 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !1474)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !1475)
!1475 = !{!1476, !1477, !1478, !1479, !1480, !1481, !1482, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1495, !1496, !1497, !1499, !1501, !1503}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1474, file: !402, line: 447, baseType: !406, size: 32)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1474, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1474, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1474, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1474, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1474, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1474, file: !402, line: 453, baseType: !1483, size: 96, offset: 192)
!1483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1464, size: 96, elements: !1484)
!1484 = !{!1485}
!1485 = !DISubrange(count: 12)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1474, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1474, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1474, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1474, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1474, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1474, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1474, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1474, file: !402, line: 461, baseType: !1494, size: 64, offset: 512)
!1494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !406, size: 64, elements: !294)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1474, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1474, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1474, file: !402, line: 464, baseType: !1498, size: 128, offset: 640)
!1498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !406, size: 128, elements: !575)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1474, file: !402, line: 465, baseType: !1500, size: 160, offset: 768)
!1500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !406, size: 160, elements: !1085)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1474, file: !402, line: 466, baseType: !1502, size: 160, offset: 928)
!1502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 160, elements: !1085)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1474, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!1504 = !{!1505, !1531, !1534, !1536, !1538, !1425}
!1505 = !DIGlobalVariableExpression(var: !1506, expr: !DIExpression())
!1506 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1427, file: !1507, line: 285, type: !1508, isLocal: true, isDefinition: true, align: 32)
!1507 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1508 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1509)
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !1510)
!1510 = !{!1511, !1530}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1509, file: !187, line: 60, baseType: !1512, size: 32)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 32)
!1513 = !DISubroutineType(types: !1514)
!1514 = !{!103, !1515}
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 32)
!1516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1517)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !1518)
!1518 = !{!1519, !1520, !1521, !1522, !1528, !1529}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1517, file: !196, line: 380, baseType: !199, size: 32)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1517, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1517, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1517, file: !196, line: 386, baseType: !1523, size: 32, offset: 96)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 32)
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !1525)
!1525 = !{!1526, !1527}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1524, file: !196, line: 359, baseType: !208, size: 8)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1524, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1517, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1517, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1509, file: !187, line: 65, baseType: !1515, size: 32, offset: 32)
!1531 = !DIGlobalVariableExpression(var: !1532, expr: !DIExpression())
!1532 = distinct !DIGlobalVariable(name: "lock", scope: !1427, file: !1507, line: 34, type: !1533, isLocal: true, isDefinition: true)
!1533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!1534 = !DIGlobalVariableExpression(var: !1535, expr: !DIExpression())
!1535 = distinct !DIGlobalVariable(name: "last_load", scope: !1427, file: !1507, line: 36, type: !137, isLocal: true, isDefinition: true)
!1536 = !DIGlobalVariableExpression(var: !1537, expr: !DIExpression())
!1537 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1427, file: !1507, line: 48, type: !137, isLocal: true, isDefinition: true)
!1538 = !DIGlobalVariableExpression(var: !1539, expr: !DIExpression())
!1539 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1427, file: !1507, line: 54, type: !137, isLocal: true, isDefinition: true)
!1540 = !DIGlobalVariableExpression(var: !1541, expr: !DIExpression())
!1541 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1542, file: !1624, line: 22, type: !1626, isLocal: true, isDefinition: true)
!1542 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1543, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1544, retainedTypes: !1545, globals: !1621, splitDebugInlining: false, nameTableKind: None)
!1543 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!1544 = !{!899, !905}
!1545 = !{!1546, !1610, !1615, !952, !905, !899, !1620, !102}
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 32)
!1547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1548)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !900, line: 523, size: 288, elements: !1549)
!1549 = !{!1550, !1569, !1573, !1577, !1581, !1582, !1583, !1587, !1606}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1548, file: !900, line: 524, baseType: !1551, size: 32)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 32)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{!103, !1554, !940, !941}
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 32)
!1555 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1556)
!1556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !1557)
!1557 = !{!1558, !1559, !1560, !1561, !1567, !1568}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1556, file: !196, line: 380, baseType: !199, size: 32)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1556, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1556, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1556, file: !196, line: 386, baseType: !1562, size: 32, offset: 96)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 32)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !1564)
!1564 = !{!1565, !1566}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1563, file: !196, line: 359, baseType: !208, size: 8)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1563, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1556, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1556, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1548, file: !900, line: 530, baseType: !1570, size: 32, offset: 32)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 32)
!1571 = !DISubroutineType(types: !1572)
!1572 = !{!103, !1554, !946}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1548, file: !900, line: 532, baseType: !1574, size: 32, offset: 64)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 32)
!1575 = !DISubroutineType(types: !1576)
!1576 = !{!103, !1554, !952, !947}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1548, file: !900, line: 535, baseType: !1578, size: 32, offset: 96)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 32)
!1579 = !DISubroutineType(types: !1580)
!1580 = !{!103, !1554, !952}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1548, file: !900, line: 537, baseType: !1578, size: 32, offset: 128)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1548, file: !900, line: 539, baseType: !1578, size: 32, offset: 160)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1548, file: !900, line: 541, baseType: !1584, size: 32, offset: 192)
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 32)
!1585 = !DISubroutineType(types: !1586)
!1586 = !{!103, !1554, !940, !899, !905}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1548, file: !900, line: 544, baseType: !1588, size: 32, offset: 224)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 32)
!1589 = !DISubroutineType(types: !1590)
!1590 = !{!103, !1554, !1591, !211}
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 32)
!1592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !900, line: 478, size: 96, elements: !1593)
!1593 = !{!1594, !1600, !1605}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1592, file: !900, line: 482, baseType: !1595, size: 32)
!1595 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !972, line: 33, baseType: !1596)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !972, line: 29, size: 32, elements: !1597)
!1597 = !{!1598}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1596, file: !972, line: 30, baseType: !1599, size: 32)
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 32)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1592, file: !900, line: 485, baseType: !1601, size: 32, offset: 32)
!1601 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !900, line: 464, baseType: !1602)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 32)
!1603 = !DISubroutineType(types: !1604)
!1604 = !{null, !1554, !1591, !952}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1592, file: !900, line: 493, baseType: !952, size: 32, offset: 64)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1548, file: !900, line: 547, baseType: !1607, size: 32, offset: 256)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 32)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{!137, !1554}
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 32)
!1611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1612)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !900, line: 428, size: 32, elements: !1613)
!1613 = !{!1614}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1612, file: !900, line: 434, baseType: !952, size: 32)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 32)
!1616 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1617)
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !900, line: 441, size: 32, elements: !1618)
!1618 = !{!1619}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1617, file: !900, line: 447, baseType: !952, size: 32)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 32)
!1621 = !{!1622, !1540}
!1622 = !DIGlobalVariableExpression(var: !1623, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1623 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1542, file: !1624, line: 37, type: !1625, isLocal: true, isDefinition: true)
!1624 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!1626 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1627, size: 352, elements: !1628)
!1627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1554)
!1628 = !{!1629}
!1629 = !DISubrange(count: 11)
!1630 = !DIGlobalVariableExpression(var: !1631, expr: !DIExpression())
!1631 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1632, file: !1672, line: 139, type: !1679, isLocal: false, isDefinition: true)
!1632 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1633, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1634, globals: !1669, splitDebugInlining: false, nameTableKind: None)
!1633 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!1634 = !{!1635}
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 32)
!1636 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 532, baseType: !1637)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 500, size: 1088, elements: !1638)
!1638 = !{!1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1637, file: !172, line: 502, baseType: !176, size: 32)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1637, file: !172, line: 503, baseType: !176, size: 32, offset: 32)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1637, file: !172, line: 504, baseType: !176, size: 32, offset: 64)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1637, file: !172, line: 505, baseType: !176, size: 32, offset: 96)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1637, file: !172, line: 506, baseType: !176, size: 32, offset: 128)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1637, file: !172, line: 507, baseType: !176, size: 32, offset: 160)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1637, file: !172, line: 508, baseType: !176, size: 32, offset: 192)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1637, file: !172, line: 509, baseType: !137, size: 32, offset: 224)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1637, file: !172, line: 510, baseType: !176, size: 32, offset: 256)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1637, file: !172, line: 511, baseType: !176, size: 32, offset: 288)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1637, file: !172, line: 512, baseType: !727, size: 64, offset: 320)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1637, file: !172, line: 513, baseType: !176, size: 32, offset: 384)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1637, file: !172, line: 514, baseType: !176, size: 32, offset: 416)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1637, file: !172, line: 515, baseType: !176, size: 32, offset: 448)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1637, file: !172, line: 516, baseType: !137, size: 32, offset: 480)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1637, file: !172, line: 517, baseType: !176, size: 32, offset: 512)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1637, file: !172, line: 518, baseType: !176, size: 32, offset: 544)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1637, file: !172, line: 519, baseType: !727, size: 64, offset: 576)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1637, file: !172, line: 520, baseType: !176, size: 32, offset: 640)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1637, file: !172, line: 521, baseType: !176, size: 32, offset: 672)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1637, file: !172, line: 522, baseType: !176, size: 32, offset: 704)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1637, file: !172, line: 523, baseType: !137, size: 32, offset: 736)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1637, file: !172, line: 524, baseType: !176, size: 32, offset: 768)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1637, file: !172, line: 525, baseType: !176, size: 32, offset: 800)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1637, file: !172, line: 526, baseType: !727, size: 64, offset: 832)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1637, file: !172, line: 527, baseType: !176, size: 32, offset: 896)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1637, file: !172, line: 528, baseType: !176, size: 32, offset: 928)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1637, file: !172, line: 529, baseType: !727, size: 64, offset: 960)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1637, file: !172, line: 530, baseType: !176, size: 32, offset: 1024)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1637, file: !172, line: 531, baseType: !176, size: 32, offset: 1056)
!1669 = !{!1670, !1673, !1630}
!1670 = !DIGlobalVariableExpression(var: !1671, expr: !DIExpression())
!1671 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1632, file: !1672, line: 137, type: !137, isLocal: false, isDefinition: true)
!1672 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1673 = !DIGlobalVariableExpression(var: !1674, expr: !DIExpression())
!1674 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1632, file: !1672, line: 138, type: !1675, isLocal: false, isDefinition: true)
!1675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1676, size: 128, elements: !1677)
!1676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !208)
!1677 = !{!1678}
!1678 = !DISubrange(count: 16)
!1679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1676, size: 64, elements: !159)
!1680 = !DIGlobalVariableExpression(var: !1681, expr: !DIExpression())
!1681 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1682, file: !1685, line: 23, type: !1686, isLocal: false, isDefinition: true)
!1682 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1683, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1684, splitDebugInlining: false, nameTableKind: None)
!1683 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!1684 = !{!1680}
!1685 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1687 = !DIGlobalVariableExpression(var: !1688, expr: !DIExpression())
!1688 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1689, file: !1693, line: 86, type: !1941, isLocal: false, isDefinition: true, align: 512)
!1689 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1690, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1691, retainedTypes: !1700, globals: !1774, splitDebugInlining: false, nameTableKind: None)
!1690 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!1691 = !{!1692, !30, !471}
!1692 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1693, line: 63, baseType: !32, size: 32, elements: !1694)
!1693 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1694 = !{!1695, !1696, !1697, !1698, !1699}
!1695 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1696 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1697 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1698 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1699 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1700 = !{!22, !120, !102, !103, !1701, !1022, !137, !1732, !633, !208, !1757}
!1701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 32)
!1702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1703)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1704, line: 51, size: 64, elements: !1705)
!1704 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1705 = !{!1706, !1727}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1703, file: !1704, line: 52, baseType: !1707, size: 32)
!1707 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1704, line: 38, baseType: !1708)
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 32)
!1709 = !DISubroutineType(types: !1710)
!1710 = !{!103, !1711, !1726, !151}
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 32)
!1712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1713)
!1713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !1714)
!1714 = !{!1715, !1716, !1717, !1718, !1724, !1725}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1713, file: !196, line: 380, baseType: !199, size: 32)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1713, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1713, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1713, file: !196, line: 386, baseType: !1719, size: 32, offset: 96)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 32)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !1721)
!1721 = !{!1722, !1723}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1720, file: !196, line: 359, baseType: !208, size: 8)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1720, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1713, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1713, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1703, file: !1704, line: 53, baseType: !1728, size: 32, offset: 32)
!1728 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1704, line: 47, baseType: !1729)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 32)
!1730 = !DISubroutineType(types: !1731)
!1731 = !{!103, !1711, !1726, !151, !137}
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 32)
!1733 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !1734)
!1734 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !1735)
!1735 = !{!1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1734, file: !402, line: 447, baseType: !406, size: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1734, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1734, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1734, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1734, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1734, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1734, file: !402, line: 453, baseType: !1483, size: 96, offset: 192)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1734, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1734, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1734, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1734, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1734, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1734, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1734, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1734, file: !402, line: 461, baseType: !1494, size: 64, offset: 512)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1734, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1734, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1734, file: !402, line: 464, baseType: !1498, size: 128, offset: 640)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1734, file: !402, line: 465, baseType: !1500, size: 160, offset: 768)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1734, file: !402, line: 466, baseType: !1502, size: 160, offset: 928)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1734, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 32)
!1758 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !402, line: 426, baseType: !1759)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 411, size: 28704, elements: !1760)
!1760 = !{!1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1759, file: !402, line: 413, baseType: !1446, size: 256)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1759, file: !402, line: 414, baseType: !1448, size: 768, offset: 256)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1759, file: !402, line: 415, baseType: !1446, size: 256, offset: 1024)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1759, file: !402, line: 416, baseType: !1448, size: 768, offset: 1280)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1759, file: !402, line: 417, baseType: !1446, size: 256, offset: 2048)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1759, file: !402, line: 418, baseType: !1448, size: 768, offset: 2304)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1759, file: !402, line: 419, baseType: !1446, size: 256, offset: 3072)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1759, file: !402, line: 420, baseType: !1448, size: 768, offset: 3328)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1759, file: !402, line: 421, baseType: !1446, size: 256, offset: 4096)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1759, file: !402, line: 422, baseType: !1459, size: 1792, offset: 4352)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1759, file: !402, line: 423, baseType: !1463, size: 1920, offset: 6144)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1759, file: !402, line: 424, baseType: !1468, size: 20608, offset: 8064)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1759, file: !402, line: 425, baseType: !176, size: 32, offset: 28672)
!1774 = !{!1775, !1897, !1906, !1908, !1687, !1911, !1913, !1918}
!1775 = !DIGlobalVariableExpression(var: !1776, expr: !DIExpression())
!1776 = distinct !DIGlobalVariable(name: "_kernel", scope: !1689, file: !1693, line: 40, type: !1777, isLocal: false, isDefinition: true)
!1777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !299, line: 158, size: 288, elements: !1778)
!1778 = !{!1779, !1892}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1777, file: !299, line: 159, baseType: !1780, size: 192)
!1780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1781, size: 192, elements: !391)
!1781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !299, line: 100, size: 192, elements: !1782)
!1782 = !{!1783, !1784, !1785, !1886, !1887, !1888, !1889}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1781, file: !299, line: 102, baseType: !137, size: 32)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1781, file: !299, line: 105, baseType: !1022, size: 32, offset: 32)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1781, file: !299, line: 108, baseType: !1786, size: 32, offset: 64)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 32)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !1788)
!1788 = !{!1789, !1847, !1859, !1860, !1861, !1862, !1868, !1881}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1787, file: !263, line: 247, baseType: !1790, size: 384)
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !1791)
!1791 = !{!1792, !1816, !1823, !1824, !1825, !1834, !1835, !1836}
!1792 = !DIDerivedType(tag: DW_TAG_member, scope: !1790, file: !263, line: 60, baseType: !1793, size: 64)
!1793 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1790, file: !263, line: 60, size: 64, elements: !1794)
!1794 = !{!1795, !1810}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1793, file: !263, line: 61, baseType: !1796, size: 64)
!1796 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !1797)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !1798)
!1798 = !{!1799, !1805}
!1799 = !DIDerivedType(tag: DW_TAG_member, scope: !1797, file: !273, line: 38, baseType: !1800, size: 32)
!1800 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1797, file: !273, line: 38, size: 32, elements: !1801)
!1801 = !{!1802, !1804}
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1800, file: !273, line: 39, baseType: !1803, size: 32)
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 32)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1800, file: !273, line: 40, baseType: !1803, size: 32)
!1805 = !DIDerivedType(tag: DW_TAG_member, scope: !1797, file: !273, line: 42, baseType: !1806, size: 32, offset: 32)
!1806 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1797, file: !273, line: 42, size: 32, elements: !1807)
!1807 = !{!1808, !1809}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1806, file: !273, line: 43, baseType: !1803, size: 32)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1806, file: !273, line: 44, baseType: !1803, size: 32)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1793, file: !263, line: 62, baseType: !1811, size: 64)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !1812)
!1812 = !{!1813}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1811, file: !289, line: 50, baseType: !1814, size: 64)
!1814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1815, size: 64, elements: !294)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 32)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1790, file: !263, line: 68, baseType: !1817, size: 32, offset: 64)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 32)
!1818 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !1819)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !1820)
!1820 = !{!1821}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1819, file: !299, line: 232, baseType: !1822, size: 64)
!1822 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !1797)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1790, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1790, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!1825 = !DIDerivedType(tag: DW_TAG_member, scope: !1790, file: !263, line: 90, baseType: !1826, size: 16, offset: 112)
!1826 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1790, file: !263, line: 90, size: 16, elements: !1827)
!1827 = !{!1828, !1833}
!1828 = !DIDerivedType(tag: DW_TAG_member, scope: !1826, file: !263, line: 91, baseType: !1829, size: 16)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1826, file: !263, line: 91, size: 16, elements: !1830)
!1830 = !{!1831, !1832}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1829, file: !263, line: 96, baseType: !313, size: 8)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1829, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1826, file: !263, line: 100, baseType: !151, size: 16)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1790, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1790, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1790, file: !263, line: 131, baseType: !1837, size: 192, offset: 192)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !1838)
!1838 = !{!1839, !1840, !1846}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1837, file: !299, line: 245, baseType: !1796, size: 64)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1837, file: !299, line: 246, baseType: !1841, size: 32, offset: 64)
!1841 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !1842)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 32)
!1843 = !DISubroutineType(types: !1844)
!1844 = !{null, !1845}
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 32)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1837, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1787, file: !263, line: 250, baseType: !1848, size: 288, offset: 384)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !1849)
!1849 = !{!1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1848, file: !334, line: 26, baseType: !137, size: 32)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1848, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1848, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1848, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1848, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1848, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1848, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1848, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1848, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1787, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1787, file: !263, line: 256, baseType: !1818, size: 64, offset: 704)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1787, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1787, file: !263, line: 300, baseType: !1863, size: 96, offset: 800)
!1863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !1864)
!1864 = !{!1865, !1866, !1867}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1863, file: !263, line: 153, baseType: !22, size: 32)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1863, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1863, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1787, file: !263, line: 325, baseType: !1869, size: 32, offset: 896)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 32)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !1871)
!1871 = !{!1872, !1878, !1879}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1870, file: !357, line: 5074, baseType: !1873, size: 96)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !1874)
!1874 = !{!1875, !1876, !1877}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1873, file: !113, line: 57, baseType: !116, size: 32)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1873, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1873, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1870, file: !357, line: 5075, baseType: !1818, size: 64, offset: 96)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1870, file: !357, line: 5076, baseType: !1880, offset: 160)
!1880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1787, file: !263, line: 343, baseType: !1882, size: 64, offset: 928)
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !1883)
!1883 = !{!1884, !1885}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1882, file: !334, line: 63, baseType: !137, size: 32)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1882, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1781, file: !299, line: 111, baseType: !1786, size: 32, offset: 96)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1781, file: !299, line: 124, baseType: !103, size: 32, offset: 128)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1781, file: !299, line: 127, baseType: !208, size: 8, offset: 160)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1781, file: !299, line: 153, baseType: !1890, offset: 168)
!1890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1891, line: 33, elements: !162)
!1891 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1777, file: !299, line: 170, baseType: !1893, size: 96, offset: 192)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !299, line: 83, size: 96, elements: !1894)
!1894 = !{!1895, !1896}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1893, file: !299, line: 86, baseType: !1786, size: 32)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1893, file: !299, line: 90, baseType: !1822, size: 64, offset: 32)
!1897 = !DIGlobalVariableExpression(var: !1898, expr: !DIExpression())
!1898 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1689, file: !1693, line: 43, type: !1899, isLocal: false, isDefinition: true, align: 512)
!1899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1900, size: 8704, elements: !1904)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1901, line: 47, size: 8, elements: !1902)
!1901 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1902 = !{!1903}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1900, file: !1901, line: 48, baseType: !109, size: 8)
!1904 = !{!1905}
!1905 = !DISubrange(count: 1088)
!1906 = !DIGlobalVariableExpression(var: !1907, expr: !DIExpression())
!1907 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1689, file: !1693, line: 44, type: !1787, isLocal: false, isDefinition: true)
!1908 = !DIGlobalVariableExpression(var: !1909, expr: !DIExpression())
!1909 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1689, file: !1693, line: 48, type: !1910, isLocal: false, isDefinition: true)
!1910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1787, size: 1024, elements: !391)
!1911 = !DIGlobalVariableExpression(var: !1912, expr: !DIExpression())
!1912 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1689, file: !1693, line: 217, type: !211, isLocal: false, isDefinition: true)
!1913 = !DIGlobalVariableExpression(var: !1914, expr: !DIExpression())
!1914 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1689, file: !1693, line: 50, type: !1915, isLocal: true, isDefinition: true, align: 512)
!1915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1900, size: 3072, elements: !1916)
!1916 = !{!392, !1917}
!1917 = !DISubrange(count: 384)
!1918 = !DIGlobalVariableExpression(var: !1919, expr: !DIExpression())
!1919 = distinct !DIGlobalVariable(name: "levels", scope: !1920, file: !1693, line: 232, type: !1940, isLocal: true, isDefinition: true)
!1920 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1693, file: !1693, line: 230, type: !1921, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !1923)
!1921 = !DISubroutineType(types: !1922)
!1922 = !{null, !1692}
!1923 = !{!1924, !1925, !1935, !1939}
!1924 = !DILocalVariable(name: "level", arg: 1, scope: !1920, file: !1693, line: 230, type: !1692)
!1925 = !DILocalVariable(name: "entry", scope: !1920, file: !1693, line: 244, type: !1926)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 32)
!1927 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1928)
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !1929)
!1929 = !{!1930, !1934}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1928, file: !187, line: 60, baseType: !1931, size: 32)
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 32)
!1932 = !DISubroutineType(types: !1933)
!1933 = !{!103, !1711}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1928, file: !187, line: 65, baseType: !1711, size: 32, offset: 32)
!1935 = !DILocalVariable(name: "dev", scope: !1936, file: !1693, line: 247, type: !1711)
!1936 = distinct !DILexicalBlock(scope: !1937, file: !1693, line: 246, column: 64)
!1937 = distinct !DILexicalBlock(scope: !1938, file: !1693, line: 246, column: 2)
!1938 = distinct !DILexicalBlock(scope: !1920, file: !1693, line: 246, column: 2)
!1939 = !DILocalVariable(name: "rc", scope: !1936, file: !1693, line: 248, type: !103)
!1940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1926, size: 192, elements: !1068)
!1941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1900, size: 16896, elements: !1942)
!1942 = !{!392, !1943}
!1943 = !DISubrange(count: 2112)
!1944 = !DIGlobalVariableExpression(var: !1945, expr: !DIExpression())
!1945 = distinct !DIGlobalVariable(name: "states_str", scope: !1946, file: !1947, line: 276, type: !2068, isLocal: true, isDefinition: true)
!1946 = distinct !DISubprogram(name: "k_thread_state_str", scope: !1947, file: !1947, line: 271, type: !1948, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !2059)
!1947 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1948 = !DISubroutineType(types: !1949)
!1949 = !{!199, !1950, !1022, !120}
!1950 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !1951)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 32)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !1953)
!1953 = !{!1954, !2012, !2024, !2025, !2026, !2027, !2033, !2046}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1952, file: !263, line: 247, baseType: !1955, size: 384)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !1956)
!1956 = !{!1957, !1981, !1988, !1989, !1990, !1999, !2000, !2001}
!1957 = !DIDerivedType(tag: DW_TAG_member, scope: !1955, file: !263, line: 60, baseType: !1958, size: 64)
!1958 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1955, file: !263, line: 60, size: 64, elements: !1959)
!1959 = !{!1960, !1975}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1958, file: !263, line: 61, baseType: !1961, size: 64)
!1961 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !1962)
!1962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !1963)
!1963 = !{!1964, !1970}
!1964 = !DIDerivedType(tag: DW_TAG_member, scope: !1962, file: !273, line: 38, baseType: !1965, size: 32)
!1965 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1962, file: !273, line: 38, size: 32, elements: !1966)
!1966 = !{!1967, !1969}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1965, file: !273, line: 39, baseType: !1968, size: 32)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 32)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1965, file: !273, line: 40, baseType: !1968, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_member, scope: !1962, file: !273, line: 42, baseType: !1971, size: 32, offset: 32)
!1971 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1962, file: !273, line: 42, size: 32, elements: !1972)
!1972 = !{!1973, !1974}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1971, file: !273, line: 43, baseType: !1968, size: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1971, file: !273, line: 44, baseType: !1968, size: 32)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1958, file: !263, line: 62, baseType: !1976, size: 64)
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !1977)
!1977 = !{!1978}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1976, file: !289, line: 50, baseType: !1979, size: 64)
!1979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1980, size: 64, elements: !294)
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 32)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1955, file: !263, line: 68, baseType: !1982, size: 32, offset: 64)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 32)
!1983 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !1984)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !1985)
!1985 = !{!1986}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1984, file: !299, line: 232, baseType: !1987, size: 64)
!1987 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !1962)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1955, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1955, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!1990 = !DIDerivedType(tag: DW_TAG_member, scope: !1955, file: !263, line: 90, baseType: !1991, size: 16, offset: 112)
!1991 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1955, file: !263, line: 90, size: 16, elements: !1992)
!1992 = !{!1993, !1998}
!1993 = !DIDerivedType(tag: DW_TAG_member, scope: !1991, file: !263, line: 91, baseType: !1994, size: 16)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1991, file: !263, line: 91, size: 16, elements: !1995)
!1995 = !{!1996, !1997}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1994, file: !263, line: 96, baseType: !313, size: 8)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1994, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1991, file: !263, line: 100, baseType: !151, size: 16)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1955, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1955, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1955, file: !263, line: 131, baseType: !2002, size: 192, offset: 192)
!2002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !2003)
!2003 = !{!2004, !2005, !2011}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2002, file: !299, line: 245, baseType: !1961, size: 64)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2002, file: !299, line: 246, baseType: !2006, size: 32, offset: 64)
!2006 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !2007)
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 32)
!2008 = !DISubroutineType(types: !2009)
!2009 = !{null, !2010}
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2002, size: 32)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2002, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1952, file: !263, line: 250, baseType: !2013, size: 288, offset: 384)
!2013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !2014)
!2014 = !{!2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2013, file: !334, line: 26, baseType: !137, size: 32)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2013, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2013, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2013, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2013, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2013, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2013, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2013, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2013, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1952, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1952, file: !263, line: 256, baseType: !1983, size: 64, offset: 704)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1952, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1952, file: !263, line: 300, baseType: !2028, size: 96, offset: 800)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !2029)
!2029 = !{!2030, !2031, !2032}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2028, file: !263, line: 153, baseType: !22, size: 32)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2028, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2028, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1952, file: !263, line: 325, baseType: !2034, size: 32, offset: 896)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 32)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !2036)
!2036 = !{!2037, !2043, !2044}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2035, file: !357, line: 5074, baseType: !2038, size: 96)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !2039)
!2039 = !{!2040, !2041, !2042}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2038, file: !113, line: 57, baseType: !116, size: 32)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2038, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2038, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2035, file: !357, line: 5075, baseType: !1983, size: 64, offset: 96)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2035, file: !357, line: 5076, baseType: !2045, offset: 160)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1952, file: !263, line: 343, baseType: !2047, size: 64, offset: 928)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !2048)
!2048 = !{!2049, !2050}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2047, file: !334, line: 63, baseType: !137, size: 32)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2047, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!2051 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2052, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2053, globals: !2055, splitDebugInlining: false, nameTableKind: None)
!2052 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!2053 = !{!102, !199, !1431, !208, !103, !2054, !24, !120, !1022, !22, !137, !163}
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 32)
!2055 = !{!1944, !2056}
!2056 = !DIGlobalVariableExpression(var: !2057, expr: !DIExpression())
!2057 = distinct !DIGlobalVariable(name: "states_sz", scope: !1946, file: !1947, line: 279, type: !2058, isLocal: true, isDefinition: true)
!2058 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1625, size: 256, elements: !159)
!2059 = !{!2060, !2061, !2062, !2063, !2064, !2065, !2066}
!2060 = !DILocalVariable(name: "thread_id", arg: 1, scope: !1946, file: !1947, line: 271, type: !1950)
!2061 = !DILocalVariable(name: "buf", arg: 2, scope: !1946, file: !1947, line: 271, type: !1022)
!2062 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1946, file: !1947, line: 271, type: !120)
!2063 = !DILocalVariable(name: "off", scope: !1946, file: !1947, line: 273, type: !120)
!2064 = !DILocalVariable(name: "bit", scope: !1946, file: !1947, line: 274, type: !208)
!2065 = !DILocalVariable(name: "thread_state", scope: !1946, file: !1947, line: 275, type: !208)
!2066 = !DILocalVariable(name: "index", scope: !2067, file: !1947, line: 293, type: !208)
!2067 = distinct !DILexicalBlock(scope: !1946, file: !1947, line: 293, column: 2)
!2068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !199, size: 256, elements: !159)
!2069 = !DIGlobalVariableExpression(var: !2070, expr: !DIExpression())
!2070 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2071, file: !2179, line: 56, type: !2168, isLocal: false, isDefinition: true)
!2071 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2072, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2073, globals: !2176, splitDebugInlining: false, nameTableKind: None)
!2072 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!2073 = !{!2074, !1022, !102, !2174, !1726, !1431, !633, !103, !137, !163, !2175}
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2075, size: 32)
!2075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !2076)
!2076 = !{!2077, !2135, !2147, !2148, !2149, !2150, !2156, !2169}
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2075, file: !263, line: 247, baseType: !2078, size: 384)
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !2079)
!2079 = !{!2080, !2104, !2111, !2112, !2113, !2122, !2123, !2124}
!2080 = !DIDerivedType(tag: DW_TAG_member, scope: !2078, file: !263, line: 60, baseType: !2081, size: 64)
!2081 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2078, file: !263, line: 60, size: 64, elements: !2082)
!2082 = !{!2083, !2098}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2081, file: !263, line: 61, baseType: !2084, size: 64)
!2084 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !2085)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !2086)
!2086 = !{!2087, !2093}
!2087 = !DIDerivedType(tag: DW_TAG_member, scope: !2085, file: !273, line: 38, baseType: !2088, size: 32)
!2088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2085, file: !273, line: 38, size: 32, elements: !2089)
!2089 = !{!2090, !2092}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2088, file: !273, line: 39, baseType: !2091, size: 32)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 32)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2088, file: !273, line: 40, baseType: !2091, size: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, scope: !2085, file: !273, line: 42, baseType: !2094, size: 32, offset: 32)
!2094 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2085, file: !273, line: 42, size: 32, elements: !2095)
!2095 = !{!2096, !2097}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2094, file: !273, line: 43, baseType: !2091, size: 32)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2094, file: !273, line: 44, baseType: !2091, size: 32)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2081, file: !263, line: 62, baseType: !2099, size: 64)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !2100)
!2100 = !{!2101}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2099, file: !289, line: 50, baseType: !2102, size: 64)
!2102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2103, size: 64, elements: !294)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2078, file: !263, line: 68, baseType: !2105, size: 32, offset: 64)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 32)
!2106 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !2107)
!2107 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !2108)
!2108 = !{!2109}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2107, file: !299, line: 232, baseType: !2110, size: 64)
!2110 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !2085)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2078, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2078, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!2113 = !DIDerivedType(tag: DW_TAG_member, scope: !2078, file: !263, line: 90, baseType: !2114, size: 16, offset: 112)
!2114 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2078, file: !263, line: 90, size: 16, elements: !2115)
!2115 = !{!2116, !2121}
!2116 = !DIDerivedType(tag: DW_TAG_member, scope: !2114, file: !263, line: 91, baseType: !2117, size: 16)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2114, file: !263, line: 91, size: 16, elements: !2118)
!2118 = !{!2119, !2120}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2117, file: !263, line: 96, baseType: !313, size: 8)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2117, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2114, file: !263, line: 100, baseType: !151, size: 16)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2078, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2078, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2078, file: !263, line: 131, baseType: !2125, size: 192, offset: 192)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !2126)
!2126 = !{!2127, !2128, !2134}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2125, file: !299, line: 245, baseType: !2084, size: 64)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2125, file: !299, line: 246, baseType: !2129, size: 32, offset: 64)
!2129 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !2130)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 32)
!2131 = !DISubroutineType(types: !2132)
!2132 = !{null, !2133}
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 32)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2125, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2075, file: !263, line: 250, baseType: !2136, size: 288, offset: 384)
!2136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !2137)
!2137 = !{!2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2136, file: !334, line: 26, baseType: !137, size: 32)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2136, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2136, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2136, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2136, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2136, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2136, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2136, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2136, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2075, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2075, file: !263, line: 256, baseType: !2106, size: 64, offset: 704)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2075, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2075, file: !263, line: 300, baseType: !2151, size: 96, offset: 800)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !2152)
!2152 = !{!2153, !2154, !2155}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2151, file: !263, line: 153, baseType: !22, size: 32)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2151, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2151, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2075, file: !263, line: 325, baseType: !2157, size: 32, offset: 896)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 32)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !2159)
!2159 = !{!2160, !2166, !2167}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2158, file: !357, line: 5074, baseType: !2161, size: 96)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !2162)
!2162 = !{!2163, !2164, !2165}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2161, file: !113, line: 57, baseType: !116, size: 32)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2161, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2161, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2158, file: !357, line: 5075, baseType: !2106, size: 64, offset: 96)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2158, file: !357, line: 5076, baseType: !2168, offset: 160)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2075, file: !263, line: 343, baseType: !2170, size: 64, offset: 928)
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !2171)
!2171 = !{!2172, !2173}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2170, file: !334, line: 63, baseType: !137, size: 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2170, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 32)
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 32)
!2176 = !{!2069, !2177, !2180, !2182}
!2177 = !DIGlobalVariableExpression(var: !2178, expr: !DIExpression())
!2178 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2071, file: !2179, line: 404, type: !103, isLocal: true, isDefinition: true)
!2179 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2180 = !DIGlobalVariableExpression(var: !2181, expr: !DIExpression())
!2181 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2071, file: !2179, line: 405, type: !103, isLocal: true, isDefinition: true)
!2182 = !DIGlobalVariableExpression(var: !2183, expr: !DIExpression())
!2183 = distinct !DIGlobalVariable(name: "pending_current", scope: !2071, file: !2179, line: 425, type: !2074, isLocal: true, isDefinition: true)
!2184 = !DIGlobalVariableExpression(var: !2185, expr: !DIExpression())
!2185 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2186, file: !2216, line: 15, type: !163, isLocal: true, isDefinition: true)
!2186 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2187, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2188, globals: !2213, splitDebugInlining: false, nameTableKind: None)
!2187 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!2188 = !{!1431, !102, !633, !137, !163, !103, !2189, !1022, !330}
!2189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2190, size: 32)
!2190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !2191)
!2191 = !{!2192, !2207, !2212}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2190, file: !299, line: 245, baseType: !2193, size: 64)
!2193 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !2194)
!2194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !2195)
!2195 = !{!2196, !2202}
!2196 = !DIDerivedType(tag: DW_TAG_member, scope: !2194, file: !273, line: 38, baseType: !2197, size: 32)
!2197 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2194, file: !273, line: 38, size: 32, elements: !2198)
!2198 = !{!2199, !2201}
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2197, file: !273, line: 39, baseType: !2200, size: 32)
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 32)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2197, file: !273, line: 40, baseType: !2200, size: 32)
!2202 = !DIDerivedType(tag: DW_TAG_member, scope: !2194, file: !273, line: 42, baseType: !2203, size: 32, offset: 32)
!2203 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2194, file: !273, line: 42, size: 32, elements: !2204)
!2204 = !{!2205, !2206}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2203, file: !273, line: 43, baseType: !2200, size: 32)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2203, file: !273, line: 44, baseType: !2200, size: 32)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2190, file: !299, line: 246, baseType: !2208, size: 32, offset: 64)
!2208 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !2209)
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 32)
!2210 = !DISubroutineType(types: !2211)
!2211 = !{null, !2189}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2190, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!2213 = !{!2184, !2214, !2218, !2220}
!2214 = !DIGlobalVariableExpression(var: !2215, expr: !DIExpression())
!2215 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2186, file: !2216, line: 19, type: !2217, isLocal: true, isDefinition: true)
!2216 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!2218 = !DIGlobalVariableExpression(var: !2219, expr: !DIExpression())
!2219 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2186, file: !2216, line: 25, type: !103, isLocal: true, isDefinition: true)
!2220 = !DIGlobalVariableExpression(var: !2221, expr: !DIExpression())
!2221 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2186, file: !2216, line: 17, type: !2222, isLocal: true, isDefinition: true)
!2222 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !2194)
!2223 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2224, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2224 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!2225 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2226, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2226 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!2227 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2228, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2229, splitDebugInlining: false, nameTableKind: None)
!2228 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!2229 = !{!102, !120, !1726, !24, !2230, !22, !2235, !103, !149, !150}
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !142, line: 58, baseType: !2232)
!2232 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 58, size: 64, elements: !2233)
!2233 = !{!2234}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2232, file: !142, line: 58, baseType: !158, size: 64)
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2236, size: 32)
!2236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !142, line: 68, size: 224, elements: !2237)
!2237 = !{!2238, !2241, !2242, !2243, !2244, !2245, !2246}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2236, file: !142, line: 69, baseType: !2239, size: 64)
!2239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2240, size: 64, elements: !294)
!2240 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !142, line: 61, baseType: !137)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2236, file: !142, line: 70, baseType: !2240, size: 32, offset: 64)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2236, file: !142, line: 71, baseType: !137, size: 32, offset: 96)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !2236, file: !142, line: 73, baseType: !120, size: 32, offset: 128)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !2236, file: !142, line: 74, baseType: !120, size: 32, offset: 160)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !2236, file: !142, line: 75, baseType: !120, size: 32, offset: 192)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2236, file: !142, line: 77, baseType: !2247, offset: 224)
!2247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2248, elements: !2251)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !142, line: 64, size: 32, elements: !2249)
!2249 = !{!2250}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2248, file: !142, line: 65, baseType: !2240, size: 32)
!2251 = !{!2252}
!2252 = !DISubrange(count: 0)
!2253 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2254, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2255, retainedTypes: !2275, splitDebugInlining: false, nameTableKind: None)
!2254 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!2255 = !{!2256, !2264}
!2256 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2257, line: 69, baseType: !32, size: 32, elements: !2258)
!2257 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2258 = !{!2259, !2260, !2261, !2262, !2263}
!2259 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2260 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2261 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2262 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2263 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2264 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2257, line: 56, baseType: !32, size: 32, elements: !2265)
!2265 = !{!2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274}
!2266 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2267 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2268 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2269 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2270 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2271 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2272 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2273 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2274 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2275 = !{!103, !2256, !2264, !2276, !314, !218, !2278, !2279, !209, !152, !199, !120, !102, !22, !32, !2281, !2282, !2283, !2284, !2285, !331, !2286, !2277, !2287, !2288, !2289, !2290}
!2276 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2257, line: 31, baseType: !2277)
!2277 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !331)
!2278 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !121, line: 329, baseType: !32)
!2279 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2257, line: 32, baseType: !2280)
!2280 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !164)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 32)
!2283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 32)
!2284 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2284, size: 32)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2277, size: 32)
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!2289 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !121, line: 145, baseType: !103)
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 32)
!2291 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2292, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2292 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!2293 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2294, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2295, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2294 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!2295 = !{!2296, !30}
!2296 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2297, line: 27, baseType: !32, size: 32, elements: !2298)
!2297 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2298 = !{!2299, !2300, !2301, !2302, !2303}
!2299 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2300 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2301 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2302 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2303 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2304 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2305, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2306, retainedTypes: !2307, splitDebugInlining: false, nameTableKind: None)
!2305 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!2306 = !{!471, !2296, !30}
!2307 = !{!659, !2308, !102, !103, !633, !137, !208, !2325}
!2308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 32)
!2309 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !402, line: 426, baseType: !2310)
!2310 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 411, size: 28704, elements: !2311)
!2311 = !{!2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2310, file: !402, line: 413, baseType: !1446, size: 256)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2310, file: !402, line: 414, baseType: !1448, size: 768, offset: 256)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2310, file: !402, line: 415, baseType: !1446, size: 256, offset: 1024)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2310, file: !402, line: 416, baseType: !1448, size: 768, offset: 1280)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2310, file: !402, line: 417, baseType: !1446, size: 256, offset: 2048)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2310, file: !402, line: 418, baseType: !1448, size: 768, offset: 2304)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2310, file: !402, line: 419, baseType: !1446, size: 256, offset: 3072)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2310, file: !402, line: 420, baseType: !1448, size: 768, offset: 3328)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2310, file: !402, line: 421, baseType: !1446, size: 256, offset: 4096)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2310, file: !402, line: 422, baseType: !1459, size: 1792, offset: 4352)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2310, file: !402, line: 423, baseType: !1463, size: 1920, offset: 6144)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2310, file: !402, line: 424, baseType: !1468, size: 20608, offset: 8064)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2310, file: !402, line: 425, baseType: !176, size: 32, offset: 28672)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 32)
!2326 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2327)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2328)
!2328 = !{!2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2327, file: !402, line: 447, baseType: !406, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2327, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2327, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2327, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2327, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2327, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2327, file: !402, line: 453, baseType: !1483, size: 96, offset: 192)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2327, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2327, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2327, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2327, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2327, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2327, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2327, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2327, file: !402, line: 461, baseType: !1494, size: 64, offset: 512)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2327, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2327, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2327, file: !402, line: 464, baseType: !1498, size: 128, offset: 640)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2327, file: !402, line: 465, baseType: !1500, size: 160, offset: 768)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2327, file: !402, line: 466, baseType: !1502, size: 160, offset: 928)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2327, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2350 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2351, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2351 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!2352 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2353, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2354, splitDebugInlining: false, nameTableKind: None)
!2353 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!2354 = !{!102, !103, !22, !2355}
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 32)
!2356 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2357)
!2357 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2358)
!2358 = !{!2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379}
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2357, file: !402, line: 447, baseType: !406, size: 32)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2357, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2357, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2357, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2357, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2357, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2357, file: !402, line: 453, baseType: !1483, size: 96, offset: 192)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2357, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2357, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2357, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2357, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2357, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2357, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2357, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2357, file: !402, line: 461, baseType: !1494, size: 64, offset: 512)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2357, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2357, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2357, file: !402, line: 464, baseType: !1498, size: 128, offset: 640)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2357, file: !402, line: 465, baseType: !1500, size: 160, offset: 768)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2357, file: !402, line: 466, baseType: !1502, size: 160, offset: 928)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2357, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2380 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2381, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2382, splitDebugInlining: false, nameTableKind: None)
!2381 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!2382 = !{!2383, !102, !103}
!2383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 32)
!2384 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2385)
!2385 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2386)
!2386 = !{!2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2385, file: !402, line: 447, baseType: !406, size: 32)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2385, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2385, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2385, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2385, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2385, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2385, file: !402, line: 453, baseType: !1483, size: 96, offset: 192)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2385, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2385, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2385, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2385, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2385, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2385, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2385, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2385, file: !402, line: 461, baseType: !1494, size: 64, offset: 512)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2385, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2385, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2385, file: !402, line: 464, baseType: !1498, size: 128, offset: 640)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2385, file: !402, line: 465, baseType: !1500, size: 160, offset: 768)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2385, file: !402, line: 466, baseType: !1502, size: 160, offset: 928)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2385, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2408 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2409, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2410, splitDebugInlining: false, nameTableKind: None)
!2409 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!2410 = !{!2411, !137, !102, !103}
!2411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2412, size: 32)
!2412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2413, line: 98, size: 256, elements: !2414)
!2413 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2414 = !{!2415, !2420, !2425, !2430, !2435, !2440, !2445, !2450}
!2415 = !DIDerivedType(tag: DW_TAG_member, scope: !2412, file: !2413, line: 99, baseType: !2416, size: 32)
!2416 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2412, file: !2413, line: 99, size: 32, elements: !2417)
!2417 = !{!2418, !2419}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2416, file: !2413, line: 99, baseType: !137, size: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2416, file: !2413, line: 99, baseType: !137, size: 32)
!2420 = !DIDerivedType(tag: DW_TAG_member, scope: !2412, file: !2413, line: 100, baseType: !2421, size: 32, offset: 32)
!2421 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2412, file: !2413, line: 100, size: 32, elements: !2422)
!2422 = !{!2423, !2424}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2421, file: !2413, line: 100, baseType: !137, size: 32)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2421, file: !2413, line: 100, baseType: !137, size: 32)
!2425 = !DIDerivedType(tag: DW_TAG_member, scope: !2412, file: !2413, line: 101, baseType: !2426, size: 32, offset: 64)
!2426 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2412, file: !2413, line: 101, size: 32, elements: !2427)
!2427 = !{!2428, !2429}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2426, file: !2413, line: 101, baseType: !137, size: 32)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2426, file: !2413, line: 101, baseType: !137, size: 32)
!2430 = !DIDerivedType(tag: DW_TAG_member, scope: !2412, file: !2413, line: 102, baseType: !2431, size: 32, offset: 96)
!2431 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2412, file: !2413, line: 102, size: 32, elements: !2432)
!2432 = !{!2433, !2434}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2431, file: !2413, line: 102, baseType: !137, size: 32)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2431, file: !2413, line: 102, baseType: !137, size: 32)
!2435 = !DIDerivedType(tag: DW_TAG_member, scope: !2412, file: !2413, line: 103, baseType: !2436, size: 32, offset: 128)
!2436 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2412, file: !2413, line: 103, size: 32, elements: !2437)
!2437 = !{!2438, !2439}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2436, file: !2413, line: 103, baseType: !137, size: 32)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2436, file: !2413, line: 103, baseType: !137, size: 32)
!2440 = !DIDerivedType(tag: DW_TAG_member, scope: !2412, file: !2413, line: 104, baseType: !2441, size: 32, offset: 160)
!2441 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2412, file: !2413, line: 104, size: 32, elements: !2442)
!2442 = !{!2443, !2444}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2441, file: !2413, line: 104, baseType: !137, size: 32)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2441, file: !2413, line: 104, baseType: !137, size: 32)
!2445 = !DIDerivedType(tag: DW_TAG_member, scope: !2412, file: !2413, line: 105, baseType: !2446, size: 32, offset: 192)
!2446 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2412, file: !2413, line: 105, size: 32, elements: !2447)
!2447 = !{!2448, !2449}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2446, file: !2413, line: 105, baseType: !137, size: 32)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2446, file: !2413, line: 105, baseType: !137, size: 32)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2412, file: !2413, line: 106, baseType: !137, size: 32, offset: 224)
!2451 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2452, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2295, retainedTypes: !2453, splitDebugInlining: false, nameTableKind: None)
!2452 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!2453 = !{!2454, !102, !103, !2479, !150, !137}
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2456)
!2456 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2457)
!2457 = !{!2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2456, file: !402, line: 447, baseType: !406, size: 32)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2456, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2456, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2456, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2456, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2456, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2456, file: !402, line: 453, baseType: !1483, size: 96, offset: 192)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2456, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2456, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2456, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2456, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2456, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2456, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2456, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2456, file: !402, line: 461, baseType: !1494, size: 64, offset: 512)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2456, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2456, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2456, file: !402, line: 464, baseType: !1498, size: 128, offset: 640)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2456, file: !402, line: 465, baseType: !1500, size: 160, offset: 768)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2456, file: !402, line: 466, baseType: !1502, size: 160, offset: 928)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2456, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 32)
!2480 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2413, line: 141, baseType: !2481)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2413, line: 97, size: 256, elements: !2482)
!2482 = !{!2483}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2481, file: !2413, line: 107, baseType: !2484, size: 256)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2413, line: 98, size: 256, elements: !2485)
!2485 = !{!2486, !2491, !2496, !2501, !2506, !2511, !2516, !2521}
!2486 = !DIDerivedType(tag: DW_TAG_member, scope: !2484, file: !2413, line: 99, baseType: !2487, size: 32)
!2487 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2484, file: !2413, line: 99, size: 32, elements: !2488)
!2488 = !{!2489, !2490}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2487, file: !2413, line: 99, baseType: !137, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2487, file: !2413, line: 99, baseType: !137, size: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, scope: !2484, file: !2413, line: 100, baseType: !2492, size: 32, offset: 32)
!2492 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2484, file: !2413, line: 100, size: 32, elements: !2493)
!2493 = !{!2494, !2495}
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2492, file: !2413, line: 100, baseType: !137, size: 32)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2492, file: !2413, line: 100, baseType: !137, size: 32)
!2496 = !DIDerivedType(tag: DW_TAG_member, scope: !2484, file: !2413, line: 101, baseType: !2497, size: 32, offset: 64)
!2497 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2484, file: !2413, line: 101, size: 32, elements: !2498)
!2498 = !{!2499, !2500}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2497, file: !2413, line: 101, baseType: !137, size: 32)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2497, file: !2413, line: 101, baseType: !137, size: 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, scope: !2484, file: !2413, line: 102, baseType: !2502, size: 32, offset: 96)
!2502 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2484, file: !2413, line: 102, size: 32, elements: !2503)
!2503 = !{!2504, !2505}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2502, file: !2413, line: 102, baseType: !137, size: 32)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2502, file: !2413, line: 102, baseType: !137, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, scope: !2484, file: !2413, line: 103, baseType: !2507, size: 32, offset: 128)
!2507 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2484, file: !2413, line: 103, size: 32, elements: !2508)
!2508 = !{!2509, !2510}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2507, file: !2413, line: 103, baseType: !137, size: 32)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2507, file: !2413, line: 103, baseType: !137, size: 32)
!2511 = !DIDerivedType(tag: DW_TAG_member, scope: !2484, file: !2413, line: 104, baseType: !2512, size: 32, offset: 160)
!2512 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2484, file: !2413, line: 104, size: 32, elements: !2513)
!2513 = !{!2514, !2515}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2512, file: !2413, line: 104, baseType: !137, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2512, file: !2413, line: 104, baseType: !137, size: 32)
!2516 = !DIDerivedType(tag: DW_TAG_member, scope: !2484, file: !2413, line: 105, baseType: !2517, size: 32, offset: 192)
!2517 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2484, file: !2413, line: 105, size: 32, elements: !2518)
!2518 = !{!2519, !2520}
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2517, file: !2413, line: 105, baseType: !137, size: 32)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2517, file: !2413, line: 105, baseType: !137, size: 32)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2484, file: !2413, line: 106, baseType: !137, size: 32, offset: 224)
!2522 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2523, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1429, retainedTypes: !2524, splitDebugInlining: false, nameTableKind: None)
!2523 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!2524 = !{!659, !633, !208, !137, !2525, !2542}
!2525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2526, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !402, line: 426, baseType: !2527)
!2527 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 411, size: 28704, elements: !2528)
!2528 = !{!2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541}
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2527, file: !402, line: 413, baseType: !1446, size: 256)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2527, file: !402, line: 414, baseType: !1448, size: 768, offset: 256)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2527, file: !402, line: 415, baseType: !1446, size: 256, offset: 1024)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2527, file: !402, line: 416, baseType: !1448, size: 768, offset: 1280)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2527, file: !402, line: 417, baseType: !1446, size: 256, offset: 2048)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2527, file: !402, line: 418, baseType: !1448, size: 768, offset: 2304)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2527, file: !402, line: 419, baseType: !1446, size: 256, offset: 3072)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2527, file: !402, line: 420, baseType: !1448, size: 768, offset: 3328)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2527, file: !402, line: 421, baseType: !1446, size: 256, offset: 4096)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2527, file: !402, line: 422, baseType: !1459, size: 1792, offset: 4352)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2527, file: !402, line: 423, baseType: !1463, size: 1920, offset: 6144)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2527, file: !402, line: 424, baseType: !1468, size: 20608, offset: 8064)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2527, file: !402, line: 425, baseType: !176, size: 32, offset: 28672)
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2543, size: 32)
!2543 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2544)
!2544 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2545)
!2545 = !{!2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2544, file: !402, line: 447, baseType: !406, size: 32)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2544, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2544, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2544, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2544, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2544, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2544, file: !402, line: 453, baseType: !1483, size: 96, offset: 192)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2544, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2544, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2544, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2544, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2544, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2544, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2544, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2544, file: !402, line: 461, baseType: !1494, size: 64, offset: 512)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2544, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2544, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2544, file: !402, line: 464, baseType: !1498, size: 128, offset: 640)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2544, file: !402, line: 465, baseType: !1500, size: 160, offset: 768)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2544, file: !402, line: 466, baseType: !1502, size: 160, offset: 928)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2544, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2567 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2568, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2569, splitDebugInlining: false, nameTableKind: None)
!2568 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!2569 = !{!2570, !102, !103}
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2572)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2573)
!2573 = !{!2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2572, file: !402, line: 447, baseType: !406, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2572, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2572, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2572, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2572, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2572, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2572, file: !402, line: 453, baseType: !1483, size: 96, offset: 192)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2572, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2572, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2572, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2572, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2572, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2572, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2572, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2572, file: !402, line: 461, baseType: !1494, size: 64, offset: 512)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2572, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2572, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2572, file: !402, line: 464, baseType: !1498, size: 128, offset: 640)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2572, file: !402, line: 465, baseType: !1500, size: 160, offset: 768)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2572, file: !402, line: 466, baseType: !1502, size: 160, offset: 928)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2572, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2595 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2596, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2597, splitDebugInlining: false, nameTableKind: None)
!2596 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!2597 = !{!109, !1022, !120, !857, !2598, !209, !102}
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 32)
!2599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !209)
!2600 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2601, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2602, splitDebugInlining: false, nameTableKind: None)
!2601 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!2602 = !{!2603}
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2604, size: 32)
!2604 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 532, baseType: !2605)
!2605 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 500, size: 1088, elements: !2606)
!2606 = !{!2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2605, file: !172, line: 502, baseType: !176, size: 32)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2605, file: !172, line: 503, baseType: !176, size: 32, offset: 32)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2605, file: !172, line: 504, baseType: !176, size: 32, offset: 64)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2605, file: !172, line: 505, baseType: !176, size: 32, offset: 96)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2605, file: !172, line: 506, baseType: !176, size: 32, offset: 128)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2605, file: !172, line: 507, baseType: !176, size: 32, offset: 160)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2605, file: !172, line: 508, baseType: !176, size: 32, offset: 192)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2605, file: !172, line: 509, baseType: !137, size: 32, offset: 224)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2605, file: !172, line: 510, baseType: !176, size: 32, offset: 256)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2605, file: !172, line: 511, baseType: !176, size: 32, offset: 288)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2605, file: !172, line: 512, baseType: !727, size: 64, offset: 320)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2605, file: !172, line: 513, baseType: !176, size: 32, offset: 384)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2605, file: !172, line: 514, baseType: !176, size: 32, offset: 416)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2605, file: !172, line: 515, baseType: !176, size: 32, offset: 448)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2605, file: !172, line: 516, baseType: !137, size: 32, offset: 480)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2605, file: !172, line: 517, baseType: !176, size: 32, offset: 512)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2605, file: !172, line: 518, baseType: !176, size: 32, offset: 544)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2605, file: !172, line: 519, baseType: !727, size: 64, offset: 576)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2605, file: !172, line: 520, baseType: !176, size: 32, offset: 640)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2605, file: !172, line: 521, baseType: !176, size: 32, offset: 672)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2605, file: !172, line: 522, baseType: !176, size: 32, offset: 704)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2605, file: !172, line: 523, baseType: !137, size: 32, offset: 736)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2605, file: !172, line: 524, baseType: !176, size: 32, offset: 768)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2605, file: !172, line: 525, baseType: !176, size: 32, offset: 800)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2605, file: !172, line: 526, baseType: !727, size: 64, offset: 832)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2605, file: !172, line: 527, baseType: !176, size: 32, offset: 896)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2605, file: !172, line: 528, baseType: !176, size: 32, offset: 928)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2605, file: !172, line: 529, baseType: !727, size: 64, offset: 960)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2605, file: !172, line: 530, baseType: !176, size: 32, offset: 1024)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2605, file: !172, line: 531, baseType: !176, size: 32, offset: 1056)
!2637 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2638, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2638 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!2639 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2640, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2641, retainedTypes: !2657, splitDebugInlining: false, nameTableKind: None)
!2640 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!2641 = !{!2642, !2649, !2653}
!2642 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2643, line: 38, baseType: !32, size: 32, elements: !2644)
!2643 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2644 = !{!2645, !2646, !2647, !2648}
!2645 = !DIEnumerator(name: "HAL_OK", value: 0)
!2646 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2647 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2648 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2649 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !700, line: 184, baseType: !32, size: 32, elements: !2650)
!2650 = !{!2651, !2652}
!2651 = !DIEnumerator(name: "RESET", value: 0)
!2652 = !DIEnumerator(name: "SET", value: 1)
!2653 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !700, line: 190, baseType: !32, size: 32, elements: !2654)
!2654 = !{!2655, !2656}
!2655 = !DIEnumerator(name: "DISABLE", value: 0)
!2656 = !DIEnumerator(name: "ENABLE", value: 1)
!2657 = !{!102, !2658, !208, !137, !1347, !2692, !2698, !2709, !151, !2710, !163}
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 32)
!2659 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 532, baseType: !2660)
!2660 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 500, size: 1088, elements: !2661)
!2661 = !{!2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2660, file: !172, line: 502, baseType: !176, size: 32)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2660, file: !172, line: 503, baseType: !176, size: 32, offset: 32)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2660, file: !172, line: 504, baseType: !176, size: 32, offset: 64)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2660, file: !172, line: 505, baseType: !176, size: 32, offset: 96)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2660, file: !172, line: 506, baseType: !176, size: 32, offset: 128)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2660, file: !172, line: 507, baseType: !176, size: 32, offset: 160)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2660, file: !172, line: 508, baseType: !176, size: 32, offset: 192)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2660, file: !172, line: 509, baseType: !137, size: 32, offset: 224)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2660, file: !172, line: 510, baseType: !176, size: 32, offset: 256)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2660, file: !172, line: 511, baseType: !176, size: 32, offset: 288)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2660, file: !172, line: 512, baseType: !727, size: 64, offset: 320)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2660, file: !172, line: 513, baseType: !176, size: 32, offset: 384)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2660, file: !172, line: 514, baseType: !176, size: 32, offset: 416)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2660, file: !172, line: 515, baseType: !176, size: 32, offset: 448)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2660, file: !172, line: 516, baseType: !137, size: 32, offset: 480)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2660, file: !172, line: 517, baseType: !176, size: 32, offset: 512)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2660, file: !172, line: 518, baseType: !176, size: 32, offset: 544)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2660, file: !172, line: 519, baseType: !727, size: 64, offset: 576)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2660, file: !172, line: 520, baseType: !176, size: 32, offset: 640)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2660, file: !172, line: 521, baseType: !176, size: 32, offset: 672)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2660, file: !172, line: 522, baseType: !176, size: 32, offset: 704)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2660, file: !172, line: 523, baseType: !137, size: 32, offset: 736)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2660, file: !172, line: 524, baseType: !176, size: 32, offset: 768)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2660, file: !172, line: 525, baseType: !176, size: 32, offset: 800)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2660, file: !172, line: 526, baseType: !727, size: 64, offset: 832)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2660, file: !172, line: 527, baseType: !176, size: 32, offset: 896)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2660, file: !172, line: 528, baseType: !176, size: 32, offset: 928)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2660, file: !172, line: 529, baseType: !727, size: 64, offset: 960)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2660, file: !172, line: 530, baseType: !176, size: 32, offset: 1024)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2660, file: !172, line: 531, baseType: !176, size: 32, offset: 1056)
!2692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2693, size: 32)
!2693 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !172, line: 494, baseType: !2694)
!2694 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 490, size: 64, elements: !2695)
!2695 = !{!2696, !2697}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2694, file: !172, line: 492, baseType: !176, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2694, file: !172, line: 493, baseType: !176, size: 32, offset: 32)
!2698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2699, size: 32)
!2699 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !172, line: 369, baseType: !2700)
!2700 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 360, size: 224, elements: !2701)
!2701 = !{!2702, !2703, !2704, !2705, !2706, !2707, !2708}
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2700, file: !172, line: 362, baseType: !176, size: 32)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2700, file: !172, line: 363, baseType: !176, size: 32, offset: 32)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2700, file: !172, line: 364, baseType: !176, size: 32, offset: 64)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2700, file: !172, line: 365, baseType: !176, size: 32, offset: 96)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2700, file: !172, line: 366, baseType: !176, size: 32, offset: 128)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2700, file: !172, line: 367, baseType: !176, size: 32, offset: 160)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2700, file: !172, line: 368, baseType: !176, size: 32, offset: 192)
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 32)
!2710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 32)
!2711 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !172, line: 441, baseType: !2712)
!2712 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 430, size: 320, elements: !2713)
!2713 = !{!2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2712, file: !172, line: 432, baseType: !176, size: 32)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2712, file: !172, line: 433, baseType: !176, size: 32, offset: 32)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2712, file: !172, line: 434, baseType: !176, size: 32, offset: 64)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2712, file: !172, line: 435, baseType: !176, size: 32, offset: 96)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2712, file: !172, line: 436, baseType: !176, size: 32, offset: 128)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2712, file: !172, line: 437, baseType: !176, size: 32, offset: 160)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2712, file: !172, line: 438, baseType: !176, size: 32, offset: 192)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2712, file: !172, line: 439, baseType: !176, size: 32, offset: 224)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2712, file: !172, line: 440, baseType: !1011, size: 64, offset: 256)
!2723 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2724, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2725, retainedTypes: !2726, splitDebugInlining: false, nameTableKind: None)
!2724 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!2725 = !{!699}
!2726 = !{!2727, !137, !2735, !2741, !2752}
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 32)
!2728 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !402, line: 770, baseType: !2729)
!2729 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 764, size: 128, elements: !2730)
!2730 = !{!2731, !2732, !2733, !2734}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2729, file: !402, line: 766, baseType: !176, size: 32)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2729, file: !402, line: 767, baseType: !176, size: 32, offset: 32)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2729, file: !402, line: 768, baseType: !176, size: 32, offset: 64)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2729, file: !402, line: 769, baseType: !406, size: 32, offset: 96)
!2735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2736, size: 32)
!2736 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !172, line: 494, baseType: !2737)
!2737 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 490, size: 64, elements: !2738)
!2738 = !{!2739, !2740}
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2737, file: !172, line: 492, baseType: !176, size: 32)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2737, file: !172, line: 493, baseType: !176, size: 32, offset: 32)
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 32)
!2742 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !172, line: 369, baseType: !2743)
!2743 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 360, size: 224, elements: !2744)
!2744 = !{!2745, !2746, !2747, !2748, !2749, !2750, !2751}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2743, file: !172, line: 362, baseType: !176, size: 32)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2743, file: !172, line: 363, baseType: !176, size: 32, offset: 32)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2743, file: !172, line: 364, baseType: !176, size: 32, offset: 64)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2743, file: !172, line: 365, baseType: !176, size: 32, offset: 96)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2743, file: !172, line: 366, baseType: !176, size: 32, offset: 128)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2743, file: !172, line: 367, baseType: !176, size: 32, offset: 160)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2743, file: !172, line: 368, baseType: !176, size: 32, offset: 192)
!2752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2753, size: 32)
!2753 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 532, baseType: !2754)
!2754 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 500, size: 1088, elements: !2755)
!2755 = !{!2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785}
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2754, file: !172, line: 502, baseType: !176, size: 32)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2754, file: !172, line: 503, baseType: !176, size: 32, offset: 32)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2754, file: !172, line: 504, baseType: !176, size: 32, offset: 64)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2754, file: !172, line: 505, baseType: !176, size: 32, offset: 96)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2754, file: !172, line: 506, baseType: !176, size: 32, offset: 128)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2754, file: !172, line: 507, baseType: !176, size: 32, offset: 160)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2754, file: !172, line: 508, baseType: !176, size: 32, offset: 192)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2754, file: !172, line: 509, baseType: !137, size: 32, offset: 224)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2754, file: !172, line: 510, baseType: !176, size: 32, offset: 256)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2754, file: !172, line: 511, baseType: !176, size: 32, offset: 288)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2754, file: !172, line: 512, baseType: !727, size: 64, offset: 320)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2754, file: !172, line: 513, baseType: !176, size: 32, offset: 384)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2754, file: !172, line: 514, baseType: !176, size: 32, offset: 416)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2754, file: !172, line: 515, baseType: !176, size: 32, offset: 448)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2754, file: !172, line: 516, baseType: !137, size: 32, offset: 480)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2754, file: !172, line: 517, baseType: !176, size: 32, offset: 512)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2754, file: !172, line: 518, baseType: !176, size: 32, offset: 544)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2754, file: !172, line: 519, baseType: !727, size: 64, offset: 576)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2754, file: !172, line: 520, baseType: !176, size: 32, offset: 640)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2754, file: !172, line: 521, baseType: !176, size: 32, offset: 672)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2754, file: !172, line: 522, baseType: !176, size: 32, offset: 704)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2754, file: !172, line: 523, baseType: !137, size: 32, offset: 736)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2754, file: !172, line: 524, baseType: !176, size: 32, offset: 768)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2754, file: !172, line: 525, baseType: !176, size: 32, offset: 800)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2754, file: !172, line: 526, baseType: !727, size: 64, offset: 832)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2754, file: !172, line: 527, baseType: !176, size: 32, offset: 896)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2754, file: !172, line: 528, baseType: !176, size: 32, offset: 928)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2754, file: !172, line: 529, baseType: !727, size: 64, offset: 960)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2754, file: !172, line: 530, baseType: !176, size: 32, offset: 1024)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2754, file: !172, line: 531, baseType: !176, size: 32, offset: 1056)
!2786 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2787, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2788, splitDebugInlining: false, nameTableKind: None)
!2787 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!2788 = !{!102, !120}
!2789 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2790, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2791, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2790 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!2791 = !{!2792, !2799, !30}
!2792 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2793, line: 14, baseType: !32, size: 32, elements: !2794)
!2793 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2794 = !{!2795, !2796, !2797, !2798}
!2795 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2796 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2797 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2798 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2799 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2793, line: 42, baseType: !32, size: 32, elements: !2800)
!2800 = !{!2801, !2802, !2803, !2804, !2805, !2806}
!2801 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2802 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2803 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2804 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2805 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2806 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2807 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2808, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2808 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!2809 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2810, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2811, splitDebugInlining: false, nameTableKind: None)
!2810 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!2811 = !{!22, !102, !103}
!2812 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2813, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2813 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!2814 = !{!"Ubuntu clang version 14.0.6"}
!2815 = !{i32 7, !"Dwarf Version", i32 4}
!2816 = !{i32 2, !"Debug Info Version", i32 3}
!2817 = !{i32 1, !"wchar_size", i32 4}
!2818 = !{i32 1, !"min_enum_size", i32 4}
!2819 = !{i32 1, !"branch-target-enforcement", i32 0}
!2820 = !{i32 1, !"sign-return-address", i32 0}
!2821 = !{i32 1, !"sign-return-address-all", i32 0}
!2822 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2823 = !{i32 7, !"frame-pointer", i32 2}
!2824 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2825, file: !2825, line: 26, type: !2826, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !162)
!2825 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2826 = !DISubroutineType(types: !2827)
!2827 = !{null}
!2828 = !DILocation(line: 28, column: 1, scope: !2824)
!2829 = !{i64 2155117505, i64 2155117525, i64 2155117588}
!2830 = !DILocation(line: 29, column: 1, scope: !2824)
!2831 = !{i64 2155117920, i64 2155117940, i64 2155118003}
!2832 = !DILocation(line: 30, column: 1, scope: !2824)
!2833 = !{i64 2155118339, i64 2155118359, i64 2155118422}
!2834 = !DILocation(line: 31, column: 1, scope: !2824)
!2835 = !{i64 2155118758, i64 2155118778, i64 2155118841}
!2836 = !DILocation(line: 33, column: 1, scope: !2824)
!2837 = !{i64 2155119050, i64 2155119070, i64 2155119133}
!2838 = !DILocation(line: 35, column: 1, scope: !2824)
!2839 = !{i64 2155119375, i64 2155119395, i64 2155119458}
!2840 = !DILocation(line: 50, column: 1, scope: !2824)
!2841 = !{i64 2155119802, i64 2155119822, i64 2155119885}
!2842 = !DILocation(line: 54, column: 1, scope: !2824)
!2843 = !{i64 2155120241, i64 2155120261, i64 2155120324}
!2844 = !DILocation(line: 61, column: 1, scope: !2824)
!2845 = !{i64 2155120558, i64 2155120578, i64 2155120641}
!2846 = !DILocation(line: 63, column: 1, scope: !2824)
!2847 = !{i64 2155120938, i64 2155120958, i64 2155121021}
!2848 = !DILocation(line: 64, column: 1, scope: !2824)
!2849 = !{i64 2155121460, i64 2155121480, i64 2155121543}
!2850 = !DILocation(line: 65, column: 1, scope: !2824)
!2851 = !{i64 2155121958, i64 2155121978, i64 2155122041}
!2852 = !DILocation(line: 66, column: 1, scope: !2824)
!2853 = !{i64 2155122440, i64 2155122460, i64 2155122523}
!2854 = !DILocation(line: 67, column: 1, scope: !2824)
!2855 = !{i64 2155122947, i64 2155122967, i64 2155123030}
!2856 = !DILocation(line: 68, column: 1, scope: !2824)
!2857 = !{i64 2155123435, i64 2155123455, i64 2155123518}
!2858 = !DILocation(line: 70, column: 1, scope: !2824)
!2859 = !{i64 2155123903, i64 2155123923, i64 2155123986}
!2860 = !DILocation(line: 71, column: 1, scope: !2824)
!2861 = !{i64 2155124345, i64 2155124365, i64 2155124428}
!2862 = !DILocation(line: 72, column: 1, scope: !2824)
!2863 = !{i64 2155124803, i64 2155124823, i64 2155124886}
!2864 = !DILocation(line: 79, column: 1, scope: !2824)
!2865 = !{i64 2155125257, i64 2155125277, i64 2155125340}
!2866 = !DILocation(line: 80, column: 1, scope: !2824)
!2867 = !{i64 2155125768, i64 2155125788, i64 2155125851}
!2868 = !DILocation(line: 82, column: 1, scope: !2824)
!2869 = !{i64 2155130320, i64 2155130340, i64 2155130403}
!2870 = !DILocation(line: 97, column: 1, scope: !2824)
!2871 = !{i64 2155130657, i64 2155130677, i64 2155130740}
!2872 = !DILocation(line: 99, column: 1, scope: !2824)
!2873 = !{i64 2155130875, i64 2155130895, i64 2155130958}
!2874 = !DILocation(line: 102, column: 1, scope: !2824)
!2875 = !{i64 2155131132, i64 2155131152, i64 2155131215}
!2876 = !DILocation(line: 105, column: 1, scope: !2824)
!2877 = !{i64 2155131372, i64 2155131392, i64 2155131455}
!2878 = !DILocation(line: 115, column: 1, scope: !2824)
!2879 = !{i64 2155131711, i64 2155131731, i64 2155131794}
!2880 = !DILocation(line: 118, column: 1, scope: !2824)
!2881 = !{i64 2155132055, i64 2155132075, i64 2155132138}
!2882 = !DILocation(line: 32, column: 1, scope: !2883)
!2883 = !DILexicalBlockFile(scope: !2824, file: !2884, discriminator: 0)
!2884 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2885 = !{i64 2155132411, i64 2155132431, i64 2155132494}
!2886 = !DILocation(line: 33, column: 1, scope: !2883)
!2887 = !{i64 2155132923, i64 2155132943, i64 2155133006}
!2888 = !DILocation(line: 53, column: 1, scope: !2883)
!2889 = !{i64 2155133431, i64 2155133451, i64 2155133514}
!2890 = !DILocation(line: 54, column: 1, scope: !2883)
!2891 = !{i64 2155133849, i64 2155133869, i64 2155133932}
!2892 = !DILocation(line: 55, column: 1, scope: !2883)
!2893 = !{i64 2155134267, i64 2155134287, i64 2155134350}
!2894 = !DILocation(line: 56, column: 1, scope: !2883)
!2895 = !{i64 2155134685, i64 2155134705, i64 2155134768}
!2896 = !DILocation(line: 57, column: 1, scope: !2883)
!2897 = !{i64 2155135103, i64 2155135123, i64 2155135186}
!2898 = !DILocation(line: 58, column: 1, scope: !2883)
!2899 = !{i64 2155135521, i64 2155135541, i64 2155135604}
!2900 = !DILocation(line: 59, column: 1, scope: !2883)
!2901 = !{i64 2155135939, i64 2155135959, i64 2155136022}
!2902 = !DILocation(line: 60, column: 1, scope: !2883)
!2903 = !{i64 2155136363, i64 2155136383, i64 2155136446}
!2904 = !DILocation(line: 61, column: 1, scope: !2883)
!2905 = !{i64 2155136680, i64 2155136700, i64 2155136763}
!2906 = !DILocation(line: 70, column: 1, scope: !2883)
!2907 = !{i64 2155136909, i64 2155136929, i64 2155136992}
!2908 = !DILocation(line: 72, column: 1, scope: !2883)
!2909 = !{i64 2155137241, i64 2155137261, i64 2155137324}
!2910 = !DILocation(line: 73, column: 1, scope: !2883)
!2911 = !{i64 2155137691, i64 2155137711, i64 2155137774}
!2912 = !DILocation(line: 74, column: 1, scope: !2883)
!2913 = !{i64 2155138141, i64 2155138161, i64 2155138224}
!2914 = !DILocation(line: 75, column: 1, scope: !2883)
!2915 = !{i64 2155138591, i64 2155138611, i64 2155138674}
!2916 = !DILocation(line: 76, column: 1, scope: !2883)
!2917 = !{i64 2155139041, i64 2155139061, i64 2155139124}
!2918 = !DILocation(line: 77, column: 1, scope: !2883)
!2919 = !{i64 2155139491, i64 2155139511, i64 2155139574}
!2920 = !DILocation(line: 78, column: 1, scope: !2883)
!2921 = !{i64 2155144002, i64 2155144022, i64 2155144085}
!2922 = !DILocation(line: 79, column: 1, scope: !2883)
!2923 = !{i64 2155144452, i64 2155144472, i64 2155144535}
!2924 = !DILocation(line: 80, column: 1, scope: !2883)
!2925 = !{i64 2155144905, i64 2155144925, i64 2155144988}
!2926 = !DILocation(line: 84, column: 1, scope: !2883)
!2927 = !{i64 2155145237, i64 2155145257, i64 2155145320}
!2928 = !DILocation(line: 91, column: 1, scope: !2883)
!2929 = !{i64 2155145634, i64 2155145654, i64 2155145717}
!2930 = !DILocation(line: 93, column: 1, scope: !2883)
!2931 = !{i64 2155146001, i64 2155146021, i64 2155146084}
!2932 = !DILocation(line: 106, column: 1, scope: !2883)
!2933 = !{i64 2155146271, i64 2155146291, i64 2155146354}
!2934 = !DILocation(line: 11, column: 1, scope: !2935)
!2935 = !DILexicalBlockFile(scope: !2824, file: !2936, discriminator: 0)
!2936 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2937 = distinct !DISubprogram(name: "main", scope: !107, file: !107, line: 17, type: !2826, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2938)
!2938 = !{!2939}
!2939 = !DILocalVariable(name: "p", scope: !2937, file: !107, line: 19, type: !102)
!2940 = !DILocation(line: 21, column: 2, scope: !2937)
!2941 = !DILocation(line: 23, column: 2, scope: !2937)
!2942 = !DILocation(line: 24, column: 2, scope: !2937)
!2943 = !DILocation(line: 26, column: 6, scope: !2937)
!2944 = !DILocation(line: 0, scope: !2937)
!2945 = !DILocation(line: 27, column: 2, scope: !2937)
!2946 = !DILocation(line: 29, column: 6, scope: !2937)
!2947 = !DILocation(line: 30, column: 2, scope: !2937)
!2948 = !DILocation(line: 32, column: 2, scope: !2937)
!2949 = !DILocation(line: 33, column: 2, scope: !2937)
!2950 = !DILocation(line: 34, column: 1, scope: !2937)
!2951 = distinct !DISubprogram(name: "print_sys_memory_stats", scope: !107, file: !107, line: 36, type: !2826, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2952)
!2952 = !{!2953}
!2953 = !DILocalVariable(name: "stats", scope: !2951, file: !107, line: 38, type: !2954)
!2954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_memory_stats", file: !2955, line: 24, size: 96, elements: !2956)
!2955 = !DIFile(filename: "zephyr/include/zephyr/sys/mem_stats.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2956 = !{!2957, !2958, !2959}
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !2954, file: !2955, line: 25, baseType: !120, size: 32)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !2954, file: !2955, line: 26, baseType: !120, size: 32, offset: 32)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !2954, file: !2955, line: 27, baseType: !120, size: 32, offset: 64)
!2960 = !DILocation(line: 38, column: 2, scope: !2951)
!2961 = !DILocation(line: 38, column: 26, scope: !2951)
!2962 = !DILocation(line: 40, column: 2, scope: !2951)
!2963 = !DILocation(line: 43, column: 9, scope: !2951)
!2964 = !DILocation(line: 43, column: 32, scope: !2951)
!2965 = !DILocation(line: 44, column: 9, scope: !2951)
!2966 = !DILocation(line: 42, column: 2, scope: !2951)
!2967 = !DILocation(line: 45, column: 1, scope: !2951)
!2968 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !127, file: !127, line: 45, type: !129, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2969)
!2969 = !{!2970}
!2970 = !DILocalVariable(name: "c", arg: 1, scope: !2968, file: !127, line: 45, type: !103)
!2971 = !DILocation(line: 0, scope: !2968)
!2972 = !DILocation(line: 50, column: 2, scope: !2968)
!2973 = distinct !DISubprogram(name: "__printk_hook_install", scope: !127, file: !127, line: 63, type: !2974, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2976)
!2974 = !DISubroutineType(types: !2975)
!2975 = !{null, !128}
!2976 = !{!2977}
!2977 = !DILocalVariable(name: "fn", arg: 1, scope: !2973, file: !127, line: 63, type: !128)
!2978 = !DILocation(line: 0, scope: !2973)
!2979 = !DILocation(line: 65, column: 12, scope: !2973)
!2980 = !DILocation(line: 66, column: 1, scope: !2973)
!2981 = distinct !DISubprogram(name: "__printk_get_hook", scope: !127, file: !127, line: 76, type: !2982, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !162)
!2982 = !DISubroutineType(types: !2983)
!2983 = !{!102}
!2984 = !DILocation(line: 78, column: 9, scope: !2981)
!2985 = !DILocation(line: 78, column: 2, scope: !2981)
!2986 = distinct !DISubprogram(name: "vprintk", scope: !127, file: !127, line: 113, type: !2987, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2996)
!2987 = !DISubroutineType(types: !2988)
!2988 = !{null, !199, !2989}
!2989 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2990, line: 99, baseType: !2991)
!2990 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2991 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2990, line: 40, baseType: !2992)
!2992 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !127, baseType: !2993)
!2993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !2994)
!2994 = !{!2995}
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !2993, file: !127, line: 79, baseType: !102, size: 32)
!2996 = !{!2997, !2998, !2999}
!2997 = !DILocalVariable(name: "fmt", arg: 1, scope: !2986, file: !127, line: 113, type: !199)
!2998 = !DILocalVariable(name: "ap", arg: 2, scope: !2986, file: !127, line: 113, type: !2989)
!2999 = !DILocalVariable(name: "ctx", scope: !3000, file: !127, line: 121, type: !3002)
!3000 = distinct !DILexicalBlock(scope: !3001, file: !127, line: 120, column: 27)
!3001 = distinct !DILexicalBlock(scope: !2986, file: !127, line: 120, column: 6)
!3002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !127, line: 81, size: 32, elements: !3003)
!3003 = !{!3004, !3005}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3002, file: !127, line: 85, baseType: !32, size: 32)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3002, file: !127, line: 86, baseType: !3006, offset: 32)
!3006 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, elements: !2251)
!3007 = !DILocation(line: 0, scope: !2986)
!3008 = !DILocation(line: 148, column: 3, scope: !3009)
!3009 = distinct !DILexicalBlock(scope: !3001, file: !127, line: 138, column: 9)
!3010 = !DILocation(line: 155, column: 1, scope: !2986)
!3011 = distinct !DISubprogram(name: "char_out", scope: !127, file: !127, line: 107, type: !3012, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3014)
!3012 = !DISubroutineType(types: !3013)
!3013 = !{!103, !103, !102}
!3014 = !{!3015, !3016}
!3015 = !DILocalVariable(name: "c", arg: 1, scope: !3011, file: !127, line: 107, type: !103)
!3016 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3011, file: !127, line: 107, type: !102)
!3017 = !DILocation(line: 0, scope: !3011)
!3018 = !DILocation(line: 110, column: 9, scope: !3011)
!3019 = !DILocation(line: 110, column: 2, scope: !3011)
!3020 = distinct !DISubprogram(name: "cbvprintf", scope: !3021, file: !3021, line: 739, type: !3022, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3028)
!3021 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3022 = !DISubroutineType(types: !3023)
!3023 = !{!103, !3024, !102, !199, !2989}
!3024 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3021, line: 297, baseType: !3025)
!3025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3026, size: 32)
!3026 = !DISubroutineType(types: !3027)
!3027 = !{!103, null}
!3028 = !{!3029, !3030, !3031, !3032}
!3029 = !DILocalVariable(name: "out", arg: 1, scope: !3020, file: !3021, line: 739, type: !3024)
!3030 = !DILocalVariable(name: "ctx", arg: 2, scope: !3020, file: !3021, line: 739, type: !102)
!3031 = !DILocalVariable(name: "format", arg: 3, scope: !3020, file: !3021, line: 739, type: !199)
!3032 = !DILocalVariable(name: "ap", arg: 4, scope: !3020, file: !3021, line: 739, type: !2989)
!3033 = !DILocation(line: 0, scope: !3020)
!3034 = !DILocation(line: 741, column: 9, scope: !3020)
!3035 = !DILocation(line: 741, column: 2, scope: !3020)
!3036 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !127, file: !127, line: 157, type: !3037, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3039)
!3037 = !DISubroutineType(types: !3038)
!3038 = !{null, !1022, !120}
!3039 = !{!3040, !3041, !3042}
!3040 = !DILocalVariable(name: "c", arg: 1, scope: !3036, file: !127, line: 157, type: !1022)
!3041 = !DILocalVariable(name: "n", arg: 2, scope: !3036, file: !127, line: 157, type: !120)
!3042 = !DILocalVariable(name: "i", scope: !3036, file: !127, line: 159, type: !120)
!3043 = !DILocation(line: 0, scope: !3036)
!3044 = !DILocation(line: 164, column: 16, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3046, file: !127, line: 164, column: 2)
!3046 = distinct !DILexicalBlock(scope: !3036, file: !127, line: 164, column: 2)
!3047 = !DILocation(line: 164, column: 2, scope: !3046)
!3048 = !DILocation(line: 165, column: 3, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !3045, file: !127, line: 164, column: 26)
!3050 = !DILocation(line: 165, column: 13, scope: !3049)
!3051 = !DILocation(line: 164, column: 22, scope: !3045)
!3052 = distinct !{!3052, !3047, !3053}
!3053 = !DILocation(line: 166, column: 2, scope: !3046)
!3054 = !DILocation(line: 171, column: 1, scope: !3036)
!3055 = distinct !DISubprogram(name: "printk", scope: !127, file: !127, line: 203, type: !3056, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3058)
!3056 = !DISubroutineType(types: !3057)
!3057 = !{null, !199, null}
!3058 = !{!3059, !3060}
!3059 = !DILocalVariable(name: "fmt", arg: 1, scope: !3055, file: !127, line: 203, type: !199)
!3060 = !DILocalVariable(name: "ap", scope: !3055, file: !127, line: 205, type: !2989)
!3061 = !DILocation(line: 0, scope: !3055)
!3062 = !DILocation(line: 205, column: 2, scope: !3055)
!3063 = !DILocation(line: 205, column: 10, scope: !3055)
!3064 = !DILocation(line: 207, column: 2, scope: !3055)
!3065 = !DILocation(line: 209, column: 2, scope: !3055)
!3066 = !DILocation(line: 211, column: 2, scope: !3055)
!3067 = !DILocation(line: 212, column: 1, scope: !3055)
!3068 = distinct !DISubprogram(name: "snprintk", scope: !127, file: !127, line: 239, type: !3069, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3071)
!3069 = !DISubroutineType(types: !3070)
!3070 = !{!103, !1022, !120, !199, null}
!3071 = !{!3072, !3073, !3074, !3075, !3076}
!3072 = !DILocalVariable(name: "str", arg: 1, scope: !3068, file: !127, line: 239, type: !1022)
!3073 = !DILocalVariable(name: "size", arg: 2, scope: !3068, file: !127, line: 239, type: !120)
!3074 = !DILocalVariable(name: "fmt", arg: 3, scope: !3068, file: !127, line: 239, type: !199)
!3075 = !DILocalVariable(name: "ap", scope: !3068, file: !127, line: 241, type: !2989)
!3076 = !DILocalVariable(name: "ret", scope: !3068, file: !127, line: 242, type: !103)
!3077 = !DILocation(line: 0, scope: !3068)
!3078 = !DILocation(line: 241, column: 2, scope: !3068)
!3079 = !DILocation(line: 241, column: 10, scope: !3068)
!3080 = !DILocation(line: 244, column: 2, scope: !3068)
!3081 = !DILocation(line: 245, column: 8, scope: !3068)
!3082 = !DILocation(line: 246, column: 2, scope: !3068)
!3083 = !DILocation(line: 249, column: 1, scope: !3068)
!3084 = !DILocation(line: 248, column: 2, scope: !3068)
!3085 = distinct !DISubprogram(name: "vsnprintk", scope: !127, file: !127, line: 251, type: !3086, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3088)
!3086 = !DISubroutineType(types: !3087)
!3087 = !{!103, !1022, !120, !199, !2989}
!3088 = !{!3089, !3090, !3091, !3092, !3093}
!3089 = !DILocalVariable(name: "str", arg: 1, scope: !3085, file: !127, line: 251, type: !1022)
!3090 = !DILocalVariable(name: "size", arg: 2, scope: !3085, file: !127, line: 251, type: !120)
!3091 = !DILocalVariable(name: "fmt", arg: 3, scope: !3085, file: !127, line: 251, type: !199)
!3092 = !DILocalVariable(name: "ap", arg: 4, scope: !3085, file: !127, line: 251, type: !2989)
!3093 = !DILocalVariable(name: "ctx", scope: !3085, file: !127, line: 253, type: !3094)
!3094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !127, line: 217, size: 96, elements: !3095)
!3095 = !{!3096, !3097, !3098}
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3094, file: !127, line: 218, baseType: !1022, size: 32)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3094, file: !127, line: 219, baseType: !103, size: 32, offset: 32)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3094, file: !127, line: 220, baseType: !103, size: 32, offset: 64)
!3099 = !DILocation(line: 0, scope: !3085)
!3100 = !DILocation(line: 253, column: 2, scope: !3085)
!3101 = !DILocation(line: 253, column: 21, scope: !3085)
!3102 = !DILocation(line: 253, column: 27, scope: !3085)
!3103 = !DILocation(line: 255, column: 2, scope: !3085)
!3104 = !DILocation(line: 257, column: 10, scope: !3105)
!3105 = distinct !DILexicalBlock(scope: !3085, file: !127, line: 257, column: 6)
!3106 = !DILocation(line: 257, column: 22, scope: !3105)
!3107 = !DILocation(line: 257, column: 16, scope: !3105)
!3108 = !DILocation(line: 257, column: 6, scope: !3085)
!3109 = !DILocation(line: 258, column: 3, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !3105, file: !127, line: 257, column: 27)
!3111 = !DILocation(line: 258, column: 18, scope: !3110)
!3112 = !DILocation(line: 259, column: 2, scope: !3110)
!3113 = !DILocation(line: 262, column: 1, scope: !3085)
!3114 = !DILocation(line: 261, column: 2, scope: !3085)
!3115 = distinct !DISubprogram(name: "str_out", scope: !127, file: !127, line: 223, type: !3116, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3119)
!3116 = !DISubroutineType(types: !3117)
!3117 = !{!103, !103, !3118}
!3118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3094, size: 32)
!3119 = !{!3120, !3121}
!3120 = !DILocalVariable(name: "c", arg: 1, scope: !3115, file: !127, line: 223, type: !103)
!3121 = !DILocalVariable(name: "ctx", arg: 2, scope: !3115, file: !127, line: 223, type: !3118)
!3122 = !DILocation(line: 0, scope: !3115)
!3123 = !DILocation(line: 225, column: 11, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3115, file: !127, line: 225, column: 6)
!3125 = !DILocation(line: 225, column: 15, scope: !3124)
!3126 = !DILocation(line: 0, scope: !3124)
!3127 = !DILocation(line: 225, column: 23, scope: !3124)
!3128 = !DILocation(line: 225, column: 45, scope: !3124)
!3129 = !DILocation(line: 225, column: 37, scope: !3124)
!3130 = !DILocation(line: 225, column: 6, scope: !3115)
!3131 = !DILocation(line: 226, column: 8, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3124, file: !127, line: 225, column: 50)
!3133 = !DILocation(line: 226, column: 13, scope: !3132)
!3134 = !DILocation(line: 227, column: 3, scope: !3132)
!3135 = !DILocation(line: 230, column: 29, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !3115, file: !127, line: 230, column: 6)
!3137 = !DILocation(line: 230, column: 17, scope: !3136)
!3138 = !DILocation(line: 230, column: 6, scope: !3115)
!3139 = !DILocation(line: 231, column: 22, scope: !3140)
!3140 = distinct !DILexicalBlock(scope: !3136, file: !127, line: 230, column: 34)
!3141 = !DILocation(line: 231, column: 3, scope: !3140)
!3142 = !DILocation(line: 231, column: 26, scope: !3140)
!3143 = !DILocation(line: 232, column: 2, scope: !3140)
!3144 = !DILocation(line: 233, column: 28, scope: !3145)
!3145 = distinct !DILexicalBlock(scope: !3136, file: !127, line: 232, column: 9)
!3146 = !DILocation(line: 233, column: 22, scope: !3145)
!3147 = !DILocation(line: 233, column: 3, scope: !3145)
!3148 = !DILocation(line: 233, column: 26, scope: !3145)
!3149 = !DILocation(line: 237, column: 1, scope: !3115)
!3150 = distinct !DISubprogram(name: "z_thread_entry", scope: !3151, file: !3151, line: 30, type: !3152, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2225, retainedNodes: !3159)
!3151 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3152 = !DISubroutineType(types: !3153)
!3153 = !{null, !3154, !102, !102, !102}
!3154 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3155, line: 46, baseType: !3156)
!3155 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 32)
!3157 = !DISubroutineType(types: !3158)
!3158 = !{null, !102, !102, !102}
!3159 = !{!3160, !3161, !3162, !3163}
!3160 = !DILocalVariable(name: "entry", arg: 1, scope: !3150, file: !3151, line: 30, type: !3154)
!3161 = !DILocalVariable(name: "p1", arg: 2, scope: !3150, file: !3151, line: 31, type: !102)
!3162 = !DILocalVariable(name: "p2", arg: 3, scope: !3150, file: !3151, line: 31, type: !102)
!3163 = !DILocalVariable(name: "p3", arg: 4, scope: !3150, file: !3151, line: 31, type: !102)
!3164 = !DILocation(line: 0, scope: !3150)
!3165 = !DILocation(line: 36, column: 2, scope: !3150)
!3166 = !DILocation(line: 38, column: 17, scope: !3150)
!3167 = !DILocation(line: 38, column: 2, scope: !3150)
!3168 = !DILocation(line: 45, column: 2, scope: !3150)
!3169 = distinct !DISubprogram(name: "k_current_get", scope: !357, file: !357, line: 530, type: !3170, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2225, retainedNodes: !162)
!3170 = !DISubroutineType(types: !3171)
!3171 = !{!3172}
!3172 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !3173)
!3173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3174, size: 32)
!3174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !3175)
!3175 = !{!3176, !3234, !3246, !3247, !3248, !3249, !3255, !3268}
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3174, file: !263, line: 247, baseType: !3177, size: 384)
!3177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !3178)
!3178 = !{!3179, !3203, !3210, !3211, !3212, !3221, !3222, !3223}
!3179 = !DIDerivedType(tag: DW_TAG_member, scope: !3177, file: !263, line: 60, baseType: !3180, size: 64)
!3180 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3177, file: !263, line: 60, size: 64, elements: !3181)
!3181 = !{!3182, !3197}
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3180, file: !263, line: 61, baseType: !3183, size: 64)
!3183 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !3184)
!3184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !3185)
!3185 = !{!3186, !3192}
!3186 = !DIDerivedType(tag: DW_TAG_member, scope: !3184, file: !273, line: 38, baseType: !3187, size: 32)
!3187 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3184, file: !273, line: 38, size: 32, elements: !3188)
!3188 = !{!3189, !3191}
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3187, file: !273, line: 39, baseType: !3190, size: 32)
!3190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3184, size: 32)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3187, file: !273, line: 40, baseType: !3190, size: 32)
!3192 = !DIDerivedType(tag: DW_TAG_member, scope: !3184, file: !273, line: 42, baseType: !3193, size: 32, offset: 32)
!3193 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3184, file: !273, line: 42, size: 32, elements: !3194)
!3194 = !{!3195, !3196}
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3193, file: !273, line: 43, baseType: !3190, size: 32)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3193, file: !273, line: 44, baseType: !3190, size: 32)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3180, file: !263, line: 62, baseType: !3198, size: 64)
!3198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !3199)
!3199 = !{!3200}
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3198, file: !289, line: 50, baseType: !3201, size: 64)
!3201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3202, size: 64, elements: !294)
!3202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3198, size: 32)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3177, file: !263, line: 68, baseType: !3204, size: 32, offset: 64)
!3204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3205, size: 32)
!3205 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !3206)
!3206 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !3207)
!3207 = !{!3208}
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3206, file: !299, line: 232, baseType: !3209, size: 64)
!3209 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !3184)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3177, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3177, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!3212 = !DIDerivedType(tag: DW_TAG_member, scope: !3177, file: !263, line: 90, baseType: !3213, size: 16, offset: 112)
!3213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3177, file: !263, line: 90, size: 16, elements: !3214)
!3214 = !{!3215, !3220}
!3215 = !DIDerivedType(tag: DW_TAG_member, scope: !3213, file: !263, line: 91, baseType: !3216, size: 16)
!3216 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3213, file: !263, line: 91, size: 16, elements: !3217)
!3217 = !{!3218, !3219}
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3216, file: !263, line: 96, baseType: !313, size: 8)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3216, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3213, file: !263, line: 100, baseType: !151, size: 16)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3177, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3177, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3177, file: !263, line: 131, baseType: !3224, size: 192, offset: 192)
!3224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !3225)
!3225 = !{!3226, !3227, !3233}
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3224, file: !299, line: 245, baseType: !3183, size: 64)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3224, file: !299, line: 246, baseType: !3228, size: 32, offset: 64)
!3228 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !3229)
!3229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3230, size: 32)
!3230 = !DISubroutineType(types: !3231)
!3231 = !{null, !3232}
!3232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3224, size: 32)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3224, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3174, file: !263, line: 250, baseType: !3235, size: 288, offset: 384)
!3235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !3236)
!3236 = !{!3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3235, file: !334, line: 26, baseType: !137, size: 32)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3235, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3235, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3235, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3235, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3235, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3235, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3235, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3235, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3174, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3174, file: !263, line: 256, baseType: !3205, size: 64, offset: 704)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3174, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3174, file: !263, line: 300, baseType: !3250, size: 96, offset: 800)
!3250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !3251)
!3251 = !{!3252, !3253, !3254}
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3250, file: !263, line: 153, baseType: !22, size: 32)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3250, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3250, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3174, file: !263, line: 325, baseType: !3256, size: 32, offset: 896)
!3256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3257, size: 32)
!3257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !3258)
!3258 = !{!3259, !3265, !3266}
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3257, file: !357, line: 5074, baseType: !3260, size: 96)
!3260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !3261)
!3261 = !{!3262, !3263, !3264}
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3260, file: !113, line: 57, baseType: !116, size: 32)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3260, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3260, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3257, file: !357, line: 5075, baseType: !3205, size: 64, offset: 96)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3257, file: !357, line: 5076, baseType: !3267, offset: 160)
!3267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3174, file: !263, line: 343, baseType: !3269, size: 64, offset: 928)
!3269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !3270)
!3270 = !{!3271, !3272}
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3269, file: !334, line: 63, baseType: !137, size: 32)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3269, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!3273 = !DILocation(line: 535, column: 9, scope: !3169)
!3274 = !DILocation(line: 535, column: 2, scope: !3169)
!3275 = distinct !DISubprogram(name: "k_thread_abort", scope: !3276, file: !3276, line: 188, type: !3277, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2225, retainedNodes: !3279)
!3276 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!3277 = !DISubroutineType(types: !3278)
!3278 = !{null, !3172}
!3279 = !{!3280}
!3280 = !DILocalVariable(name: "thread", arg: 1, scope: !3275, file: !3276, line: 188, type: !3172)
!3281 = !DILocation(line: 0, scope: !3275)
!3282 = !DILocation(line: 197, column: 2, scope: !3283)
!3283 = distinct !DILexicalBlock(scope: !3275, file: !3276, line: 197, column: 2)
!3284 = !{i64 2154837933}
!3285 = !DILocation(line: 198, column: 2, scope: !3275)
!3286 = !DILocation(line: 199, column: 1, scope: !3275)
!3287 = distinct !DISubprogram(name: "z_current_get", scope: !3276, file: !3276, line: 173, type: !3170, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2225, retainedNodes: !162)
!3288 = !DILocation(line: 180, column: 2, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !3287, file: !3276, line: 180, column: 2)
!3290 = !{i64 2154837865}
!3291 = !DILocation(line: 181, column: 9, scope: !3287)
!3292 = !DILocation(line: 181, column: 2, scope: !3287)
!3293 = distinct !DISubprogram(name: "sys_heap_free", scope: !3294, file: !3294, line: 163, type: !3295, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3303)
!3294 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3295 = !DISubroutineType(types: !3296)
!3296 = !{null, !3297, !102}
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3298, size: 32)
!3298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !3299)
!3299 = !{!3300, !3301, !3302}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3298, file: !113, line: 57, baseType: !2235, size: 32)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3298, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3298, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!3303 = !{!3304, !3305, !3306, !3307}
!3304 = !DILocalVariable(name: "heap", arg: 1, scope: !3293, file: !3294, line: 163, type: !3297)
!3305 = !DILocalVariable(name: "mem", arg: 2, scope: !3293, file: !3294, line: 163, type: !102)
!3306 = !DILocalVariable(name: "h", scope: !3293, file: !3294, line: 168, type: !2235)
!3307 = !DILocalVariable(name: "c", scope: !3293, file: !3294, line: 169, type: !2240)
!3308 = !DILocation(line: 0, scope: !3293)
!3309 = !DILocation(line: 165, column: 10, scope: !3310)
!3310 = distinct !DILexicalBlock(scope: !3293, file: !3294, line: 165, column: 6)
!3311 = !DILocation(line: 165, column: 6, scope: !3293)
!3312 = !DILocation(line: 168, column: 27, scope: !3293)
!3313 = !DILocation(line: 169, column: 16, scope: !3293)
!3314 = !{i32 0, i32 536870912}
!3315 = !DILocation(line: 187, column: 2, scope: !3293)
!3316 = !DILocation(line: 189, column: 44, scope: !3293)
!3317 = !{i32 0, i32 32768}
!3318 = !DILocation(line: 189, column: 24, scope: !3293)
!3319 = !DILocation(line: 189, column: 5, scope: !3293)
!3320 = !DILocation(line: 189, column: 21, scope: !3293)
!3321 = !DILocation(line: 197, column: 2, scope: !3293)
!3322 = !DILocation(line: 198, column: 1, scope: !3293)
!3323 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3294, file: !3294, line: 157, type: !3324, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3326)
!3324 = !DISubroutineType(types: !3325)
!3325 = !{!2240, !2235, !102}
!3326 = !{!3327, !3328, !3329, !3330}
!3327 = !DILocalVariable(name: "h", arg: 1, scope: !3323, file: !3294, line: 157, type: !2235)
!3328 = !DILocalVariable(name: "p", arg: 2, scope: !3323, file: !3294, line: 157, type: !102)
!3329 = !DILocalVariable(name: "mem", scope: !3323, file: !3294, line: 159, type: !1726)
!3330 = !DILocalVariable(name: "base", scope: !3323, file: !3294, line: 159, type: !1726)
!3331 = !DILocation(line: 0, scope: !3323)
!3332 = !DILocation(line: 159, column: 39, scope: !3323)
!3333 = !DILocation(line: 160, column: 14, scope: !3323)
!3334 = !DILocation(line: 160, column: 38, scope: !3323)
!3335 = !DILocation(line: 160, column: 46, scope: !3323)
!3336 = !DILocation(line: 160, column: 2, scope: !3323)
!3337 = distinct !DISubprogram(name: "set_chunk_used", scope: !142, file: !142, line: 147, type: !3338, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3340)
!3338 = !DISubroutineType(types: !3339)
!3339 = !{null, !2235, !2240, !211}
!3340 = !{!3341, !3342, !3343, !3344, !3345}
!3341 = !DILocalVariable(name: "h", arg: 1, scope: !3337, file: !142, line: 147, type: !2235)
!3342 = !DILocalVariable(name: "c", arg: 2, scope: !3337, file: !142, line: 147, type: !2240)
!3343 = !DILocalVariable(name: "used", arg: 3, scope: !3337, file: !142, line: 147, type: !211)
!3344 = !DILocalVariable(name: "buf", scope: !3337, file: !142, line: 149, type: !2230)
!3345 = !DILocalVariable(name: "cmem", scope: !3337, file: !142, line: 150, type: !102)
!3346 = !DILocation(line: 0, scope: !3337)
!3347 = !DILocation(line: 149, column: 22, scope: !3337)
!3348 = !DILocation(line: 0, scope: !3349)
!3349 = distinct !DILexicalBlock(scope: !3350, file: !142, line: 159, column: 7)
!3350 = distinct !DILexicalBlock(scope: !3351, file: !142, line: 158, column: 9)
!3351 = distinct !DILexicalBlock(scope: !3337, file: !142, line: 152, column: 6)
!3352 = !DILocation(line: 159, column: 7, scope: !3350)
!3353 = !DILocation(line: 165, column: 1, scope: !3337)
!3354 = distinct !DISubprogram(name: "chunk_size", scope: !142, file: !142, line: 142, type: !3355, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3358)
!3355 = !DISubroutineType(types: !3356)
!3356 = !{!3357, !2235, !2240}
!3357 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !142, line: 62, baseType: !137)
!3358 = !{!3359, !3360}
!3359 = !DILocalVariable(name: "h", arg: 1, scope: !3354, file: !142, line: 142, type: !2235)
!3360 = !DILocalVariable(name: "c", arg: 2, scope: !3354, file: !142, line: 142, type: !2240)
!3361 = !DILocation(line: 0, scope: !3354)
!3362 = !DILocation(line: 144, column: 9, scope: !3354)
!3363 = !DILocation(line: 144, column: 42, scope: !3354)
!3364 = !DILocation(line: 144, column: 2, scope: !3354)
!3365 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !142, file: !142, line: 245, type: !3366, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3368)
!3366 = !DISubroutineType(types: !3367)
!3367 = !{!120, !2235, !3357}
!3368 = !{!3369, !3370}
!3369 = !DILocalVariable(name: "h", arg: 1, scope: !3365, file: !142, line: 245, type: !2235)
!3370 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !3365, file: !142, line: 245, type: !3357)
!3371 = !DILocation(line: 0, scope: !3365)
!3372 = !DILocation(line: 247, column: 20, scope: !3365)
!3373 = !DILocation(line: 247, column: 33, scope: !3365)
!3374 = !DILocation(line: 247, column: 2, scope: !3365)
!3375 = distinct !DISubprogram(name: "free_chunk", scope: !3294, file: !3294, line: 133, type: !3376, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3378)
!3376 = !DISubroutineType(types: !3377)
!3377 = !{null, !2235, !2240}
!3378 = !{!3379, !3380}
!3379 = !DILocalVariable(name: "h", arg: 1, scope: !3375, file: !3294, line: 133, type: !2235)
!3380 = !DILocalVariable(name: "c", arg: 2, scope: !3375, file: !3294, line: 133, type: !2240)
!3381 = !DILocation(line: 0, scope: !3375)
!3382 = !DILocation(line: 136, column: 21, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3375, file: !3294, line: 136, column: 6)
!3384 = !DILocation(line: 136, column: 7, scope: !3383)
!3385 = !DILocation(line: 136, column: 6, scope: !3375)
!3386 = !DILocation(line: 137, column: 3, scope: !3387)
!3387 = distinct !DILexicalBlock(scope: !3383, file: !3294, line: 136, column: 41)
!3388 = !DILocation(line: 138, column: 22, scope: !3387)
!3389 = !DILocation(line: 138, column: 3, scope: !3387)
!3390 = !DILocation(line: 139, column: 2, scope: !3387)
!3391 = !DILocation(line: 142, column: 21, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3375, file: !3294, line: 142, column: 6)
!3393 = !{i32 -65535, i32 536903678}
!3394 = !DILocation(line: 142, column: 7, scope: !3392)
!3395 = !DILocation(line: 142, column: 6, scope: !3375)
!3396 = !DILocation(line: 143, column: 3, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3392, file: !3294, line: 142, column: 40)
!3398 = !DILocation(line: 144, column: 19, scope: !3397)
!3399 = !DILocation(line: 144, column: 3, scope: !3397)
!3400 = !DILocation(line: 145, column: 7, scope: !3397)
!3401 = !DILocation(line: 146, column: 2, scope: !3397)
!3402 = !DILocation(line: 148, column: 2, scope: !3375)
!3403 = !DILocation(line: 149, column: 1, scope: !3375)
!3404 = distinct !DISubprogram(name: "right_chunk", scope: !142, file: !142, line: 204, type: !3405, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3407)
!3405 = !DISubroutineType(types: !3406)
!3406 = !{!2240, !2235, !2240}
!3407 = !{!3408, !3409}
!3408 = !DILocalVariable(name: "h", arg: 1, scope: !3404, file: !142, line: 204, type: !2235)
!3409 = !DILocalVariable(name: "c", arg: 2, scope: !3404, file: !142, line: 204, type: !2240)
!3410 = !DILocation(line: 0, scope: !3404)
!3411 = !DILocation(line: 206, column: 13, scope: !3404)
!3412 = !DILocation(line: 206, column: 11, scope: !3404)
!3413 = !DILocation(line: 206, column: 2, scope: !3404)
!3414 = distinct !DISubprogram(name: "chunk_used", scope: !142, file: !142, line: 137, type: !3415, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3417)
!3415 = !DISubroutineType(types: !3416)
!3416 = !{!211, !2235, !2240}
!3417 = !{!3418, !3419}
!3418 = !DILocalVariable(name: "h", arg: 1, scope: !3414, file: !142, line: 137, type: !2235)
!3419 = !DILocalVariable(name: "c", arg: 2, scope: !3414, file: !142, line: 137, type: !2240)
!3420 = !DILocation(line: 0, scope: !3414)
!3421 = !DILocation(line: 139, column: 9, scope: !3414)
!3422 = !DILocation(line: 139, column: 42, scope: !3414)
!3423 = !DILocation(line: 139, column: 2, scope: !3414)
!3424 = distinct !DISubprogram(name: "free_list_remove", scope: !3294, file: !3294, line: 60, type: !3376, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3425)
!3425 = !{!3426, !3427, !3428}
!3426 = !DILocalVariable(name: "h", arg: 1, scope: !3424, file: !3294, line: 60, type: !2235)
!3427 = !DILocalVariable(name: "c", arg: 2, scope: !3424, file: !3294, line: 60, type: !2240)
!3428 = !DILocalVariable(name: "bidx", scope: !3429, file: !3294, line: 63, type: !103)
!3429 = distinct !DILexicalBlock(scope: !3430, file: !3294, line: 62, column: 31)
!3430 = distinct !DILexicalBlock(scope: !3424, file: !3294, line: 62, column: 6)
!3431 = !DILocation(line: 0, scope: !3424)
!3432 = !DILocation(line: 63, column: 28, scope: !3429)
!3433 = !DILocation(line: 63, column: 14, scope: !3429)
!3434 = !DILocation(line: 0, scope: !3429)
!3435 = !DILocation(line: 64, column: 3, scope: !3429)
!3436 = !DILocation(line: 66, column: 1, scope: !3424)
!3437 = distinct !DISubprogram(name: "merge_chunks", scope: !3294, file: !3294, line: 125, type: !3438, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3440)
!3438 = !DISubroutineType(types: !3439)
!3439 = !{null, !2235, !2240, !2240}
!3440 = !{!3441, !3442, !3443, !3444}
!3441 = !DILocalVariable(name: "h", arg: 1, scope: !3437, file: !3294, line: 125, type: !2235)
!3442 = !DILocalVariable(name: "lc", arg: 2, scope: !3437, file: !3294, line: 125, type: !2240)
!3443 = !DILocalVariable(name: "rc", arg: 3, scope: !3437, file: !3294, line: 125, type: !2240)
!3444 = !DILocalVariable(name: "newsz", scope: !3437, file: !3294, line: 127, type: !3357)
!3445 = !DILocation(line: 0, scope: !3437)
!3446 = !DILocation(line: 127, column: 20, scope: !3437)
!3447 = !DILocation(line: 127, column: 40, scope: !3437)
!3448 = !DILocation(line: 127, column: 38, scope: !3437)
!3449 = !DILocation(line: 129, column: 2, scope: !3437)
!3450 = !DILocation(line: 130, column: 25, scope: !3437)
!3451 = !DILocation(line: 130, column: 2, scope: !3437)
!3452 = !DILocation(line: 131, column: 1, scope: !3437)
!3453 = distinct !DISubprogram(name: "left_chunk", scope: !142, file: !142, line: 199, type: !3405, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3454)
!3454 = !{!3455, !3456}
!3455 = !DILocalVariable(name: "h", arg: 1, scope: !3453, file: !142, line: 199, type: !2235)
!3456 = !DILocalVariable(name: "c", arg: 2, scope: !3453, file: !142, line: 199, type: !2240)
!3457 = !DILocation(line: 0, scope: !3453)
!3458 = !DILocation(line: 201, column: 13, scope: !3453)
!3459 = !DILocation(line: 201, column: 11, scope: !3453)
!3460 = !DILocation(line: 201, column: 2, scope: !3453)
!3461 = distinct !DISubprogram(name: "free_list_add", scope: !3294, file: !3294, line: 98, type: !3376, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3462)
!3462 = !{!3463, !3464, !3465}
!3463 = !DILocalVariable(name: "h", arg: 1, scope: !3461, file: !3294, line: 98, type: !2235)
!3464 = !DILocalVariable(name: "c", arg: 2, scope: !3461, file: !3294, line: 98, type: !2240)
!3465 = !DILocalVariable(name: "bidx", scope: !3466, file: !3294, line: 101, type: !103)
!3466 = distinct !DILexicalBlock(scope: !3467, file: !3294, line: 100, column: 31)
!3467 = distinct !DILexicalBlock(scope: !3461, file: !3294, line: 100, column: 6)
!3468 = !DILocation(line: 0, scope: !3461)
!3469 = !DILocation(line: 101, column: 28, scope: !3466)
!3470 = !DILocation(line: 101, column: 14, scope: !3466)
!3471 = !DILocation(line: 0, scope: !3466)
!3472 = !DILocation(line: 102, column: 3, scope: !3466)
!3473 = !DILocation(line: 104, column: 1, scope: !3461)
!3474 = distinct !DISubprogram(name: "bucket_idx", scope: !142, file: !142, line: 250, type: !3475, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3477)
!3475 = !DISubroutineType(types: !3476)
!3476 = !{!103, !2235, !3357}
!3477 = !{!3478, !3479, !3480}
!3478 = !DILocalVariable(name: "h", arg: 1, scope: !3474, file: !142, line: 250, type: !2235)
!3479 = !DILocalVariable(name: "sz", arg: 2, scope: !3474, file: !142, line: 250, type: !3357)
!3480 = !DILocalVariable(name: "usable_sz", scope: !3474, file: !142, line: 252, type: !32)
!3481 = !DILocation(line: 0, scope: !3474)
!3482 = !DILocation(line: 252, column: 32, scope: !3474)
!3483 = !DILocation(line: 252, column: 30, scope: !3474)
!3484 = !DILocation(line: 252, column: 50, scope: !3474)
!3485 = !DILocation(line: 253, column: 14, scope: !3474)
!3486 = !{i32 0, i32 33}
!3487 = !DILocation(line: 253, column: 12, scope: !3474)
!3488 = !DILocation(line: 253, column: 2, scope: !3474)
!3489 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3294, file: !3294, line: 68, type: !3490, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3492)
!3490 = !DISubroutineType(types: !3491)
!3491 = !{null, !2235, !2240, !103}
!3492 = !{!3493, !3494, !3495, !3496, !3498, !3501}
!3493 = !DILocalVariable(name: "h", arg: 1, scope: !3489, file: !3294, line: 68, type: !2235)
!3494 = !DILocalVariable(name: "c", arg: 2, scope: !3489, file: !3294, line: 68, type: !2240)
!3495 = !DILocalVariable(name: "bidx", arg: 3, scope: !3489, file: !3294, line: 68, type: !103)
!3496 = !DILocalVariable(name: "b", scope: !3489, file: !3294, line: 70, type: !3497)
!3497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 32)
!3498 = !DILocalVariable(name: "second", scope: !3499, file: !3294, line: 84, type: !2240)
!3499 = distinct !DILexicalBlock(scope: !3500, file: !3294, line: 80, column: 9)
!3500 = distinct !DILexicalBlock(scope: !3489, file: !3294, line: 72, column: 6)
!3501 = !DILocalVariable(name: "first", scope: !3499, file: !3294, line: 85, type: !2240)
!3502 = !DILocation(line: 0, scope: !3489)
!3503 = !DILocation(line: 72, column: 9, scope: !3500)
!3504 = !DILocation(line: 72, column: 14, scope: !3500)
!3505 = !DILocation(line: 72, column: 6, scope: !3489)
!3506 = !DILocation(line: 76, column: 23, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3500, file: !3294, line: 72, column: 21)
!3508 = !DILocation(line: 76, column: 6, scope: !3507)
!3509 = !DILocation(line: 76, column: 20, scope: !3507)
!3510 = !DILocation(line: 77, column: 11, scope: !3507)
!3511 = !DILocation(line: 78, column: 3, scope: !3507)
!3512 = !DILocation(line: 79, column: 3, scope: !3507)
!3513 = !DILocation(line: 80, column: 2, scope: !3507)
!3514 = !DILocation(line: 0, scope: !3499)
!3515 = !DILocation(line: 85, column: 21, scope: !3499)
!3516 = !{i32 0, i32 65536}
!3517 = !DILocation(line: 87, column: 3, scope: !3499)
!3518 = !DILocation(line: 88, column: 3, scope: !3499)
!3519 = !DILocation(line: 89, column: 3, scope: !3499)
!3520 = !DILocation(line: 90, column: 3, scope: !3499)
!3521 = !DILocation(line: 94, column: 39, scope: !3489)
!3522 = !DILocation(line: 94, column: 19, scope: !3489)
!3523 = !DILocation(line: 94, column: 5, scope: !3489)
!3524 = !DILocation(line: 94, column: 16, scope: !3489)
!3525 = !DILocation(line: 96, column: 1, scope: !3489)
!3526 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !142, file: !142, line: 187, type: !3438, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3527)
!3527 = !{!3528, !3529, !3530}
!3528 = !DILocalVariable(name: "h", arg: 1, scope: !3526, file: !142, line: 187, type: !2235)
!3529 = !DILocalVariable(name: "c", arg: 2, scope: !3526, file: !142, line: 187, type: !2240)
!3530 = !DILocalVariable(name: "prev", arg: 3, scope: !3526, file: !142, line: 188, type: !2240)
!3531 = !DILocation(line: 0, scope: !3526)
!3532 = !DILocation(line: 190, column: 2, scope: !3526)
!3533 = !DILocation(line: 191, column: 1, scope: !3526)
!3534 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !142, file: !142, line: 193, type: !3438, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3535)
!3535 = !{!3536, !3537, !3538}
!3536 = !DILocalVariable(name: "h", arg: 1, scope: !3534, file: !142, line: 193, type: !2235)
!3537 = !DILocalVariable(name: "c", arg: 2, scope: !3534, file: !142, line: 193, type: !2240)
!3538 = !DILocalVariable(name: "next", arg: 3, scope: !3534, file: !142, line: 194, type: !2240)
!3539 = !DILocation(line: 0, scope: !3534)
!3540 = !DILocation(line: 196, column: 2, scope: !3534)
!3541 = !DILocation(line: 197, column: 1, scope: !3534)
!3542 = distinct !DISubprogram(name: "prev_free_chunk", scope: !142, file: !142, line: 177, type: !3405, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3543)
!3543 = !{!3544, !3545}
!3544 = !DILocalVariable(name: "h", arg: 1, scope: !3542, file: !142, line: 177, type: !2235)
!3545 = !DILocalVariable(name: "c", arg: 2, scope: !3542, file: !142, line: 177, type: !2240)
!3546 = !DILocation(line: 0, scope: !3542)
!3547 = !DILocation(line: 179, column: 9, scope: !3542)
!3548 = !DILocation(line: 179, column: 2, scope: !3542)
!3549 = distinct !DISubprogram(name: "chunk_field", scope: !142, file: !142, line: 107, type: !3550, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3552)
!3550 = !DISubroutineType(types: !3551)
!3551 = !{!2240, !2235, !2240, !141}
!3552 = !{!3553, !3554, !3555, !3556, !3557}
!3553 = !DILocalVariable(name: "h", arg: 1, scope: !3549, file: !142, line: 107, type: !2235)
!3554 = !DILocalVariable(name: "c", arg: 2, scope: !3549, file: !142, line: 107, type: !2240)
!3555 = !DILocalVariable(name: "f", arg: 3, scope: !3549, file: !142, line: 108, type: !141)
!3556 = !DILocalVariable(name: "buf", scope: !3549, file: !142, line: 110, type: !2230)
!3557 = !DILocalVariable(name: "cmem", scope: !3549, file: !142, line: 111, type: !102)
!3558 = !DILocation(line: 0, scope: !3549)
!3559 = !DILocation(line: 110, column: 22, scope: !3549)
!3560 = !DILocation(line: 111, column: 15, scope: !3549)
!3561 = !DILocation(line: 116, column: 11, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3563, file: !142, line: 115, column: 9)
!3563 = distinct !DILexicalBlock(scope: !3549, file: !142, line: 113, column: 6)
!3564 = !DILocation(line: 116, column: 10, scope: !3562)
!3565 = !DILocation(line: 118, column: 1, scope: !3549)
!3566 = distinct !DISubprogram(name: "chunk_buf", scope: !142, file: !142, line: 101, type: !3567, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3569)
!3567 = !DISubroutineType(types: !3568)
!3568 = !{!2230, !2235}
!3569 = !{!3570}
!3570 = !DILocalVariable(name: "h", arg: 1, scope: !3566, file: !142, line: 101, type: !2235)
!3571 = !DILocation(line: 0, scope: !3566)
!3572 = !DILocation(line: 104, column: 9, scope: !3566)
!3573 = !DILocation(line: 104, column: 2, scope: !3566)
!3574 = distinct !DISubprogram(name: "chunk_set", scope: !142, file: !142, line: 120, type: !3575, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3577)
!3575 = !DISubroutineType(types: !3576)
!3576 = !{null, !2235, !2240, !141, !2240}
!3577 = !{!3578, !3579, !3580, !3581, !3582, !3583}
!3578 = !DILocalVariable(name: "h", arg: 1, scope: !3574, file: !142, line: 120, type: !2235)
!3579 = !DILocalVariable(name: "c", arg: 2, scope: !3574, file: !142, line: 120, type: !2240)
!3580 = !DILocalVariable(name: "f", arg: 3, scope: !3574, file: !142, line: 121, type: !141)
!3581 = !DILocalVariable(name: "val", arg: 4, scope: !3574, file: !142, line: 121, type: !2240)
!3582 = !DILocalVariable(name: "buf", scope: !3574, file: !142, line: 125, type: !2230)
!3583 = !DILocalVariable(name: "cmem", scope: !3574, file: !142, line: 126, type: !102)
!3584 = !DILocation(line: 0, scope: !3574)
!3585 = !DILocation(line: 125, column: 22, scope: !3574)
!3586 = !DILocation(line: 126, column: 15, scope: !3574)
!3587 = !DILocation(line: 133, column: 27, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3589, file: !142, line: 131, column: 9)
!3589 = distinct !DILexicalBlock(scope: !3574, file: !142, line: 128, column: 6)
!3590 = !DILocation(line: 133, column: 4, scope: !3588)
!3591 = !DILocation(line: 133, column: 3, scope: !3588)
!3592 = !DILocation(line: 133, column: 25, scope: !3588)
!3593 = !DILocation(line: 135, column: 1, scope: !3574)
!3594 = distinct !DISubprogram(name: "min_chunk_size", scope: !142, file: !142, line: 240, type: !3595, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3597)
!3595 = !DISubroutineType(types: !3596)
!3596 = !{!3357, !2235}
!3597 = !{!3598}
!3598 = !DILocalVariable(name: "h", arg: 1, scope: !3594, file: !142, line: 240, type: !2235)
!3599 = !DILocation(line: 0, scope: !3594)
!3600 = !DILocation(line: 242, column: 9, scope: !3594)
!3601 = !DILocation(line: 242, column: 2, scope: !3594)
!3602 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !142, file: !142, line: 235, type: !3603, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3605)
!3603 = !DISubroutineType(types: !3604)
!3604 = !{!3357, !2235, !120}
!3605 = !{!3606, !3607}
!3606 = !DILocalVariable(name: "h", arg: 1, scope: !3602, file: !142, line: 235, type: !2235)
!3607 = !DILocalVariable(name: "bytes", arg: 2, scope: !3602, file: !142, line: 235, type: !120)
!3608 = !DILocation(line: 0, scope: !3602)
!3609 = !DILocation(line: 237, column: 39, scope: !3602)
!3610 = !DILocation(line: 237, column: 9, scope: !3602)
!3611 = !DILocation(line: 237, column: 2, scope: !3602)
!3612 = distinct !DISubprogram(name: "chunksz", scope: !142, file: !142, line: 230, type: !3613, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3615)
!3613 = !DISubroutineType(types: !3614)
!3614 = !{!3357, !120}
!3615 = !{!3616}
!3616 = !DILocalVariable(name: "bytes", arg: 1, scope: !3612, file: !142, line: 230, type: !120)
!3617 = !DILocation(line: 0, scope: !3612)
!3618 = !DILocation(line: 232, column: 29, scope: !3612)
!3619 = !DILocation(line: 232, column: 35, scope: !3612)
!3620 = !DILocation(line: 232, column: 2, scope: !3612)
!3621 = distinct !DISubprogram(name: "set_chunk_size", scope: !142, file: !142, line: 172, type: !3622, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3624)
!3622 = !DISubroutineType(types: !3623)
!3623 = !{null, !2235, !2240, !3357}
!3624 = !{!3625, !3626, !3627}
!3625 = !DILocalVariable(name: "h", arg: 1, scope: !3621, file: !142, line: 172, type: !2235)
!3626 = !DILocalVariable(name: "c", arg: 2, scope: !3621, file: !142, line: 172, type: !2240)
!3627 = !DILocalVariable(name: "size", arg: 3, scope: !3621, file: !142, line: 172, type: !3357)
!3628 = !DILocation(line: 0, scope: !3621)
!3629 = !DILocation(line: 174, column: 38, scope: !3621)
!3630 = !DILocation(line: 174, column: 2, scope: !3621)
!3631 = !DILocation(line: 175, column: 1, scope: !3621)
!3632 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !142, file: !142, line: 209, type: !3622, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3633)
!3633 = !{!3634, !3635, !3636}
!3634 = !DILocalVariable(name: "h", arg: 1, scope: !3632, file: !142, line: 209, type: !2235)
!3635 = !DILocalVariable(name: "c", arg: 2, scope: !3632, file: !142, line: 209, type: !2240)
!3636 = !DILocalVariable(name: "size", arg: 3, scope: !3632, file: !142, line: 210, type: !3357)
!3637 = !DILocation(line: 0, scope: !3632)
!3638 = !DILocation(line: 212, column: 2, scope: !3632)
!3639 = !DILocation(line: 213, column: 1, scope: !3632)
!3640 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3294, file: !3294, line: 34, type: !3490, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3641)
!3641 = !{!3642, !3643, !3644, !3645, !3646, !3649}
!3642 = !DILocalVariable(name: "h", arg: 1, scope: !3640, file: !3294, line: 34, type: !2235)
!3643 = !DILocalVariable(name: "c", arg: 2, scope: !3640, file: !3294, line: 34, type: !2240)
!3644 = !DILocalVariable(name: "bidx", arg: 3, scope: !3640, file: !3294, line: 34, type: !103)
!3645 = !DILocalVariable(name: "b", scope: !3640, file: !3294, line: 36, type: !3497)
!3646 = !DILocalVariable(name: "first", scope: !3647, file: !3294, line: 47, type: !2240)
!3647 = distinct !DILexicalBlock(scope: !3648, file: !3294, line: 46, column: 9)
!3648 = distinct !DILexicalBlock(scope: !3640, file: !3294, line: 42, column: 6)
!3649 = !DILocalVariable(name: "second", scope: !3647, file: !3294, line: 48, type: !2240)
!3650 = !DILocation(line: 0, scope: !3640)
!3651 = !DILocation(line: 36, column: 29, scope: !3640)
!3652 = !DILocation(line: 42, column: 6, scope: !3648)
!3653 = !DILocation(line: 42, column: 28, scope: !3648)
!3654 = !DILocation(line: 42, column: 6, scope: !3640)
!3655 = !DILocation(line: 44, column: 24, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3648, file: !3294, line: 42, column: 34)
!3657 = !DILocation(line: 44, column: 23, scope: !3656)
!3658 = !DILocation(line: 44, column: 6, scope: !3656)
!3659 = !DILocation(line: 44, column: 20, scope: !3656)
!3660 = !DILocation(line: 45, column: 6, scope: !3656)
!3661 = !DILocation(line: 45, column: 11, scope: !3656)
!3662 = !DILocation(line: 46, column: 2, scope: !3656)
!3663 = !DILocation(line: 47, column: 21, scope: !3647)
!3664 = !DILocation(line: 0, scope: !3647)
!3665 = !DILocation(line: 50, column: 6, scope: !3647)
!3666 = !DILocation(line: 50, column: 11, scope: !3647)
!3667 = !DILocation(line: 51, column: 3, scope: !3647)
!3668 = !DILocation(line: 52, column: 3, scope: !3647)
!3669 = !DILocation(line: 56, column: 39, scope: !3640)
!3670 = !DILocation(line: 56, column: 19, scope: !3640)
!3671 = !DILocation(line: 56, column: 5, scope: !3640)
!3672 = !DILocation(line: 56, column: 16, scope: !3640)
!3673 = !DILocation(line: 58, column: 1, scope: !3640)
!3674 = distinct !DISubprogram(name: "next_free_chunk", scope: !142, file: !142, line: 182, type: !3405, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3675)
!3675 = !{!3676, !3677}
!3676 = !DILocalVariable(name: "h", arg: 1, scope: !3674, file: !142, line: 182, type: !2235)
!3677 = !DILocalVariable(name: "c", arg: 2, scope: !3674, file: !142, line: 182, type: !2240)
!3678 = !DILocation(line: 0, scope: !3674)
!3679 = !DILocation(line: 184, column: 9, scope: !3674)
!3680 = !DILocation(line: 184, column: 2, scope: !3674)
!3681 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3294, file: !3294, line: 200, type: !3682, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3684)
!3682 = !DISubroutineType(types: !3683)
!3683 = !{!120, !3297, !102}
!3684 = !{!3685, !3686, !3687, !3688, !3689, !3690, !3691}
!3685 = !DILocalVariable(name: "heap", arg: 1, scope: !3681, file: !3294, line: 200, type: !3297)
!3686 = !DILocalVariable(name: "mem", arg: 2, scope: !3681, file: !3294, line: 200, type: !102)
!3687 = !DILocalVariable(name: "h", scope: !3681, file: !3294, line: 202, type: !2235)
!3688 = !DILocalVariable(name: "c", scope: !3681, file: !3294, line: 203, type: !2240)
!3689 = !DILocalVariable(name: "addr", scope: !3681, file: !3294, line: 204, type: !120)
!3690 = !DILocalVariable(name: "chunk_base", scope: !3681, file: !3294, line: 205, type: !120)
!3691 = !DILocalVariable(name: "chunk_sz", scope: !3681, file: !3294, line: 206, type: !120)
!3692 = !DILocation(line: 0, scope: !3681)
!3693 = !DILocation(line: 202, column: 27, scope: !3681)
!3694 = !DILocation(line: 203, column: 16, scope: !3681)
!3695 = !DILocation(line: 204, column: 16, scope: !3681)
!3696 = !DILocation(line: 205, column: 31, scope: !3681)
!3697 = !DILocation(line: 205, column: 22, scope: !3681)
!3698 = !DILocation(line: 206, column: 20, scope: !3681)
!3699 = !DILocation(line: 206, column: 37, scope: !3681)
!3700 = !DILocation(line: 208, column: 26, scope: !3681)
!3701 = !DILocation(line: 208, column: 18, scope: !3681)
!3702 = !DILocation(line: 208, column: 2, scope: !3681)
!3703 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3294, file: !3294, line: 263, type: !3704, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3706)
!3704 = !DISubroutineType(types: !3705)
!3705 = !{!102, !3297, !120}
!3706 = !{!3707, !3708, !3709, !3710, !3711, !3712}
!3707 = !DILocalVariable(name: "heap", arg: 1, scope: !3703, file: !3294, line: 263, type: !3297)
!3708 = !DILocalVariable(name: "bytes", arg: 2, scope: !3703, file: !3294, line: 263, type: !120)
!3709 = !DILocalVariable(name: "h", scope: !3703, file: !3294, line: 265, type: !2235)
!3710 = !DILocalVariable(name: "mem", scope: !3703, file: !3294, line: 266, type: !102)
!3711 = !DILocalVariable(name: "chunk_sz", scope: !3703, file: !3294, line: 272, type: !3357)
!3712 = !DILocalVariable(name: "c", scope: !3703, file: !3294, line: 273, type: !2240)
!3713 = !DILocation(line: 0, scope: !3703)
!3714 = !DILocation(line: 265, column: 27, scope: !3703)
!3715 = !DILocation(line: 268, column: 12, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3703, file: !3294, line: 268, column: 6)
!3717 = !DILocation(line: 268, column: 18, scope: !3716)
!3718 = !DILocation(line: 268, column: 21, scope: !3716)
!3719 = !DILocation(line: 268, column: 6, scope: !3703)
!3720 = !DILocation(line: 272, column: 23, scope: !3703)
!3721 = !DILocation(line: 273, column: 16, scope: !3703)
!3722 = !DILocation(line: 274, column: 8, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !3703, file: !3294, line: 274, column: 6)
!3724 = !DILocation(line: 274, column: 6, scope: !3703)
!3725 = !DILocation(line: 279, column: 6, scope: !3726)
!3726 = distinct !DILexicalBlock(scope: !3703, file: !3294, line: 279, column: 6)
!3727 = !DILocation(line: 279, column: 23, scope: !3726)
!3728 = !DILocation(line: 279, column: 6, scope: !3703)
!3729 = !DILocation(line: 280, column: 24, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3726, file: !3294, line: 279, column: 35)
!3731 = !DILocation(line: 280, column: 3, scope: !3730)
!3732 = !DILocation(line: 281, column: 3, scope: !3730)
!3733 = !DILocation(line: 282, column: 2, scope: !3730)
!3734 = !DILocation(line: 284, column: 2, scope: !3703)
!3735 = !DILocation(line: 286, column: 8, scope: !3703)
!3736 = !DILocation(line: 289, column: 50, scope: !3703)
!3737 = !DILocation(line: 289, column: 30, scope: !3703)
!3738 = !{i32 -4, i32 262133}
!3739 = !DILocation(line: 289, column: 2, scope: !3703)
!3740 = !DILocation(line: 298, column: 2, scope: !3703)
!3741 = !DILocation(line: 299, column: 1, scope: !3703)
!3742 = distinct !DISubprogram(name: "size_too_big", scope: !142, file: !142, line: 256, type: !3743, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3745)
!3743 = !DISubroutineType(types: !3744)
!3744 = !{!211, !2235, !120}
!3745 = !{!3746, !3747}
!3746 = !DILocalVariable(name: "h", arg: 1, scope: !3742, file: !142, line: 256, type: !2235)
!3747 = !DILocalVariable(name: "bytes", arg: 2, scope: !3742, file: !142, line: 256, type: !120)
!3748 = !DILocation(line: 0, scope: !3742)
!3749 = !DILocation(line: 262, column: 16, scope: !3742)
!3750 = !DILocation(line: 262, column: 36, scope: !3742)
!3751 = !DILocation(line: 262, column: 30, scope: !3742)
!3752 = !DILocation(line: 262, column: 2, scope: !3742)
!3753 = distinct !DISubprogram(name: "alloc_chunk", scope: !3294, file: !3294, line: 211, type: !3754, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3756)
!3754 = !DISubroutineType(types: !3755)
!3755 = !{!2240, !2235, !3357}
!3756 = !{!3757, !3758, !3759, !3760, !3761, !3764, !3765, !3767, !3768, !3771}
!3757 = !DILocalVariable(name: "h", arg: 1, scope: !3753, file: !3294, line: 211, type: !2235)
!3758 = !DILocalVariable(name: "sz", arg: 2, scope: !3753, file: !3294, line: 211, type: !3357)
!3759 = !DILocalVariable(name: "bi", scope: !3753, file: !3294, line: 213, type: !103)
!3760 = !DILocalVariable(name: "b", scope: !3753, file: !3294, line: 214, type: !3497)
!3761 = !DILocalVariable(name: "first", scope: !3762, file: !3294, line: 233, type: !2240)
!3762 = distinct !DILexicalBlock(scope: !3763, file: !3294, line: 232, column: 15)
!3763 = distinct !DILexicalBlock(scope: !3753, file: !3294, line: 232, column: 6)
!3764 = !DILocalVariable(name: "i", scope: !3762, file: !3294, line: 234, type: !103)
!3765 = !DILocalVariable(name: "c", scope: !3766, file: !3294, line: 236, type: !2240)
!3766 = distinct !DILexicalBlock(scope: !3762, file: !3294, line: 235, column: 6)
!3767 = !DILocalVariable(name: "bmask", scope: !3753, file: !3294, line: 249, type: !137)
!3768 = !DILocalVariable(name: "minbucket", scope: !3769, file: !3294, line: 252, type: !103)
!3769 = distinct !DILexicalBlock(scope: !3770, file: !3294, line: 251, column: 19)
!3770 = distinct !DILexicalBlock(scope: !3753, file: !3294, line: 251, column: 6)
!3771 = !DILocalVariable(name: "c", scope: !3769, file: !3294, line: 253, type: !2240)
!3772 = !DILocation(line: 0, scope: !3753)
!3773 = !DILocation(line: 213, column: 11, scope: !3753)
!3774 = !DILocation(line: 232, column: 9, scope: !3763)
!3775 = !DILocation(line: 232, column: 6, scope: !3763)
!3776 = !DILocation(line: 232, column: 6, scope: !3753)
!3777 = !DILocation(line: 236, column: 21, scope: !3766)
!3778 = !DILocation(line: 0, scope: !3762)
!3779 = !DILocation(line: 0, scope: !3766)
!3780 = !DILocation(line: 237, column: 8, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3766, file: !3294, line: 237, column: 8)
!3782 = !DILocation(line: 237, column: 25, scope: !3781)
!3783 = !DILocation(line: 237, column: 8, scope: !3766)
!3784 = !DILocation(line: 238, column: 5, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3781, file: !3294, line: 237, column: 32)
!3786 = !DILocation(line: 241, column: 14, scope: !3766)
!3787 = !DILocation(line: 241, column: 12, scope: !3766)
!3788 = !DILocation(line: 243, column: 12, scope: !3762)
!3789 = !DILocation(line: 243, column: 16, scope: !3762)
!3790 = distinct !{!3790, !3791, !3792}
!3791 = !DILocation(line: 235, column: 3, scope: !3762)
!3792 = !DILocation(line: 243, column: 35, scope: !3762)
!3793 = !DILocation(line: 249, column: 22, scope: !3753)
!3794 = !DILocation(line: 249, column: 39, scope: !3753)
!3795 = !DILocation(line: 249, column: 36, scope: !3753)
!3796 = !DILocation(line: 251, column: 12, scope: !3770)
!3797 = !DILocation(line: 251, column: 6, scope: !3753)
!3798 = !DILocation(line: 252, column: 19, scope: !3769)
!3799 = !DILocation(line: 0, scope: !3769)
!3800 = !DILocation(line: 253, column: 39, scope: !3769)
!3801 = !DILocation(line: 255, column: 3, scope: !3769)
!3802 = !DILocation(line: 261, column: 1, scope: !3753)
!3803 = distinct !DISubprogram(name: "split_chunks", scope: !3294, file: !3294, line: 109, type: !3438, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3804)
!3804 = !{!3805, !3806, !3807, !3808, !3809, !3810}
!3805 = !DILocalVariable(name: "h", arg: 1, scope: !3803, file: !3294, line: 109, type: !2235)
!3806 = !DILocalVariable(name: "lc", arg: 2, scope: !3803, file: !3294, line: 109, type: !2240)
!3807 = !DILocalVariable(name: "rc", arg: 3, scope: !3803, file: !3294, line: 109, type: !2240)
!3808 = !DILocalVariable(name: "sz0", scope: !3803, file: !3294, line: 114, type: !3357)
!3809 = !DILocalVariable(name: "lsz", scope: !3803, file: !3294, line: 115, type: !3357)
!3810 = !DILocalVariable(name: "rsz", scope: !3803, file: !3294, line: 116, type: !3357)
!3811 = !DILocation(line: 0, scope: !3803)
!3812 = !DILocation(line: 114, column: 18, scope: !3803)
!3813 = !DILocation(line: 115, column: 21, scope: !3803)
!3814 = !DILocation(line: 116, column: 22, scope: !3803)
!3815 = !DILocation(line: 118, column: 2, scope: !3803)
!3816 = !DILocation(line: 119, column: 2, scope: !3803)
!3817 = !DILocation(line: 120, column: 2, scope: !3803)
!3818 = !DILocation(line: 121, column: 25, scope: !3803)
!3819 = !DILocation(line: 121, column: 2, scope: !3803)
!3820 = !DILocation(line: 122, column: 1, scope: !3803)
!3821 = distinct !DISubprogram(name: "chunk_mem", scope: !3294, file: !3294, line: 24, type: !3822, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3824)
!3822 = !DISubroutineType(types: !3823)
!3823 = !{!102, !2235, !2240}
!3824 = !{!3825, !3826, !3827, !3828}
!3825 = !DILocalVariable(name: "h", arg: 1, scope: !3821, file: !3294, line: 24, type: !2235)
!3826 = !DILocalVariable(name: "c", arg: 2, scope: !3821, file: !3294, line: 24, type: !2240)
!3827 = !DILocalVariable(name: "buf", scope: !3821, file: !3294, line: 26, type: !2230)
!3828 = !DILocalVariable(name: "ret", scope: !3821, file: !3294, line: 27, type: !1726)
!3829 = !DILocation(line: 0, scope: !3821)
!3830 = !DILocation(line: 26, column: 22, scope: !3821)
!3831 = !DILocation(line: 27, column: 38, scope: !3821)
!3832 = !DILocation(line: 31, column: 2, scope: !3821)
!3833 = distinct !DISubprogram(name: "increase_allocated_bytes", scope: !3294, file: !3294, line: 17, type: !3834, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3836)
!3834 = !DISubroutineType(types: !3835)
!3835 = !{null, !2235, !120}
!3836 = !{!3837, !3838}
!3837 = !DILocalVariable(name: "h", arg: 1, scope: !3833, file: !3294, line: 17, type: !2235)
!3838 = !DILocalVariable(name: "num_bytes", arg: 2, scope: !3833, file: !3294, line: 17, type: !120)
!3839 = !DILocation(line: 0, scope: !3833)
!3840 = !DILocation(line: 19, column: 5, scope: !3833)
!3841 = !DILocation(line: 19, column: 21, scope: !3833)
!3842 = !DILocation(line: 20, column: 27, scope: !3833)
!3843 = !DILocation(line: 20, column: 25, scope: !3833)
!3844 = !DILocation(line: 21, column: 1, scope: !3833)
!3845 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3294, file: !3294, line: 301, type: !3846, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3848)
!3846 = !DISubroutineType(types: !3847)
!3847 = !{!102, !3297, !120, !120}
!3848 = !{!3849, !3850, !3851, !3852, !3853, !3854, !3855, !3856, !3857, !3858, !3859, !3860}
!3849 = !DILocalVariable(name: "heap", arg: 1, scope: !3845, file: !3294, line: 301, type: !3297)
!3850 = !DILocalVariable(name: "align", arg: 2, scope: !3845, file: !3294, line: 301, type: !120)
!3851 = !DILocalVariable(name: "bytes", arg: 3, scope: !3845, file: !3294, line: 301, type: !120)
!3852 = !DILocalVariable(name: "h", scope: !3845, file: !3294, line: 303, type: !2235)
!3853 = !DILocalVariable(name: "gap", scope: !3845, file: !3294, line: 304, type: !120)
!3854 = !DILocalVariable(name: "rew", scope: !3845, file: !3294, line: 304, type: !120)
!3855 = !DILocalVariable(name: "padded_sz", scope: !3845, file: !3294, line: 335, type: !3357)
!3856 = !DILocalVariable(name: "c0", scope: !3845, file: !3294, line: 336, type: !2240)
!3857 = !DILocalVariable(name: "mem", scope: !3845, file: !3294, line: 341, type: !1726)
!3858 = !DILocalVariable(name: "end", scope: !3845, file: !3294, line: 345, type: !2230)
!3859 = !DILocalVariable(name: "c", scope: !3845, file: !3294, line: 348, type: !2240)
!3860 = !DILocalVariable(name: "c_end", scope: !3845, file: !3294, line: 349, type: !2240)
!3861 = !DILocation(line: 0, scope: !3845)
!3862 = !DILocation(line: 303, column: 27, scope: !3845)
!3863 = !DILocation(line: 313, column: 16, scope: !3845)
!3864 = !DILocation(line: 313, column: 14, scope: !3845)
!3865 = !DILocation(line: 314, column: 12, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3845, file: !3294, line: 314, column: 6)
!3867 = !DILocation(line: 314, column: 6, scope: !3845)
!3868 = !DILocation(line: 315, column: 9, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3866, file: !3294, line: 314, column: 20)
!3870 = !DILocation(line: 316, column: 9, scope: !3869)
!3871 = !DILocation(line: 318, column: 13, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3873, file: !3294, line: 318, column: 7)
!3873 = distinct !DILexicalBlock(scope: !3866, file: !3294, line: 317, column: 9)
!3874 = !DILocation(line: 318, column: 7, scope: !3873)
!3875 = !DILocation(line: 319, column: 11, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3872, file: !3294, line: 318, column: 39)
!3877 = !DILocation(line: 319, column: 4, scope: !3876)
!3878 = !DILocation(line: 0, scope: !3866)
!3879 = !DILocation(line: 326, column: 12, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3845, file: !3294, line: 326, column: 6)
!3881 = !DILocation(line: 326, column: 17, scope: !3880)
!3882 = !DILocation(line: 326, column: 20, scope: !3880)
!3883 = !DILocation(line: 326, column: 6, scope: !3845)
!3884 = !DILocation(line: 335, column: 50, scope: !3845)
!3885 = !DILocation(line: 335, column: 58, scope: !3845)
!3886 = !DILocation(line: 335, column: 24, scope: !3845)
!3887 = !DILocation(line: 336, column: 17, scope: !3845)
!3888 = !DILocation(line: 338, column: 9, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3845, file: !3294, line: 338, column: 6)
!3890 = !DILocation(line: 338, column: 6, scope: !3845)
!3891 = !DILocation(line: 341, column: 17, scope: !3845)
!3892 = !DILocation(line: 344, column: 20, scope: !3845)
!3893 = !DILocation(line: 344, column: 8, scope: !3845)
!3894 = !DILocation(line: 344, column: 47, scope: !3845)
!3895 = !DILocation(line: 345, column: 39, scope: !3845)
!3896 = !DILocation(line: 348, column: 16, scope: !3845)
!3897 = !DILocation(line: 349, column: 26, scope: !3845)
!3898 = !DILocation(line: 349, column: 24, scope: !3845)
!3899 = !DILocation(line: 353, column: 8, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3845, file: !3294, line: 353, column: 6)
!3901 = !DILocation(line: 353, column: 6, scope: !3845)
!3902 = !DILocation(line: 354, column: 3, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3900, file: !3294, line: 353, column: 14)
!3904 = !DILocation(line: 355, column: 3, scope: !3903)
!3905 = !DILocation(line: 356, column: 2, scope: !3903)
!3906 = !DILocation(line: 359, column: 6, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3845, file: !3294, line: 359, column: 6)
!3908 = !DILocation(line: 359, column: 24, scope: !3907)
!3909 = !DILocation(line: 359, column: 6, scope: !3845)
!3910 = !DILocation(line: 360, column: 3, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3907, file: !3294, line: 359, column: 33)
!3912 = !DILocation(line: 361, column: 3, scope: !3911)
!3913 = !DILocation(line: 362, column: 2, scope: !3911)
!3914 = !DILocation(line: 364, column: 2, scope: !3845)
!3915 = !DILocation(line: 367, column: 50, scope: !3845)
!3916 = !DILocation(line: 367, column: 30, scope: !3845)
!3917 = !DILocation(line: 367, column: 2, scope: !3845)
!3918 = !DILocation(line: 377, column: 1, scope: !3845)
!3919 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3294, file: !3294, line: 379, type: !3920, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !3922)
!3920 = !DISubroutineType(types: !3921)
!3921 = !{!102, !3297, !102, !120, !120}
!3922 = !{!3923, !3924, !3925, !3926, !3927, !3928, !3929, !3930, !3931, !3932, !3938, !3939}
!3923 = !DILocalVariable(name: "heap", arg: 1, scope: !3919, file: !3294, line: 379, type: !3297)
!3924 = !DILocalVariable(name: "ptr", arg: 2, scope: !3919, file: !3294, line: 379, type: !102)
!3925 = !DILocalVariable(name: "align", arg: 3, scope: !3919, file: !3294, line: 380, type: !120)
!3926 = !DILocalVariable(name: "bytes", arg: 4, scope: !3919, file: !3294, line: 380, type: !120)
!3927 = !DILocalVariable(name: "h", scope: !3919, file: !3294, line: 382, type: !2235)
!3928 = !DILocalVariable(name: "c", scope: !3919, file: !3294, line: 399, type: !2240)
!3929 = !DILocalVariable(name: "rc", scope: !3919, file: !3294, line: 400, type: !2240)
!3930 = !DILocalVariable(name: "align_gap", scope: !3919, file: !3294, line: 401, type: !120)
!3931 = !DILocalVariable(name: "chunks_need", scope: !3919, file: !3294, line: 402, type: !3357)
!3932 = !DILocalVariable(name: "split_size", scope: !3933, file: !3294, line: 435, type: !3357)
!3933 = distinct !DILexicalBlock(scope: !3934, file: !3294, line: 433, column: 61)
!3934 = distinct !DILexicalBlock(scope: !3935, file: !3294, line: 432, column: 13)
!3935 = distinct !DILexicalBlock(scope: !3936, file: !3294, line: 409, column: 13)
!3936 = distinct !DILexicalBlock(scope: !3937, file: !3294, line: 406, column: 13)
!3937 = distinct !DILexicalBlock(scope: !3919, file: !3294, line: 404, column: 6)
!3938 = !DILocalVariable(name: "ptr2", scope: !3919, file: !3294, line: 474, type: !102)
!3939 = !DILocalVariable(name: "prev_size", scope: !3940, file: !3294, line: 477, type: !120)
!3940 = distinct !DILexicalBlock(scope: !3941, file: !3294, line: 476, column: 20)
!3941 = distinct !DILexicalBlock(scope: !3919, file: !3294, line: 476, column: 6)
!3942 = !DILocation(line: 0, scope: !3919)
!3943 = !DILocation(line: 382, column: 27, scope: !3919)
!3944 = !DILocation(line: 385, column: 10, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3919, file: !3294, line: 385, column: 6)
!3946 = !DILocation(line: 385, column: 6, scope: !3919)
!3947 = !DILocation(line: 386, column: 10, scope: !3948)
!3948 = distinct !DILexicalBlock(scope: !3945, file: !3294, line: 385, column: 19)
!3949 = !DILocation(line: 386, column: 3, scope: !3948)
!3950 = !DILocation(line: 388, column: 12, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3919, file: !3294, line: 388, column: 6)
!3952 = !DILocation(line: 388, column: 6, scope: !3919)
!3953 = !DILocation(line: 389, column: 3, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3951, file: !3294, line: 388, column: 18)
!3955 = !DILocation(line: 390, column: 3, scope: !3954)
!3956 = !DILocation(line: 395, column: 6, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3919, file: !3294, line: 395, column: 6)
!3958 = !DILocation(line: 395, column: 6, scope: !3919)
!3959 = !DILocation(line: 399, column: 16, scope: !3919)
!3960 = !DILocation(line: 400, column: 17, scope: !3919)
!3961 = !DILocation(line: 401, column: 49, scope: !3919)
!3962 = !DILocation(line: 401, column: 36, scope: !3919)
!3963 = !DILocation(line: 402, column: 52, scope: !3919)
!3964 = !DILocation(line: 402, column: 26, scope: !3919)
!3965 = !DILocation(line: 404, column: 6, scope: !3937)
!3966 = !DILocation(line: 404, column: 12, scope: !3937)
!3967 = !DILocation(line: 404, column: 40, scope: !3937)
!3968 = !DILocation(line: 404, column: 31, scope: !3937)
!3969 = !DILocation(line: 404, column: 6, scope: !3919)
!3970 = !DILocation(line: 406, column: 13, scope: !3936)
!3971 = !DILocation(line: 406, column: 30, scope: !3936)
!3972 = !DILocation(line: 406, column: 13, scope: !3937)
!3973 = !DILocation(line: 409, column: 30, scope: !3935)
!3974 = !DILocation(line: 409, column: 13, scope: !3936)
!3975 = !DILocation(line: 417, column: 22, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3935, file: !3294, line: 409, column: 45)
!3977 = !DILocation(line: 417, column: 37, scope: !3976)
!3978 = !DILocation(line: 416, column: 6, scope: !3976)
!3979 = !DILocation(line: 416, column: 22, scope: !3976)
!3980 = !DILocation(line: 420, column: 24, scope: !3976)
!3981 = !DILocation(line: 420, column: 3, scope: !3976)
!3982 = !DILocation(line: 421, column: 3, scope: !3976)
!3983 = !DILocation(line: 422, column: 3, scope: !3976)
!3984 = !DILocation(line: 431, column: 3, scope: !3976)
!3985 = !DILocation(line: 432, column: 14, scope: !3934)
!3986 = !DILocation(line: 432, column: 32, scope: !3934)
!3987 = !DILocation(line: 433, column: 26, scope: !3934)
!3988 = !DILocation(line: 433, column: 24, scope: !3934)
!3989 = !DILocation(line: 433, column: 44, scope: !3934)
!3990 = !DILocation(line: 432, column: 13, scope: !3935)
!3991 = !DILocation(line: 435, column: 38, scope: !3933)
!3992 = !DILocation(line: 0, scope: !3933)
!3993 = !DILocation(line: 442, column: 42, scope: !3933)
!3994 = !DILocation(line: 442, column: 3, scope: !3933)
!3995 = !DILocation(line: 445, column: 3, scope: !3933)
!3996 = !DILocation(line: 447, column: 20, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3933, file: !3294, line: 447, column: 7)
!3998 = !DILocation(line: 447, column: 18, scope: !3997)
!3999 = !DILocation(line: 447, column: 7, scope: !3933)
!4000 = !DILocation(line: 448, column: 27, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3997, file: !3294, line: 447, column: 39)
!4002 = !DILocation(line: 448, column: 4, scope: !4001)
!4003 = !DILocation(line: 449, column: 4, scope: !4001)
!4004 = !DILocation(line: 450, column: 3, scope: !4001)
!4005 = !DILocation(line: 452, column: 3, scope: !3933)
!4006 = !DILocation(line: 453, column: 3, scope: !3933)
!4007 = !DILocation(line: 474, column: 15, scope: !3919)
!4008 = !DILocation(line: 476, column: 11, scope: !3941)
!4009 = !DILocation(line: 476, column: 6, scope: !3919)
!4010 = !DILocation(line: 477, column: 42, scope: !3940)
!4011 = !DILocation(line: 477, column: 22, scope: !3940)
!4012 = !DILocation(line: 477, column: 60, scope: !3940)
!4013 = !DILocation(line: 0, scope: !3940)
!4014 = !DILocation(line: 479, column: 21, scope: !3940)
!4015 = !DILocation(line: 479, column: 3, scope: !3940)
!4016 = !DILocation(line: 480, column: 3, scope: !3940)
!4017 = !DILocation(line: 481, column: 2, scope: !3940)
!4018 = !DILocation(line: 483, column: 1, scope: !3919)
!4019 = distinct !DISubprogram(name: "sys_heap_init", scope: !3294, file: !3294, line: 485, type: !4020, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2227, retainedNodes: !4022)
!4020 = !DISubroutineType(types: !4021)
!4021 = !{null, !3297, !102, !120}
!4022 = !{!4023, !4024, !4025, !4026, !4027, !4028, !4029, !4030, !4031, !4032}
!4023 = !DILocalVariable(name: "heap", arg: 1, scope: !4019, file: !3294, line: 485, type: !3297)
!4024 = !DILocalVariable(name: "mem", arg: 2, scope: !4019, file: !3294, line: 485, type: !102)
!4025 = !DILocalVariable(name: "bytes", arg: 3, scope: !4019, file: !3294, line: 485, type: !120)
!4026 = !DILocalVariable(name: "addr", scope: !4019, file: !3294, line: 502, type: !22)
!4027 = !DILocalVariable(name: "end", scope: !4019, file: !3294, line: 503, type: !22)
!4028 = !DILocalVariable(name: "heap_sz", scope: !4019, file: !3294, line: 504, type: !3357)
!4029 = !DILocalVariable(name: "h", scope: !4019, file: !3294, line: 509, type: !2235)
!4030 = !DILocalVariable(name: "nb_buckets", scope: !4019, file: !3294, line: 520, type: !103)
!4031 = !DILocalVariable(name: "chunk0_size", scope: !4019, file: !3294, line: 521, type: !3357)
!4032 = !DILocalVariable(name: "i", scope: !4033, file: !3294, line: 526, type: !103)
!4033 = distinct !DILexicalBlock(scope: !4019, file: !3294, line: 526, column: 2)
!4034 = !DILocation(line: 0, scope: !4019)
!4035 = !DILocation(line: 499, column: 8, scope: !4019)
!4036 = !DILocation(line: 502, column: 19, scope: !4019)
!4037 = !DILocation(line: 503, column: 18, scope: !4019)
!4038 = !DILocation(line: 504, column: 27, scope: !4019)
!4039 = !DILocation(line: 504, column: 35, scope: !4019)
!4040 = !DILocation(line: 509, column: 21, scope: !4019)
!4041 = !DILocation(line: 510, column: 8, scope: !4019)
!4042 = !DILocation(line: 510, column: 13, scope: !4019)
!4043 = !DILocation(line: 511, column: 5, scope: !4019)
!4044 = !DILocation(line: 511, column: 15, scope: !4019)
!4045 = !DILocation(line: 512, column: 5, scope: !4019)
!4046 = !DILocation(line: 512, column: 19, scope: !4019)
!4047 = !DILocation(line: 515, column: 5, scope: !4019)
!4048 = !DILocation(line: 515, column: 16, scope: !4019)
!4049 = !DILocation(line: 516, column: 5, scope: !4019)
!4050 = !DILocation(line: 516, column: 21, scope: !4019)
!4051 = !DILocation(line: 517, column: 5, scope: !4019)
!4052 = !DILocation(line: 517, column: 25, scope: !4019)
!4053 = !DILocation(line: 520, column: 19, scope: !4019)
!4054 = !DILocation(line: 522, column: 21, scope: !4019)
!4055 = !DILocation(line: 521, column: 56, scope: !4019)
!4056 = !DILocation(line: 521, column: 26, scope: !4019)
!4057 = !DILocation(line: 0, scope: !4033)
!4058 = !DILocation(line: 526, column: 20, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4033, file: !3294, line: 526, column: 2)
!4060 = !DILocation(line: 526, column: 2, scope: !4033)
!4061 = !DILocation(line: 531, column: 2, scope: !4019)
!4062 = !DILocation(line: 532, column: 2, scope: !4019)
!4063 = !DILocation(line: 533, column: 2, scope: !4019)
!4064 = !DILocation(line: 536, column: 41, scope: !4019)
!4065 = !DILocation(line: 536, column: 2, scope: !4019)
!4066 = !DILocation(line: 537, column: 2, scope: !4019)
!4067 = !DILocation(line: 540, column: 2, scope: !4019)
!4068 = !DILocation(line: 541, column: 2, scope: !4019)
!4069 = !DILocation(line: 542, column: 2, scope: !4019)
!4070 = !DILocation(line: 544, column: 2, scope: !4019)
!4071 = !DILocation(line: 545, column: 1, scope: !4019)
!4072 = !DILocation(line: 527, column: 17, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4059, file: !3294, line: 526, column: 39)
!4074 = !DILocation(line: 527, column: 22, scope: !4073)
!4075 = !DILocation(line: 526, column: 35, scope: !4059)
!4076 = distinct !{!4076, !4060, !4077}
!4077 = !DILocation(line: 528, column: 2, scope: !4033)
!4078 = distinct !DISubprogram(name: "sys_heap_validate", scope: !134, file: !134, line: 88, type: !4079, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4101)
!4079 = !DISubroutineType(types: !4080)
!4080 = !{!211, !4081}
!4081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4082, size: 32)
!4082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !4083)
!4083 = !{!4084, !4099, !4100}
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4082, file: !113, line: 57, baseType: !4085, size: 32)
!4085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4086, size: 32)
!4086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !142, line: 68, size: 224, elements: !4087)
!4087 = !{!4088, !4089, !4090, !4091, !4092, !4093, !4094}
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !4086, file: !142, line: 69, baseType: !2239, size: 64)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !4086, file: !142, line: 70, baseType: !2240, size: 32, offset: 64)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !4086, file: !142, line: 71, baseType: !137, size: 32, offset: 96)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !4086, file: !142, line: 73, baseType: !120, size: 32, offset: 128)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !4086, file: !142, line: 74, baseType: !120, size: 32, offset: 160)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !4086, file: !142, line: 75, baseType: !120, size: 32, offset: 192)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !4086, file: !142, line: 77, baseType: !4095, offset: 224)
!4095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4096, elements: !2251)
!4096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !142, line: 64, size: 32, elements: !4097)
!4097 = !{!4098}
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4096, file: !142, line: 65, baseType: !2240, size: 32)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4082, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4082, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!4101 = !{!4102, !4103, !4104, !4105, !4106, !4107, !4113, !4115, !4118, !4119, !4120, !4121, !4122, !4124, !4127}
!4102 = !DILocalVariable(name: "heap", arg: 1, scope: !4078, file: !134, line: 88, type: !4081)
!4103 = !DILocalVariable(name: "h", scope: !4078, file: !134, line: 90, type: !4085)
!4104 = !DILocalVariable(name: "c", scope: !4078, file: !134, line: 91, type: !2240)
!4105 = !DILocalVariable(name: "allocated_bytes", scope: !4078, file: !134, line: 112, type: !120)
!4106 = !DILocalVariable(name: "free_bytes", scope: !4078, file: !134, line: 112, type: !120)
!4107 = !DILocalVariable(name: "stat", scope: !4078, file: !134, line: 113, type: !4108)
!4108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_memory_stats", file: !2955, line: 24, size: 96, elements: !4109)
!4109 = !{!4110, !4111, !4112}
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !4108, file: !2955, line: 25, baseType: !120, size: 32)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !4108, file: !2955, line: 26, baseType: !120, size: 32, offset: 32)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !4108, file: !2955, line: 27, baseType: !120, size: 32, offset: 64)
!4113 = !DILocalVariable(name: "b", scope: !4114, file: !134, line: 127, type: !103)
!4114 = distinct !DILexicalBlock(scope: !4078, file: !134, line: 127, column: 2)
!4115 = !DILocalVariable(name: "c0", scope: !4116, file: !134, line: 128, type: !2240)
!4116 = distinct !DILexicalBlock(scope: !4117, file: !134, line: 127, column: 57)
!4117 = distinct !DILexicalBlock(scope: !4114, file: !134, line: 127, column: 2)
!4118 = !DILocalVariable(name: "n", scope: !4116, file: !134, line: 129, type: !137)
!4119 = !DILocalVariable(name: "empty", scope: !4116, file: !134, line: 141, type: !211)
!4120 = !DILocalVariable(name: "zero", scope: !4116, file: !134, line: 142, type: !211)
!4121 = !DILocalVariable(name: "prev_chunk", scope: !4078, file: !134, line: 159, type: !2240)
!4122 = !DILocalVariable(name: "b", scope: !4123, file: !134, line: 179, type: !103)
!4123 = distinct !DILexicalBlock(scope: !4078, file: !134, line: 179, column: 2)
!4124 = !DILocalVariable(name: "c0", scope: !4125, file: !134, line: 180, type: !2240)
!4125 = distinct !DILexicalBlock(scope: !4126, file: !134, line: 179, column: 57)
!4126 = distinct !DILexicalBlock(scope: !4123, file: !134, line: 179, column: 2)
!4127 = !DILocalVariable(name: "n", scope: !4125, file: !134, line: 181, type: !103)
!4128 = !DILocation(line: 0, scope: !4078)
!4129 = !DILocation(line: 90, column: 27, scope: !4078)
!4130 = !DILocation(line: 96, column: 11, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4078, file: !134, line: 96, column: 2)
!4132 = !DILocation(line: 96, column: 32, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4131, file: !134, line: 96, column: 2)
!4134 = !DILocation(line: 96, column: 2, scope: !4131)
!4135 = !DILocation(line: 97, column: 8, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4137, file: !134, line: 97, column: 7)
!4137 = distinct !DILexicalBlock(scope: !4133, file: !134, line: 96, column: 71)
!4138 = !DILocation(line: 97, column: 7, scope: !4137)
!4139 = !DILocation(line: 96, column: 52, scope: !4133)
!4140 = distinct !{!4140, !4134, !4141}
!4141 = !DILocation(line: 100, column: 2, scope: !4131)
!4142 = !DILocation(line: 0, scope: !4131)
!4143 = !DILocation(line: 101, column: 8, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4078, file: !134, line: 101, column: 6)
!4145 = !DILocation(line: 101, column: 6, scope: !4078)
!4146 = !DILocation(line: 112, column: 2, scope: !4078)
!4147 = !DILocation(line: 113, column: 2, scope: !4078)
!4148 = !DILocation(line: 113, column: 26, scope: !4078)
!4149 = !DILocation(line: 115, column: 2, scope: !4078)
!4150 = !DILocation(line: 116, column: 2, scope: !4078)
!4151 = !DILocation(line: 117, column: 12, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4078, file: !134, line: 117, column: 6)
!4153 = !DILocation(line: 117, column: 31, scope: !4152)
!4154 = !DILocation(line: 117, column: 28, scope: !4152)
!4155 = !DILocation(line: 117, column: 48, scope: !4152)
!4156 = !DILocation(line: 118, column: 12, scope: !4152)
!4157 = !DILocation(line: 118, column: 26, scope: !4152)
!4158 = !DILocation(line: 118, column: 23, scope: !4152)
!4159 = !DILocation(line: 117, column: 6, scope: !4078)
!4160 = !DILocation(line: 0, scope: !4114)
!4161 = !DILocation(line: 127, column: 40, scope: !4117)
!4162 = !DILocation(line: 127, column: 23, scope: !4117)
!4163 = !DILocation(line: 127, column: 20, scope: !4117)
!4164 = !DILocation(line: 127, column: 2, scope: !4114)
!4165 = !DILocation(line: 128, column: 32, scope: !4116)
!4166 = !DILocation(line: 0, scope: !4116)
!4167 = !DILocation(line: 133, column: 18, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4169, file: !134, line: 133, column: 3)
!4169 = distinct !DILexicalBlock(scope: !4116, file: !134, line: 133, column: 3)
!4170 = !DILocation(line: 133, column: 23, scope: !4168)
!4171 = !DILocation(line: 141, column: 20, scope: !4116)
!4172 = !DILocation(line: 141, column: 36, scope: !4116)
!4173 = !DILocation(line: 141, column: 34, scope: !4116)
!4174 = !DILocation(line: 141, column: 44, scope: !4116)
!4175 = !DILocation(line: 144, column: 7, scope: !4116)
!4176 = !DILocation(line: 133, column: 29, scope: !4168)
!4177 = !DILocation(line: 133, column: 34, scope: !4168)
!4178 = !DILocation(line: 133, column: 3, scope: !4169)
!4179 = !DILocation(line: 135, column: 9, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4181, file: !134, line: 135, column: 8)
!4181 = distinct !DILexicalBlock(scope: !4168, file: !134, line: 134, column: 40)
!4182 = !DILocation(line: 135, column: 8, scope: !4181)
!4183 = !DILocation(line: 138, column: 4, scope: !4181)
!4184 = !DILocation(line: 134, column: 9, scope: !4168)
!4185 = !DILocation(line: 134, column: 17, scope: !4168)
!4186 = distinct !{!4186, !4178, !4187}
!4187 = !DILocation(line: 139, column: 3, scope: !4169)
!4188 = !DILocation(line: 142, column: 17, scope: !4116)
!4189 = !DILocation(line: 144, column: 13, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !4116, file: !134, line: 144, column: 7)
!4191 = !DILocation(line: 148, column: 13, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4116, file: !134, line: 148, column: 7)
!4193 = !DILocation(line: 148, column: 30, scope: !4192)
!4194 = !DILocation(line: 148, column: 35, scope: !4192)
!4195 = !DILocation(line: 148, column: 7, scope: !4116)
!4196 = !DILocation(line: 127, column: 53, scope: !4117)
!4197 = distinct !{!4197, !4164, !4198}
!4198 = !DILocation(line: 151, column: 2, scope: !4114)
!4199 = !DILocation(line: 160, column: 37, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4201, file: !134, line: 160, column: 2)
!4201 = distinct !DILexicalBlock(scope: !4078, file: !134, line: 160, column: 2)
!4202 = !DILocation(line: 160, column: 11, scope: !4201)
!4203 = !DILocation(line: 160, column: 32, scope: !4200)
!4204 = !DILocation(line: 160, column: 2, scope: !4201)
!4205 = !DILocation(line: 161, column: 8, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4207, file: !134, line: 161, column: 7)
!4207 = distinct !DILexicalBlock(scope: !4200, file: !134, line: 160, column: 71)
!4208 = !DILocation(line: 161, column: 25, scope: !4206)
!4209 = !DILocation(line: 164, column: 7, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4207, file: !134, line: 164, column: 7)
!4211 = !DILocation(line: 164, column: 24, scope: !4210)
!4212 = !DILocation(line: 164, column: 7, scope: !4207)
!4213 = !DILocation(line: 169, column: 3, scope: !4207)
!4214 = !DILocation(line: 160, column: 52, scope: !4200)
!4215 = distinct !{!4215, !4204, !4216}
!4216 = !DILocation(line: 170, column: 2, scope: !4201)
!4217 = !DILocation(line: 0, scope: !4201)
!4218 = !DILocation(line: 171, column: 8, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4078, file: !134, line: 171, column: 6)
!4220 = !DILocation(line: 171, column: 6, scope: !4078)
!4221 = !DILocation(line: 0, scope: !4123)
!4222 = !DILocation(line: 179, column: 23, scope: !4126)
!4223 = !DILocation(line: 179, column: 20, scope: !4126)
!4224 = !DILocation(line: 179, column: 2, scope: !4123)
!4225 = !DILocation(line: 180, column: 32, scope: !4125)
!4226 = !DILocation(line: 0, scope: !4125)
!4227 = !DILocation(line: 183, column: 10, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4125, file: !134, line: 183, column: 7)
!4229 = !DILocation(line: 183, column: 7, scope: !4125)
!4230 = !DILocation(line: 188, column: 8, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4232, file: !134, line: 188, column: 8)
!4232 = distinct !DILexicalBlock(scope: !4233, file: !134, line: 187, column: 67)
!4233 = distinct !DILexicalBlock(scope: !4234, file: !134, line: 187, column: 3)
!4234 = distinct !DILexicalBlock(scope: !4125, file: !134, line: 187, column: 3)
!4235 = !DILocation(line: 188, column: 8, scope: !4232)
!4236 = !DILocation(line: 191, column: 4, scope: !4232)
!4237 = !DILocation(line: 187, column: 44, scope: !4233)
!4238 = !DILocation(line: 187, column: 23, scope: !4233)
!4239 = !DILocation(line: 187, column: 3, scope: !4234)
!4240 = distinct !{!4240, !4239, !4241}
!4241 = !DILocation(line: 192, column: 3, scope: !4234)
!4242 = !DILocation(line: 179, column: 40, scope: !4126)
!4243 = !DILocation(line: 179, column: 53, scope: !4126)
!4244 = distinct !{!4244, !4224, !4245}
!4245 = !DILocation(line: 193, column: 2, scope: !4123)
!4246 = !DILocation(line: 198, column: 37, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4248, file: !134, line: 198, column: 2)
!4248 = distinct !DILexicalBlock(scope: !4078, file: !134, line: 198, column: 2)
!4249 = !DILocation(line: 198, column: 11, scope: !4248)
!4250 = !DILocation(line: 198, column: 32, scope: !4247)
!4251 = !DILocation(line: 198, column: 2, scope: !4248)
!4252 = !DILocation(line: 199, column: 25, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4247, file: !134, line: 198, column: 71)
!4254 = !DILocation(line: 199, column: 24, scope: !4253)
!4255 = !DILocation(line: 199, column: 3, scope: !4253)
!4256 = !DILocation(line: 198, column: 52, scope: !4247)
!4257 = distinct !{!4257, !4251, !4258}
!4258 = !DILocation(line: 200, column: 2, scope: !4248)
!4259 = !DILocation(line: 202, column: 1, scope: !4078)
!4260 = distinct !DISubprogram(name: "right_chunk", scope: !142, file: !142, line: 204, type: !4261, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4263)
!4261 = !DISubroutineType(types: !4262)
!4262 = !{!2240, !4085, !2240}
!4263 = !{!4264, !4265}
!4264 = !DILocalVariable(name: "h", arg: 1, scope: !4260, file: !142, line: 204, type: !4085)
!4265 = !DILocalVariable(name: "c", arg: 2, scope: !4260, file: !142, line: 204, type: !2240)
!4266 = !DILocation(line: 0, scope: !4260)
!4267 = !DILocation(line: 206, column: 13, scope: !4260)
!4268 = !DILocation(line: 206, column: 11, scope: !4260)
!4269 = !DILocation(line: 206, column: 2, scope: !4260)
!4270 = distinct !DISubprogram(name: "valid_chunk", scope: !134, file: !134, line: 31, type: !4271, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4273)
!4271 = !DISubroutineType(types: !4272)
!4272 = !{!211, !4085, !2240}
!4273 = !{!4274, !4275}
!4274 = !DILocalVariable(name: "h", arg: 1, scope: !4270, file: !134, line: 31, type: !4085)
!4275 = !DILocalVariable(name: "c", arg: 2, scope: !4270, file: !134, line: 31, type: !2240)
!4276 = !DILocation(line: 0, scope: !4270)
!4277 = !DILocation(line: 33, column: 2, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4279, file: !134, line: 33, column: 2)
!4279 = distinct !DILexicalBlock(scope: !4270, file: !134, line: 33, column: 2)
!4280 = !DILocation(line: 33, column: 2, scope: !4279)
!4281 = !DILocation(line: 34, column: 2, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4283, file: !134, line: 34, column: 2)
!4283 = distinct !DILexicalBlock(scope: !4270, file: !134, line: 34, column: 2)
!4284 = !DILocation(line: 34, column: 2, scope: !4283)
!4285 = !DILocation(line: 35, column: 2, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4287, file: !134, line: 35, column: 2)
!4287 = distinct !DILexicalBlock(scope: !4270, file: !134, line: 35, column: 2)
!4288 = !DILocation(line: 35, column: 2, scope: !4287)
!4289 = !DILocation(line: 36, column: 2, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4291, file: !134, line: 36, column: 2)
!4291 = distinct !DILexicalBlock(scope: !4270, file: !134, line: 36, column: 2)
!4292 = !DILocation(line: 36, column: 2, scope: !4291)
!4293 = !DILocation(line: 37, column: 2, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4295, file: !134, line: 37, column: 2)
!4295 = distinct !DILexicalBlock(scope: !4270, file: !134, line: 37, column: 2)
!4296 = !DILocation(line: 37, column: 2, scope: !4295)
!4297 = !DILocation(line: 38, column: 6, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4270, file: !134, line: 38, column: 6)
!4299 = !DILocation(line: 38, column: 6, scope: !4270)
!4300 = !DILocation(line: 41, column: 3, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4302, file: !134, line: 41, column: 3)
!4302 = distinct !DILexicalBlock(scope: !4303, file: !134, line: 41, column: 3)
!4303 = distinct !DILexicalBlock(scope: !4298, file: !134, line: 40, column: 9)
!4304 = !DILocation(line: 41, column: 3, scope: !4302)
!4305 = !DILocation(line: 42, column: 3, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4307, file: !134, line: 42, column: 3)
!4307 = distinct !DILexicalBlock(scope: !4303, file: !134, line: 42, column: 3)
!4308 = !DILocation(line: 42, column: 3, scope: !4307)
!4309 = !DILocation(line: 44, column: 4, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4311, file: !134, line: 44, column: 4)
!4311 = distinct !DILexicalBlock(scope: !4312, file: !134, line: 44, column: 4)
!4312 = distinct !DILexicalBlock(scope: !4313, file: !134, line: 43, column: 32)
!4313 = distinct !DILexicalBlock(scope: !4303, file: !134, line: 43, column: 7)
!4314 = !DILocation(line: 44, column: 4, scope: !4311)
!4315 = !DILocation(line: 45, column: 4, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4317, file: !134, line: 45, column: 4)
!4317 = distinct !DILexicalBlock(scope: !4312, file: !134, line: 45, column: 4)
!4318 = !DILocation(line: 45, column: 4, scope: !4317)
!4319 = !DILocation(line: 48, column: 2, scope: !4270)
!4320 = !DILocation(line: 49, column: 1, scope: !4270)
!4321 = distinct !DISubprogram(name: "get_alloc_info", scope: !134, file: !134, line: 71, type: !4322, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4324)
!4322 = !DISubroutineType(types: !4323)
!4323 = !{null, !4085, !2288, !2288}
!4324 = !{!4325, !4326, !4327, !4328}
!4325 = !DILocalVariable(name: "h", arg: 1, scope: !4321, file: !134, line: 71, type: !4085)
!4326 = !DILocalVariable(name: "alloc_bytes", arg: 2, scope: !4321, file: !134, line: 71, type: !2288)
!4327 = !DILocalVariable(name: "free_bytes", arg: 3, scope: !4321, file: !134, line: 72, type: !2288)
!4328 = !DILocalVariable(name: "c", scope: !4321, file: !134, line: 74, type: !2240)
!4329 = !DILocation(line: 0, scope: !4321)
!4330 = !DILocation(line: 76, column: 15, scope: !4321)
!4331 = !DILocation(line: 77, column: 14, scope: !4321)
!4332 = !DILocation(line: 79, column: 11, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4321, file: !134, line: 79, column: 2)
!4334 = !DILocation(line: 79, column: 37, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4333, file: !134, line: 79, column: 2)
!4336 = !DILocation(line: 79, column: 32, scope: !4335)
!4337 = !DILocation(line: 79, column: 2, scope: !4333)
!4338 = !DILocation(line: 80, column: 7, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4340, file: !134, line: 80, column: 7)
!4340 = distinct !DILexicalBlock(scope: !4335, file: !134, line: 79, column: 71)
!4341 = !DILocation(line: 0, scope: !4339)
!4342 = !DILocation(line: 79, column: 52, scope: !4335)
!4343 = distinct !{!4343, !4337, !4344}
!4344 = !DILocation(line: 85, column: 2, scope: !4333)
!4345 = !DILocation(line: 86, column: 1, scope: !4321)
!4346 = distinct !DISubprogram(name: "sys_heap_runtime_stats_get", scope: !134, file: !134, line: 416, type: !4347, scopeLine: 418, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4350)
!4347 = !DISubroutineType(types: !4348)
!4348 = !{!103, !4081, !4349}
!4349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4108, size: 32)
!4350 = !{!4351, !4352}
!4351 = !DILocalVariable(name: "heap", arg: 1, scope: !4346, file: !134, line: 416, type: !4081)
!4352 = !DILocalVariable(name: "stats", arg: 2, scope: !4346, file: !134, line: 417, type: !4349)
!4353 = !DILocation(line: 0, scope: !4346)
!4354 = !DILocation(line: 419, column: 12, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4346, file: !134, line: 419, column: 6)
!4356 = !DILocation(line: 419, column: 21, scope: !4355)
!4357 = !DILocation(line: 423, column: 28, scope: !4346)
!4358 = !DILocation(line: 423, column: 34, scope: !4346)
!4359 = !DILocation(line: 423, column: 9, scope: !4346)
!4360 = !DILocation(line: 423, column: 20, scope: !4346)
!4361 = !DILocation(line: 424, column: 33, scope: !4346)
!4362 = !DILocation(line: 424, column: 39, scope: !4346)
!4363 = !DILocation(line: 424, column: 9, scope: !4346)
!4364 = !DILocation(line: 424, column: 25, scope: !4346)
!4365 = !DILocation(line: 425, column: 37, scope: !4346)
!4366 = !DILocation(line: 425, column: 43, scope: !4346)
!4367 = !DILocation(line: 425, column: 9, scope: !4346)
!4368 = !DILocation(line: 425, column: 29, scope: !4346)
!4369 = !DILocation(line: 427, column: 2, scope: !4346)
!4370 = !DILocation(line: 428, column: 1, scope: !4346)
!4371 = distinct !DISubprogram(name: "bucket_idx", scope: !142, file: !142, line: 250, type: !4372, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4374)
!4372 = !DISubroutineType(types: !4373)
!4373 = !{!103, !4085, !3357}
!4374 = !{!4375, !4376, !4377}
!4375 = !DILocalVariable(name: "h", arg: 1, scope: !4371, file: !142, line: 250, type: !4085)
!4376 = !DILocalVariable(name: "sz", arg: 2, scope: !4371, file: !142, line: 250, type: !3357)
!4377 = !DILocalVariable(name: "usable_sz", scope: !4371, file: !142, line: 252, type: !32)
!4378 = !DILocation(line: 0, scope: !4371)
!4379 = !DILocation(line: 253, column: 14, scope: !4371)
!4380 = !DILocation(line: 253, column: 12, scope: !4371)
!4381 = !DILocation(line: 253, column: 2, scope: !4371)
!4382 = distinct !DISubprogram(name: "set_chunk_used", scope: !142, file: !142, line: 147, type: !4383, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4385)
!4383 = !DISubroutineType(types: !4384)
!4384 = !{null, !4085, !2240, !211}
!4385 = !{!4386, !4387, !4388, !4389, !4390}
!4386 = !DILocalVariable(name: "h", arg: 1, scope: !4382, file: !142, line: 147, type: !4085)
!4387 = !DILocalVariable(name: "c", arg: 2, scope: !4382, file: !142, line: 147, type: !2240)
!4388 = !DILocalVariable(name: "used", arg: 3, scope: !4382, file: !142, line: 147, type: !211)
!4389 = !DILocalVariable(name: "buf", scope: !4382, file: !142, line: 149, type: !153)
!4390 = !DILocalVariable(name: "cmem", scope: !4382, file: !142, line: 150, type: !102)
!4391 = !DILocation(line: 0, scope: !4382)
!4392 = !DILocation(line: 149, column: 22, scope: !4382)
!4393 = !DILocation(line: 0, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4395, file: !142, line: 159, column: 7)
!4395 = distinct !DILexicalBlock(scope: !4396, file: !142, line: 158, column: 9)
!4396 = distinct !DILexicalBlock(scope: !4382, file: !142, line: 152, column: 6)
!4397 = !DILocation(line: 159, column: 7, scope: !4395)
!4398 = !DILocation(line: 165, column: 1, scope: !4382)
!4399 = distinct !DISubprogram(name: "next_free_chunk", scope: !142, file: !142, line: 182, type: !4261, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4400)
!4400 = !{!4401, !4402}
!4401 = !DILocalVariable(name: "h", arg: 1, scope: !4399, file: !142, line: 182, type: !4085)
!4402 = !DILocalVariable(name: "c", arg: 2, scope: !4399, file: !142, line: 182, type: !2240)
!4403 = !DILocation(line: 0, scope: !4399)
!4404 = !DILocation(line: 184, column: 9, scope: !4399)
!4405 = !DILocation(line: 184, column: 2, scope: !4399)
!4406 = distinct !DISubprogram(name: "chunk_used", scope: !142, file: !142, line: 137, type: !4271, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4407)
!4407 = !{!4408, !4409}
!4408 = !DILocalVariable(name: "h", arg: 1, scope: !4406, file: !142, line: 137, type: !4085)
!4409 = !DILocalVariable(name: "c", arg: 2, scope: !4406, file: !142, line: 137, type: !2240)
!4410 = !DILocation(line: 0, scope: !4406)
!4411 = !DILocation(line: 139, column: 9, scope: !4406)
!4412 = !DILocation(line: 139, column: 42, scope: !4406)
!4413 = !DILocation(line: 139, column: 2, scope: !4406)
!4414 = distinct !DISubprogram(name: "left_chunk", scope: !142, file: !142, line: 199, type: !4261, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4415)
!4415 = !{!4416, !4417}
!4416 = !DILocalVariable(name: "h", arg: 1, scope: !4414, file: !142, line: 199, type: !4085)
!4417 = !DILocalVariable(name: "c", arg: 2, scope: !4414, file: !142, line: 199, type: !2240)
!4418 = !DILocation(line: 0, scope: !4414)
!4419 = !DILocation(line: 201, column: 13, scope: !4414)
!4420 = !DILocation(line: 201, column: 11, scope: !4414)
!4421 = !DILocation(line: 201, column: 2, scope: !4414)
!4422 = distinct !DISubprogram(name: "chunk_field", scope: !142, file: !142, line: 107, type: !4423, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4425)
!4423 = !DISubroutineType(types: !4424)
!4424 = !{!2240, !4085, !2240, !141}
!4425 = !{!4426, !4427, !4428, !4429, !4430}
!4426 = !DILocalVariable(name: "h", arg: 1, scope: !4422, file: !142, line: 107, type: !4085)
!4427 = !DILocalVariable(name: "c", arg: 2, scope: !4422, file: !142, line: 107, type: !2240)
!4428 = !DILocalVariable(name: "f", arg: 3, scope: !4422, file: !142, line: 108, type: !141)
!4429 = !DILocalVariable(name: "buf", scope: !4422, file: !142, line: 110, type: !153)
!4430 = !DILocalVariable(name: "cmem", scope: !4422, file: !142, line: 111, type: !102)
!4431 = !DILocation(line: 0, scope: !4422)
!4432 = !DILocation(line: 110, column: 22, scope: !4422)
!4433 = !DILocation(line: 111, column: 15, scope: !4422)
!4434 = !DILocation(line: 116, column: 11, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !4436, file: !142, line: 115, column: 9)
!4436 = distinct !DILexicalBlock(scope: !4422, file: !142, line: 113, column: 6)
!4437 = !DILocation(line: 116, column: 10, scope: !4435)
!4438 = !DILocation(line: 118, column: 1, scope: !4422)
!4439 = distinct !DISubprogram(name: "chunk_buf", scope: !142, file: !142, line: 101, type: !4440, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4442)
!4440 = !DISubroutineType(types: !4441)
!4441 = !{!153, !4085}
!4442 = !{!4443}
!4443 = !DILocalVariable(name: "h", arg: 1, scope: !4439, file: !142, line: 101, type: !4085)
!4444 = !DILocation(line: 0, scope: !4439)
!4445 = !DILocation(line: 104, column: 9, scope: !4439)
!4446 = !DILocation(line: 104, column: 2, scope: !4439)
!4447 = distinct !DISubprogram(name: "chunk_size", scope: !142, file: !142, line: 142, type: !4448, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4450)
!4448 = !DISubroutineType(types: !4449)
!4449 = !{!3357, !4085, !2240}
!4450 = !{!4451, !4452}
!4451 = !DILocalVariable(name: "h", arg: 1, scope: !4447, file: !142, line: 142, type: !4085)
!4452 = !DILocalVariable(name: "c", arg: 2, scope: !4447, file: !142, line: 142, type: !2240)
!4453 = !DILocation(line: 0, scope: !4447)
!4454 = !DILocation(line: 144, column: 9, scope: !4447)
!4455 = !DILocation(line: 144, column: 42, scope: !4447)
!4456 = !DILocation(line: 144, column: 2, scope: !4447)
!4457 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !142, file: !142, line: 245, type: !4458, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4460)
!4458 = !DISubroutineType(types: !4459)
!4459 = !{!120, !4085, !3357}
!4460 = !{!4461, !4462}
!4461 = !DILocalVariable(name: "h", arg: 1, scope: !4457, file: !142, line: 245, type: !4085)
!4462 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4457, file: !142, line: 245, type: !3357)
!4463 = !DILocation(line: 0, scope: !4457)
!4464 = !DILocation(line: 247, column: 20, scope: !4457)
!4465 = !DILocation(line: 247, column: 33, scope: !4457)
!4466 = !DILocation(line: 247, column: 2, scope: !4457)
!4467 = distinct !DISubprogram(name: "in_bounds", scope: !134, file: !134, line: 23, type: !4271, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4468)
!4468 = !{!4469, !4470}
!4469 = !DILocalVariable(name: "h", arg: 1, scope: !4467, file: !134, line: 23, type: !4085)
!4470 = !DILocalVariable(name: "c", arg: 2, scope: !4467, file: !134, line: 23, type: !2240)
!4471 = !DILocation(line: 0, scope: !4467)
!4472 = !DILocation(line: 25, column: 2, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4474, file: !134, line: 25, column: 2)
!4474 = distinct !DILexicalBlock(scope: !4467, file: !134, line: 25, column: 2)
!4475 = !DILocation(line: 25, column: 2, scope: !4474)
!4476 = !DILocation(line: 26, column: 2, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4478, file: !134, line: 26, column: 2)
!4478 = distinct !DILexicalBlock(scope: !4467, file: !134, line: 26, column: 2)
!4479 = !DILocation(line: 26, column: 2, scope: !4478)
!4480 = !DILocation(line: 27, column: 2, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4482, file: !134, line: 27, column: 2)
!4482 = distinct !DILexicalBlock(scope: !4467, file: !134, line: 27, column: 2)
!4483 = !DILocation(line: 29, column: 1, scope: !4467)
!4484 = distinct !DISubprogram(name: "prev_free_chunk", scope: !142, file: !142, line: 177, type: !4261, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4485)
!4485 = !{!4486, !4487}
!4486 = !DILocalVariable(name: "h", arg: 1, scope: !4484, file: !142, line: 177, type: !4085)
!4487 = !DILocalVariable(name: "c", arg: 2, scope: !4484, file: !142, line: 177, type: !2240)
!4488 = !DILocation(line: 0, scope: !4484)
!4489 = !DILocation(line: 179, column: 9, scope: !4484)
!4490 = !DILocation(line: 179, column: 2, scope: !4484)
!4491 = distinct !DISubprogram(name: "sys_heap_stress", scope: !134, file: !134, line: 300, type: !4492, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4507)
!4492 = !DISubroutineType(types: !4493)
!4493 = !{null, !4494, !4497, !102, !120, !137, !102, !120, !103, !4500}
!4494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4495, size: 32)
!4495 = !DISubroutineType(types: !4496)
!4496 = !{!102, !102, !120}
!4497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4498, size: 32)
!4498 = !DISubroutineType(types: !4499)
!4499 = !{null, !102, !102}
!4500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4501, size: 32)
!4501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_result", file: !113, line: 62, size: 192, elements: !4502)
!4502 = !{!4503, !4504, !4505, !4506}
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "total_allocs", scope: !4501, file: !113, line: 63, baseType: !137, size: 32)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "successful_allocs", scope: !4501, file: !113, line: 64, baseType: !137, size: 32, offset: 32)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "total_frees", scope: !4501, file: !113, line: 65, baseType: !137, size: 32, offset: 64)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "accumulated_in_use_bytes", scope: !4501, file: !113, line: 66, baseType: !163, size: 64, offset: 128)
!4507 = !{!4508, !4509, !4510, !4511, !4512, !4513, !4514, !4515, !4516, !4517, !4534, !4536, !4541, !4542, !4544, !4545}
!4508 = !DILocalVariable(name: "alloc_fn", arg: 1, scope: !4491, file: !134, line: 300, type: !4494)
!4509 = !DILocalVariable(name: "free_fn", arg: 2, scope: !4491, file: !134, line: 301, type: !4497)
!4510 = !DILocalVariable(name: "arg", arg: 3, scope: !4491, file: !134, line: 302, type: !102)
!4511 = !DILocalVariable(name: "total_bytes", arg: 4, scope: !4491, file: !134, line: 302, type: !120)
!4512 = !DILocalVariable(name: "op_count", arg: 5, scope: !4491, file: !134, line: 303, type: !137)
!4513 = !DILocalVariable(name: "scratch_mem", arg: 6, scope: !4491, file: !134, line: 304, type: !102)
!4514 = !DILocalVariable(name: "scratch_bytes", arg: 7, scope: !4491, file: !134, line: 304, type: !120)
!4515 = !DILocalVariable(name: "target_percent", arg: 8, scope: !4491, file: !134, line: 305, type: !103)
!4516 = !DILocalVariable(name: "result", arg: 9, scope: !4491, file: !134, line: 306, type: !4500)
!4517 = !DILocalVariable(name: "sr", scope: !4491, file: !134, line: 308, type: !4518)
!4518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_rec", file: !134, line: 204, size: 288, elements: !4519)
!4519 = !{!4520, !4521, !4522, !4523, !4524, !4530, !4531, !4532, !4533}
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_fn", scope: !4518, file: !134, line: 205, baseType: !4494, size: 32)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "free_fn", scope: !4518, file: !134, line: 206, baseType: !4497, size: 32, offset: 32)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4518, file: !134, line: 207, baseType: !102, size: 32, offset: 64)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "total_bytes", scope: !4518, file: !134, line: 208, baseType: !120, size: 32, offset: 96)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4518, file: !134, line: 209, baseType: !4525, size: 32, offset: 128)
!4525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4526, size: 32)
!4526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_block", file: !134, line: 216, size: 64, elements: !4527)
!4527 = !{!4528, !4529}
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4526, file: !134, line: 217, baseType: !102, size: 32)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "sz", scope: !4526, file: !134, line: 218, baseType: !120, size: 32, offset: 32)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "nblocks", scope: !4518, file: !134, line: 210, baseType: !120, size: 32, offset: 160)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_alloced", scope: !4518, file: !134, line: 211, baseType: !120, size: 32, offset: 192)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_alloced", scope: !4518, file: !134, line: 212, baseType: !120, size: 32, offset: 224)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "target_percent", scope: !4518, file: !134, line: 213, baseType: !137, size: 32, offset: 256)
!4534 = !DILocalVariable(name: "i", scope: !4535, file: !134, line: 320, type: !137)
!4535 = distinct !DILexicalBlock(scope: !4491, file: !134, line: 320, column: 2)
!4536 = !DILocalVariable(name: "sz", scope: !4537, file: !134, line: 322, type: !120)
!4537 = distinct !DILexicalBlock(scope: !4538, file: !134, line: 321, column: 31)
!4538 = distinct !DILexicalBlock(scope: !4539, file: !134, line: 321, column: 7)
!4539 = distinct !DILexicalBlock(scope: !4540, file: !134, line: 320, column: 42)
!4540 = distinct !DILexicalBlock(scope: !4535, file: !134, line: 320, column: 2)
!4541 = !DILocalVariable(name: "p", scope: !4537, file: !134, line: 323, type: !102)
!4542 = !DILocalVariable(name: "b", scope: !4543, file: !134, line: 334, type: !103)
!4543 = distinct !DILexicalBlock(scope: !4538, file: !134, line: 333, column: 10)
!4544 = !DILocalVariable(name: "p", scope: !4543, file: !134, line: 335, type: !102)
!4545 = !DILocalVariable(name: "sz", scope: !4543, file: !134, line: 336, type: !120)
!4546 = !DILocation(line: 0, scope: !4491)
!4547 = !DILocation(line: 308, column: 2, scope: !4491)
!4548 = !DILocation(line: 308, column: 27, scope: !4491)
!4549 = !DILocation(line: 308, column: 32, scope: !4491)
!4550 = !DILocation(line: 314, column: 34, scope: !4491)
!4551 = !DILocation(line: 318, column: 12, scope: !4491)
!4552 = !DILocation(line: 0, scope: !4535)
!4553 = !DILocation(line: 320, column: 25, scope: !4540)
!4554 = !DILocation(line: 320, column: 2, scope: !4535)
!4555 = !DILocation(line: 346, column: 1, scope: !4491)
!4556 = !DILocation(line: 321, column: 7, scope: !4538)
!4557 = !DILocation(line: 321, column: 7, scope: !4539)
!4558 = !DILocation(line: 322, column: 16, scope: !4537)
!4559 = !DILocation(line: 0, scope: !4537)
!4560 = !DILocation(line: 323, column: 14, scope: !4537)
!4561 = !DILocation(line: 325, column: 24, scope: !4537)
!4562 = !DILocation(line: 326, column: 10, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4537, file: !134, line: 326, column: 8)
!4564 = !DILocation(line: 326, column: 8, scope: !4537)
!4565 = !DILocation(line: 327, column: 30, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4563, file: !134, line: 326, column: 19)
!4567 = !DILocation(line: 328, column: 34, scope: !4566)
!4568 = !DILocation(line: 328, column: 38, scope: !4566)
!4569 = !DILocation(line: 329, column: 34, scope: !4566)
!4570 = !DILocation(line: 329, column: 37, scope: !4566)
!4571 = !DILocation(line: 330, column: 22, scope: !4566)
!4572 = !DILocation(line: 331, column: 22, scope: !4566)
!4573 = !DILocation(line: 332, column: 4, scope: !4566)
!4574 = !DILocation(line: 334, column: 12, scope: !4543)
!4575 = !DILocation(line: 0, scope: !4543)
!4576 = !DILocation(line: 335, column: 27, scope: !4543)
!4577 = !DILocation(line: 336, column: 29, scope: !4543)
!4578 = !DILocation(line: 338, column: 23, scope: !4543)
!4579 = !DILocation(line: 339, column: 4, scope: !4543)
!4580 = !DILocation(line: 339, column: 47, scope: !4543)
!4581 = !DILocation(line: 339, column: 19, scope: !4543)
!4582 = !DILocation(line: 340, column: 21, scope: !4543)
!4583 = !DILocation(line: 341, column: 21, scope: !4543)
!4584 = !DILocation(line: 342, column: 4, scope: !4543)
!4585 = !DILocation(line: 344, column: 42, scope: !4539)
!4586 = !DILocation(line: 344, column: 39, scope: !4539)
!4587 = !DILocation(line: 344, column: 36, scope: !4539)
!4588 = !DILocation(line: 320, column: 38, scope: !4540)
!4589 = distinct !{!4589, !4554, !4590}
!4590 = !DILocation(line: 345, column: 2, scope: !4535)
!4591 = distinct !DISubprogram(name: "rand_alloc_choice", scope: !134, file: !134, line: 234, type: !4592, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4595)
!4592 = !DISubroutineType(types: !4593)
!4593 = !{!211, !4594}
!4594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4518, size: 32)
!4595 = !{!4596, !4597, !4601, !4602}
!4596 = !DILocalVariable(name: "sr", arg: 1, scope: !4591, file: !134, line: 234, type: !4594)
!4597 = !DILocalVariable(name: "full_pct", scope: !4598, file: !134, line: 259, type: !137)
!4598 = distinct !DILexicalBlock(scope: !4599, file: !134, line: 241, column: 9)
!4599 = distinct !DILexicalBlock(scope: !4600, file: !134, line: 239, column: 13)
!4600 = distinct !DILexicalBlock(scope: !4591, file: !134, line: 237, column: 6)
!4601 = !DILocalVariable(name: "target", scope: !4598, file: !134, line: 260, type: !137)
!4602 = !DILocalVariable(name: "free_chance", scope: !4598, file: !134, line: 261, type: !137)
!4603 = !DILocation(line: 0, scope: !4591)
!4604 = !DILocation(line: 237, column: 10, scope: !4600)
!4605 = !DILocation(line: 237, column: 25, scope: !4600)
!4606 = !DILocation(line: 237, column: 6, scope: !4591)
!4607 = !DILocation(line: 239, column: 39, scope: !4599)
!4608 = !DILocation(line: 239, column: 32, scope: !4599)
!4609 = !DILocation(line: 239, column: 13, scope: !4600)
!4610 = !DILocation(line: 259, column: 34, scope: !4598)
!4611 = !DILocation(line: 259, column: 28, scope: !4598)
!4612 = !DILocation(line: 259, column: 55, scope: !4598)
!4613 = !DILocation(line: 259, column: 49, scope: !4598)
!4614 = !DILocation(line: 0, scope: !4598)
!4615 = !DILocation(line: 260, column: 25, scope: !4598)
!4616 = !DILocation(line: 263, column: 16, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4598, file: !134, line: 263, column: 7)
!4618 = !DILocation(line: 263, column: 7, scope: !4598)
!4619 = !DILocation(line: 264, column: 42, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4617, file: !134, line: 263, column: 38)
!4621 = !DILocation(line: 264, column: 27, scope: !4620)
!4622 = !DILocation(line: 265, column: 3, scope: !4620)
!4623 = !DILocation(line: 267, column: 10, scope: !4598)
!4624 = !DILocation(line: 267, column: 19, scope: !4598)
!4625 = !DILocation(line: 0, scope: !4600)
!4626 = !DILocation(line: 269, column: 1, scope: !4591)
!4627 = distinct !DISubprogram(name: "rand_alloc_size", scope: !134, file: !134, line: 274, type: !4628, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4630)
!4628 = !DISubroutineType(types: !4629)
!4629 = !{!120, !4594}
!4630 = !{!4631, !4632}
!4631 = !DILocalVariable(name: "sr", arg: 1, scope: !4627, file: !134, line: 274, type: !4594)
!4632 = !DILocalVariable(name: "scale", scope: !4627, file: !134, line: 281, type: !103)
!4633 = !DILocation(line: 0, scope: !4627)
!4634 = !DILocation(line: 281, column: 32, scope: !4627)
!4635 = !DILocation(line: 281, column: 18, scope: !4627)
!4636 = !DILocation(line: 283, column: 9, scope: !4627)
!4637 = !DILocation(line: 283, column: 20, scope: !4627)
!4638 = !DILocation(line: 283, column: 18, scope: !4627)
!4639 = !DILocation(line: 283, column: 2, scope: !4627)
!4640 = distinct !DISubprogram(name: "rand_free_choice", scope: !134, file: !134, line: 287, type: !4628, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4641)
!4641 = !{!4642}
!4642 = !DILocalVariable(name: "sr", arg: 1, scope: !4640, file: !134, line: 287, type: !4594)
!4643 = !DILocation(line: 0, scope: !4640)
!4644 = !DILocation(line: 289, column: 9, scope: !4640)
!4645 = !DILocation(line: 289, column: 24, scope: !4640)
!4646 = !DILocation(line: 289, column: 18, scope: !4640)
!4647 = !DILocation(line: 289, column: 2, scope: !4640)
!4648 = !DILocation(line: 229, column: 10, scope: !133)
!4649 = !DILocation(line: 229, column: 16, scope: !133)
!4650 = !DILocation(line: 229, column: 40, scope: !133)
!4651 = !DILocation(line: 229, column: 8, scope: !133)
!4652 = !DILocation(line: 231, column: 26, scope: !133)
!4653 = !DILocation(line: 231, column: 9, scope: !133)
!4654 = !DILocation(line: 231, column: 2, scope: !133)
!4655 = distinct !DISubprogram(name: "heap_print_info", scope: !134, file: !134, line: 351, type: !4656, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4658)
!4656 = !DISubroutineType(types: !4657)
!4657 = !{null, !4085, !211}
!4658 = !{!4659, !4660, !4661, !4662, !4663, !4664, !4665, !4666, !4667, !4671, !4672, !4673, !4676}
!4659 = !DILocalVariable(name: "h", arg: 1, scope: !4655, file: !134, line: 351, type: !4085)
!4660 = !DILocalVariable(name: "dump_chunks", arg: 2, scope: !4655, file: !134, line: 351, type: !211)
!4661 = !DILocalVariable(name: "i", scope: !4655, file: !134, line: 353, type: !103)
!4662 = !DILocalVariable(name: "nb_buckets", scope: !4655, file: !134, line: 353, type: !103)
!4663 = !DILocalVariable(name: "free_bytes", scope: !4655, file: !134, line: 354, type: !120)
!4664 = !DILocalVariable(name: "allocated_bytes", scope: !4655, file: !134, line: 354, type: !120)
!4665 = !DILocalVariable(name: "total", scope: !4655, file: !134, line: 354, type: !120)
!4666 = !DILocalVariable(name: "overhead", scope: !4655, file: !134, line: 354, type: !120)
!4667 = !DILocalVariable(name: "first", scope: !4668, file: !134, line: 363, type: !2240)
!4668 = distinct !DILexicalBlock(scope: !4669, file: !134, line: 362, column: 35)
!4669 = distinct !DILexicalBlock(scope: !4670, file: !134, line: 362, column: 2)
!4670 = distinct !DILexicalBlock(scope: !4655, file: !134, line: 362, column: 2)
!4671 = !DILocalVariable(name: "largest", scope: !4668, file: !134, line: 364, type: !3357)
!4672 = !DILocalVariable(name: "count", scope: !4668, file: !134, line: 365, type: !103)
!4673 = !DILocalVariable(name: "curr", scope: !4674, file: !134, line: 368, type: !2240)
!4674 = distinct !DILexicalBlock(scope: !4675, file: !134, line: 367, column: 14)
!4675 = distinct !DILexicalBlock(scope: !4668, file: !134, line: 367, column: 7)
!4676 = !DILocalVariable(name: "c", scope: !4677, file: !134, line: 384, type: !2240)
!4677 = distinct !DILexicalBlock(scope: !4678, file: !134, line: 384, column: 3)
!4678 = distinct !DILexicalBlock(scope: !4679, file: !134, line: 382, column: 19)
!4679 = distinct !DILexicalBlock(scope: !4655, file: !134, line: 382, column: 6)
!4680 = !DILocation(line: 0, scope: !4655)
!4681 = !DILocation(line: 353, column: 39, scope: !4655)
!4682 = !DILocation(line: 353, column: 22, scope: !4655)
!4683 = !DILocation(line: 353, column: 50, scope: !4655)
!4684 = !DILocation(line: 354, column: 2, scope: !4655)
!4685 = !DILocation(line: 357, column: 9, scope: !4655)
!4686 = !DILocation(line: 356, column: 2, scope: !4655)
!4687 = !DILocation(line: 359, column: 2, scope: !4655)
!4688 = !DILocation(line: 362, column: 16, scope: !4669)
!4689 = !DILocation(line: 362, column: 2, scope: !4670)
!4690 = !DILocation(line: 363, column: 35, scope: !4668)
!4691 = !DILocation(line: 0, scope: !4668)
!4692 = !DILocation(line: 367, column: 7, scope: !4675)
!4693 = !DILocation(line: 367, column: 7, scope: !4668)
!4694 = !DILocation(line: 0, scope: !4674)
!4695 = !DILocation(line: 370, column: 10, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4674, file: !134, line: 369, column: 7)
!4697 = !DILocation(line: 371, column: 15, scope: !4696)
!4698 = !DILocation(line: 372, column: 12, scope: !4696)
!4699 = !DILocation(line: 373, column: 18, scope: !4674)
!4700 = !DILocation(line: 373, column: 4, scope: !4696)
!4701 = distinct !{!4701, !4702, !4703}
!4702 = !DILocation(line: 369, column: 4, scope: !4674)
!4703 = !DILocation(line: 373, column: 26, scope: !4674)
!4704 = !DILocation(line: 377, column: 23, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4706, file: !134, line: 375, column: 14)
!4706 = distinct !DILexicalBlock(scope: !4668, file: !134, line: 375, column: 7)
!4707 = !DILocation(line: 378, column: 20, scope: !4705)
!4708 = !DILocation(line: 376, column: 4, scope: !4705)
!4709 = !DILocation(line: 379, column: 3, scope: !4705)
!4710 = !DILocation(line: 362, column: 31, scope: !4669)
!4711 = distinct !{!4711, !4689, !4712}
!4712 = !DILocation(line: 380, column: 2, scope: !4670)
!4713 = !DILocation(line: 382, column: 6, scope: !4655)
!4714 = !DILocation(line: 383, column: 3, scope: !4678)
!4715 = !DILocation(line: 0, scope: !4677)
!4716 = !DILocation(line: 384, column: 8, scope: !4677)
!4717 = !DILocation(line: 387, column: 11, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4719, file: !134, line: 384, column: 50)
!4719 = distinct !DILexicalBlock(scope: !4677, file: !134, line: 384, column: 3)
!4720 = !DILocation(line: 390, column: 11, scope: !4718)
!4721 = !DILocation(line: 391, column: 11, scope: !4718)
!4722 = !DILocation(line: 392, column: 11, scope: !4718)
!4723 = !DILocation(line: 385, column: 4, scope: !4718)
!4724 = !DILocation(line: 393, column: 16, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4718, file: !134, line: 393, column: 8)
!4726 = !DILocation(line: 393, column: 10, scope: !4725)
!4727 = !DILocation(line: 393, column: 8, scope: !4718)
!4728 = !DILocation(line: 384, column: 31, scope: !4719)
!4729 = !DILocation(line: 384, column: 3, scope: !4719)
!4730 = distinct !{!4730, !4731, !4732}
!4731 = !DILocation(line: 384, column: 3, scope: !4677)
!4732 = !DILocation(line: 396, column: 3, scope: !4677)
!4733 = !DILocation(line: 399, column: 2, scope: !4655)
!4734 = !DILocation(line: 401, column: 13, scope: !4655)
!4735 = !DILocation(line: 401, column: 23, scope: !4655)
!4736 = !DILocation(line: 401, column: 36, scope: !4655)
!4737 = !DILocation(line: 402, column: 21, scope: !4655)
!4738 = !DILocation(line: 402, column: 34, scope: !4655)
!4739 = !DILocation(line: 402, column: 32, scope: !4655)
!4740 = !DILocation(line: 405, column: 15, scope: !4655)
!4741 = !DILocation(line: 405, column: 33, scope: !4655)
!4742 = !DILocation(line: 405, column: 26, scope: !4655)
!4743 = !DILocation(line: 405, column: 37, scope: !4655)
!4744 = !DILocation(line: 405, column: 45, scope: !4655)
!4745 = !DILocation(line: 403, column: 2, scope: !4655)
!4746 = !DILocation(line: 407, column: 1, scope: !4655)
!4747 = distinct !DISubprogram(name: "sys_heap_print_info", scope: !134, file: !134, line: 409, type: !4748, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4750)
!4748 = !DISubroutineType(types: !4749)
!4749 = !{null, !4081, !211}
!4750 = !{!4751, !4752}
!4751 = !DILocalVariable(name: "heap", arg: 1, scope: !4747, file: !134, line: 409, type: !4081)
!4752 = !DILocalVariable(name: "dump_chunks", arg: 2, scope: !4747, file: !134, line: 409, type: !211)
!4753 = !DILocation(line: 0, scope: !4747)
!4754 = !DILocation(line: 411, column: 24, scope: !4747)
!4755 = !DILocation(line: 411, column: 2, scope: !4747)
!4756 = !DILocation(line: 412, column: 1, scope: !4747)
!4757 = distinct !DISubprogram(name: "sys_heap_runtime_stats_reset_max", scope: !134, file: !134, line: 430, type: !4758, scopeLine: 431, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4760)
!4758 = !DISubroutineType(types: !4759)
!4759 = !{!103, !4081}
!4760 = !{!4761}
!4761 = !DILocalVariable(name: "heap", arg: 1, scope: !4757, file: !134, line: 430, type: !4081)
!4762 = !DILocation(line: 0, scope: !4757)
!4763 = !DILocation(line: 432, column: 11, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4757, file: !134, line: 432, column: 6)
!4765 = !DILocation(line: 432, column: 6, scope: !4757)
!4766 = !DILocation(line: 436, column: 42, scope: !4757)
!4767 = !DILocation(line: 436, column: 48, scope: !4757)
!4768 = !DILocation(line: 436, column: 14, scope: !4757)
!4769 = !DILocation(line: 436, column: 34, scope: !4757)
!4770 = !DILocation(line: 438, column: 2, scope: !4757)
!4771 = !DILocation(line: 439, column: 1, scope: !4757)
!4772 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2257, file: !2257, line: 1338, type: !4773, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2253, retainedNodes: !4781)
!4773 = !DISubroutineType(types: !4774)
!4774 = !{!103, !3024, !102, !199, !4775, !137}
!4775 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2990, line: 99, baseType: !4776)
!4776 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2990, line: 40, baseType: !4777)
!4777 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2257, baseType: !4778)
!4778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4779)
!4779 = !{!4780}
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4778, file: !2257, baseType: !102, size: 32)
!4781 = !{!4782, !4783, !4784, !4785, !4786, !4787, !4791, !4792, !4793, !4795, !4800, !4845, !4848, !4851, !4852, !4853, !4854, !4855, !4856, !4857, !4860, !4861, !4862, !4866, !4869, !4871, !4874, !4875, !4876, !4881, !4887, !4890, !4894, !4900, !4904, !4907, !4909, !4912}
!4782 = !DILocalVariable(name: "out", arg: 1, scope: !4772, file: !2257, line: 1338, type: !3024)
!4783 = !DILocalVariable(name: "ctx", arg: 2, scope: !4772, file: !2257, line: 1338, type: !102)
!4784 = !DILocalVariable(name: "fp", arg: 3, scope: !4772, file: !2257, line: 1338, type: !199)
!4785 = !DILocalVariable(name: "ap", arg: 4, scope: !4772, file: !2257, line: 1339, type: !4775)
!4786 = !DILocalVariable(name: "flags", arg: 5, scope: !4772, file: !2257, line: 1339, type: !137)
!4787 = !DILocalVariable(name: "buf", scope: !4772, file: !2257, line: 1341, type: !4788)
!4788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 176, elements: !4789)
!4789 = !{!4790}
!4790 = !DISubrange(count: 22)
!4791 = !DILocalVariable(name: "count", scope: !4772, file: !2257, line: 1342, type: !120)
!4792 = !DILocalVariable(name: "sint", scope: !4772, file: !2257, line: 1343, type: !2276)
!4793 = !DILocalVariable(name: "tagged_ap", scope: !4772, file: !2257, line: 1345, type: !4794)
!4794 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !211)
!4795 = !DILocalVariable(name: "rc", scope: !4796, file: !2257, line: 1377, type: !103)
!4796 = distinct !DILexicalBlock(scope: !4797, file: !2257, line: 1377, column: 4)
!4797 = distinct !DILexicalBlock(scope: !4798, file: !2257, line: 1376, column: 19)
!4798 = distinct !DILexicalBlock(scope: !4799, file: !2257, line: 1376, column: 7)
!4799 = distinct !DILexicalBlock(scope: !4772, file: !2257, line: 1375, column: 19)
!4800 = !DILocalVariable(name: "state", scope: !4799, file: !2257, line: 1395, type: !4801)
!4801 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4772, file: !2257, line: 1392, size: 192, elements: !4802)
!4802 = !{!4803, !4813}
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4801, file: !2257, line: 1393, baseType: !4804, size: 64)
!4804 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2257, line: 166, size: 64, elements: !4805)
!4805 = !{!4806, !4807, !4808, !4810, !4812}
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4804, file: !2257, line: 168, baseType: !2276, size: 64)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4804, file: !2257, line: 171, baseType: !2279, size: 64)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4804, file: !2257, line: 174, baseType: !4809, size: 64)
!4809 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4804, file: !2257, line: 177, baseType: !4811, size: 64)
!4811 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4804, file: !2257, line: 180, baseType: !102, size: 32)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4801, file: !2257, line: 1394, baseType: !4814, size: 96, offset: 64)
!4814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2257, line: 189, size: 96, elements: !4815)
!4815 = !{!4816, !4817, !4818, !4819, !4820, !4821, !4822, !4823, !4824, !4825, !4826, !4827, !4828, !4829, !4830, !4831, !4832, !4833, !4834, !4835, !4840}
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4814, file: !2257, line: 191, baseType: !211, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4814, file: !2257, line: 194, baseType: !211, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4814, file: !2257, line: 197, baseType: !211, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4814, file: !2257, line: 200, baseType: !211, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4814, file: !2257, line: 203, baseType: !211, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4814, file: !2257, line: 206, baseType: !211, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4814, file: !2257, line: 209, baseType: !211, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4814, file: !2257, line: 212, baseType: !211, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4814, file: !2257, line: 219, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4814, file: !2257, line: 222, baseType: !211, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4814, file: !2257, line: 229, baseType: !211, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4814, file: !2257, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4814, file: !2257, line: 238, baseType: !211, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4814, file: !2257, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4814, file: !2257, line: 244, baseType: !211, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4814, file: !2257, line: 247, baseType: !211, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4814, file: !2257, line: 252, baseType: !211, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4814, file: !2257, line: 257, baseType: !211, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4814, file: !2257, line: 260, baseType: !209, size: 8, offset: 24)
!4835 = !DIDerivedType(tag: DW_TAG_member, scope: !4814, file: !2257, line: 262, baseType: !4836, size: 32, offset: 32)
!4836 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4814, file: !2257, line: 262, size: 32, elements: !4837)
!4837 = !{!4838, !4839}
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4836, file: !2257, line: 267, baseType: !103, size: 32)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4836, file: !2257, line: 289, baseType: !103, size: 32)
!4840 = !DIDerivedType(tag: DW_TAG_member, scope: !4814, file: !2257, line: 292, baseType: !4841, size: 32, offset: 64)
!4841 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4814, file: !2257, line: 292, size: 32, elements: !4842)
!4842 = !{!4843, !4844}
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4841, file: !2257, line: 297, baseType: !103, size: 32)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4841, file: !2257, line: 306, baseType: !103, size: 32)
!4845 = !DILocalVariable(name: "conv", scope: !4799, file: !2257, line: 1400, type: !4846)
!4846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4847)
!4847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4814, size: 32)
!4848 = !DILocalVariable(name: "value", scope: !4799, file: !2257, line: 1401, type: !4849)
!4849 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4850)
!4850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4804, size: 32)
!4851 = !DILocalVariable(name: "sp", scope: !4799, file: !2257, line: 1402, type: !199)
!4852 = !DILocalVariable(name: "width", scope: !4799, file: !2257, line: 1403, type: !103)
!4853 = !DILocalVariable(name: "precision", scope: !4799, file: !2257, line: 1404, type: !103)
!4854 = !DILocalVariable(name: "bps", scope: !4799, file: !2257, line: 1405, type: !199)
!4855 = !DILocalVariable(name: "bpe", scope: !4799, file: !2257, line: 1406, type: !199)
!4856 = !DILocalVariable(name: "sign", scope: !4799, file: !2257, line: 1407, type: !109)
!4857 = !DILocalVariable(name: "arg", scope: !4858, file: !2257, line: 1432, type: !103)
!4858 = distinct !DILexicalBlock(scope: !4859, file: !2257, line: 1431, column: 24)
!4859 = distinct !DILexicalBlock(scope: !4799, file: !2257, line: 1431, column: 7)
!4860 = !DILocalVariable(name: "specifier_cat", scope: !4799, file: !2257, line: 1468, type: !2256)
!4861 = !DILocalVariable(name: "length_mod", scope: !4799, file: !2257, line: 1470, type: !2264)
!4862 = !DILocalVariable(name: "rc", scope: !4863, file: !2257, line: 1575, type: !103)
!4863 = distinct !DILexicalBlock(scope: !4864, file: !2257, line: 1575, column: 4)
!4864 = distinct !DILexicalBlock(scope: !4865, file: !2257, line: 1574, column: 43)
!4865 = distinct !DILexicalBlock(scope: !4799, file: !2257, line: 1574, column: 7)
!4866 = !DILocalVariable(name: "rc", scope: !4867, file: !2257, line: 1584, type: !103)
!4867 = distinct !DILexicalBlock(scope: !4868, file: !2257, line: 1584, column: 4)
!4868 = distinct !DILexicalBlock(scope: !4799, file: !2257, line: 1582, column: 28)
!4869 = !DILocalVariable(name: "len", scope: !4870, file: !2257, line: 1589, type: !120)
!4870 = distinct !DILexicalBlock(scope: !4868, file: !2257, line: 1586, column: 13)
!4871 = !DILocalVariable(name: "len", scope: !4872, file: !2257, line: 1641, type: !120)
!4872 = distinct !DILexicalBlock(scope: !4873, file: !2257, line: 1640, column: 24)
!4873 = distinct !DILexicalBlock(scope: !4868, file: !2257, line: 1640, column: 8)
!4874 = !DILocalVariable(name: "nj_len", scope: !4799, file: !2257, line: 1722, type: !120)
!4875 = !DILocalVariable(name: "pad_len", scope: !4799, file: !2257, line: 1723, type: !103)
!4876 = !DILocalVariable(name: "pad", scope: !4877, file: !2257, line: 1751, type: !109)
!4877 = distinct !DILexicalBlock(scope: !4878, file: !2257, line: 1750, column: 26)
!4878 = distinct !DILexicalBlock(scope: !4879, file: !2257, line: 1750, column: 8)
!4879 = distinct !DILexicalBlock(scope: !4880, file: !2257, line: 1747, column: 18)
!4880 = distinct !DILexicalBlock(scope: !4799, file: !2257, line: 1747, column: 7)
!4881 = !DILocalVariable(name: "rc", scope: !4882, file: !2257, line: 1758, type: !103)
!4882 = distinct !DILexicalBlock(scope: !4883, file: !2257, line: 1758, column: 7)
!4883 = distinct !DILexicalBlock(scope: !4884, file: !2257, line: 1757, column: 21)
!4884 = distinct !DILexicalBlock(scope: !4885, file: !2257, line: 1757, column: 10)
!4885 = distinct !DILexicalBlock(scope: !4886, file: !2257, line: 1756, column: 26)
!4886 = distinct !DILexicalBlock(scope: !4877, file: !2257, line: 1756, column: 9)
!4887 = !DILocalVariable(name: "rc", scope: !4888, file: !2257, line: 1765, type: !103)
!4888 = distinct !DILexicalBlock(scope: !4889, file: !2257, line: 1765, column: 6)
!4889 = distinct !DILexicalBlock(scope: !4877, file: !2257, line: 1764, column: 25)
!4890 = !DILocalVariable(name: "rc", scope: !4891, file: !2257, line: 1774, type: !103)
!4891 = distinct !DILexicalBlock(scope: !4892, file: !2257, line: 1774, column: 4)
!4892 = distinct !DILexicalBlock(scope: !4893, file: !2257, line: 1773, column: 18)
!4893 = distinct !DILexicalBlock(scope: !4799, file: !2257, line: 1773, column: 7)
!4894 = !DILocalVariable(name: "rc", scope: !4895, file: !2257, line: 1819, type: !103)
!4895 = distinct !DILexicalBlock(scope: !4896, file: !2257, line: 1819, column: 5)
!4896 = distinct !DILexicalBlock(scope: !4897, file: !2257, line: 1818, column: 44)
!4897 = distinct !DILexicalBlock(scope: !4898, file: !2257, line: 1818, column: 8)
!4898 = distinct !DILexicalBlock(scope: !4899, file: !2257, line: 1817, column: 10)
!4899 = distinct !DILexicalBlock(scope: !4799, file: !2257, line: 1777, column: 7)
!4900 = !DILocalVariable(name: "rc", scope: !4901, file: !2257, line: 1823, type: !103)
!4901 = distinct !DILexicalBlock(scope: !4902, file: !2257, line: 1823, column: 5)
!4902 = distinct !DILexicalBlock(scope: !4903, file: !2257, line: 1822, column: 26)
!4903 = distinct !DILexicalBlock(scope: !4898, file: !2257, line: 1822, column: 8)
!4904 = !DILocalVariable(name: "rc", scope: !4905, file: !2257, line: 1828, type: !103)
!4905 = distinct !DILexicalBlock(scope: !4906, file: !2257, line: 1828, column: 5)
!4906 = distinct !DILexicalBlock(scope: !4898, file: !2257, line: 1827, column: 26)
!4907 = !DILocalVariable(name: "rc", scope: !4908, file: !2257, line: 1831, type: !103)
!4908 = distinct !DILexicalBlock(scope: !4898, file: !2257, line: 1831, column: 4)
!4909 = !DILocalVariable(name: "rc", scope: !4910, file: !2257, line: 1836, type: !103)
!4910 = distinct !DILexicalBlock(scope: !4911, file: !2257, line: 1836, column: 4)
!4911 = distinct !DILexicalBlock(scope: !4799, file: !2257, line: 1835, column: 21)
!4912 = !DILabel(scope: !4868, name: "prec_int_pad0", file: !2257, line: 1634)
!4913 = !DILocation(line: 0, scope: !4772)
!4914 = !DILocation(line: 1341, column: 2, scope: !4772)
!4915 = !DILocation(line: 1341, column: 7, scope: !4772)
!4916 = !DILocation(line: 1375, column: 2, scope: !4772)
!4917 = !DILocation(line: 1342, column: 9, scope: !4772)
!4918 = !DILocation(line: 1375, column: 9, scope: !4772)
!4919 = !DILocation(line: 1377, column: 4, scope: !4796)
!4920 = !DILocation(line: 0, scope: !4796)
!4921 = !DILocation(line: 1377, column: 4, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4796, file: !2257, line: 1377, column: 4)
!4923 = distinct !{!4923, !4916, !4924}
!4924 = !DILocation(line: 1839, column: 2, scope: !4772)
!4925 = !DILocation(line: 1392, column: 3, scope: !4799)
!4926 = !DILocation(line: 1395, column: 5, scope: !4799)
!4927 = !DILocation(line: 0, scope: !4799)
!4928 = !DILocation(line: 1409, column: 8, scope: !4799)
!4929 = !DILocation(line: 1414, column: 13, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4799, file: !2257, line: 1414, column: 7)
!4931 = !DILocation(line: 1414, column: 7, scope: !4799)
!4932 = !DILocation(line: 1415, column: 12, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4930, file: !2257, line: 1414, column: 25)
!4934 = !DILocation(line: 1417, column: 14, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4933, file: !2257, line: 1417, column: 8)
!4936 = !DILocation(line: 1417, column: 8, scope: !4933)
!4937 = !DILocation(line: 1418, column: 21, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4935, file: !2257, line: 1417, column: 19)
!4939 = !DILocation(line: 1419, column: 13, scope: !4938)
!4940 = !DILocation(line: 1420, column: 4, scope: !4938)
!4941 = !DILocation(line: 1421, column: 20, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4930, file: !2257, line: 1421, column: 14)
!4943 = !DILocation(line: 1421, column: 14, scope: !4930)
!4944 = !DILocation(line: 1431, column: 13, scope: !4859)
!4945 = !DILocation(line: 1431, column: 7, scope: !4799)
!4946 = !DILocation(line: 1432, column: 14, scope: !4858)
!4947 = !DILocation(line: 0, scope: !4858)
!4948 = !DILocation(line: 1434, column: 12, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4858, file: !2257, line: 1434, column: 8)
!4950 = !DILocation(line: 1434, column: 8, scope: !4858)
!4951 = !DILocation(line: 1435, column: 24, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4949, file: !2257, line: 1434, column: 17)
!4953 = !DILocation(line: 1436, column: 4, scope: !4952)
!4954 = !DILocation(line: 1439, column: 20, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4859, file: !2257, line: 1439, column: 14)
!4956 = !DILocation(line: 1439, column: 14, scope: !4859)
!4957 = !DILocation(line: 1469, column: 37, scope: !4799)
!4958 = !DILocation(line: 1448, column: 20, scope: !4799)
!4959 = !DILocation(line: 1449, column: 22, scope: !4799)
!4960 = !DILocation(line: 1471, column: 34, scope: !4799)
!4961 = !DILocation(line: 1478, column: 7, scope: !4799)
!4962 = !DILocation(line: 1479, column: 4, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4964, file: !2257, line: 1478, column: 40)
!4964 = distinct !DILexicalBlock(scope: !4799, file: !2257, line: 1478, column: 7)
!4965 = !DILocation(line: 1484, column: 19, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4963, file: !2257, line: 1479, column: 24)
!4967 = !DILocation(line: 1484, column: 17, scope: !4966)
!4968 = !DILocation(line: 1485, column: 5, scope: !4966)
!4969 = !DILocation(line: 1492, column: 20, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4971, file: !2257, line: 1491, column: 12)
!4971 = distinct !DILexicalBlock(scope: !4966, file: !2257, line: 1487, column: 9)
!4972 = !DILocation(line: 1492, column: 18, scope: !4970)
!4973 = !DILocation(line: 1494, column: 5, scope: !4966)
!4974 = !DILocation(line: 1497, column: 23, scope: !4966)
!4975 = !DILocation(line: 1496, column: 17, scope: !4966)
!4976 = !DILocation(line: 1498, column: 5, scope: !4966)
!4977 = !DILocation(line: 1501, column: 23, scope: !4966)
!4978 = !DILocation(line: 1500, column: 17, scope: !4966)
!4979 = !DILocation(line: 1502, column: 5, scope: !4966)
!4980 = !DILocation(line: 1513, column: 23, scope: !4966)
!4981 = !DILocation(line: 1513, column: 6, scope: !4966)
!4982 = !DILocation(line: 1512, column: 17, scope: !4966)
!4983 = !DILocation(line: 1514, column: 5, scope: !4966)
!4984 = !DILocation(line: 0, scope: !4966)
!4985 = !DILocation(line: 1516, column: 8, scope: !4963)
!4986 = !DILocation(line: 1517, column: 19, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4988, file: !2257, line: 1516, column: 33)
!4988 = distinct !DILexicalBlock(scope: !4963, file: !2257, line: 1516, column: 8)
!4989 = !DILocation(line: 1517, column: 17, scope: !4987)
!4990 = !DILocation(line: 1518, column: 4, scope: !4987)
!4991 = !DILocation(line: 1519, column: 19, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4993, file: !2257, line: 1518, column: 39)
!4993 = distinct !DILexicalBlock(scope: !4988, file: !2257, line: 1518, column: 15)
!4994 = !DILocation(line: 1519, column: 17, scope: !4992)
!4995 = !DILocation(line: 1520, column: 4, scope: !4992)
!4996 = !DILocation(line: 1522, column: 4, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4998, file: !2257, line: 1521, column: 47)
!4998 = distinct !DILexicalBlock(scope: !4964, file: !2257, line: 1521, column: 14)
!4999 = !DILocation(line: 1527, column: 19, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4997, file: !2257, line: 1522, column: 24)
!5001 = !DILocation(line: 1527, column: 17, scope: !5000)
!5002 = !DILocation(line: 1528, column: 5, scope: !5000)
!5003 = !DILocation(line: 0, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !5000, file: !2257, line: 1530, column: 9)
!5005 = !DILocation(line: 1540, column: 23, scope: !5000)
!5006 = !DILocation(line: 1539, column: 17, scope: !5000)
!5007 = !DILocation(line: 1542, column: 5, scope: !5000)
!5008 = !DILocation(line: 1545, column: 23, scope: !5000)
!5009 = !DILocation(line: 1544, column: 17, scope: !5000)
!5010 = !DILocation(line: 1547, column: 5, scope: !5000)
!5011 = !DILocation(line: 1551, column: 23, scope: !5000)
!5012 = !DILocation(line: 1551, column: 6, scope: !5000)
!5013 = !DILocation(line: 1550, column: 17, scope: !5000)
!5014 = !DILocation(line: 1552, column: 5, scope: !5000)
!5015 = !DILocation(line: 0, scope: !5000)
!5016 = !DILocation(line: 1554, column: 8, scope: !4997)
!5017 = !DILocation(line: 1555, column: 19, scope: !5018)
!5018 = distinct !DILexicalBlock(scope: !5019, file: !2257, line: 1554, column: 33)
!5019 = distinct !DILexicalBlock(scope: !4997, file: !2257, line: 1554, column: 8)
!5020 = !DILocation(line: 1555, column: 17, scope: !5018)
!5021 = !DILocation(line: 1556, column: 4, scope: !5018)
!5022 = !DILocation(line: 1557, column: 19, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5024, file: !2257, line: 1556, column: 39)
!5024 = distinct !DILexicalBlock(scope: !5019, file: !2257, line: 1556, column: 15)
!5025 = !DILocation(line: 1557, column: 17, scope: !5023)
!5026 = !DILocation(line: 1558, column: 4, scope: !5023)
!5027 = !DILocation(line: 0, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5029, file: !2257, line: 1560, column: 8)
!5029 = distinct !DILexicalBlock(scope: !5030, file: !2257, line: 1559, column: 45)
!5030 = distinct !DILexicalBlock(scope: !4998, file: !2257, line: 1559, column: 14)
!5031 = !DILocation(line: 1566, column: 17, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5033, file: !2257, line: 1565, column: 46)
!5033 = distinct !DILexicalBlock(scope: !5030, file: !2257, line: 1565, column: 14)
!5034 = !DILocation(line: 1566, column: 15, scope: !5032)
!5035 = !DILocation(line: 1567, column: 3, scope: !5032)
!5036 = !DILocation(line: 1574, column: 21, scope: !4865)
!5037 = !DILocation(line: 1575, column: 4, scope: !4863)
!5038 = !DILocation(line: 0, scope: !4863)
!5039 = !DILocation(line: 1575, column: 4, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !4863, file: !2257, line: 1575, column: 4)
!5041 = !DILocation(line: 1582, column: 17, scope: !4799)
!5042 = !DILocation(line: 1582, column: 3, scope: !4799)
!5043 = !DILocation(line: 1584, column: 4, scope: !4867)
!5044 = !DILocation(line: 0, scope: !4867)
!5045 = !DILocation(line: 1584, column: 4, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !4867, file: !2257, line: 1584, column: 4)
!5047 = !DILocation(line: 1587, column: 31, scope: !4870)
!5048 = !DILocation(line: 1591, column: 18, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !4870, file: !2257, line: 1591, column: 8)
!5050 = !DILocation(line: 1591, column: 8, scope: !4870)
!5051 = !DILocation(line: 1592, column: 11, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5049, file: !2257, line: 1591, column: 24)
!5053 = !DILocation(line: 0, scope: !4870)
!5054 = !DILocation(line: 1593, column: 4, scope: !5052)
!5055 = !DILocation(line: 1594, column: 11, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5049, file: !2257, line: 1593, column: 11)
!5057 = !DILocation(line: 1604, column: 51, scope: !4868)
!5058 = !DILocation(line: 1604, column: 13, scope: !4868)
!5059 = !DILocation(line: 1604, column: 11, scope: !4868)
!5060 = !DILocation(line: 1606, column: 4, scope: !4868)
!5061 = !DILocation(line: 1609, column: 14, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !4868, file: !2257, line: 1609, column: 8)
!5063 = !DILocation(line: 1609, column: 8, scope: !4868)
!5064 = !DILocation(line: 1619, column: 18, scope: !4868)
!5065 = !DILocation(line: 1620, column: 13, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !4868, file: !2257, line: 1620, column: 8)
!5067 = !DILocation(line: 1620, column: 8, scope: !4868)
!5068 = !DILocation(line: 1622, column: 36, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !5066, file: !2257, line: 1620, column: 18)
!5070 = !DILocation(line: 1622, column: 17, scope: !5069)
!5071 = !DILocation(line: 1623, column: 4, scope: !5069)
!5072 = !DILocation(line: 1632, column: 29, scope: !4868)
!5073 = !DILocation(line: 1632, column: 10, scope: !4868)
!5074 = !DILocation(line: 1632, column: 4, scope: !4868)
!5075 = !DILocation(line: 1407, column: 8, scope: !4799)
!5076 = !DILocation(line: 0, scope: !4868)
!5077 = !DILocation(line: 1634, column: 3, scope: !4868)
!5078 = !DILocation(line: 1640, column: 18, scope: !4873)
!5079 = !DILocation(line: 1640, column: 8, scope: !4868)
!5080 = !DILocation(line: 1729, column: 13, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !4799, file: !2257, line: 1729, column: 7)
!5082 = !DILocation(line: 1641, column: 22, scope: !4872)
!5083 = !DILocation(line: 0, scope: !4872)
!5084 = !DILocation(line: 1646, column: 21, scope: !4872)
!5085 = !DILocation(line: 1649, column: 13, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !4872, file: !2257, line: 1649, column: 9)
!5087 = !DILocation(line: 1649, column: 9, scope: !4872)
!5088 = !DILocation(line: 1650, column: 35, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5086, file: !2257, line: 1649, column: 34)
!5090 = !DILocation(line: 1650, column: 23, scope: !5089)
!5091 = !DILocation(line: 1651, column: 5, scope: !5089)
!5092 = !DILocation(line: 1660, column: 15, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !4868, file: !2257, line: 1660, column: 8)
!5094 = !DILocation(line: 1660, column: 19, scope: !5093)
!5095 = !DILocation(line: 1660, column: 8, scope: !4868)
!5096 = !DILocation(line: 1661, column: 23, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5093, file: !2257, line: 1660, column: 28)
!5098 = !DILocation(line: 1661, column: 11, scope: !5097)
!5099 = !DILocation(line: 1665, column: 22, scope: !5097)
!5100 = !DILocation(line: 1666, column: 21, scope: !5097)
!5101 = !DILocation(line: 1668, column: 5, scope: !5097)
!5102 = !DILocation(line: 1677, column: 30, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5104, file: !2257, line: 1676, column: 49)
!5104 = distinct !DILexicalBlock(scope: !4868, file: !2257, line: 1676, column: 8)
!5105 = !DILocation(line: 1677, column: 5, scope: !5103)
!5106 = !DILocation(line: 1680, column: 4, scope: !4868)
!5107 = !DILocation(line: 0, scope: !5049)
!5108 = !DILocation(line: 1597, column: 14, scope: !4870)
!5109 = !DILocation(line: 1699, column: 11, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !4799, file: !2257, line: 1699, column: 7)
!5111 = !DILocation(line: 1699, column: 7, scope: !4799)
!5112 = !DILocation(line: 1725, column: 7, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !4799, file: !2257, line: 1725, column: 7)
!5114 = !DILocation(line: 1725, column: 12, scope: !5113)
!5115 = !DILocation(line: 1747, column: 13, scope: !4880)
!5116 = !DILocation(line: 1747, column: 7, scope: !4799)
!5117 = !DILocation(line: 1722, column: 24, scope: !4799)
!5118 = !DILocation(line: 1725, column: 7, scope: !4799)
!5119 = !DILocation(line: 1729, column: 7, scope: !4799)
!5120 = !DILocation(line: 1736, column: 13, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !4799, file: !2257, line: 1736, column: 7)
!5122 = !DILocation(line: 1735, column: 19, scope: !4799)
!5123 = !DILocation(line: 1736, column: 7, scope: !4799)
!5124 = !DILocation(line: 1748, column: 10, scope: !4879)
!5125 = !DILocation(line: 1750, column: 15, scope: !4878)
!5126 = !DILocation(line: 1750, column: 8, scope: !4879)
!5127 = !DILocation(line: 0, scope: !4877)
!5128 = !DILocation(line: 1756, column: 15, scope: !4886)
!5129 = !DILocation(line: 1756, column: 9, scope: !4877)
!5130 = !DILocation(line: 1758, column: 7, scope: !4882)
!5131 = !DILocation(line: 0, scope: !4882)
!5132 = !DILocation(line: 1758, column: 7, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !4882, file: !2257, line: 1758, column: 7)
!5134 = !DILocation(line: 1764, column: 5, scope: !4877)
!5135 = !DILocation(line: 0, scope: !4879)
!5136 = !DILocation(line: 1764, column: 20, scope: !4877)
!5137 = !DILocation(line: 1764, column: 17, scope: !4877)
!5138 = !DILocation(line: 1765, column: 6, scope: !4888)
!5139 = !DILocation(line: 0, scope: !4888)
!5140 = !DILocation(line: 1765, column: 6, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !4888, file: !2257, line: 1765, column: 6)
!5142 = distinct !{!5142, !5134, !5143}
!5143 = !DILocation(line: 1766, column: 5, scope: !4877)
!5144 = !DILocation(line: 1773, column: 12, scope: !4893)
!5145 = !DILocation(line: 1773, column: 7, scope: !4799)
!5146 = !DILocation(line: 1773, column: 7, scope: !4893)
!5147 = !DILocation(line: 1774, column: 4, scope: !4891)
!5148 = !DILocation(line: 0, scope: !4891)
!5149 = !DILocation(line: 1774, column: 4, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !4891, file: !2257, line: 1774, column: 4)
!5151 = !DILocation(line: 1818, column: 8, scope: !4897)
!5152 = !DILocation(line: 1818, column: 27, scope: !4897)
!5153 = !DILocation(line: 1818, column: 25, scope: !4897)
!5154 = !DILocation(line: 1818, column: 8, scope: !4898)
!5155 = !DILocation(line: 1819, column: 5, scope: !4895)
!5156 = !DILocation(line: 0, scope: !4895)
!5157 = !DILocation(line: 1819, column: 5, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !4895, file: !2257, line: 1819, column: 5)
!5159 = !DILocation(line: 1822, column: 14, scope: !4903)
!5160 = !DILocation(line: 1822, column: 8, scope: !4898)
!5161 = !DILocation(line: 1823, column: 5, scope: !4901)
!5162 = !DILocation(line: 0, scope: !4901)
!5163 = !DILocation(line: 1823, column: 5, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !4901, file: !2257, line: 1823, column: 5)
!5165 = !DILocation(line: 1826, column: 20, scope: !4898)
!5166 = !DILocation(line: 1827, column: 4, scope: !4898)
!5167 = !DILocation(line: 0, scope: !4898)
!5168 = !DILocation(line: 1827, column: 21, scope: !4898)
!5169 = !DILocation(line: 1827, column: 18, scope: !4898)
!5170 = !DILocation(line: 1828, column: 5, scope: !4905)
!5171 = !DILocation(line: 0, scope: !4905)
!5172 = !DILocation(line: 1828, column: 5, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !4905, file: !2257, line: 1828, column: 5)
!5174 = distinct !{!5174, !5166, !5175}
!5175 = !DILocation(line: 1829, column: 4, scope: !4898)
!5176 = !DILocation(line: 1831, column: 4, scope: !4908)
!5177 = !DILocation(line: 0, scope: !4908)
!5178 = !DILocation(line: 1831, column: 4, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !4908, file: !2257, line: 1831, column: 4)
!5180 = !DILocation(line: 1835, column: 16, scope: !4799)
!5181 = !DILocation(line: 1835, column: 3, scope: !4799)
!5182 = !DILocation(line: 1836, column: 4, scope: !4910)
!5183 = !DILocation(line: 0, scope: !4910)
!5184 = !DILocation(line: 1836, column: 4, scope: !5185)
!5185 = distinct !DILexicalBlock(scope: !4910, file: !2257, line: 1836, column: 4)
!5186 = !DILocation(line: 1837, column: 4, scope: !4911)
!5187 = distinct !{!5187, !5181, !5188}
!5188 = !DILocation(line: 1838, column: 3, scope: !4799)
!5189 = !DILocation(line: 1844, column: 1, scope: !4772)
!5190 = distinct !DISubprogram(name: "extract_conversion", scope: !2257, file: !2257, line: 642, type: !5191, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2253, retainedNodes: !5193)
!5191 = !DISubroutineType(types: !5192)
!5192 = !{!199, !4847, !199}
!5193 = !{!5194, !5195}
!5194 = !DILocalVariable(name: "conv", arg: 1, scope: !5190, file: !2257, line: 642, type: !4847)
!5195 = !DILocalVariable(name: "sp", arg: 2, scope: !5190, file: !2257, line: 643, type: !199)
!5196 = !DILocation(line: 0, scope: !5190)
!5197 = !DILocation(line: 645, column: 10, scope: !5190)
!5198 = !DILocation(line: 653, column: 2, scope: !5190)
!5199 = !DILocation(line: 654, column: 6, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5190, file: !2257, line: 654, column: 6)
!5201 = !DILocation(line: 654, column: 10, scope: !5200)
!5202 = !DILocation(line: 654, column: 6, scope: !5190)
!5203 = !DILocation(line: 655, column: 24, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5200, file: !2257, line: 654, column: 18)
!5205 = !DILocation(line: 655, column: 19, scope: !5204)
!5206 = !DILocation(line: 656, column: 3, scope: !5204)
!5207 = !DILocation(line: 659, column: 7, scope: !5190)
!5208 = !DILocation(line: 660, column: 7, scope: !5190)
!5209 = !DILocation(line: 661, column: 7, scope: !5190)
!5210 = !DILocation(line: 662, column: 7, scope: !5190)
!5211 = !DILocation(line: 663, column: 7, scope: !5190)
!5212 = !DILocation(line: 665, column: 2, scope: !5190)
!5213 = !DILocation(line: 666, column: 1, scope: !5190)
!5214 = distinct !DISubprogram(name: "outs", scope: !2257, file: !2257, line: 1319, type: !5215, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2253, retainedNodes: !5217)
!5215 = !DISubroutineType(types: !5216)
!5216 = !{!103, !3024, !102, !199, !199}
!5217 = !{!5218, !5219, !5220, !5221, !5222, !5223}
!5218 = !DILocalVariable(name: "out", arg: 1, scope: !5214, file: !2257, line: 1319, type: !3024)
!5219 = !DILocalVariable(name: "ctx", arg: 2, scope: !5214, file: !2257, line: 1320, type: !102)
!5220 = !DILocalVariable(name: "sp", arg: 3, scope: !5214, file: !2257, line: 1321, type: !199)
!5221 = !DILocalVariable(name: "ep", arg: 4, scope: !5214, file: !2257, line: 1322, type: !199)
!5222 = !DILocalVariable(name: "count", scope: !5214, file: !2257, line: 1324, type: !120)
!5223 = !DILocalVariable(name: "rc", scope: !5224, file: !2257, line: 1327, type: !103)
!5224 = distinct !DILexicalBlock(scope: !5214, file: !2257, line: 1326, column: 45)
!5225 = !DILocation(line: 0, scope: !5214)
!5226 = !DILocation(line: 1326, column: 2, scope: !5214)
!5227 = !DILocation(line: 1324, column: 9, scope: !5214)
!5228 = !DILocation(line: 1326, column: 13, scope: !5214)
!5229 = !DILocation(line: 1326, column: 19, scope: !5214)
!5230 = !DILocation(line: 1327, column: 21, scope: !5224)
!5231 = !DILocation(line: 1326, column: 36, scope: !5214)
!5232 = !DILocation(line: 1326, column: 39, scope: !5214)
!5233 = !DILocation(line: 1327, column: 24, scope: !5224)
!5234 = !DILocation(line: 1327, column: 16, scope: !5224)
!5235 = !DILocation(line: 1327, column: 12, scope: !5224)
!5236 = !DILocation(line: 0, scope: !5224)
!5237 = !DILocation(line: 1329, column: 10, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5224, file: !2257, line: 1329, column: 7)
!5239 = !DILocation(line: 1329, column: 7, scope: !5224)
!5240 = distinct !{!5240, !5226, !5241}
!5241 = !DILocation(line: 1333, column: 2, scope: !5214)
!5242 = !DILocation(line: 1336, column: 1, scope: !5214)
!5243 = distinct !DISubprogram(name: "encode_uint", scope: !2257, file: !2257, line: 788, type: !5244, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2253, retainedNodes: !5246)
!5244 = !DISubroutineType(types: !5245)
!5245 = !{!1022, !2279, !4847, !1022, !199}
!5246 = !{!5247, !5248, !5249, !5250, !5251, !5252, !5254, !5255}
!5247 = !DILocalVariable(name: "value", arg: 1, scope: !5243, file: !2257, line: 788, type: !2279)
!5248 = !DILocalVariable(name: "conv", arg: 2, scope: !5243, file: !2257, line: 789, type: !4847)
!5249 = !DILocalVariable(name: "bps", arg: 3, scope: !5243, file: !2257, line: 790, type: !1022)
!5250 = !DILocalVariable(name: "bpe", arg: 4, scope: !5243, file: !2257, line: 791, type: !199)
!5251 = !DILocalVariable(name: "upcase", scope: !5243, file: !2257, line: 793, type: !211)
!5252 = !DILocalVariable(name: "radix", scope: !5243, file: !2257, line: 794, type: !5253)
!5253 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5254 = !DILocalVariable(name: "bp", scope: !5243, file: !2257, line: 795, type: !1022)
!5255 = !DILocalVariable(name: "lsv", scope: !5256, file: !2257, line: 798, type: !32)
!5256 = distinct !DILexicalBlock(scope: !5243, file: !2257, line: 797, column: 5)
!5257 = !DILocation(line: 0, scope: !5243)
!5258 = !DILocation(line: 793, column: 35, scope: !5243)
!5259 = !DILocation(line: 793, column: 24, scope: !5243)
!5260 = !DILocation(line: 793, column: 16, scope: !5243)
!5261 = !DILocation(line: 794, column: 29, scope: !5243)
!5262 = !DILocation(line: 795, column: 24, scope: !5243)
!5263 = !DILocation(line: 795, column: 17, scope: !5243)
!5264 = !DILocation(line: 797, column: 2, scope: !5243)
!5265 = !DILocation(line: 802, column: 9, scope: !5256)
!5266 = !DILocation(line: 798, column: 22, scope: !5256)
!5267 = !DILocation(line: 0, scope: !5256)
!5268 = !DILocation(line: 800, column: 16, scope: !5256)
!5269 = !DILocation(line: 800, column: 11, scope: !5256)
!5270 = !DILocation(line: 800, column: 4, scope: !5256)
!5271 = !DILocation(line: 800, column: 9, scope: !5256)
!5272 = !DILocation(line: 803, column: 18, scope: !5243)
!5273 = !DILocation(line: 803, column: 24, scope: !5243)
!5274 = !DILocation(line: 803, column: 2, scope: !5256)
!5275 = distinct !{!5275, !5264, !5276}
!5276 = !DILocation(line: 803, column: 37, scope: !5243)
!5277 = !DILocation(line: 808, column: 12, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5243, file: !2257, line: 808, column: 6)
!5279 = !DILocation(line: 808, column: 6, scope: !5243)
!5280 = !DILocation(line: 809, column: 7, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5278, file: !2257, line: 808, column: 23)
!5282 = !DILocation(line: 813, column: 3, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5284, file: !2257, line: 811, column: 27)
!5284 = distinct !DILexicalBlock(scope: !5285, file: !2257, line: 811, column: 14)
!5285 = distinct !DILexicalBlock(scope: !5281, file: !2257, line: 809, column: 7)
!5286 = !DILocation(line: 0, scope: !5285)
!5287 = !DILocation(line: 818, column: 2, scope: !5243)
!5288 = distinct !DISubprogram(name: "store_count", scope: !2257, file: !2257, line: 1280, type: !5289, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2253, retainedNodes: !5293)
!5289 = !DISubroutineType(types: !5290)
!5290 = !{null, !5291, !102, !103}
!5291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5292, size: 32)
!5292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4814)
!5293 = !{!5294, !5295, !5296}
!5294 = !DILocalVariable(name: "conv", arg: 1, scope: !5288, file: !2257, line: 1280, type: !5291)
!5295 = !DILocalVariable(name: "dp", arg: 2, scope: !5288, file: !2257, line: 1281, type: !102)
!5296 = !DILocalVariable(name: "count", arg: 3, scope: !5288, file: !2257, line: 1282, type: !103)
!5297 = !DILocation(line: 0, scope: !5288)
!5298 = !DILocation(line: 1284, column: 38, scope: !5288)
!5299 = !DILocation(line: 1284, column: 2, scope: !5288)
!5300 = !DILocation(line: 1286, column: 4, scope: !5301)
!5301 = distinct !DILexicalBlock(scope: !5288, file: !2257, line: 1284, column: 50)
!5302 = !DILocation(line: 1286, column: 14, scope: !5301)
!5303 = !DILocation(line: 1287, column: 3, scope: !5301)
!5304 = !DILocation(line: 1289, column: 24, scope: !5301)
!5305 = !DILocation(line: 1289, column: 22, scope: !5301)
!5306 = !DILocation(line: 1290, column: 3, scope: !5301)
!5307 = !DILocation(line: 1292, column: 18, scope: !5301)
!5308 = !DILocation(line: 1292, column: 4, scope: !5301)
!5309 = !DILocation(line: 1292, column: 16, scope: !5301)
!5310 = !DILocation(line: 1293, column: 3, scope: !5301)
!5311 = !DILocation(line: 1295, column: 4, scope: !5301)
!5312 = !DILocation(line: 1295, column: 15, scope: !5301)
!5313 = !DILocation(line: 1296, column: 3, scope: !5301)
!5314 = !DILocation(line: 1298, column: 22, scope: !5301)
!5315 = !DILocation(line: 1298, column: 4, scope: !5301)
!5316 = !DILocation(line: 1298, column: 20, scope: !5301)
!5317 = !DILocation(line: 1299, column: 3, scope: !5301)
!5318 = !DILocation(line: 1301, column: 21, scope: !5301)
!5319 = !DILocation(line: 1301, column: 4, scope: !5301)
!5320 = !DILocation(line: 1301, column: 19, scope: !5301)
!5321 = !DILocation(line: 1302, column: 3, scope: !5301)
!5322 = !DILocation(line: 1304, column: 4, scope: !5301)
!5323 = !DILocation(line: 1304, column: 17, scope: !5301)
!5324 = !DILocation(line: 1305, column: 3, scope: !5301)
!5325 = !DILocation(line: 1307, column: 4, scope: !5301)
!5326 = !DILocation(line: 1307, column: 20, scope: !5301)
!5327 = !DILocation(line: 1308, column: 3, scope: !5301)
!5328 = !DILocation(line: 1316, column: 1, scope: !5288)
!5329 = distinct !DISubprogram(name: "isupper", scope: !5330, file: !5330, line: 16, type: !129, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2253, retainedNodes: !5331)
!5330 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5331 = !{!5332}
!5332 = !DILocalVariable(name: "a", arg: 1, scope: !5329, file: !5330, line: 16, type: !103)
!5333 = !DILocation(line: 0, scope: !5329)
!5334 = !DILocation(line: 18, column: 29, scope: !5329)
!5335 = !DILocation(line: 18, column: 45, scope: !5329)
!5336 = !DILocation(line: 18, column: 2, scope: !5329)
!5337 = distinct !DISubprogram(name: "conversion_radix", scope: !2257, file: !2257, line: 761, type: !5338, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2253, retainedNodes: !5340)
!5338 = !DISubroutineType(types: !5339)
!5339 = !{!120, !109}
!5340 = !{!5341}
!5341 = !DILocalVariable(name: "specifier", arg: 1, scope: !5337, file: !2257, line: 761, type: !109)
!5342 = !DILocation(line: 0, scope: !5337)
!5343 = !DILocation(line: 763, column: 2, scope: !5337)
!5344 = !DILocation(line: 770, column: 3, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5337, file: !2257, line: 763, column: 21)
!5346 = !DILocation(line: 774, column: 3, scope: !5345)
!5347 = !DILocation(line: 0, scope: !5345)
!5348 = !DILocation(line: 776, column: 1, scope: !5337)
!5349 = distinct !DISubprogram(name: "extract_flags", scope: !2257, file: !2257, line: 339, type: !5191, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2253, retainedNodes: !5350)
!5350 = !{!5351, !5352, !5353}
!5351 = !DILocalVariable(name: "conv", arg: 1, scope: !5349, file: !2257, line: 339, type: !4847)
!5352 = !DILocalVariable(name: "sp", arg: 2, scope: !5349, file: !2257, line: 340, type: !199)
!5353 = !DILocalVariable(name: "loop", scope: !5349, file: !2257, line: 342, type: !211)
!5354 = !DILocation(line: 0, scope: !5349)
!5355 = !DILocation(line: 344, column: 2, scope: !5349)
!5356 = !DILocation(line: 345, column: 11, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5349, file: !2257, line: 344, column: 5)
!5358 = !DILocation(line: 345, column: 3, scope: !5357)
!5359 = !DILocation(line: 351, column: 4, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5357, file: !2257, line: 345, column: 16)
!5361 = !DILocation(line: 354, column: 4, scope: !5360)
!5362 = !DILocation(line: 357, column: 4, scope: !5360)
!5363 = !DILocation(line: 360, column: 4, scope: !5360)
!5364 = !DILocation(line: 0, scope: !5360)
!5365 = !DILocation(line: 370, column: 12, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5349, file: !2257, line: 370, column: 6)
!5367 = !DILocation(line: 370, column: 22, scope: !5366)
!5368 = !DILocation(line: 371, column: 19, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5366, file: !2257, line: 370, column: 42)
!5370 = !DILocation(line: 372, column: 2, scope: !5369)
!5371 = !DILocation(line: 376, column: 2, scope: !5349)
!5372 = distinct !DISubprogram(name: "extract_width", scope: !2257, file: !2257, line: 388, type: !5191, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2253, retainedNodes: !5373)
!5373 = !{!5374, !5375, !5376, !5377}
!5374 = !DILocalVariable(name: "conv", arg: 1, scope: !5372, file: !2257, line: 388, type: !4847)
!5375 = !DILocalVariable(name: "sp", arg: 2, scope: !5372, file: !2257, line: 389, type: !199)
!5376 = !DILocalVariable(name: "wp", scope: !5372, file: !2257, line: 398, type: !199)
!5377 = !DILocalVariable(name: "width", scope: !5372, file: !2257, line: 399, type: !120)
!5378 = !DILocation(line: 0, scope: !5372)
!5379 = !DILocation(line: 391, column: 8, scope: !5372)
!5380 = !DILocation(line: 391, column: 22, scope: !5372)
!5381 = !DILocation(line: 393, column: 6, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5372, file: !2257, line: 393, column: 6)
!5383 = !DILocation(line: 393, column: 10, scope: !5382)
!5384 = !DILocation(line: 393, column: 6, scope: !5372)
!5385 = !DILocation(line: 394, column: 20, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5382, file: !2257, line: 393, column: 18)
!5387 = !DILocation(line: 395, column: 10, scope: !5386)
!5388 = !DILocation(line: 395, column: 3, scope: !5386)
!5389 = !DILocation(line: 399, column: 17, scope: !5372)
!5390 = !DILocation(line: 401, column: 6, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5372, file: !2257, line: 401, column: 6)
!5392 = !DILocation(line: 401, column: 9, scope: !5391)
!5393 = !DILocation(line: 401, column: 6, scope: !5372)
!5394 = !DILocation(line: 402, column: 23, scope: !5395)
!5395 = distinct !DILexicalBlock(scope: !5391, file: !2257, line: 401, column: 16)
!5396 = !DILocation(line: 403, column: 9, scope: !5395)
!5397 = !DILocation(line: 403, column: 21, scope: !5395)
!5398 = !DILocation(line: 405, column: 11, scope: !5395)
!5399 = !DILocation(line: 404, column: 21, scope: !5395)
!5400 = !DILocation(line: 406, column: 2, scope: !5395)
!5401 = !DILocation(line: 409, column: 1, scope: !5372)
!5402 = distinct !DISubprogram(name: "extract_prec", scope: !2257, file: !2257, line: 420, type: !5191, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2253, retainedNodes: !5403)
!5403 = !{!5404, !5405, !5406}
!5404 = !DILocalVariable(name: "conv", arg: 1, scope: !5402, file: !2257, line: 420, type: !4847)
!5405 = !DILocalVariable(name: "sp", arg: 2, scope: !5402, file: !2257, line: 421, type: !199)
!5406 = !DILocalVariable(name: "prec", scope: !5402, file: !2257, line: 435, type: !120)
!5407 = !DILocation(line: 0, scope: !5402)
!5408 = !DILocation(line: 423, column: 24, scope: !5402)
!5409 = !DILocation(line: 423, column: 28, scope: !5402)
!5410 = !DILocation(line: 423, column: 8, scope: !5402)
!5411 = !DILocation(line: 423, column: 21, scope: !5402)
!5412 = !DILocation(line: 425, column: 6, scope: !5402)
!5413 = !DILocation(line: 428, column: 2, scope: !5402)
!5414 = !DILocation(line: 430, column: 6, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5402, file: !2257, line: 430, column: 6)
!5416 = !DILocation(line: 430, column: 10, scope: !5415)
!5417 = !DILocation(line: 430, column: 6, scope: !5402)
!5418 = !DILocation(line: 431, column: 19, scope: !5419)
!5419 = distinct !DILexicalBlock(scope: !5415, file: !2257, line: 430, column: 18)
!5420 = !DILocation(line: 432, column: 10, scope: !5419)
!5421 = !DILocation(line: 432, column: 3, scope: !5419)
!5422 = !DILocation(line: 435, column: 16, scope: !5402)
!5423 = !DILocation(line: 437, column: 8, scope: !5402)
!5424 = !DILocation(line: 437, column: 19, scope: !5402)
!5425 = !DILocation(line: 439, column: 10, scope: !5402)
!5426 = !DILocation(line: 438, column: 20, scope: !5402)
!5427 = !DILocation(line: 441, column: 9, scope: !5402)
!5428 = !DILocation(line: 442, column: 1, scope: !5402)
!5429 = distinct !DISubprogram(name: "extract_length", scope: !2257, file: !2257, line: 453, type: !5191, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2253, retainedNodes: !5430)
!5430 = !{!5431, !5432}
!5431 = !DILocalVariable(name: "conv", arg: 1, scope: !5429, file: !2257, line: 453, type: !4847)
!5432 = !DILocalVariable(name: "sp", arg: 2, scope: !5429, file: !2257, line: 454, type: !199)
!5433 = !DILocation(line: 0, scope: !5429)
!5434 = !DILocation(line: 456, column: 10, scope: !5429)
!5435 = !DILocation(line: 456, column: 2, scope: !5429)
!5436 = !DILocation(line: 458, column: 8, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5438, file: !2257, line: 458, column: 7)
!5438 = distinct !DILexicalBlock(scope: !5429, file: !2257, line: 456, column: 15)
!5439 = !DILocation(line: 458, column: 7, scope: !5437)
!5440 = !DILocation(line: 458, column: 13, scope: !5437)
!5441 = !DILocation(line: 0, scope: !5437)
!5442 = !DILocation(line: 458, column: 7, scope: !5438)
!5443 = !DILocation(line: 459, column: 21, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5437, file: !2257, line: 458, column: 21)
!5445 = !DILocation(line: 460, column: 4, scope: !5444)
!5446 = !DILocation(line: 461, column: 3, scope: !5444)
!5447 = !DILocation(line: 462, column: 21, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5437, file: !2257, line: 461, column: 10)
!5449 = !DILocation(line: 466, column: 8, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5438, file: !2257, line: 466, column: 7)
!5451 = !DILocation(line: 466, column: 7, scope: !5450)
!5452 = !DILocation(line: 466, column: 13, scope: !5450)
!5453 = !DILocation(line: 0, scope: !5450)
!5454 = !DILocation(line: 466, column: 7, scope: !5438)
!5455 = !DILocation(line: 467, column: 21, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5450, file: !2257, line: 466, column: 21)
!5457 = !DILocation(line: 468, column: 4, scope: !5456)
!5458 = !DILocation(line: 469, column: 3, scope: !5456)
!5459 = !DILocation(line: 470, column: 21, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5450, file: !2257, line: 469, column: 10)
!5461 = !DILocation(line: 474, column: 9, scope: !5438)
!5462 = !DILocation(line: 474, column: 20, scope: !5438)
!5463 = !DILocation(line: 475, column: 3, scope: !5438)
!5464 = !DILocation(line: 476, column: 3, scope: !5438)
!5465 = !DILocation(line: 478, column: 9, scope: !5438)
!5466 = !DILocation(line: 478, column: 20, scope: !5438)
!5467 = !DILocation(line: 479, column: 3, scope: !5438)
!5468 = !DILocation(line: 480, column: 3, scope: !5438)
!5469 = !DILocation(line: 482, column: 9, scope: !5438)
!5470 = !DILocation(line: 482, column: 20, scope: !5438)
!5471 = !DILocation(line: 483, column: 3, scope: !5438)
!5472 = !DILocation(line: 484, column: 3, scope: !5438)
!5473 = !DILocation(line: 486, column: 9, scope: !5438)
!5474 = !DILocation(line: 486, column: 20, scope: !5438)
!5475 = !DILocation(line: 487, column: 3, scope: !5438)
!5476 = !DILocation(line: 492, column: 21, scope: !5438)
!5477 = !DILocation(line: 493, column: 3, scope: !5438)
!5478 = !DILocation(line: 495, column: 9, scope: !5438)
!5479 = !DILocation(line: 495, column: 20, scope: !5438)
!5480 = !DILocation(line: 496, column: 3, scope: !5438)
!5481 = !DILocation(line: 498, column: 2, scope: !5429)
!5482 = distinct !DISubprogram(name: "extract_specifier", scope: !2257, file: !2257, line: 513, type: !5191, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2253, retainedNodes: !5483)
!5483 = !{!5484, !5485, !5486, !5487}
!5484 = !DILocalVariable(name: "conv", arg: 1, scope: !5482, file: !2257, line: 513, type: !4847)
!5485 = !DILocalVariable(name: "sp", arg: 2, scope: !5482, file: !2257, line: 514, type: !199)
!5486 = !DILocalVariable(name: "unsupported", scope: !5482, file: !2257, line: 516, type: !211)
!5487 = !DILabel(scope: !5488, name: "int_conv", file: !2257, line: 526)
!5488 = distinct !DILexicalBlock(scope: !5482, file: !2257, line: 520, column: 27)
!5489 = !DILocation(line: 0, scope: !5482)
!5490 = !DILocation(line: 518, column: 20, scope: !5482)
!5491 = !DILocation(line: 518, column: 8, scope: !5482)
!5492 = !DILocation(line: 518, column: 18, scope: !5482)
!5493 = !DILocation(line: 520, column: 2, scope: !5482)
!5494 = !DILocation(line: 525, column: 3, scope: !5488)
!5495 = !DILocation(line: 0, scope: !5488)
!5496 = !DILocation(line: 526, column: 1, scope: !5488)
!5497 = !DILocation(line: 528, column: 24, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5488, file: !2257, line: 528, column: 7)
!5499 = !DILocation(line: 528, column: 7, scope: !5488)
!5500 = !DILocation(line: 535, column: 23, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5488, file: !2257, line: 535, column: 7)
!5502 = !DILocation(line: 535, column: 7, scope: !5488)
!5503 = !DILocation(line: 536, column: 36, scope: !5504)
!5504 = distinct !DILexicalBlock(scope: !5501, file: !2257, line: 535, column: 31)
!5505 = !DILocation(line: 537, column: 3, scope: !5504)
!5506 = !DILocation(line: 570, column: 9, scope: !5488)
!5507 = !DILocation(line: 570, column: 23, scope: !5488)
!5508 = !DILocation(line: 575, column: 4, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5510, file: !2257, line: 573, column: 48)
!5510 = distinct !DILexicalBlock(scope: !5488, file: !2257, line: 573, column: 7)
!5511 = !DILocation(line: 603, column: 9, scope: !5488)
!5512 = !DILocation(line: 603, column: 23, scope: !5488)
!5513 = !DILocation(line: 605, column: 24, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5488, file: !2257, line: 605, column: 7)
!5515 = !DILocation(line: 605, column: 7, scope: !5488)
!5516 = !DILocation(line: 612, column: 9, scope: !5488)
!5517 = !DILocation(line: 612, column: 23, scope: !5488)
!5518 = !DILocation(line: 619, column: 24, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5488, file: !2257, line: 619, column: 7)
!5520 = !DILocation(line: 619, column: 7, scope: !5488)
!5521 = !DILocation(line: 625, column: 9, scope: !5488)
!5522 = !DILocation(line: 625, column: 17, scope: !5488)
!5523 = !DILocation(line: 626, column: 3, scope: !5488)
!5524 = !DILocation(line: 629, column: 20, scope: !5482)
!5525 = !DILocation(line: 629, column: 8, scope: !5482)
!5526 = !DILocation(line: 518, column: 23, scope: !5482)
!5527 = !DILocation(line: 631, column: 2, scope: !5482)
!5528 = distinct !DISubprogram(name: "extract_decimal", scope: !2257, file: !2257, line: 318, type: !5529, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2253, retainedNodes: !5532)
!5529 = !DISubroutineType(types: !5530)
!5530 = !{!120, !5531}
!5531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 32)
!5532 = !{!5533, !5534, !5535}
!5533 = !DILocalVariable(name: "str", arg: 1, scope: !5528, file: !2257, line: 318, type: !5531)
!5534 = !DILocalVariable(name: "sp", scope: !5528, file: !2257, line: 320, type: !199)
!5535 = !DILocalVariable(name: "val", scope: !5528, file: !2257, line: 321, type: !120)
!5536 = !DILocation(line: 0, scope: !5528)
!5537 = !DILocation(line: 320, column: 19, scope: !5528)
!5538 = !DILocation(line: 323, column: 37, scope: !5528)
!5539 = !DILocation(line: 323, column: 17, scope: !5528)
!5540 = !DILocation(line: 323, column: 9, scope: !5528)
!5541 = !DILocation(line: 323, column: 2, scope: !5528)
!5542 = !DILocation(line: 324, column: 13, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5528, file: !2257, line: 323, column: 43)
!5544 = !DILocation(line: 324, column: 24, scope: !5543)
!5545 = !DILocation(line: 324, column: 19, scope: !5543)
!5546 = !DILocation(line: 324, column: 27, scope: !5543)
!5547 = distinct !{!5547, !5541, !5548}
!5548 = !DILocation(line: 325, column: 2, scope: !5528)
!5549 = !DILocation(line: 326, column: 7, scope: !5528)
!5550 = !DILocation(line: 327, column: 2, scope: !5528)
!5551 = distinct !DISubprogram(name: "isdigit", scope: !5330, file: !5330, line: 43, type: !129, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2253, retainedNodes: !5552)
!5552 = !{!5553}
!5553 = !DILocalVariable(name: "a", arg: 1, scope: !5551, file: !5330, line: 43, type: !103)
!5554 = !DILocation(line: 0, scope: !5551)
!5555 = !DILocation(line: 45, column: 29, scope: !5551)
!5556 = !DILocation(line: 45, column: 45, scope: !5551)
!5557 = !DILocation(line: 45, column: 2, scope: !5551)
!5558 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5559, file: !5559, line: 9, type: !2826, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2291, retainedNodes: !162)
!5559 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!5560 = !DILocation(line: 11, column: 1, scope: !5558)
!5561 = !{i64 2147561392, i64 2147561435, i64 2147561475}
!5562 = !DILocation(line: 12, column: 1, scope: !5558)
!5563 = !{i64 2147565619, i64 2147565662, i64 2147565702}
!5564 = !DILocation(line: 13, column: 1, scope: !5558)
!5565 = !{i64 2147565828, i64 2147565871, i64 2147565911}
!5566 = !DILocation(line: 14, column: 1, scope: !5558)
!5567 = !{i64 2147565997, i64 2147566040, i64 2147566080}
!5568 = !DILocation(line: 15, column: 1, scope: !5558)
!5569 = !{i64 2147566160, i64 2147566203, i64 2147566243}
!5570 = !DILocation(line: 16, column: 1, scope: !5558)
!5571 = !{i64 2147566344, i64 2147566387, i64 2147566427}
!5572 = !DILocation(line: 17, column: 1, scope: !5558)
!5573 = !{i64 2147566523, i64 2147566566, i64 2147566606}
!5574 = !DILocation(line: 18, column: 1, scope: !5558)
!5575 = !{i64 2147566766, i64 2147566809, i64 2147566849}
!5576 = !DILocation(line: 19, column: 1, scope: !5558)
!5577 = !{i64 2147567001, i64 2147567044, i64 2147567084}
!5578 = !DILocation(line: 20, column: 1, scope: !5558)
!5579 = !{i64 2147567188, i64 2147567231, i64 2147567271}
!5580 = !DILocation(line: 21, column: 1, scope: !5558)
!5581 = !{i64 2147567404, i64 2147567447, i64 2147567487}
!5582 = !DILocation(line: 22, column: 1, scope: !5558)
!5583 = !{i64 2147567607, i64 2147567650, i64 2147567690}
!5584 = !DILocation(line: 23, column: 1, scope: !5558)
!5585 = !{i64 2147567810, i64 2147567853, i64 2147567893}
!5586 = !DILocation(line: 24, column: 1, scope: !5558)
!5587 = !{i64 2147567985, i64 2147568028, i64 2147568068}
!5588 = !DILocation(line: 25, column: 1, scope: !5558)
!5589 = !{i64 2147568193, i64 2147568236, i64 2147568276}
!5590 = !DILocation(line: 26, column: 1, scope: !5558)
!5591 = !{i64 2147568397, i64 2147568440, i64 2147568480}
!5592 = !DILocation(line: 27, column: 1, scope: !5558)
!5593 = !{i64 2147568590, i64 2147568633, i64 2147568673}
!5594 = !DILocation(line: 28, column: 1, scope: !5558)
!5595 = !{i64 2147568792, i64 2147568835, i64 2147568875}
!5596 = !DILocation(line: 29, column: 1, scope: !5558)
!5597 = !{i64 2147569019, i64 2147569062, i64 2147569102}
!5598 = !DILocation(line: 30, column: 1, scope: !5558)
!5599 = !{i64 2147569221, i64 2147569264, i64 2147569304}
!5600 = !DILocation(line: 31, column: 1, scope: !5558)
!5601 = !{i64 2147569436, i64 2147569479, i64 2147569519}
!5602 = !DILocation(line: 32, column: 1, scope: !5558)
!5603 = !{i64 2147569608, i64 2147569651, i64 2147569691}
!5604 = !DILocation(line: 33, column: 1, scope: !5558)
!5605 = !{i64 2147569810, i64 2147569853, i64 2147569893}
!5606 = !DILocation(line: 34, column: 1, scope: !5558)
!5607 = !{i64 2147570036, i64 2147570079, i64 2147570119}
!5608 = !DILocation(line: 35, column: 1, scope: !5558)
!5609 = !{i64 2147570235, i64 2147570278, i64 2147570318}
!5610 = !DILocation(line: 36, column: 1, scope: !5558)
!5611 = !{i64 2147570410, i64 2147570453, i64 2147570493}
!5612 = !DILocation(line: 37, column: 1, scope: !5558)
!5613 = !{i64 2147570678, i64 2147570721, i64 2147570761}
!5614 = !DILocation(line: 38, column: 1, scope: !5558)
!5615 = !{i64 2147570931, i64 2147570974, i64 2147571014}
!5616 = !DILocation(line: 39, column: 1, scope: !5558)
!5617 = !{i64 2147571172, i64 2147571215, i64 2147571255}
!5618 = !DILocation(line: 40, column: 1, scope: !5558)
!5619 = !{i64 2147571407, i64 2147571450, i64 2147571490}
!5620 = !DILocation(line: 41, column: 1, scope: !5558)
!5621 = !{i64 2147571639, i64 2147571682, i64 2147571722}
!5622 = !DILocation(line: 42, column: 1, scope: !5558)
!5623 = !{i64 2147571865, i64 2147571908, i64 2147571948}
!5624 = !DILocation(line: 43, column: 1, scope: !5558)
!5625 = !{i64 2147572103, i64 2147572146, i64 2147572186}
!5626 = !DILocation(line: 44, column: 1, scope: !5558)
!5627 = !{i64 2147572329, i64 2147572372, i64 2147572412}
!5628 = !DILocation(line: 45, column: 1, scope: !5558)
!5629 = !{i64 2147572564, i64 2147572607, i64 2147572647}
!5630 = !DILocation(line: 46, column: 1, scope: !5558)
!5631 = !{i64 2147572799, i64 2147572842, i64 2147572882}
!5632 = !DILocation(line: 47, column: 1, scope: !5558)
!5633 = !{i64 2147573037, i64 2147573080, i64 2147573120}
!5634 = !DILocation(line: 48, column: 1, scope: !5558)
!5635 = !{i64 2147573311, i64 2147573354, i64 2147573394}
!5636 = !DILocation(line: 49, column: 1, scope: !5558)
!5637 = !{i64 2147573549, i64 2147573592, i64 2147573632}
!5638 = !DILocation(line: 50, column: 1, scope: !5558)
!5639 = !{i64 2147573802, i64 2147573845, i64 2147573885}
!5640 = !DILocation(line: 51, column: 1, scope: !5558)
!5641 = !{i64 2147574046, i64 2147574089, i64 2147574129}
!5642 = !DILocation(line: 52, column: 1, scope: !5558)
!5643 = !{i64 2147578357, i64 2147578400, i64 2147578440}
!5644 = !DILocation(line: 53, column: 1, scope: !5558)
!5645 = !{i64 2147578598, i64 2147578641, i64 2147578681}
!5646 = !DILocation(line: 54, column: 1, scope: !5558)
!5647 = !{i64 2147578845, i64 2147578888, i64 2147578928}
!5648 = !DILocation(line: 55, column: 1, scope: !5558)
!5649 = !{i64 2147579080, i64 2147579123, i64 2147579163}
!5650 = !DILocation(line: 56, column: 1, scope: !5558)
!5651 = !{i64 2147579315, i64 2147579358, i64 2147579398}
!5652 = !DILocation(line: 57, column: 1, scope: !5558)
!5653 = !{i64 2147579550, i64 2147579593, i64 2147579633}
!5654 = !DILocation(line: 58, column: 1, scope: !5558)
!5655 = !{i64 2147579788, i64 2147579831, i64 2147579871}
!5656 = !DILocation(line: 59, column: 1, scope: !5558)
!5657 = !{i64 2147580029, i64 2147580072, i64 2147580112}
!5658 = !DILocation(line: 60, column: 1, scope: !5558)
!5659 = !{i64 2147580309, i64 2147580352, i64 2147580392}
!5660 = !DILocation(line: 61, column: 1, scope: !5558)
!5661 = !{i64 2147580568, i64 2147580611, i64 2147580651}
!5662 = !DILocation(line: 62, column: 1, scope: !5558)
!5663 = !{i64 2147580806, i64 2147580849, i64 2147580889}
!5664 = !DILocation(line: 63, column: 1, scope: !5558)
!5665 = !{i64 2147581065, i64 2147581108, i64 2147581148}
!5666 = !DILocation(line: 64, column: 1, scope: !5558)
!5667 = !{i64 2147581294, i64 2147581337, i64 2147581377}
!5668 = !DILocation(line: 65, column: 1, scope: !5558)
!5669 = !{i64 2147581502, i64 2147581545, i64 2147581585}
!5670 = !DILocation(line: 66, column: 1, scope: !5558)
!5671 = !{i64 2147581713, i64 2147581756, i64 2147581796}
!5672 = !DILocation(line: 67, column: 1, scope: !5558)
!5673 = !{i64 2147581948, i64 2147581991, i64 2147582031}
!5674 = !DILocation(line: 68, column: 1, scope: !5558)
!5675 = !{i64 2147582177, i64 2147582220, i64 2147582260}
!5676 = !DILocation(line: 69, column: 1, scope: !5558)
!5677 = !{i64 2147582415, i64 2147582458, i64 2147582498}
!5678 = !DILocation(line: 70, column: 1, scope: !5558)
!5679 = !{i64 2147582647, i64 2147582690, i64 2147582730}
!5680 = !DILocation(line: 71, column: 1, scope: !5558)
!5681 = !{i64 2147582873, i64 2147582916, i64 2147582956}
!5682 = !DILocation(line: 72, column: 1, scope: !5558)
!5683 = !{i64 2147583090, i64 2147583133, i64 2147583173}
!5684 = !DILocation(line: 73, column: 1, scope: !5558)
!5685 = !{i64 2147583322, i64 2147583365, i64 2147583405}
!5686 = !DILocation(line: 74, column: 1, scope: !5558)
!5687 = !{i64 2147583548, i64 2147583591, i64 2147583631}
!5688 = !DILocation(line: 75, column: 1, scope: !5558)
!5689 = !{i64 2147583762, i64 2147583805, i64 2147583845}
!5690 = !DILocation(line: 76, column: 1, scope: !5558)
!5691 = !{i64 2147583982, i64 2147584025, i64 2147584065}
!5692 = !DILocation(line: 77, column: 1, scope: !5558)
!5693 = !{i64 2147584214, i64 2147584257, i64 2147584297}
!5694 = !DILocation(line: 78, column: 1, scope: !5558)
!5695 = !{i64 2147584422, i64 2147584465, i64 2147584505}
!5696 = !DILocation(line: 79, column: 1, scope: !5558)
!5697 = !{i64 2147584627, i64 2147584670, i64 2147584710}
!5698 = !DILocation(line: 80, column: 1, scope: !5558)
!5699 = !{i64 2147584844, i64 2147584887, i64 2147584927}
!5700 = !DILocation(line: 81, column: 1, scope: !5558)
!5701 = !{i64 2147585058, i64 2147585101, i64 2147585141}
!5702 = !DILocation(line: 82, column: 1, scope: !5558)
!5703 = !{i64 2147585284, i64 2147585327, i64 2147585367}
!5704 = !DILocation(line: 83, column: 1, scope: !5558)
!5705 = !{i64 2147585504, i64 2147585547, i64 2147585587}
!5706 = !DILocation(line: 84, column: 1, scope: !5558)
!5707 = !{i64 2147585709, i64 2147585752, i64 2147585792}
!5708 = !DILocation(line: 85, column: 1, scope: !5558)
!5709 = !{i64 2147585941, i64 2147585984, i64 2147586024}
!5710 = !DILocation(line: 86, column: 1, scope: !5558)
!5711 = !{i64 2147586176, i64 2147586219, i64 2147586259}
!5712 = !DILocation(line: 87, column: 1, scope: !5558)
!5713 = !{i64 2147586426, i64 2147586469, i64 2147586509}
!5714 = !DILocation(line: 88, column: 1, scope: !5558)
!5715 = !{i64 2147590737, i64 2147590780, i64 2147590820}
!5716 = !DILocation(line: 89, column: 1, scope: !5558)
!5717 = !{i64 2147590975, i64 2147591018, i64 2147591058}
!5718 = !DILocation(line: 90, column: 1, scope: !5558)
!5719 = !{i64 2147591186, i64 2147591229, i64 2147591269}
!5720 = !DILocation(line: 91, column: 1, scope: !5558)
!5721 = !{i64 2147591403, i64 2147591446, i64 2147591486}
!5722 = !DILocation(line: 92, column: 1, scope: !5558)
!5723 = !{i64 2147591599, i64 2147591642, i64 2147591682}
!5724 = !DILocation(line: 93, column: 1, scope: !5558)
!5725 = !{i64 2147591801, i64 2147591844, i64 2147591884}
!5726 = !DILocation(line: 94, column: 1, scope: !5558)
!5727 = !{i64 2147591994, i64 2147592037, i64 2147592077}
!5728 = !DILocation(line: 95, column: 1, scope: !5558)
!5729 = !{i64 2147592202, i64 2147592245, i64 2147592285}
!5730 = !DILocation(line: 96, column: 1, scope: !5558)
!5731 = !{i64 2147592398, i64 2147592441, i64 2147592481}
!5732 = !DILocation(line: 97, column: 1, scope: !5558)
!5733 = !{i64 2147592648, i64 2147592691, i64 2147592731}
!5734 = !DILocation(line: 98, column: 1, scope: !5558)
!5735 = !{i64 2147592859, i64 2147592902, i64 2147592942}
!5736 = !DILocation(line: 99, column: 1, scope: !5558)
!5737 = !{i64 2147593058, i64 2147593101, i64 2147593141}
!5738 = !DILocation(line: 100, column: 1, scope: !5558)
!5739 = !{i64 2147593233, i64 2147593276, i64 2147593316}
!5740 = !DILocation(line: 101, column: 1, scope: !5558)
!5741 = !{i64 2147593417, i64 2147593460, i64 2147593500}
!5742 = !DILocation(line: 102, column: 1, scope: !5558)
!5743 = !{i64 2147593619, i64 2147593662, i64 2147593702}
!5744 = !DILocation(line: 103, column: 1, scope: !5558)
!5745 = !{i64 2147593800, i64 2147593843, i64 2147593883}
!5746 = !DILocation(line: 104, column: 1, scope: !5558)
!5747 = !{i64 2147593999, i64 2147594042, i64 2147594082}
!5748 = !DILocation(line: 105, column: 1, scope: !5558)
!5749 = !{i64 2147594165, i64 2147594208, i64 2147594248}
!5750 = !DILocation(line: 106, column: 1, scope: !5558)
!5751 = !{i64 2147594349, i64 2147594392, i64 2147594432}
!5752 = !DILocation(line: 107, column: 1, scope: !5558)
!5753 = !{i64 2147594539, i64 2147594582, i64 2147594622}
!5754 = !DILocation(line: 108, column: 1, scope: !5558)
!5755 = !{i64 2147594723, i64 2147594766, i64 2147594806}
!5756 = !DILocation(line: 109, column: 1, scope: !5558)
!5757 = !{i64 2147594937, i64 2147594980, i64 2147595020}
!5758 = !DILocation(line: 110, column: 1, scope: !5558)
!5759 = !{i64 2147595148, i64 2147595191, i64 2147595231}
!5760 = !DILocation(line: 111, column: 1, scope: !5558)
!5761 = !{i64 2147595371, i64 2147595414, i64 2147595454}
!5762 = !DILocation(line: 112, column: 1, scope: !5558)
!5763 = !{i64 2147595555, i64 2147595598, i64 2147595638}
!5764 = !DILocation(line: 113, column: 1, scope: !5558)
!5765 = !{i64 2147595769, i64 2147595812, i64 2147595852}
!5766 = !DILocation(line: 114, column: 1, scope: !5558)
!5767 = !{i64 2147595935, i64 2147595978, i64 2147596018}
!5768 = !DILocation(line: 115, column: 1, scope: !5558)
!5769 = !{i64 2147596116, i64 2147596159, i64 2147596199}
!5770 = !DILocation(line: 116, column: 1, scope: !5558)
!5771 = !{i64 2147596309, i64 2147596352, i64 2147596392}
!5772 = !DILocation(line: 117, column: 1, scope: !5558)
!5773 = !{i64 2147596535, i64 2147596578, i64 2147596618}
!5774 = !DILocation(line: 118, column: 1, scope: !5558)
!5775 = !{i64 2147596749, i64 2147596792, i64 2147596832}
!5776 = !DILocation(line: 119, column: 1, scope: !5558)
!5777 = !{i64 2147596975, i64 2147597018, i64 2147597058}
!5778 = !DILocation(line: 120, column: 1, scope: !5558)
!5779 = !{i64 2147597192, i64 2147597235, i64 2147597275}
!5780 = !DILocation(line: 121, column: 1, scope: !5558)
!5781 = !{i64 2147597469, i64 2147597512, i64 2147597552}
!5782 = !DILocation(line: 122, column: 1, scope: !5558)
!5783 = !{i64 2147597695, i64 2147597738, i64 2147597778}
!5784 = !DILocation(line: 123, column: 1, scope: !5558)
!5785 = !{i64 2147597903, i64 2147597946, i64 2147597986}
!5786 = !DILocation(line: 124, column: 1, scope: !5558)
!5787 = !{i64 2147598099, i64 2147598142, i64 2147598182}
!5788 = !DILocation(line: 125, column: 1, scope: !5558)
!5789 = !{i64 2147598364, i64 2147598407, i64 2147598447}
!5790 = !DILocation(line: 126, column: 1, scope: !5558)
!5791 = !{i64 2147598578, i64 2147598621, i64 2147598661}
!5792 = !DILocation(line: 127, column: 1, scope: !5558)
!5793 = !{i64 2147598753, i64 2147598796, i64 2147598836}
!5794 = !DILocation(line: 128, column: 1, scope: !5558)
!5795 = !{i64 2147599007, i64 2147599050, i64 2147599090}
!5796 = !DILocation(line: 129, column: 1, scope: !5558)
!5797 = !{i64 2147599206, i64 2147599249, i64 2147599289}
!5798 = !DILocation(line: 130, column: 1, scope: !5558)
!5799 = !{i64 2147599448, i64 2147599491, i64 2147599531}
!5800 = !DILocation(line: 131, column: 1, scope: !5558)
!5801 = !{i64 2147599611, i64 2147599654, i64 2147599694}
!5802 = !DILocation(line: 132, column: 1, scope: !5558)
!5803 = !{i64 2147603859, i64 2147603902, i64 2147603942}
!5804 = !DILocation(line: 133, column: 1, scope: !5558)
!5805 = !{i64 2147604052, i64 2147604095, i64 2147604135}
!5806 = !DILocation(line: 134, column: 1, scope: !5558)
!5807 = !{i64 2147604235, i64 2147604278, i64 2147604318}
!5808 = !DILocation(line: 135, column: 1, scope: !5558)
!5809 = !{i64 2147604449, i64 2147604492, i64 2147604532}
!5810 = !DILocation(line: 136, column: 1, scope: !5558)
!5811 = !{i64 2147604660, i64 2147604703, i64 2147604743}
!5812 = !DILocation(line: 137, column: 1, scope: !5558)
!5813 = !{i64 2147604880, i64 2147604923, i64 2147604963}
!5814 = !DILocation(line: 138, column: 1, scope: !5558)
!5815 = !{i64 2147605087, i64 2147605130, i64 2147605170}
!5816 = !DILocation(line: 139, column: 1, scope: !5558)
!5817 = !{i64 2147605360, i64 2147605403, i64 2147605443}
!5818 = !DILocation(line: 140, column: 1, scope: !5558)
!5819 = !{i64 2147605608, i64 2147605651, i64 2147605691}
!5820 = !DILocation(line: 141, column: 1, scope: !5558)
!5821 = !{i64 2147605807, i64 2147605850, i64 2147605890}
!5822 = !DILocation(line: 142, column: 1, scope: !5558)
!5823 = !{i64 2147606042, i64 2147606085, i64 2147606125}
!5824 = !DILocation(line: 143, column: 1, scope: !5558)
!5825 = !{i64 2147606292, i64 2147606335, i64 2147606375}
!5826 = !DILocation(line: 144, column: 1, scope: !5558)
!5827 = !{i64 2147606494, i64 2147606537, i64 2147606577}
!5828 = !DILocation(line: 145, column: 1, scope: !5558)
!5829 = !{i64 2147606717, i64 2147606760, i64 2147606800}
!5830 = !DILocation(line: 146, column: 1, scope: !5558)
!5831 = !{i64 2147606931, i64 2147606974, i64 2147607014}
!5832 = !DILocation(line: 147, column: 1, scope: !5558)
!5833 = !{i64 2147607175, i64 2147607218, i64 2147607258}
!5834 = !DILocation(line: 148, column: 1, scope: !5558)
!5835 = !{i64 2147607404, i64 2147607447, i64 2147607487}
!5836 = !DILocation(line: 149, column: 1, scope: !5558)
!5837 = !{i64 2147607633, i64 2147607676, i64 2147607716}
!5838 = !DILocation(line: 150, column: 1, scope: !5558)
!5839 = !{i64 2147607841, i64 2147607884, i64 2147607924}
!5840 = !DILocation(line: 151, column: 1, scope: !5558)
!5841 = !{i64 2147608079, i64 2147608122, i64 2147608162}
!5842 = !DILocation(line: 152, column: 1, scope: !5558)
!5843 = !{i64 2147608305, i64 2147608348, i64 2147608388}
!5844 = !DILocation(line: 153, column: 1, scope: !5558)
!5845 = !{i64 2147608564, i64 2147608607, i64 2147608647}
!5846 = !DILocation(line: 154, column: 1, scope: !5558)
!5847 = !{i64 2147608784, i64 2147608827, i64 2147608867}
!5848 = !DILocation(line: 155, column: 1, scope: !5558)
!5849 = !{i64 2147609016, i64 2147609059, i64 2147609099}
!5850 = !DILocation(line: 156, column: 1, scope: !5558)
!5851 = !{i64 2147609257, i64 2147609300, i64 2147609340}
!5852 = !DILocation(line: 157, column: 1, scope: !5558)
!5853 = !{i64 2147609498, i64 2147609541, i64 2147609581}
!5854 = !DILocation(line: 158, column: 1, scope: !5558)
!5855 = !{i64 2147609721, i64 2147609764, i64 2147609804}
!5856 = !DILocation(line: 159, column: 1, scope: !5558)
!5857 = !{i64 2147609938, i64 2147609981, i64 2147610021}
!5858 = !DILocation(line: 160, column: 1, scope: !5558)
!5859 = !{i64 2147610179, i64 2147610222, i64 2147610262}
!5860 = !DILocation(line: 161, column: 1, scope: !5558)
!5861 = !{i64 2147610366, i64 2147610409, i64 2147610449}
!5862 = !DILocation(line: 162, column: 1, scope: !5558)
!5863 = !{i64 2147610553, i64 2147610596, i64 2147610636}
!5864 = !DILocation(line: 163, column: 1, scope: !5558)
!5865 = !{i64 2147610716, i64 2147610759, i64 2147610799}
!5866 = !DILocation(line: 164, column: 1, scope: !5558)
!5867 = !{i64 2147610975, i64 2147611018, i64 2147611058}
!5868 = !DILocation(line: 165, column: 1, scope: !5558)
!5869 = !{i64 2147611198, i64 2147611241, i64 2147611281}
!5870 = !DILocation(line: 166, column: 1, scope: !5558)
!5871 = !{i64 2147611427, i64 2147611470, i64 2147611510}
!5872 = !DILocation(line: 167, column: 1, scope: !5558)
!5873 = !{i64 2147611623, i64 2147611666, i64 2147611706}
!5874 = !DILocation(line: 168, column: 1, scope: !5558)
!5875 = !{i64 2147611835, i64 2147611878, i64 2147611918}
!5876 = !DILocation(line: 169, column: 1, scope: !5558)
!5877 = !{i64 2147612056, i64 2147612099, i64 2147612139}
!5878 = !DILocation(line: 170, column: 1, scope: !5558)
!5879 = !{i64 2147612270, i64 2147612313, i64 2147612353}
!5880 = !DILocation(line: 171, column: 1, scope: !5558)
!5881 = !{i64 2147616521, i64 2147616564, i64 2147616604}
!5882 = !DILocation(line: 172, column: 1, scope: !5558)
!5883 = !{i64 2147616720, i64 2147616763, i64 2147616803}
!5884 = !DILocation(line: 173, column: 1, scope: !5558)
!5885 = !{i64 2147616925, i64 2147616968, i64 2147617008}
!5886 = !DILocation(line: 174, column: 1, scope: !5558)
!5887 = !{i64 2147617145, i64 2147617188, i64 2147617228}
!5888 = !DILocation(line: 175, column: 1, scope: !5558)
!5889 = !{i64 2147617346, i64 2147617389, i64 2147617429}
!5890 = !DILocation(line: 176, column: 1, scope: !5558)
!5891 = !{i64 2147617545, i64 2147617588, i64 2147617628}
!5892 = !DILocation(line: 177, column: 1, scope: !5558)
!5893 = !{i64 2147617750, i64 2147617793, i64 2147617833}
!5894 = !DILocation(line: 178, column: 1, scope: !5558)
!5895 = !{i64 2147617919, i64 2147617962, i64 2147618002}
!5896 = !DILocation(line: 179, column: 1, scope: !5558)
!5897 = !{i64 2147618103, i64 2147618146, i64 2147618186}
!5898 = !DILocation(line: 180, column: 1, scope: !5558)
!5899 = !{i64 2147618287, i64 2147618330, i64 2147618370}
!5900 = !DILocation(line: 181, column: 1, scope: !5558)
!5901 = !{i64 2147618474, i64 2147618517, i64 2147618557}
!5902 = !DILocation(line: 182, column: 1, scope: !5558)
!5903 = !{i64 2147618658, i64 2147618701, i64 2147618741}
!5904 = !DILocation(line: 183, column: 1, scope: !5558)
!5905 = !{i64 2147618896, i64 2147618939, i64 2147618979}
!5906 = !DILocation(line: 184, column: 1, scope: !5558)
!5907 = !{i64 2147619126, i64 2147619169, i64 2147619209}
!5908 = !DILocation(line: 185, column: 1, scope: !5558)
!5909 = !{i64 2147619355, i64 2147619398, i64 2147619438}
!5910 = !DILocation(line: 186, column: 1, scope: !5558)
!5911 = !{i64 2147619542, i64 2147619585, i64 2147619625}
!5912 = !DILocation(line: 187, column: 1, scope: !5558)
!5913 = !{i64 2147619738, i64 2147619781, i64 2147619821}
!5914 = !DILocation(line: 188, column: 1, scope: !5558)
!5915 = !{i64 2147619946, i64 2147619989, i64 2147620029}
!5916 = !DILocation(line: 189, column: 1, scope: !5558)
!5917 = !{i64 2147620158, i64 2147620201, i64 2147620241}
!5918 = !DILocation(line: 190, column: 1, scope: !5558)
!5919 = !{i64 2147620357, i64 2147620400, i64 2147620440}
!5920 = !DILocation(line: 191, column: 1, scope: !5558)
!5921 = !{i64 2147620595, i64 2147620638, i64 2147620678}
!5922 = !DILocation(line: 192, column: 1, scope: !5558)
!5923 = !{i64 2147620791, i64 2147620834, i64 2147620874}
!5924 = !DILocation(line: 193, column: 1, scope: !5558)
!5925 = !{i64 2147620993, i64 2147621036, i64 2147621076}
!5926 = !DILocation(line: 194, column: 1, scope: !5558)
!5927 = !{i64 2147621186, i64 2147621229, i64 2147621269}
!5928 = !DILocation(line: 195, column: 1, scope: !5558)
!5929 = !{i64 2147621420, i64 2147621463, i64 2147621503}
!5930 = !DILocation(line: 196, column: 1, scope: !5558)
!5931 = !{i64 2147621583, i64 2147621626, i64 2147621666}
!5932 = !DILocation(line: 197, column: 1, scope: !5558)
!5933 = !{i64 2147621822, i64 2147621865, i64 2147621905}
!5934 = !DILocation(line: 198, column: 1, scope: !5558)
!5935 = !{i64 2147622061, i64 2147622104, i64 2147622144}
!5936 = !DILocation(line: 199, column: 1, scope: !5558)
!5937 = !{i64 2147622297, i64 2147622340, i64 2147622380}
!5938 = !DILocation(line: 200, column: 1, scope: !5558)
!5939 = !{i64 2147622527, i64 2147622570, i64 2147622610}
!5940 = !DILocation(line: 201, column: 1, scope: !5558)
!5941 = !{i64 2147622714, i64 2147622757, i64 2147622797}
!5942 = !DILocation(line: 202, column: 1, scope: !5558)
!5943 = !{i64 2147622913, i64 2147622956, i64 2147622996}
!5944 = !DILocation(line: 203, column: 1, scope: !5558)
!5945 = !{i64 2147623184, i64 2147623227, i64 2147623267}
!5946 = !DILocation(line: 204, column: 1, scope: !5558)
!5947 = !{i64 2147623359, i64 2147623402, i64 2147623442}
!5948 = !DILocation(line: 205, column: 1, scope: !5558)
!5949 = !{i64 2147623593, i64 2147623636, i64 2147623676}
!5950 = !DILocation(line: 206, column: 1, scope: !5558)
!5951 = !{i64 2147623801, i64 2147623844, i64 2147623884}
!5952 = !DILocation(line: 207, column: 1, scope: !5558)
!5953 = !{i64 2147624019, i64 2147624062, i64 2147624102}
!5954 = !DILocation(line: 208, column: 1, scope: !5558)
!5955 = !{i64 2147624209, i64 2147624252, i64 2147624292}
!5956 = !DILocation(line: 209, column: 1, scope: !5558)
!5957 = !{i64 2147624405, i64 2147624448, i64 2147624488}
!5958 = !DILocation(line: 210, column: 1, scope: !5558)
!5959 = !{i64 2147624611, i64 2147624654, i64 2147624694}
!5960 = !DILocation(line: 211, column: 1, scope: !5558)
!5961 = !{i64 2147624816, i64 2147624859, i64 2147624899}
!5962 = !DILocation(line: 212, column: 1, scope: !5558)
!5963 = !{i64 2147625042, i64 2147625085, i64 2147625125}
!5964 = !DILocation(line: 213, column: 1, scope: !5558)
!5965 = !{i64 2147625274, i64 2147625317, i64 2147625357}
!5966 = !DILocation(line: 214, column: 1, scope: !5558)
!5967 = !{i64 2147625458, i64 2147625501, i64 2147625541}
!5968 = !DILocation(line: 215, column: 1, scope: !5558)
!5969 = !{i64 2147629728, i64 2147629771, i64 2147629811}
!5970 = !DILocation(line: 216, column: 1, scope: !5558)
!5971 = !{i64 2147629912, i64 2147629955, i64 2147629995}
!5972 = !DILocation(line: 217, column: 1, scope: !5558)
!5973 = !{i64 2147630138, i64 2147630181, i64 2147630221}
!5974 = !DILocation(line: 218, column: 1, scope: !5558)
!5975 = !{i64 2147630364, i64 2147630407, i64 2147630447}
!5976 = !DILocation(line: 219, column: 1, scope: !5558)
!5977 = !{i64 2147630590, i64 2147630633, i64 2147630673}
!5978 = !DILocation(line: 220, column: 1, scope: !5558)
!5979 = !{i64 2147630816, i64 2147630859, i64 2147630899}
!5980 = !DILocation(line: 221, column: 1, scope: !5558)
!5981 = !{i64 2147631042, i64 2147631085, i64 2147631125}
!5982 = !DILocation(line: 222, column: 1, scope: !5558)
!5983 = !{i64 2147631274, i64 2147631317, i64 2147631357}
!5984 = !DILocation(line: 223, column: 1, scope: !5558)
!5985 = !{i64 2147631512, i64 2147631555, i64 2147631595}
!5986 = !DILocation(line: 224, column: 1, scope: !5558)
!5987 = !{i64 2147631732, i64 2147631775, i64 2147631815}
!5988 = !DILocation(line: 225, column: 1, scope: !5558)
!5989 = !{i64 2147631976, i64 2147632019, i64 2147632059}
!5990 = !DILocation(line: 226, column: 1, scope: !5558)
!5991 = !{i64 2147632217, i64 2147632260, i64 2147632300}
!5992 = !DILocation(line: 227, column: 1, scope: !5558)
!5993 = !{i64 2147632452, i64 2147632495, i64 2147632535}
!5994 = !DILocation(line: 228, column: 1, scope: !5558)
!5995 = !{i64 2147632684, i64 2147632727, i64 2147632767}
!5996 = !DILocation(line: 229, column: 1, scope: !5558)
!5997 = !{i64 2147632886, i64 2147632929, i64 2147632969}
!5998 = !DILocation(line: 230, column: 1, scope: !5558)
!5999 = !{i64 2147633136, i64 2147633179, i64 2147633219}
!6000 = !DILocation(line: 231, column: 1, scope: !5558)
!6001 = !{i64 2147633374, i64 2147633417, i64 2147633457}
!6002 = !DILocation(line: 232, column: 1, scope: !5558)
!6003 = !{i64 2147633558, i64 2147633601, i64 2147633641}
!6004 = !DILocation(line: 233, column: 1, scope: !5558)
!6005 = !{i64 2147633782, i64 2147633825, i64 2147633865}
!6006 = !DILocation(line: 234, column: 1, scope: !5558)
!6007 = !{i64 2147634020, i64 2147634063, i64 2147634103}
!6008 = !DILocation(line: 235, column: 1, scope: !5558)
!6009 = !{i64 2147634258, i64 2147634301, i64 2147634341}
!6010 = !DILocation(line: 236, column: 1, scope: !5558)
!6011 = !{i64 2147634451, i64 2147634494, i64 2147634534}
!6012 = !DILocation(line: 237, column: 1, scope: !5558)
!6013 = !{i64 2147634704, i64 2147634747, i64 2147634787}
!6014 = !DILocation(line: 238, column: 1, scope: !5558)
!6015 = !{i64 2147634918, i64 2147634961, i64 2147635001}
!6016 = !DILocation(line: 239, column: 1, scope: !5558)
!6017 = !{i64 2147635126, i64 2147635169, i64 2147635209}
!6018 = !DILocation(line: 240, column: 1, scope: !5558)
!6019 = !{i64 2147635316, i64 2147635359, i64 2147635399}
!6020 = !DILocation(line: 241, column: 1, scope: !5558)
!6021 = !{i64 2147635530, i64 2147635573, i64 2147635613}
!6022 = !DILocation(line: 242, column: 1, scope: !5558)
!6023 = !{i64 2147635792, i64 2147635835, i64 2147635875}
!6024 = !DILocation(line: 243, column: 1, scope: !5558)
!6025 = !{i64 2147636003, i64 2147636046, i64 2147636086}
!6026 = !DILocation(line: 244, column: 1, scope: !5558)
!6027 = !{i64 2147636247, i64 2147636290, i64 2147636330}
!6028 = !DILocation(line: 245, column: 1, scope: !5558)
!6029 = !{i64 2147636458, i64 2147636501, i64 2147636541}
!6030 = !DILocation(line: 246, column: 1, scope: !5558)
!6031 = !{i64 2147636687, i64 2147636730, i64 2147636770}
!6032 = !DILocation(line: 247, column: 1, scope: !5558)
!6033 = !{i64 2147636952, i64 2147636995, i64 2147637035}
!6034 = !DILocation(line: 248, column: 1, scope: !5558)
!6035 = !{i64 2147637157, i64 2147637200, i64 2147637240}
!6036 = !DILocation(line: 249, column: 1, scope: !5558)
!6037 = !{i64 2147637353, i64 2147637396, i64 2147637436}
!6038 = !DILocation(line: 250, column: 1, scope: !5558)
!6039 = !{i64 2147637576, i64 2147637619, i64 2147637659}
!6040 = !DILocation(line: 251, column: 1, scope: !5558)
!6041 = !{i64 2147637739, i64 2147637782, i64 2147637822}
!6042 = !DILocation(line: 252, column: 1, scope: !5558)
!6043 = !{i64 2147637944, i64 2147637987, i64 2147638027}
!6044 = !DILocation(line: 253, column: 1, scope: !5558)
!6045 = !{i64 2147642225, i64 2147642268, i64 2147642308}
!6046 = !DILocation(line: 254, column: 1, scope: !5558)
!6047 = !{i64 2147642439, i64 2147642482, i64 2147642522}
!6048 = !DILocation(line: 255, column: 1, scope: !5558)
!6049 = !{i64 2147642653, i64 2147642696, i64 2147642736}
!6050 = !DILocation(line: 256, column: 1, scope: !5558)
!6051 = !{i64 2147642873, i64 2147642916, i64 2147642956}
!6052 = !DILocation(line: 257, column: 1, scope: !5558)
!6053 = !{i64 2147643084, i64 2147643127, i64 2147643167}
!6054 = !DILocation(line: 258, column: 1, scope: !5558)
!6055 = !{i64 2147643277, i64 2147643320, i64 2147643360}
!6056 = !DILocation(line: 259, column: 1, scope: !5558)
!6057 = !{i64 2147643476, i64 2147643519, i64 2147643559}
!6058 = !DILocation(line: 260, column: 1, scope: !5558)
!6059 = !{i64 2147643648, i64 2147643691, i64 2147643731}
!6060 = !DILocation(line: 261, column: 1, scope: !5558)
!6061 = !{i64 2147643841, i64 2147643884, i64 2147643924}
!6062 = !DILocation(line: 262, column: 1, scope: !5558)
!6063 = !{i64 2147644037, i64 2147644080, i64 2147644120}
!6064 = !DILocation(line: 263, column: 1, scope: !5558)
!6065 = !{i64 2147644264, i64 2147644307, i64 2147644347}
!6066 = !DILocation(line: 264, column: 1, scope: !5558)
!6067 = !{i64 2147644481, i64 2147644524, i64 2147644564}
!6068 = !DILocation(line: 265, column: 1, scope: !5558)
!6069 = !{i64 2147644773, i64 2147644816, i64 2147644856}
!6070 = !DILocation(line: 266, column: 1, scope: !5558)
!6071 = !{i64 2147645005, i64 2147645048, i64 2147645088}
!6072 = !DILocation(line: 267, column: 1, scope: !5558)
!6073 = !{i64 2147645222, i64 2147645265, i64 2147645305}
!6074 = !DILocation(line: 268, column: 1, scope: !5558)
!6075 = !{i64 2147645429, i64 2147645472, i64 2147645512}
!6076 = !DILocation(line: 269, column: 1, scope: !5558)
!6077 = !{i64 2147645630, i64 2147645673, i64 2147645713}
!6078 = !DILocation(line: 270, column: 1, scope: !5558)
!6079 = !{i64 2147645862, i64 2147645905, i64 2147645945}
!6080 = !DILocation(line: 271, column: 1, scope: !5558)
!6081 = !{i64 2147646070, i64 2147646113, i64 2147646153}
!6082 = !DILocation(line: 272, column: 1, scope: !5558)
!6083 = !{i64 2147646260, i64 2147646303, i64 2147646343}
!6084 = !DILocation(line: 273, column: 1, scope: !5558)
!6085 = !{i64 2147646486, i64 2147646529, i64 2147646569}
!6086 = !DILocation(line: 274, column: 1, scope: !5558)
!6087 = !{i64 2147646675, i64 2147646718, i64 2147646758}
!6088 = !DILocation(line: 275, column: 1, scope: !5558)
!6089 = !{i64 2147646946, i64 2147646989, i64 2147647029}
!6090 = !DILocation(line: 276, column: 1, scope: !5558)
!6091 = !{i64 2147647166, i64 2147647209, i64 2147647249}
!6092 = !DILocation(line: 277, column: 1, scope: !5558)
!6093 = !{i64 2147647419, i64 2147647462, i64 2147647502}
!6094 = !DILocation(line: 278, column: 1, scope: !5558)
!6095 = !{i64 2147647627, i64 2147647670, i64 2147647710}
!6096 = !DILocation(line: 279, column: 1, scope: !5558)
!6097 = !{i64 2147647859, i64 2147647902, i64 2147647942}
!6098 = !DILocation(line: 280, column: 1, scope: !5558)
!6099 = !{i64 2147648070, i64 2147648113, i64 2147648153}
!6100 = !DILocation(line: 281, column: 1, scope: !5558)
!6101 = !{i64 2147648260, i64 2147648303, i64 2147648343}
!6102 = !DILocation(line: 282, column: 1, scope: !5558)
!6103 = !{i64 2147648474, i64 2147648517, i64 2147648557}
!6104 = !DILocation(line: 283, column: 1, scope: !5558)
!6105 = !{i64 2147648673, i64 2147648716, i64 2147648756}
!6106 = !DILocation(line: 284, column: 1, scope: !5558)
!6107 = !{i64 2147648860, i64 2147648903, i64 2147648943}
!6108 = !DILocation(line: 285, column: 1, scope: !5558)
!6109 = !{i64 2147649068, i64 2147649111, i64 2147649151}
!6110 = !DILocation(line: 286, column: 1, scope: !5558)
!6111 = !{i64 2147649297, i64 2147649340, i64 2147649380}
!6112 = !DILocation(line: 287, column: 1, scope: !5558)
!6113 = !{i64 2147649499, i64 2147649542, i64 2147649582}
!6114 = !DILocation(line: 288, column: 1, scope: !5558)
!6115 = !{i64 2147649698, i64 2147649741, i64 2147649781}
!6116 = !DILocation(line: 289, column: 1, scope: !5558)
!6117 = !{i64 2147649915, i64 2147649958, i64 2147649998}
!6118 = !DILocation(line: 291, column: 1, scope: !5558)
!6119 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !184, file: !184, line: 30, type: !191, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !6120)
!6120 = !{!6121, !6122}
!6121 = !DILocalVariable(name: "arg", arg: 1, scope: !6119, file: !184, line: 30, type: !193)
!6122 = !DILocalVariable(name: "key", scope: !6119, file: !184, line: 32, type: !137)
!6123 = !DILocation(line: 0, scope: !6119)
!6124 = !DILocation(line: 37, column: 2, scope: !6119)
!6125 = !DILocation(line: 38, column: 2, scope: !6119)
!6126 = !DILocation(line: 55, column: 2, scope: !6127, inlinedAt: !6134)
!6127 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6128, file: !6128, line: 42, type: !6129, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !6131)
!6128 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6129 = !DISubroutineType(types: !6130)
!6130 = !{!32}
!6131 = !{!6132, !6133}
!6132 = !DILocalVariable(name: "key", scope: !6127, file: !6128, line: 44, type: !32)
!6133 = !DILocalVariable(name: "tmp", scope: !6127, file: !6128, line: 53, type: !32)
!6134 = distinct !DILocation(line: 40, column: 8, scope: !6119)
!6135 = !{i64 2101414}
!6136 = !DILocation(line: 0, scope: !6127, inlinedAt: !6134)
!6137 = !DILocalVariable(name: "key", arg: 1, scope: !6138, file: !6128, line: 84, type: !32)
!6138 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6128, file: !6128, line: 84, type: !6139, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !6141)
!6139 = !DISubroutineType(types: !6140)
!6140 = !{null, !32}
!6141 = !{!6137}
!6142 = !DILocation(line: 0, scope: !6138, inlinedAt: !6143)
!6143 = distinct !DILocation(line: 47, column: 2, scope: !6119)
!6144 = !DILocation(line: 95, column: 2, scope: !6138, inlinedAt: !6143)
!6145 = !{i64 2102231}
!6146 = !DILocation(line: 51, column: 18, scope: !6119)
!6147 = !DILocation(line: 53, column: 2, scope: !6119)
!6148 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6149, file: !6149, line: 1609, type: !2826, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !162)
!6149 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6150 = !DILocation(line: 1611, column: 3, scope: !6148)
!6151 = !DILocation(line: 1612, column: 1, scope: !6148)
!6152 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6149, file: !6149, line: 1629, type: !2826, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !162)
!6153 = !DILocation(line: 1631, column: 3, scope: !6152)
!6154 = !DILocation(line: 1632, column: 1, scope: !6152)
!6155 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !225, file: !225, line: 26, type: !231, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !222, retainedNodes: !6156)
!6156 = !{!6157}
!6157 = !DILocalVariable(name: "dev", arg: 1, scope: !6155, file: !225, line: 26, type: !233)
!6158 = !DILocation(line: 0, scope: !6155)
!6159 = !DILocation(line: 68, column: 2, scope: !6155)
!6160 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6161, file: !6161, line: 57, type: !6162, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !6208)
!6161 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6162 = !DISubroutineType(types: !6163)
!6163 = !{null, !32, !6164}
!6164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6165, size: 32)
!6165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6166)
!6166 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2413, line: 141, baseType: !6167)
!6167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2413, line: 97, size: 256, elements: !6168)
!6168 = !{!6169}
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6167, file: !2413, line: 107, baseType: !6170, size: 256)
!6170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2413, line: 98, size: 256, elements: !6171)
!6171 = !{!6172, !6177, !6182, !6187, !6192, !6197, !6202, !6207}
!6172 = !DIDerivedType(tag: DW_TAG_member, scope: !6170, file: !2413, line: 99, baseType: !6173, size: 32)
!6173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6170, file: !2413, line: 99, size: 32, elements: !6174)
!6174 = !{!6175, !6176}
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6173, file: !2413, line: 99, baseType: !137, size: 32)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6173, file: !2413, line: 99, baseType: !137, size: 32)
!6177 = !DIDerivedType(tag: DW_TAG_member, scope: !6170, file: !2413, line: 100, baseType: !6178, size: 32, offset: 32)
!6178 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6170, file: !2413, line: 100, size: 32, elements: !6179)
!6179 = !{!6180, !6181}
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6178, file: !2413, line: 100, baseType: !137, size: 32)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6178, file: !2413, line: 100, baseType: !137, size: 32)
!6182 = !DIDerivedType(tag: DW_TAG_member, scope: !6170, file: !2413, line: 101, baseType: !6183, size: 32, offset: 64)
!6183 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6170, file: !2413, line: 101, size: 32, elements: !6184)
!6184 = !{!6185, !6186}
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6183, file: !2413, line: 101, baseType: !137, size: 32)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6183, file: !2413, line: 101, baseType: !137, size: 32)
!6187 = !DIDerivedType(tag: DW_TAG_member, scope: !6170, file: !2413, line: 102, baseType: !6188, size: 32, offset: 96)
!6188 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6170, file: !2413, line: 102, size: 32, elements: !6189)
!6189 = !{!6190, !6191}
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6188, file: !2413, line: 102, baseType: !137, size: 32)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6188, file: !2413, line: 102, baseType: !137, size: 32)
!6192 = !DIDerivedType(tag: DW_TAG_member, scope: !6170, file: !2413, line: 103, baseType: !6193, size: 32, offset: 128)
!6193 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6170, file: !2413, line: 103, size: 32, elements: !6194)
!6194 = !{!6195, !6196}
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6193, file: !2413, line: 103, baseType: !137, size: 32)
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6193, file: !2413, line: 103, baseType: !137, size: 32)
!6197 = !DIDerivedType(tag: DW_TAG_member, scope: !6170, file: !2413, line: 104, baseType: !6198, size: 32, offset: 160)
!6198 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6170, file: !2413, line: 104, size: 32, elements: !6199)
!6199 = !{!6200, !6201}
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6198, file: !2413, line: 104, baseType: !137, size: 32)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6198, file: !2413, line: 104, baseType: !137, size: 32)
!6202 = !DIDerivedType(tag: DW_TAG_member, scope: !6170, file: !2413, line: 105, baseType: !6203, size: 32, offset: 192)
!6203 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6170, file: !2413, line: 105, size: 32, elements: !6204)
!6204 = !{!6205, !6206}
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6203, file: !2413, line: 105, baseType: !137, size: 32)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6203, file: !2413, line: 105, baseType: !137, size: 32)
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6170, file: !2413, line: 106, baseType: !137, size: 32, offset: 224)
!6208 = !{!6209, !6210}
!6209 = !DILocalVariable(name: "reason", arg: 1, scope: !6160, file: !6161, line: 57, type: !32)
!6210 = !DILocalVariable(name: "esf", arg: 2, scope: !6160, file: !6161, line: 57, type: !6164)
!6211 = !DILocation(line: 0, scope: !6160)
!6212 = !DILocation(line: 63, column: 2, scope: !6160)
!6213 = !DILocation(line: 64, column: 1, scope: !6160)
!6214 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6161, file: !6161, line: 82, type: !6215, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !6230)
!6215 = !DISubroutineType(types: !6216)
!6216 = !{null, !6164, !6217}
!6217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6218, size: 32)
!6218 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !334, line: 37, baseType: !6219)
!6219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !6220)
!6220 = !{!6221, !6222, !6223, !6224, !6225, !6226, !6227, !6228, !6229}
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6219, file: !334, line: 26, baseType: !137, size: 32)
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6219, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!6223 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6219, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6219, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6219, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6219, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6219, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6219, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6219, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!6230 = !{!6231, !6232, !6233}
!6231 = !DILocalVariable(name: "esf", arg: 1, scope: !6214, file: !6161, line: 82, type: !6164)
!6232 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6214, file: !6161, line: 82, type: !6217)
!6233 = !DILocalVariable(name: "reason", scope: !6214, file: !6161, line: 88, type: !32)
!6234 = !DILocation(line: 0, scope: !6214)
!6235 = !DILocation(line: 88, column: 35, scope: !6214)
!6236 = !DILocation(line: 108, column: 2, scope: !6214)
!6237 = !DILocation(line: 131, column: 1, scope: !6214)
!6238 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6161, file: !6161, line: 133, type: !6239, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !6241)
!6239 = !DISubroutineType(types: !6240)
!6240 = !{null, !102}
!6241 = !{!6242, !6243, !6244}
!6242 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6238, file: !6161, line: 133, type: !102)
!6243 = !DILocalVariable(name: "ssf_contents", scope: !6238, file: !6161, line: 135, type: !149)
!6244 = !DILocalVariable(name: "oops_esf", scope: !6238, file: !6161, line: 136, type: !6166)
!6245 = !DILocation(line: 0, scope: !6238)
!6246 = !DILocation(line: 136, column: 2, scope: !6238)
!6247 = !DILocation(line: 136, column: 15, scope: !6238)
!6248 = !DILocation(line: 139, column: 22, scope: !6238)
!6249 = !DILocation(line: 139, column: 17, scope: !6238)
!6250 = !DILocation(line: 139, column: 20, scope: !6238)
!6251 = !DILocation(line: 141, column: 2, scope: !6238)
!6252 = !DILocation(line: 142, column: 2, scope: !6238)
!6253 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6254, file: !6254, line: 40, type: !6139, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !6255)
!6254 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6255 = !{!6256}
!6256 = !DILocalVariable(name: "irq", arg: 1, scope: !6253, file: !6254, line: 40, type: !32)
!6257 = !DILocation(line: 0, scope: !6253)
!6258 = !DILocation(line: 42, column: 2, scope: !6253)
!6259 = !DILocation(line: 43, column: 1, scope: !6253)
!6260 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !402, file: !402, line: 1684, type: !6261, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !6263)
!6261 = !DISubroutineType(types: !6262)
!6262 = !{null, !659}
!6263 = !{!6264}
!6264 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6260, file: !402, line: 1684, type: !659)
!6265 = !DILocation(line: 0, scope: !6260)
!6266 = !DILocation(line: 1686, column: 23, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6260, file: !402, line: 1686, column: 7)
!6268 = !DILocation(line: 1686, column: 7, scope: !6260)
!6269 = !DILocation(line: 1688, column: 5, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6267, file: !402, line: 1687, column: 3)
!6271 = !{i64 2151069339}
!6272 = !DILocation(line: 1689, column: 81, scope: !6270)
!6273 = !DILocation(line: 1689, column: 60, scope: !6270)
!6274 = !DILocation(line: 1689, column: 34, scope: !6270)
!6275 = !DILocation(line: 1689, column: 5, scope: !6270)
!6276 = !DILocation(line: 1689, column: 43, scope: !6270)
!6277 = !DILocation(line: 1690, column: 5, scope: !6270)
!6278 = !{i64 2151069453}
!6279 = !DILocation(line: 1691, column: 3, scope: !6270)
!6280 = !DILocation(line: 1692, column: 1, scope: !6260)
!6281 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6254, file: !6254, line: 45, type: !6139, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !6282)
!6282 = !{!6283}
!6283 = !DILocalVariable(name: "irq", arg: 1, scope: !6281, file: !6254, line: 45, type: !32)
!6284 = !DILocation(line: 0, scope: !6281)
!6285 = !DILocation(line: 47, column: 2, scope: !6281)
!6286 = !DILocation(line: 48, column: 1, scope: !6281)
!6287 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !402, file: !402, line: 1722, type: !6261, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !6288)
!6288 = !{!6289}
!6289 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6287, file: !402, line: 1722, type: !659)
!6290 = !DILocation(line: 0, scope: !6287)
!6291 = !DILocation(line: 1724, column: 23, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6287, file: !402, line: 1724, column: 7)
!6293 = !DILocation(line: 1724, column: 7, scope: !6287)
!6294 = !DILocation(line: 1726, column: 81, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6292, file: !402, line: 1725, column: 3)
!6296 = !DILocation(line: 1726, column: 60, scope: !6295)
!6297 = !DILocation(line: 1726, column: 34, scope: !6295)
!6298 = !DILocation(line: 1726, column: 5, scope: !6295)
!6299 = !DILocation(line: 1726, column: 43, scope: !6295)
!6300 = !DILocation(line: 271, column: 3, scope: !6301, inlinedAt: !6303)
!6301 = distinct !DISubprogram(name: "__DSB", scope: !6302, file: !6302, line: 269, type: !2826, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !162)
!6302 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6303 = distinct !DILocation(line: 1727, column: 5, scope: !6295)
!6304 = !{i64 3523722}
!6305 = !DILocation(line: 260, column: 3, scope: !6306, inlinedAt: !6307)
!6306 = distinct !DISubprogram(name: "__ISB", scope: !6302, file: !6302, line: 258, type: !2826, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !162)
!6307 = distinct !DILocation(line: 1728, column: 5, scope: !6295)
!6308 = !{i64 3523439}
!6309 = !DILocation(line: 1729, column: 3, scope: !6295)
!6310 = !DILocation(line: 1730, column: 1, scope: !6287)
!6311 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6254, file: !6254, line: 50, type: !6312, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !6314)
!6312 = !DISubroutineType(types: !6313)
!6313 = !{!103, !32}
!6314 = !{!6315}
!6315 = !DILocalVariable(name: "irq", arg: 1, scope: !6311, file: !6254, line: 50, type: !32)
!6316 = !DILocation(line: 0, scope: !6311)
!6317 = !DILocation(line: 52, column: 20, scope: !6311)
!6318 = !DILocation(line: 52, column: 9, scope: !6311)
!6319 = !DILocation(line: 52, column: 41, scope: !6311)
!6320 = !DILocation(line: 52, column: 39, scope: !6311)
!6321 = !DILocation(line: 52, column: 2, scope: !6311)
!6322 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6254, file: !6254, line: 64, type: !6323, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !6325)
!6323 = !DISubroutineType(types: !6324)
!6324 = !{null, !32, !32, !137}
!6325 = !{!6326, !6327, !6328}
!6326 = !DILocalVariable(name: "irq", arg: 1, scope: !6322, file: !6254, line: 64, type: !32)
!6327 = !DILocalVariable(name: "prio", arg: 2, scope: !6322, file: !6254, line: 64, type: !32)
!6328 = !DILocalVariable(name: "flags", arg: 3, scope: !6322, file: !6254, line: 64, type: !137)
!6329 = !DILocation(line: 0, scope: !6322)
!6330 = !DILocation(line: 83, column: 8, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6332, file: !6254, line: 82, column: 9)
!6332 = distinct !DILexicalBlock(scope: !6322, file: !6254, line: 76, column: 6)
!6333 = !DILocation(line: 95, column: 2, scope: !6322)
!6334 = !DILocation(line: 96, column: 1, scope: !6322)
!6335 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !402, file: !402, line: 1814, type: !6336, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !6338)
!6336 = !DISubroutineType(types: !6337)
!6337 = !{null, !659, !137}
!6338 = !{!6339, !6340}
!6339 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6335, file: !402, line: 1814, type: !659)
!6340 = !DILocalVariable(name: "priority", arg: 2, scope: !6335, file: !402, line: 1814, type: !137)
!6341 = !DILocation(line: 0, scope: !6335)
!6342 = !DILocation(line: 0, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6335, file: !402, line: 1816, column: 7)
!6344 = !DILocation(line: 1816, column: 7, scope: !6335)
!6345 = !DILocation(line: 1824, column: 1, scope: !6335)
!6346 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6254, file: !6254, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !6347)
!6347 = !{!6348}
!6348 = !DILocalVariable(name: "unused", arg: 1, scope: !6346, file: !6254, line: 155, type: !13)
!6349 = !DILocation(line: 0, scope: !6346)
!6350 = !DILocation(line: 159, column: 2, scope: !6346)
!6351 = !DILocation(line: 160, column: 1, scope: !6346)
!6352 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6353, file: !6353, line: 87, type: !2826, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !162)
!6353 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6354 = !DILocation(line: 89, column: 2, scope: !6352)
!6355 = !DILocation(line: 90, column: 2, scope: !6352)
!6356 = !DILocation(line: 91, column: 1, scope: !6352)
!6357 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6353, file: !6353, line: 23, type: !2826, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!6358 = !DISubprogram(name: "z_arm_int_exit", scope: !6359, file: !6359, line: 153, type: !2826, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!6359 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6360 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6361, file: !6361, line: 256, type: !2826, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !162)
!6361 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6362 = !DILocation(line: 258, column: 2, scope: !6360)
!6363 = !DILocation(line: 260, column: 2, scope: !6360)
!6364 = !DILocation(line: 262, column: 2, scope: !6360)
!6365 = !DILocation(line: 263, column: 2, scope: !6360)
!6366 = !DILocation(line: 267, column: 2, scope: !6360)
!6367 = !DILocation(line: 268, column: 2, scope: !6360)
!6368 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6361, file: !6361, line: 53, type: !2826, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !162)
!6369 = !DILocation(line: 55, column: 12, scope: !6368)
!6370 = !DILocation(line: 271, column: 3, scope: !6371, inlinedAt: !6372)
!6371 = distinct !DISubprogram(name: "__DSB", scope: !6302, file: !6302, line: 269, type: !2826, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !162)
!6372 = distinct !DILocation(line: 56, column: 2, scope: !6368)
!6373 = !{i64 3522393}
!6374 = !DILocation(line: 260, column: 3, scope: !6375, inlinedAt: !6376)
!6375 = distinct !DISubprogram(name: "__ISB", scope: !6302, file: !6302, line: 258, type: !2826, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !162)
!6376 = distinct !DILocation(line: 57, column: 2, scope: !6368)
!6377 = !{i64 3522110}
!6378 = !DILocation(line: 58, column: 1, scope: !6368)
!6379 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6361, file: !6361, line: 96, type: !2826, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !162)
!6380 = !DILocation(line: 103, column: 13, scope: !6379)
!6381 = !DILocation(line: 975, column: 3, scope: !6382, inlinedAt: !6385)
!6382 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6302, file: !6302, line: 971, type: !135, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !6383)
!6383 = !{!6384}
!6384 = !DILocalVariable(name: "result", scope: !6382, file: !6302, line: 973, type: !137)
!6385 = distinct !DILocation(line: 189, column: 16, scope: !6379)
!6386 = !{i64 3543223}
!6387 = !DILocation(line: 0, scope: !6382, inlinedAt: !6385)
!6388 = !DILocation(line: 189, column: 32, scope: !6379)
!6389 = !DILocalVariable(name: "control", arg: 1, scope: !6390, file: !6302, line: 1001, type: !137)
!6390 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6302, file: !6302, line: 1001, type: !6391, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !6393)
!6391 = !DISubroutineType(types: !6392)
!6392 = !{null, !137}
!6393 = !{!6389}
!6394 = !DILocation(line: 0, scope: !6390, inlinedAt: !6395)
!6395 = distinct !DILocation(line: 189, column: 2, scope: !6379)
!6396 = !DILocation(line: 1003, column: 3, scope: !6390, inlinedAt: !6395)
!6397 = !{i64 3543943}
!6398 = !DILocation(line: 260, column: 3, scope: !6375, inlinedAt: !6399)
!6399 = distinct !DILocation(line: 1004, column: 3, scope: !6390, inlinedAt: !6395)
!6400 = !DILocation(line: 191, column: 1, scope: !6379)
!6401 = distinct !DISubprogram(name: "arch_swap", scope: !6402, file: !6402, line: 33, type: !6312, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !6403)
!6402 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6403 = !{!6404}
!6404 = !DILocalVariable(name: "key", arg: 1, scope: !6401, file: !6402, line: 33, type: !32)
!6405 = !DILocation(line: 0, scope: !6401)
!6406 = !DILocation(line: 36, column: 2, scope: !6401)
!6407 = !DILocation(line: 36, column: 17, scope: !6401)
!6408 = !DILocation(line: 36, column: 25, scope: !6401)
!6409 = !DILocation(line: 37, column: 37, scope: !6401)
!6410 = !DILocation(line: 37, column: 17, scope: !6401)
!6411 = !DILocation(line: 37, column: 35, scope: !6401)
!6412 = !DILocation(line: 41, column: 12, scope: !6401)
!6413 = !DILocalVariable(name: "key", arg: 1, scope: !6414, file: !6128, line: 84, type: !32)
!6414 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6128, file: !6128, line: 84, type: !6139, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !6415)
!6415 = !{!6413}
!6416 = !DILocation(line: 0, scope: !6414, inlinedAt: !6417)
!6417 = distinct !DILocation(line: 44, column: 2, scope: !6401)
!6418 = !DILocation(line: 95, column: 2, scope: !6414, inlinedAt: !6417)
!6419 = !{i64 2221715}
!6420 = !DILocation(line: 53, column: 9, scope: !6401)
!6421 = !DILocation(line: 53, column: 24, scope: !6401)
!6422 = !DILocation(line: 53, column: 2, scope: !6401)
!6423 = distinct !DISubprogram(name: "arch_new_thread", scope: !6424, file: !6424, line: 56, type: !6425, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2408, retainedNodes: !6532)
!6424 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6425 = !DISubroutineType(types: !6426)
!6426 = !{null, !6427, !6527, !1022, !3154, !102, !102, !102}
!6427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6428, size: 32)
!6428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !6429)
!6429 = !{!6430, !6488, !6500, !6501, !6502, !6503, !6509, !6522}
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6428, file: !263, line: 247, baseType: !6431, size: 384)
!6431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !6432)
!6432 = !{!6433, !6457, !6464, !6465, !6466, !6475, !6476, !6477}
!6433 = !DIDerivedType(tag: DW_TAG_member, scope: !6431, file: !263, line: 60, baseType: !6434, size: 64)
!6434 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6431, file: !263, line: 60, size: 64, elements: !6435)
!6435 = !{!6436, !6451}
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6434, file: !263, line: 61, baseType: !6437, size: 64)
!6437 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !6438)
!6438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !6439)
!6439 = !{!6440, !6446}
!6440 = !DIDerivedType(tag: DW_TAG_member, scope: !6438, file: !273, line: 38, baseType: !6441, size: 32)
!6441 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6438, file: !273, line: 38, size: 32, elements: !6442)
!6442 = !{!6443, !6445}
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6441, file: !273, line: 39, baseType: !6444, size: 32)
!6444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6438, size: 32)
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6441, file: !273, line: 40, baseType: !6444, size: 32)
!6446 = !DIDerivedType(tag: DW_TAG_member, scope: !6438, file: !273, line: 42, baseType: !6447, size: 32, offset: 32)
!6447 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6438, file: !273, line: 42, size: 32, elements: !6448)
!6448 = !{!6449, !6450}
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6447, file: !273, line: 43, baseType: !6444, size: 32)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6447, file: !273, line: 44, baseType: !6444, size: 32)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6434, file: !263, line: 62, baseType: !6452, size: 64)
!6452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !6453)
!6453 = !{!6454}
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6452, file: !289, line: 50, baseType: !6455, size: 64)
!6455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6456, size: 64, elements: !294)
!6456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6452, size: 32)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6431, file: !263, line: 68, baseType: !6458, size: 32, offset: 64)
!6458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6459, size: 32)
!6459 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !6460)
!6460 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !6461)
!6461 = !{!6462}
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6460, file: !299, line: 232, baseType: !6463, size: 64)
!6463 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !6438)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6431, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6431, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!6466 = !DIDerivedType(tag: DW_TAG_member, scope: !6431, file: !263, line: 90, baseType: !6467, size: 16, offset: 112)
!6467 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6431, file: !263, line: 90, size: 16, elements: !6468)
!6468 = !{!6469, !6474}
!6469 = !DIDerivedType(tag: DW_TAG_member, scope: !6467, file: !263, line: 91, baseType: !6470, size: 16)
!6470 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6467, file: !263, line: 91, size: 16, elements: !6471)
!6471 = !{!6472, !6473}
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6470, file: !263, line: 96, baseType: !313, size: 8)
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6470, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6467, file: !263, line: 100, baseType: !151, size: 16)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6431, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6431, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6431, file: !263, line: 131, baseType: !6478, size: 192, offset: 192)
!6478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !6479)
!6479 = !{!6480, !6481, !6487}
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6478, file: !299, line: 245, baseType: !6437, size: 64)
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6478, file: !299, line: 246, baseType: !6482, size: 32, offset: 64)
!6482 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !6483)
!6483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6484, size: 32)
!6484 = !DISubroutineType(types: !6485)
!6485 = !{null, !6486}
!6486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6478, size: 32)
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6478, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6428, file: !263, line: 250, baseType: !6489, size: 288, offset: 384)
!6489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !6490)
!6490 = !{!6491, !6492, !6493, !6494, !6495, !6496, !6497, !6498, !6499}
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6489, file: !334, line: 26, baseType: !137, size: 32)
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6489, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6489, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!6494 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6489, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6489, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6489, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6489, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!6498 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6489, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!6499 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6489, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!6500 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6428, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6428, file: !263, line: 256, baseType: !6459, size: 64, offset: 704)
!6502 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6428, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6428, file: !263, line: 300, baseType: !6504, size: 96, offset: 800)
!6504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !6505)
!6505 = !{!6506, !6507, !6508}
!6506 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6504, file: !263, line: 153, baseType: !22, size: 32)
!6507 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6504, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!6508 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6504, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6428, file: !263, line: 325, baseType: !6510, size: 32, offset: 896)
!6510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6511, size: 32)
!6511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !6512)
!6512 = !{!6513, !6519, !6520}
!6513 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6511, file: !357, line: 5074, baseType: !6514, size: 96)
!6514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !6515)
!6515 = !{!6516, !6517, !6518}
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6514, file: !113, line: 57, baseType: !116, size: 32)
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6514, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6514, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6511, file: !357, line: 5075, baseType: !6459, size: 64, offset: 96)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6511, file: !357, line: 5076, baseType: !6521, offset: 160)
!6521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!6522 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6428, file: !263, line: 343, baseType: !6523, size: 64, offset: 928)
!6523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !6524)
!6524 = !{!6525, !6526}
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6523, file: !334, line: 63, baseType: !137, size: 32)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6523, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!6527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6528, size: 32)
!6528 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3155, line: 44, baseType: !6529)
!6529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1901, line: 47, size: 8, elements: !6530)
!6530 = !{!6531}
!6531 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6529, file: !1901, line: 48, baseType: !109, size: 8)
!6532 = !{!6533, !6534, !6535, !6536, !6537, !6538, !6539, !6540}
!6533 = !DILocalVariable(name: "thread", arg: 1, scope: !6423, file: !6424, line: 56, type: !6427)
!6534 = !DILocalVariable(name: "stack", arg: 2, scope: !6423, file: !6424, line: 56, type: !6527)
!6535 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6423, file: !6424, line: 57, type: !1022)
!6536 = !DILocalVariable(name: "entry", arg: 4, scope: !6423, file: !6424, line: 57, type: !3154)
!6537 = !DILocalVariable(name: "p1", arg: 5, scope: !6423, file: !6424, line: 58, type: !102)
!6538 = !DILocalVariable(name: "p2", arg: 6, scope: !6423, file: !6424, line: 58, type: !102)
!6539 = !DILocalVariable(name: "p3", arg: 7, scope: !6423, file: !6424, line: 58, type: !102)
!6540 = !DILocalVariable(name: "iframe", scope: !6423, file: !6424, line: 60, type: !2411)
!6541 = !DILocation(line: 0, scope: !6423)
!6542 = !DILocation(line: 85, column: 11, scope: !6423)
!6543 = !DILocation(line: 93, column: 10, scope: !6423)
!6544 = !DILocation(line: 98, column: 13, scope: !6423)
!6545 = !DILocation(line: 100, column: 15, scope: !6423)
!6546 = !DILocation(line: 100, column: 10, scope: !6423)
!6547 = !DILocation(line: 100, column: 13, scope: !6423)
!6548 = !DILocation(line: 101, column: 15, scope: !6423)
!6549 = !DILocation(line: 101, column: 10, scope: !6423)
!6550 = !DILocation(line: 101, column: 13, scope: !6423)
!6551 = !DILocation(line: 102, column: 15, scope: !6423)
!6552 = !DILocation(line: 102, column: 10, scope: !6423)
!6553 = !DILocation(line: 102, column: 13, scope: !6423)
!6554 = !DILocation(line: 103, column: 15, scope: !6423)
!6555 = !DILocation(line: 103, column: 10, scope: !6423)
!6556 = !DILocation(line: 103, column: 13, scope: !6423)
!6557 = !DILocation(line: 106, column: 10, scope: !6423)
!6558 = !DILocation(line: 106, column: 15, scope: !6423)
!6559 = !DILocation(line: 122, column: 29, scope: !6423)
!6560 = !DILocation(line: 122, column: 23, scope: !6423)
!6561 = !DILocation(line: 122, column: 27, scope: !6423)
!6562 = !DILocation(line: 123, column: 15, scope: !6423)
!6563 = !DILocation(line: 123, column: 23, scope: !6423)
!6564 = !DILocation(line: 143, column: 1, scope: !6423)
!6565 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6424, file: !6424, line: 385, type: !6566, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2408, retainedNodes: !6569)
!6566 = !DISubroutineType(types: !6567)
!6567 = !{!137, !6568, !6568}
!6568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !137)
!6569 = !{!6570, !6571, !6572, !6575}
!6570 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6565, file: !6424, line: 385, type: !6568)
!6571 = !DILocalVariable(name: "psp", arg: 2, scope: !6565, file: !6424, line: 385, type: !6568)
!6572 = !DILocalVariable(name: "thread", scope: !6565, file: !6424, line: 388, type: !6573)
!6573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6574, size: 32)
!6574 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6428)
!6575 = !DILocalVariable(name: "guard_len", scope: !6565, file: !6424, line: 405, type: !137)
!6576 = !DILocation(line: 0, scope: !6565)
!6577 = !DILocation(line: 388, column: 34, scope: !6565)
!6578 = !DILocation(line: 390, column: 13, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6565, file: !6424, line: 390, column: 6)
!6580 = !DILocation(line: 390, column: 6, scope: !6565)
!6581 = !DILocation(line: 438, column: 6, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6565, file: !6424, line: 438, column: 6)
!6583 = !DILocation(line: 438, column: 6, scope: !6565)
!6584 = !DILocation(line: 442, column: 3, scope: !6585)
!6585 = distinct !DILexicalBlock(scope: !6582, file: !6424, line: 440, column: 22)
!6586 = !DILocation(line: 455, column: 1, scope: !6565)
!6587 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6424, file: !6424, line: 530, type: !6588, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2408, retainedNodes: !6590)
!6588 = !DISubroutineType(types: !6589)
!6589 = !{null, !6427, !1022, !3154}
!6590 = !{!6591, !6592, !6593}
!6591 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6587, file: !6424, line: 530, type: !6427)
!6592 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6587, file: !6424, line: 530, type: !1022)
!6593 = !DILocalVariable(name: "_main", arg: 3, scope: !6587, file: !6424, line: 531, type: !3154)
!6594 = !DILocation(line: 0, scope: !6587)
!6595 = !DILocation(line: 535, column: 11, scope: !6587)
!6596 = !DILocation(line: 560, column: 2, scope: !6587)
!6597 = !DILocation(line: 576, column: 2, scope: !6587)
!6598 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6599 = !DILocation(line: 603, column: 2, scope: !6587)
!6600 = distinct !DISubprogram(name: "z_arm_fault", scope: !6601, file: !6601, line: 1036, type: !6602, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !6617)
!6601 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6602 = !DISubroutineType(types: !6603)
!6603 = !{null, !137, !137, !137, !6604}
!6604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6605, size: 32)
!6605 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !334, line: 37, baseType: !6606)
!6606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !6607)
!6607 = !{!6608, !6609, !6610, !6611, !6612, !6613, !6614, !6615, !6616}
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6606, file: !334, line: 26, baseType: !137, size: 32)
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6606, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6606, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6606, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6606, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6606, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!6614 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6606, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!6615 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6606, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6606, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!6617 = !{!6618, !6619, !6620, !6621, !6622, !6623, !6624, !6625, !6626, !6627}
!6618 = !DILocalVariable(name: "msp", arg: 1, scope: !6600, file: !6601, line: 1036, type: !137)
!6619 = !DILocalVariable(name: "psp", arg: 2, scope: !6600, file: !6601, line: 1036, type: !137)
!6620 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6600, file: !6601, line: 1036, type: !137)
!6621 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6600, file: !6601, line: 1037, type: !6604)
!6622 = !DILocalVariable(name: "reason", scope: !6600, file: !6601, line: 1039, type: !137)
!6623 = !DILocalVariable(name: "fault", scope: !6600, file: !6601, line: 1040, type: !103)
!6624 = !DILocalVariable(name: "recoverable", scope: !6600, file: !6601, line: 1041, type: !211)
!6625 = !DILocalVariable(name: "nested_exc", scope: !6600, file: !6601, line: 1041, type: !211)
!6626 = !DILocalVariable(name: "esf", scope: !6600, file: !6601, line: 1042, type: !2479)
!6627 = !DILocalVariable(name: "esf_copy", scope: !6600, file: !6601, line: 1047, type: !2480)
!6628 = !DILocation(line: 0, scope: !6600)
!6629 = !DILocation(line: 1040, column: 19, scope: !6600)
!6630 = !DILocation(line: 1040, column: 24, scope: !6600)
!6631 = !DILocation(line: 1041, column: 2, scope: !6600)
!6632 = !DILocation(line: 1047, column: 2, scope: !6600)
!6633 = !DILocation(line: 1047, column: 15, scope: !6600)
!6634 = !DILocalVariable(name: "key", arg: 1, scope: !6635, file: !6128, line: 84, type: !32)
!6635 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6128, file: !6128, line: 84, type: !6139, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !6636)
!6636 = !{!6634}
!6637 = !DILocation(line: 0, scope: !6635, inlinedAt: !6638)
!6638 = distinct !DILocation(line: 1050, column: 2, scope: !6600)
!6639 = !DILocation(line: 95, column: 2, scope: !6635, inlinedAt: !6638)
!6640 = !{i64 2254959}
!6641 = !DILocation(line: 1055, column: 9, scope: !6600)
!6642 = !DILocation(line: 1063, column: 11, scope: !6600)
!6643 = !DILocation(line: 1064, column: 6, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6600, file: !6601, line: 1064, column: 6)
!6645 = !{i8 0, i8 2}
!6646 = !DILocation(line: 1064, column: 6, scope: !6600)
!6647 = !DILocation(line: 1070, column: 20, scope: !6600)
!6648 = !DILocation(line: 1070, column: 2, scope: !6600)
!6649 = !DILocation(line: 1089, column: 6, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6600, file: !6601, line: 1089, column: 6)
!6651 = !DILocation(line: 0, scope: !6650)
!6652 = !DILocation(line: 1089, column: 6, scope: !6600)
!6653 = !DILocation(line: 1090, column: 28, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6655, file: !6601, line: 1090, column: 7)
!6655 = distinct !DILexicalBlock(scope: !6650, file: !6601, line: 1089, column: 18)
!6656 = !DILocation(line: 1090, column: 44, scope: !6654)
!6657 = !DILocation(line: 1090, column: 7, scope: !6655)
!6658 = !DILocation(line: 1091, column: 24, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6654, file: !6601, line: 1090, column: 50)
!6660 = !DILocation(line: 1092, column: 3, scope: !6659)
!6661 = !DILocation(line: 1094, column: 23, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6650, file: !6601, line: 1093, column: 9)
!6663 = !DILocation(line: 1097, column: 2, scope: !6600)
!6664 = !DILocation(line: 1098, column: 1, scope: !6600)
!6665 = distinct !DISubprogram(name: "get_esf", scope: !6601, file: !6601, line: 894, type: !6666, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !6669)
!6666 = !DISubroutineType(types: !6667)
!6667 = !{!2479, !137, !137, !137, !6668}
!6668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 32)
!6669 = !{!6670, !6671, !6672, !6673, !6674, !6675}
!6670 = !DILocalVariable(name: "msp", arg: 1, scope: !6665, file: !6601, line: 894, type: !137)
!6671 = !DILocalVariable(name: "psp", arg: 2, scope: !6665, file: !6601, line: 894, type: !137)
!6672 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6665, file: !6601, line: 894, type: !137)
!6673 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6665, file: !6601, line: 895, type: !6668)
!6674 = !DILocalVariable(name: "alternative_state_exc", scope: !6665, file: !6601, line: 897, type: !211)
!6675 = !DILocalVariable(name: "ptr_esf", scope: !6665, file: !6601, line: 898, type: !2479)
!6676 = !DILocation(line: 0, scope: !6665)
!6677 = !DILocation(line: 900, column: 14, scope: !6665)
!6678 = !DILocation(line: 902, column: 49, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6665, file: !6601, line: 902, column: 6)
!6680 = !DILocation(line: 902, column: 6, scope: !6665)
!6681 = !DILocation(line: 983, column: 18, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6665, file: !6601, line: 983, column: 6)
!6683 = !DILocation(line: 991, column: 7, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6685, file: !6601, line: 990, column: 30)
!6685 = distinct !DILexicalBlock(scope: !6665, file: !6601, line: 990, column: 6)
!6686 = !DILocation(line: 998, column: 16, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6688, file: !6601, line: 995, column: 10)
!6688 = distinct !DILexicalBlock(scope: !6684, file: !6601, line: 991, column: 7)
!6689 = !DILocation(line: 1002, column: 2, scope: !6665)
!6690 = !DILocation(line: 1003, column: 1, scope: !6665)
!6691 = distinct !DISubprogram(name: "fault_handle", scope: !6601, file: !6601, line: 786, type: !6692, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !6694)
!6692 = !DISubroutineType(types: !6693)
!6693 = !{!137, !2479, !103, !6668}
!6694 = !{!6695, !6696, !6697, !6698}
!6695 = !DILocalVariable(name: "esf", arg: 1, scope: !6691, file: !6601, line: 786, type: !2479)
!6696 = !DILocalVariable(name: "fault", arg: 2, scope: !6691, file: !6601, line: 786, type: !103)
!6697 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6691, file: !6601, line: 786, type: !6668)
!6698 = !DILocalVariable(name: "reason", scope: !6691, file: !6601, line: 788, type: !137)
!6699 = !DILocation(line: 0, scope: !6691)
!6700 = !DILocation(line: 790, column: 15, scope: !6691)
!6701 = !DILocation(line: 792, column: 2, scope: !6691)
!6702 = !DILocation(line: 794, column: 12, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6691, file: !6601, line: 792, column: 17)
!6704 = !DILocation(line: 795, column: 3, scope: !6703)
!6705 = !DILocation(line: 800, column: 12, scope: !6703)
!6706 = !DILocation(line: 801, column: 3, scope: !6703)
!6707 = !DILocation(line: 803, column: 12, scope: !6703)
!6708 = !DILocation(line: 804, column: 3, scope: !6703)
!6709 = !DILocation(line: 806, column: 12, scope: !6703)
!6710 = !DILocation(line: 807, column: 3, scope: !6703)
!6711 = !DILocation(line: 814, column: 3, scope: !6703)
!6712 = !DILocation(line: 815, column: 3, scope: !6703)
!6713 = !DILocation(line: 829, column: 2, scope: !6691)
!6714 = distinct !DISubprogram(name: "hard_fault", scope: !6601, file: !6601, line: 709, type: !6715, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !6717)
!6715 = !DISubroutineType(types: !6716)
!6716 = !{!137, !2479, !6668}
!6717 = !{!6718, !6719, !6720}
!6718 = !DILocalVariable(name: "esf", arg: 1, scope: !6714, file: !6601, line: 709, type: !2479)
!6719 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6714, file: !6601, line: 709, type: !6668)
!6720 = !DILocalVariable(name: "reason", scope: !6714, file: !6601, line: 711, type: !137)
!6721 = !DILocation(line: 0, scope: !6714)
!6722 = !DILocation(line: 732, column: 15, scope: !6714)
!6723 = !DILocation(line: 734, column: 12, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6714, file: !6601, line: 734, column: 6)
!6725 = !DILocation(line: 734, column: 17, scope: !6724)
!6726 = !DILocation(line: 734, column: 41, scope: !6724)
!6727 = !DILocation(line: 734, column: 6, scope: !6714)
!6728 = !DILocation(line: 736, column: 19, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6724, file: !6601, line: 736, column: 13)
!6730 = !DILocation(line: 736, column: 49, scope: !6729)
!6731 = !DILocation(line: 736, column: 13, scope: !6724)
!6732 = !DILocation(line: 738, column: 19, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6729, file: !6601, line: 738, column: 13)
!6734 = !DILocation(line: 738, column: 24, scope: !6733)
!6735 = !DILocation(line: 738, column: 47, scope: !6733)
!6736 = !DILocation(line: 738, column: 13, scope: !6729)
!6737 = !DILocation(line: 740, column: 7, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6739, file: !6601, line: 740, column: 7)
!6739 = distinct !DILexicalBlock(scope: !6733, file: !6601, line: 738, column: 53)
!6740 = !DILocation(line: 740, column: 7, scope: !6739)
!6741 = !DILocation(line: 742, column: 24, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6738, file: !6601, line: 740, column: 38)
!6743 = !DILocation(line: 743, column: 3, scope: !6742)
!6744 = !DILocation(line: 743, column: 20, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6738, file: !6601, line: 743, column: 14)
!6746 = !DILocation(line: 743, column: 25, scope: !6745)
!6747 = !DILocation(line: 743, column: 52, scope: !6745)
!6748 = !DILocation(line: 743, column: 14, scope: !6738)
!6749 = !DILocation(line: 744, column: 13, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6745, file: !6601, line: 743, column: 58)
!6751 = !DILocation(line: 745, column: 3, scope: !6750)
!6752 = !DILocation(line: 745, column: 20, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6745, file: !6601, line: 745, column: 14)
!6754 = !DILocation(line: 745, column: 25, scope: !6753)
!6755 = !DILocation(line: 745, column: 52, scope: !6753)
!6756 = !DILocation(line: 745, column: 14, scope: !6745)
!6757 = !DILocation(line: 746, column: 13, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6753, file: !6601, line: 745, column: 58)
!6759 = !DILocation(line: 747, column: 3, scope: !6758)
!6760 = !DILocation(line: 747, column: 20, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6753, file: !6601, line: 747, column: 14)
!6762 = !DILocation(line: 747, column: 52, scope: !6761)
!6763 = !DILocation(line: 747, column: 14, scope: !6753)
!6764 = !DILocation(line: 748, column: 13, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6761, file: !6601, line: 747, column: 58)
!6766 = !DILocation(line: 753, column: 3, scope: !6765)
!6767 = !DILocation(line: 766, column: 2, scope: !6714)
!6768 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6601, file: !6601, line: 229, type: !6692, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !6769)
!6769 = !{!6770, !6771, !6772, !6773, !6774, !6775, !6778}
!6770 = !DILocalVariable(name: "esf", arg: 1, scope: !6768, file: !6601, line: 229, type: !2479)
!6771 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6768, file: !6601, line: 229, type: !103)
!6772 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6768, file: !6601, line: 230, type: !6668)
!6773 = !DILocalVariable(name: "reason", scope: !6768, file: !6601, line: 232, type: !137)
!6774 = !DILocalVariable(name: "mmfar", scope: !6768, file: !6601, line: 233, type: !137)
!6775 = !DILocalVariable(name: "temp", scope: !6776, file: !6601, line: 254, type: !137)
!6776 = distinct !DILexicalBlock(scope: !6777, file: !6601, line: 244, column: 48)
!6777 = distinct !DILexicalBlock(scope: !6768, file: !6601, line: 244, column: 6)
!6778 = !DILocalVariable(name: "min_stack_ptr", scope: !6779, file: !6601, line: 309, type: !137)
!6779 = distinct !DILexicalBlock(scope: !6780, file: !6601, line: 308, column: 43)
!6780 = distinct !DILexicalBlock(scope: !6781, file: !6601, line: 308, column: 7)
!6781 = distinct !DILexicalBlock(scope: !6782, file: !6601, line: 289, column: 40)
!6782 = distinct !DILexicalBlock(scope: !6768, file: !6601, line: 288, column: 6)
!6783 = !DILocation(line: 0, scope: !6768)
!6784 = !DILocation(line: 237, column: 12, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6768, file: !6601, line: 237, column: 6)
!6786 = !DILocation(line: 241, column: 12, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6768, file: !6601, line: 241, column: 6)
!6788 = !DILocation(line: 244, column: 12, scope: !6777)
!6789 = !DILocation(line: 244, column: 17, scope: !6777)
!6790 = !DILocation(line: 244, column: 42, scope: !6777)
!6791 = !DILocation(line: 244, column: 6, scope: !6768)
!6792 = !DILocation(line: 254, column: 24, scope: !6776)
!6793 = !DILocation(line: 0, scope: !6776)
!6794 = !DILocation(line: 256, column: 13, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6776, file: !6601, line: 256, column: 7)
!6796 = !DILocation(line: 256, column: 18, scope: !6795)
!6797 = !DILocation(line: 256, column: 44, scope: !6795)
!6798 = !DILocation(line: 256, column: 7, scope: !6776)
!6799 = !DILocation(line: 259, column: 24, scope: !6800)
!6800 = distinct !DILexicalBlock(scope: !6801, file: !6601, line: 259, column: 8)
!6801 = distinct !DILexicalBlock(scope: !6795, file: !6601, line: 256, column: 50)
!6802 = !DILocation(line: 259, column: 8, scope: !6801)
!6803 = !DILocation(line: 261, column: 15, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6800, file: !6601, line: 259, column: 30)
!6805 = !DILocation(line: 262, column: 4, scope: !6804)
!6806 = !DILocation(line: 265, column: 12, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6768, file: !6601, line: 265, column: 6)
!6808 = !DILocation(line: 269, column: 12, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6768, file: !6601, line: 269, column: 6)
!6810 = !DILocation(line: 288, column: 12, scope: !6782)
!6811 = !DILocation(line: 288, column: 17, scope: !6782)
!6812 = !DILocation(line: 288, column: 41, scope: !6782)
!6813 = !DILocation(line: 289, column: 9, scope: !6782)
!6814 = !DILocation(line: 289, column: 14, scope: !6782)
!6815 = !DILocation(line: 288, column: 6, scope: !6768)
!6816 = !DILocation(line: 308, column: 12, scope: !6780)
!6817 = !DILocation(line: 308, column: 17, scope: !6780)
!6818 = !DILocation(line: 308, column: 7, scope: !6781)
!6819 = !DILocation(line: 310, column: 6, scope: !6779)
!6820 = !DILocation(line: 309, column: 29, scope: !6779)
!6821 = !DILocation(line: 0, scope: !6779)
!6822 = !DILocation(line: 312, column: 8, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6779, file: !6601, line: 312, column: 8)
!6824 = !DILocation(line: 312, column: 8, scope: !6779)
!6825 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6826, file: !6302, line: 1099, type: !137)
!6826 = distinct !DISubprogram(name: "__set_PSP", scope: !6302, file: !6302, line: 1099, type: !6391, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !6827)
!6827 = !{!6825}
!6828 = !DILocation(line: 0, scope: !6826, inlinedAt: !6829)
!6829 = distinct !DILocation(line: 338, column: 5, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6823, file: !6601, line: 312, column: 23)
!6831 = !DILocation(line: 1101, column: 3, scope: !6826, inlinedAt: !6829)
!6832 = !{i64 3573362}
!6833 = !DILocation(line: 341, column: 4, scope: !6830)
!6834 = !DILocation(line: 360, column: 12, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !6768, file: !6601, line: 360, column: 6)
!6836 = !DILocation(line: 360, column: 17, scope: !6835)
!6837 = !DILocation(line: 360, column: 41, scope: !6835)
!6838 = !DILocation(line: 360, column: 6, scope: !6768)
!6839 = !DILocation(line: 361, column: 14, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6835, file: !6601, line: 360, column: 47)
!6841 = !DILocation(line: 362, column: 2, scope: !6840)
!6842 = !DILocation(line: 366, column: 12, scope: !6768)
!6843 = !DILocation(line: 369, column: 15, scope: !6768)
!6844 = !DILocation(line: 371, column: 2, scope: !6768)
!6845 = distinct !DISubprogram(name: "bus_fault", scope: !6601, file: !6601, line: 383, type: !6846, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !6848)
!6846 = !DISubroutineType(types: !6847)
!6847 = !{!103, !2479, !103, !6668}
!6848 = !{!6849, !6850, !6851, !6852, !6853}
!6849 = !DILocalVariable(name: "esf", arg: 1, scope: !6845, file: !6601, line: 383, type: !2479)
!6850 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6845, file: !6601, line: 383, type: !103)
!6851 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6845, file: !6601, line: 383, type: !6668)
!6852 = !DILocalVariable(name: "reason", scope: !6845, file: !6601, line: 385, type: !137)
!6853 = !DILocalVariable(name: "bfar", scope: !6854, file: !6601, line: 405, type: !137)
!6854 = distinct !DILexicalBlock(scope: !6855, file: !6601, line: 395, column: 42)
!6855 = distinct !DILexicalBlock(scope: !6845, file: !6601, line: 395, column: 6)
!6856 = !DILocation(line: 0, scope: !6845)
!6857 = !DILocation(line: 389, column: 11, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6845, file: !6601, line: 389, column: 6)
!6859 = !DILocation(line: 392, column: 11, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6845, file: !6601, line: 392, column: 6)
!6861 = !DILocation(line: 395, column: 11, scope: !6855)
!6862 = !DILocation(line: 395, column: 16, scope: !6855)
!6863 = !DILocation(line: 395, column: 6, scope: !6845)
!6864 = !DILocation(line: 405, column: 3, scope: !6854)
!6865 = !DILocation(line: 0, scope: !6854)
!6866 = !DILocation(line: 407, column: 13, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6854, file: !6601, line: 407, column: 7)
!6868 = !DILocation(line: 407, column: 18, scope: !6867)
!6869 = !DILocation(line: 407, column: 44, scope: !6867)
!6870 = !DILocation(line: 407, column: 7, scope: !6854)
!6871 = !DILocation(line: 411, column: 15, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6873, file: !6601, line: 409, column: 30)
!6873 = distinct !DILexicalBlock(scope: !6874, file: !6601, line: 409, column: 8)
!6874 = distinct !DILexicalBlock(scope: !6867, file: !6601, line: 407, column: 50)
!6875 = !DILocation(line: 412, column: 4, scope: !6872)
!6876 = !DILocation(line: 415, column: 11, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6845, file: !6601, line: 415, column: 6)
!6878 = !DILocation(line: 418, column: 12, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6845, file: !6601, line: 418, column: 6)
!6880 = !DILocation(line: 418, column: 17, scope: !6879)
!6881 = !DILocation(line: 418, column: 41, scope: !6879)
!6882 = !DILocation(line: 418, column: 6, scope: !6845)
!6883 = !DILocation(line: 423, column: 18, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6879, file: !6601, line: 423, column: 13)
!6885 = !DILocation(line: 524, column: 12, scope: !6845)
!6886 = !DILocation(line: 526, column: 15, scope: !6845)
!6887 = !DILocation(line: 528, column: 2, scope: !6845)
!6888 = distinct !DISubprogram(name: "usage_fault", scope: !6601, file: !6601, line: 539, type: !6889, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !6893)
!6889 = !DISubroutineType(types: !6890)
!6890 = !{!137, !6891}
!6891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6892, size: 32)
!6892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2480)
!6893 = !{!6894, !6895}
!6894 = !DILocalVariable(name: "esf", arg: 1, scope: !6888, file: !6601, line: 539, type: !6891)
!6895 = !DILocalVariable(name: "reason", scope: !6888, file: !6601, line: 541, type: !137)
!6896 = !DILocation(line: 0, scope: !6888)
!6897 = !DILocation(line: 546, column: 12, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6888, file: !6601, line: 546, column: 6)
!6899 = !DILocation(line: 549, column: 12, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6888, file: !6601, line: 549, column: 6)
!6901 = !DILocation(line: 567, column: 12, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6888, file: !6601, line: 567, column: 6)
!6903 = !DILocation(line: 570, column: 12, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6888, file: !6601, line: 570, column: 6)
!6905 = !DILocation(line: 573, column: 12, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6888, file: !6601, line: 573, column: 6)
!6907 = !DILocation(line: 576, column: 12, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6888, file: !6601, line: 576, column: 6)
!6909 = !DILocation(line: 581, column: 12, scope: !6888)
!6910 = !DILocation(line: 583, column: 2, scope: !6888)
!6911 = distinct !DISubprogram(name: "debug_monitor", scope: !6601, file: !6601, line: 632, type: !6912, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !6914)
!6912 = !DISubroutineType(types: !6913)
!6913 = !{null, !2479, !6668}
!6914 = !{!6915, !6916}
!6915 = !DILocalVariable(name: "esf", arg: 1, scope: !6911, file: !6601, line: 632, type: !2479)
!6916 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6911, file: !6601, line: 632, type: !6668)
!6917 = !DILocation(line: 0, scope: !6911)
!6918 = !DILocation(line: 634, column: 15, scope: !6911)
!6919 = !DILocation(line: 652, column: 1, scope: !6911)
!6920 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6601, file: !6601, line: 658, type: !6921, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !6923)
!6921 = !DISubroutineType(types: !6922)
!6922 = !{!211, !2479}
!6923 = !{!6924, !6925, !6926}
!6924 = !DILocalVariable(name: "esf", arg: 1, scope: !6920, file: !6601, line: 658, type: !2479)
!6925 = !DILocalVariable(name: "ret_addr", scope: !6920, file: !6601, line: 660, type: !150)
!6926 = !DILocalVariable(name: "fault_insn", scope: !6920, file: !6601, line: 686, type: !151)
!6927 = !DILocation(line: 0, scope: !6920)
!6928 = !DILocation(line: 660, column: 46, scope: !6920)
!6929 = !DILocation(line: 660, column: 23, scope: !6920)
!6930 = !DILocation(line: 682, column: 11, scope: !6920)
!6931 = !DILocation(line: 271, column: 3, scope: !6932, inlinedAt: !6933)
!6932 = distinct !DISubprogram(name: "__DSB", scope: !6302, file: !6302, line: 269, type: !2826, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !162)
!6933 = distinct !DILocation(line: 683, column: 2, scope: !6920)
!6934 = !{i64 3549497}
!6935 = !DILocation(line: 260, column: 3, scope: !6936, inlinedAt: !6937)
!6936 = distinct !DISubprogram(name: "__ISB", scope: !6302, file: !6302, line: 258, type: !2826, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !162)
!6937 = distinct !DILocation(line: 684, column: 2, scope: !6920)
!6938 = !{i64 3549214}
!6939 = !DILocation(line: 686, column: 35, scope: !6920)
!6940 = !DILocation(line: 686, column: 24, scope: !6920)
!6941 = !DILocation(line: 688, column: 11, scope: !6920)
!6942 = !DILocation(line: 271, column: 3, scope: !6932, inlinedAt: !6943)
!6943 = distinct !DILocation(line: 689, column: 2, scope: !6920)
!6944 = !DILocation(line: 260, column: 3, scope: !6936, inlinedAt: !6945)
!6945 = distinct !DILocation(line: 690, column: 2, scope: !6920)
!6946 = !DILocation(line: 693, column: 45, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6920, file: !6601, line: 693, column: 6)
!6948 = !DILocation(line: 699, column: 1, scope: !6920)
!6949 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6601, file: !6601, line: 1107, type: !2826, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !162)
!6950 = !DILocation(line: 1111, column: 11, scope: !6949)
!6951 = !DILocation(line: 1136, column: 1, scope: !6949)
!6952 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6953, file: !6953, line: 26, type: !2826, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !6954)
!6953 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6954 = !{!6955}
!6955 = !DILocalVariable(name: "irq", scope: !6952, file: !6953, line: 28, type: !103)
!6956 = !DILocation(line: 0, scope: !6952)
!6957 = !DILocation(line: 30, column: 2, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6952, file: !6953, line: 30, column: 2)
!6959 = !DILocation(line: 31, column: 3, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6961, file: !6953, line: 30, column: 39)
!6961 = distinct !DILexicalBlock(scope: !6958, file: !6953, line: 30, column: 2)
!6962 = !DILocation(line: 30, column: 35, scope: !6961)
!6963 = !DILocation(line: 30, column: 13, scope: !6961)
!6964 = distinct !{!6964, !6957, !6965}
!6965 = !DILocation(line: 32, column: 2, scope: !6958)
!6966 = !DILocation(line: 33, column: 1, scope: !6952)
!6967 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !402, file: !402, line: 1814, type: !6336, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !6968)
!6968 = !{!6969, !6970}
!6969 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6967, file: !402, line: 1814, type: !659)
!6970 = !DILocalVariable(name: "priority", arg: 2, scope: !6967, file: !402, line: 1814, type: !137)
!6971 = !DILocation(line: 0, scope: !6967)
!6972 = !DILocation(line: 1816, column: 7, scope: !6967)
!6973 = !DILocation(line: 0, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6967, file: !402, line: 1816, column: 7)
!6975 = !DILocation(line: 1824, column: 1, scope: !6967)
!6976 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6977, file: !6977, line: 27, type: !6978, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2567, retainedNodes: !7081)
!6977 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6978 = !DISubroutineType(types: !6979)
!6979 = !{null, !6980}
!6980 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !6981)
!6981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6982, size: 32)
!6982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !6983)
!6983 = !{!6984, !7042, !7054, !7055, !7056, !7057, !7063, !7076}
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6982, file: !263, line: 247, baseType: !6985, size: 384)
!6985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !6986)
!6986 = !{!6987, !7011, !7018, !7019, !7020, !7029, !7030, !7031}
!6987 = !DIDerivedType(tag: DW_TAG_member, scope: !6985, file: !263, line: 60, baseType: !6988, size: 64)
!6988 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6985, file: !263, line: 60, size: 64, elements: !6989)
!6989 = !{!6990, !7005}
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6988, file: !263, line: 61, baseType: !6991, size: 64)
!6991 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !6992)
!6992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !6993)
!6993 = !{!6994, !7000}
!6994 = !DIDerivedType(tag: DW_TAG_member, scope: !6992, file: !273, line: 38, baseType: !6995, size: 32)
!6995 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6992, file: !273, line: 38, size: 32, elements: !6996)
!6996 = !{!6997, !6999}
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6995, file: !273, line: 39, baseType: !6998, size: 32)
!6998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6992, size: 32)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6995, file: !273, line: 40, baseType: !6998, size: 32)
!7000 = !DIDerivedType(tag: DW_TAG_member, scope: !6992, file: !273, line: 42, baseType: !7001, size: 32, offset: 32)
!7001 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6992, file: !273, line: 42, size: 32, elements: !7002)
!7002 = !{!7003, !7004}
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7001, file: !273, line: 43, baseType: !6998, size: 32)
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7001, file: !273, line: 44, baseType: !6998, size: 32)
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6988, file: !263, line: 62, baseType: !7006, size: 64)
!7006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !7007)
!7007 = !{!7008}
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7006, file: !289, line: 50, baseType: !7009, size: 64)
!7009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7010, size: 64, elements: !294)
!7010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7006, size: 32)
!7011 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6985, file: !263, line: 68, baseType: !7012, size: 32, offset: 64)
!7012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7013, size: 32)
!7013 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !7014)
!7014 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !7015)
!7015 = !{!7016}
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7014, file: !299, line: 232, baseType: !7017, size: 64)
!7017 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !6992)
!7018 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6985, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!7019 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6985, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!7020 = !DIDerivedType(tag: DW_TAG_member, scope: !6985, file: !263, line: 90, baseType: !7021, size: 16, offset: 112)
!7021 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6985, file: !263, line: 90, size: 16, elements: !7022)
!7022 = !{!7023, !7028}
!7023 = !DIDerivedType(tag: DW_TAG_member, scope: !7021, file: !263, line: 91, baseType: !7024, size: 16)
!7024 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7021, file: !263, line: 91, size: 16, elements: !7025)
!7025 = !{!7026, !7027}
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7024, file: !263, line: 96, baseType: !313, size: 8)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7024, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7021, file: !263, line: 100, baseType: !151, size: 16)
!7029 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6985, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6985, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6985, file: !263, line: 131, baseType: !7032, size: 192, offset: 192)
!7032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !7033)
!7033 = !{!7034, !7035, !7041}
!7034 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7032, file: !299, line: 245, baseType: !6991, size: 64)
!7035 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7032, file: !299, line: 246, baseType: !7036, size: 32, offset: 64)
!7036 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !7037)
!7037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7038, size: 32)
!7038 = !DISubroutineType(types: !7039)
!7039 = !{null, !7040}
!7040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7032, size: 32)
!7041 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7032, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6982, file: !263, line: 250, baseType: !7043, size: 288, offset: 384)
!7043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !7044)
!7044 = !{!7045, !7046, !7047, !7048, !7049, !7050, !7051, !7052, !7053}
!7045 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7043, file: !334, line: 26, baseType: !137, size: 32)
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7043, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!7047 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7043, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!7048 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7043, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!7049 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7043, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!7050 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7043, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!7051 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7043, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!7052 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7043, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!7053 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7043, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6982, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!7055 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6982, file: !263, line: 256, baseType: !7013, size: 64, offset: 704)
!7056 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6982, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!7057 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6982, file: !263, line: 300, baseType: !7058, size: 96, offset: 800)
!7058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !7059)
!7059 = !{!7060, !7061, !7062}
!7060 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7058, file: !263, line: 153, baseType: !22, size: 32)
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7058, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7058, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!7063 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6982, file: !263, line: 325, baseType: !7064, size: 32, offset: 896)
!7064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7065, size: 32)
!7065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !7066)
!7066 = !{!7067, !7073, !7074}
!7067 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7065, file: !357, line: 5074, baseType: !7068, size: 96)
!7068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !7069)
!7069 = !{!7070, !7071, !7072}
!7070 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7068, file: !113, line: 57, baseType: !116, size: 32)
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7068, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!7072 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7068, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!7073 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7065, file: !357, line: 5075, baseType: !7013, size: 64, offset: 96)
!7074 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7065, file: !357, line: 5076, baseType: !7075, offset: 160)
!7075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!7076 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6982, file: !263, line: 343, baseType: !7077, size: 64, offset: 928)
!7077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !7078)
!7078 = !{!7079, !7080}
!7079 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7077, file: !334, line: 63, baseType: !137, size: 32)
!7080 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7077, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!7081 = !{!7082}
!7082 = !DILocalVariable(name: "thread", arg: 1, scope: !6976, file: !6977, line: 27, type: !6980)
!7083 = !DILocation(line: 0, scope: !6976)
!7084 = !DILocation(line: 29, column: 6, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !6976, file: !6977, line: 29, column: 6)
!7086 = !DILocation(line: 29, column: 15, scope: !7085)
!7087 = !DILocation(line: 29, column: 6, scope: !6976)
!7088 = !DILocation(line: 1031, column: 3, scope: !7089, inlinedAt: !7092)
!7089 = distinct !DISubprogram(name: "__get_IPSR", scope: !6302, file: !6302, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2567, retainedNodes: !7090)
!7090 = !{!7091}
!7091 = !DILocalVariable(name: "result", scope: !7089, file: !6302, line: 1029, type: !137)
!7092 = distinct !DILocation(line: 48, column: 10, scope: !7093, inlinedAt: !7097)
!7093 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7094, file: !7094, line: 46, type: !7095, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2567, retainedNodes: !162)
!7094 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7095 = !DISubroutineType(types: !7096)
!7096 = !{!211}
!7097 = distinct !DILocation(line: 30, column: 7, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !7099, file: !6977, line: 30, column: 7)
!7099 = distinct !DILexicalBlock(scope: !7085, file: !6977, line: 29, column: 26)
!7100 = !{i64 3538345}
!7101 = !DILocation(line: 0, scope: !7089, inlinedAt: !7092)
!7102 = !DILocation(line: 48, column: 9, scope: !7093, inlinedAt: !7097)
!7103 = !DILocation(line: 30, column: 7, scope: !7099)
!7104 = !DILocation(line: 42, column: 14, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7098, file: !6977, line: 30, column: 25)
!7106 = !DILocation(line: 48, column: 15, scope: !7105)
!7107 = !DILocation(line: 49, column: 3, scope: !7105)
!7108 = !DILocation(line: 52, column: 2, scope: !6976)
!7109 = !DILocation(line: 53, column: 1, scope: !6976)
!7110 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !258, file: !258, line: 127, type: !2826, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !251, retainedNodes: !162)
!7111 = !DILocation(line: 134, column: 2, scope: !7110)
!7112 = !DILocation(line: 156, column: 1, scope: !7110)
!7113 = !DILocation(line: 0, scope: !257)
!7114 = !DILocation(line: 289, column: 36, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !257, file: !258, line: 285, column: 2)
!7116 = !DILocation(line: 289, column: 42, scope: !7115)
!7117 = !DILocation(line: 300, column: 36, scope: !257)
!7118 = !DILocation(line: 301, column: 35, scope: !257)
!7119 = !DILocation(line: 302, column: 37, scope: !257)
!7120 = !DILocation(line: 311, column: 2, scope: !257)
!7121 = !DILocation(line: 316, column: 1, scope: !257)
!7122 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !430, file: !430, line: 180, type: !2826, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7123 = !DILocation(line: 188, column: 12, scope: !7122)
!7124 = !DILocation(line: 271, column: 3, scope: !7125, inlinedAt: !7126)
!7125 = distinct !DISubprogram(name: "__DSB", scope: !6302, file: !6302, line: 269, type: !2826, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7126 = distinct !DILocation(line: 192, column: 2, scope: !7122)
!7127 = !{i64 3699023}
!7128 = !DILocation(line: 260, column: 3, scope: !7129, inlinedAt: !7130)
!7129 = distinct !DISubprogram(name: "__ISB", scope: !6302, file: !6302, line: 258, type: !2826, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7130 = distinct !DILocation(line: 193, column: 2, scope: !7122)
!7131 = !{i64 3698740}
!7132 = !DILocation(line: 194, column: 1, scope: !7122)
!7133 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !430, file: !430, line: 199, type: !2826, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7134 = !DILocation(line: 282, column: 3, scope: !7135, inlinedAt: !7136)
!7135 = distinct !DISubprogram(name: "__DMB", scope: !6302, file: !6302, line: 280, type: !2826, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7136 = distinct !DILocation(line: 202, column: 2, scope: !7133)
!7137 = !{i64 3699299}
!7138 = !DILocation(line: 205, column: 12, scope: !7133)
!7139 = !DILocation(line: 206, column: 1, scope: !7133)
!7140 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !430, file: !430, line: 275, type: !7141, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7154)
!7141 = !DISubroutineType(types: !7142)
!7142 = !{null, !7143, !1676, !6568, !6568}
!7143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7144, size: 32)
!7144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7145)
!7145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !381, line: 52, size: 96, elements: !7146)
!7146 = !{!7147, !7148, !7149}
!7147 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7145, file: !381, line: 53, baseType: !22, size: 32)
!7148 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7145, file: !381, line: 54, baseType: !120, size: 32, offset: 32)
!7149 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7145, file: !381, line: 55, baseType: !7150, size: 32, offset: 64)
!7150 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !387, line: 151, baseType: !7151)
!7151 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !387, line: 149, size: 32, elements: !7152)
!7152 = !{!7153}
!7153 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7151, file: !387, line: 150, baseType: !137, size: 32)
!7154 = !{!7155, !7156, !7157, !7158}
!7155 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7140, file: !430, line: 276, type: !7143)
!7156 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7140, file: !430, line: 276, type: !1676)
!7157 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7140, file: !430, line: 277, type: !6568)
!7158 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7140, file: !430, line: 277, type: !6568)
!7159 = !DILocation(line: 0, scope: !7140)
!7160 = !DILocation(line: 279, column: 6, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7140, file: !430, line: 279, column: 6)
!7162 = !DILocation(line: 285, column: 1, scope: !7140)
!7163 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7164, file: !7164, line: 220, type: !7165, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7167)
!7164 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7165 = !DISubroutineType(types: !7166)
!7166 = !{!103, !7143, !1676, !6568, !6568}
!7167 = !{!7168, !7169, !7170, !7171, !7172}
!7168 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7163, file: !7164, line: 221, type: !7143)
!7169 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7163, file: !7164, line: 221, type: !1676)
!7170 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7163, file: !7164, line: 222, type: !6568)
!7171 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7163, file: !7164, line: 223, type: !6568)
!7172 = !DILocalVariable(name: "mpu_reg_index", scope: !7163, file: !7164, line: 225, type: !103)
!7173 = !DILocation(line: 0, scope: !7163)
!7174 = !DILocation(line: 225, column: 22, scope: !7163)
!7175 = !DILocation(line: 233, column: 18, scope: !7163)
!7176 = !DILocation(line: 236, column: 23, scope: !7163)
!7177 = !DILocation(line: 236, column: 21, scope: !7163)
!7178 = !DILocation(line: 238, column: 2, scope: !7163)
!7179 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !430, file: !430, line: 105, type: !7180, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7182)
!7180 = !DISubroutineType(types: !7181)
!7181 = !{!103, !7143, !208, !208, !211}
!7182 = !{!7183, !7184, !7185, !7186, !7187, !7188}
!7183 = !DILocalVariable(name: "regions", arg: 1, scope: !7179, file: !430, line: 106, type: !7143)
!7184 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7179, file: !430, line: 106, type: !208)
!7185 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7179, file: !430, line: 106, type: !208)
!7186 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7179, file: !430, line: 107, type: !211)
!7187 = !DILocalVariable(name: "i", scope: !7179, file: !430, line: 109, type: !103)
!7188 = !DILocalVariable(name: "reg_index", scope: !7179, file: !430, line: 110, type: !103)
!7189 = !DILocation(line: 0, scope: !7179)
!7190 = !DILocation(line: 110, column: 18, scope: !7179)
!7191 = !DILocation(line: 112, column: 16, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7193, file: !430, line: 112, column: 2)
!7193 = distinct !DILexicalBlock(scope: !7179, file: !430, line: 112, column: 2)
!7194 = !DILocation(line: 112, column: 2, scope: !7193)
!7195 = !DILocation(line: 113, column: 7, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7197, file: !430, line: 113, column: 7)
!7197 = distinct !DILexicalBlock(scope: !7192, file: !430, line: 112, column: 36)
!7198 = !DILocation(line: 113, column: 18, scope: !7196)
!7199 = !DILocation(line: 113, column: 23, scope: !7196)
!7200 = !DILocation(line: 113, column: 7, scope: !7197)
!7201 = !DILocation(line: 118, column: 23, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7197, file: !430, line: 118, column: 7)
!7203 = !DILocation(line: 119, column: 7, scope: !7202)
!7204 = !DILocation(line: 118, column: 7, scope: !7197)
!7205 = !DILocation(line: 124, column: 36, scope: !7197)
!7206 = !DILocation(line: 124, column: 15, scope: !7197)
!7207 = !DILocation(line: 126, column: 17, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !7197, file: !430, line: 126, column: 7)
!7209 = !DILocation(line: 126, column: 7, scope: !7197)
!7210 = !DILocation(line: 131, column: 12, scope: !7197)
!7211 = !DILocation(line: 132, column: 2, scope: !7197)
!7212 = !DILocation(line: 112, column: 32, scope: !7192)
!7213 = distinct !{!7213, !7194, !7214}
!7214 = !DILocation(line: 132, column: 2, scope: !7193)
!7215 = !DILocation(line: 135, column: 1, scope: !7179)
!7216 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7164, file: !7164, line: 63, type: !7217, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7219)
!7217 = !DISubroutineType(types: !7218)
!7218 = !{!103, !7143}
!7219 = !{!7220, !7221}
!7220 = !DILocalVariable(name: "part", arg: 1, scope: !7216, file: !7164, line: 63, type: !7143)
!7221 = !DILocalVariable(name: "partition_is_valid", scope: !7216, file: !7164, line: 70, type: !103)
!7222 = !DILocation(line: 0, scope: !7216)
!7223 = !DILocation(line: 71, column: 11, scope: !7216)
!7224 = !DILocation(line: 71, column: 37, scope: !7216)
!7225 = !DILocation(line: 72, column: 3, scope: !7216)
!7226 = !DILocation(line: 71, column: 30, scope: !7216)
!7227 = !DILocation(line: 75, column: 11, scope: !7216)
!7228 = !DILocation(line: 75, column: 17, scope: !7216)
!7229 = !DILocation(line: 75, column: 38, scope: !7216)
!7230 = !DILocation(line: 77, column: 2, scope: !7216)
!7231 = distinct !DISubprogram(name: "mpu_configure_region", scope: !430, file: !430, line: 79, type: !7232, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7234)
!7232 = !DISubroutineType(types: !7233)
!7233 = !{!103, !1676, !7143}
!7234 = !{!7235, !7236, !7237}
!7235 = !DILocalVariable(name: "index", arg: 1, scope: !7231, file: !430, line: 79, type: !1676)
!7236 = !DILocalVariable(name: "new_region", arg: 2, scope: !7231, file: !430, line: 80, type: !7143)
!7237 = !DILocalVariable(name: "region_conf", scope: !7231, file: !430, line: 82, type: !419)
!7238 = !DILocation(line: 0, scope: !7231)
!7239 = !DILocation(line: 82, column: 2, scope: !7231)
!7240 = !DILocation(line: 82, column: 24, scope: !7231)
!7241 = !DILocation(line: 87, column: 33, scope: !7231)
!7242 = !DILocation(line: 87, column: 14, scope: !7231)
!7243 = !DILocation(line: 87, column: 19, scope: !7231)
!7244 = !DILocation(line: 91, column: 55, scope: !7231)
!7245 = !DILocation(line: 92, column: 16, scope: !7231)
!7246 = !DILocation(line: 92, column: 53, scope: !7231)
!7247 = !DILocation(line: 91, column: 2, scope: !7231)
!7248 = !DILocation(line: 95, column: 9, scope: !7231)
!7249 = !DILocation(line: 97, column: 1, scope: !7231)
!7250 = !DILocation(line: 95, column: 2, scope: !7231)
!7251 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7164, file: !7164, line: 113, type: !7252, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7257)
!7252 = !DISubroutineType(types: !7253)
!7253 = !{null, !7254, !7255, !137, !137}
!7254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 32)
!7255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7256, size: 32)
!7256 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7150)
!7257 = !{!7258, !7259, !7260, !7261}
!7258 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7251, file: !7164, line: 114, type: !7254)
!7259 = !DILocalVariable(name: "attr", arg: 2, scope: !7251, file: !7164, line: 115, type: !7255)
!7260 = !DILocalVariable(name: "base", arg: 3, scope: !7251, file: !7164, line: 115, type: !137)
!7261 = !DILocalVariable(name: "size", arg: 4, scope: !7251, file: !7164, line: 115, type: !137)
!7262 = !DILocation(line: 0, scope: !7251)
!7263 = !DILocation(line: 127, column: 23, scope: !7251)
!7264 = !DILocation(line: 127, column: 35, scope: !7251)
!7265 = !DILocation(line: 127, column: 33, scope: !7251)
!7266 = !DILocation(line: 127, column: 10, scope: !7251)
!7267 = !DILocation(line: 127, column: 15, scope: !7251)
!7268 = !DILocation(line: 129, column: 1, scope: !7251)
!7269 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !430, file: !430, line: 57, type: !7270, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7272)
!7270 = !DISubroutineType(types: !7271)
!7271 = !{!103, !1676, !417}
!7272 = !{!7273, !7274}
!7273 = !DILocalVariable(name: "index", arg: 1, scope: !7269, file: !430, line: 57, type: !1676)
!7274 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7269, file: !430, line: 58, type: !417)
!7275 = !DILocation(line: 0, scope: !7269)
!7276 = !DILocation(line: 61, column: 6, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7269, file: !430, line: 61, column: 6)
!7278 = !DILocation(line: 61, column: 12, scope: !7277)
!7279 = !DILocation(line: 61, column: 6, scope: !7269)
!7280 = !DILocation(line: 71, column: 2, scope: !7269)
!7281 = !DILocation(line: 73, column: 2, scope: !7269)
!7282 = !DILocation(line: 74, column: 1, scope: !7269)
!7283 = distinct !DISubprogram(name: "region_init", scope: !7164, file: !7164, line: 29, type: !7284, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7286)
!7284 = !DISubroutineType(types: !7285)
!7285 = !{null, !6568, !417}
!7286 = !{!7287, !7288}
!7287 = !DILocalVariable(name: "index", arg: 1, scope: !7283, file: !7164, line: 29, type: !6568)
!7288 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7283, file: !7164, line: 30, type: !417)
!7289 = !DILocation(line: 0, scope: !7283)
!7290 = !DILocation(line: 33, column: 2, scope: !7283)
!7291 = !DILocation(line: 47, column: 28, scope: !7283)
!7292 = !DILocation(line: 47, column: 33, scope: !7283)
!7293 = !DILocation(line: 48, column: 26, scope: !7283)
!7294 = !DILocation(line: 47, column: 12, scope: !7283)
!7295 = !DILocation(line: 49, column: 32, scope: !7283)
!7296 = !DILocation(line: 49, column: 37, scope: !7283)
!7297 = !DILocation(line: 49, column: 12, scope: !7283)
!7298 = !DILocation(line: 53, column: 1, scope: !7283)
!7299 = distinct !DISubprogram(name: "set_region_number", scope: !7300, file: !7300, line: 32, type: !6391, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7301)
!7300 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7301 = !{!7302}
!7302 = !DILocalVariable(name: "index", arg: 1, scope: !7299, file: !7300, line: 32, type: !137)
!7303 = !DILocation(line: 0, scope: !7299)
!7304 = !DILocation(line: 34, column: 11, scope: !7299)
!7305 = !DILocation(line: 35, column: 1, scope: !7299)
!7306 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7164, file: !7164, line: 88, type: !7307, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7309)
!7307 = !DISubroutineType(types: !7308)
!7308 = !{!137, !137}
!7309 = !{!7310}
!7310 = !DILocalVariable(name: "size", arg: 1, scope: !7306, file: !7164, line: 88, type: !137)
!7311 = !DILocation(line: 0, scope: !7306)
!7312 = !DILocation(line: 91, column: 11, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7306, file: !7164, line: 91, column: 6)
!7314 = !DILocation(line: 91, column: 6, scope: !7306)
!7315 = !DILocation(line: 100, column: 11, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7306, file: !7164, line: 100, column: 6)
!7317 = !DILocation(line: 100, column: 6, scope: !7306)
!7318 = !DILocation(line: 104, column: 35, scope: !7306)
!7319 = !DILocation(line: 104, column: 16, scope: !7306)
!7320 = !DILocation(line: 104, column: 50, scope: !7306)
!7321 = !DILocation(line: 104, column: 72, scope: !7306)
!7322 = !DILocation(line: 104, column: 2, scope: !7306)
!7323 = !DILocation(line: 106, column: 1, scope: !7306)
!7324 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !430, file: !430, line: 307, type: !7325, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7327)
!7325 = !DISubroutineType(types: !7326)
!7326 = !{null, !7143, !208}
!7327 = !{!7328, !7329}
!7328 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7324, file: !430, line: 308, type: !7143)
!7329 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7324, file: !430, line: 308, type: !208)
!7330 = !DILocation(line: 0, scope: !7324)
!7331 = !DILocation(line: 310, column: 6, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7324, file: !430, line: 310, column: 6)
!7333 = !DILocation(line: 316, column: 1, scope: !7324)
!7334 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7164, file: !7164, line: 249, type: !7335, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7337)
!7335 = !DISubroutineType(types: !7336)
!7336 = !{!103, !7143, !208}
!7337 = !{!7338, !7339, !7340, !7341}
!7338 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7334, file: !7164, line: 250, type: !7143)
!7339 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7334, file: !7164, line: 250, type: !208)
!7340 = !DILocalVariable(name: "mpu_reg_index", scope: !7334, file: !7164, line: 252, type: !103)
!7341 = !DILocalVariable(name: "i", scope: !7342, file: !7164, line: 264, type: !103)
!7342 = distinct !DILexicalBlock(scope: !7343, file: !7164, line: 264, column: 3)
!7343 = distinct !DILexicalBlock(scope: !7344, file: !7164, line: 261, column: 32)
!7344 = distinct !DILexicalBlock(scope: !7334, file: !7164, line: 261, column: 6)
!7345 = !DILocation(line: 0, scope: !7334)
!7346 = !DILocation(line: 252, column: 22, scope: !7334)
!7347 = !DILocation(line: 258, column: 18, scope: !7334)
!7348 = !DILocation(line: 261, column: 20, scope: !7344)
!7349 = !DILocation(line: 261, column: 6, scope: !7334)
!7350 = !DILocation(line: 0, scope: !7342)
!7351 = !DILocation(line: 265, column: 4, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7353, file: !7164, line: 264, column: 59)
!7353 = distinct !DILexicalBlock(scope: !7342, file: !7164, line: 264, column: 3)
!7354 = !DILocation(line: 264, column: 55, scope: !7353)
!7355 = !DILocation(line: 264, column: 33, scope: !7353)
!7356 = !DILocation(line: 264, column: 3, scope: !7342)
!7357 = distinct !{!7357, !7356, !7358}
!7358 = !DILocation(line: 266, column: 3, scope: !7342)
!7359 = !DILocation(line: 269, column: 2, scope: !7334)
!7360 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7361, file: !7361, line: 218, type: !6391, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7362)
!7361 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7362 = !{!7363}
!7363 = !DILocalVariable(name: "rnr", arg: 1, scope: !7360, file: !7361, line: 218, type: !137)
!7364 = !DILocation(line: 0, scope: !7360)
!7365 = !DILocation(line: 220, column: 12, scope: !7360)
!7366 = !DILocation(line: 221, column: 13, scope: !7360)
!7367 = !DILocation(line: 222, column: 1, scope: !7360)
!7368 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !430, file: !430, line: 326, type: !7369, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7371)
!7369 = !DISubroutineType(types: !7370)
!7370 = !{!103}
!7371 = !{!7372}
!7372 = !DILocalVariable(name: "r_index", scope: !7368, file: !430, line: 328, type: !137)
!7373 = !DILocation(line: 330, column: 17, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7368, file: !430, line: 330, column: 6)
!7375 = !DILocation(line: 330, column: 29, scope: !7374)
!7376 = !DILocation(line: 330, column: 6, scope: !7368)
!7377 = !DILocation(line: 347, column: 2, scope: !7368)
!7378 = !DILocation(line: 0, scope: !7368)
!7379 = !DILocation(line: 364, column: 29, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7381, file: !430, line: 364, column: 2)
!7381 = distinct !DILexicalBlock(scope: !7368, file: !430, line: 364, column: 2)
!7382 = !DILocation(line: 364, column: 2, scope: !7381)
!7383 = !DILocation(line: 365, column: 25, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7380, file: !430, line: 364, column: 66)
!7385 = !DILocation(line: 365, column: 3, scope: !7384)
!7386 = !DILocation(line: 364, column: 62, scope: !7380)
!7387 = distinct !{!7387, !7382, !7388}
!7388 = !DILocation(line: 366, column: 2, scope: !7381)
!7389 = !DILocation(line: 369, column: 23, scope: !7368)
!7390 = !DILocation(line: 369, column: 21, scope: !7368)
!7391 = !DILocation(line: 372, column: 2, scope: !7368)
!7392 = !DILocation(line: 443, column: 2, scope: !7368)
!7393 = !DILocation(line: 444, column: 1, scope: !7368)
!7394 = distinct !DISubprogram(name: "strcpy", scope: !7395, file: !7395, line: 20, type: !7396, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2595, retainedNodes: !7400)
!7395 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7396 = !DISubroutineType(types: !7397)
!7397 = !{!1022, !7398, !7399}
!7398 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1022)
!7399 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !199)
!7400 = !{!7401, !7402, !7403}
!7401 = !DILocalVariable(name: "d", arg: 1, scope: !7394, file: !7395, line: 20, type: !7398)
!7402 = !DILocalVariable(name: "s", arg: 2, scope: !7394, file: !7395, line: 20, type: !7399)
!7403 = !DILocalVariable(name: "dest", scope: !7394, file: !7395, line: 22, type: !1022)
!7404 = !DILocation(line: 0, scope: !7394)
!7405 = !DILocation(line: 24, column: 9, scope: !7394)
!7406 = !DILocation(line: 24, column: 12, scope: !7394)
!7407 = !DILocation(line: 24, column: 2, scope: !7394)
!7408 = !DILocation(line: 25, column: 6, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7394, file: !7395, line: 24, column: 21)
!7410 = !DILocation(line: 26, column: 4, scope: !7409)
!7411 = !DILocation(line: 27, column: 4, scope: !7409)
!7412 = distinct !{!7412, !7407, !7413}
!7413 = !DILocation(line: 28, column: 2, scope: !7394)
!7414 = !DILocation(line: 30, column: 5, scope: !7394)
!7415 = !DILocation(line: 32, column: 2, scope: !7394)
!7416 = distinct !DISubprogram(name: "strncpy", scope: !7395, file: !7395, line: 42, type: !7417, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2595, retainedNodes: !7419)
!7417 = !DISubroutineType(types: !7418)
!7418 = !{!1022, !7398, !7399, !120}
!7419 = !{!7420, !7421, !7422, !7423}
!7420 = !DILocalVariable(name: "d", arg: 1, scope: !7416, file: !7395, line: 42, type: !7398)
!7421 = !DILocalVariable(name: "s", arg: 2, scope: !7416, file: !7395, line: 42, type: !7399)
!7422 = !DILocalVariable(name: "n", arg: 3, scope: !7416, file: !7395, line: 42, type: !120)
!7423 = !DILocalVariable(name: "dest", scope: !7416, file: !7395, line: 44, type: !1022)
!7424 = !DILocation(line: 0, scope: !7416)
!7425 = !DILocation(line: 46, column: 12, scope: !7416)
!7426 = !DILocation(line: 46, column: 17, scope: !7416)
!7427 = !DILocation(line: 46, column: 20, scope: !7416)
!7428 = !DILocation(line: 46, column: 23, scope: !7416)
!7429 = !DILocation(line: 46, column: 2, scope: !7416)
!7430 = !DILocation(line: 47, column: 6, scope: !7431)
!7431 = distinct !DILexicalBlock(scope: !7416, file: !7395, line: 46, column: 32)
!7432 = !DILocation(line: 48, column: 4, scope: !7431)
!7433 = !DILocation(line: 49, column: 4, scope: !7431)
!7434 = !DILocation(line: 50, column: 4, scope: !7431)
!7435 = distinct !{!7435, !7429, !7436}
!7436 = !DILocation(line: 51, column: 2, scope: !7416)
!7437 = !DILocation(line: 54, column: 6, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7416, file: !7395, line: 53, column: 16)
!7439 = !DILocation(line: 55, column: 4, scope: !7438)
!7440 = !DILocation(line: 56, column: 4, scope: !7438)
!7441 = !DILocation(line: 53, column: 11, scope: !7416)
!7442 = !DILocation(line: 53, column: 2, scope: !7416)
!7443 = distinct !{!7443, !7442, !7444}
!7444 = !DILocation(line: 57, column: 2, scope: !7416)
!7445 = !DILocation(line: 59, column: 2, scope: !7416)
!7446 = distinct !DISubprogram(name: "strchr", scope: !7395, file: !7395, line: 69, type: !7447, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2595, retainedNodes: !7449)
!7447 = !DISubroutineType(types: !7448)
!7448 = !{!1022, !199, !103}
!7449 = !{!7450, !7451, !7452}
!7450 = !DILocalVariable(name: "s", arg: 1, scope: !7446, file: !7395, line: 69, type: !199)
!7451 = !DILocalVariable(name: "c", arg: 2, scope: !7446, file: !7395, line: 69, type: !103)
!7452 = !DILocalVariable(name: "tmp", scope: !7446, file: !7395, line: 71, type: !109)
!7453 = !DILocation(line: 0, scope: !7446)
!7454 = !DILocation(line: 73, column: 2, scope: !7446)
!7455 = !DILocation(line: 73, column: 10, scope: !7446)
!7456 = !DILocation(line: 73, column: 13, scope: !7446)
!7457 = !DILocation(line: 73, column: 21, scope: !7446)
!7458 = !DILocation(line: 74, column: 4, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7446, file: !7395, line: 73, column: 38)
!7460 = distinct !{!7460, !7454, !7461}
!7461 = !DILocation(line: 75, column: 2, scope: !7446)
!7462 = !DILocation(line: 77, column: 9, scope: !7446)
!7463 = !DILocation(line: 77, column: 2, scope: !7446)
!7464 = distinct !DISubprogram(name: "strrchr", scope: !7395, file: !7395, line: 87, type: !7447, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2595, retainedNodes: !7465)
!7465 = !{!7466, !7467, !7468}
!7466 = !DILocalVariable(name: "s", arg: 1, scope: !7464, file: !7395, line: 87, type: !199)
!7467 = !DILocalVariable(name: "c", arg: 2, scope: !7464, file: !7395, line: 87, type: !103)
!7468 = !DILocalVariable(name: "match", scope: !7464, file: !7395, line: 89, type: !1022)
!7469 = !DILocation(line: 0, scope: !7464)
!7470 = !DILocation(line: 91, column: 2, scope: !7464)
!7471 = !DILocation(line: 92, column: 7, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7473, file: !7395, line: 92, column: 7)
!7473 = distinct !DILexicalBlock(scope: !7464, file: !7395, line: 91, column: 5)
!7474 = !DILocation(line: 92, column: 10, scope: !7472)
!7475 = !DILocation(line: 92, column: 7, scope: !7473)
!7476 = !DILocation(line: 95, column: 13, scope: !7464)
!7477 = !DILocation(line: 95, column: 2, scope: !7473)
!7478 = distinct !{!7478, !7470, !7479}
!7479 = !DILocation(line: 95, column: 15, scope: !7464)
!7480 = !DILocation(line: 97, column: 2, scope: !7464)
!7481 = distinct !DISubprogram(name: "strlen", scope: !7395, file: !7395, line: 107, type: !7482, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2595, retainedNodes: !7484)
!7482 = !DISubroutineType(types: !7483)
!7483 = !{!120, !199}
!7484 = !{!7485, !7486}
!7485 = !DILocalVariable(name: "s", arg: 1, scope: !7481, file: !7395, line: 107, type: !199)
!7486 = !DILocalVariable(name: "n", scope: !7481, file: !7395, line: 109, type: !120)
!7487 = !DILocation(line: 0, scope: !7481)
!7488 = !DILocation(line: 111, column: 9, scope: !7481)
!7489 = !DILocation(line: 111, column: 12, scope: !7481)
!7490 = !DILocation(line: 111, column: 2, scope: !7481)
!7491 = !DILocation(line: 112, column: 4, scope: !7492)
!7492 = distinct !DILexicalBlock(scope: !7481, file: !7395, line: 111, column: 21)
!7493 = !DILocation(line: 113, column: 4, scope: !7492)
!7494 = distinct !{!7494, !7490, !7495}
!7495 = !DILocation(line: 114, column: 2, scope: !7481)
!7496 = !DILocation(line: 116, column: 2, scope: !7481)
!7497 = distinct !DISubprogram(name: "strnlen", scope: !7395, file: !7395, line: 126, type: !7498, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2595, retainedNodes: !7500)
!7498 = !DISubroutineType(types: !7499)
!7499 = !{!120, !199, !120}
!7500 = !{!7501, !7502, !7503}
!7501 = !DILocalVariable(name: "s", arg: 1, scope: !7497, file: !7395, line: 126, type: !199)
!7502 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7497, file: !7395, line: 126, type: !120)
!7503 = !DILocalVariable(name: "n", scope: !7497, file: !7395, line: 128, type: !120)
!7504 = !DILocation(line: 0, scope: !7497)
!7505 = !DILocation(line: 130, column: 9, scope: !7497)
!7506 = !DILocation(line: 130, column: 12, scope: !7497)
!7507 = !DILocation(line: 130, column: 20, scope: !7497)
!7508 = !DILocation(line: 130, column: 2, scope: !7497)
!7509 = !DILocation(line: 131, column: 4, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7497, file: !7395, line: 130, column: 35)
!7511 = !DILocation(line: 132, column: 4, scope: !7510)
!7512 = distinct !{!7512, !7508, !7513}
!7513 = !DILocation(line: 133, column: 2, scope: !7497)
!7514 = !DILocation(line: 135, column: 2, scope: !7497)
!7515 = distinct !DISubprogram(name: "strcmp", scope: !7395, file: !7395, line: 145, type: !7516, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2595, retainedNodes: !7518)
!7516 = !DISubroutineType(types: !7517)
!7517 = !{!103, !199, !199}
!7518 = !{!7519, !7520}
!7519 = !DILocalVariable(name: "s1", arg: 1, scope: !7515, file: !7395, line: 145, type: !199)
!7520 = !DILocalVariable(name: "s2", arg: 2, scope: !7515, file: !7395, line: 145, type: !199)
!7521 = !DILocation(line: 0, scope: !7515)
!7522 = !DILocation(line: 147, column: 10, scope: !7515)
!7523 = !DILocation(line: 147, column: 17, scope: !7515)
!7524 = !DILocation(line: 147, column: 14, scope: !7515)
!7525 = !DILocation(line: 147, column: 22, scope: !7515)
!7526 = !DILocation(line: 148, column: 5, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7515, file: !7395, line: 147, column: 40)
!7528 = !DILocation(line: 149, column: 5, scope: !7527)
!7529 = distinct !{!7529, !7530, !7531}
!7530 = !DILocation(line: 147, column: 2, scope: !7515)
!7531 = !DILocation(line: 150, column: 2, scope: !7515)
!7532 = !DILocation(line: 152, column: 9, scope: !7515)
!7533 = !DILocation(line: 152, column: 15, scope: !7515)
!7534 = !DILocation(line: 152, column: 13, scope: !7515)
!7535 = !DILocation(line: 152, column: 2, scope: !7515)
!7536 = distinct !DISubprogram(name: "strncmp", scope: !7395, file: !7395, line: 162, type: !7537, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2595, retainedNodes: !7539)
!7537 = !DISubroutineType(types: !7538)
!7538 = !{!103, !199, !199, !120}
!7539 = !{!7540, !7541, !7542}
!7540 = !DILocalVariable(name: "s1", arg: 1, scope: !7536, file: !7395, line: 162, type: !199)
!7541 = !DILocalVariable(name: "s2", arg: 2, scope: !7536, file: !7395, line: 162, type: !199)
!7542 = !DILocalVariable(name: "n", arg: 3, scope: !7536, file: !7395, line: 162, type: !120)
!7543 = !DILocation(line: 0, scope: !7536)
!7544 = !DILocation(line: 164, column: 17, scope: !7536)
!7545 = !DILocation(line: 164, column: 21, scope: !7536)
!7546 = !DILocation(line: 164, column: 28, scope: !7536)
!7547 = !DILocation(line: 164, column: 25, scope: !7536)
!7548 = !DILocation(line: 164, column: 33, scope: !7536)
!7549 = !DILocation(line: 165, column: 5, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7536, file: !7395, line: 164, column: 51)
!7551 = !DILocation(line: 166, column: 5, scope: !7550)
!7552 = !DILocation(line: 167, column: 4, scope: !7550)
!7553 = distinct !{!7553, !7554, !7555}
!7554 = !DILocation(line: 164, column: 2, scope: !7536)
!7555 = !DILocation(line: 168, column: 2, scope: !7536)
!7556 = !DILocation(line: 170, column: 25, scope: !7536)
!7557 = !DILocation(line: 170, column: 31, scope: !7536)
!7558 = !DILocation(line: 170, column: 29, scope: !7536)
!7559 = !DILocation(line: 170, column: 9, scope: !7536)
!7560 = !DILocation(line: 170, column: 2, scope: !7536)
!7561 = distinct !DISubprogram(name: "strtok_r", scope: !7395, file: !7395, line: 180, type: !7562, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2595, retainedNodes: !7565)
!7562 = !DISubroutineType(types: !7563)
!7563 = !{!1022, !1022, !199, !7564}
!7564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 32)
!7565 = !{!7566, !7567, !7568, !7569, !7570}
!7566 = !DILocalVariable(name: "str", arg: 1, scope: !7561, file: !7395, line: 180, type: !1022)
!7567 = !DILocalVariable(name: "sep", arg: 2, scope: !7561, file: !7395, line: 180, type: !199)
!7568 = !DILocalVariable(name: "state", arg: 3, scope: !7561, file: !7395, line: 180, type: !7564)
!7569 = !DILocalVariable(name: "start", scope: !7561, file: !7395, line: 182, type: !1022)
!7570 = !DILocalVariable(name: "end", scope: !7561, file: !7395, line: 182, type: !1022)
!7571 = !DILocation(line: 0, scope: !7561)
!7572 = !DILocation(line: 184, column: 10, scope: !7561)
!7573 = !DILocation(line: 184, column: 22, scope: !7561)
!7574 = !DILocation(line: 187, column: 9, scope: !7561)
!7575 = !DILocation(line: 187, column: 16, scope: !7561)
!7576 = !DILocation(line: 187, column: 19, scope: !7561)
!7577 = !DILocation(line: 187, column: 2, scope: !7561)
!7578 = !DILocation(line: 188, column: 8, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7561, file: !7395, line: 187, column: 40)
!7580 = distinct !{!7580, !7577, !7581}
!7581 = !DILocation(line: 189, column: 2, scope: !7561)
!7582 = !DILocation(line: 198, column: 9, scope: !7561)
!7583 = !DILocation(line: 198, column: 18, scope: !7561)
!7584 = !DILocation(line: 198, column: 17, scope: !7561)
!7585 = !DILocation(line: 198, column: 2, scope: !7561)
!7586 = !DILocation(line: 199, column: 6, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7561, file: !7395, line: 198, column: 37)
!7588 = !DILocation(line: 198, column: 14, scope: !7561)
!7589 = distinct !{!7589, !7585, !7590}
!7590 = !DILocation(line: 200, column: 2, scope: !7561)
!7591 = !DILocation(line: 203, column: 8, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7593, file: !7395, line: 202, column: 20)
!7593 = distinct !DILexicalBlock(scope: !7561, file: !7395, line: 202, column: 6)
!7594 = !DILocation(line: 204, column: 16, scope: !7592)
!7595 = !DILocation(line: 205, column: 2, scope: !7592)
!7596 = !DILocation(line: 210, column: 1, scope: !7561)
!7597 = distinct !DISubprogram(name: "strcat", scope: !7395, file: !7395, line: 212, type: !7396, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2595, retainedNodes: !7598)
!7598 = !{!7599, !7600}
!7599 = !DILocalVariable(name: "dest", arg: 1, scope: !7597, file: !7395, line: 212, type: !7398)
!7600 = !DILocalVariable(name: "src", arg: 2, scope: !7597, file: !7395, line: 212, type: !7399)
!7601 = !DILocation(line: 0, scope: !7597)
!7602 = !DILocation(line: 214, column: 16, scope: !7597)
!7603 = !DILocation(line: 214, column: 14, scope: !7597)
!7604 = !DILocation(line: 214, column: 2, scope: !7597)
!7605 = !DILocation(line: 215, column: 2, scope: !7597)
!7606 = distinct !DISubprogram(name: "strncat", scope: !7395, file: !7395, line: 218, type: !7417, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2595, retainedNodes: !7607)
!7607 = !{!7608, !7609, !7610, !7611, !7612}
!7608 = !DILocalVariable(name: "dest", arg: 1, scope: !7606, file: !7395, line: 218, type: !7398)
!7609 = !DILocalVariable(name: "src", arg: 2, scope: !7606, file: !7395, line: 218, type: !7399)
!7610 = !DILocalVariable(name: "n", arg: 3, scope: !7606, file: !7395, line: 219, type: !120)
!7611 = !DILocalVariable(name: "orig_dest", scope: !7606, file: !7395, line: 221, type: !1022)
!7612 = !DILocalVariable(name: "len", scope: !7606, file: !7395, line: 222, type: !120)
!7613 = !DILocation(line: 0, scope: !7606)
!7614 = !DILocation(line: 222, column: 15, scope: !7606)
!7615 = !DILocation(line: 224, column: 7, scope: !7606)
!7616 = !DILocation(line: 225, column: 14, scope: !7606)
!7617 = !DILocation(line: 225, column: 19, scope: !7606)
!7618 = !DILocation(line: 225, column: 11, scope: !7606)
!7619 = !DILocation(line: 225, column: 23, scope: !7606)
!7620 = !DILocation(line: 225, column: 28, scope: !7606)
!7621 = !DILocation(line: 225, column: 2, scope: !7606)
!7622 = !DILocation(line: 226, column: 17, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7606, file: !7395, line: 225, column: 38)
!7624 = !DILocation(line: 226, column: 8, scope: !7623)
!7625 = !DILocation(line: 226, column: 11, scope: !7623)
!7626 = distinct !{!7626, !7621, !7627}
!7627 = !DILocation(line: 227, column: 2, scope: !7606)
!7628 = !DILocation(line: 228, column: 8, scope: !7606)
!7629 = !DILocation(line: 230, column: 2, scope: !7606)
!7630 = distinct !DISubprogram(name: "memcmp", scope: !7395, file: !7395, line: 239, type: !7631, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2595, retainedNodes: !7633)
!7631 = !DISubroutineType(types: !7632)
!7632 = !{!103, !13, !13, !120}
!7633 = !{!7634, !7635, !7636, !7637, !7638}
!7634 = !DILocalVariable(name: "m1", arg: 1, scope: !7630, file: !7395, line: 239, type: !13)
!7635 = !DILocalVariable(name: "m2", arg: 2, scope: !7630, file: !7395, line: 239, type: !13)
!7636 = !DILocalVariable(name: "n", arg: 3, scope: !7630, file: !7395, line: 239, type: !120)
!7637 = !DILocalVariable(name: "c1", scope: !7630, file: !7395, line: 241, type: !199)
!7638 = !DILocalVariable(name: "c2", scope: !7630, file: !7395, line: 242, type: !199)
!7639 = !DILocation(line: 0, scope: !7630)
!7640 = !DILocation(line: 244, column: 7, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7630, file: !7395, line: 244, column: 6)
!7642 = !DILocation(line: 244, column: 6, scope: !7630)
!7643 = !DILocation(line: 248, column: 10, scope: !7630)
!7644 = !DILocation(line: 248, column: 14, scope: !7630)
!7645 = !DILocation(line: 248, column: 19, scope: !7630)
!7646 = !DILocation(line: 248, column: 2, scope: !7630)
!7647 = !DILocation(line: 248, column: 23, scope: !7630)
!7648 = !DILocation(line: 248, column: 30, scope: !7630)
!7649 = !DILocation(line: 248, column: 27, scope: !7630)
!7650 = !DILocation(line: 249, column: 5, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7630, file: !7395, line: 248, column: 36)
!7652 = !DILocation(line: 250, column: 5, scope: !7651)
!7653 = distinct !{!7653, !7646, !7654}
!7654 = !DILocation(line: 251, column: 2, scope: !7630)
!7655 = !DILocation(line: 253, column: 9, scope: !7630)
!7656 = !DILocation(line: 253, column: 15, scope: !7630)
!7657 = !DILocation(line: 253, column: 13, scope: !7630)
!7658 = !DILocation(line: 253, column: 2, scope: !7630)
!7659 = !DILocation(line: 254, column: 1, scope: !7630)
!7660 = distinct !DISubprogram(name: "memmove", scope: !7395, file: !7395, line: 263, type: !7661, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2595, retainedNodes: !7663)
!7661 = !DISubroutineType(types: !7662)
!7662 = !{!102, !102, !13, !120}
!7663 = !{!7664, !7665, !7666, !7667, !7668}
!7664 = !DILocalVariable(name: "d", arg: 1, scope: !7660, file: !7395, line: 263, type: !102)
!7665 = !DILocalVariable(name: "s", arg: 2, scope: !7660, file: !7395, line: 263, type: !13)
!7666 = !DILocalVariable(name: "n", arg: 3, scope: !7660, file: !7395, line: 263, type: !120)
!7667 = !DILocalVariable(name: "dest", scope: !7660, file: !7395, line: 265, type: !1022)
!7668 = !DILocalVariable(name: "src", scope: !7660, file: !7395, line: 266, type: !199)
!7669 = !DILocation(line: 0, scope: !7660)
!7670 = !DILocation(line: 268, column: 21, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7660, file: !7395, line: 268, column: 6)
!7672 = !DILocation(line: 268, column: 28, scope: !7671)
!7673 = !DILocation(line: 268, column: 6, scope: !7660)
!7674 = !DILocation(line: 280, column: 12, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7671, file: !7395, line: 278, column: 9)
!7676 = !DILocation(line: 280, column: 3, scope: !7675)
!7677 = !DILocation(line: 275, column: 5, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7679, file: !7395, line: 274, column: 17)
!7679 = distinct !DILexicalBlock(scope: !7671, file: !7395, line: 268, column: 33)
!7680 = !DILocation(line: 276, column: 14, scope: !7678)
!7681 = !DILocation(line: 276, column: 4, scope: !7678)
!7682 = !DILocation(line: 276, column: 12, scope: !7678)
!7683 = !DILocation(line: 274, column: 12, scope: !7679)
!7684 = !DILocation(line: 274, column: 3, scope: !7679)
!7685 = distinct !{!7685, !7684, !7686}
!7686 = !DILocation(line: 277, column: 3, scope: !7679)
!7687 = !DILocation(line: 281, column: 12, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7675, file: !7395, line: 280, column: 17)
!7689 = !DILocation(line: 281, column: 10, scope: !7688)
!7690 = !DILocation(line: 282, column: 8, scope: !7688)
!7691 = !DILocation(line: 283, column: 7, scope: !7688)
!7692 = !DILocation(line: 284, column: 5, scope: !7688)
!7693 = distinct !{!7693, !7676, !7694}
!7694 = !DILocation(line: 285, column: 3, scope: !7675)
!7695 = !DILocation(line: 288, column: 2, scope: !7660)
!7696 = distinct !DISubprogram(name: "memcpy", scope: !7395, file: !7395, line: 298, type: !7697, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2595, retainedNodes: !7701)
!7697 = !DISubroutineType(types: !7698)
!7698 = !{!102, !7699, !7700, !120}
!7699 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!7700 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7701 = !{!7702, !7703, !7704, !7705, !7706}
!7702 = !DILocalVariable(name: "d", arg: 1, scope: !7696, file: !7395, line: 298, type: !7699)
!7703 = !DILocalVariable(name: "s", arg: 2, scope: !7696, file: !7395, line: 298, type: !7700)
!7704 = !DILocalVariable(name: "n", arg: 3, scope: !7696, file: !7395, line: 298, type: !120)
!7705 = !DILocalVariable(name: "d_byte", scope: !7696, file: !7395, line: 302, type: !857)
!7706 = !DILocalVariable(name: "s_byte", scope: !7696, file: !7395, line: 303, type: !2598)
!7707 = !DILocation(line: 0, scope: !7696)
!7708 = !DILocation(line: 337, column: 11, scope: !7696)
!7709 = !DILocation(line: 337, column: 2, scope: !7696)
!7710 = !DILocation(line: 338, column: 25, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7696, file: !7395, line: 337, column: 16)
!7712 = !DILocation(line: 338, column: 17, scope: !7711)
!7713 = !DILocation(line: 338, column: 11, scope: !7711)
!7714 = !DILocation(line: 338, column: 15, scope: !7711)
!7715 = !DILocation(line: 339, column: 4, scope: !7711)
!7716 = distinct !{!7716, !7709, !7717}
!7717 = !DILocation(line: 340, column: 2, scope: !7696)
!7718 = !DILocation(line: 342, column: 2, scope: !7696)
!7719 = distinct !DISubprogram(name: "memset", scope: !7395, file: !7395, line: 352, type: !7720, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2595, retainedNodes: !7722)
!7720 = !DISubroutineType(types: !7721)
!7721 = !{!102, !102, !103, !120}
!7722 = !{!7723, !7724, !7725, !7726, !7727}
!7723 = !DILocalVariable(name: "buf", arg: 1, scope: !7719, file: !7395, line: 352, type: !102)
!7724 = !DILocalVariable(name: "c", arg: 2, scope: !7719, file: !7395, line: 352, type: !103)
!7725 = !DILocalVariable(name: "n", arg: 3, scope: !7719, file: !7395, line: 352, type: !120)
!7726 = !DILocalVariable(name: "d_byte", scope: !7719, file: !7395, line: 356, type: !857)
!7727 = !DILocalVariable(name: "c_byte", scope: !7719, file: !7395, line: 357, type: !209)
!7728 = !DILocation(line: 0, scope: !7719)
!7729 = !DILocation(line: 357, column: 25, scope: !7719)
!7730 = !DILocation(line: 389, column: 11, scope: !7719)
!7731 = !DILocation(line: 389, column: 2, scope: !7719)
!7732 = !DILocation(line: 390, column: 11, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7719, file: !7395, line: 389, column: 16)
!7734 = !DILocation(line: 390, column: 15, scope: !7733)
!7735 = !DILocation(line: 391, column: 4, scope: !7733)
!7736 = distinct !{!7736, !7731, !7737}
!7737 = !DILocation(line: 392, column: 2, scope: !7719)
!7738 = !DILocation(line: 394, column: 2, scope: !7719)
!7739 = distinct !DISubprogram(name: "memchr", scope: !7395, file: !7395, line: 404, type: !7740, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2595, retainedNodes: !7742)
!7740 = !DISubroutineType(types: !7741)
!7741 = !{!102, !13, !103, !120}
!7742 = !{!7743, !7744, !7745, !7746}
!7743 = !DILocalVariable(name: "s", arg: 1, scope: !7739, file: !7395, line: 404, type: !13)
!7744 = !DILocalVariable(name: "c", arg: 2, scope: !7739, file: !7395, line: 404, type: !103)
!7745 = !DILocalVariable(name: "n", arg: 3, scope: !7739, file: !7395, line: 404, type: !120)
!7746 = !DILocalVariable(name: "p", scope: !7747, file: !7395, line: 407, type: !2598)
!7747 = distinct !DILexicalBlock(scope: !7748, file: !7395, line: 406, column: 14)
!7748 = distinct !DILexicalBlock(scope: !7739, file: !7395, line: 406, column: 6)
!7749 = !DILocation(line: 0, scope: !7739)
!7750 = !DILocation(line: 406, column: 8, scope: !7748)
!7751 = !DILocation(line: 406, column: 6, scope: !7739)
!7752 = !DILocation(line: 409, column: 3, scope: !7747)
!7753 = !DILocation(line: 0, scope: !7747)
!7754 = !DILocation(line: 410, column: 8, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7756, file: !7395, line: 410, column: 8)
!7756 = distinct !DILexicalBlock(scope: !7747, file: !7395, line: 409, column: 6)
!7757 = !DILocation(line: 410, column: 13, scope: !7755)
!7758 = !DILocation(line: 410, column: 8, scope: !7756)
!7759 = distinct !{!7759, !7752, !7760}
!7760 = !DILocation(line: 414, column: 20, scope: !7747)
!7761 = !DILocation(line: 417, column: 2, scope: !7739)
!7762 = !DILocation(line: 418, column: 1, scope: !7739)
!7763 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !440, file: !440, line: 23, type: !2974, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7764)
!7764 = !{!7765}
!7765 = !DILocalVariable(name: "hook", arg: 1, scope: !7763, file: !440, line: 23, type: !128)
!7766 = !DILocation(line: 0, scope: !7763)
!7767 = !DILocation(line: 25, column: 15, scope: !7763)
!7768 = !DILocation(line: 26, column: 1, scope: !7763)
!7769 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !440, file: !440, line: 14, type: !129, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7770)
!7770 = !{!7771}
!7771 = !DILocalVariable(name: "c", arg: 1, scope: !7769, file: !440, line: 14, type: !103)
!7772 = !DILocation(line: 0, scope: !7769)
!7773 = !DILocation(line: 18, column: 2, scope: !7769)
!7774 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !440, file: !440, line: 28, type: !7775, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7777)
!7775 = !DISubroutineType(types: !7776)
!7776 = !{!103, !103, !436}
!7777 = !{!7778, !7779}
!7778 = !DILocalVariable(name: "c", arg: 1, scope: !7774, file: !440, line: 28, type: !103)
!7779 = !DILocalVariable(name: "stream", arg: 2, scope: !7774, file: !440, line: 28, type: !436)
!7780 = !DILocation(line: 0, scope: !7774)
!7781 = !DILocation(line: 30, column: 27, scope: !7774)
!7782 = !DILocation(line: 30, column: 50, scope: !7774)
!7783 = !DILocation(line: 30, column: 9, scope: !7774)
!7784 = !DILocation(line: 30, column: 2, scope: !7774)
!7785 = distinct !DISubprogram(name: "fputc", scope: !440, file: !440, line: 41, type: !7775, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7786)
!7786 = !{!7787, !7788}
!7787 = !DILocalVariable(name: "c", arg: 1, scope: !7785, file: !440, line: 41, type: !103)
!7788 = !DILocalVariable(name: "stream", arg: 2, scope: !7785, file: !440, line: 41, type: !436)
!7789 = !DILocation(line: 0, scope: !7785)
!7790 = !DILocation(line: 43, column: 9, scope: !7785)
!7791 = !DILocation(line: 43, column: 2, scope: !7785)
!7792 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7793, file: !7793, line: 72, type: !7775, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7794)
!7793 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!7794 = !{!7795, !7796}
!7795 = !DILocalVariable(name: "c", arg: 1, scope: !7792, file: !7793, line: 72, type: !103)
!7796 = !DILocalVariable(name: "stream", arg: 2, scope: !7792, file: !7793, line: 72, type: !436)
!7797 = !DILocation(line: 0, scope: !7792)
!7798 = !DILocation(line: 81, column: 2, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !7792, file: !7793, line: 81, column: 2)
!7800 = !{i64 2154903398}
!7801 = !DILocation(line: 82, column: 9, scope: !7792)
!7802 = !DILocation(line: 82, column: 2, scope: !7792)
!7803 = distinct !DISubprogram(name: "fputs", scope: !440, file: !440, line: 46, type: !7804, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7807)
!7804 = !DISubroutineType(types: !7805)
!7805 = !{!103, !7399, !7806}
!7806 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !436)
!7807 = !{!7808, !7809, !7810, !7811}
!7808 = !DILocalVariable(name: "s", arg: 1, scope: !7803, file: !440, line: 46, type: !7399)
!7809 = !DILocalVariable(name: "stream", arg: 2, scope: !7803, file: !440, line: 46, type: !7806)
!7810 = !DILocalVariable(name: "len", scope: !7803, file: !440, line: 48, type: !103)
!7811 = !DILocalVariable(name: "ret", scope: !7803, file: !440, line: 49, type: !103)
!7812 = !DILocation(line: 0, scope: !7803)
!7813 = !DILocation(line: 48, column: 12, scope: !7803)
!7814 = !DILocation(line: 51, column: 8, scope: !7803)
!7815 = !DILocation(line: 53, column: 13, scope: !7803)
!7816 = !DILocation(line: 53, column: 9, scope: !7803)
!7817 = !DILocation(line: 53, column: 2, scope: !7803)
!7818 = distinct !DISubprogram(name: "fwrite", scope: !440, file: !440, line: 99, type: !7819, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7821)
!7819 = !DISubroutineType(types: !7820)
!7820 = !{!120, !7700, !120, !120, !7806}
!7821 = !{!7822, !7823, !7824, !7825}
!7822 = !DILocalVariable(name: "ptr", arg: 1, scope: !7818, file: !440, line: 99, type: !7700)
!7823 = !DILocalVariable(name: "size", arg: 2, scope: !7818, file: !440, line: 99, type: !120)
!7824 = !DILocalVariable(name: "nitems", arg: 3, scope: !7818, file: !440, line: 99, type: !120)
!7825 = !DILocalVariable(name: "stream", arg: 4, scope: !7818, file: !440, line: 100, type: !7806)
!7826 = !DILocation(line: 0, scope: !7818)
!7827 = !DILocation(line: 102, column: 9, scope: !7818)
!7828 = !DILocation(line: 102, column: 2, scope: !7818)
!7829 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7793, file: !7793, line: 96, type: !7819, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7830)
!7830 = !{!7831, !7832, !7833, !7834}
!7831 = !DILocalVariable(name: "ptr", arg: 1, scope: !7829, file: !7793, line: 96, type: !7700)
!7832 = !DILocalVariable(name: "size", arg: 2, scope: !7829, file: !7793, line: 96, type: !120)
!7833 = !DILocalVariable(name: "nitems", arg: 3, scope: !7829, file: !7793, line: 96, type: !120)
!7834 = !DILocalVariable(name: "stream", arg: 4, scope: !7829, file: !7793, line: 96, type: !7806)
!7835 = !DILocation(line: 0, scope: !7829)
!7836 = !DILocation(line: 107, column: 2, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7829, file: !7793, line: 107, column: 2)
!7838 = !{i64 2154903502}
!7839 = !DILocation(line: 108, column: 9, scope: !7829)
!7840 = !DILocation(line: 108, column: 2, scope: !7829)
!7841 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !440, file: !440, line: 56, type: !7819, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7842)
!7842 = !{!7843, !7844, !7845, !7846, !7847, !7848, !7849, !7850}
!7843 = !DILocalVariable(name: "ptr", arg: 1, scope: !7841, file: !440, line: 56, type: !7700)
!7844 = !DILocalVariable(name: "size", arg: 2, scope: !7841, file: !440, line: 56, type: !120)
!7845 = !DILocalVariable(name: "nitems", arg: 3, scope: !7841, file: !440, line: 57, type: !120)
!7846 = !DILocalVariable(name: "stream", arg: 4, scope: !7841, file: !440, line: 57, type: !7806)
!7847 = !DILocalVariable(name: "i", scope: !7841, file: !440, line: 59, type: !120)
!7848 = !DILocalVariable(name: "j", scope: !7841, file: !440, line: 60, type: !120)
!7849 = !DILocalVariable(name: "p", scope: !7841, file: !440, line: 61, type: !2598)
!7850 = !DILabel(scope: !7841, name: "done", file: !440, line: 82)
!7851 = !DILocation(line: 0, scope: !7841)
!7852 = !DILocation(line: 63, column: 14, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7841, file: !440, line: 63, column: 6)
!7854 = !DILocation(line: 63, column: 24, scope: !7853)
!7855 = !DILocation(line: 72, column: 3, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7841, file: !440, line: 70, column: 5)
!7857 = !DILocation(line: 0, scope: !7856)
!7858 = !DILocation(line: 73, column: 8, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7860, file: !440, line: 73, column: 8)
!7860 = distinct !DILexicalBlock(scope: !7856, file: !440, line: 72, column: 6)
!7861 = !DILocation(line: 73, column: 29, scope: !7859)
!7862 = !DILocation(line: 73, column: 27, scope: !7859)
!7863 = !DILocation(line: 73, column: 21, scope: !7859)
!7864 = !DILocation(line: 73, column: 33, scope: !7859)
!7865 = !DILocation(line: 73, column: 8, scope: !7860)
!7866 = !DILocation(line: 76, column: 5, scope: !7860)
!7867 = !DILocation(line: 77, column: 14, scope: !7856)
!7868 = !DILocation(line: 77, column: 3, scope: !7860)
!7869 = distinct !{!7869, !7855, !7870}
!7870 = !DILocation(line: 77, column: 17, scope: !7856)
!7871 = !DILocation(line: 79, column: 4, scope: !7856)
!7872 = !DILocation(line: 80, column: 13, scope: !7841)
!7873 = !DILocation(line: 80, column: 2, scope: !7856)
!7874 = distinct !{!7874, !7875, !7876}
!7875 = !DILocation(line: 70, column: 2, scope: !7841)
!7876 = !DILocation(line: 80, column: 16, scope: !7841)
!7877 = !DILocation(line: 82, column: 1, scope: !7841)
!7878 = !DILocation(line: 83, column: 17, scope: !7841)
!7879 = !DILocation(line: 83, column: 2, scope: !7841)
!7880 = !DILocation(line: 84, column: 1, scope: !7841)
!7881 = distinct !DISubprogram(name: "puts", scope: !440, file: !440, line: 106, type: !7882, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7884)
!7882 = !DISubroutineType(types: !7883)
!7883 = !{!103, !199}
!7884 = !{!7885}
!7885 = !DILocalVariable(name: "s", arg: 1, scope: !7881, file: !440, line: 106, type: !199)
!7886 = !DILocation(line: 0, scope: !7881)
!7887 = !DILocation(line: 108, column: 6, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7881, file: !440, line: 108, column: 6)
!7889 = !DILocation(line: 108, column: 23, scope: !7888)
!7890 = !DILocation(line: 108, column: 6, scope: !7881)
!7891 = !DILocation(line: 112, column: 9, scope: !7881)
!7892 = !DILocation(line: 112, column: 29, scope: !7881)
!7893 = !DILocation(line: 112, column: 2, scope: !7881)
!7894 = !DILocation(line: 113, column: 1, scope: !7881)
!7895 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !573, file: !573, line: 368, type: !626, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7896)
!7896 = !{!7897}
!7897 = !DILocalVariable(name: "dev", arg: 1, scope: !7895, file: !573, line: 368, type: !602)
!7898 = !DILocation(line: 0, scope: !7895)
!7899 = !DILocation(line: 370, column: 2, scope: !7895)
!7900 = !DILocation(line: 371, column: 1, scope: !7895)
!7901 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !573, file: !573, line: 243, type: !7902, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7904)
!7902 = !DISubroutineType(types: !7903)
!7903 = !{null, !103, !103, !602}
!7904 = !{!7905, !7906, !7907, !7908, !7910}
!7905 = !DILocalVariable(name: "min", arg: 1, scope: !7901, file: !573, line: 243, type: !103)
!7906 = !DILocalVariable(name: "max", arg: 2, scope: !7901, file: !573, line: 243, type: !103)
!7907 = !DILocalVariable(name: "dev", arg: 3, scope: !7901, file: !573, line: 243, type: !602)
!7908 = !DILocalVariable(name: "data", scope: !7901, file: !573, line: 245, type: !7909)
!7909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 32)
!7910 = !DILocalVariable(name: "line", scope: !7901, file: !573, line: 246, type: !103)
!7911 = !DILocation(line: 0, scope: !7901)
!7912 = !DILocation(line: 245, column: 38, scope: !7901)
!7913 = !DILocation(line: 249, column: 24, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7915, file: !573, line: 249, column: 2)
!7915 = distinct !DILexicalBlock(scope: !7901, file: !573, line: 249, column: 2)
!7916 = !DILocation(line: 249, column: 2, scope: !7915)
!7917 = !DILocation(line: 251, column: 7, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7919, file: !573, line: 251, column: 7)
!7919 = distinct !DILexicalBlock(scope: !7914, file: !573, line: 249, column: 39)
!7920 = !DILocation(line: 251, column: 7, scope: !7919)
!7921 = !DILocation(line: 253, column: 4, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7918, file: !573, line: 251, column: 36)
!7923 = !DILocation(line: 256, column: 24, scope: !7924)
!7924 = distinct !DILexicalBlock(scope: !7922, file: !573, line: 256, column: 8)
!7925 = !DILocation(line: 256, column: 9, scope: !7924)
!7926 = !DILocation(line: 256, column: 8, scope: !7922)
!7927 = !DILocation(line: 260, column: 43, scope: !7922)
!7928 = !DILocation(line: 260, column: 4, scope: !7922)
!7929 = !DILocation(line: 261, column: 3, scope: !7922)
!7930 = !DILocation(line: 249, column: 35, scope: !7914)
!7931 = distinct !{!7931, !7916, !7932}
!7932 = !DILocation(line: 262, column: 2, scope: !7915)
!7933 = !DILocation(line: 263, column: 1, scope: !7901)
!7934 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !573, file: !573, line: 158, type: !129, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7935)
!7935 = !{!7936}
!7936 = !DILocalVariable(name: "line", arg: 1, scope: !7934, file: !573, line: 158, type: !103)
!7937 = !DILocation(line: 0, scope: !7934)
!7938 = !DILocation(line: 170, column: 38, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7940, file: !573, line: 160, column: 17)
!7940 = distinct !DILexicalBlock(scope: !7934, file: !573, line: 160, column: 6)
!7941 = !DILocation(line: 170, column: 10, scope: !7939)
!7942 = !DILocation(line: 176, column: 1, scope: !7934)
!7943 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !573, file: !573, line: 183, type: !7944, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7946)
!7944 = !DISubroutineType(types: !7945)
!7945 = !{null, !103}
!7946 = !{!7947}
!7947 = !DILocalVariable(name: "line", arg: 1, scope: !7943, file: !573, line: 183, type: !103)
!7948 = !DILocation(line: 0, scope: !7943)
!7949 = !DILocation(line: 195, column: 28, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7951, file: !573, line: 185, column: 17)
!7951 = distinct !DILexicalBlock(scope: !7943, file: !573, line: 185, column: 6)
!7952 = !DILocation(line: 195, column: 3, scope: !7950)
!7953 = !DILocation(line: 200, column: 1, scope: !7943)
!7954 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !7955, file: !7955, line: 910, type: !6391, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7956)
!7955 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7956 = !{!7957}
!7957 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7954, file: !7955, line: 910, type: !137)
!7958 = !DILocation(line: 0, scope: !7954)
!7959 = !DILocation(line: 912, column: 3, scope: !7954)
!7960 = !DILocation(line: 913, column: 1, scope: !7954)
!7961 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !7955, file: !7955, line: 834, type: !7307, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7962)
!7962 = !{!7963}
!7963 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7961, file: !7955, line: 834, type: !137)
!7964 = !DILocation(line: 0, scope: !7961)
!7965 = !DILocation(line: 836, column: 11, scope: !7961)
!7966 = !DILocation(line: 836, column: 40, scope: !7961)
!7967 = !DILocation(line: 836, column: 3, scope: !7961)
!7968 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !573, file: !573, line: 304, type: !626, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7969)
!7969 = !{!7970}
!7970 = !DILocalVariable(name: "dev", arg: 1, scope: !7968, file: !573, line: 304, type: !602)
!7971 = !DILocation(line: 0, scope: !7968)
!7972 = !DILocation(line: 306, column: 2, scope: !7968)
!7973 = !DILocation(line: 307, column: 1, scope: !7968)
!7974 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !573, file: !573, line: 299, type: !626, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7975)
!7975 = !{!7976}
!7976 = !DILocalVariable(name: "dev", arg: 1, scope: !7974, file: !573, line: 299, type: !602)
!7977 = !DILocation(line: 0, scope: !7974)
!7978 = !DILocation(line: 301, column: 2, scope: !7974)
!7979 = !DILocation(line: 302, column: 1, scope: !7974)
!7980 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !573, file: !573, line: 294, type: !626, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7981)
!7981 = !{!7982}
!7982 = !DILocalVariable(name: "dev", arg: 1, scope: !7980, file: !573, line: 294, type: !602)
!7983 = !DILocation(line: 0, scope: !7980)
!7984 = !DILocation(line: 296, column: 2, scope: !7980)
!7985 = !DILocation(line: 297, column: 1, scope: !7980)
!7986 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !573, file: !573, line: 397, type: !626, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7987)
!7987 = !{!7988}
!7988 = !DILocalVariable(name: "dev", arg: 1, scope: !7986, file: !573, line: 397, type: !602)
!7989 = !DILocation(line: 0, scope: !7986)
!7990 = !DILocation(line: 399, column: 2, scope: !7986)
!7991 = !DILocation(line: 400, column: 1, scope: !7986)
!7992 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !573, file: !573, line: 392, type: !626, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7993)
!7993 = !{!7994}
!7994 = !DILocalVariable(name: "dev", arg: 1, scope: !7992, file: !573, line: 392, type: !602)
!7995 = !DILocation(line: 0, scope: !7992)
!7996 = !DILocation(line: 394, column: 2, scope: !7992)
!7997 = !DILocation(line: 395, column: 1, scope: !7992)
!7998 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !573, file: !573, line: 289, type: !626, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7999)
!7999 = !{!8000}
!8000 = !DILocalVariable(name: "dev", arg: 1, scope: !7998, file: !573, line: 289, type: !602)
!8001 = !DILocation(line: 0, scope: !7998)
!8002 = !DILocation(line: 291, column: 2, scope: !7998)
!8003 = !DILocation(line: 292, column: 1, scope: !7998)
!8004 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !573, file: !573, line: 387, type: !626, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8005)
!8005 = !{!8006}
!8006 = !DILocalVariable(name: "dev", arg: 1, scope: !8004, file: !573, line: 387, type: !602)
!8007 = !DILocation(line: 0, scope: !8004)
!8008 = !DILocation(line: 389, column: 2, scope: !8004)
!8009 = !DILocation(line: 390, column: 1, scope: !8004)
!8010 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !573, file: !573, line: 382, type: !626, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8011)
!8011 = !{!8012}
!8012 = !DILocalVariable(name: "dev", arg: 1, scope: !8010, file: !573, line: 382, type: !602)
!8013 = !DILocation(line: 0, scope: !8010)
!8014 = !DILocation(line: 384, column: 2, scope: !8010)
!8015 = !DILocation(line: 385, column: 1, scope: !8010)
!8016 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !573, file: !573, line: 373, type: !626, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8017)
!8017 = !{!8018}
!8018 = !DILocalVariable(name: "dev", arg: 1, scope: !8016, file: !573, line: 373, type: !602)
!8019 = !DILocation(line: 0, scope: !8016)
!8020 = !DILocation(line: 375, column: 2, scope: !8016)
!8021 = !DILocation(line: 376, column: 1, scope: !8016)
!8022 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !573, file: !573, line: 284, type: !626, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8023)
!8023 = !{!8024}
!8024 = !DILocalVariable(name: "dev", arg: 1, scope: !8022, file: !573, line: 284, type: !602)
!8025 = !DILocation(line: 0, scope: !8022)
!8026 = !DILocation(line: 286, column: 2, scope: !8022)
!8027 = !DILocation(line: 287, column: 1, scope: !8022)
!8028 = distinct !DISubprogram(name: "stm32_exti_init", scope: !573, file: !573, line: 416, type: !600, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8029)
!8029 = !{!8030}
!8030 = !DILocalVariable(name: "dev", arg: 1, scope: !8028, file: !573, line: 416, type: !602)
!8031 = !DILocation(line: 0, scope: !8028)
!8032 = !DILocation(line: 418, column: 2, scope: !8028)
!8033 = !DILocation(line: 420, column: 2, scope: !8028)
!8034 = !DILocation(line: 0, scope: !625)
!8035 = !DILocation(line: 493, column: 2, scope: !8036)
!8036 = distinct !DILexicalBlock(scope: !625, file: !573, line: 493, column: 2)
!8037 = !DILocation(line: 497, column: 2, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !625, file: !573, line: 497, column: 2)
!8039 = !DILocation(line: 507, column: 2, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !625, file: !573, line: 507, column: 2)
!8041 = !DILocation(line: 512, column: 2, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !625, file: !573, line: 512, column: 2)
!8043 = !DILocation(line: 516, column: 2, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !625, file: !573, line: 516, column: 2)
!8045 = !DILocation(line: 523, column: 2, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !625, file: !573, line: 523, column: 2)
!8047 = !DILocation(line: 527, column: 2, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !625, file: !573, line: 527, column: 2)
!8049 = !DILocation(line: 581, column: 2, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !625, file: !573, line: 581, column: 2)
!8051 = !DILocation(line: 586, column: 2, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !625, file: !573, line: 586, column: 2)
!8053 = !DILocation(line: 591, column: 2, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !625, file: !573, line: 591, column: 2)
!8055 = !DILocation(line: 595, column: 2, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !625, file: !573, line: 595, column: 2)
!8057 = !DILocation(line: 607, column: 1, scope: !625)
!8058 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !573, file: !573, line: 112, type: !7944, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8059)
!8059 = !{!8060, !8061}
!8060 = !DILocalVariable(name: "line", arg: 1, scope: !8058, file: !573, line: 112, type: !103)
!8061 = !DILocalVariable(name: "irqnum", scope: !8058, file: !573, line: 114, type: !103)
!8062 = !DILocation(line: 0, scope: !8058)
!8063 = !DILocation(line: 121, column: 11, scope: !8058)
!8064 = !DILocation(line: 130, column: 26, scope: !8058)
!8065 = !DILocation(line: 130, column: 2, scope: !8058)
!8066 = !DILocation(line: 134, column: 2, scope: !8058)
!8067 = !DILocation(line: 135, column: 1, scope: !8058)
!8068 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !7955, file: !7955, line: 268, type: !6391, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8069)
!8069 = !{!8070}
!8070 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8068, file: !7955, line: 268, type: !137)
!8071 = !DILocation(line: 0, scope: !8068)
!8072 = !DILocation(line: 270, column: 3, scope: !8068)
!8073 = !DILocation(line: 271, column: 1, scope: !8068)
!8074 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !573, file: !573, line: 137, type: !7944, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8075)
!8075 = !{!8076}
!8076 = !DILocalVariable(name: "line", arg: 1, scope: !8074, file: !573, line: 137, type: !103)
!8077 = !DILocation(line: 0, scope: !8074)
!8078 = !DILocation(line: 141, column: 11, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8074, file: !573, line: 141, column: 6)
!8080 = !DILocation(line: 141, column: 6, scope: !8074)
!8081 = !DILocation(line: 145, column: 28, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8079, file: !573, line: 141, column: 17)
!8083 = !DILocation(line: 145, column: 3, scope: !8082)
!8084 = !DILocation(line: 147, column: 2, scope: !8082)
!8085 = !DILocation(line: 151, column: 1, scope: !8074)
!8086 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !7955, file: !7955, line: 309, type: !6391, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8087)
!8087 = !{!8088}
!8088 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8086, file: !7955, line: 309, type: !137)
!8089 = !DILocation(line: 0, scope: !8086)
!8090 = !DILocation(line: 311, column: 3, scope: !8086)
!8091 = !DILocation(line: 312, column: 1, scope: !8086)
!8092 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !573, file: !573, line: 202, type: !8093, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8095)
!8093 = !DISubroutineType(types: !8094)
!8094 = !{null, !103, !103}
!8095 = !{!8096, !8097}
!8096 = !DILocalVariable(name: "line", arg: 1, scope: !8092, file: !573, line: 202, type: !103)
!8097 = !DILocalVariable(name: "trigger", arg: 2, scope: !8092, file: !573, line: 202, type: !103)
!8098 = !DILocation(line: 0, scope: !8092)
!8099 = !DILocation(line: 211, column: 2, scope: !8092)
!8100 = !DILocation(line: 213, column: 36, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8092, file: !573, line: 211, column: 19)
!8102 = !DILocation(line: 213, column: 3, scope: !8101)
!8103 = !DILocation(line: 214, column: 3, scope: !8101)
!8104 = !DILocation(line: 215, column: 3, scope: !8101)
!8105 = !DILocation(line: 217, column: 35, scope: !8101)
!8106 = !DILocation(line: 217, column: 3, scope: !8101)
!8107 = !DILocation(line: 218, column: 3, scope: !8101)
!8108 = !DILocation(line: 219, column: 3, scope: !8101)
!8109 = !DILocation(line: 221, column: 36, scope: !8101)
!8110 = !DILocation(line: 221, column: 3, scope: !8101)
!8111 = !DILocation(line: 222, column: 3, scope: !8101)
!8112 = !DILocation(line: 223, column: 3, scope: !8101)
!8113 = !DILocation(line: 225, column: 35, scope: !8101)
!8114 = !DILocation(line: 225, column: 3, scope: !8101)
!8115 = !DILocation(line: 226, column: 3, scope: !8101)
!8116 = !DILocation(line: 227, column: 3, scope: !8101)
!8117 = !DILocation(line: 232, column: 1, scope: !8092)
!8118 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !7955, file: !7955, line: 573, type: !6391, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8119)
!8119 = !{!8120}
!8120 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8118, file: !7955, line: 573, type: !137)
!8121 = !DILocation(line: 0, scope: !8118)
!8122 = !DILocation(line: 575, column: 3, scope: !8118)
!8123 = !DILocation(line: 577, column: 1, scope: !8118)
!8124 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !7955, file: !7955, line: 703, type: !6391, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8125)
!8125 = !{!8126}
!8126 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8124, file: !7955, line: 703, type: !137)
!8127 = !DILocation(line: 0, scope: !8124)
!8128 = !DILocation(line: 705, column: 3, scope: !8124)
!8129 = !DILocation(line: 706, column: 1, scope: !8124)
!8130 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !7955, file: !7955, line: 529, type: !6391, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8131)
!8131 = !{!8132}
!8132 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8130, file: !7955, line: 529, type: !137)
!8133 = !DILocation(line: 0, scope: !8130)
!8134 = !DILocation(line: 531, column: 3, scope: !8130)
!8135 = !DILocation(line: 533, column: 1, scope: !8130)
!8136 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !7955, file: !7955, line: 661, type: !6391, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8137)
!8137 = !{!8138}
!8138 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8136, file: !7955, line: 661, type: !137)
!8139 = !DILocation(line: 0, scope: !8136)
!8140 = !DILocation(line: 663, column: 3, scope: !8136)
!8141 = !DILocation(line: 664, column: 1, scope: !8136)
!8142 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !573, file: !573, line: 433, type: !8143, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8145)
!8143 = !DISubroutineType(types: !8144)
!8144 = !{!103, !103, !613, !102}
!8145 = !{!8146, !8147, !8148, !8149, !8151}
!8146 = !DILocalVariable(name: "line", arg: 1, scope: !8142, file: !573, line: 433, type: !103)
!8147 = !DILocalVariable(name: "cb", arg: 2, scope: !8142, file: !573, line: 433, type: !613)
!8148 = !DILocalVariable(name: "arg", arg: 3, scope: !8142, file: !573, line: 433, type: !102)
!8149 = !DILocalVariable(name: "dev", scope: !8142, file: !573, line: 435, type: !8150)
!8150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !602)
!8151 = !DILocalVariable(name: "data", scope: !8142, file: !573, line: 436, type: !7909)
!8152 = !DILocation(line: 0, scope: !8142)
!8153 = !DILocation(line: 438, column: 21, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8142, file: !573, line: 438, column: 6)
!8155 = !DILocation(line: 438, column: 6, scope: !8154)
!8156 = !DILocation(line: 438, column: 6, scope: !8142)
!8157 = !DILocation(line: 442, column: 20, scope: !8142)
!8158 = !DILocation(line: 443, column: 17, scope: !8142)
!8159 = !DILocation(line: 443, column: 22, scope: !8142)
!8160 = !DILocation(line: 445, column: 2, scope: !8142)
!8161 = !DILocation(line: 446, column: 1, scope: !8142)
!8162 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !573, file: !573, line: 448, type: !7944, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8163)
!8163 = !{!8164, !8165, !8166}
!8164 = !DILocalVariable(name: "line", arg: 1, scope: !8162, file: !573, line: 448, type: !103)
!8165 = !DILocalVariable(name: "dev", scope: !8162, file: !573, line: 450, type: !8150)
!8166 = !DILocalVariable(name: "data", scope: !8162, file: !573, line: 451, type: !7909)
!8167 = !DILocation(line: 0, scope: !8162)
!8168 = !DILocation(line: 453, column: 17, scope: !8162)
!8169 = !DILocation(line: 453, column: 20, scope: !8162)
!8170 = !DILocation(line: 454, column: 17, scope: !8162)
!8171 = !DILocation(line: 454, column: 22, scope: !8162)
!8172 = !DILocation(line: 455, column: 1, scope: !8162)
!8173 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !756, file: !756, line: 183, type: !794, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !8174)
!8174 = !{!8175, !8176, !8177, !8178, !8179}
!8175 = !DILocalVariable(name: "dev", arg: 1, scope: !8173, file: !756, line: 183, type: !785)
!8176 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8173, file: !756, line: 184, type: !796)
!8177 = !DILocalVariable(name: "pclken", scope: !8173, file: !756, line: 186, type: !747)
!8178 = !DILocalVariable(name: "reg", scope: !8173, file: !756, line: 187, type: !1347)
!8179 = !DILocalVariable(name: "reg_val", scope: !8173, file: !756, line: 188, type: !137)
!8180 = !DILocation(line: 0, scope: !8173)
!8181 = !DILocation(line: 192, column: 6, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8173, file: !756, line: 192, column: 6)
!8183 = !DILocation(line: 192, column: 6, scope: !8173)
!8184 = !DILocation(line: 197, column: 52, scope: !8173)
!8185 = !DILocation(line: 197, column: 8, scope: !8173)
!8186 = !DILocation(line: 198, column: 12, scope: !8173)
!8187 = !DILocation(line: 199, column: 21, scope: !8173)
!8188 = !DILocation(line: 199, column: 10, scope: !8173)
!8189 = !DILocation(line: 200, column: 7, scope: !8173)
!8190 = !DILocation(line: 202, column: 2, scope: !8173)
!8191 = !DILocation(line: 203, column: 1, scope: !8173)
!8192 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !756, file: !756, line: 205, type: !794, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !8193)
!8193 = !{!8194, !8195, !8196, !8197, !8198}
!8194 = !DILocalVariable(name: "dev", arg: 1, scope: !8192, file: !756, line: 205, type: !785)
!8195 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8192, file: !756, line: 206, type: !796)
!8196 = !DILocalVariable(name: "pclken", scope: !8192, file: !756, line: 208, type: !747)
!8197 = !DILocalVariable(name: "reg", scope: !8192, file: !756, line: 209, type: !1347)
!8198 = !DILocalVariable(name: "reg_val", scope: !8192, file: !756, line: 210, type: !137)
!8199 = !DILocation(line: 0, scope: !8192)
!8200 = !DILocation(line: 214, column: 6, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8192, file: !756, line: 214, column: 6)
!8202 = !DILocation(line: 214, column: 6, scope: !8192)
!8203 = !DILocation(line: 219, column: 52, scope: !8192)
!8204 = !DILocation(line: 219, column: 8, scope: !8192)
!8205 = !DILocation(line: 220, column: 12, scope: !8192)
!8206 = !DILocation(line: 221, column: 22, scope: !8192)
!8207 = !DILocation(line: 221, column: 13, scope: !8192)
!8208 = !DILocation(line: 221, column: 10, scope: !8192)
!8209 = !DILocation(line: 222, column: 7, scope: !8192)
!8210 = !DILocation(line: 224, column: 2, scope: !8192)
!8211 = !DILocation(line: 225, column: 1, scope: !8192)
!8212 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !756, file: !756, line: 262, type: !810, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !8213)
!8213 = !{!8214, !8215, !8216, !8217, !8218, !8219, !8220, !8221}
!8214 = !DILocalVariable(name: "clock", arg: 1, scope: !8212, file: !756, line: 262, type: !785)
!8215 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8212, file: !756, line: 263, type: !796)
!8216 = !DILocalVariable(name: "rate", arg: 3, scope: !8212, file: !756, line: 264, type: !149)
!8217 = !DILocalVariable(name: "pclken", scope: !8212, file: !756, line: 266, type: !747)
!8218 = !DILocalVariable(name: "ahb_clock", scope: !8212, file: !756, line: 273, type: !137)
!8219 = !DILocalVariable(name: "apb1_clock", scope: !8212, file: !756, line: 274, type: !137)
!8220 = !DILocalVariable(name: "apb2_clock", scope: !8212, file: !756, line: 276, type: !137)
!8221 = !DILocalVariable(name: "ahb3_clock", scope: !8212, file: !756, line: 286, type: !137)
!8222 = !DILocation(line: 0, scope: !8212)
!8223 = !DILocation(line: 273, column: 23, scope: !8212)
!8224 = !DILocation(line: 299, column: 18, scope: !8212)
!8225 = !DILocation(line: 299, column: 2, scope: !8212)
!8226 = !DILocation(line: 274, column: 24, scope: !8212)
!8227 = !DILocation(line: 319, column: 3, scope: !8228)
!8228 = distinct !DILexicalBlock(scope: !8212, file: !756, line: 299, column: 23)
!8229 = !DILocation(line: 276, column: 24, scope: !8212)
!8230 = !DILocation(line: 323, column: 3, scope: !8228)
!8231 = !DILocation(line: 346, column: 33, scope: !8228)
!8232 = !DILocation(line: 346, column: 11, scope: !8228)
!8233 = !DILocation(line: 350, column: 3, scope: !8228)
!8234 = !DILocation(line: 354, column: 33, scope: !8228)
!8235 = !DILocation(line: 354, column: 11, scope: !8228)
!8236 = !DILocation(line: 358, column: 3, scope: !8228)
!8237 = !DILocation(line: 374, column: 3, scope: !8228)
!8238 = !DILocation(line: 379, column: 3, scope: !8228)
!8239 = !DILocation(line: 0, scope: !8228)
!8240 = !DILocation(line: 396, column: 1, scope: !8212)
!8241 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !756, file: !756, line: 227, type: !826, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !8242)
!8242 = !{!8243, !8244, !8245, !8246, !8247, !8248, !8249, !8250}
!8243 = !DILocalVariable(name: "dev", arg: 1, scope: !8241, file: !756, line: 227, type: !785)
!8244 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8241, file: !756, line: 228, type: !796)
!8245 = !DILocalVariable(name: "data", arg: 3, scope: !8241, file: !756, line: 229, type: !102)
!8246 = !DILocalVariable(name: "pclken", scope: !8241, file: !756, line: 233, type: !747)
!8247 = !DILocalVariable(name: "reg", scope: !8241, file: !756, line: 234, type: !1347)
!8248 = !DILocalVariable(name: "reg_val", scope: !8241, file: !756, line: 235, type: !137)
!8249 = !DILocalVariable(name: "dt_val", scope: !8241, file: !756, line: 235, type: !137)
!8250 = !DILocalVariable(name: "err", scope: !8241, file: !756, line: 236, type: !103)
!8251 = !DILocation(line: 0, scope: !8241)
!8252 = !DILocation(line: 241, column: 30, scope: !8241)
!8253 = !DILocation(line: 241, column: 8, scope: !8241)
!8254 = !DILocation(line: 242, column: 10, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8241, file: !756, line: 242, column: 6)
!8256 = !DILocation(line: 242, column: 6, scope: !8241)
!8257 = !DILocation(line: 247, column: 11, scope: !8241)
!8258 = !DILocation(line: 248, column: 6, scope: !8241)
!8259 = !DILocation(line: 247, column: 44, scope: !8241)
!8260 = !DILocation(line: 250, column: 6, scope: !8241)
!8261 = !DILocation(line: 249, column: 52, scope: !8241)
!8262 = !DILocation(line: 249, column: 8, scope: !8241)
!8263 = !DILocation(line: 251, column: 12, scope: !8241)
!8264 = !DILocation(line: 252, column: 10, scope: !8241)
!8265 = !DILocation(line: 253, column: 7, scope: !8241)
!8266 = !DILocation(line: 255, column: 2, scope: !8241)
!8267 = !DILocation(line: 260, column: 1, scope: !8241)
!8268 = distinct !DISubprogram(name: "enabled_clock", scope: !756, file: !756, line: 100, type: !8269, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !8271)
!8269 = !DISubroutineType(types: !8270)
!8270 = !{!103, !137}
!8271 = !{!8272, !8273}
!8272 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8268, file: !756, line: 100, type: !137)
!8273 = !DILocalVariable(name: "r", scope: !8268, file: !756, line: 102, type: !103)
!8274 = !DILocation(line: 0, scope: !8268)
!8275 = !DILocation(line: 104, column: 2, scope: !8268)
!8276 = !DILocation(line: 180, column: 2, scope: !8268)
!8277 = !DILocation(line: 181, column: 1, scope: !8268)
!8278 = distinct !DISubprogram(name: "get_bus_clock", scope: !756, file: !756, line: 79, type: !8279, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !8281)
!8279 = !DISubroutineType(types: !8280)
!8280 = !{!137, !137, !137}
!8281 = !{!8282, !8283}
!8282 = !DILocalVariable(name: "clock", arg: 1, scope: !8278, file: !756, line: 79, type: !137)
!8283 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8278, file: !756, line: 79, type: !137)
!8284 = !DILocation(line: 0, scope: !8278)
!8285 = !DILocation(line: 81, column: 15, scope: !8278)
!8286 = !DILocation(line: 81, column: 2, scope: !8278)
!8287 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !756, file: !756, line: 68, type: !8288, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !8290)
!8288 = !DISubroutineType(types: !8289)
!8289 = !{!137, !137, !103, !103, !103}
!8290 = !{!8291, !8292, !8293, !8294}
!8291 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8287, file: !756, line: 68, type: !137)
!8292 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8287, file: !756, line: 69, type: !103)
!8293 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8287, file: !756, line: 70, type: !103)
!8294 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8287, file: !756, line: 71, type: !103)
!8295 = !DILocation(line: 0, scope: !8287)
!8296 = !DILocation(line: 75, column: 22, scope: !8287)
!8297 = !DILocation(line: 76, column: 13, scope: !8287)
!8298 = !DILocation(line: 75, column: 34, scope: !8287)
!8299 = !DILocation(line: 75, column: 2, scope: !8287)
!8300 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !756, file: !756, line: 641, type: !783, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !8301)
!8301 = !{!8302, !8303, !8304}
!8302 = !DILocalVariable(name: "dev", arg: 1, scope: !8300, file: !756, line: 641, type: !785)
!8303 = !DILocalVariable(name: "old_flash_freq", scope: !8300, file: !756, line: 664, type: !137)
!8304 = !DILocalVariable(name: "new_flash_freq", scope: !8300, file: !756, line: 665, type: !137)
!8305 = !DILocation(line: 0, scope: !8300)
!8306 = !DILocation(line: 646, column: 2, scope: !8300)
!8307 = !DILocation(line: 667, column: 19, scope: !8300)
!8308 = !DILocation(line: 674, column: 21, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8300, file: !756, line: 674, column: 6)
!8310 = !DILocation(line: 674, column: 6, scope: !8300)
!8311 = !DILocation(line: 675, column: 3, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8309, file: !756, line: 674, column: 59)
!8313 = !DILocation(line: 676, column: 2, scope: !8312)
!8314 = !DILocation(line: 680, column: 2, scope: !8300)
!8315 = !DILocation(line: 683, column: 2, scope: !8300)
!8316 = !DILocation(line: 690, column: 3, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !8318, file: !756, line: 689, column: 9)
!8318 = distinct !DILexicalBlock(scope: !8300, file: !756, line: 685, column: 6)
!8319 = !DILocation(line: 695, column: 2, scope: !8300)
!8320 = !DILocation(line: 696, column: 2, scope: !8300)
!8321 = !DILocation(line: 696, column: 9, scope: !8300)
!8322 = !DILocation(line: 696, column: 34, scope: !8300)
!8323 = distinct !{!8323, !8320, !8324}
!8324 = !DILocation(line: 697, column: 2, scope: !8300)
!8325 = !DILocation(line: 720, column: 21, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8300, file: !756, line: 720, column: 6)
!8327 = !DILocation(line: 720, column: 6, scope: !8300)
!8328 = !DILocation(line: 721, column: 3, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8326, file: !756, line: 720, column: 60)
!8330 = !DILocation(line: 722, column: 2, scope: !8329)
!8331 = !DILocation(line: 725, column: 18, scope: !8300)
!8332 = !DILocation(line: 728, column: 2, scope: !8300)
!8333 = !DILocation(line: 730, column: 2, scope: !8300)
!8334 = !DILocation(line: 745, column: 2, scope: !8300)
!8335 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8336, file: !8336, line: 3275, type: !135, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !162)
!8336 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8337 = !DILocation(line: 3277, column: 21, scope: !8335)
!8338 = !DILocation(line: 3277, column: 3, scope: !8335)
!8339 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !756, file: !756, line: 507, type: !2826, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !162)
!8340 = !DILocation(line: 516, column: 4, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8342, file: !756, line: 515, column: 10)
!8342 = distinct !DILexicalBlock(scope: !8343, file: !756, line: 513, column: 7)
!8343 = distinct !DILexicalBlock(scope: !8344, file: !756, line: 510, column: 37)
!8344 = distinct !DILexicalBlock(scope: !8339, file: !756, line: 510, column: 6)
!8345 = !DILocation(line: 526, column: 3, scope: !8343)
!8346 = !DILocation(line: 527, column: 3, scope: !8343)
!8347 = !DILocation(line: 527, column: 10, scope: !8343)
!8348 = !DILocation(line: 527, column: 31, scope: !8343)
!8349 = distinct !{!8349, !8346, !8350}
!8350 = !DILocation(line: 529, column: 3, scope: !8343)
!8351 = !DILocation(line: 583, column: 3, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8353, file: !756, line: 577, column: 37)
!8353 = distinct !DILexicalBlock(scope: !8339, file: !756, line: 577, column: 6)
!8354 = !DILocation(line: 584, column: 3, scope: !8352)
!8355 = !DILocation(line: 584, column: 10, scope: !8352)
!8356 = !DILocation(line: 584, column: 31, scope: !8352)
!8357 = distinct !{!8357, !8354, !8358}
!8358 = !DILocation(line: 585, column: 3, scope: !8352)
!8359 = !DILocation(line: 627, column: 1, scope: !8339)
!8360 = distinct !DISubprogram(name: "set_up_plls", scope: !756, file: !756, line: 448, type: !2826, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !162)
!8361 = !DILocation(line: 460, column: 6, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !8360, file: !756, line: 460, column: 6)
!8363 = !DILocation(line: 460, column: 31, scope: !8362)
!8364 = !DILocation(line: 460, column: 6, scope: !8360)
!8365 = !DILocation(line: 461, column: 3, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8362, file: !756, line: 460, column: 67)
!8367 = !DILocation(line: 462, column: 3, scope: !8366)
!8368 = !DILocation(line: 463, column: 2, scope: !8366)
!8369 = !DILocation(line: 464, column: 2, scope: !8360)
!8370 = !DILocation(line: 488, column: 2, scope: !8360)
!8371 = !DILocation(line: 492, column: 2, scope: !8360)
!8372 = !DILocation(line: 496, column: 2, scope: !8360)
!8373 = !DILocation(line: 499, column: 2, scope: !8360)
!8374 = !DILocation(line: 500, column: 2, scope: !8360)
!8375 = !DILocation(line: 500, column: 9, scope: !8360)
!8376 = !DILocation(line: 500, column: 30, scope: !8360)
!8377 = distinct !{!8377, !8374, !8378}
!8378 = !DILocation(line: 502, column: 2, scope: !8360)
!8379 = !DILocation(line: 505, column: 1, scope: !8360)
!8380 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8336, file: !8336, line: 3224, type: !6391, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !8381)
!8381 = !{!8382}
!8382 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8380, file: !8336, line: 3224, type: !137)
!8383 = !DILocation(line: 0, scope: !8380)
!8384 = !DILocation(line: 3226, column: 3, scope: !8380)
!8385 = !DILocation(line: 3227, column: 1, scope: !8380)
!8386 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8336, file: !8336, line: 3188, type: !6391, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !8387)
!8387 = !{!8388}
!8388 = !DILocalVariable(name: "Source", arg: 1, scope: !8386, file: !8336, line: 3188, type: !137)
!8389 = !DILocation(line: 0, scope: !8386)
!8390 = !DILocation(line: 3190, column: 3, scope: !8386)
!8391 = !DILocation(line: 3191, column: 1, scope: !8386)
!8392 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8336, file: !8336, line: 3204, type: !135, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !162)
!8393 = !DILocation(line: 3206, column: 21, scope: !8392)
!8394 = !DILocation(line: 3206, column: 3, scope: !8392)
!8395 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8336, file: !8336, line: 3240, type: !6391, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !8396)
!8396 = !{!8397}
!8397 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8395, file: !8336, line: 3240, type: !137)
!8398 = !DILocation(line: 0, scope: !8395)
!8399 = !DILocation(line: 3242, column: 3, scope: !8395)
!8400 = !DILocation(line: 3243, column: 1, scope: !8395)
!8401 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8336, file: !8336, line: 3256, type: !6391, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !8402)
!8402 = !{!8403}
!8403 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8401, file: !8336, line: 3256, type: !137)
!8404 = !DILocation(line: 0, scope: !8401)
!8405 = !DILocation(line: 3258, column: 3, scope: !8401)
!8406 = !DILocation(line: 3259, column: 1, scope: !8401)
!8407 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !756, file: !756, line: 409, type: !2826, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !162)
!8408 = !DILocation(line: 412, column: 6, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8407, file: !756, line: 412, column: 6)
!8410 = !DILocation(line: 412, column: 27, scope: !8409)
!8411 = !DILocation(line: 412, column: 6, scope: !8407)
!8412 = !DILocation(line: 414, column: 3, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !8409, file: !756, line: 412, column: 33)
!8414 = !DILocation(line: 415, column: 3, scope: !8413)
!8415 = !DILocation(line: 415, column: 10, scope: !8413)
!8416 = !DILocation(line: 415, column: 31, scope: !8413)
!8417 = distinct !{!8417, !8414, !8418}
!8418 = !DILocation(line: 417, column: 3, scope: !8413)
!8419 = !DILocation(line: 421, column: 2, scope: !8407)
!8420 = !DILocation(line: 422, column: 2, scope: !8407)
!8421 = !DILocation(line: 422, column: 9, scope: !8407)
!8422 = !DILocation(line: 422, column: 34, scope: !8407)
!8423 = distinct !{!8423, !8420, !8424}
!8424 = !DILocation(line: 423, column: 2, scope: !8407)
!8425 = !DILocation(line: 424, column: 1, scope: !8407)
!8426 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8336, file: !8336, line: 4195, type: !2826, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !162)
!8427 = !DILocation(line: 4197, column: 3, scope: !8426)
!8428 = !DILocation(line: 4198, column: 1, scope: !8426)
!8429 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8336, file: !8336, line: 4184, type: !2826, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !162)
!8430 = !DILocation(line: 4186, column: 3, scope: !8429)
!8431 = !DILocation(line: 4187, column: 1, scope: !8429)
!8432 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8336, file: !8336, line: 4205, type: !135, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !162)
!8433 = !DILocation(line: 4207, column: 11, scope: !8432)
!8434 = !DILocation(line: 4207, column: 44, scope: !8432)
!8435 = !DILocation(line: 4207, column: 3, scope: !8432)
!8436 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8336, file: !8336, line: 3007, type: !135, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !162)
!8437 = !DILocation(line: 3009, column: 11, scope: !8436)
!8438 = !DILocation(line: 3009, column: 44, scope: !8436)
!8439 = !DILocation(line: 3009, column: 3, scope: !8436)
!8440 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8336, file: !8336, line: 2987, type: !2826, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !162)
!8441 = !DILocation(line: 2989, column: 3, scope: !8440)
!8442 = !DILocation(line: 2990, column: 1, scope: !8440)
!8443 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8336, file: !8336, line: 2939, type: !2826, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !162)
!8444 = !DILocation(line: 2941, column: 3, scope: !8443)
!8445 = !DILocation(line: 2942, column: 1, scope: !8443)
!8446 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8336, file: !8336, line: 2949, type: !2826, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !162)
!8447 = !DILocation(line: 2951, column: 3, scope: !8446)
!8448 = !DILocation(line: 2952, column: 1, scope: !8446)
!8449 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8336, file: !8336, line: 2969, type: !135, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !162)
!8450 = !DILocation(line: 2971, column: 11, scope: !8449)
!8451 = !DILocation(line: 2971, column: 44, scope: !8449)
!8452 = !DILocation(line: 2971, column: 3, scope: !8449)
!8453 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8336, file: !8336, line: 3143, type: !2826, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !162)
!8454 = !DILocation(line: 3145, column: 3, scope: !8453)
!8455 = !DILocation(line: 3146, column: 1, scope: !8453)
!8456 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8336, file: !8336, line: 3163, type: !135, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !162)
!8457 = !DILocation(line: 3165, column: 11, scope: !8456)
!8458 = !DILocation(line: 3165, column: 46, scope: !8456)
!8459 = !DILocation(line: 3165, column: 3, scope: !8456)
!8460 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8461, file: !8461, line: 40, type: !135, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2600, retainedNodes: !162)
!8461 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8462 = !DILocation(line: 45, column: 3, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8464, file: !8461, line: 44, column: 44)
!8464 = distinct !DILexicalBlock(scope: !8465, file: !8461, line: 44, column: 13)
!8465 = distinct !DILexicalBlock(scope: !8460, file: !8461, line: 42, column: 6)
!8466 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8461, file: !8461, line: 56, type: !2826, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2600, retainedNodes: !162)
!8467 = !DILocation(line: 58, column: 2, scope: !8466)
!8468 = !DILocation(line: 62, column: 1, scope: !8466)
!8469 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8336, file: !8336, line: 4304, type: !8470, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2600, retainedNodes: !8472)
!8470 = !DISubroutineType(types: !8471)
!8471 = !{null, !137, !137, !137, !137}
!8472 = !{!8473, !8474, !8475, !8476}
!8473 = !DILocalVariable(name: "Source", arg: 1, scope: !8469, file: !8336, line: 4304, type: !137)
!8474 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8469, file: !8336, line: 4304, type: !137)
!8475 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8469, file: !8336, line: 4304, type: !137)
!8476 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8469, file: !8336, line: 4304, type: !137)
!8477 = !DILocation(line: 0, scope: !8469)
!8478 = !DILocation(line: 4306, column: 3, scope: !8469)
!8479 = !DILocation(line: 4308, column: 3, scope: !8469)
!8480 = !DILocation(line: 4312, column: 1, scope: !8469)
!8481 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8461, file: !8461, line: 69, type: !2826, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2600, retainedNodes: !162)
!8482 = !DILocation(line: 72, column: 2, scope: !8481)
!8483 = !DILocation(line: 73, column: 1, scope: !8481)
!8484 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8485, file: !8485, line: 1185, type: !6391, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2600, retainedNodes: !8486)
!8485 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8486 = !{!8487, !8488}
!8487 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8484, file: !8485, line: 1185, type: !137)
!8488 = !DILocalVariable(name: "tmpreg", scope: !8484, file: !8485, line: 1187, type: !176)
!8489 = !DILocation(line: 0, scope: !8484)
!8490 = !DILocation(line: 1187, column: 3, scope: !8484)
!8491 = !DILocation(line: 1187, column: 17, scope: !8484)
!8492 = !DILocation(line: 1188, column: 3, scope: !8484)
!8493 = !DILocation(line: 1190, column: 12, scope: !8484)
!8494 = !DILocation(line: 1190, column: 10, scope: !8484)
!8495 = !DILocation(line: 1191, column: 9, scope: !8484)
!8496 = !DILocation(line: 1192, column: 1, scope: !8484)
!8497 = distinct !DISubprogram(name: "uart_console_init", scope: !887, file: !887, line: 588, type: !864, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !830, retainedNodes: !8498)
!8498 = !{!8499}
!8499 = !DILocalVariable(name: "arg", arg: 1, scope: !8497, file: !887, line: 588, type: !842)
!8500 = !DILocation(line: 0, scope: !8497)
!8501 = !DILocation(line: 593, column: 7, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8497, file: !887, line: 593, column: 6)
!8503 = !DILocation(line: 593, column: 6, scope: !8497)
!8504 = !DILocation(line: 597, column: 2, scope: !8497)
!8505 = !DILocation(line: 599, column: 2, scope: !8497)
!8506 = !DILocation(line: 600, column: 1, scope: !8497)
!8507 = distinct !DISubprogram(name: "device_is_ready", scope: !8508, file: !8508, line: 47, type: !8509, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !830, retainedNodes: !8511)
!8508 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!8509 = !DISubroutineType(types: !8510)
!8510 = !{!211, !842}
!8511 = !{!8512}
!8512 = !DILocalVariable(name: "dev", arg: 1, scope: !8507, file: !8508, line: 47, type: !842)
!8513 = !DILocation(line: 0, scope: !8507)
!8514 = !DILocation(line: 55, column: 2, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8507, file: !8508, line: 55, column: 2)
!8516 = !{i64 2155043412}
!8517 = !DILocation(line: 56, column: 9, scope: !8507)
!8518 = !DILocation(line: 56, column: 2, scope: !8507)
!8519 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !887, file: !887, line: 573, type: !2826, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !830, retainedNodes: !162)
!8520 = !DILocation(line: 576, column: 2, scope: !8519)
!8521 = !DILocation(line: 579, column: 2, scope: !8519)
!8522 = !DILocation(line: 581, column: 1, scope: !8519)
!8523 = distinct !DISubprogram(name: "console_out", scope: !887, file: !887, line: 77, type: !129, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !830, retainedNodes: !8524)
!8524 = !{!8525}
!8525 = !DILocalVariable(name: "c", arg: 1, scope: !8523, file: !887, line: 77, type: !103)
!8526 = !DILocation(line: 0, scope: !8523)
!8527 = !DILocation(line: 89, column: 11, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8523, file: !887, line: 89, column: 6)
!8529 = !DILocation(line: 89, column: 6, scope: !8523)
!8530 = !DILocation(line: 90, column: 3, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8528, file: !887, line: 89, column: 17)
!8532 = !DILocation(line: 91, column: 2, scope: !8531)
!8533 = !DILocation(line: 92, column: 34, scope: !8523)
!8534 = !DILocation(line: 92, column: 2, scope: !8523)
!8535 = !DILocation(line: 94, column: 2, scope: !8523)
!8536 = distinct !DISubprogram(name: "uart_poll_out", scope: !8537, file: !8537, line: 95, type: !860, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !830, retainedNodes: !8538)
!8537 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/basic/sys_heap")
!8538 = !{!8539, !8540}
!8539 = !DILocalVariable(name: "dev", arg: 1, scope: !8536, file: !8537, line: 95, type: !842)
!8540 = !DILocalVariable(name: "out_char", arg: 2, scope: !8536, file: !8537, line: 95, type: !209)
!8541 = !DILocation(line: 0, scope: !8536)
!8542 = !DILocation(line: 105, column: 2, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8536, file: !8537, line: 105, column: 2)
!8544 = !{i64 2155126803}
!8545 = !DILocation(line: 106, column: 2, scope: !8536)
!8546 = !DILocation(line: 107, column: 1, scope: !8536)
!8547 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !836, file: !836, line: 574, type: !860, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !830, retainedNodes: !8548)
!8548 = !{!8549, !8550, !8551}
!8549 = !DILocalVariable(name: "dev", arg: 1, scope: !8547, file: !836, line: 574, type: !842)
!8550 = !DILocalVariable(name: "out_char", arg: 2, scope: !8547, file: !836, line: 575, type: !209)
!8551 = !DILocalVariable(name: "api", scope: !8547, file: !836, line: 577, type: !833)
!8552 = !DILocation(line: 0, scope: !8547)
!8553 = !DILocation(line: 578, column: 40, scope: !8547)
!8554 = !DILocation(line: 580, column: 7, scope: !8547)
!8555 = !DILocation(line: 580, column: 2, scope: !8547)
!8556 = !DILocation(line: 581, column: 1, scope: !8547)
!8557 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !196, file: !196, line: 730, type: !8509, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !830, retainedNodes: !8558)
!8558 = !{!8559}
!8559 = !DILocalVariable(name: "dev", arg: 1, scope: !8557, file: !196, line: 730, type: !842)
!8560 = !DILocation(line: 0, scope: !8557)
!8561 = !DILocation(line: 732, column: 9, scope: !8557)
!8562 = !DILocation(line: 732, column: 2, scope: !8557)
!8563 = distinct !DISubprogram(name: "uart_register_input", scope: !887, file: !887, line: 560, type: !8564, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !830, retainedNodes: !8609)
!8564 = !DISubroutineType(types: !8565)
!8565 = !{null, !8566, !8566, !8606}
!8566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8567, size: 32)
!8567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !357, line: 2208, size: 128, elements: !8568)
!8568 = !{!8569}
!8569 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8567, file: !357, line: 2209, baseType: !8570, size: 128)
!8570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !357, line: 1709, size: 128, elements: !8571)
!8571 = !{!8572, !8585, !8587}
!8572 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8570, file: !357, line: 1710, baseType: !8573, size: 64)
!8573 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8574, line: 46, baseType: !8575)
!8574 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8574, line: 41, size: 64, elements: !8576)
!8576 = !{!8577, !8584}
!8577 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8575, file: !8574, line: 42, baseType: !8578, size: 32)
!8578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8579, size: 32)
!8579 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8574, line: 39, baseType: !8580)
!8580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8574, line: 35, size: 32, elements: !8581)
!8581 = !{!8582}
!8582 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8580, file: !8574, line: 36, baseType: !8583, size: 32)
!8583 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8574, line: 32, baseType: !137)
!8584 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8575, file: !8574, line: 43, baseType: !8578, size: 32, offset: 32)
!8585 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8570, file: !357, line: 1711, baseType: !8586, offset: 64)
!8586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!8587 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8570, file: !357, line: 1712, baseType: !8588, size: 64, offset: 64)
!8588 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !8589)
!8589 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !8590)
!8590 = !{!8591}
!8591 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8589, file: !299, line: 232, baseType: !8592, size: 64)
!8592 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !8593)
!8593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !8594)
!8594 = !{!8595, !8601}
!8595 = !DIDerivedType(tag: DW_TAG_member, scope: !8593, file: !273, line: 38, baseType: !8596, size: 32)
!8596 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8593, file: !273, line: 38, size: 32, elements: !8597)
!8597 = !{!8598, !8600}
!8598 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8596, file: !273, line: 39, baseType: !8599, size: 32)
!8599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8593, size: 32)
!8600 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8596, file: !273, line: 40, baseType: !8599, size: 32)
!8601 = !DIDerivedType(tag: DW_TAG_member, scope: !8593, file: !273, line: 42, baseType: !8602, size: 32, offset: 32)
!8602 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8593, file: !273, line: 42, size: 32, elements: !8603)
!8603 = !{!8604, !8605}
!8604 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8602, file: !273, line: 43, baseType: !8599, size: 32)
!8605 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8602, file: !273, line: 44, baseType: !8599, size: 32)
!8606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8607, size: 32)
!8607 = !DISubroutineType(types: !8608)
!8608 = !{!208, !1022, !208}
!8609 = !{!8610, !8611, !8612}
!8610 = !DILocalVariable(name: "avail", arg: 1, scope: !8563, file: !887, line: 560, type: !8566)
!8611 = !DILocalVariable(name: "lines", arg: 2, scope: !8563, file: !887, line: 560, type: !8566)
!8612 = !DILocalVariable(name: "completion", arg: 3, scope: !8563, file: !887, line: 561, type: !8606)
!8613 = !DILocation(line: 0, scope: !8563)
!8614 = !DILocation(line: 566, column: 1, scope: !8563)
!8615 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1066, file: !1066, line: 523, type: !923, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8616)
!8616 = !{!8617, !8618, !8619, !8620, !8621}
!8617 = !DILocalVariable(name: "dev", arg: 1, scope: !8615, file: !1066, line: 523, type: !925)
!8618 = !DILocalVariable(name: "pin", arg: 2, scope: !8615, file: !1066, line: 524, type: !940)
!8619 = !DILocalVariable(name: "flags", arg: 3, scope: !8615, file: !1066, line: 524, type: !941)
!8620 = !DILocalVariable(name: "err", scope: !8615, file: !1066, line: 526, type: !103)
!8621 = !DILocalVariable(name: "pincfg", scope: !8615, file: !1066, line: 527, type: !103)
!8622 = !DILocation(line: 0, scope: !8615)
!8623 = !DILocation(line: 527, column: 2, scope: !8615)
!8624 = !DILocation(line: 532, column: 8, scope: !8615)
!8625 = !DILocation(line: 533, column: 10, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8615, file: !1066, line: 533, column: 6)
!8627 = !DILocation(line: 533, column: 6, scope: !8615)
!8628 = !DILocation(line: 543, column: 13, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8615, file: !1066, line: 543, column: 6)
!8630 = !DILocation(line: 543, column: 28, scope: !8629)
!8631 = !DILocation(line: 543, column: 6, scope: !8615)
!8632 = !DILocation(line: 544, column: 14, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8634, file: !1066, line: 544, column: 7)
!8634 = distinct !DILexicalBlock(scope: !8629, file: !1066, line: 543, column: 34)
!8635 = !DILocation(line: 544, column: 39, scope: !8633)
!8636 = !DILocation(line: 544, column: 7, scope: !8634)
!8637 = !DILocation(line: 545, column: 38, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8633, file: !1066, line: 544, column: 45)
!8639 = !DILocation(line: 545, column: 4, scope: !8638)
!8640 = !DILocation(line: 546, column: 3, scope: !8638)
!8641 = !DILocation(line: 546, column: 21, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8633, file: !1066, line: 546, column: 14)
!8643 = !DILocation(line: 546, column: 45, scope: !8642)
!8644 = !DILocation(line: 546, column: 14, scope: !8633)
!8645 = !DILocation(line: 547, column: 40, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !8642, file: !1066, line: 546, column: 51)
!8647 = !DILocation(line: 547, column: 4, scope: !8646)
!8648 = !DILocation(line: 548, column: 3, scope: !8646)
!8649 = !DILocation(line: 551, column: 32, scope: !8615)
!8650 = !DILocation(line: 551, column: 37, scope: !8615)
!8651 = !DILocation(line: 551, column: 2, scope: !8615)
!8652 = !DILocation(line: 554, column: 6, scope: !8615)
!8653 = !DILocation(line: 562, column: 1, scope: !8615)
!8654 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1066, file: !1066, line: 410, type: !8655, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8657)
!8655 = !DISubroutineType(types: !8656)
!8656 = !{!103, !925, !149}
!8657 = !{!8658, !8659, !8660, !8662}
!8658 = !DILocalVariable(name: "dev", arg: 1, scope: !8654, file: !1066, line: 410, type: !925)
!8659 = !DILocalVariable(name: "value", arg: 2, scope: !8654, file: !1066, line: 410, type: !149)
!8660 = !DILocalVariable(name: "cfg", scope: !8654, file: !1066, line: 412, type: !8661)
!8661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 32)
!8662 = !DILocalVariable(name: "gpio", scope: !8654, file: !1066, line: 413, type: !998)
!8663 = !DILocation(line: 0, scope: !8654)
!8664 = !DILocation(line: 412, column: 45, scope: !8654)
!8665 = !DILocation(line: 413, column: 44, scope: !8654)
!8666 = !DILocation(line: 415, column: 11, scope: !8654)
!8667 = !DILocation(line: 415, column: 9, scope: !8654)
!8668 = !DILocation(line: 417, column: 2, scope: !8654)
!8669 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1066, file: !1066, line: 420, type: !950, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8670)
!8670 = !{!8671, !8672, !8673, !8674, !8675, !8676}
!8671 = !DILocalVariable(name: "dev", arg: 1, scope: !8669, file: !1066, line: 420, type: !925)
!8672 = !DILocalVariable(name: "mask", arg: 2, scope: !8669, file: !1066, line: 421, type: !952)
!8673 = !DILocalVariable(name: "value", arg: 3, scope: !8669, file: !1066, line: 422, type: !947)
!8674 = !DILocalVariable(name: "cfg", scope: !8669, file: !1066, line: 424, type: !8661)
!8675 = !DILocalVariable(name: "gpio", scope: !8669, file: !1066, line: 425, type: !998)
!8676 = !DILocalVariable(name: "port_value", scope: !8669, file: !1066, line: 426, type: !137)
!8677 = !DILocation(line: 0, scope: !8669)
!8678 = !DILocation(line: 424, column: 45, scope: !8669)
!8679 = !DILocation(line: 425, column: 44, scope: !8669)
!8680 = !DILocation(line: 430, column: 15, scope: !8669)
!8681 = !DILocation(line: 431, column: 46, scope: !8669)
!8682 = !DILocation(line: 431, column: 44, scope: !8669)
!8683 = !DILocation(line: 431, column: 61, scope: !8669)
!8684 = !DILocation(line: 431, column: 53, scope: !8669)
!8685 = !DILocation(line: 431, column: 2, scope: !8669)
!8686 = !DILocation(line: 435, column: 2, scope: !8669)
!8687 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1066, file: !1066, line: 438, type: !955, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8688)
!8688 = !{!8689, !8690, !8691, !8692}
!8689 = !DILocalVariable(name: "dev", arg: 1, scope: !8687, file: !1066, line: 438, type: !925)
!8690 = !DILocalVariable(name: "pins", arg: 2, scope: !8687, file: !1066, line: 439, type: !952)
!8691 = !DILocalVariable(name: "cfg", scope: !8687, file: !1066, line: 441, type: !8661)
!8692 = !DILocalVariable(name: "gpio", scope: !8687, file: !1066, line: 442, type: !998)
!8693 = !DILocation(line: 0, scope: !8687)
!8694 = !DILocation(line: 441, column: 45, scope: !8687)
!8695 = !DILocation(line: 442, column: 44, scope: !8687)
!8696 = !DILocation(line: 448, column: 2, scope: !8687)
!8697 = !DILocation(line: 450, column: 2, scope: !8687)
!8698 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1066, file: !1066, line: 453, type: !955, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8699)
!8699 = !{!8700, !8701, !8702, !8703}
!8700 = !DILocalVariable(name: "dev", arg: 1, scope: !8698, file: !1066, line: 453, type: !925)
!8701 = !DILocalVariable(name: "pins", arg: 2, scope: !8698, file: !1066, line: 454, type: !952)
!8702 = !DILocalVariable(name: "cfg", scope: !8698, file: !1066, line: 456, type: !8661)
!8703 = !DILocalVariable(name: "gpio", scope: !8698, file: !1066, line: 457, type: !998)
!8704 = !DILocation(line: 0, scope: !8698)
!8705 = !DILocation(line: 456, column: 45, scope: !8698)
!8706 = !DILocation(line: 457, column: 44, scope: !8698)
!8707 = !DILocation(line: 467, column: 2, scope: !8698)
!8708 = !DILocation(line: 470, column: 2, scope: !8698)
!8709 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1066, file: !1066, line: 473, type: !955, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8710)
!8710 = !{!8711, !8712, !8713, !8714}
!8711 = !DILocalVariable(name: "dev", arg: 1, scope: !8709, file: !1066, line: 473, type: !925)
!8712 = !DILocalVariable(name: "pins", arg: 2, scope: !8709, file: !1066, line: 474, type: !952)
!8713 = !DILocalVariable(name: "cfg", scope: !8709, file: !1066, line: 476, type: !8661)
!8714 = !DILocalVariable(name: "gpio", scope: !8709, file: !1066, line: 477, type: !998)
!8715 = !DILocation(line: 0, scope: !8709)
!8716 = !DILocation(line: 476, column: 45, scope: !8709)
!8717 = !DILocation(line: 477, column: 44, scope: !8709)
!8718 = !DILocation(line: 484, column: 2, scope: !8709)
!8719 = !DILocation(line: 487, column: 2, scope: !8709)
!8720 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1066, file: !1066, line: 594, type: !961, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8721)
!8721 = !{!8722, !8723, !8724, !8725, !8726, !8727, !8729, !8730, !8731}
!8722 = !DILocalVariable(name: "dev", arg: 1, scope: !8720, file: !1066, line: 594, type: !925)
!8723 = !DILocalVariable(name: "pin", arg: 2, scope: !8720, file: !1066, line: 595, type: !940)
!8724 = !DILocalVariable(name: "mode", arg: 3, scope: !8720, file: !1066, line: 596, type: !899)
!8725 = !DILocalVariable(name: "trig", arg: 4, scope: !8720, file: !1066, line: 597, type: !905)
!8726 = !DILocalVariable(name: "cfg", scope: !8720, file: !1066, line: 599, type: !8661)
!8727 = !DILocalVariable(name: "data", scope: !8720, file: !1066, line: 600, type: !8728)
!8728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 32)
!8729 = !DILocalVariable(name: "edge", scope: !8720, file: !1066, line: 601, type: !103)
!8730 = !DILocalVariable(name: "err", scope: !8720, file: !1066, line: 602, type: !103)
!8731 = !DILabel(scope: !8720, name: "exit", file: !1066, line: 643)
!8732 = !DILocation(line: 0, scope: !8720)
!8733 = !DILocation(line: 599, column: 45, scope: !8720)
!8734 = !DILocation(line: 604, column: 6, scope: !8720)
!8735 = !DILocation(line: 605, column: 34, scope: !8736)
!8736 = distinct !DILexicalBlock(scope: !8737, file: !1066, line: 605, column: 7)
!8737 = distinct !DILexicalBlock(scope: !8738, file: !1066, line: 604, column: 38)
!8738 = distinct !DILexicalBlock(scope: !8720, file: !1066, line: 604, column: 6)
!8739 = !DILocation(line: 605, column: 7, scope: !8736)
!8740 = !DILocation(line: 605, column: 47, scope: !8736)
!8741 = !DILocation(line: 605, column: 39, scope: !8736)
!8742 = !DILocation(line: 605, column: 7, scope: !8737)
!8743 = !DILocation(line: 606, column: 4, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8736, file: !1066, line: 605, column: 53)
!8745 = !DILocation(line: 607, column: 4, scope: !8744)
!8746 = !DILocation(line: 608, column: 4, scope: !8744)
!8747 = !DILocation(line: 609, column: 3, scope: !8744)
!8748 = !DILocation(line: 600, column: 38, scope: !8720)
!8749 = !DILocation(line: 620, column: 30, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8720, file: !1066, line: 620, column: 6)
!8751 = !DILocation(line: 620, column: 6, scope: !8750)
!8752 = !DILocation(line: 620, column: 57, scope: !8750)
!8753 = !DILocation(line: 620, column: 6, scope: !8720)
!8754 = !DILocation(line: 625, column: 29, scope: !8720)
!8755 = !DILocation(line: 625, column: 2, scope: !8720)
!8756 = !DILocation(line: 627, column: 2, scope: !8720)
!8757 = !DILocation(line: 630, column: 3, scope: !8758)
!8758 = distinct !DILexicalBlock(scope: !8720, file: !1066, line: 627, column: 16)
!8759 = !DILocation(line: 633, column: 3, scope: !8758)
!8760 = !DILocation(line: 636, column: 3, scope: !8758)
!8761 = !DILocation(line: 639, column: 2, scope: !8720)
!8762 = !DILocation(line: 641, column: 2, scope: !8720)
!8763 = !DILocation(line: 643, column: 1, scope: !8720)
!8764 = !DILocation(line: 644, column: 2, scope: !8720)
!8765 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1066, file: !1066, line: 647, type: !965, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8766)
!8766 = !{!8767, !8768, !8769, !8770}
!8767 = !DILocalVariable(name: "dev", arg: 1, scope: !8765, file: !1066, line: 647, type: !925)
!8768 = !DILocalVariable(name: "callback", arg: 2, scope: !8765, file: !1066, line: 648, type: !967)
!8769 = !DILocalVariable(name: "set", arg: 3, scope: !8765, file: !1066, line: 649, type: !211)
!8770 = !DILocalVariable(name: "data", scope: !8765, file: !1066, line: 651, type: !8728)
!8771 = !DILocation(line: 0, scope: !8765)
!8772 = !DILocation(line: 651, column: 38, scope: !8765)
!8773 = !DILocation(line: 653, column: 37, scope: !8765)
!8774 = !DILocation(line: 653, column: 9, scope: !8765)
!8775 = !DILocation(line: 653, column: 2, scope: !8765)
!8776 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8777, file: !8777, line: 38, type: !8778, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8781)
!8777 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8778 = !DISubroutineType(types: !8779)
!8779 = !{!103, !8780, !967, !211}
!8780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 32)
!8781 = !{!8782, !8783, !8784}
!8782 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8776, file: !8777, line: 38, type: !8780)
!8783 = !DILocalVariable(name: "callback", arg: 2, scope: !8776, file: !8777, line: 39, type: !967)
!8784 = !DILocalVariable(name: "set", arg: 3, scope: !8776, file: !8777, line: 40, type: !211)
!8785 = !DILocation(line: 0, scope: !8776)
!8786 = !DILocation(line: 45, column: 7, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8776, file: !8777, line: 45, column: 6)
!8788 = !DILocation(line: 45, column: 6, scope: !8776)
!8789 = !DILocation(line: 46, column: 56, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8791, file: !8777, line: 46, column: 7)
!8791 = distinct !DILexicalBlock(scope: !8787, file: !8777, line: 45, column: 38)
!8792 = !DILocation(line: 46, column: 8, scope: !8790)
!8793 = !DILocation(line: 46, column: 7, scope: !8791)
!8794 = !DILocation(line: 51, column: 13, scope: !8787)
!8795 = !DILocation(line: 56, column: 43, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8797, file: !8777, line: 55, column: 11)
!8797 = distinct !DILexicalBlock(scope: !8776, file: !8777, line: 55, column: 6)
!8798 = !DILocation(line: 56, column: 3, scope: !8796)
!8799 = !DILocation(line: 57, column: 2, scope: !8796)
!8800 = !DILocation(line: 60, column: 1, scope: !8776)
!8801 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !972, file: !972, line: 261, type: !8802, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8804)
!8802 = !DISubroutineType(types: !8803)
!8803 = !{!211, !8780}
!8804 = !{!8805}
!8805 = !DILocalVariable(name: "list", arg: 1, scope: !8801, file: !972, line: 261, type: !8780)
!8806 = !DILocation(line: 0, scope: !8801)
!8807 = !DILocation(line: 261, column: 1, scope: !8801)
!8808 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !972, file: !972, line: 417, type: !8809, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8811)
!8809 = !DISubroutineType(types: !8810)
!8810 = !{!211, !8780, !1145}
!8811 = !{!8812, !8813, !8814, !8815}
!8812 = !DILocalVariable(name: "list", arg: 1, scope: !8808, file: !972, line: 417, type: !8780)
!8813 = !DILocalVariable(name: "node", arg: 2, scope: !8808, file: !972, line: 417, type: !1145)
!8814 = !DILocalVariable(name: "prev", scope: !8808, file: !972, line: 417, type: !1145)
!8815 = !DILocalVariable(name: "test", scope: !8808, file: !972, line: 417, type: !1145)
!8816 = !DILocation(line: 0, scope: !8808)
!8817 = !DILocation(line: 417, column: 1, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8808, file: !972, line: 417, column: 1)
!8819 = !DILocation(line: 417, column: 1, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8818, file: !972, line: 417, column: 1)
!8821 = !DILocation(line: 417, column: 1, scope: !8822)
!8822 = distinct !DILexicalBlock(scope: !8823, file: !972, line: 417, column: 1)
!8823 = distinct !DILexicalBlock(scope: !8820, file: !972, line: 417, column: 1)
!8824 = !DILocation(line: 417, column: 1, scope: !8823)
!8825 = distinct !{!8825, !8817, !8817}
!8826 = !DILocation(line: 417, column: 1, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8822, file: !972, line: 417, column: 1)
!8828 = !DILocation(line: 417, column: 1, scope: !8808)
!8829 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !972, file: !972, line: 298, type: !8830, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8832)
!8830 = !DISubroutineType(types: !8831)
!8831 = !{null, !8780, !1145}
!8832 = !{!8833, !8834}
!8833 = !DILocalVariable(name: "list", arg: 1, scope: !8829, file: !972, line: 298, type: !8780)
!8834 = !DILocalVariable(name: "node", arg: 2, scope: !8829, file: !972, line: 298, type: !1145)
!8835 = !DILocation(line: 0, scope: !8829)
!8836 = !DILocation(line: 298, column: 1, scope: !8829)
!8837 = !DILocation(line: 298, column: 1, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8829, file: !972, line: 298, column: 1)
!8839 = !DILocation(line: 298, column: 1, scope: !8840)
!8840 = distinct !DILexicalBlock(scope: !8838, file: !972, line: 298, column: 1)
!8841 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !972, file: !972, line: 231, type: !8842, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8844)
!8842 = !DISubroutineType(types: !8843)
!8843 = !{!1145, !8780}
!8844 = !{!8845}
!8845 = !DILocalVariable(name: "list", arg: 1, scope: !8841, file: !972, line: 231, type: !8780)
!8846 = !DILocation(line: 0, scope: !8841)
!8847 = !DILocation(line: 233, column: 15, scope: !8841)
!8848 = !DILocation(line: 233, column: 2, scope: !8841)
!8849 = distinct !DISubprogram(name: "z_snode_next_set", scope: !972, file: !972, line: 209, type: !8850, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8852)
!8850 = !DISubroutineType(types: !8851)
!8851 = !{null, !1145, !1145}
!8852 = !{!8853, !8854}
!8853 = !DILocalVariable(name: "parent", arg: 1, scope: !8849, file: !972, line: 209, type: !1145)
!8854 = !DILocalVariable(name: "child", arg: 2, scope: !8849, file: !972, line: 209, type: !1145)
!8855 = !DILocation(line: 0, scope: !8849)
!8856 = !DILocation(line: 211, column: 10, scope: !8849)
!8857 = !DILocation(line: 211, column: 15, scope: !8849)
!8858 = !DILocation(line: 212, column: 1, scope: !8849)
!8859 = distinct !DISubprogram(name: "z_slist_head_set", scope: !972, file: !972, line: 214, type: !8830, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8860)
!8860 = !{!8861, !8862}
!8861 = !DILocalVariable(name: "list", arg: 1, scope: !8859, file: !972, line: 214, type: !8780)
!8862 = !DILocalVariable(name: "node", arg: 2, scope: !8859, file: !972, line: 214, type: !1145)
!8863 = !DILocation(line: 0, scope: !8859)
!8864 = !DILocation(line: 216, column: 8, scope: !8859)
!8865 = !DILocation(line: 216, column: 13, scope: !8859)
!8866 = !DILocation(line: 217, column: 1, scope: !8859)
!8867 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !972, file: !972, line: 243, type: !8842, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8868)
!8868 = !{!8869}
!8869 = !DILocalVariable(name: "list", arg: 1, scope: !8867, file: !972, line: 243, type: !8780)
!8870 = !DILocation(line: 0, scope: !8867)
!8871 = !DILocation(line: 245, column: 15, scope: !8867)
!8872 = !DILocation(line: 245, column: 2, scope: !8867)
!8873 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !972, file: !972, line: 219, type: !8830, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8874)
!8874 = !{!8875, !8876}
!8875 = !DILocalVariable(name: "list", arg: 1, scope: !8873, file: !972, line: 219, type: !8780)
!8876 = !DILocalVariable(name: "node", arg: 2, scope: !8873, file: !972, line: 219, type: !1145)
!8877 = !DILocation(line: 0, scope: !8873)
!8878 = !DILocation(line: 221, column: 8, scope: !8873)
!8879 = !DILocation(line: 221, column: 13, scope: !8873)
!8880 = !DILocation(line: 222, column: 1, scope: !8873)
!8881 = distinct !DISubprogram(name: "sys_slist_remove", scope: !972, file: !972, line: 401, type: !8882, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8884)
!8882 = !DISubroutineType(types: !8883)
!8883 = !{null, !8780, !1145, !1145}
!8884 = !{!8885, !8886, !8887}
!8885 = !DILocalVariable(name: "list", arg: 1, scope: !8881, file: !972, line: 401, type: !8780)
!8886 = !DILocalVariable(name: "prev_node", arg: 2, scope: !8881, file: !972, line: 401, type: !1145)
!8887 = !DILocalVariable(name: "node", arg: 3, scope: !8881, file: !972, line: 401, type: !1145)
!8888 = !DILocation(line: 0, scope: !8881)
!8889 = !DILocation(line: 401, column: 1, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8881, file: !972, line: 401, column: 1)
!8891 = !DILocation(line: 0, scope: !8890)
!8892 = !DILocation(line: 401, column: 1, scope: !8881)
!8893 = !DILocation(line: 401, column: 1, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8890, file: !972, line: 401, column: 1)
!8895 = !DILocation(line: 401, column: 1, scope: !8896)
!8896 = distinct !DILexicalBlock(scope: !8894, file: !972, line: 401, column: 1)
!8897 = !DILocation(line: 401, column: 1, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8896, file: !972, line: 401, column: 1)
!8899 = !DILocation(line: 401, column: 1, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8890, file: !972, line: 401, column: 1)
!8901 = !DILocation(line: 401, column: 1, scope: !8902)
!8902 = distinct !DILexicalBlock(scope: !8900, file: !972, line: 401, column: 1)
!8903 = !DILocation(line: 401, column: 1, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8902, file: !972, line: 401, column: 1)
!8905 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !972, file: !972, line: 285, type: !8906, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8908)
!8906 = !DISubroutineType(types: !8907)
!8907 = !{!1145, !1145}
!8908 = !{!8909}
!8909 = !DILocalVariable(name: "node", arg: 1, scope: !8905, file: !972, line: 285, type: !1145)
!8910 = !DILocation(line: 0, scope: !8905)
!8911 = !DILocation(line: 285, column: 1, scope: !8905)
!8912 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !972, file: !972, line: 274, type: !8906, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8913)
!8913 = !{!8914}
!8914 = !DILocalVariable(name: "node", arg: 1, scope: !8912, file: !972, line: 274, type: !1145)
!8915 = !DILocation(line: 0, scope: !8912)
!8916 = !DILocation(line: 274, column: 1, scope: !8912)
!8917 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !972, file: !972, line: 204, type: !8906, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8918)
!8918 = !{!8919}
!8919 = !DILocalVariable(name: "node", arg: 1, scope: !8917, file: !972, line: 204, type: !1145)
!8920 = !DILocation(line: 0, scope: !8917)
!8921 = !DILocation(line: 206, column: 15, scope: !8917)
!8922 = !DILocation(line: 206, column: 2, scope: !8917)
!8923 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1066, file: !1066, line: 342, type: !129, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8924)
!8924 = !{!8925, !8926, !8927}
!8925 = !DILocalVariable(name: "pin", arg: 1, scope: !8923, file: !1066, line: 342, type: !103)
!8926 = !DILocalVariable(name: "line", scope: !8923, file: !1066, line: 344, type: !137)
!8927 = !DILocalVariable(name: "port", scope: !8923, file: !1066, line: 345, type: !103)
!8928 = !DILocation(line: 0, scope: !8923)
!8929 = !DILocation(line: 344, column: 18, scope: !8923)
!8930 = !{i32 983040, i32 0}
!8931 = !DILocation(line: 356, column: 9, scope: !8923)
!8932 = !DILocation(line: 370, column: 2, scope: !8923)
!8933 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1066, file: !1066, line: 37, type: !616, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8934)
!8934 = !{!8935, !8936, !8937}
!8935 = !DILocalVariable(name: "line", arg: 1, scope: !8933, file: !1066, line: 37, type: !103)
!8936 = !DILocalVariable(name: "arg", arg: 2, scope: !8933, file: !1066, line: 37, type: !102)
!8937 = !DILocalVariable(name: "data", scope: !8933, file: !1066, line: 39, type: !8728)
!8938 = !DILocation(line: 0, scope: !8933)
!8939 = !DILocation(line: 41, column: 29, scope: !8933)
!8940 = !DILocation(line: 41, column: 39, scope: !8933)
!8941 = !DILocation(line: 41, column: 44, scope: !8933)
!8942 = !DILocation(line: 41, column: 2, scope: !8933)
!8943 = !DILocation(line: 42, column: 1, scope: !8933)
!8944 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1066, file: !1066, line: 376, type: !8945, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8947)
!8945 = !DISubroutineType(types: !8946)
!8946 = !{!103, !103, !103}
!8947 = !{!8948, !8949, !8950, !8952, !8953}
!8948 = !DILocalVariable(name: "port", arg: 1, scope: !8944, file: !1066, line: 376, type: !103)
!8949 = !DILocalVariable(name: "pin", arg: 2, scope: !8944, file: !1066, line: 376, type: !103)
!8950 = !DILocalVariable(name: "clk", scope: !8944, file: !1066, line: 386, type: !8951)
!8951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !925)
!8952 = !DILocalVariable(name: "pclken", scope: !8944, file: !1066, line: 387, type: !1192)
!8953 = !DILocalVariable(name: "ret", scope: !8944, file: !1066, line: 396, type: !103)
!8954 = !DILocation(line: 0, scope: !8944)
!8955 = !DILocation(line: 387, column: 2, scope: !8944)
!8956 = !DILocation(line: 387, column: 22, scope: !8944)
!8957 = !DILocation(line: 399, column: 8, scope: !8944)
!8958 = !DILocation(line: 400, column: 10, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8944, file: !1066, line: 400, column: 6)
!8960 = !DILocation(line: 400, column: 6, scope: !8944)
!8961 = !DILocation(line: 405, column: 2, scope: !8944)
!8962 = !DILocation(line: 407, column: 2, scope: !8944)
!8963 = !DILocation(line: 408, column: 1, scope: !8944)
!8964 = distinct !DISubprogram(name: "clock_control_on", scope: !705, file: !705, line: 123, type: !1031, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8965)
!8965 = !{!8966, !8967, !8968}
!8966 = !DILocalVariable(name: "dev", arg: 1, scope: !8964, file: !705, line: 123, type: !925)
!8967 = !DILocalVariable(name: "sys", arg: 2, scope: !8964, file: !705, line: 124, type: !796)
!8968 = !DILocalVariable(name: "api", scope: !8964, file: !705, line: 126, type: !1024)
!8969 = !DILocation(line: 0, scope: !8964)
!8970 = !DILocation(line: 127, column: 49, scope: !8964)
!8971 = !DILocation(line: 129, column: 14, scope: !8964)
!8972 = !DILocation(line: 129, column: 9, scope: !8964)
!8973 = !DILocation(line: 129, column: 2, scope: !8964)
!8974 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1066, file: !1066, line: 311, type: !8093, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8975)
!8975 = !{!8976, !8977, !8978}
!8976 = !DILocalVariable(name: "port", arg: 1, scope: !8974, file: !1066, line: 311, type: !103)
!8977 = !DILocalVariable(name: "pin", arg: 2, scope: !8974, file: !1066, line: 311, type: !103)
!8978 = !DILocalVariable(name: "line", scope: !8974, file: !1066, line: 313, type: !137)
!8979 = !DILocation(line: 0, scope: !8974)
!8980 = !DILocation(line: 313, column: 18, scope: !8974)
!8981 = !DILocation(line: 337, column: 2, scope: !8974)
!8982 = !DILocation(line: 340, column: 1, scope: !8974)
!8983 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1066, file: !1066, line: 295, type: !8984, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8986)
!8984 = !DISubroutineType(types: !8985)
!8985 = !{!137, !103}
!8986 = !{!8987}
!8987 = !DILocalVariable(name: "pin", arg: 1, scope: !8983, file: !1066, line: 295, type: !103)
!8988 = !DILocation(line: 0, scope: !8983)
!8989 = !DILocation(line: 307, column: 46, scope: !8983)
!8990 = !DILocation(line: 307, column: 27, scope: !8983)
!8991 = !DILocation(line: 307, column: 32, scope: !8983)
!8992 = !DILocation(line: 307, column: 14, scope: !8983)
!8993 = !DILocation(line: 307, column: 39, scope: !8983)
!8994 = !DILocation(line: 307, column: 2, scope: !8983)
!8995 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6149, file: !6149, line: 671, type: !8996, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8998)
!8996 = !DISubroutineType(types: !8997)
!8997 = !{null, !137, !137}
!8998 = !{!8999, !9000}
!8999 = !DILocalVariable(name: "Port", arg: 1, scope: !8995, file: !6149, line: 671, type: !137)
!9000 = !DILocalVariable(name: "Line", arg: 2, scope: !8995, file: !6149, line: 671, type: !137)
!9001 = !DILocation(line: 0, scope: !8995)
!9002 = !DILocation(line: 673, column: 3, scope: !8995)
!9003 = !DILocalVariable(name: "value", arg: 1, scope: !9004, file: !6302, line: 373, type: !137)
!9004 = distinct !DISubprogram(name: "__RBIT", scope: !6302, file: !6302, line: 373, type: !7307, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !9005)
!9005 = !{!9003, !9006}
!9006 = !DILocalVariable(name: "result", scope: !9004, file: !6302, line: 375, type: !137)
!9007 = !DILocation(line: 0, scope: !9004, inlinedAt: !9008)
!9008 = distinct !DILocation(line: 673, column: 3, scope: !8995)
!9009 = !DILocation(line: 380, column: 4, scope: !9004, inlinedAt: !9008)
!9010 = !{i64 3545645}
!9011 = !DILocalVariable(name: "value", arg: 1, scope: !9012, file: !6302, line: 403, type: !137)
!9012 = distinct !DISubprogram(name: "__CLZ", scope: !6302, file: !6302, line: 403, type: !9013, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !9015)
!9013 = !DISubroutineType(types: !9014)
!9014 = !{!208, !137}
!9015 = !{!9011}
!9016 = !DILocation(line: 0, scope: !9012, inlinedAt: !9017)
!9017 = distinct !DILocation(line: 673, column: 3, scope: !8995)
!9018 = !DILocation(line: 414, column: 7, scope: !9012, inlinedAt: !9017)
!9019 = !DILocation(line: 674, column: 1, scope: !8995)
!9020 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8777, file: !8777, line: 69, type: !9021, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !9023)
!9021 = !DISubroutineType(types: !9022)
!9022 = !{null, !8780, !925, !137}
!9023 = !{!9024, !9025, !9026, !9027, !9028}
!9024 = !DILocalVariable(name: "list", arg: 1, scope: !9020, file: !8777, line: 69, type: !8780)
!9025 = !DILocalVariable(name: "port", arg: 2, scope: !9020, file: !8777, line: 70, type: !925)
!9026 = !DILocalVariable(name: "pins", arg: 3, scope: !9020, file: !8777, line: 71, type: !137)
!9027 = !DILocalVariable(name: "cb", scope: !9020, file: !8777, line: 73, type: !967)
!9028 = !DILocalVariable(name: "tmp", scope: !9020, file: !8777, line: 73, type: !967)
!9029 = !DILocation(line: 0, scope: !9020)
!9030 = !DILocation(line: 75, column: 2, scope: !9031)
!9031 = distinct !DILexicalBlock(scope: !9020, file: !8777, line: 75, column: 2)
!9032 = !DILocation(line: 0, scope: !9031)
!9033 = !DILocation(line: 76, column: 11, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9035, file: !8777, line: 76, column: 7)
!9035 = distinct !DILexicalBlock(scope: !9036, file: !8777, line: 75, column: 57)
!9036 = distinct !DILexicalBlock(scope: !9031, file: !8777, line: 75, column: 2)
!9037 = !DILocation(line: 76, column: 20, scope: !9034)
!9038 = !DILocation(line: 76, column: 7, scope: !9035)
!9039 = !DILocation(line: 78, column: 8, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !9034, file: !8777, line: 76, column: 28)
!9041 = !DILocation(line: 78, column: 4, scope: !9040)
!9042 = !DILocation(line: 79, column: 3, scope: !9040)
!9043 = !DILocation(line: 75, column: 2, scope: !9036)
!9044 = !DILocation(line: 81, column: 1, scope: !9020)
!9045 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6149, file: !6149, line: 710, type: !7307, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !9046)
!9046 = !{!9047}
!9047 = !DILocalVariable(name: "Line", arg: 1, scope: !9045, file: !6149, line: 710, type: !137)
!9048 = !DILocation(line: 0, scope: !9045)
!9049 = !DILocation(line: 712, column: 21, scope: !9045)
!9050 = !DILocation(line: 0, scope: !9004, inlinedAt: !9051)
!9051 = distinct !DILocation(line: 712, column: 76, scope: !9045)
!9052 = !DILocation(line: 380, column: 4, scope: !9004, inlinedAt: !9051)
!9053 = !DILocation(line: 0, scope: !9012, inlinedAt: !9054)
!9054 = distinct !DILocation(line: 712, column: 76, scope: !9045)
!9055 = !DILocation(line: 414, column: 7, scope: !9012, inlinedAt: !9054)
!9056 = !DILocation(line: 712, column: 73, scope: !9045)
!9057 = !DILocation(line: 712, column: 3, scope: !9045)
!9058 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9059, file: !9059, line: 910, type: !9060, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !9062)
!9059 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9060 = !DISubroutineType(types: !9061)
!9061 = !{null, !998, !137}
!9062 = !{!9063, !9064}
!9063 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9058, file: !9059, line: 910, type: !998)
!9064 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9058, file: !9059, line: 910, type: !137)
!9065 = !DILocation(line: 0, scope: !9058)
!9066 = !DILocation(line: 912, column: 3, scope: !9058)
!9067 = !DILocation(line: 913, column: 1, scope: !9058)
!9068 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9059, file: !9059, line: 823, type: !9069, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !9071)
!9069 = !DISubroutineType(types: !9070)
!9070 = !{!137, !998}
!9071 = !{!9072}
!9072 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9068, file: !9059, line: 823, type: !998)
!9073 = !DILocation(line: 0, scope: !9068)
!9074 = !DILocation(line: 825, column: 21, scope: !9068)
!9075 = !DILocation(line: 825, column: 3, scope: !9068)
!9076 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9059, file: !9059, line: 812, type: !9060, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !9077)
!9077 = !{!9078, !9079}
!9078 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9076, file: !9059, line: 812, type: !998)
!9079 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9076, file: !9059, line: 812, type: !137)
!9080 = !DILocation(line: 0, scope: !9076)
!9081 = !DILocation(line: 814, column: 3, scope: !9076)
!9082 = !DILocation(line: 815, column: 1, scope: !9076)
!9083 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9059, file: !9059, line: 771, type: !9069, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !9084)
!9084 = !{!9085}
!9085 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9083, file: !9059, line: 771, type: !998)
!9086 = !DILocation(line: 0, scope: !9083)
!9087 = !DILocation(line: 773, column: 21, scope: !9083)
!9088 = !DILocation(line: 773, column: 3, scope: !9083)
!9089 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1066, file: !1066, line: 47, type: !9090, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !9092)
!9090 = !DISubroutineType(types: !9091)
!9091 = !{!103, !941, !2281}
!9092 = !{!9093, !9094}
!9093 = !DILocalVariable(name: "flags", arg: 1, scope: !9089, file: !1066, line: 47, type: !941)
!9094 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9089, file: !1066, line: 47, type: !2281)
!9095 = !DILocation(line: 0, scope: !9089)
!9096 = !DILocation(line: 50, column: 13, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9089, file: !1066, line: 50, column: 6)
!9098 = !DILocation(line: 50, column: 28, scope: !9097)
!9099 = !DILocation(line: 50, column: 6, scope: !9089)
!9100 = !DILocation(line: 53, column: 11, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9097, file: !1066, line: 50, column: 34)
!9102 = !DILocation(line: 55, column: 14, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9101, file: !1066, line: 55, column: 7)
!9104 = !DILocation(line: 55, column: 35, scope: !9103)
!9105 = !DILocation(line: 55, column: 7, scope: !9101)
!9106 = !DILocation(line: 56, column: 14, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !9108, file: !1066, line: 56, column: 8)
!9108 = distinct !DILexicalBlock(scope: !9103, file: !1066, line: 55, column: 41)
!9109 = !DILocation(line: 56, column: 8, scope: !9108)
!9110 = !DILocation(line: 0, scope: !9103)
!9111 = !DILocation(line: 66, column: 14, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9101, file: !1066, line: 66, column: 7)
!9113 = !DILocation(line: 66, column: 30, scope: !9112)
!9114 = !DILocation(line: 66, column: 7, scope: !9101)
!9115 = !DILocation(line: 67, column: 12, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9112, file: !1066, line: 66, column: 36)
!9117 = !DILocation(line: 68, column: 3, scope: !9116)
!9118 = !DILocation(line: 68, column: 21, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9112, file: !1066, line: 68, column: 14)
!9120 = !DILocation(line: 68, column: 39, scope: !9119)
!9121 = !DILocation(line: 68, column: 14, scope: !9112)
!9122 = !DILocation(line: 69, column: 12, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9119, file: !1066, line: 68, column: 45)
!9124 = !DILocation(line: 70, column: 3, scope: !9123)
!9125 = !DILocation(line: 72, column: 21, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9097, file: !1066, line: 72, column: 14)
!9127 = !DILocation(line: 72, column: 35, scope: !9126)
!9128 = !DILocation(line: 72, column: 14, scope: !9097)
!9129 = !DILocation(line: 77, column: 14, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9131, file: !1066, line: 77, column: 7)
!9131 = distinct !DILexicalBlock(scope: !9126, file: !1066, line: 72, column: 41)
!9132 = !DILocation(line: 77, column: 30, scope: !9130)
!9133 = !DILocation(line: 77, column: 7, scope: !9131)
!9134 = !DILocation(line: 0, scope: !9097)
!9135 = !DILocation(line: 90, column: 1, scope: !9089)
!9136 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1066, file: !1066, line: 157, type: !9137, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !9139)
!9137 = !DISubroutineType(types: !9138)
!9138 = !{null, !925, !103, !103, !103}
!9139 = !{!9140, !9141, !9142, !9143, !9144, !9145, !9146, !9147, !9148, !9149, !9150}
!9140 = !DILocalVariable(name: "dev", arg: 1, scope: !9136, file: !1066, line: 157, type: !925)
!9141 = !DILocalVariable(name: "pin", arg: 2, scope: !9136, file: !1066, line: 157, type: !103)
!9142 = !DILocalVariable(name: "conf", arg: 3, scope: !9136, file: !1066, line: 158, type: !103)
!9143 = !DILocalVariable(name: "func", arg: 4, scope: !9136, file: !1066, line: 158, type: !103)
!9144 = !DILocalVariable(name: "cfg", scope: !9136, file: !1066, line: 160, type: !8661)
!9145 = !DILocalVariable(name: "gpio", scope: !9136, file: !1066, line: 161, type: !998)
!9146 = !DILocalVariable(name: "pin_ll", scope: !9136, file: !1066, line: 163, type: !103)
!9147 = !DILocalVariable(name: "mode", scope: !9136, file: !1066, line: 227, type: !32)
!9148 = !DILocalVariable(name: "otype", scope: !9136, file: !1066, line: 227, type: !32)
!9149 = !DILocalVariable(name: "ospeed", scope: !9136, file: !1066, line: 227, type: !32)
!9150 = !DILocalVariable(name: "pupd", scope: !9136, file: !1066, line: 227, type: !32)
!9151 = !DILocation(line: 0, scope: !9136)
!9152 = !DILocation(line: 160, column: 45, scope: !9136)
!9153 = !DILocation(line: 161, column: 44, scope: !9136)
!9154 = !DILocation(line: 163, column: 15, scope: !9136)
!9155 = !DILocation(line: 229, column: 14, scope: !9136)
!9156 = !DILocation(line: 246, column: 47, scope: !9136)
!9157 = !DILocation(line: 246, column: 2, scope: !9136)
!9158 = !DILocation(line: 248, column: 43, scope: !9136)
!9159 = !DILocation(line: 248, column: 2, scope: !9136)
!9160 = !DILocation(line: 250, column: 40, scope: !9136)
!9161 = !DILocation(line: 250, column: 2, scope: !9136)
!9162 = !DILocation(line: 252, column: 11, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9136, file: !1066, line: 252, column: 6)
!9164 = !DILocation(line: 252, column: 6, scope: !9136)
!9165 = !DILocation(line: 253, column: 11, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9167, file: !1066, line: 253, column: 7)
!9167 = distinct !DILexicalBlock(scope: !9163, file: !1066, line: 252, column: 36)
!9168 = !DILocation(line: 253, column: 7, scope: !9167)
!9169 = !DILocation(line: 254, column: 4, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9166, file: !1066, line: 253, column: 16)
!9171 = !DILocation(line: 255, column: 3, scope: !9170)
!9172 = !DILocation(line: 256, column: 4, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9166, file: !1066, line: 255, column: 10)
!9174 = !DILocation(line: 260, column: 40, scope: !9136)
!9175 = !DILocation(line: 260, column: 2, scope: !9136)
!9176 = !DILocation(line: 265, column: 1, scope: !9136)
!9177 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1066, file: !1066, line: 137, type: !8984, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !9178)
!9178 = !{!9179, !9180}
!9179 = !DILocalVariable(name: "pin", arg: 1, scope: !9177, file: !1066, line: 137, type: !103)
!9180 = !DILocalVariable(name: "pinval", scope: !9177, file: !1066, line: 139, type: !137)
!9181 = !DILocation(line: 0, scope: !9177)
!9182 = !DILocation(line: 149, column: 13, scope: !9177)
!9183 = !DILocation(line: 151, column: 2, scope: !9177)
!9184 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9059, file: !9059, line: 342, type: !9185, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !9187)
!9185 = !DISubroutineType(types: !9186)
!9186 = !{null, !998, !137, !137}
!9187 = !{!9188, !9189, !9190}
!9188 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9184, file: !9059, line: 342, type: !998)
!9189 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9184, file: !9059, line: 342, type: !137)
!9190 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9184, file: !9059, line: 342, type: !137)
!9191 = !DILocation(line: 0, scope: !9184)
!9192 = !DILocation(line: 344, column: 3, scope: !9184)
!9193 = !DILocation(line: 345, column: 1, scope: !9184)
!9194 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9059, file: !9059, line: 413, type: !9185, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !9195)
!9195 = !{!9196, !9197, !9198}
!9196 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9194, file: !9059, line: 413, type: !998)
!9197 = !DILocalVariable(name: "Pin", arg: 2, scope: !9194, file: !9059, line: 413, type: !137)
!9198 = !DILocalVariable(name: "Speed", arg: 3, scope: !9194, file: !9059, line: 413, type: !137)
!9199 = !DILocation(line: 0, scope: !9194)
!9200 = !DILocation(line: 415, column: 3, scope: !9194)
!9201 = !DILocation(line: 0, scope: !9004, inlinedAt: !9202)
!9202 = distinct !DILocation(line: 415, column: 3, scope: !9194)
!9203 = !DILocation(line: 380, column: 4, scope: !9004, inlinedAt: !9202)
!9204 = !DILocation(line: 0, scope: !9012, inlinedAt: !9205)
!9205 = distinct !DILocation(line: 415, column: 3, scope: !9194)
!9206 = !DILocation(line: 414, column: 7, scope: !9012, inlinedAt: !9205)
!9207 = !DILocation(line: 0, scope: !9004, inlinedAt: !9208)
!9208 = distinct !DILocation(line: 415, column: 3, scope: !9194)
!9209 = !DILocation(line: 0, scope: !9012, inlinedAt: !9210)
!9210 = distinct !DILocation(line: 415, column: 3, scope: !9194)
!9211 = !DILocation(line: 417, column: 1, scope: !9194)
!9212 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9059, file: !9059, line: 484, type: !9185, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !9213)
!9213 = !{!9214, !9215, !9216}
!9214 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9212, file: !9059, line: 484, type: !998)
!9215 = !DILocalVariable(name: "Pin", arg: 2, scope: !9212, file: !9059, line: 484, type: !137)
!9216 = !DILocalVariable(name: "Pull", arg: 3, scope: !9212, file: !9059, line: 484, type: !137)
!9217 = !DILocation(line: 0, scope: !9212)
!9218 = !DILocation(line: 486, column: 3, scope: !9212)
!9219 = !DILocation(line: 0, scope: !9004, inlinedAt: !9220)
!9220 = distinct !DILocation(line: 486, column: 3, scope: !9212)
!9221 = !DILocation(line: 380, column: 4, scope: !9004, inlinedAt: !9220)
!9222 = !DILocation(line: 0, scope: !9012, inlinedAt: !9223)
!9223 = distinct !DILocation(line: 486, column: 3, scope: !9212)
!9224 = !DILocation(line: 414, column: 7, scope: !9012, inlinedAt: !9223)
!9225 = !DILocation(line: 0, scope: !9004, inlinedAt: !9226)
!9226 = distinct !DILocation(line: 486, column: 3, scope: !9212)
!9227 = !DILocation(line: 0, scope: !9012, inlinedAt: !9228)
!9228 = distinct !DILocation(line: 486, column: 3, scope: !9212)
!9229 = !DILocation(line: 487, column: 1, scope: !9212)
!9230 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9059, file: !9059, line: 556, type: !9185, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !9231)
!9231 = !{!9232, !9233, !9234}
!9232 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9230, file: !9059, line: 556, type: !998)
!9233 = !DILocalVariable(name: "Pin", arg: 2, scope: !9230, file: !9059, line: 556, type: !137)
!9234 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9230, file: !9059, line: 556, type: !137)
!9235 = !DILocation(line: 0, scope: !9230)
!9236 = !DILocation(line: 558, column: 3, scope: !9230)
!9237 = !DILocation(line: 0, scope: !9004, inlinedAt: !9238)
!9238 = distinct !DILocation(line: 558, column: 3, scope: !9230)
!9239 = !DILocation(line: 380, column: 4, scope: !9004, inlinedAt: !9238)
!9240 = !DILocation(line: 0, scope: !9012, inlinedAt: !9241)
!9241 = distinct !DILocation(line: 558, column: 3, scope: !9230)
!9242 = !DILocation(line: 414, column: 7, scope: !9012, inlinedAt: !9241)
!9243 = !DILocation(line: 0, scope: !9004, inlinedAt: !9244)
!9244 = distinct !DILocation(line: 558, column: 3, scope: !9230)
!9245 = !DILocation(line: 0, scope: !9012, inlinedAt: !9246)
!9246 = distinct !DILocation(line: 558, column: 3, scope: !9230)
!9247 = !DILocation(line: 560, column: 1, scope: !9230)
!9248 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9059, file: !9059, line: 633, type: !9185, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !9249)
!9249 = !{!9250, !9251, !9252}
!9250 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9248, file: !9059, line: 633, type: !998)
!9251 = !DILocalVariable(name: "Pin", arg: 2, scope: !9248, file: !9059, line: 633, type: !137)
!9252 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9248, file: !9059, line: 633, type: !137)
!9253 = !DILocation(line: 0, scope: !9248)
!9254 = !DILocation(line: 635, column: 3, scope: !9248)
!9255 = !DILocation(line: 0, scope: !9004, inlinedAt: !9256)
!9256 = distinct !DILocation(line: 635, column: 3, scope: !9248)
!9257 = !DILocation(line: 380, column: 4, scope: !9004, inlinedAt: !9256)
!9258 = !DILocation(line: 0, scope: !9012, inlinedAt: !9259)
!9259 = distinct !DILocation(line: 635, column: 3, scope: !9248)
!9260 = !DILocation(line: 414, column: 7, scope: !9012, inlinedAt: !9259)
!9261 = !DILocation(line: 0, scope: !9004, inlinedAt: !9262)
!9262 = distinct !DILocation(line: 635, column: 3, scope: !9248)
!9263 = !DILocation(line: 0, scope: !9012, inlinedAt: !9264)
!9264 = distinct !DILocation(line: 635, column: 3, scope: !9248)
!9265 = !DILocation(line: 637, column: 1, scope: !9248)
!9266 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9059, file: !9059, line: 273, type: !9185, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !9267)
!9267 = !{!9268, !9269, !9270}
!9268 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9266, file: !9059, line: 273, type: !998)
!9269 = !DILocalVariable(name: "Pin", arg: 2, scope: !9266, file: !9059, line: 273, type: !137)
!9270 = !DILocalVariable(name: "Mode", arg: 3, scope: !9266, file: !9059, line: 273, type: !137)
!9271 = !DILocation(line: 0, scope: !9266)
!9272 = !DILocation(line: 275, column: 3, scope: !9266)
!9273 = !DILocation(line: 0, scope: !9004, inlinedAt: !9274)
!9274 = distinct !DILocation(line: 275, column: 3, scope: !9266)
!9275 = !DILocation(line: 380, column: 4, scope: !9004, inlinedAt: !9274)
!9276 = !DILocation(line: 0, scope: !9012, inlinedAt: !9277)
!9277 = distinct !DILocation(line: 275, column: 3, scope: !9266)
!9278 = !DILocation(line: 414, column: 7, scope: !9012, inlinedAt: !9277)
!9279 = !DILocation(line: 0, scope: !9004, inlinedAt: !9280)
!9280 = distinct !DILocation(line: 275, column: 3, scope: !9266)
!9281 = !DILocation(line: 0, scope: !9012, inlinedAt: !9282)
!9282 = distinct !DILocation(line: 275, column: 3, scope: !9266)
!9283 = !DILocation(line: 276, column: 1, scope: !9266)
!9284 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1066, file: !1066, line: 698, type: !1079, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !9285)
!9285 = !{!9286, !9287, !9288}
!9286 = !DILocalVariable(name: "dev", arg: 1, scope: !9284, file: !1066, line: 698, type: !925)
!9287 = !DILocalVariable(name: "data", scope: !9284, file: !1066, line: 700, type: !8728)
!9288 = !DILocalVariable(name: "ret", scope: !9284, file: !1066, line: 701, type: !103)
!9289 = !DILocation(line: 0, scope: !9284)
!9290 = !DILocation(line: 700, column: 38, scope: !9284)
!9291 = !DILocation(line: 703, column: 8, scope: !9284)
!9292 = !DILocation(line: 703, column: 12, scope: !9284)
!9293 = !DILocation(line: 705, column: 7, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9284, file: !1066, line: 705, column: 6)
!9295 = !DILocation(line: 705, column: 6, scope: !9284)
!9296 = !DILocation(line: 722, column: 8, scope: !9284)
!9297 = !DILocation(line: 723, column: 10, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9284, file: !1066, line: 723, column: 6)
!9299 = !DILocation(line: 723, column: 6, scope: !9284)
!9300 = !DILocation(line: 731, column: 1, scope: !9284)
!9301 = distinct !DISubprogram(name: "device_is_ready", scope: !8508, file: !8508, line: 47, type: !9302, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !9304)
!9302 = !DISubroutineType(types: !9303)
!9303 = !{!211, !925}
!9304 = !{!9305}
!9305 = !DILocalVariable(name: "dev", arg: 1, scope: !9301, file: !8508, line: 47, type: !925)
!9306 = !DILocation(line: 0, scope: !9301)
!9307 = !DILocation(line: 55, column: 2, scope: !9308)
!9308 = distinct !DILexicalBlock(scope: !9301, file: !8508, line: 55, column: 2)
!9309 = !{i64 2155034619}
!9310 = !DILocation(line: 56, column: 9, scope: !9301)
!9311 = !DILocation(line: 56, column: 2, scope: !9301)
!9312 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1066, file: !1066, line: 270, type: !9313, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !9315)
!9313 = !DISubroutineType(types: !9314)
!9314 = !{!103, !925, !211}
!9315 = !{!9316, !9317, !9318, !9319, !9320}
!9316 = !DILocalVariable(name: "dev", arg: 1, scope: !9312, file: !1066, line: 270, type: !925)
!9317 = !DILocalVariable(name: "on", arg: 2, scope: !9312, file: !1066, line: 270, type: !211)
!9318 = !DILocalVariable(name: "cfg", scope: !9312, file: !1066, line: 272, type: !8661)
!9319 = !DILocalVariable(name: "ret", scope: !9312, file: !1066, line: 273, type: !103)
!9320 = !DILocalVariable(name: "clk", scope: !9312, file: !1066, line: 278, type: !8951)
!9321 = !DILocation(line: 0, scope: !9312)
!9322 = !DILocation(line: 272, column: 45, scope: !9312)
!9323 = !DILocation(line: 282, column: 38, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9325, file: !1066, line: 280, column: 10)
!9325 = distinct !DILexicalBlock(scope: !9312, file: !1066, line: 280, column: 6)
!9326 = !DILocation(line: 282, column: 6, scope: !9324)
!9327 = !DILocation(line: 281, column: 9, scope: !9324)
!9328 = !DILocation(line: 293, column: 1, scope: !9312)
!9329 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !196, file: !196, line: 730, type: !9302, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !9330)
!9330 = !{!9331}
!9331 = !DILocalVariable(name: "dev", arg: 1, scope: !9329, file: !196, line: 730, type: !925)
!9332 = !DILocation(line: 0, scope: !9329)
!9333 = !DILocation(line: 732, column: 9, scope: !9329)
!9334 = !DILocation(line: 732, column: 2, scope: !9329)
!9335 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1066, file: !1066, line: 496, type: !9336, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !9338)
!9336 = !DISubroutineType(types: !9337)
!9337 = !{!103, !925, !103, !103, !103}
!9338 = !{!9339, !9340, !9341, !9342, !9343, !9344}
!9339 = !DILocalVariable(name: "dev", arg: 1, scope: !9335, file: !1066, line: 496, type: !925)
!9340 = !DILocalVariable(name: "pin", arg: 2, scope: !9335, file: !1066, line: 496, type: !103)
!9341 = !DILocalVariable(name: "conf", arg: 3, scope: !9335, file: !1066, line: 496, type: !103)
!9342 = !DILocalVariable(name: "func", arg: 4, scope: !9335, file: !1066, line: 496, type: !103)
!9343 = !DILocalVariable(name: "ret", scope: !9335, file: !1066, line: 498, type: !103)
!9344 = !DILocalVariable(name: "gpio_out", scope: !9345, file: !1066, line: 508, type: !137)
!9345 = distinct !DILexicalBlock(scope: !9346, file: !1066, line: 507, column: 27)
!9346 = distinct !DILexicalBlock(scope: !9335, file: !1066, line: 507, column: 6)
!9347 = !DILocation(line: 0, scope: !9335)
!9348 = !DILocation(line: 505, column: 2, scope: !9335)
!9349 = !DILocation(line: 507, column: 11, scope: !9346)
!9350 = !DILocation(line: 507, column: 6, scope: !9335)
!9351 = !DILocation(line: 508, column: 28, scope: !9345)
!9352 = !DILocation(line: 0, scope: !9345)
!9353 = !DILocation(line: 510, column: 16, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9345, file: !1066, line: 510, column: 7)
!9355 = !DILocation(line: 0, scope: !9354)
!9356 = !DILocation(line: 510, column: 7, scope: !9345)
!9357 = !DILocation(line: 511, column: 4, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9354, file: !1066, line: 510, column: 32)
!9359 = !DILocation(line: 512, column: 3, scope: !9358)
!9360 = !DILocation(line: 513, column: 4, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9362, file: !1066, line: 512, column: 39)
!9362 = distinct !DILexicalBlock(scope: !9354, file: !1066, line: 512, column: 14)
!9363 = !DILocation(line: 514, column: 3, scope: !9361)
!9364 = !DILocation(line: 518, column: 1, scope: !9335)
!9365 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1351, file: !1351, line: 526, type: !1254, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9366)
!9366 = !{!9367, !9368, !9369}
!9367 = !DILocalVariable(name: "dev", arg: 1, scope: !9365, file: !1351, line: 526, type: !1256)
!9368 = !DILocalVariable(name: "c", arg: 2, scope: !9365, file: !1351, line: 526, type: !857)
!9369 = !DILocalVariable(name: "config", scope: !9365, file: !1351, line: 528, type: !9370)
!9370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 32)
!9371 = !DILocation(line: 0, scope: !9365)
!9372 = !DILocation(line: 528, column: 48, scope: !9365)
!9373 = !DILocation(line: 531, column: 40, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9365, file: !1351, line: 531, column: 6)
!9375 = !DILocation(line: 531, column: 6, scope: !9374)
!9376 = !DILocation(line: 531, column: 6, scope: !9365)
!9377 = !DILocation(line: 532, column: 34, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9374, file: !1351, line: 531, column: 48)
!9379 = !DILocation(line: 532, column: 3, scope: !9378)
!9380 = !DILocation(line: 533, column: 2, scope: !9378)
!9381 = !DILocation(line: 539, column: 42, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9365, file: !1351, line: 539, column: 6)
!9383 = !DILocation(line: 539, column: 7, scope: !9382)
!9384 = !DILocation(line: 539, column: 6, scope: !9365)
!9385 = !DILocation(line: 543, column: 52, scope: !9365)
!9386 = !DILocation(line: 543, column: 22, scope: !9365)
!9387 = !DILocation(line: 543, column: 5, scope: !9365)
!9388 = !DILocation(line: 545, column: 2, scope: !9365)
!9389 = !DILocation(line: 546, column: 1, scope: !9365)
!9390 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1351, file: !1351, line: 548, type: !1273, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9391)
!9391 = !{!9392, !9393, !9394, !9395}
!9392 = !DILocalVariable(name: "dev", arg: 1, scope: !9390, file: !1351, line: 548, type: !1256)
!9393 = !DILocalVariable(name: "c", arg: 2, scope: !9390, file: !1351, line: 549, type: !209)
!9394 = !DILocalVariable(name: "config", scope: !9390, file: !1351, line: 551, type: !9370)
!9395 = !DILocalVariable(name: "key", scope: !9390, file: !1351, line: 555, type: !32)
!9396 = !DILocation(line: 0, scope: !9390)
!9397 = !DILocation(line: 551, column: 48, scope: !9390)
!9398 = !DILocation(line: 562, column: 2, scope: !9390)
!9399 = !DILocation(line: 563, column: 41, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9401, file: !1351, line: 563, column: 7)
!9401 = distinct !DILexicalBlock(scope: !9390, file: !1351, line: 562, column: 12)
!9402 = !DILocation(line: 563, column: 7, scope: !9400)
!9403 = !DILocation(line: 563, column: 7, scope: !9401)
!9404 = !DILocation(line: 55, column: 2, scope: !9405, inlinedAt: !9409)
!9405 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6128, file: !6128, line: 42, type: !6129, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9406)
!9406 = !{!9407, !9408}
!9407 = !DILocalVariable(name: "key", scope: !9405, file: !6128, line: 44, type: !32)
!9408 = !DILocalVariable(name: "tmp", scope: !9405, file: !6128, line: 53, type: !32)
!9409 = distinct !DILocation(line: 564, column: 10, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9400, file: !1351, line: 563, column: 49)
!9411 = !{i64 2271316}
!9412 = !DILocation(line: 0, scope: !9405, inlinedAt: !9409)
!9413 = !DILocation(line: 565, column: 42, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !9410, file: !1351, line: 565, column: 8)
!9415 = !DILocation(line: 565, column: 8, scope: !9414)
!9416 = !DILocation(line: 565, column: 8, scope: !9410)
!9417 = !DILocalVariable(name: "key", arg: 1, scope: !9418, file: !6128, line: 84, type: !32)
!9418 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6128, file: !6128, line: 84, type: !6139, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9419)
!9419 = !{!9417}
!9420 = !DILocation(line: 0, scope: !9418, inlinedAt: !9421)
!9421 = distinct !DILocation(line: 568, column: 4, scope: !9410)
!9422 = !DILocation(line: 95, column: 2, scope: !9418, inlinedAt: !9421)
!9423 = !{i64 2272133}
!9424 = !DILocation(line: 569, column: 3, scope: !9410)
!9425 = distinct !{!9425, !9398, !9426}
!9426 = !DILocation(line: 570, column: 2, scope: !9390)
!9427 = !DILocation(line: 592, column: 33, scope: !9390)
!9428 = !DILocation(line: 592, column: 2, scope: !9390)
!9429 = !DILocation(line: 0, scope: !9418, inlinedAt: !9430)
!9430 = distinct !DILocation(line: 593, column: 2, scope: !9390)
!9431 = !DILocation(line: 95, column: 2, scope: !9418, inlinedAt: !9430)
!9432 = !DILocation(line: 594, column: 1, scope: !9390)
!9433 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1351, file: !1351, line: 596, type: !1277, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9434)
!9434 = !{!9435, !9436, !9437}
!9435 = !DILocalVariable(name: "dev", arg: 1, scope: !9433, file: !1351, line: 596, type: !1256)
!9436 = !DILocalVariable(name: "config", scope: !9433, file: !1351, line: 598, type: !9370)
!9437 = !DILocalVariable(name: "err", scope: !9433, file: !1351, line: 599, type: !137)
!9438 = !DILocation(line: 0, scope: !9433)
!9439 = !DILocation(line: 598, column: 48, scope: !9433)
!9440 = !DILocation(line: 606, column: 40, scope: !9441)
!9441 = distinct !DILexicalBlock(scope: !9433, file: !1351, line: 606, column: 6)
!9442 = !DILocation(line: 606, column: 6, scope: !9441)
!9443 = !DILocation(line: 606, column: 6, scope: !9433)
!9444 = !DILocation(line: 610, column: 39, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9433, file: !1351, line: 610, column: 6)
!9446 = !DILocation(line: 610, column: 6, scope: !9445)
!9447 = !DILocation(line: 610, column: 6, scope: !9433)
!9448 = !DILocation(line: 614, column: 39, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9433, file: !1351, line: 614, column: 6)
!9450 = !DILocation(line: 614, column: 6, scope: !9449)
!9451 = !DILocation(line: 614, column: 6, scope: !9433)
!9452 = !DILocation(line: 619, column: 40, scope: !9453)
!9453 = distinct !DILexicalBlock(scope: !9433, file: !1351, line: 619, column: 6)
!9454 = !DILocation(line: 619, column: 6, scope: !9453)
!9455 = !DILocation(line: 619, column: 6, scope: !9433)
!9456 = !DILocation(line: 623, column: 10, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !9433, file: !1351, line: 623, column: 6)
!9458 = !DILocation(line: 623, column: 6, scope: !9433)
!9459 = !DILocation(line: 624, column: 34, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9457, file: !1351, line: 623, column: 24)
!9461 = !DILocation(line: 624, column: 3, scope: !9460)
!9462 = !DILocation(line: 625, column: 2, scope: !9460)
!9463 = !DILocation(line: 632, column: 10, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9433, file: !1351, line: 632, column: 6)
!9465 = !DILocation(line: 632, column: 6, scope: !9433)
!9466 = !DILocation(line: 633, column: 34, scope: !9467)
!9467 = distinct !DILexicalBlock(scope: !9464, file: !1351, line: 632, column: 32)
!9468 = !DILocation(line: 633, column: 3, scope: !9467)
!9469 = !DILocation(line: 634, column: 2, scope: !9467)
!9470 = !DILocation(line: 636, column: 10, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9433, file: !1351, line: 636, column: 6)
!9472 = !DILocation(line: 636, column: 6, scope: !9433)
!9473 = !DILocation(line: 637, column: 33, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9471, file: !1351, line: 636, column: 31)
!9475 = !DILocation(line: 637, column: 3, scope: !9474)
!9476 = !DILocation(line: 638, column: 2, scope: !9474)
!9477 = !DILocation(line: 640, column: 10, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9433, file: !1351, line: 640, column: 6)
!9479 = !DILocation(line: 640, column: 6, scope: !9433)
!9480 = !DILocation(line: 641, column: 33, scope: !9481)
!9481 = distinct !DILexicalBlock(scope: !9478, file: !1351, line: 640, column: 32)
!9482 = !DILocation(line: 641, column: 3, scope: !9481)
!9483 = !DILocation(line: 642, column: 2, scope: !9481)
!9484 = !DILocation(line: 646, column: 32, scope: !9433)
!9485 = !DILocation(line: 646, column: 2, scope: !9433)
!9486 = !DILocation(line: 648, column: 2, scope: !9433)
!9487 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1351, file: !1351, line: 419, type: !1281, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9488)
!9488 = !{!9489, !9490, !9491, !9492, !9494, !9495, !9496, !9497}
!9489 = !DILocalVariable(name: "dev", arg: 1, scope: !9487, file: !1351, line: 419, type: !1256)
!9490 = !DILocalVariable(name: "cfg", arg: 2, scope: !9487, file: !1351, line: 420, type: !1283)
!9491 = !DILocalVariable(name: "config", scope: !9487, file: !1351, line: 422, type: !9370)
!9492 = !DILocalVariable(name: "data", scope: !9487, file: !1351, line: 423, type: !9493)
!9493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 32)
!9494 = !DILocalVariable(name: "parity", scope: !9487, file: !1351, line: 424, type: !6568)
!9495 = !DILocalVariable(name: "stopbits", scope: !9487, file: !1351, line: 425, type: !6568)
!9496 = !DILocalVariable(name: "databits", scope: !9487, file: !1351, line: 426, type: !6568)
!9497 = !DILocalVariable(name: "flowctrl", scope: !9487, file: !1351, line: 428, type: !6568)
!9498 = !DILocation(line: 0, scope: !9487)
!9499 = !DILocation(line: 422, column: 48, scope: !9487)
!9500 = !DILocation(line: 423, column: 38, scope: !9487)
!9501 = !DILocation(line: 424, column: 56, scope: !9487)
!9502 = !DILocation(line: 424, column: 51, scope: !9487)
!9503 = !DILocation(line: 424, column: 26, scope: !9487)
!9504 = !DILocation(line: 425, column: 60, scope: !9487)
!9505 = !DILocation(line: 425, column: 55, scope: !9487)
!9506 = !DILocation(line: 425, column: 28, scope: !9487)
!9507 = !DILocation(line: 426, column: 60, scope: !9487)
!9508 = !DILocation(line: 426, column: 55, scope: !9487)
!9509 = !DILocation(line: 426, column: 28, scope: !9487)
!9510 = !DILocation(line: 428, column: 58, scope: !9487)
!9511 = !DILocation(line: 428, column: 53, scope: !9487)
!9512 = !DILocation(line: 428, column: 28, scope: !9487)
!9513 = !DILocation(line: 431, column: 44, scope: !9514)
!9514 = distinct !DILexicalBlock(scope: !9487, file: !1351, line: 431, column: 6)
!9515 = !DILocation(line: 438, column: 22, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9487, file: !1351, line: 437, column: 6)
!9517 = !DILocation(line: 437, column: 6, scope: !9487)
!9518 = !DILocation(line: 448, column: 6, scope: !9487)
!9519 = !DILocation(line: 465, column: 47, scope: !9520)
!9520 = distinct !DILexicalBlock(scope: !9487, file: !1351, line: 465, column: 6)
!9521 = !DILocation(line: 475, column: 21, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9487, file: !1351, line: 475, column: 6)
!9523 = !DILocation(line: 475, column: 6, scope: !9487)
!9524 = !DILocation(line: 476, column: 8, scope: !9525)
!9525 = distinct !DILexicalBlock(scope: !9526, file: !1351, line: 476, column: 7)
!9526 = distinct !DILexicalBlock(scope: !9522, file: !1351, line: 475, column: 49)
!9527 = !DILocation(line: 477, column: 34, scope: !9525)
!9528 = !DILocation(line: 476, column: 7, scope: !9526)
!9529 = !DILocation(line: 482, column: 27, scope: !9487)
!9530 = !DILocation(line: 482, column: 2, scope: !9487)
!9531 = !DILocation(line: 484, column: 16, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9487, file: !1351, line: 484, column: 6)
!9533 = !DILocation(line: 484, column: 13, scope: !9532)
!9534 = !DILocation(line: 484, column: 6, scope: !9487)
!9535 = !DILocation(line: 485, column: 3, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9532, file: !1351, line: 484, column: 44)
!9537 = !DILocation(line: 486, column: 2, scope: !9536)
!9538 = !DILocation(line: 488, column: 18, scope: !9539)
!9539 = distinct !DILexicalBlock(scope: !9487, file: !1351, line: 488, column: 6)
!9540 = !DILocation(line: 488, column: 15, scope: !9539)
!9541 = !DILocation(line: 488, column: 6, scope: !9487)
!9542 = !DILocation(line: 489, column: 3, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9539, file: !1351, line: 488, column: 48)
!9544 = !DILocation(line: 490, column: 2, scope: !9543)
!9545 = !DILocation(line: 492, column: 18, scope: !9546)
!9546 = distinct !DILexicalBlock(scope: !9487, file: !1351, line: 492, column: 6)
!9547 = !DILocation(line: 492, column: 15, scope: !9546)
!9548 = !DILocation(line: 492, column: 6, scope: !9487)
!9549 = !DILocation(line: 493, column: 3, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9546, file: !1351, line: 492, column: 48)
!9551 = !DILocation(line: 494, column: 2, scope: !9550)
!9552 = !DILocation(line: 496, column: 18, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9487, file: !1351, line: 496, column: 6)
!9554 = !DILocation(line: 496, column: 15, scope: !9553)
!9555 = !DILocation(line: 496, column: 6, scope: !9487)
!9556 = !DILocation(line: 497, column: 3, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9553, file: !1351, line: 496, column: 46)
!9558 = !DILocation(line: 498, column: 2, scope: !9557)
!9559 = !DILocation(line: 500, column: 11, scope: !9560)
!9560 = distinct !DILexicalBlock(scope: !9487, file: !1351, line: 500, column: 6)
!9561 = !DILocation(line: 500, column: 29, scope: !9560)
!9562 = !DILocation(line: 500, column: 20, scope: !9560)
!9563 = !DILocation(line: 500, column: 6, scope: !9487)
!9564 = !DILocation(line: 501, column: 3, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9560, file: !1351, line: 500, column: 40)
!9566 = !DILocation(line: 502, column: 26, scope: !9565)
!9567 = !DILocation(line: 502, column: 19, scope: !9565)
!9568 = !DILocation(line: 503, column: 2, scope: !9565)
!9569 = !DILocation(line: 505, column: 26, scope: !9487)
!9570 = !DILocation(line: 505, column: 2, scope: !9487)
!9571 = !DILocation(line: 506, column: 2, scope: !9487)
!9572 = !DILocation(line: 507, column: 1, scope: !9487)
!9573 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1351, file: !1351, line: 509, type: !1294, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9574)
!9574 = !{!9575, !9576, !9577}
!9575 = !DILocalVariable(name: "dev", arg: 1, scope: !9573, file: !1351, line: 509, type: !1256)
!9576 = !DILocalVariable(name: "cfg", arg: 2, scope: !9573, file: !1351, line: 510, type: !1296)
!9577 = !DILocalVariable(name: "data", scope: !9573, file: !1351, line: 512, type: !9493)
!9578 = !DILocation(line: 0, scope: !9573)
!9579 = !DILocation(line: 512, column: 38, scope: !9573)
!9580 = !DILocation(line: 514, column: 24, scope: !9573)
!9581 = !DILocation(line: 514, column: 7, scope: !9573)
!9582 = !DILocation(line: 514, column: 16, scope: !9573)
!9583 = !DILocation(line: 515, column: 41, scope: !9573)
!9584 = !{i32 0, i32 1537}
!9585 = !DILocation(line: 515, column: 16, scope: !9573)
!9586 = !DILocation(line: 515, column: 7, scope: !9573)
!9587 = !DILocation(line: 515, column: 14, scope: !9573)
!9588 = !DILocation(line: 517, column: 3, scope: !9573)
!9589 = !{i32 0, i32 12289}
!9590 = !DILocation(line: 516, column: 19, scope: !9573)
!9591 = !DILocation(line: 516, column: 7, scope: !9573)
!9592 = !DILocation(line: 516, column: 17, scope: !9573)
!9593 = !DILocation(line: 519, column: 3, scope: !9573)
!9594 = !DILocation(line: 519, column: 33, scope: !9573)
!9595 = !DILocation(line: 518, column: 19, scope: !9573)
!9596 = !DILocation(line: 518, column: 7, scope: !9573)
!9597 = !DILocation(line: 518, column: 17, scope: !9573)
!9598 = !DILocation(line: 521, column: 3, scope: !9573)
!9599 = !{i32 0, i32 769}
!9600 = !DILocation(line: 520, column: 19, scope: !9573)
!9601 = !DILocation(line: 520, column: 7, scope: !9573)
!9602 = !DILocation(line: 520, column: 17, scope: !9573)
!9603 = !DILocation(line: 522, column: 2, scope: !9573)
!9604 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1351, file: !1351, line: 205, type: !9605, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9607)
!9605 = !DISubroutineType(types: !9606)
!9606 = !{!137, !1256}
!9607 = !{!9608, !9609}
!9608 = !DILocalVariable(name: "dev", arg: 1, scope: !9604, file: !1351, line: 205, type: !1256)
!9609 = !DILocalVariable(name: "config", scope: !9604, file: !1351, line: 207, type: !9370)
!9610 = !DILocation(line: 0, scope: !9604)
!9611 = !DILocation(line: 207, column: 48, scope: !9604)
!9612 = !DILocation(line: 209, column: 36, scope: !9604)
!9613 = !DILocation(line: 209, column: 9, scope: !9604)
!9614 = !DILocation(line: 209, column: 2, scope: !9604)
!9615 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1351, file: !1351, line: 270, type: !9616, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9618)
!9616 = !DISubroutineType(types: !9617)
!9617 = !{!1222, !137}
!9618 = !{!9619}
!9619 = !DILocalVariable(name: "parity", arg: 1, scope: !9615, file: !1351, line: 270, type: !137)
!9620 = !DILocation(line: 0, scope: !9615)
!9621 = !DILocation(line: 272, column: 2, scope: !9615)
!9622 = !DILocation(line: 281, column: 1, scope: !9615)
!9623 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1351, file: !1351, line: 220, type: !9605, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9624)
!9624 = !{!9625, !9626}
!9625 = !DILocalVariable(name: "dev", arg: 1, scope: !9623, file: !1351, line: 220, type: !1256)
!9626 = !DILocalVariable(name: "config", scope: !9623, file: !1351, line: 222, type: !9370)
!9627 = !DILocation(line: 0, scope: !9623)
!9628 = !DILocation(line: 222, column: 48, scope: !9623)
!9629 = !DILocation(line: 224, column: 44, scope: !9623)
!9630 = !DILocation(line: 224, column: 9, scope: !9623)
!9631 = !DILocation(line: 224, column: 2, scope: !9623)
!9632 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1351, file: !1351, line: 304, type: !9633, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9635)
!9633 = !DISubroutineType(types: !9634)
!9634 = !{!1236, !137}
!9635 = !{!9636}
!9636 = !DILocalVariable(name: "sb", arg: 1, scope: !9632, file: !1351, line: 304, type: !137)
!9637 = !DILocation(line: 0, scope: !9632)
!9638 = !DILocation(line: 306, column: 2, scope: !9632)
!9639 = !DILocation(line: 0, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9632, file: !1351, line: 306, column: 14)
!9641 = !DILocation(line: 323, column: 1, scope: !9632)
!9642 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1351, file: !1351, line: 235, type: !9605, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9643)
!9643 = !{!9644, !9645}
!9644 = !DILocalVariable(name: "dev", arg: 1, scope: !9642, file: !1351, line: 235, type: !1256)
!9645 = !DILocalVariable(name: "config", scope: !9642, file: !1351, line: 237, type: !9370)
!9646 = !DILocation(line: 0, scope: !9642)
!9647 = !DILocation(line: 237, column: 48, scope: !9642)
!9648 = !DILocation(line: 239, column: 39, scope: !9642)
!9649 = !DILocation(line: 239, column: 9, scope: !9642)
!9650 = !DILocation(line: 239, column: 2, scope: !9642)
!9651 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1351, file: !1351, line: 355, type: !9652, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9654)
!9652 = !DISubroutineType(types: !9653)
!9653 = !{!1229, !137, !137}
!9654 = !{!9655, !9656}
!9655 = !DILocalVariable(name: "db", arg: 1, scope: !9651, file: !1351, line: 355, type: !137)
!9656 = !DILocalVariable(name: "p", arg: 2, scope: !9651, file: !1351, line: 356, type: !137)
!9657 = !DILocation(line: 0, scope: !9651)
!9658 = !DILocation(line: 358, column: 2, scope: !9651)
!9659 = !DILocation(line: 384, column: 1, scope: !9651)
!9660 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1351, file: !1351, line: 250, type: !9605, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9661)
!9661 = !{!9662, !9663}
!9662 = !DILocalVariable(name: "dev", arg: 1, scope: !9660, file: !1351, line: 250, type: !1256)
!9663 = !DILocalVariable(name: "config", scope: !9660, file: !1351, line: 252, type: !9370)
!9664 = !DILocation(line: 0, scope: !9660)
!9665 = !DILocation(line: 252, column: 48, scope: !9660)
!9666 = !DILocation(line: 254, column: 40, scope: !9660)
!9667 = !DILocation(line: 254, column: 9, scope: !9660)
!9668 = !DILocation(line: 254, column: 2, scope: !9660)
!9669 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1351, file: !1351, line: 409, type: !9670, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9672)
!9670 = !DISubroutineType(types: !9671)
!9671 = !{!1242, !137}
!9672 = !{!9673}
!9673 = !DILocalVariable(name: "fc", arg: 1, scope: !9669, file: !1351, line: 409, type: !137)
!9674 = !DILocation(line: 0, scope: !9669)
!9675 = !DILocation(line: 411, column: 9, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9669, file: !1351, line: 411, column: 6)
!9677 = !DILocation(line: 416, column: 1, scope: !9669)
!9678 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !9679, file: !9679, line: 967, type: !9680, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9682)
!9679 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9680 = !DISubroutineType(types: !9681)
!9681 = !{!137, !1297}
!9682 = !{!9683}
!9683 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9678, file: !9679, line: 967, type: !1297)
!9684 = !DILocation(line: 0, scope: !9678)
!9685 = !DILocation(line: 969, column: 21, scope: !9678)
!9686 = !DILocation(line: 969, column: 3, scope: !9678)
!9687 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !9679, file: !9679, line: 601, type: !9680, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9688)
!9688 = !{!9689}
!9689 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9687, file: !9679, line: 601, type: !1297)
!9690 = !DILocation(line: 0, scope: !9687)
!9691 = !DILocation(line: 603, column: 21, scope: !9687)
!9692 = !DILocation(line: 603, column: 3, scope: !9687)
!9693 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !9679, file: !9679, line: 820, type: !9680, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9694)
!9694 = !{!9695}
!9695 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9693, file: !9679, line: 820, type: !1297)
!9696 = !DILocation(line: 0, scope: !9693)
!9697 = !DILocation(line: 822, column: 21, scope: !9693)
!9698 = !DILocation(line: 822, column: 3, scope: !9693)
!9699 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !9679, file: !9679, line: 547, type: !9680, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9700)
!9700 = !{!9701}
!9701 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9699, file: !9679, line: 547, type: !1297)
!9702 = !DILocation(line: 0, scope: !9699)
!9703 = !DILocation(line: 549, column: 21, scope: !9699)
!9704 = !DILocation(line: 549, column: 3, scope: !9699)
!9705 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1351, file: !1351, line: 257, type: !9706, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9708)
!9706 = !DISubroutineType(types: !9707)
!9707 = !{!137, !1222}
!9708 = !{!9709}
!9709 = !DILocalVariable(name: "parity", arg: 1, scope: !9705, file: !1351, line: 257, type: !1222)
!9710 = !DILocation(line: 0, scope: !9705)
!9711 = !DILocation(line: 259, column: 2, scope: !9705)
!9712 = !DILocation(line: 268, column: 1, scope: !9705)
!9713 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1351, file: !1351, line: 283, type: !9714, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9716)
!9714 = !DISubroutineType(types: !9715)
!9715 = !{!137, !1236}
!9716 = !{!9717}
!9717 = !DILocalVariable(name: "sb", arg: 1, scope: !9713, file: !1351, line: 283, type: !1236)
!9718 = !DILocation(line: 0, scope: !9713)
!9719 = !DILocation(line: 285, column: 2, scope: !9713)
!9720 = !DILocation(line: 0, scope: !9721)
!9721 = distinct !DILexicalBlock(scope: !9713, file: !1351, line: 285, column: 14)
!9722 = !DILocation(line: 302, column: 1, scope: !9713)
!9723 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1351, file: !1351, line: 325, type: !9724, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9726)
!9724 = !DISubroutineType(types: !9725)
!9725 = !{!137, !1229, !1222}
!9726 = !{!9727, !9728}
!9727 = !DILocalVariable(name: "db", arg: 1, scope: !9723, file: !1351, line: 325, type: !1229)
!9728 = !DILocalVariable(name: "p", arg: 2, scope: !9723, file: !1351, line: 326, type: !1222)
!9729 = !DILocation(line: 0, scope: !9723)
!9730 = !DILocation(line: 328, column: 2, scope: !9723)
!9731 = !DILocation(line: 353, column: 1, scope: !9723)
!9732 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1351, file: !1351, line: 393, type: !9733, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9735)
!9733 = !DISubroutineType(types: !9734)
!9734 = !{!137, !1242}
!9735 = !{!9736}
!9736 = !DILocalVariable(name: "fc", arg: 1, scope: !9732, file: !1351, line: 393, type: !1242)
!9737 = !DILocation(line: 0, scope: !9732)
!9738 = !DILocation(line: 395, column: 9, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !9732, file: !1351, line: 395, column: 6)
!9740 = !DILocation(line: 400, column: 1, scope: !9732)
!9741 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !9679, file: !9679, line: 424, type: !9742, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9744)
!9742 = !DISubroutineType(types: !9743)
!9743 = !{null, !1297}
!9744 = !{!9745}
!9745 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9741, file: !9679, line: 424, type: !1297)
!9746 = !DILocation(line: 0, scope: !9741)
!9747 = !DILocation(line: 426, column: 3, scope: !9741)
!9748 = !DILocation(line: 427, column: 1, scope: !9741)
!9749 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1351, file: !1351, line: 197, type: !9750, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9752)
!9750 = !DISubroutineType(types: !9751)
!9751 = !{null, !1256, !137}
!9752 = !{!9753, !9754, !9755}
!9753 = !DILocalVariable(name: "dev", arg: 1, scope: !9749, file: !1351, line: 197, type: !1256)
!9754 = !DILocalVariable(name: "parity", arg: 2, scope: !9749, file: !1351, line: 198, type: !137)
!9755 = !DILocalVariable(name: "config", scope: !9749, file: !1351, line: 200, type: !9370)
!9756 = !DILocation(line: 0, scope: !9749)
!9757 = !DILocation(line: 200, column: 48, scope: !9749)
!9758 = !DILocation(line: 202, column: 29, scope: !9749)
!9759 = !DILocation(line: 202, column: 2, scope: !9749)
!9760 = !DILocation(line: 203, column: 1, scope: !9749)
!9761 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1351, file: !1351, line: 212, type: !9750, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9762)
!9762 = !{!9763, !9764, !9765}
!9763 = !DILocalVariable(name: "dev", arg: 1, scope: !9761, file: !1351, line: 212, type: !1256)
!9764 = !DILocalVariable(name: "stopbits", arg: 2, scope: !9761, file: !1351, line: 213, type: !137)
!9765 = !DILocalVariable(name: "config", scope: !9761, file: !1351, line: 215, type: !9370)
!9766 = !DILocation(line: 0, scope: !9761)
!9767 = !DILocation(line: 215, column: 48, scope: !9761)
!9768 = !DILocation(line: 217, column: 37, scope: !9761)
!9769 = !DILocation(line: 217, column: 2, scope: !9761)
!9770 = !DILocation(line: 218, column: 1, scope: !9761)
!9771 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1351, file: !1351, line: 227, type: !9750, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9772)
!9772 = !{!9773, !9774, !9775}
!9773 = !DILocalVariable(name: "dev", arg: 1, scope: !9771, file: !1351, line: 227, type: !1256)
!9774 = !DILocalVariable(name: "databits", arg: 2, scope: !9771, file: !1351, line: 228, type: !137)
!9775 = !DILocalVariable(name: "config", scope: !9771, file: !1351, line: 230, type: !9370)
!9776 = !DILocation(line: 0, scope: !9771)
!9777 = !DILocation(line: 230, column: 48, scope: !9771)
!9778 = !DILocation(line: 232, column: 32, scope: !9771)
!9779 = !DILocation(line: 232, column: 2, scope: !9771)
!9780 = !DILocation(line: 233, column: 1, scope: !9771)
!9781 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1351, file: !1351, line: 242, type: !9750, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9782)
!9782 = !{!9783, !9784, !9785}
!9783 = !DILocalVariable(name: "dev", arg: 1, scope: !9781, file: !1351, line: 242, type: !1256)
!9784 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !9781, file: !1351, line: 243, type: !137)
!9785 = !DILocalVariable(name: "config", scope: !9781, file: !1351, line: 245, type: !9370)
!9786 = !DILocation(line: 0, scope: !9781)
!9787 = !DILocation(line: 245, column: 48, scope: !9781)
!9788 = !DILocation(line: 247, column: 33, scope: !9781)
!9789 = !DILocation(line: 247, column: 2, scope: !9781)
!9790 = !DILocation(line: 248, column: 1, scope: !9781)
!9791 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1351, file: !1351, line: 107, type: !9750, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9792)
!9792 = !{!9793, !9794, !9795, !9796, !9797}
!9793 = !DILocalVariable(name: "dev", arg: 1, scope: !9791, file: !1351, line: 107, type: !1256)
!9794 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !9791, file: !1351, line: 107, type: !137)
!9795 = !DILocalVariable(name: "config", scope: !9791, file: !1351, line: 109, type: !9370)
!9796 = !DILocalVariable(name: "data", scope: !9791, file: !1351, line: 110, type: !9493)
!9797 = !DILocalVariable(name: "clock_rate", scope: !9791, file: !1351, line: 112, type: !137)
!9798 = !DILocation(line: 0, scope: !9791)
!9799 = !DILocation(line: 109, column: 48, scope: !9791)
!9800 = !DILocation(line: 110, column: 38, scope: !9791)
!9801 = !DILocation(line: 112, column: 2, scope: !9791)
!9802 = !DILocation(line: 123, column: 36, scope: !9803)
!9803 = distinct !DILexicalBlock(scope: !9804, file: !1351, line: 123, column: 7)
!9804 = distinct !DILexicalBlock(scope: !9805, file: !1351, line: 122, column: 9)
!9805 = distinct !DILexicalBlock(scope: !9791, file: !1351, line: 115, column: 6)
!9806 = !DILocation(line: 124, column: 42, scope: !9803)
!9807 = !DILocation(line: 123, column: 7, scope: !9803)
!9808 = !DILocation(line: 125, column: 22, scope: !9803)
!9809 = !DILocation(line: 123, column: 7, scope: !9804)
!9810 = !DILocation(line: 176, column: 36, scope: !9791)
!9811 = !DILocation(line: 176, column: 3, scope: !9791)
!9812 = !DILocation(line: 179, column: 32, scope: !9791)
!9813 = !DILocation(line: 180, column: 10, scope: !9791)
!9814 = !DILocation(line: 179, column: 3, scope: !9791)
!9815 = !DILocation(line: 195, column: 1, scope: !9791)
!9816 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !9679, file: !9679, line: 410, type: !9742, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9817)
!9817 = !{!9818}
!9818 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9816, file: !9679, line: 410, type: !1297)
!9819 = !DILocation(line: 0, scope: !9816)
!9820 = !DILocation(line: 412, column: 3, scope: !9816)
!9821 = !DILocation(line: 413, column: 1, scope: !9816)
!9822 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !705, file: !705, line: 216, type: !1330, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9823)
!9823 = !{!9824, !9825, !9826, !9827}
!9824 = !DILocalVariable(name: "dev", arg: 1, scope: !9822, file: !705, line: 216, type: !1256)
!9825 = !DILocalVariable(name: "sys", arg: 2, scope: !9822, file: !705, line: 217, type: !796)
!9826 = !DILocalVariable(name: "rate", arg: 3, scope: !9822, file: !705, line: 218, type: !149)
!9827 = !DILocalVariable(name: "api", scope: !9822, file: !705, line: 220, type: !1308)
!9828 = !DILocation(line: 0, scope: !9822)
!9829 = !DILocation(line: 221, column: 49, scope: !9822)
!9830 = !DILocation(line: 223, column: 11, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9822, file: !705, line: 223, column: 6)
!9832 = !DILocation(line: 223, column: 20, scope: !9831)
!9833 = !DILocation(line: 223, column: 6, scope: !9822)
!9834 = !DILocation(line: 227, column: 9, scope: !9822)
!9835 = !DILocation(line: 227, column: 2, scope: !9822)
!9836 = !DILocation(line: 228, column: 1, scope: !9822)
!9837 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !9679, file: !9679, line: 615, type: !9838, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9840)
!9838 = !DISubroutineType(types: !9839)
!9839 = !{null, !1297, !137}
!9840 = !{!9841, !9842}
!9841 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9837, file: !9679, line: 615, type: !1297)
!9842 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !9837, file: !9679, line: 615, type: !137)
!9843 = !DILocation(line: 0, scope: !9837)
!9844 = !DILocation(line: 617, column: 3, scope: !9837)
!9845 = !DILocation(line: 618, column: 1, scope: !9837)
!9846 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !9679, file: !9679, line: 1020, type: !9847, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9849)
!9847 = !DISubroutineType(types: !9848)
!9848 = !{null, !1297, !137, !137, !137}
!9849 = !{!9850, !9851, !9852, !9853}
!9850 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9846, file: !9679, line: 1020, type: !1297)
!9851 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !9846, file: !9679, line: 1020, type: !137)
!9852 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !9846, file: !9679, line: 1020, type: !137)
!9853 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !9846, file: !9679, line: 1021, type: !137)
!9854 = !DILocation(line: 0, scope: !9846)
!9855 = !DILocation(line: 1029, column: 30, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9857, file: !9679, line: 1028, column: 3)
!9857 = distinct !DILexicalBlock(scope: !9846, file: !9679, line: 1023, column: 7)
!9858 = !DILocation(line: 1029, column: 19, scope: !9856)
!9859 = !DILocation(line: 1029, column: 13, scope: !9856)
!9860 = !DILocation(line: 1029, column: 17, scope: !9856)
!9861 = !DILocation(line: 1031, column: 1, scope: !9846)
!9862 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !9679, file: !9679, line: 949, type: !9838, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9863)
!9863 = !{!9864, !9865}
!9864 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9862, file: !9679, line: 949, type: !1297)
!9865 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !9862, file: !9679, line: 949, type: !137)
!9866 = !DILocation(line: 0, scope: !9862)
!9867 = !DILocation(line: 951, column: 3, scope: !9862)
!9868 = !DILocation(line: 952, column: 1, scope: !9862)
!9869 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !9679, file: !9679, line: 588, type: !9838, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9870)
!9870 = !{!9871, !9872}
!9871 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9869, file: !9679, line: 588, type: !1297)
!9872 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !9869, file: !9679, line: 588, type: !137)
!9873 = !DILocation(line: 0, scope: !9869)
!9874 = !DILocation(line: 590, column: 3, scope: !9869)
!9875 = !DILocation(line: 591, column: 1, scope: !9869)
!9876 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !9679, file: !9679, line: 805, type: !9838, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9877)
!9877 = !{!9878, !9879}
!9878 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9876, file: !9679, line: 805, type: !1297)
!9879 = !DILocalVariable(name: "StopBits", arg: 2, scope: !9876, file: !9679, line: 805, type: !137)
!9880 = !DILocation(line: 0, scope: !9876)
!9881 = !DILocation(line: 807, column: 3, scope: !9876)
!9882 = !DILocation(line: 808, column: 1, scope: !9876)
!9883 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !9679, file: !9679, line: 532, type: !9838, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9884)
!9884 = !{!9885, !9886}
!9885 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9883, file: !9679, line: 532, type: !1297)
!9886 = !DILocalVariable(name: "Parity", arg: 2, scope: !9883, file: !9679, line: 532, type: !137)
!9887 = !DILocation(line: 0, scope: !9883)
!9888 = !DILocation(line: 534, column: 3, scope: !9883)
!9889 = !DILocation(line: 535, column: 1, scope: !9883)
!9890 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !9679, file: !9679, line: 1770, type: !9680, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9891)
!9891 = !{!9892}
!9892 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9890, file: !9679, line: 1770, type: !1297)
!9893 = !DILocation(line: 0, scope: !9890)
!9894 = !DILocation(line: 1772, column: 11, scope: !9890)
!9895 = !DILocation(line: 1772, column: 46, scope: !9890)
!9896 = !DILocation(line: 1772, column: 3, scope: !9890)
!9897 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !9679, file: !9679, line: 1737, type: !9680, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9898)
!9898 = !{!9899}
!9899 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9897, file: !9679, line: 1737, type: !1297)
!9900 = !DILocation(line: 0, scope: !9897)
!9901 = !DILocation(line: 1739, column: 11, scope: !9897)
!9902 = !DILocation(line: 1739, column: 3, scope: !9897)
!9903 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !9679, file: !9679, line: 1748, type: !9680, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9904)
!9904 = !{!9905}
!9905 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9903, file: !9679, line: 1748, type: !1297)
!9906 = !DILocation(line: 0, scope: !9903)
!9907 = !DILocation(line: 1750, column: 11, scope: !9903)
!9908 = !DILocation(line: 1750, column: 45, scope: !9903)
!9909 = !DILocation(line: 1750, column: 3, scope: !9903)
!9910 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !9679, file: !9679, line: 1827, type: !9680, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9911)
!9911 = !{!9912}
!9912 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9910, file: !9679, line: 1827, type: !1297)
!9913 = !DILocation(line: 0, scope: !9910)
!9914 = !DILocation(line: 1829, column: 11, scope: !9910)
!9915 = !DILocation(line: 1829, column: 46, scope: !9910)
!9916 = !DILocation(line: 1829, column: 3, scope: !9910)
!9917 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !9679, file: !9679, line: 1992, type: !9742, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9918)
!9918 = !{!9919}
!9919 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9917, file: !9679, line: 1992, type: !1297)
!9920 = !DILocation(line: 0, scope: !9917)
!9921 = !DILocation(line: 1994, column: 3, scope: !9917)
!9922 = !DILocation(line: 1995, column: 1, scope: !9917)
!9923 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !9679, file: !9679, line: 1934, type: !9742, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9924)
!9924 = !{!9925, !9926}
!9925 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9923, file: !9679, line: 1934, type: !1297)
!9926 = !DILocalVariable(name: "tmpreg", scope: !9923, file: !9679, line: 1936, type: !176)
!9927 = !DILocation(line: 0, scope: !9923)
!9928 = !DILocation(line: 1936, column: 3, scope: !9923)
!9929 = !DILocation(line: 1936, column: 17, scope: !9923)
!9930 = !DILocation(line: 1937, column: 20, scope: !9923)
!9931 = !DILocation(line: 1937, column: 10, scope: !9923)
!9932 = !DILocation(line: 1938, column: 10, scope: !9923)
!9933 = !DILocation(line: 1939, column: 20, scope: !9923)
!9934 = !DILocation(line: 1939, column: 10, scope: !9923)
!9935 = !DILocation(line: 1940, column: 10, scope: !9923)
!9936 = !DILocation(line: 1941, column: 1, scope: !9923)
!9937 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !9679, file: !9679, line: 1877, type: !9742, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9938)
!9938 = !{!9939, !9940}
!9939 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9937, file: !9679, line: 1877, type: !1297)
!9940 = !DILocalVariable(name: "tmpreg", scope: !9937, file: !9679, line: 1879, type: !176)
!9941 = !DILocation(line: 0, scope: !9937)
!9942 = !DILocation(line: 1879, column: 3, scope: !9937)
!9943 = !DILocation(line: 1879, column: 17, scope: !9937)
!9944 = !DILocation(line: 1880, column: 20, scope: !9937)
!9945 = !DILocation(line: 1880, column: 10, scope: !9937)
!9946 = !DILocation(line: 1881, column: 10, scope: !9937)
!9947 = !DILocation(line: 1882, column: 20, scope: !9937)
!9948 = !DILocation(line: 1882, column: 10, scope: !9937)
!9949 = !DILocation(line: 1883, column: 10, scope: !9937)
!9950 = !DILocation(line: 1884, column: 1, scope: !9937)
!9951 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !9679, file: !9679, line: 1896, type: !9742, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9952)
!9952 = !{!9953, !9954}
!9953 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9951, file: !9679, line: 1896, type: !1297)
!9954 = !DILocalVariable(name: "tmpreg", scope: !9951, file: !9679, line: 1898, type: !176)
!9955 = !DILocation(line: 0, scope: !9951)
!9956 = !DILocation(line: 1898, column: 3, scope: !9951)
!9957 = !DILocation(line: 1898, column: 17, scope: !9951)
!9958 = !DILocation(line: 1899, column: 20, scope: !9951)
!9959 = !DILocation(line: 1899, column: 10, scope: !9951)
!9960 = !DILocation(line: 1900, column: 10, scope: !9951)
!9961 = !DILocation(line: 1901, column: 20, scope: !9951)
!9962 = !DILocation(line: 1901, column: 10, scope: !9951)
!9963 = !DILocation(line: 1902, column: 10, scope: !9951)
!9964 = !DILocation(line: 1903, column: 1, scope: !9951)
!9965 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !9679, file: !9679, line: 1915, type: !9742, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9966)
!9966 = !{!9967, !9968}
!9967 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9965, file: !9679, line: 1915, type: !1297)
!9968 = !DILocalVariable(name: "tmpreg", scope: !9965, file: !9679, line: 1917, type: !176)
!9969 = !DILocation(line: 0, scope: !9965)
!9970 = !DILocation(line: 1917, column: 3, scope: !9965)
!9971 = !DILocation(line: 1917, column: 17, scope: !9965)
!9972 = !DILocation(line: 1918, column: 20, scope: !9965)
!9973 = !DILocation(line: 1918, column: 10, scope: !9965)
!9974 = !DILocation(line: 1919, column: 10, scope: !9965)
!9975 = !DILocation(line: 1920, column: 20, scope: !9965)
!9976 = !DILocation(line: 1920, column: 10, scope: !9965)
!9977 = !DILocation(line: 1921, column: 10, scope: !9965)
!9978 = !DILocation(line: 1922, column: 1, scope: !9965)
!9979 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !9679, file: !9679, line: 1814, type: !9680, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9980)
!9980 = !{!9981}
!9981 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9979, file: !9679, line: 1814, type: !1297)
!9982 = !DILocation(line: 0, scope: !9979)
!9983 = !DILocation(line: 1816, column: 11, scope: !9979)
!9984 = !DILocation(line: 1816, column: 46, scope: !9979)
!9985 = !DILocation(line: 1816, column: 3, scope: !9979)
!9986 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !9679, file: !9679, line: 2426, type: !9987, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9989)
!9987 = !DISubroutineType(types: !9988)
!9988 = !{null, !1297, !208}
!9989 = !{!9990, !9991}
!9990 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9986, file: !9679, line: 2426, type: !1297)
!9991 = !DILocalVariable(name: "Value", arg: 2, scope: !9986, file: !9679, line: 2426, type: !208)
!9992 = !DILocation(line: 0, scope: !9986)
!9993 = !DILocation(line: 2428, column: 16, scope: !9986)
!9994 = !DILocation(line: 2428, column: 11, scope: !9986)
!9995 = !DILocation(line: 2428, column: 14, scope: !9986)
!9996 = !DILocation(line: 2429, column: 1, scope: !9986)
!9997 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !9679, file: !9679, line: 1792, type: !9680, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !9998)
!9998 = !{!9999}
!9999 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9997, file: !9679, line: 1792, type: !1297)
!10000 = !DILocation(line: 0, scope: !9997)
!10001 = !DILocation(line: 1794, column: 11, scope: !9997)
!10002 = !DILocation(line: 1794, column: 47, scope: !9997)
!10003 = !DILocation(line: 1794, column: 3, scope: !9997)
!10004 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !9679, file: !9679, line: 2403, type: !10005, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !10007)
!10005 = !DISubroutineType(types: !10006)
!10006 = !{!208, !1297}
!10007 = !{!10008}
!10008 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10004, file: !9679, line: 2403, type: !1297)
!10009 = !DILocation(line: 0, scope: !10004)
!10010 = !DILocation(line: 2405, column: 20, scope: !10004)
!10011 = !DILocation(line: 2405, column: 10, scope: !10004)
!10012 = !DILocation(line: 2405, column: 3, scope: !10004)
!10013 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1351, file: !1351, line: 1583, type: !1277, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !10014)
!10014 = !{!10015, !10016, !10017, !10018, !10019, !10020}
!10015 = !DILocalVariable(name: "dev", arg: 1, scope: !10013, file: !1351, line: 1583, type: !1256)
!10016 = !DILocalVariable(name: "config", scope: !10013, file: !1351, line: 1585, type: !9370)
!10017 = !DILocalVariable(name: "data", scope: !10013, file: !1351, line: 1586, type: !9493)
!10018 = !DILocalVariable(name: "ll_parity", scope: !10013, file: !1351, line: 1587, type: !137)
!10019 = !DILocalVariable(name: "ll_datawidth", scope: !10013, file: !1351, line: 1588, type: !137)
!10020 = !DILocalVariable(name: "err", scope: !10013, file: !1351, line: 1589, type: !103)
!10021 = !DILocation(line: 0, scope: !10013)
!10022 = !DILocation(line: 1585, column: 48, scope: !10013)
!10023 = !DILocation(line: 1586, column: 38, scope: !10013)
!10024 = !DILocation(line: 1591, column: 2, scope: !10013)
!10025 = !DILocation(line: 1593, column: 29, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10013, file: !1351, line: 1593, column: 6)
!10027 = !DILocation(line: 1593, column: 7, scope: !10026)
!10028 = !DILocation(line: 1593, column: 6, scope: !10013)
!10029 = !DILocation(line: 1599, column: 31, scope: !10013)
!10030 = !DILocation(line: 1599, column: 71, scope: !10013)
!10031 = !DILocation(line: 1599, column: 8, scope: !10013)
!10032 = !DILocation(line: 1600, column: 10, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10013, file: !1351, line: 1600, column: 6)
!10034 = !DILocation(line: 1600, column: 6, scope: !10013)
!10035 = !DILocation(line: 1616, column: 36, scope: !10013)
!10036 = !DILocation(line: 1616, column: 8, scope: !10013)
!10037 = !DILocation(line: 1617, column: 10, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10013, file: !1351, line: 1617, column: 6)
!10039 = !DILocation(line: 1617, column: 6, scope: !10013)
!10040 = !DILocation(line: 1621, column: 27, scope: !10013)
!10041 = !DILocation(line: 1621, column: 2, scope: !10013)
!10042 = !DILocation(line: 1624, column: 40, scope: !10013)
!10043 = !DILocation(line: 1624, column: 2, scope: !10013)
!10044 = !DILocation(line: 1630, column: 14, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10013, file: !1351, line: 1630, column: 6)
!10046 = !DILocation(line: 1630, column: 6, scope: !10013)
!10047 = !DILocation(line: 1638, column: 2, scope: !10048)
!10048 = distinct !DILexicalBlock(scope: !10049, file: !1351, line: 1634, column: 34)
!10049 = distinct !DILexicalBlock(scope: !10045, file: !1351, line: 1634, column: 13)
!10050 = !DILocation(line: 0, scope: !10045)
!10051 = !DILocation(line: 1649, column: 35, scope: !10013)
!10052 = !DILocation(line: 1649, column: 2, scope: !10013)
!10053 = !DILocation(line: 1654, column: 14, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10013, file: !1351, line: 1654, column: 6)
!10055 = !DILocation(line: 1654, column: 6, scope: !10013)
!10056 = !DILocation(line: 1655, column: 3, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10054, file: !1351, line: 1654, column: 31)
!10058 = !DILocation(line: 1656, column: 2, scope: !10057)
!10059 = !DILocation(line: 1659, column: 37, scope: !10013)
!10060 = !DILocation(line: 1659, column: 2, scope: !10013)
!10061 = !DILocation(line: 1662, column: 14, scope: !10062)
!10062 = distinct !DILexicalBlock(scope: !10013, file: !1351, line: 1662, column: 6)
!10063 = !DILocation(line: 1662, column: 6, scope: !10013)
!10064 = !DILocation(line: 1663, column: 37, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10062, file: !1351, line: 1662, column: 27)
!10066 = !DILocation(line: 1663, column: 3, scope: !10065)
!10067 = !DILocation(line: 1664, column: 2, scope: !10065)
!10068 = !DILocation(line: 1684, column: 26, scope: !10013)
!10069 = !DILocation(line: 1684, column: 2, scope: !10013)
!10070 = !DILocation(line: 1722, column: 2, scope: !10013)
!10071 = !DILocation(line: 1724, column: 1, scope: !10013)
!10072 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1351, file: !1351, line: 651, type: !10073, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !10075)
!10073 = !DISubroutineType(types: !10074)
!10074 = !{null, !1256}
!10075 = !{!10076, !10077, !10078}
!10076 = !DILocalVariable(name: "dev", arg: 1, scope: !10072, file: !1351, line: 651, type: !1256)
!10077 = !DILocalVariable(name: "data", scope: !10072, file: !1351, line: 653, type: !9493)
!10078 = !DILocalVariable(name: "clk", scope: !10072, file: !1351, line: 654, type: !10079)
!10079 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1256)
!10080 = !DILocation(line: 0, scope: !10072)
!10081 = !DILocation(line: 653, column: 38, scope: !10072)
!10082 = !DILocation(line: 656, column: 8, scope: !10072)
!10083 = !DILocation(line: 656, column: 14, scope: !10072)
!10084 = !DILocation(line: 657, column: 1, scope: !10072)
!10085 = distinct !DISubprogram(name: "device_is_ready", scope: !8508, file: !8508, line: 47, type: !10086, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !10088)
!10086 = !DISubroutineType(types: !10087)
!10087 = !{!211, !1256}
!10088 = !{!10089}
!10089 = !DILocalVariable(name: "dev", arg: 1, scope: !10085, file: !8508, line: 47, type: !1256)
!10090 = !DILocation(line: 0, scope: !10085)
!10091 = !DILocation(line: 55, column: 2, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10085, file: !8508, line: 55, column: 2)
!10093 = !{i64 2155125782}
!10094 = !DILocation(line: 56, column: 9, scope: !10085)
!10095 = !DILocation(line: 56, column: 2, scope: !10085)
!10096 = distinct !DISubprogram(name: "clock_control_on", scope: !705, file: !705, line: 123, type: !1315, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !10097)
!10097 = !{!10098, !10099, !10100}
!10098 = !DILocalVariable(name: "dev", arg: 1, scope: !10096, file: !705, line: 123, type: !1256)
!10099 = !DILocalVariable(name: "sys", arg: 2, scope: !10096, file: !705, line: 124, type: !796)
!10100 = !DILocalVariable(name: "api", scope: !10096, file: !705, line: 126, type: !1308)
!10101 = !DILocation(line: 0, scope: !10096)
!10102 = !DILocation(line: 127, column: 49, scope: !10096)
!10103 = !DILocation(line: 129, column: 14, scope: !10096)
!10104 = !DILocation(line: 129, column: 9, scope: !10096)
!10105 = !DILocation(line: 129, column: 2, scope: !10096)
!10106 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1376, file: !1376, line: 342, type: !10107, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !10109)
!10107 = !DISubroutineType(types: !10108)
!10108 = !{!103, !1424, !208}
!10109 = !{!10110, !10111, !10112, !10113}
!10110 = !DILocalVariable(name: "config", arg: 1, scope: !10106, file: !1376, line: 342, type: !1424)
!10111 = !DILocalVariable(name: "id", arg: 2, scope: !10106, file: !1376, line: 343, type: !208)
!10112 = !DILocalVariable(name: "ret", scope: !10106, file: !1376, line: 345, type: !103)
!10113 = !DILocalVariable(name: "state", scope: !10106, file: !1376, line: 346, type: !1379)
!10114 = !DILocation(line: 0, scope: !10106)
!10115 = !DILocation(line: 346, column: 2, scope: !10106)
!10116 = !DILocation(line: 348, column: 8, scope: !10106)
!10117 = !DILocation(line: 349, column: 10, scope: !10118)
!10118 = distinct !DILexicalBlock(scope: !10106, file: !1376, line: 349, column: 6)
!10119 = !DILocation(line: 349, column: 6, scope: !10106)
!10120 = !DILocation(line: 353, column: 44, scope: !10106)
!10121 = !DILocation(line: 353, column: 9, scope: !10106)
!10122 = !DILocation(line: 353, column: 2, scope: !10106)
!10123 = !DILocation(line: 354, column: 1, scope: !10106)
!10124 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !9679, file: !9679, line: 497, type: !9838, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !10125)
!10125 = !{!10126, !10127, !10128}
!10126 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10124, file: !9679, line: 497, type: !1297)
!10127 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10124, file: !9679, line: 497, type: !137)
!10128 = !DILocalVariable(name: "val", scope: !10129, file: !9679, line: 499, type: !137)
!10129 = distinct !DILexicalBlock(scope: !10124, file: !9679, line: 499, column: 3)
!10130 = !DILocation(line: 0, scope: !10124)
!10131 = !DILocation(line: 499, column: 3, scope: !10129)
!10132 = !DILocalVariable(name: "addr", arg: 1, scope: !10133, file: !6302, line: 476, type: !1347)
!10133 = distinct !DISubprogram(name: "__LDREXW", scope: !6302, file: !6302, line: 476, type: !10134, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !10136)
!10134 = !DISubroutineType(types: !10135)
!10135 = !{!137, !1347}
!10136 = !{!10132, !10137}
!10137 = !DILocalVariable(name: "result", scope: !10133, file: !6302, line: 478, type: !137)
!10138 = !DILocation(line: 0, scope: !10133, inlinedAt: !10139)
!10139 = distinct !DILocation(line: 499, column: 3, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10129, file: !9679, line: 499, column: 3)
!10141 = !DILocation(line: 480, column: 4, scope: !10133, inlinedAt: !10139)
!10142 = !{i64 3573252}
!10143 = !DILocation(line: 499, column: 3, scope: !10140)
!10144 = !DILocation(line: 0, scope: !10129)
!10145 = !DILocalVariable(name: "value", arg: 1, scope: !10146, file: !6302, line: 527, type: !137)
!10146 = distinct !DISubprogram(name: "__STREXW", scope: !6302, file: !6302, line: 527, type: !10147, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !10149)
!10147 = !DISubroutineType(types: !10148)
!10148 = !{!137, !137, !1347}
!10149 = !{!10145, !10150, !10151}
!10150 = !DILocalVariable(name: "addr", arg: 2, scope: !10146, file: !6302, line: 527, type: !1347)
!10151 = !DILocalVariable(name: "result", scope: !10146, file: !6302, line: 529, type: !137)
!10152 = !DILocation(line: 0, scope: !10146, inlinedAt: !10153)
!10153 = distinct !DILocation(line: 499, column: 3, scope: !10129)
!10154 = !DILocation(line: 531, column: 4, scope: !10146, inlinedAt: !10153)
!10155 = !{i64 3574688}
!10156 = distinct !{!10156, !10131, !10131}
!10157 = !DILocation(line: 500, column: 1, scope: !10124)
!10158 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !9679, file: !9679, line: 850, type: !9847, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !10159)
!10159 = !{!10160, !10161, !10162, !10163}
!10160 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10158, file: !9679, line: 850, type: !1297)
!10161 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10158, file: !9679, line: 850, type: !137)
!10162 = !DILocalVariable(name: "Parity", arg: 3, scope: !10158, file: !9679, line: 850, type: !137)
!10163 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10158, file: !9679, line: 851, type: !137)
!10164 = !DILocation(line: 0, scope: !10158)
!10165 = !DILocation(line: 853, column: 3, scope: !10158)
!10166 = !DILocation(line: 854, column: 3, scope: !10158)
!10167 = !DILocation(line: 855, column: 1, scope: !10158)
!10168 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !9679, file: !9679, line: 1337, type: !9742, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !10169)
!10169 = !{!10170}
!10170 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10168, file: !9679, line: 1337, type: !1297)
!10171 = !DILocation(line: 0, scope: !10168)
!10172 = !DILocation(line: 1339, column: 3, scope: !10168)
!10173 = !DILocation(line: 1340, column: 1, scope: !10168)
!10174 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1376, file: !1376, line: 316, type: !10175, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !10177)
!10175 = !DISubroutineType(types: !10176)
!10176 = !{!103, !1424, !1379}
!10177 = !{!10178, !10179, !10180}
!10178 = !DILocalVariable(name: "config", arg: 1, scope: !10174, file: !1376, line: 317, type: !1424)
!10179 = !DILocalVariable(name: "state", arg: 2, scope: !10174, file: !1376, line: 318, type: !1379)
!10180 = !DILocalVariable(name: "reg", scope: !10174, file: !1376, line: 320, type: !22)
!10181 = !DILocation(line: 0, scope: !10174)
!10182 = !DILocation(line: 329, column: 39, scope: !10174)
!10183 = !DILocation(line: 329, column: 52, scope: !10174)
!10184 = !DILocation(line: 329, column: 9, scope: !10174)
!10185 = !DILocation(line: 329, column: 2, scope: !10174)
!10186 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !196, file: !196, line: 730, type: !10086, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1212, retainedNodes: !10187)
!10187 = !{!10188}
!10188 = !DILocalVariable(name: "dev", arg: 1, scope: !10186, file: !196, line: 730, type: !1256)
!10189 = !DILocation(line: 0, scope: !10186)
!10190 = !DILocation(line: 732, column: 9, scope: !10186)
!10191 = !DILocation(line: 732, column: 2, scope: !10186)
!10192 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1507, file: !1507, line: 270, type: !1513, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !10193)
!10193 = !{!10194}
!10194 = !DILocalVariable(name: "dev", arg: 1, scope: !10192, file: !1507, line: 270, type: !1515)
!10195 = !DILocation(line: 0, scope: !10192)
!10196 = !DILocation(line: 274, column: 2, scope: !10192)
!10197 = !DILocation(line: 275, column: 12, scope: !10192)
!10198 = !DILocation(line: 276, column: 15, scope: !10192)
!10199 = !DILocation(line: 277, column: 16, scope: !10192)
!10200 = !DILocation(line: 278, column: 15, scope: !10192)
!10201 = !DILocation(line: 279, column: 16, scope: !10192)
!10202 = !DILocation(line: 282, column: 2, scope: !10192)
!10203 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !402, file: !402, line: 1814, type: !6336, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !10204)
!10204 = !{!10205, !10206}
!10205 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10203, file: !402, line: 1814, type: !659)
!10206 = !DILocalVariable(name: "priority", arg: 2, scope: !10203, file: !402, line: 1814, type: !137)
!10207 = !DILocation(line: 0, scope: !10203)
!10208 = !DILocation(line: 1822, column: 46, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10210, file: !402, line: 1821, column: 3)
!10210 = distinct !DILexicalBlock(scope: !10203, file: !402, line: 1816, column: 7)
!10211 = !DILocation(line: 1824, column: 1, scope: !10203)
!10212 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1507, file: !1507, line: 118, type: !6239, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !10213)
!10213 = !{!10214, !10215}
!10214 = !DILocalVariable(name: "arg", arg: 1, scope: !10212, file: !1507, line: 118, type: !102)
!10215 = !DILocalVariable(name: "dticks", scope: !10212, file: !1507, line: 121, type: !137)
!10216 = !DILocation(line: 0, scope: !10212)
!10217 = !DILocation(line: 124, column: 2, scope: !10212)
!10218 = !DILocation(line: 129, column: 17, scope: !10212)
!10219 = !DILocation(line: 129, column: 14, scope: !10212)
!10220 = !DILocation(line: 130, column: 15, scope: !10212)
!10221 = !DILocation(line: 145, column: 27, scope: !10222)
!10222 = distinct !DILexicalBlock(scope: !10223, file: !1507, line: 132, column: 16)
!10223 = distinct !DILexicalBlock(scope: !10212, file: !1507, line: 132, column: 6)
!10224 = !DILocation(line: 145, column: 25, scope: !10222)
!10225 = !DILocation(line: 145, column: 45, scope: !10222)
!10226 = !DILocation(line: 146, column: 30, scope: !10222)
!10227 = !DILocation(line: 146, column: 20, scope: !10222)
!10228 = !DILocation(line: 147, column: 3, scope: !10222)
!10229 = !DILocation(line: 151, column: 2, scope: !10212)
!10230 = !DILocation(line: 152, column: 1, scope: !10212)
!10231 = distinct !DISubprogram(name: "elapsed", scope: !1507, file: !1507, line: 85, type: !135, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !10232)
!10232 = !{!10233, !10234, !10235}
!10233 = !DILocalVariable(name: "val1", scope: !10231, file: !1507, line: 87, type: !137)
!10234 = !DILocalVariable(name: "ctrl", scope: !10231, file: !1507, line: 88, type: !137)
!10235 = !DILocalVariable(name: "val2", scope: !10231, file: !1507, line: 89, type: !137)
!10236 = !DILocation(line: 87, column: 27, scope: !10231)
!10237 = !DILocation(line: 0, scope: !10231)
!10238 = !DILocation(line: 88, column: 27, scope: !10231)
!10239 = !DILocation(line: 89, column: 27, scope: !10231)
!10240 = !DILocation(line: 105, column: 12, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10231, file: !1507, line: 105, column: 6)
!10242 = !DILocation(line: 106, column: 6, scope: !10241)
!10243 = !DILocation(line: 107, column: 16, scope: !10244)
!10244 = distinct !DILexicalBlock(scope: !10241, file: !1507, line: 106, column: 24)
!10245 = !DILocation(line: 111, column: 18, scope: !10244)
!10246 = !DILocation(line: 112, column: 2, scope: !10244)
!10247 = !DILocation(line: 114, column: 20, scope: !10231)
!10248 = !DILocation(line: 114, column: 30, scope: !10231)
!10249 = !DILocation(line: 114, column: 28, scope: !10231)
!10250 = !DILocation(line: 114, column: 2, scope: !10231)
!10251 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1507, file: !1507, line: 154, type: !10252, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !10254)
!10252 = !DISubroutineType(types: !10253)
!10253 = !{null, !633, !211}
!10254 = !{!10255, !10256, !10257, !10258, !10259, !10260, !10261, !10266, !10267}
!10255 = !DILocalVariable(name: "ticks", arg: 1, scope: !10251, file: !1507, line: 154, type: !633)
!10256 = !DILocalVariable(name: "idle", arg: 2, scope: !10251, file: !1507, line: 154, type: !211)
!10257 = !DILocalVariable(name: "delay", scope: !10251, file: !1507, line: 169, type: !137)
!10258 = !DILocalVariable(name: "val1", scope: !10251, file: !1507, line: 170, type: !137)
!10259 = !DILocalVariable(name: "val2", scope: !10251, file: !1507, line: 170, type: !137)
!10260 = !DILocalVariable(name: "last_load_", scope: !10251, file: !1507, line: 171, type: !137)
!10261 = !DILocalVariable(name: "key", scope: !10251, file: !1507, line: 176, type: !10262)
!10262 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !368, line: 106, baseType: !10263)
!10263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !368, line: 32, size: 32, elements: !10264)
!10264 = !{!10265}
!10265 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10263, file: !368, line: 33, baseType: !103, size: 32)
!10266 = !DILocalVariable(name: "pending", scope: !10251, file: !1507, line: 178, type: !137)
!10267 = !DILocalVariable(name: "unannounced", scope: !10251, file: !1507, line: 185, type: !137)
!10268 = !DILocation(line: 0, scope: !10251)
!10269 = !DILocation(line: 162, column: 49, scope: !10270)
!10270 = distinct !DILexicalBlock(scope: !10251, file: !1507, line: 162, column: 6)
!10271 = !DILocation(line: 163, column: 17, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !10270, file: !1507, line: 162, column: 78)
!10273 = !DILocation(line: 164, column: 13, scope: !10272)
!10274 = !DILocation(line: 165, column: 3, scope: !10272)
!10275 = !DILocation(line: 171, column: 24, scope: !10251)
!10276 = !DILocation(line: 173, column: 10, scope: !10251)
!10277 = !DILocation(line: 174, column: 10, scope: !10251)
!10278 = !DILocalVariable(name: "l", arg: 1, scope: !10279, file: !368, line: 136, type: !10282)
!10279 = distinct !DISubprogram(name: "k_spin_lock", scope: !368, file: !368, line: 136, type: !10280, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !10283)
!10280 = !DISubroutineType(types: !10281)
!10281 = !{!10262, !10282}
!10282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 32)
!10283 = !{!10278, !10284}
!10284 = !DILocalVariable(name: "k", scope: !10279, file: !368, line: 139, type: !10262)
!10285 = !DILocation(line: 0, scope: !10279, inlinedAt: !10286)
!10286 = distinct !DILocation(line: 176, column: 25, scope: !10251)
!10287 = !DILocation(line: 55, column: 2, scope: !10288, inlinedAt: !10292)
!10288 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6128, file: !6128, line: 42, type: !6129, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !10289)
!10289 = !{!10290, !10291}
!10290 = !DILocalVariable(name: "key", scope: !10288, file: !6128, line: 44, type: !32)
!10291 = !DILocalVariable(name: "tmp", scope: !10288, file: !6128, line: 53, type: !32)
!10292 = distinct !DILocation(line: 145, column: 10, scope: !10279, inlinedAt: !10286)
!10293 = !{i64 2195704}
!10294 = !DILocation(line: 0, scope: !10288, inlinedAt: !10292)
!10295 = !DILocation(line: 178, column: 21, scope: !10251)
!10296 = !DILocation(line: 180, column: 18, scope: !10251)
!10297 = !DILocation(line: 182, column: 14, scope: !10251)
!10298 = !DILocation(line: 183, column: 15, scope: !10251)
!10299 = !DILocation(line: 185, column: 39, scope: !10251)
!10300 = !DILocation(line: 185, column: 37, scope: !10251)
!10301 = !DILocation(line: 187, column: 27, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10251, file: !1507, line: 187, column: 6)
!10303 = !DILocation(line: 187, column: 6, scope: !10251)
!10304 = !DILocation(line: 202, column: 27, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10302, file: !1507, line: 195, column: 9)
!10306 = !DILocation(line: 202, column: 48, scope: !10305)
!10307 = !DILocation(line: 203, column: 9, scope: !10305)
!10308 = !DILocation(line: 204, column: 11, scope: !10305)
!10309 = !DILocation(line: 205, column: 13, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !10305, file: !1507, line: 205, column: 7)
!10311 = !DILocation(line: 205, column: 7, scope: !10305)
!10312 = !DILocation(line: 0, scope: !10302)
!10313 = !DILocation(line: 212, column: 18, scope: !10251)
!10314 = !DILocation(line: 214, column: 28, scope: !10251)
!10315 = !DILocation(line: 214, column: 16, scope: !10251)
!10316 = !DILocation(line: 215, column: 15, scope: !10251)
!10317 = !DILocation(line: 227, column: 11, scope: !10318)
!10318 = distinct !DILexicalBlock(scope: !10251, file: !1507, line: 227, column: 6)
!10319 = !DILocation(line: 227, column: 6, scope: !10251)
!10320 = !DILocation(line: 228, column: 15, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !10318, file: !1507, line: 227, column: 19)
!10322 = !DILocation(line: 228, column: 38, scope: !10321)
!10323 = !DILocation(line: 228, column: 24, scope: !10321)
!10324 = !DILocation(line: 229, column: 2, scope: !10321)
!10325 = !DILocation(line: 230, column: 24, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10318, file: !1507, line: 229, column: 9)
!10327 = !DILocation(line: 230, column: 15, scope: !10326)
!10328 = !DILocation(line: 0, scope: !10318)
!10329 = !DILocalVariable(name: "key", arg: 2, scope: !10330, file: !368, line: 190, type: !10262)
!10330 = distinct !DISubprogram(name: "k_spin_unlock", scope: !368, file: !368, line: 189, type: !10331, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !10333)
!10331 = !DISubroutineType(types: !10332)
!10332 = !{null, !10282, !10262}
!10333 = !{!10334, !10329}
!10334 = !DILocalVariable(name: "l", arg: 1, scope: !10330, file: !368, line: 189, type: !10282)
!10335 = !DILocation(line: 0, scope: !10330, inlinedAt: !10336)
!10336 = distinct !DILocation(line: 232, column: 2, scope: !10251)
!10337 = !DILocalVariable(name: "key", arg: 1, scope: !10338, file: !6128, line: 84, type: !32)
!10338 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6128, file: !6128, line: 84, type: !6139, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !10339)
!10339 = !{!10337}
!10340 = !DILocation(line: 0, scope: !10338, inlinedAt: !10341)
!10341 = distinct !DILocation(line: 215, column: 2, scope: !10330, inlinedAt: !10336)
!10342 = !DILocation(line: 95, column: 2, scope: !10338, inlinedAt: !10341)
!10343 = !{i64 2196521}
!10344 = !DILocation(line: 234, column: 1, scope: !10251)
!10345 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1507, file: !1507, line: 236, type: !135, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !10346)
!10346 = !{!10347, !10348}
!10347 = !DILocalVariable(name: "key", scope: !10345, file: !1507, line: 242, type: !10262)
!10348 = !DILocalVariable(name: "cyc", scope: !10345, file: !1507, line: 243, type: !137)
!10349 = !DILocation(line: 0, scope: !10279, inlinedAt: !10350)
!10350 = distinct !DILocation(line: 242, column: 25, scope: !10345)
!10351 = !DILocation(line: 55, column: 2, scope: !10288, inlinedAt: !10352)
!10352 = distinct !DILocation(line: 145, column: 10, scope: !10279, inlinedAt: !10350)
!10353 = !DILocation(line: 0, scope: !10288, inlinedAt: !10352)
!10354 = !DILocation(line: 0, scope: !10345)
!10355 = !DILocation(line: 243, column: 17, scope: !10345)
!10356 = !DILocation(line: 243, column: 29, scope: !10345)
!10357 = !DILocation(line: 243, column: 27, scope: !10345)
!10358 = !DILocation(line: 243, column: 43, scope: !10345)
!10359 = !DILocation(line: 243, column: 41, scope: !10345)
!10360 = !DILocation(line: 0, scope: !10330, inlinedAt: !10361)
!10361 = distinct !DILocation(line: 245, column: 2, scope: !10345)
!10362 = !DILocation(line: 0, scope: !10338, inlinedAt: !10363)
!10363 = distinct !DILocation(line: 215, column: 2, scope: !10330, inlinedAt: !10361)
!10364 = !DILocation(line: 95, column: 2, scope: !10338, inlinedAt: !10363)
!10365 = !DILocation(line: 246, column: 13, scope: !10345)
!10366 = !DILocation(line: 246, column: 2, scope: !10345)
!10367 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1507, file: !1507, line: 249, type: !135, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !10368)
!10368 = !{!10369, !10370}
!10369 = !DILocalVariable(name: "key", scope: !10367, file: !1507, line: 251, type: !10262)
!10370 = !DILocalVariable(name: "ret", scope: !10367, file: !1507, line: 252, type: !137)
!10371 = !DILocation(line: 0, scope: !10279, inlinedAt: !10372)
!10372 = distinct !DILocation(line: 251, column: 25, scope: !10367)
!10373 = !DILocation(line: 55, column: 2, scope: !10288, inlinedAt: !10374)
!10374 = distinct !DILocation(line: 145, column: 10, scope: !10279, inlinedAt: !10372)
!10375 = !DILocation(line: 0, scope: !10288, inlinedAt: !10374)
!10376 = !DILocation(line: 0, scope: !10367)
!10377 = !DILocation(line: 252, column: 17, scope: !10367)
!10378 = !DILocation(line: 252, column: 29, scope: !10367)
!10379 = !DILocation(line: 252, column: 27, scope: !10367)
!10380 = !DILocation(line: 0, scope: !10330, inlinedAt: !10381)
!10381 = distinct !DILocation(line: 254, column: 2, scope: !10367)
!10382 = !DILocation(line: 0, scope: !10338, inlinedAt: !10383)
!10383 = distinct !DILocation(line: 215, column: 2, scope: !10330, inlinedAt: !10381)
!10384 = !DILocation(line: 95, column: 2, scope: !10338, inlinedAt: !10383)
!10385 = !DILocation(line: 255, column: 2, scope: !10367)
!10386 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1507, file: !1507, line: 258, type: !2826, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !162)
!10387 = !DILocation(line: 260, column: 6, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10386, file: !1507, line: 260, column: 6)
!10389 = !DILocation(line: 260, column: 16, scope: !10388)
!10390 = !DILocation(line: 260, column: 6, scope: !10386)
!10391 = !DILocation(line: 261, column: 17, scope: !10392)
!10392 = distinct !DILexicalBlock(scope: !10388, file: !1507, line: 260, column: 34)
!10393 = !DILocation(line: 262, column: 2, scope: !10392)
!10394 = !DILocation(line: 263, column: 1, scope: !10386)
!10395 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1507, file: !1507, line: 265, type: !2826, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !162)
!10396 = !DILocation(line: 267, column: 16, scope: !10395)
!10397 = !DILocation(line: 268, column: 1, scope: !10395)
!10398 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10399, file: !10399, line: 9, type: !10400, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2637, retainedNodes: !10423)
!10399 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10400 = !DISubroutineType(types: !10401)
!10401 = !{!103, !10402, !208, !10422}
!10402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10403, size: 32)
!10403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10404)
!10404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1376, line: 60, size: 64, elements: !10405)
!10405 = !{!10406, !10421}
!10406 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10404, file: !1376, line: 69, baseType: !10407, size: 32)
!10407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10408, size: 32)
!10408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10409)
!10409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1376, line: 50, size: 64, elements: !10410)
!10410 = !{!10411, !10419, !10420}
!10411 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10409, file: !1376, line: 52, baseType: !10412, size: 32)
!10412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10413, size: 32)
!10413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10414)
!10414 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1387, line: 37, baseType: !10415)
!10415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1387, line: 32, size: 64, elements: !10416)
!10416 = !{!10417, !10418}
!10417 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10415, file: !1387, line: 34, baseType: !137, size: 32)
!10418 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10415, file: !1387, line: 36, baseType: !137, size: 32, offset: 32)
!10419 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10409, file: !1376, line: 54, baseType: !208, size: 8, offset: 32)
!10420 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10409, file: !1376, line: 56, baseType: !208, size: 8, offset: 40)
!10421 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10404, file: !1376, line: 71, baseType: !208, size: 8, offset: 32)
!10422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10407, size: 32)
!10423 = !{!10424, !10425, !10426}
!10424 = !DILocalVariable(name: "config", arg: 1, scope: !10398, file: !10399, line: 9, type: !10402)
!10425 = !DILocalVariable(name: "id", arg: 2, scope: !10398, file: !10399, line: 9, type: !208)
!10426 = !DILocalVariable(name: "state", arg: 3, scope: !10398, file: !10399, line: 10, type: !10422)
!10427 = !DILocation(line: 0, scope: !10398)
!10428 = !DILocation(line: 12, column: 20, scope: !10398)
!10429 = !DILocation(line: 13, column: 27, scope: !10398)
!10430 = !DILocation(line: 13, column: 42, scope: !10398)
!10431 = !DILocation(line: 13, column: 19, scope: !10398)
!10432 = !DILocation(line: 13, column: 16, scope: !10398)
!10433 = !DILocation(line: 13, column: 2, scope: !10398)
!10434 = distinct !{!10434, !10433, !10435}
!10435 = !DILocation(line: 19, column: 2, scope: !10398)
!10436 = !DILocation(line: 14, column: 23, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10438, file: !10399, line: 14, column: 7)
!10438 = distinct !DILexicalBlock(scope: !10398, file: !10399, line: 13, column: 54)
!10439 = !DILocation(line: 14, column: 10, scope: !10437)
!10440 = !DILocation(line: 18, column: 11, scope: !10438)
!10441 = !DILocation(line: 14, column: 7, scope: !10438)
!10442 = !DILocation(line: 22, column: 1, scope: !10398)
!10443 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1624, file: !1624, line: 193, type: !10444, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1542, retainedNodes: !10453)
!10444 = !DISubroutineType(types: !10445)
!10445 = !{!103, !10446, !208, !22}
!10446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10447, size: 32)
!10447 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10448)
!10448 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1387, line: 37, baseType: !10449)
!10449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1387, line: 32, size: 64, elements: !10450)
!10450 = !{!10451, !10452}
!10451 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10449, file: !1387, line: 34, baseType: !137, size: 32)
!10452 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10449, file: !1387, line: 36, baseType: !137, size: 32, offset: 32)
!10453 = !{!10454, !10455, !10456, !10457, !10458, !10459, !10460, !10461, !10463}
!10454 = !DILocalVariable(name: "pins", arg: 1, scope: !10443, file: !1624, line: 193, type: !10446)
!10455 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10443, file: !1624, line: 193, type: !208)
!10456 = !DILocalVariable(name: "reg", arg: 3, scope: !10443, file: !1624, line: 194, type: !22)
!10457 = !DILocalVariable(name: "pin", scope: !10443, file: !1624, line: 196, type: !137)
!10458 = !DILocalVariable(name: "mux", scope: !10443, file: !1624, line: 196, type: !137)
!10459 = !DILocalVariable(name: "pin_cgf", scope: !10443, file: !1624, line: 197, type: !137)
!10460 = !DILocalVariable(name: "ret", scope: !10443, file: !1624, line: 198, type: !103)
!10461 = !DILocalVariable(name: "i", scope: !10462, file: !1624, line: 209, type: !208)
!10462 = distinct !DILexicalBlock(scope: !10443, file: !1624, line: 209, column: 2)
!10463 = !DILocalVariable(name: "gpio_out", scope: !10464, file: !1624, line: 239, type: !137)
!10464 = distinct !DILexicalBlock(scope: !10465, file: !1624, line: 238, column: 55)
!10465 = distinct !DILexicalBlock(scope: !10466, file: !1624, line: 238, column: 14)
!10466 = distinct !DILexicalBlock(scope: !10467, file: !1624, line: 236, column: 14)
!10467 = distinct !DILexicalBlock(scope: !10468, file: !1624, line: 234, column: 7)
!10468 = distinct !DILexicalBlock(scope: !10469, file: !1624, line: 209, column: 41)
!10469 = distinct !DILexicalBlock(scope: !10462, file: !1624, line: 209, column: 2)
!10470 = !DILocation(line: 0, scope: !10443)
!10471 = !DILocation(line: 0, scope: !10462)
!10472 = !DILocation(line: 209, column: 25, scope: !10469)
!10473 = !DILocation(line: 209, column: 2, scope: !10462)
!10474 = distinct !{!10474, !10473, !10475}
!10475 = !DILocation(line: 259, column: 2, scope: !10462)
!10476 = !DILocation(line: 210, column: 17, scope: !10468)
!10477 = !DILocation(line: 234, column: 7, scope: !10467)
!10478 = !DILocation(line: 234, column: 33, scope: !10467)
!10479 = !DILocation(line: 234, column: 7, scope: !10468)
!10480 = !DILocation(line: 235, column: 22, scope: !10481)
!10481 = distinct !DILexicalBlock(scope: !10467, file: !1624, line: 234, column: 49)
!10482 = !DILocation(line: 235, column: 29, scope: !10481)
!10483 = !DILocation(line: 236, column: 3, scope: !10481)
!10484 = !DILocation(line: 236, column: 14, scope: !10467)
!10485 = !DILocation(line: 239, column: 32, scope: !10464)
!10486 = !DILocation(line: 0, scope: !10464)
!10487 = !DILocation(line: 241, column: 8, scope: !10464)
!10488 = !DILocation(line: 246, column: 3, scope: !10464)
!10489 = !DILocation(line: 252, column: 9, scope: !10468)
!10490 = !DILocation(line: 255, column: 9, scope: !10468)
!10491 = !DILocation(line: 256, column: 11, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10468, file: !1624, line: 256, column: 7)
!10493 = !DILocation(line: 209, column: 37, scope: !10469)
!10494 = !DILocation(line: 256, column: 7, scope: !10468)
!10495 = !DILocation(line: 262, column: 1, scope: !10443)
!10496 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1624, file: !1624, line: 176, type: !10497, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1542, retainedNodes: !10499)
!10497 = !DISubroutineType(types: !10498)
!10498 = !{!103, !137, !137, !137}
!10499 = !{!10500, !10501, !10502, !10503}
!10500 = !DILocalVariable(name: "pin", arg: 1, scope: !10496, file: !1624, line: 176, type: !137)
!10501 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10496, file: !1624, line: 176, type: !137)
!10502 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10496, file: !1624, line: 176, type: !137)
!10503 = !DILocalVariable(name: "port_device", scope: !10496, file: !1624, line: 178, type: !1554)
!10504 = !DILocation(line: 0, scope: !10496)
!10505 = !DILocation(line: 180, column: 22, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10496, file: !1624, line: 180, column: 6)
!10507 = !DILocation(line: 180, column: 6, scope: !10496)
!10508 = !DILocation(line: 180, column: 6, scope: !10506)
!10509 = !DILocation(line: 184, column: 16, scope: !10496)
!10510 = !DILocation(line: 186, column: 19, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10496, file: !1624, line: 186, column: 6)
!10512 = !DILocation(line: 186, column: 28, scope: !10511)
!10513 = !DILocation(line: 186, column: 33, scope: !10511)
!10514 = !DILocation(line: 186, column: 6, scope: !10496)
!10515 = !DILocation(line: 190, column: 43, scope: !10496)
!10516 = !DILocation(line: 190, column: 9, scope: !10496)
!10517 = !DILocation(line: 190, column: 2, scope: !10496)
!10518 = !DILocation(line: 191, column: 1, scope: !10496)
!10519 = distinct !DISubprogram(name: "device_is_ready", scope: !8508, file: !8508, line: 47, type: !10520, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1542, retainedNodes: !10522)
!10520 = !DISubroutineType(types: !10521)
!10521 = !{!211, !1554}
!10522 = !{!10523}
!10523 = !DILocalVariable(name: "dev", arg: 1, scope: !10519, file: !8508, line: 47, type: !1554)
!10524 = !DILocation(line: 0, scope: !10519)
!10525 = !DILocation(line: 55, column: 2, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10519, file: !8508, line: 55, column: 2)
!10527 = !{i64 2149429710}
!10528 = !DILocation(line: 56, column: 9, scope: !10519)
!10529 = !DILocation(line: 56, column: 2, scope: !10519)
!10530 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !196, file: !196, line: 730, type: !10520, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1542, retainedNodes: !10531)
!10531 = !{!10532}
!10532 = !DILocalVariable(name: "dev", arg: 1, scope: !10530, file: !196, line: 730, type: !1554)
!10533 = !DILocation(line: 0, scope: !10530)
!10534 = !DILocation(line: 732, column: 9, scope: !10530)
!10535 = !DILocation(line: 732, column: 2, scope: !10530)
!10536 = distinct !DISubprogram(name: "SystemInit", scope: !1672, file: !1672, line: 167, type: !2826, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1632, retainedNodes: !162)
!10537 = !DILocation(line: 182, column: 1, scope: !10536)
!10538 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1672, file: !1672, line: 220, type: !2826, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1632, retainedNodes: !10539)
!10539 = !{!10540, !10541, !10542, !10543, !10544}
!10540 = !DILocalVariable(name: "tmp", scope: !10538, file: !1672, line: 222, type: !137)
!10541 = !DILocalVariable(name: "pllvco", scope: !10538, file: !1672, line: 222, type: !137)
!10542 = !DILocalVariable(name: "pllp", scope: !10538, file: !1672, line: 222, type: !137)
!10543 = !DILocalVariable(name: "pllsource", scope: !10538, file: !1672, line: 222, type: !137)
!10544 = !DILocalVariable(name: "pllm", scope: !10538, file: !1672, line: 222, type: !137)
!10545 = !DILocation(line: 0, scope: !10538)
!10546 = !DILocation(line: 225, column: 14, scope: !10538)
!10547 = !DILocation(line: 225, column: 19, scope: !10538)
!10548 = !DILocation(line: 227, column: 3, scope: !10538)
!10549 = !DILocation(line: 234, column: 7, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10538, file: !1672, line: 228, column: 3)
!10551 = !DILocation(line: 240, column: 25, scope: !10550)
!10552 = !DILocation(line: 241, column: 19, scope: !10550)
!10553 = !DILocation(line: 241, column: 27, scope: !10550)
!10554 = !DILocation(line: 243, column: 21, scope: !10555)
!10555 = distinct !DILexicalBlock(scope: !10550, file: !1672, line: 243, column: 11)
!10556 = !DILocation(line: 0, scope: !10555)
!10557 = !DILocation(line: 254, column: 22, scope: !10550)
!10558 = !DILocation(line: 254, column: 62, scope: !10550)
!10559 = !DILocation(line: 255, column: 31, scope: !10550)
!10560 = !DILocation(line: 256, column: 7, scope: !10550)
!10561 = !DILocation(line: 0, scope: !10550)
!10562 = !DILocation(line: 263, column: 30, scope: !10538)
!10563 = !DILocation(line: 263, column: 52, scope: !10538)
!10564 = !DILocation(line: 263, column: 9, scope: !10538)
!10565 = !DILocation(line: 265, column: 19, scope: !10538)
!10566 = !DILocation(line: 266, column: 1, scope: !10538)
!10567 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !10568, file: !10568, line: 200, type: !10569, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !162)
!10568 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10569 = !DISubroutineType(types: !10570)
!10570 = !{!10571}
!10571 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2643, line: 44, baseType: !2642)
!10572 = !DILocation(line: 202, column: 3, scope: !10567)
!10573 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !10568, file: !10568, line: 219, type: !10574, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !10598)
!10574 = !DISubroutineType(types: !10575)
!10575 = !{!10571, !10576}
!10576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10577, size: 32)
!10577 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !10578, line: 70, baseType: !10579)
!10578 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10579 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10578, line: 49, size: 384, elements: !10580)
!10580 = !{!10581, !10582, !10583, !10584, !10585, !10586, !10587}
!10581 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !10579, file: !10578, line: 51, baseType: !137, size: 32)
!10582 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !10579, file: !10578, line: 54, baseType: !137, size: 32, offset: 32)
!10583 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !10579, file: !10578, line: 57, baseType: !137, size: 32, offset: 64)
!10584 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !10579, file: !10578, line: 60, baseType: !137, size: 32, offset: 96)
!10585 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !10579, file: !10578, line: 63, baseType: !137, size: 32, offset: 128)
!10586 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !10579, file: !10578, line: 66, baseType: !137, size: 32, offset: 160)
!10587 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !10579, file: !10578, line: 69, baseType: !10588, size: 192, offset: 192)
!10588 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !10589, line: 73, baseType: !10590)
!10589 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10590 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10589, line: 45, size: 192, elements: !10591)
!10591 = !{!10592, !10593, !10594, !10595, !10596, !10597}
!10592 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !10590, file: !10589, line: 47, baseType: !137, size: 32)
!10593 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !10590, file: !10589, line: 50, baseType: !137, size: 32, offset: 32)
!10594 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10590, file: !10589, line: 53, baseType: !137, size: 32, offset: 64)
!10595 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10590, file: !10589, line: 56, baseType: !137, size: 32, offset: 96)
!10596 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10590, file: !10589, line: 60, baseType: !137, size: 32, offset: 128)
!10597 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !10590, file: !10589, line: 63, baseType: !137, size: 32, offset: 160)
!10598 = !{!10599, !10600, !10601, !10602, !10606}
!10599 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10573, file: !10568, line: 219, type: !10576)
!10600 = !DILocalVariable(name: "tickstart", scope: !10573, file: !10568, line: 221, type: !137)
!10601 = !DILocalVariable(name: "pll_config", scope: !10573, file: !10568, line: 221, type: !137)
!10602 = !DILocalVariable(name: "pwrclkchanged", scope: !10603, file: !10568, line: 391, type: !10605)
!10603 = distinct !DILexicalBlock(scope: !10604, file: !10568, line: 390, column: 3)
!10604 = distinct !DILexicalBlock(scope: !10573, file: !10568, line: 389, column: 6)
!10605 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !700, line: 188, baseType: !2649)
!10606 = !DILocalVariable(name: "tmpreg", scope: !10607, file: !10568, line: 400, type: !176)
!10607 = distinct !DILexicalBlock(scope: !10608, file: !10568, line: 400, column: 7)
!10608 = distinct !DILexicalBlock(scope: !10609, file: !10568, line: 399, column: 5)
!10609 = distinct !DILexicalBlock(scope: !10603, file: !10568, line: 398, column: 8)
!10610 = !DILocation(line: 0, scope: !10573)
!10611 = !DILocation(line: 224, column: 24, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !10573, file: !10568, line: 224, column: 6)
!10613 = !DILocation(line: 224, column: 6, scope: !10573)
!10614 = !DILocation(line: 232, column: 27, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10573, file: !10568, line: 232, column: 6)
!10616 = !DILocation(line: 232, column: 43, scope: !10615)
!10617 = !DILocation(line: 232, column: 69, scope: !10615)
!10618 = !DILocation(line: 232, column: 6, scope: !10573)
!10619 = !DILocation(line: 237, column: 9, scope: !10620)
!10620 = distinct !DILexicalBlock(scope: !10621, file: !10568, line: 237, column: 8)
!10621 = distinct !DILexicalBlock(scope: !10615, file: !10568, line: 233, column: 3)
!10622 = !DILocation(line: 237, column: 39, scope: !10620)
!10623 = !DILocation(line: 237, column: 60, scope: !10620)
!10624 = !DILocation(line: 238, column: 9, scope: !10620)
!10625 = !DILocation(line: 238, column: 39, scope: !10620)
!10626 = !DILocation(line: 238, column: 60, scope: !10620)
!10627 = !DILocation(line: 238, column: 70, scope: !10620)
!10628 = !DILocation(line: 238, column: 78, scope: !10620)
!10629 = !DILocation(line: 238, column: 100, scope: !10620)
!10630 = !DILocation(line: 237, column: 8, scope: !10621)
!10631 = !DILocation(line: 240, column: 11, scope: !10632)
!10632 = distinct !DILexicalBlock(scope: !10633, file: !10568, line: 240, column: 10)
!10633 = distinct !DILexicalBlock(scope: !10620, file: !10568, line: 239, column: 5)
!10634 = !DILocation(line: 240, column: 57, scope: !10632)
!10635 = !DILocation(line: 240, column: 80, scope: !10632)
!10636 = !DILocation(line: 240, column: 89, scope: !10632)
!10637 = !DILocation(line: 240, column: 10, scope: !10633)
!10638 = !DILocation(line: 248, column: 7, scope: !10639)
!10639 = distinct !DILexicalBlock(scope: !10640, file: !10568, line: 248, column: 7)
!10640 = distinct !DILexicalBlock(scope: !10641, file: !10568, line: 248, column: 7)
!10641 = distinct !DILexicalBlock(scope: !10620, file: !10568, line: 246, column: 5)
!10642 = !DILocation(line: 248, column: 7, scope: !10640)
!10643 = !DILocation(line: 248, column: 7, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10639, file: !10568, line: 248, column: 7)
!10645 = !DILocation(line: 248, column: 7, scope: !10646)
!10646 = distinct !DILexicalBlock(scope: !10647, file: !10568, line: 248, column: 7)
!10647 = distinct !DILexicalBlock(scope: !10639, file: !10568, line: 248, column: 7)
!10648 = !DILocation(line: 248, column: 7, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10647, file: !10568, line: 248, column: 7)
!10650 = !DILocation(line: 0, scope: !10639)
!10651 = !DILocation(line: 251, column: 30, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !10641, file: !10568, line: 251, column: 10)
!10653 = !DILocation(line: 251, column: 40, scope: !10652)
!10654 = !DILocation(line: 0, scope: !10652)
!10655 = !DILocation(line: 251, column: 10, scope: !10641)
!10656 = !DILocation(line: 257, column: 15, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10652, file: !10568, line: 252, column: 7)
!10658 = !DILocation(line: 257, column: 51, scope: !10657)
!10659 = !DILocation(line: 257, column: 9, scope: !10657)
!10660 = !DILocation(line: 259, column: 15, scope: !10661)
!10661 = distinct !DILexicalBlock(scope: !10662, file: !10568, line: 259, column: 14)
!10662 = distinct !DILexicalBlock(scope: !10657, file: !10568, line: 258, column: 9)
!10663 = !DILocation(line: 259, column: 29, scope: !10661)
!10664 = !DILocation(line: 259, column: 43, scope: !10661)
!10665 = !DILocation(line: 259, column: 14, scope: !10662)
!10666 = distinct !{!10666, !10659, !10667}
!10667 = !DILocation(line: 263, column: 9, scope: !10657)
!10668 = !DILocation(line: 271, column: 15, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10652, file: !10568, line: 266, column: 7)
!10670 = !DILocation(line: 271, column: 9, scope: !10669)
!10671 = !DILocation(line: 273, column: 15, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10673, file: !10568, line: 273, column: 14)
!10673 = distinct !DILexicalBlock(scope: !10669, file: !10568, line: 272, column: 9)
!10674 = !DILocation(line: 273, column: 29, scope: !10672)
!10675 = !DILocation(line: 273, column: 43, scope: !10672)
!10676 = !DILocation(line: 273, column: 14, scope: !10673)
!10677 = distinct !{!10677, !10670, !10678}
!10678 = !DILocation(line: 277, column: 9, scope: !10669)
!10679 = !DILocation(line: 282, column: 27, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10573, file: !10568, line: 282, column: 6)
!10681 = !DILocation(line: 282, column: 43, scope: !10680)
!10682 = !DILocation(line: 282, column: 69, scope: !10680)
!10683 = !DILocation(line: 282, column: 6, scope: !10573)
!10684 = !DILocation(line: 289, column: 9, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10686, file: !10568, line: 289, column: 8)
!10686 = distinct !DILexicalBlock(scope: !10680, file: !10568, line: 283, column: 3)
!10687 = !DILocation(line: 289, column: 39, scope: !10685)
!10688 = !DILocation(line: 289, column: 60, scope: !10685)
!10689 = !DILocation(line: 290, column: 9, scope: !10685)
!10690 = !DILocation(line: 290, column: 39, scope: !10685)
!10691 = !DILocation(line: 290, column: 60, scope: !10685)
!10692 = !DILocation(line: 290, column: 70, scope: !10685)
!10693 = !DILocation(line: 290, column: 78, scope: !10685)
!10694 = !DILocation(line: 290, column: 100, scope: !10685)
!10695 = !DILocation(line: 289, column: 8, scope: !10686)
!10696 = !DILocation(line: 293, column: 11, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10698, file: !10568, line: 293, column: 10)
!10698 = distinct !DILexicalBlock(scope: !10685, file: !10568, line: 291, column: 5)
!10699 = !DILocation(line: 293, column: 57, scope: !10697)
!10700 = !DILocation(line: 293, column: 80, scope: !10697)
!10701 = !DILocation(line: 293, column: 89, scope: !10697)
!10702 = !DILocation(line: 293, column: 10, scope: !10698)
!10703 = !DILocation(line: 307, column: 30, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10705, file: !10568, line: 307, column: 10)
!10705 = distinct !DILexicalBlock(scope: !10685, file: !10568, line: 305, column: 5)
!10706 = !DILocation(line: 307, column: 39, scope: !10704)
!10707 = !DILocation(line: 307, column: 10, scope: !10705)
!10708 = !DILocation(line: 310, column: 9, scope: !10709)
!10709 = distinct !DILexicalBlock(scope: !10704, file: !10568, line: 308, column: 7)
!10710 = !DILocation(line: 313, column: 21, scope: !10709)
!10711 = !DILocation(line: 316, column: 9, scope: !10709)
!10712 = !DILocation(line: 316, column: 15, scope: !10709)
!10713 = !DILocation(line: 316, column: 51, scope: !10709)
!10714 = !DILocation(line: 318, column: 15, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10716, file: !10568, line: 318, column: 14)
!10716 = distinct !DILexicalBlock(scope: !10709, file: !10568, line: 317, column: 9)
!10717 = !DILocation(line: 318, column: 29, scope: !10715)
!10718 = !DILocation(line: 318, column: 43, scope: !10715)
!10719 = !DILocation(line: 318, column: 14, scope: !10716)
!10720 = distinct !{!10720, !10711, !10721}
!10721 = !DILocation(line: 322, column: 9, scope: !10709)
!10722 = !DILocation(line: 330, column: 9, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10704, file: !10568, line: 328, column: 7)
!10724 = !DILocation(line: 333, column: 21, scope: !10723)
!10725 = !DILocation(line: 336, column: 9, scope: !10723)
!10726 = !DILocation(line: 336, column: 15, scope: !10723)
!10727 = !DILocation(line: 338, column: 15, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10729, file: !10568, line: 338, column: 14)
!10729 = distinct !DILexicalBlock(scope: !10723, file: !10568, line: 337, column: 9)
!10730 = !DILocation(line: 338, column: 29, scope: !10728)
!10731 = !DILocation(line: 338, column: 43, scope: !10728)
!10732 = !DILocation(line: 338, column: 14, scope: !10729)
!10733 = distinct !{!10733, !10725, !10734}
!10734 = !DILocation(line: 342, column: 9, scope: !10723)
!10735 = !DILocation(line: 0, scope: !10685)
!10736 = !DILocation(line: 347, column: 27, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10573, file: !10568, line: 347, column: 6)
!10738 = !DILocation(line: 347, column: 43, scope: !10737)
!10739 = !DILocation(line: 347, column: 69, scope: !10737)
!10740 = !DILocation(line: 347, column: 6, scope: !10573)
!10741 = !DILocation(line: 353, column: 28, scope: !10742)
!10742 = distinct !DILexicalBlock(scope: !10743, file: !10568, line: 353, column: 8)
!10743 = distinct !DILexicalBlock(scope: !10737, file: !10568, line: 348, column: 3)
!10744 = !DILocation(line: 353, column: 37, scope: !10742)
!10745 = !DILocation(line: 353, column: 8, scope: !10743)
!10746 = !DILocation(line: 356, column: 7, scope: !10747)
!10747 = distinct !DILexicalBlock(scope: !10742, file: !10568, line: 354, column: 5)
!10748 = !DILocation(line: 359, column: 19, scope: !10747)
!10749 = !DILocation(line: 362, column: 7, scope: !10747)
!10750 = !DILocation(line: 362, column: 13, scope: !10747)
!10751 = !DILocation(line: 362, column: 49, scope: !10747)
!10752 = !DILocation(line: 364, column: 13, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !10754, file: !10568, line: 364, column: 12)
!10754 = distinct !DILexicalBlock(scope: !10747, file: !10568, line: 363, column: 7)
!10755 = !DILocation(line: 364, column: 27, scope: !10753)
!10756 = !DILocation(line: 364, column: 41, scope: !10753)
!10757 = !DILocation(line: 364, column: 12, scope: !10754)
!10758 = distinct !{!10758, !10749, !10759}
!10759 = !DILocation(line: 368, column: 7, scope: !10747)
!10760 = !DILocation(line: 373, column: 7, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10742, file: !10568, line: 371, column: 5)
!10762 = !DILocation(line: 376, column: 19, scope: !10761)
!10763 = !DILocation(line: 379, column: 7, scope: !10761)
!10764 = !DILocation(line: 379, column: 13, scope: !10761)
!10765 = !DILocation(line: 381, column: 13, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10767, file: !10568, line: 381, column: 12)
!10767 = distinct !DILexicalBlock(scope: !10761, file: !10568, line: 380, column: 7)
!10768 = !DILocation(line: 381, column: 27, scope: !10766)
!10769 = !DILocation(line: 381, column: 41, scope: !10766)
!10770 = !DILocation(line: 381, column: 12, scope: !10767)
!10771 = distinct !{!10771, !10763, !10772}
!10772 = !DILocation(line: 385, column: 7, scope: !10761)
!10773 = !DILocation(line: 389, column: 27, scope: !10604)
!10774 = !DILocation(line: 389, column: 43, scope: !10604)
!10775 = !DILocation(line: 389, column: 69, scope: !10604)
!10776 = !DILocation(line: 389, column: 6, scope: !10573)
!10777 = !DILocation(line: 0, scope: !10603)
!10778 = !DILocation(line: 398, column: 8, scope: !10609)
!10779 = !DILocation(line: 398, column: 8, scope: !10603)
!10780 = !DILocation(line: 400, column: 7, scope: !10607)
!10781 = !DILocation(line: 400, column: 7, scope: !10608)
!10782 = !DILocation(line: 402, column: 5, scope: !10608)
!10783 = !DILocation(line: 404, column: 8, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10603, file: !10568, line: 404, column: 8)
!10785 = !DILocation(line: 404, column: 8, scope: !10603)
!10786 = !DILocation(line: 407, column: 7, scope: !10787)
!10787 = distinct !DILexicalBlock(scope: !10784, file: !10568, line: 405, column: 5)
!10788 = !DILocation(line: 410, column: 19, scope: !10787)
!10789 = !DILocation(line: 412, column: 7, scope: !10787)
!10790 = !DILocation(line: 412, column: 13, scope: !10787)
!10791 = !DILocation(line: 414, column: 13, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10793, file: !10568, line: 414, column: 12)
!10793 = distinct !DILexicalBlock(scope: !10787, file: !10568, line: 413, column: 7)
!10794 = !DILocation(line: 414, column: 27, scope: !10792)
!10795 = !DILocation(line: 414, column: 40, scope: !10792)
!10796 = !DILocation(line: 414, column: 12, scope: !10793)
!10797 = distinct !{!10797, !10789, !10798}
!10798 = !DILocation(line: 418, column: 7, scope: !10787)
!10799 = !DILocation(line: 422, column: 5, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10801, file: !10568, line: 422, column: 5)
!10801 = distinct !DILexicalBlock(scope: !10603, file: !10568, line: 422, column: 5)
!10802 = !DILocation(line: 422, column: 5, scope: !10801)
!10803 = !DILocation(line: 422, column: 5, scope: !10804)
!10804 = distinct !DILexicalBlock(scope: !10800, file: !10568, line: 422, column: 5)
!10805 = !DILocation(line: 422, column: 5, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10807, file: !10568, line: 422, column: 5)
!10807 = distinct !DILexicalBlock(scope: !10800, file: !10568, line: 422, column: 5)
!10808 = !DILocation(line: 422, column: 5, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10807, file: !10568, line: 422, column: 5)
!10810 = !DILocation(line: 0, scope: !10800)
!10811 = !DILocation(line: 424, column: 28, scope: !10812)
!10812 = distinct !DILexicalBlock(scope: !10603, file: !10568, line: 424, column: 8)
!10813 = !DILocation(line: 424, column: 38, scope: !10812)
!10814 = !DILocation(line: 0, scope: !10812)
!10815 = !DILocation(line: 424, column: 8, scope: !10603)
!10816 = !DILocation(line: 430, column: 13, scope: !10817)
!10817 = distinct !DILexicalBlock(scope: !10812, file: !10568, line: 425, column: 5)
!10818 = !DILocation(line: 430, column: 49, scope: !10817)
!10819 = !DILocation(line: 430, column: 7, scope: !10817)
!10820 = !DILocation(line: 432, column: 13, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10822, file: !10568, line: 432, column: 12)
!10822 = distinct !DILexicalBlock(scope: !10817, file: !10568, line: 431, column: 7)
!10823 = !DILocation(line: 432, column: 27, scope: !10821)
!10824 = !DILocation(line: 432, column: 41, scope: !10821)
!10825 = !DILocation(line: 432, column: 12, scope: !10822)
!10826 = distinct !{!10826, !10819, !10827}
!10827 = !DILocation(line: 436, column: 7, scope: !10817)
!10828 = !DILocation(line: 444, column: 13, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10812, file: !10568, line: 439, column: 5)
!10830 = !DILocation(line: 444, column: 7, scope: !10829)
!10831 = !DILocation(line: 446, column: 13, scope: !10832)
!10832 = distinct !DILexicalBlock(scope: !10833, file: !10568, line: 446, column: 12)
!10833 = distinct !DILexicalBlock(scope: !10829, file: !10568, line: 445, column: 7)
!10834 = !DILocation(line: 446, column: 27, scope: !10832)
!10835 = !DILocation(line: 446, column: 41, scope: !10832)
!10836 = !DILocation(line: 446, column: 12, scope: !10833)
!10837 = distinct !{!10837, !10830, !10838}
!10838 = !DILocation(line: 450, column: 7, scope: !10829)
!10839 = !DILocation(line: 454, column: 8, scope: !10603)
!10840 = !DILocation(line: 456, column: 7, scope: !10841)
!10841 = distinct !DILexicalBlock(scope: !10842, file: !10568, line: 455, column: 5)
!10842 = distinct !DILexicalBlock(scope: !10603, file: !10568, line: 454, column: 8)
!10843 = !DILocation(line: 457, column: 5, scope: !10841)
!10844 = !DILocation(line: 462, column: 31, scope: !10845)
!10845 = distinct !DILexicalBlock(scope: !10573, file: !10568, line: 462, column: 7)
!10846 = !DILocation(line: 462, column: 41, scope: !10845)
!10847 = !DILocation(line: 462, column: 7, scope: !10573)
!10848 = !DILocation(line: 465, column: 8, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10850, file: !10568, line: 465, column: 8)
!10850 = distinct !DILexicalBlock(scope: !10845, file: !10568, line: 463, column: 3)
!10851 = !DILocation(line: 465, column: 38, scope: !10849)
!10852 = !DILocation(line: 465, column: 8, scope: !10850)
!10853 = !DILocation(line: 467, column: 44, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10855, file: !10568, line: 467, column: 10)
!10855 = distinct !DILexicalBlock(scope: !10849, file: !10568, line: 466, column: 5)
!10856 = !DILocation(line: 0, scope: !10854)
!10857 = !DILocation(line: 467, column: 10, scope: !10855)
!10858 = !DILocation(line: 483, column: 15, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !10854, file: !10568, line: 468, column: 7)
!10860 = !DILocation(line: 483, column: 9, scope: !10859)
!10861 = !DILocation(line: 485, column: 15, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10863, file: !10568, line: 485, column: 14)
!10863 = distinct !DILexicalBlock(scope: !10859, file: !10568, line: 484, column: 9)
!10864 = !DILocation(line: 485, column: 29, scope: !10862)
!10865 = !DILocation(line: 485, column: 43, scope: !10862)
!10866 = !DILocation(line: 485, column: 14, scope: !10863)
!10867 = distinct !{!10867, !10860, !10868}
!10868 = !DILocation(line: 489, column: 9, scope: !10859)
!10869 = !DILocation(line: 492, column: 9, scope: !10859)
!10870 = !DILocation(line: 498, column: 9, scope: !10859)
!10871 = !DILocation(line: 501, column: 21, scope: !10859)
!10872 = !DILocation(line: 504, column: 9, scope: !10859)
!10873 = !DILocation(line: 504, column: 15, scope: !10859)
!10874 = !DILocation(line: 504, column: 51, scope: !10859)
!10875 = !DILocation(line: 506, column: 15, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10877, file: !10568, line: 506, column: 14)
!10877 = distinct !DILexicalBlock(scope: !10859, file: !10568, line: 505, column: 9)
!10878 = !DILocation(line: 506, column: 29, scope: !10876)
!10879 = !DILocation(line: 506, column: 43, scope: !10876)
!10880 = !DILocation(line: 506, column: 14, scope: !10877)
!10881 = distinct !{!10881, !10872, !10882}
!10882 = !DILocation(line: 510, column: 9, scope: !10859)
!10883 = !DILocation(line: 521, column: 15, scope: !10884)
!10884 = distinct !DILexicalBlock(scope: !10854, file: !10568, line: 513, column: 7)
!10885 = !DILocation(line: 521, column: 9, scope: !10884)
!10886 = !DILocation(line: 523, column: 15, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !10888, file: !10568, line: 523, column: 14)
!10888 = distinct !DILexicalBlock(scope: !10884, file: !10568, line: 522, column: 9)
!10889 = !DILocation(line: 523, column: 29, scope: !10887)
!10890 = !DILocation(line: 523, column: 43, scope: !10887)
!10891 = !DILocation(line: 523, column: 14, scope: !10888)
!10892 = distinct !{!10892, !10885, !10893}
!10893 = !DILocation(line: 527, column: 9, scope: !10884)
!10894 = !DILocation(line: 533, column: 44, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10896, file: !10568, line: 533, column: 10)
!10896 = distinct !DILexicalBlock(scope: !10849, file: !10568, line: 531, column: 5)
!10897 = !DILocation(line: 533, column: 10, scope: !10896)
!10898 = !DILocation(line: 540, column: 27, scope: !10899)
!10899 = distinct !DILexicalBlock(scope: !10895, file: !10568, line: 538, column: 7)
!10900 = !DILocation(line: 551, column: 14, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10899, file: !10568, line: 550, column: 13)
!10902 = !DILocation(line: 551, column: 81, scope: !10901)
!10903 = !DILocation(line: 551, column: 55, scope: !10901)
!10904 = !DILocation(line: 551, column: 92, scope: !10901)
!10905 = !DILocation(line: 552, column: 14, scope: !10901)
!10906 = !DILocation(line: 552, column: 80, scope: !10901)
!10907 = !DILocation(line: 552, column: 53, scope: !10901)
!10908 = !DILocation(line: 552, column: 111, scope: !10901)
!10909 = !DILocation(line: 553, column: 14, scope: !10901)
!10910 = !DILocation(line: 553, column: 80, scope: !10901)
!10911 = !DILocation(line: 553, column: 86, scope: !10901)
!10912 = !DILocation(line: 553, column: 53, scope: !10901)
!10913 = !DILocation(line: 553, column: 111, scope: !10901)
!10914 = !DILocation(line: 554, column: 14, scope: !10901)
!10915 = !DILocation(line: 554, column: 82, scope: !10901)
!10916 = !DILocation(line: 554, column: 101, scope: !10901)
!10917 = !DILocation(line: 554, column: 53, scope: !10901)
!10918 = !DILocation(line: 554, column: 126, scope: !10901)
!10919 = !DILocation(line: 555, column: 14, scope: !10901)
!10920 = !DILocation(line: 555, column: 80, scope: !10901)
!10921 = !DILocation(line: 555, column: 85, scope: !10901)
!10922 = !DILocation(line: 555, column: 53, scope: !10901)
!10923 = !DILocation(line: 550, column: 13, scope: !10899)
!10924 = !DILocation(line: 563, column: 3, scope: !10573)
!10925 = !DILocation(line: 564, column: 1, scope: !10573)
!10926 = !DISubprogram(name: "HAL_GetTick", scope: !10927, file: !10927, line: 234, type: !135, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!10927 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10928 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !10568, file: !10568, line: 591, type: !10929, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !10940)
!10929 = !DISubroutineType(types: !10930)
!10930 = !{!10571, !10931, !137}
!10931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10932, size: 32)
!10932 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !10578, line: 92, baseType: !10933)
!10933 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10578, line: 75, size: 160, elements: !10934)
!10934 = !{!10935, !10936, !10937, !10938, !10939}
!10935 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !10933, file: !10578, line: 77, baseType: !137, size: 32)
!10936 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !10933, file: !10578, line: 80, baseType: !137, size: 32, offset: 32)
!10937 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !10933, file: !10578, line: 83, baseType: !137, size: 32, offset: 64)
!10938 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !10933, file: !10578, line: 86, baseType: !137, size: 32, offset: 96)
!10939 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !10933, file: !10578, line: 89, baseType: !137, size: 32, offset: 128)
!10940 = !{!10941, !10942, !10943}
!10941 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !10928, file: !10568, line: 591, type: !10931)
!10942 = !DILocalVariable(name: "FLatency", arg: 2, scope: !10928, file: !10568, line: 591, type: !137)
!10943 = !DILocalVariable(name: "tickstart", scope: !10928, file: !10568, line: 593, type: !137)
!10944 = !DILocation(line: 0, scope: !10928)
!10945 = !DILocation(line: 596, column: 24, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10928, file: !10568, line: 596, column: 6)
!10947 = !DILocation(line: 596, column: 6, scope: !10928)
!10948 = !DILocation(line: 610, column: 17, scope: !10949)
!10949 = distinct !DILexicalBlock(scope: !10928, file: !10568, line: 610, column: 6)
!10950 = !DILocation(line: 610, column: 15, scope: !10949)
!10951 = !DILocation(line: 610, column: 6, scope: !10928)
!10952 = !DILocation(line: 613, column: 5, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !10949, file: !10568, line: 611, column: 3)
!10954 = !DILocation(line: 617, column: 8, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10953, file: !10568, line: 617, column: 8)
!10956 = !DILocation(line: 617, column: 34, scope: !10955)
!10957 = !DILocation(line: 617, column: 8, scope: !10953)
!10958 = !DILocation(line: 624, column: 27, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10928, file: !10568, line: 624, column: 6)
!10960 = !DILocation(line: 624, column: 38, scope: !10959)
!10961 = !DILocation(line: 624, column: 60, scope: !10959)
!10962 = !DILocation(line: 624, column: 6, scope: !10928)
!10963 = !DILocation(line: 628, column: 40, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !10965, file: !10568, line: 628, column: 8)
!10965 = distinct !DILexicalBlock(scope: !10959, file: !10568, line: 625, column: 3)
!10966 = !DILocation(line: 628, column: 63, scope: !10964)
!10967 = !DILocation(line: 628, column: 8, scope: !10965)
!10968 = !DILocation(line: 630, column: 7, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10964, file: !10568, line: 629, column: 5)
!10970 = !DILocation(line: 633, column: 29, scope: !10971)
!10971 = distinct !DILexicalBlock(scope: !10965, file: !10568, line: 633, column: 8)
!10972 = !DILocation(line: 631, column: 5, scope: !10969)
!10973 = !DILocation(line: 633, column: 40, scope: !10971)
!10974 = !DILocation(line: 633, column: 63, scope: !10971)
!10975 = !DILocation(line: 633, column: 8, scope: !10965)
!10976 = !DILocation(line: 635, column: 7, scope: !10977)
!10977 = distinct !DILexicalBlock(scope: !10971, file: !10568, line: 634, column: 5)
!10978 = !DILocation(line: 636, column: 5, scope: !10977)
!10979 = !DILocation(line: 639, column: 5, scope: !10965)
!10980 = !DILocation(line: 643, column: 27, scope: !10981)
!10981 = distinct !DILexicalBlock(scope: !10928, file: !10568, line: 643, column: 6)
!10982 = !DILocation(line: 640, column: 3, scope: !10965)
!10983 = !DILocation(line: 643, column: 38, scope: !10981)
!10984 = !DILocation(line: 643, column: 62, scope: !10981)
!10985 = !DILocation(line: 643, column: 6, scope: !10928)
!10986 = !DILocation(line: 648, column: 27, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10988, file: !10568, line: 648, column: 8)
!10988 = distinct !DILexicalBlock(scope: !10981, file: !10568, line: 644, column: 3)
!10989 = !DILocation(line: 648, column: 8, scope: !10988)
!10990 = !DILocation(line: 651, column: 10, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10992, file: !10568, line: 651, column: 10)
!10992 = distinct !DILexicalBlock(scope: !10987, file: !10568, line: 649, column: 5)
!10993 = !DILocation(line: 651, column: 46, scope: !10991)
!10994 = !DILocation(line: 651, column: 10, scope: !10992)
!10995 = !DILocation(line: 661, column: 10, scope: !10996)
!10996 = distinct !DILexicalBlock(scope: !10997, file: !10568, line: 661, column: 10)
!10997 = distinct !DILexicalBlock(scope: !10998, file: !10568, line: 659, column: 5)
!10998 = distinct !DILexicalBlock(scope: !10987, file: !10568, line: 657, column: 13)
!10999 = !DILocation(line: 661, column: 46, scope: !10996)
!11000 = !DILocation(line: 661, column: 10, scope: !10997)
!11001 = !DILocation(line: 670, column: 10, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !11003, file: !10568, line: 670, column: 10)
!11003 = distinct !DILexicalBlock(scope: !10998, file: !10568, line: 668, column: 5)
!11004 = !DILocation(line: 670, column: 46, scope: !11002)
!11005 = !DILocation(line: 670, column: 10, scope: !11003)
!11006 = !DILocation(line: 676, column: 5, scope: !10988)
!11007 = !DILocation(line: 679, column: 17, scope: !10988)
!11008 = !DILocation(line: 681, column: 5, scope: !10988)
!11009 = !DILocation(line: 681, column: 12, scope: !10988)
!11010 = !DILocation(line: 681, column: 65, scope: !10988)
!11011 = !DILocation(line: 681, column: 78, scope: !10988)
!11012 = !DILocation(line: 681, column: 42, scope: !10988)
!11013 = !DILocation(line: 683, column: 12, scope: !11014)
!11014 = distinct !DILexicalBlock(scope: !11015, file: !10568, line: 683, column: 11)
!11015 = distinct !DILexicalBlock(scope: !10988, file: !10568, line: 682, column: 5)
!11016 = !DILocation(line: 683, column: 26, scope: !11014)
!11017 = !DILocation(line: 683, column: 39, scope: !11014)
!11018 = !DILocation(line: 683, column: 11, scope: !11015)
!11019 = distinct !{!11019, !11008, !11020}
!11020 = !DILocation(line: 687, column: 5, scope: !10988)
!11021 = !DILocation(line: 691, column: 17, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !10928, file: !10568, line: 691, column: 6)
!11023 = !DILocation(line: 691, column: 15, scope: !11022)
!11024 = !DILocation(line: 691, column: 6, scope: !10928)
!11025 = !DILocation(line: 694, column: 5, scope: !11026)
!11026 = distinct !DILexicalBlock(scope: !11022, file: !10568, line: 692, column: 3)
!11027 = !DILocation(line: 698, column: 8, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !11026, file: !10568, line: 698, column: 8)
!11029 = !DILocation(line: 698, column: 34, scope: !11028)
!11030 = !DILocation(line: 698, column: 8, scope: !11026)
!11031 = !DILocation(line: 705, column: 27, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !10928, file: !10568, line: 705, column: 6)
!11033 = !DILocation(line: 705, column: 38, scope: !11032)
!11034 = !DILocation(line: 705, column: 61, scope: !11032)
!11035 = !DILocation(line: 705, column: 6, scope: !10928)
!11036 = !DILocation(line: 708, column: 5, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !11032, file: !10568, line: 706, column: 3)
!11038 = !DILocation(line: 712, column: 27, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !10928, file: !10568, line: 712, column: 6)
!11040 = !DILocation(line: 709, column: 3, scope: !11037)
!11041 = !DILocation(line: 712, column: 38, scope: !11039)
!11042 = !DILocation(line: 712, column: 61, scope: !11039)
!11043 = !DILocation(line: 712, column: 6, scope: !10928)
!11044 = !DILocation(line: 715, column: 5, scope: !11045)
!11045 = distinct !DILexicalBlock(scope: !11039, file: !10568, line: 713, column: 3)
!11046 = !DILocation(line: 716, column: 3, scope: !11045)
!11047 = !DILocation(line: 719, column: 21, scope: !10928)
!11048 = !DILocation(line: 719, column: 70, scope: !10928)
!11049 = !DILocation(line: 719, column: 91, scope: !10928)
!11050 = !DILocation(line: 719, column: 50, scope: !10928)
!11051 = !DILocation(line: 719, column: 47, scope: !10928)
!11052 = !DILocation(line: 719, column: 19, scope: !10928)
!11053 = !DILocation(line: 722, column: 17, scope: !10928)
!11054 = !DILocation(line: 722, column: 3, scope: !10928)
!11055 = !DILocation(line: 724, column: 3, scope: !10928)
!11056 = !DILocation(line: 725, column: 1, scope: !10928)
!11057 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !10568, file: !10568, line: 885, type: !135, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !11058)
!11058 = !{!11059, !11060, !11061, !11062}
!11059 = !DILocalVariable(name: "pllm", scope: !11057, file: !10568, line: 887, type: !137)
!11060 = !DILocalVariable(name: "pllvco", scope: !11057, file: !10568, line: 887, type: !137)
!11061 = !DILocalVariable(name: "pllp", scope: !11057, file: !10568, line: 887, type: !137)
!11062 = !DILocalVariable(name: "sysclockfreq", scope: !11057, file: !10568, line: 888, type: !137)
!11063 = !DILocation(line: 0, scope: !11057)
!11064 = !DILocation(line: 891, column: 16, scope: !11057)
!11065 = !DILocation(line: 891, column: 21, scope: !11057)
!11066 = !DILocation(line: 891, column: 3, scope: !11057)
!11067 = !DILocation(line: 901, column: 7, scope: !11068)
!11068 = distinct !DILexicalBlock(scope: !11069, file: !10568, line: 899, column: 5)
!11069 = distinct !DILexicalBlock(scope: !11057, file: !10568, line: 892, column: 3)
!11070 = !DILocation(line: 907, column: 19, scope: !11071)
!11071 = distinct !DILexicalBlock(scope: !11069, file: !10568, line: 904, column: 5)
!11072 = !DILocation(line: 907, column: 27, scope: !11071)
!11073 = !DILocation(line: 908, column: 10, scope: !11074)
!11074 = distinct !DILexicalBlock(scope: !11071, file: !10568, line: 908, column: 10)
!11075 = !DILocation(line: 908, column: 40, scope: !11074)
!11076 = !DILocation(line: 0, scope: !11074)
!11077 = !DILocation(line: 918, column: 23, scope: !11071)
!11078 = !DILocation(line: 918, column: 82, scope: !11071)
!11079 = !DILocation(line: 920, column: 28, scope: !11071)
!11080 = !DILocation(line: 921, column: 7, scope: !11071)
!11081 = !DILocation(line: 0, scope: !11069)
!11082 = !DILocation(line: 929, column: 3, scope: !11057)
!11083 = !DISubprogram(name: "HAL_InitTick", scope: !10927, file: !10927, line: 223, type: !11084, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!11084 = !DISubroutineType(types: !11085)
!11085 = !{!10571, !137}
!11086 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !10568, file: !10568, line: 775, type: !11087, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !11089)
!11087 = !DISubroutineType(types: !11088)
!11088 = !{null, !137, !137, !137}
!11089 = !{!11090, !11091, !11092, !11093, !11103, !11107}
!11090 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11086, file: !10568, line: 775, type: !137)
!11091 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11086, file: !10568, line: 775, type: !137)
!11092 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11086, file: !10568, line: 775, type: !137)
!11093 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11086, file: !10568, line: 777, type: !11094)
!11094 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11095, line: 62, baseType: !11096)
!11095 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11096 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11095, line: 46, size: 160, elements: !11097)
!11097 = !{!11098, !11099, !11100, !11101, !11102}
!11098 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11096, file: !11095, line: 48, baseType: !137, size: 32)
!11099 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11096, file: !11095, line: 51, baseType: !137, size: 32, offset: 32)
!11100 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11096, file: !11095, line: 54, baseType: !137, size: 32, offset: 64)
!11101 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11096, file: !11095, line: 57, baseType: !137, size: 32, offset: 96)
!11102 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11096, file: !11095, line: 60, baseType: !137, size: 32, offset: 128)
!11103 = !DILocalVariable(name: "tmpreg", scope: !11104, file: !10568, line: 787, type: !176)
!11104 = distinct !DILexicalBlock(scope: !11105, file: !10568, line: 787, column: 5)
!11105 = distinct !DILexicalBlock(scope: !11106, file: !10568, line: 783, column: 3)
!11106 = distinct !DILexicalBlock(scope: !11086, file: !10568, line: 782, column: 6)
!11107 = !DILocalVariable(name: "tmpreg", scope: !11108, file: !10568, line: 811, type: !176)
!11108 = distinct !DILexicalBlock(scope: !11109, file: !10568, line: 811, column: 5)
!11109 = distinct !DILexicalBlock(scope: !11106, file: !10568, line: 807, column: 3)
!11110 = !DILocation(line: 0, scope: !11086)
!11111 = !DILocation(line: 777, column: 3, scope: !11086)
!11112 = !DILocation(line: 777, column: 20, scope: !11086)
!11113 = !DILocation(line: 782, column: 15, scope: !11106)
!11114 = !DILocation(line: 782, column: 6, scope: !11086)
!11115 = !DILocation(line: 787, column: 5, scope: !11104)
!11116 = !DILocation(line: 787, column: 5, scope: !11105)
!11117 = !DILocation(line: 790, column: 21, scope: !11105)
!11118 = !DILocation(line: 790, column: 25, scope: !11105)
!11119 = !DILocation(line: 791, column: 21, scope: !11105)
!11120 = !DILocation(line: 791, column: 26, scope: !11105)
!11121 = !DILocation(line: 792, column: 21, scope: !11105)
!11122 = !DILocation(line: 792, column: 27, scope: !11105)
!11123 = !DILocation(line: 793, column: 21, scope: !11105)
!11124 = !DILocation(line: 793, column: 26, scope: !11105)
!11125 = !DILocation(line: 794, column: 21, scope: !11105)
!11126 = !DILocation(line: 794, column: 31, scope: !11105)
!11127 = !DILocation(line: 795, column: 5, scope: !11105)
!11128 = !DILocation(line: 798, column: 5, scope: !11105)
!11129 = !DILocation(line: 804, column: 3, scope: !11105)
!11130 = !DILocation(line: 811, column: 5, scope: !11108)
!11131 = !DILocation(line: 811, column: 5, scope: !11109)
!11132 = !DILocation(line: 814, column: 21, scope: !11109)
!11133 = !DILocation(line: 814, column: 25, scope: !11109)
!11134 = !DILocation(line: 815, column: 21, scope: !11109)
!11135 = !DILocation(line: 815, column: 26, scope: !11109)
!11136 = !DILocation(line: 816, column: 21, scope: !11109)
!11137 = !DILocation(line: 816, column: 27, scope: !11109)
!11138 = !DILocation(line: 817, column: 21, scope: !11109)
!11139 = !DILocation(line: 817, column: 26, scope: !11109)
!11140 = !DILocation(line: 818, column: 21, scope: !11109)
!11141 = !DILocation(line: 818, column: 31, scope: !11109)
!11142 = !DILocation(line: 819, column: 5, scope: !11109)
!11143 = !DILocation(line: 822, column: 5, scope: !11109)
!11144 = !DILocation(line: 0, scope: !11106)
!11145 = !DILocation(line: 830, column: 1, scope: !11086)
!11146 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11095, file: !11095, line: 224, type: !11147, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!11147 = !DISubroutineType(types: !11148)
!11148 = !{null, !2710, !11149}
!11149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11094, size: 32)
!11150 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !10568, file: !10568, line: 841, type: !2826, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !162)
!11151 = !DILocation(line: 843, column: 38, scope: !11150)
!11152 = !DILocation(line: 844, column: 1, scope: !11150)
!11153 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !10568, file: !10568, line: 850, type: !2826, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !162)
!11154 = !DILocation(line: 852, column: 38, scope: !11153)
!11155 = !DILocation(line: 853, column: 1, scope: !11153)
!11156 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !10568, file: !10568, line: 941, type: !135, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !162)
!11157 = !DILocation(line: 943, column: 10, scope: !11156)
!11158 = !DILocation(line: 943, column: 3, scope: !11156)
!11159 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !10568, file: !10568, line: 952, type: !135, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !162)
!11160 = !DILocation(line: 955, column: 11, scope: !11159)
!11161 = !DILocation(line: 955, column: 56, scope: !11159)
!11162 = !DILocation(line: 955, column: 78, scope: !11159)
!11163 = !DILocation(line: 955, column: 36, scope: !11159)
!11164 = !DILocation(line: 955, column: 33, scope: !11159)
!11165 = !DILocation(line: 955, column: 3, scope: !11159)
!11166 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !10568, file: !10568, line: 964, type: !135, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !162)
!11167 = !DILocation(line: 967, column: 11, scope: !11166)
!11168 = !DILocation(line: 967, column: 55, scope: !11166)
!11169 = !DILocation(line: 967, column: 77, scope: !11166)
!11170 = !DILocation(line: 967, column: 35, scope: !11166)
!11171 = !DILocation(line: 967, column: 32, scope: !11166)
!11172 = !DILocation(line: 967, column: 3, scope: !11166)
!11173 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !10568, file: !10568, line: 977, type: !11174, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !11176)
!11174 = !DISubroutineType(types: !11175)
!11175 = !{null, !10576}
!11176 = !{!11177}
!11177 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11173, file: !10568, line: 977, type: !10576)
!11178 = !DILocation(line: 0, scope: !11173)
!11179 = !DILocation(line: 980, column: 22, scope: !11173)
!11180 = !DILocation(line: 980, column: 37, scope: !11173)
!11181 = !DILocation(line: 983, column: 12, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !11173, file: !10568, line: 983, column: 6)
!11183 = !DILocation(line: 983, column: 15, scope: !11182)
!11184 = !DILocation(line: 983, column: 31, scope: !11182)
!11185 = !DILocation(line: 983, column: 6, scope: !11173)
!11186 = !DILocation(line: 985, column: 24, scope: !11187)
!11187 = distinct !DILexicalBlock(scope: !11182, file: !10568, line: 984, column: 3)
!11188 = !DILocation(line: 985, column: 33, scope: !11187)
!11189 = !DILocation(line: 986, column: 3, scope: !11187)
!11190 = !DILocation(line: 987, column: 17, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11182, file: !10568, line: 987, column: 11)
!11192 = !DILocation(line: 987, column: 20, scope: !11191)
!11193 = !DILocation(line: 987, column: 35, scope: !11191)
!11194 = !DILocation(line: 0, scope: !11191)
!11195 = !DILocation(line: 987, column: 11, scope: !11182)
!11196 = !DILocation(line: 989, column: 33, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11191, file: !10568, line: 988, column: 3)
!11198 = !DILocation(line: 990, column: 3, scope: !11197)
!11199 = !DILocation(line: 993, column: 33, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !11191, file: !10568, line: 992, column: 3)
!11201 = !DILocation(line: 997, column: 12, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11173, file: !10568, line: 997, column: 6)
!11203 = !DILocation(line: 997, column: 15, scope: !11202)
!11204 = !DILocation(line: 1003, column: 24, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11202, file: !10568, line: 1002, column: 3)
!11206 = !DILocation(line: 1003, column: 33, scope: !11205)
!11207 = !DILocation(line: 1006, column: 61, scope: !11173)
!11208 = !DILocation(line: 1006, column: 81, scope: !11173)
!11209 = !DILocation(line: 1006, column: 22, scope: !11173)
!11210 = !DILocation(line: 1006, column: 42, scope: !11173)
!11211 = !DILocation(line: 1009, column: 12, scope: !11212)
!11212 = distinct !DILexicalBlock(scope: !11173, file: !10568, line: 1009, column: 6)
!11213 = !DILocation(line: 1009, column: 17, scope: !11212)
!11214 = !DILocation(line: 1009, column: 35, scope: !11212)
!11215 = !DILocation(line: 1009, column: 6, scope: !11173)
!11216 = !DILocation(line: 1011, column: 24, scope: !11217)
!11217 = distinct !DILexicalBlock(scope: !11212, file: !10568, line: 1010, column: 3)
!11218 = !DILocation(line: 1011, column: 33, scope: !11217)
!11219 = !DILocation(line: 1012, column: 3, scope: !11217)
!11220 = !DILocation(line: 1013, column: 17, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11212, file: !10568, line: 1013, column: 11)
!11222 = !DILocation(line: 1013, column: 22, scope: !11221)
!11223 = !DILocation(line: 1013, column: 39, scope: !11221)
!11224 = !DILocation(line: 0, scope: !11221)
!11225 = !DILocation(line: 1013, column: 11, scope: !11212)
!11226 = !DILocation(line: 1015, column: 33, scope: !11227)
!11227 = distinct !DILexicalBlock(scope: !11221, file: !10568, line: 1014, column: 3)
!11228 = !DILocation(line: 1016, column: 3, scope: !11227)
!11229 = !DILocation(line: 1019, column: 33, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11221, file: !10568, line: 1018, column: 3)
!11231 = !DILocation(line: 1023, column: 12, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11173, file: !10568, line: 1023, column: 6)
!11233 = !DILocation(line: 1023, column: 16, scope: !11232)
!11234 = !DILocation(line: 1029, column: 24, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11232, file: !10568, line: 1028, column: 3)
!11236 = !DILocation(line: 1029, column: 33, scope: !11235)
!11237 = !DILocation(line: 1033, column: 12, scope: !11238)
!11238 = distinct !DILexicalBlock(scope: !11173, file: !10568, line: 1033, column: 6)
!11239 = !DILocation(line: 1033, column: 15, scope: !11238)
!11240 = !DILocation(line: 1033, column: 30, scope: !11238)
!11241 = !DILocation(line: 1033, column: 6, scope: !11173)
!11242 = !DILocation(line: 1039, column: 28, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11238, file: !10568, line: 1038, column: 3)
!11244 = !DILocation(line: 1039, column: 37, scope: !11243)
!11245 = !DILocation(line: 1041, column: 54, scope: !11173)
!11246 = !DILocation(line: 1041, column: 62, scope: !11173)
!11247 = !DILocation(line: 1041, column: 26, scope: !11173)
!11248 = !DILocation(line: 1041, column: 36, scope: !11173)
!11249 = !DILocation(line: 1042, column: 49, scope: !11173)
!11250 = !DILocation(line: 1042, column: 57, scope: !11173)
!11251 = !DILocation(line: 1042, column: 26, scope: !11173)
!11252 = !DILocation(line: 1042, column: 31, scope: !11173)
!11253 = !DILocation(line: 1043, column: 50, scope: !11173)
!11254 = !DILocation(line: 1043, column: 78, scope: !11173)
!11255 = !DILocation(line: 1043, column: 26, scope: !11173)
!11256 = !DILocation(line: 1043, column: 31, scope: !11173)
!11257 = !DILocation(line: 1044, column: 52, scope: !11173)
!11258 = !DILocation(line: 1044, column: 102, scope: !11173)
!11259 = !DILocation(line: 1044, column: 109, scope: !11173)
!11260 = !DILocation(line: 1044, column: 26, scope: !11173)
!11261 = !DILocation(line: 1044, column: 31, scope: !11173)
!11262 = !DILocation(line: 1045, column: 50, scope: !11173)
!11263 = !DILocation(line: 1045, column: 78, scope: !11173)
!11264 = !DILocation(line: 1045, column: 26, scope: !11173)
!11265 = !DILocation(line: 1045, column: 31, scope: !11173)
!11266 = !DILocation(line: 1046, column: 1, scope: !11173)
!11267 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !10568, file: !10568, line: 1056, type: !11268, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !11270)
!11268 = !DISubroutineType(types: !11269)
!11269 = !{null, !10931, !149}
!11270 = !{!11271, !11272}
!11271 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11267, file: !10568, line: 1056, type: !10931)
!11272 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11267, file: !10568, line: 1056, type: !149)
!11273 = !DILocation(line: 0, scope: !11267)
!11274 = !DILocation(line: 1059, column: 22, scope: !11267)
!11275 = !DILocation(line: 1059, column: 32, scope: !11267)
!11276 = !DILocation(line: 1062, column: 53, scope: !11267)
!11277 = !DILocation(line: 1062, column: 58, scope: !11267)
!11278 = !DILocation(line: 1062, column: 22, scope: !11267)
!11279 = !DILocation(line: 1062, column: 35, scope: !11267)
!11280 = !DILocation(line: 1065, column: 54, scope: !11267)
!11281 = !DILocation(line: 1065, column: 59, scope: !11267)
!11282 = !DILocation(line: 1065, column: 22, scope: !11267)
!11283 = !DILocation(line: 1065, column: 36, scope: !11267)
!11284 = !DILocation(line: 1068, column: 55, scope: !11267)
!11285 = !DILocation(line: 1068, column: 60, scope: !11267)
!11286 = !DILocation(line: 1068, column: 22, scope: !11267)
!11287 = !DILocation(line: 1068, column: 37, scope: !11267)
!11288 = !DILocation(line: 1071, column: 56, scope: !11267)
!11289 = !DILocation(line: 1071, column: 79, scope: !11267)
!11290 = !DILocation(line: 1071, column: 22, scope: !11267)
!11291 = !DILocation(line: 1071, column: 37, scope: !11267)
!11292 = !DILocation(line: 1074, column: 34, scope: !11267)
!11293 = !DILocation(line: 1074, column: 38, scope: !11267)
!11294 = !DILocation(line: 1074, column: 14, scope: !11267)
!11295 = !DILocation(line: 1075, column: 1, scope: !11267)
!11296 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !10568, file: !10568, line: 1082, type: !2826, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !162)
!11297 = !DILocation(line: 1085, column: 6, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11296, file: !10568, line: 1085, column: 6)
!11299 = !DILocation(line: 1085, column: 6, scope: !11296)
!11300 = !DILocation(line: 1088, column: 5, scope: !11301)
!11301 = distinct !DILexicalBlock(scope: !11298, file: !10568, line: 1086, column: 3)
!11302 = !DILocation(line: 1091, column: 5, scope: !11301)
!11303 = !DILocation(line: 1092, column: 3, scope: !11301)
!11304 = !DILocation(line: 1093, column: 1, scope: !11296)
!11305 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !10568, file: !10568, line: 1099, type: !2826, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !162)
!11306 = !DILocation(line: 1104, column: 1, scope: !11305)
!11307 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11308, file: !11308, line: 257, type: !6391, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !11309)
!11308 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11309 = !{!11310}
!11310 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11307, file: !11308, line: 257, type: !137)
!11311 = !DILocation(line: 0, scope: !11307)
!11312 = !DILocation(line: 260, column: 3, scope: !11307)
!11313 = !DILocation(line: 261, column: 1, scope: !11307)
!11314 = distinct !DISubprogram(name: "LL_InitTick", scope: !11315, file: !11315, line: 260, type: !8996, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !11316)
!11315 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11316 = !{!11317, !11318}
!11317 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11314, file: !11315, line: 260, type: !137)
!11318 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11314, file: !11315, line: 260, type: !137)
!11319 = !DILocation(line: 0, scope: !11314)
!11320 = !DILocation(line: 263, column: 46, scope: !11314)
!11321 = !DILocation(line: 263, column: 55, scope: !11314)
!11322 = !DILocation(line: 263, column: 18, scope: !11314)
!11323 = !DILocation(line: 264, column: 18, scope: !11314)
!11324 = !DILocation(line: 265, column: 18, scope: !11314)
!11325 = !DILocation(line: 267, column: 1, scope: !11314)
!11326 = distinct !DISubprogram(name: "LL_mDelay", scope: !11308, file: !11308, line: 273, type: !6391, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !11327)
!11327 = !{!11328, !11329}
!11328 = !DILocalVariable(name: "Delay", arg: 1, scope: !11326, file: !11308, line: 273, type: !137)
!11329 = !DILocalVariable(name: "tmp", scope: !11326, file: !11308, line: 275, type: !176)
!11330 = !DILocation(line: 0, scope: !11326)
!11331 = !DILocation(line: 275, column: 3, scope: !11326)
!11332 = !DILocation(line: 275, column: 18, scope: !11326)
!11333 = !DILocation(line: 275, column: 33, scope: !11326)
!11334 = !DILocation(line: 277, column: 10, scope: !11326)
!11335 = !DILocation(line: 280, column: 12, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11326, file: !11308, line: 280, column: 6)
!11337 = !DILocation(line: 285, column: 3, scope: !11326)
!11338 = !DILocation(line: 287, column: 18, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11340, file: !11308, line: 287, column: 8)
!11340 = distinct !DILexicalBlock(scope: !11326, file: !11308, line: 286, column: 3)
!11341 = !DILocation(line: 292, column: 1, scope: !11326)
!11342 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11308, file: !11308, line: 323, type: !6391, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !11343)
!11343 = !{!11344}
!11344 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11342, file: !11308, line: 323, type: !137)
!11345 = !DILocation(line: 0, scope: !11342)
!11346 = !DILocation(line: 326, column: 19, scope: !11342)
!11347 = !DILocation(line: 327, column: 1, scope: !11342)
!11348 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11308, file: !11308, line: 338, type: !11349, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !11352)
!11349 = !DISubroutineType(types: !11350)
!11350 = !{!11351, !137}
!11351 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !700, line: 201, baseType: !699)
!11352 = !{!11353, !11354, !11355, !11356, !11357}
!11353 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11348, file: !11308, line: 338, type: !137)
!11354 = !DILocalVariable(name: "timeout", scope: !11348, file: !11308, line: 340, type: !137)
!11355 = !DILocalVariable(name: "getlatency", scope: !11348, file: !11308, line: 341, type: !137)
!11356 = !DILocalVariable(name: "latency", scope: !11348, file: !11308, line: 342, type: !137)
!11357 = !DILocalVariable(name: "status", scope: !11348, file: !11308, line: 343, type: !11351)
!11358 = !DILocation(line: 0, scope: !11348)
!11359 = !DILocation(line: 347, column: 21, scope: !11360)
!11360 = distinct !DILexicalBlock(scope: !11348, file: !11308, line: 347, column: 6)
!11361 = !DILocation(line: 347, column: 6, scope: !11348)
!11362 = !DILocation(line: 353, column: 8, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11364, file: !11308, line: 353, column: 8)
!11364 = distinct !DILexicalBlock(scope: !11360, file: !11308, line: 352, column: 3)
!11365 = !DILocation(line: 353, column: 40, scope: !11363)
!11366 = !DILocation(line: 353, column: 8, scope: !11364)
!11367 = !DILocation(line: 356, column: 26, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !11369, file: !11308, line: 356, column: 10)
!11369 = distinct !DILexicalBlock(scope: !11363, file: !11308, line: 354, column: 5)
!11370 = !DILocation(line: 356, column: 55, scope: !11368)
!11371 = !DILocation(line: 362, column: 55, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !11369, file: !11308, line: 362, column: 10)
!11373 = !DILocation(line: 368, column: 55, scope: !11374)
!11374 = distinct !DILexicalBlock(scope: !11369, file: !11308, line: 368, column: 10)
!11375 = !DILocation(line: 374, column: 26, scope: !11376)
!11376 = distinct !DILexicalBlock(scope: !11369, file: !11308, line: 374, column: 10)
!11377 = !DILocation(line: 374, column: 55, scope: !11376)
!11378 = !DILocation(line: 380, column: 28, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11380, file: !11308, line: 380, column: 12)
!11380 = distinct !DILexicalBlock(scope: !11376, file: !11308, line: 379, column: 7)
!11381 = !DILocation(line: 380, column: 57, scope: !11379)
!11382 = !DILocation(line: 387, column: 8, scope: !11383)
!11383 = distinct !DILexicalBlock(scope: !11364, file: !11308, line: 387, column: 8)
!11384 = !DILocation(line: 387, column: 40, scope: !11383)
!11385 = !DILocation(line: 387, column: 8, scope: !11364)
!11386 = !DILocation(line: 396, column: 26, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11388, file: !11308, line: 396, column: 10)
!11388 = distinct !DILexicalBlock(scope: !11383, file: !11308, line: 388, column: 5)
!11389 = !DILocation(line: 396, column: 55, scope: !11387)
!11390 = !DILocation(line: 402, column: 26, scope: !11391)
!11391 = distinct !DILexicalBlock(scope: !11388, file: !11308, line: 402, column: 10)
!11392 = !DILocation(line: 402, column: 55, scope: !11391)
!11393 = !DILocation(line: 407, column: 26, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11388, file: !11308, line: 407, column: 10)
!11395 = !DILocation(line: 407, column: 55, scope: !11394)
!11396 = !DILocation(line: 413, column: 28, scope: !11397)
!11397 = distinct !DILexicalBlock(scope: !11398, file: !11308, line: 413, column: 12)
!11398 = distinct !DILexicalBlock(scope: !11394, file: !11308, line: 412, column: 7)
!11399 = !DILocation(line: 413, column: 57, scope: !11397)
!11400 = !DILocation(line: 0, scope: !11364)
!11401 = !DILocation(line: 444, column: 5, scope: !11364)
!11402 = !DILocation(line: 448, column: 5, scope: !11364)
!11403 = !DILocation(line: 451, column: 18, scope: !11404)
!11404 = distinct !DILexicalBlock(scope: !11364, file: !11308, line: 449, column: 5)
!11405 = !DILocation(line: 452, column: 12, scope: !11404)
!11406 = !DILocation(line: 453, column: 26, scope: !11364)
!11407 = !DILocation(line: 453, column: 38, scope: !11364)
!11408 = !DILocation(line: 453, column: 5, scope: !11404)
!11409 = distinct !{!11409, !11402, !11410}
!11410 = !DILocation(line: 453, column: 54, scope: !11364)
!11411 = !DILocation(line: 0, scope: !11360)
!11412 = !DILocation(line: 464, column: 3, scope: !11348)
!11413 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !11414, file: !11414, line: 519, type: !135, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !162)
!11414 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11415 = !DILocation(line: 521, column: 21, scope: !11413)
!11416 = !DILocation(line: 521, column: 3, scope: !11413)
!11417 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6149, file: !6149, line: 1543, type: !6391, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !11418)
!11418 = !{!11419}
!11419 = !DILocalVariable(name: "Latency", arg: 1, scope: !11417, file: !6149, line: 1543, type: !137)
!11420 = !DILocation(line: 0, scope: !11417)
!11421 = !DILocation(line: 1545, column: 3, scope: !11417)
!11422 = !DILocation(line: 1546, column: 1, scope: !11417)
!11423 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6149, file: !6149, line: 1569, type: !135, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !162)
!11424 = !DILocation(line: 1571, column: 21, scope: !11423)
!11425 = !DILocation(line: 1571, column: 3, scope: !11423)
!11426 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11308, file: !11308, line: 483, type: !11427, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !11443)
!11427 = !DISubroutineType(types: !11428)
!11428 = !{!11351, !11429, !11436}
!11429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11430, size: 32)
!11430 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11315, line: 114, baseType: !11431)
!11431 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11315, line: 94, size: 96, elements: !11432)
!11432 = !{!11433, !11434, !11435}
!11433 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11431, file: !11315, line: 96, baseType: !137, size: 32)
!11434 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11431, file: !11315, line: 102, baseType: !137, size: 32, offset: 32)
!11435 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11431, file: !11315, line: 109, baseType: !137, size: 32, offset: 64)
!11436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11437, size: 32)
!11437 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11315, line: 139, baseType: !11438)
!11438 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11315, line: 119, size: 96, elements: !11439)
!11439 = !{!11440, !11441, !11442}
!11440 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11438, file: !11315, line: 121, baseType: !137, size: 32)
!11441 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11438, file: !11315, line: 127, baseType: !137, size: 32, offset: 32)
!11442 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11438, file: !11315, line: 133, baseType: !137, size: 32, offset: 64)
!11443 = !{!11444, !11445, !11446, !11447}
!11444 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11426, file: !11308, line: 483, type: !11429)
!11445 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11426, file: !11308, line: 484, type: !11436)
!11446 = !DILocalVariable(name: "status", scope: !11426, file: !11308, line: 486, type: !11351)
!11447 = !DILocalVariable(name: "pllfreq", scope: !11426, file: !11308, line: 487, type: !137)
!11448 = !DILocation(line: 0, scope: !11426)
!11449 = !DILocation(line: 490, column: 6, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11426, file: !11308, line: 490, column: 6)
!11451 = !DILocation(line: 490, column: 25, scope: !11450)
!11452 = !DILocation(line: 490, column: 6, scope: !11426)
!11453 = !DILocation(line: 493, column: 15, scope: !11454)
!11454 = distinct !DILexicalBlock(scope: !11450, file: !11308, line: 491, column: 3)
!11455 = !DILocation(line: 496, column: 8, scope: !11456)
!11456 = distinct !DILexicalBlock(scope: !11454, file: !11308, line: 496, column: 8)
!11457 = !DILocation(line: 496, column: 29, scope: !11456)
!11458 = !DILocation(line: 496, column: 8, scope: !11454)
!11459 = !DILocation(line: 498, column: 7, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11456, file: !11308, line: 497, column: 5)
!11461 = !DILocation(line: 499, column: 7, scope: !11460)
!11462 = !DILocation(line: 499, column: 14, scope: !11460)
!11463 = !DILocation(line: 499, column: 35, scope: !11460)
!11464 = distinct !{!11464, !11461, !11465}
!11465 = !DILocation(line: 502, column: 7, scope: !11460)
!11466 = !DILocation(line: 506, column: 76, scope: !11454)
!11467 = !DILocation(line: 506, column: 103, scope: !11454)
!11468 = !DILocation(line: 507, column: 54, scope: !11454)
!11469 = !DILocation(line: 506, column: 5, scope: !11454)
!11470 = !DILocation(line: 510, column: 14, scope: !11454)
!11471 = !DILocation(line: 511, column: 3, scope: !11454)
!11472 = !DILocation(line: 0, scope: !11450)
!11473 = !DILocation(line: 518, column: 3, scope: !11426)
!11474 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11308, file: !11308, line: 642, type: !11475, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !11477)
!11475 = !DISubroutineType(types: !11476)
!11476 = !{!11351}
!11477 = !{!11478}
!11478 = !DILocalVariable(name: "status", scope: !11474, file: !11308, line: 644, type: !11351)
!11479 = !DILocation(line: 0, scope: !11474)
!11480 = !DILocation(line: 647, column: 6, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11474, file: !11308, line: 647, column: 6)
!11482 = !DILocation(line: 647, column: 27, scope: !11481)
!11483 = !DILocation(line: 663, column: 6, scope: !11484)
!11484 = distinct !DILexicalBlock(scope: !11474, file: !11308, line: 663, column: 6)
!11485 = !DILocation(line: 663, column: 30, scope: !11484)
!11486 = !DILocation(line: 663, column: 6, scope: !11474)
!11487 = !DILocation(line: 669, column: 3, scope: !11474)
!11488 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11308, file: !11308, line: 611, type: !11489, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !11491)
!11489 = !DISubroutineType(types: !11490)
!11490 = !{!137, !137, !11429}
!11491 = !{!11492, !11493, !11494}
!11492 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !11488, file: !11308, line: 611, type: !137)
!11493 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !11488, file: !11308, line: 611, type: !11429)
!11494 = !DILocalVariable(name: "pllfreq", scope: !11488, file: !11308, line: 613, type: !137)
!11495 = !DILocation(line: 0, scope: !11488)
!11496 = !DILocation(line: 622, column: 56, scope: !11488)
!11497 = !DILocation(line: 622, column: 61, scope: !11488)
!11498 = !DILocation(line: 622, column: 32, scope: !11488)
!11499 = !DILocation(line: 626, column: 45, scope: !11488)
!11500 = !DILocation(line: 626, column: 50, scope: !11488)
!11501 = !DILocation(line: 626, column: 21, scope: !11488)
!11502 = !DILocation(line: 630, column: 47, scope: !11488)
!11503 = !DILocation(line: 630, column: 82, scope: !11488)
!11504 = !DILocation(line: 630, column: 21, scope: !11488)
!11505 = !DILocation(line: 633, column: 3, scope: !11488)
!11506 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8336, file: !8336, line: 3007, type: !135, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !162)
!11507 = !DILocation(line: 3009, column: 11, scope: !11506)
!11508 = !DILocation(line: 3009, column: 44, scope: !11506)
!11509 = !DILocation(line: 3009, column: 3, scope: !11506)
!11510 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8336, file: !8336, line: 2987, type: !2826, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !162)
!11511 = !DILocation(line: 2989, column: 3, scope: !11510)
!11512 = !DILocation(line: 2990, column: 1, scope: !11510)
!11513 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8336, file: !8336, line: 4304, type: !8470, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !11514)
!11514 = !{!11515, !11516, !11517, !11518}
!11515 = !DILocalVariable(name: "Source", arg: 1, scope: !11513, file: !8336, line: 4304, type: !137)
!11516 = !DILocalVariable(name: "PLLM", arg: 2, scope: !11513, file: !8336, line: 4304, type: !137)
!11517 = !DILocalVariable(name: "PLLN", arg: 3, scope: !11513, file: !8336, line: 4304, type: !137)
!11518 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !11513, file: !8336, line: 4304, type: !137)
!11519 = !DILocation(line: 0, scope: !11513)
!11520 = !DILocation(line: 4306, column: 3, scope: !11513)
!11521 = !DILocation(line: 4308, column: 3, scope: !11513)
!11522 = !DILocation(line: 4312, column: 1, scope: !11513)
!11523 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11308, file: !11308, line: 681, type: !11524, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !11526)
!11524 = !DISubroutineType(types: !11525)
!11525 = !{!11351, !137, !11436}
!11526 = !{!11527, !11528, !11529, !11530}
!11527 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !11523, file: !11308, line: 681, type: !137)
!11528 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11523, file: !11308, line: 681, type: !11436)
!11529 = !DILocalVariable(name: "status", scope: !11523, file: !11308, line: 683, type: !11351)
!11530 = !DILocalVariable(name: "hclk_frequency", scope: !11523, file: !11308, line: 684, type: !137)
!11531 = !DILocation(line: 0, scope: !11523)
!11532 = !DILocation(line: 691, column: 20, scope: !11523)
!11533 = !DILocation(line: 694, column: 6, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11523, file: !11308, line: 694, column: 6)
!11535 = !DILocation(line: 694, column: 22, scope: !11534)
!11536 = !DILocation(line: 694, column: 6, scope: !11523)
!11537 = !DILocation(line: 697, column: 14, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11534, file: !11308, line: 695, column: 3)
!11539 = !DILocation(line: 701, column: 13, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11523, file: !11308, line: 701, column: 6)
!11541 = !DILocation(line: 701, column: 6, scope: !11523)
!11542 = !DILocation(line: 704, column: 5, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11540, file: !11308, line: 702, column: 3)
!11544 = !DILocation(line: 705, column: 5, scope: !11543)
!11545 = !DILocation(line: 705, column: 12, scope: !11543)
!11546 = !DILocation(line: 705, column: 33, scope: !11543)
!11547 = distinct !{!11547, !11544, !11548}
!11548 = !DILocation(line: 708, column: 5, scope: !11543)
!11549 = !DILocation(line: 711, column: 49, scope: !11543)
!11550 = !DILocation(line: 711, column: 5, scope: !11543)
!11551 = !DILocation(line: 712, column: 5, scope: !11543)
!11552 = !DILocation(line: 713, column: 5, scope: !11543)
!11553 = !DILocation(line: 713, column: 12, scope: !11543)
!11554 = !DILocation(line: 713, column: 37, scope: !11543)
!11555 = distinct !{!11555, !11552, !11556}
!11556 = !DILocation(line: 716, column: 5, scope: !11543)
!11557 = !DILocation(line: 719, column: 50, scope: !11543)
!11558 = !DILocation(line: 719, column: 5, scope: !11543)
!11559 = !DILocation(line: 720, column: 50, scope: !11543)
!11560 = !DILocation(line: 720, column: 5, scope: !11543)
!11561 = !DILocation(line: 721, column: 3, scope: !11543)
!11562 = !DILocation(line: 724, column: 6, scope: !11563)
!11563 = distinct !DILexicalBlock(scope: !11523, file: !11308, line: 724, column: 6)
!11564 = !DILocation(line: 724, column: 22, scope: !11563)
!11565 = !DILocation(line: 724, column: 6, scope: !11523)
!11566 = !DILocation(line: 727, column: 14, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11563, file: !11308, line: 725, column: 3)
!11568 = !DILocation(line: 728, column: 3, scope: !11567)
!11569 = !DILocation(line: 731, column: 13, scope: !11570)
!11570 = distinct !DILexicalBlock(scope: !11523, file: !11308, line: 731, column: 6)
!11571 = !DILocation(line: 731, column: 6, scope: !11523)
!11572 = !DILocation(line: 733, column: 5, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11570, file: !11308, line: 732, column: 3)
!11574 = !DILocation(line: 734, column: 3, scope: !11573)
!11575 = !DILocation(line: 736, column: 3, scope: !11523)
!11576 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8336, file: !8336, line: 4184, type: !2826, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !162)
!11577 = !DILocation(line: 4186, column: 3, scope: !11576)
!11578 = !DILocation(line: 4187, column: 1, scope: !11576)
!11579 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8336, file: !8336, line: 4205, type: !135, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !162)
!11580 = !DILocation(line: 4207, column: 11, scope: !11579)
!11581 = !DILocation(line: 4207, column: 44, scope: !11579)
!11582 = !DILocation(line: 4207, column: 3, scope: !11579)
!11583 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8336, file: !8336, line: 3224, type: !6391, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !11584)
!11584 = !{!11585}
!11585 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11583, file: !8336, line: 3224, type: !137)
!11586 = !DILocation(line: 0, scope: !11583)
!11587 = !DILocation(line: 3226, column: 3, scope: !11583)
!11588 = !DILocation(line: 3227, column: 1, scope: !11583)
!11589 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8336, file: !8336, line: 3188, type: !6391, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !11590)
!11590 = !{!11591}
!11591 = !DILocalVariable(name: "Source", arg: 1, scope: !11589, file: !8336, line: 3188, type: !137)
!11592 = !DILocation(line: 0, scope: !11589)
!11593 = !DILocation(line: 3190, column: 3, scope: !11589)
!11594 = !DILocation(line: 3191, column: 1, scope: !11589)
!11595 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8336, file: !8336, line: 3204, type: !135, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !162)
!11596 = !DILocation(line: 3206, column: 21, scope: !11595)
!11597 = !DILocation(line: 3206, column: 3, scope: !11595)
!11598 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8336, file: !8336, line: 3240, type: !6391, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !11599)
!11599 = !{!11600}
!11600 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11598, file: !8336, line: 3240, type: !137)
!11601 = !DILocation(line: 0, scope: !11598)
!11602 = !DILocation(line: 3242, column: 3, scope: !11598)
!11603 = !DILocation(line: 3243, column: 1, scope: !11598)
!11604 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8336, file: !8336, line: 3256, type: !6391, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !11605)
!11605 = !{!11606}
!11606 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11604, file: !8336, line: 3256, type: !137)
!11607 = !DILocation(line: 0, scope: !11604)
!11608 = !DILocation(line: 3258, column: 3, scope: !11604)
!11609 = !DILocation(line: 3259, column: 1, scope: !11604)
!11610 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8336, file: !8336, line: 5153, type: !135, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !162)
!11611 = !DILocation(line: 5155, column: 11, scope: !11610)
!11612 = !DILocation(line: 5155, column: 47, scope: !11610)
!11613 = !DILocation(line: 5155, column: 3, scope: !11610)
!11614 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11308, file: !11308, line: 540, type: !11615, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !11617)
!11615 = !DISubroutineType(types: !11616)
!11616 = !{!11351, !137, !137, !11429, !11436}
!11617 = !{!11618, !11619, !11620, !11621, !11622, !11623}
!11618 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !11614, file: !11308, line: 540, type: !137)
!11619 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !11614, file: !11308, line: 540, type: !137)
!11620 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !11614, file: !11308, line: 541, type: !11429)
!11621 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !11614, file: !11308, line: 541, type: !11436)
!11622 = !DILocalVariable(name: "status", scope: !11614, file: !11308, line: 543, type: !11351)
!11623 = !DILocalVariable(name: "pllfreq", scope: !11614, file: !11308, line: 544, type: !137)
!11624 = !DILocation(line: 0, scope: !11614)
!11625 = !DILocation(line: 551, column: 6, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11614, file: !11308, line: 551, column: 6)
!11627 = !DILocation(line: 551, column: 25, scope: !11626)
!11628 = !DILocation(line: 551, column: 6, scope: !11614)
!11629 = !DILocation(line: 554, column: 15, scope: !11630)
!11630 = distinct !DILexicalBlock(scope: !11626, file: !11308, line: 552, column: 3)
!11631 = !DILocation(line: 557, column: 8, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !11630, file: !11308, line: 557, column: 8)
!11633 = !DILocation(line: 557, column: 29, scope: !11632)
!11634 = !DILocation(line: 557, column: 8, scope: !11630)
!11635 = !DILocation(line: 560, column: 20, scope: !11636)
!11636 = distinct !DILexicalBlock(scope: !11637, file: !11308, line: 560, column: 10)
!11637 = distinct !DILexicalBlock(scope: !11632, file: !11308, line: 558, column: 5)
!11638 = !DILocation(line: 560, column: 10, scope: !11637)
!11639 = !DILocation(line: 562, column: 9, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11636, file: !11308, line: 561, column: 7)
!11641 = !DILocation(line: 563, column: 7, scope: !11640)
!11642 = !DILocation(line: 566, column: 9, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11636, file: !11308, line: 565, column: 7)
!11644 = !DILocation(line: 570, column: 7, scope: !11637)
!11645 = !DILocation(line: 571, column: 7, scope: !11637)
!11646 = !DILocation(line: 571, column: 14, scope: !11637)
!11647 = !DILocation(line: 571, column: 35, scope: !11637)
!11648 = distinct !{!11648, !11645, !11649}
!11649 = !DILocation(line: 574, column: 7, scope: !11637)
!11650 = !DILocation(line: 578, column: 76, scope: !11630)
!11651 = !DILocation(line: 578, column: 103, scope: !11630)
!11652 = !DILocation(line: 579, column: 54, scope: !11630)
!11653 = !DILocation(line: 578, column: 5, scope: !11630)
!11654 = !DILocation(line: 582, column: 14, scope: !11630)
!11655 = !DILocation(line: 583, column: 3, scope: !11630)
!11656 = !DILocation(line: 0, scope: !11626)
!11657 = !DILocation(line: 590, column: 3, scope: !11614)
!11658 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8336, file: !8336, line: 2969, type: !135, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !162)
!11659 = !DILocation(line: 2971, column: 11, scope: !11658)
!11660 = !DILocation(line: 2971, column: 44, scope: !11658)
!11661 = !DILocation(line: 2971, column: 3, scope: !11658)
!11662 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8336, file: !8336, line: 2929, type: !2826, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !162)
!11663 = !DILocation(line: 2931, column: 3, scope: !11662)
!11664 = !DILocation(line: 2932, column: 1, scope: !11662)
!11665 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8336, file: !8336, line: 2939, type: !2826, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !162)
!11666 = !DILocation(line: 2941, column: 3, scope: !11665)
!11667 = !DILocation(line: 2942, column: 1, scope: !11665)
!11668 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8336, file: !8336, line: 2949, type: !2826, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !162)
!11669 = !DILocation(line: 2951, column: 3, scope: !11668)
!11670 = !DILocation(line: 2952, column: 1, scope: !11668)
!11671 = distinct !DISubprogram(name: "z_device_state_init", scope: !11672, file: !11672, line: 23, type: !2826, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !11673)
!11672 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11673 = !{!11674}
!11674 = !DILocalVariable(name: "dev", scope: !11671, file: !11672, line: 25, type: !11675)
!11675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11676, size: 32)
!11676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11677)
!11677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !11678)
!11678 = !{!11679, !11680, !11681, !11682, !11688, !11689}
!11679 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11677, file: !196, line: 380, baseType: !199, size: 32)
!11680 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !11677, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!11681 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !11677, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!11682 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11677, file: !196, line: 386, baseType: !11683, size: 32, offset: 96)
!11683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11684, size: 32)
!11684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !11685)
!11685 = !{!11686, !11687}
!11686 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !11684, file: !196, line: 359, baseType: !208, size: 8)
!11687 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !11684, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!11688 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11677, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!11689 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !11677, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!11690 = !DILocation(line: 0, scope: !11671)
!11691 = !DILocation(line: 31, column: 1, scope: !11671)
!11692 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !11672, file: !11672, line: 33, type: !11693, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !11695)
!11693 = !DISubroutineType(types: !11694)
!11694 = !{!11675, !199}
!11695 = !{!11696, !11697}
!11696 = !DILocalVariable(name: "name", arg: 1, scope: !11692, file: !11672, line: 33, type: !199)
!11697 = !DILocalVariable(name: "dev", scope: !11692, file: !11672, line: 35, type: !11675)
!11698 = !DILocation(line: 0, scope: !11692)
!11699 = !DILocation(line: 40, column: 12, scope: !11700)
!11700 = distinct !DILexicalBlock(scope: !11692, file: !11672, line: 40, column: 6)
!11701 = !DILocation(line: 40, column: 21, scope: !11700)
!11702 = !DILocation(line: 40, column: 25, scope: !11700)
!11703 = !DILocation(line: 40, column: 33, scope: !11700)
!11704 = !DILocation(line: 40, column: 6, scope: !11692)
!11705 = !DILocation(line: 55, column: 2, scope: !11706)
!11706 = distinct !DILexicalBlock(scope: !11692, file: !11672, line: 55, column: 2)
!11707 = !DILocation(line: 50, column: 7, scope: !11708)
!11708 = distinct !DILexicalBlock(scope: !11709, file: !11672, line: 50, column: 7)
!11709 = distinct !DILexicalBlock(scope: !11710, file: !11672, line: 49, column: 57)
!11710 = distinct !DILexicalBlock(scope: !11711, file: !11672, line: 49, column: 2)
!11711 = distinct !DILexicalBlock(scope: !11692, file: !11672, line: 49, column: 2)
!11712 = !DILocation(line: 50, column: 30, scope: !11708)
!11713 = !DILocation(line: 50, column: 39, scope: !11708)
!11714 = !DILocation(line: 50, column: 44, scope: !11708)
!11715 = !DILocation(line: 50, column: 7, scope: !11709)
!11716 = !DILocation(line: 49, column: 53, scope: !11710)
!11717 = !DILocation(line: 49, column: 33, scope: !11710)
!11718 = !DILocation(line: 49, column: 2, scope: !11711)
!11719 = distinct !{!11719, !11718, !11720}
!11720 = !DILocation(line: 53, column: 2, scope: !11711)
!11721 = !DILocation(line: 56, column: 7, scope: !11722)
!11722 = distinct !DILexicalBlock(scope: !11723, file: !11672, line: 56, column: 7)
!11723 = distinct !DILexicalBlock(scope: !11724, file: !11672, line: 55, column: 57)
!11724 = distinct !DILexicalBlock(scope: !11706, file: !11672, line: 55, column: 2)
!11725 = !DILocation(line: 56, column: 30, scope: !11722)
!11726 = !DILocation(line: 56, column: 52, scope: !11722)
!11727 = !DILocation(line: 56, column: 34, scope: !11722)
!11728 = !DILocation(line: 56, column: 58, scope: !11722)
!11729 = !DILocation(line: 56, column: 7, scope: !11723)
!11730 = !DILocation(line: 55, column: 53, scope: !11724)
!11731 = !DILocation(line: 55, column: 33, scope: !11724)
!11732 = distinct !{!11732, !11705, !11733}
!11733 = !DILocation(line: 59, column: 2, scope: !11706)
!11734 = !DILocation(line: 62, column: 1, scope: !11692)
!11735 = distinct !DISubprogram(name: "z_device_is_ready", scope: !11672, file: !11672, line: 93, type: !11736, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !11738)
!11736 = !DISubroutineType(types: !11737)
!11737 = !{!211, !11675}
!11738 = !{!11739}
!11739 = !DILocalVariable(name: "dev", arg: 1, scope: !11735, file: !11672, line: 93, type: !11675)
!11740 = !DILocation(line: 0, scope: !11735)
!11741 = !DILocation(line: 99, column: 10, scope: !11742)
!11742 = distinct !DILexicalBlock(scope: !11735, file: !11672, line: 99, column: 6)
!11743 = !DILocation(line: 99, column: 6, scope: !11735)
!11744 = !DILocation(line: 103, column: 14, scope: !11735)
!11745 = !DILocation(line: 103, column: 21, scope: !11735)
!11746 = !DILocation(line: 103, column: 33, scope: !11735)
!11747 = !DILocation(line: 103, column: 49, scope: !11735)
!11748 = !DILocation(line: 103, column: 58, scope: !11735)
!11749 = !DILocation(line: 104, column: 1, scope: !11735)
!11750 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !11672, file: !11672, line: 87, type: !11751, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !11754)
!11751 = !DISubroutineType(types: !11752)
!11752 = !{!120, !11753}
!11753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11675, size: 32)
!11754 = !{!11755}
!11755 = !DILocalVariable(name: "devices", arg: 1, scope: !11750, file: !11672, line: 87, type: !11753)
!11756 = !DILocation(line: 0, scope: !11750)
!11757 = !DILocation(line: 89, column: 11, scope: !11750)
!11758 = !DILocation(line: 90, column: 2, scope: !11750)
!11759 = distinct !DISubprogram(name: "device_required_foreach", scope: !11672, file: !11672, line: 125, type: !11760, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !11766)
!11760 = !DISubroutineType(types: !11761)
!11761 = !{!103, !11675, !11762, !102}
!11762 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !196, line: 471, baseType: !11763)
!11763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11764, size: 32)
!11764 = !DISubroutineType(types: !11765)
!11765 = !{!103, !11675, !102}
!11766 = !{!11767, !11768, !11769, !11770, !11771}
!11767 = !DILocalVariable(name: "dev", arg: 1, scope: !11759, file: !11672, line: 125, type: !11675)
!11768 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11759, file: !11672, line: 126, type: !11762)
!11769 = !DILocalVariable(name: "context", arg: 3, scope: !11759, file: !11672, line: 127, type: !102)
!11770 = !DILocalVariable(name: "handle_count", scope: !11759, file: !11672, line: 129, type: !120)
!11771 = !DILocalVariable(name: "handles", scope: !11759, file: !11672, line: 130, type: !214)
!11772 = !DILocation(line: 0, scope: !11759)
!11773 = !DILocation(line: 129, column: 2, scope: !11759)
!11774 = !DILocation(line: 129, column: 9, scope: !11759)
!11775 = !DILocation(line: 130, column: 35, scope: !11759)
!11776 = !DILocation(line: 132, column: 33, scope: !11759)
!11777 = !DILocation(line: 132, column: 9, scope: !11759)
!11778 = !DILocation(line: 133, column: 1, scope: !11759)
!11779 = !DILocation(line: 132, column: 2, scope: !11759)
!11780 = distinct !DISubprogram(name: "device_required_handles_get", scope: !196, file: !196, line: 493, type: !11781, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !11783)
!11781 = !DISubroutineType(types: !11782)
!11782 = !{!214, !11675, !2288}
!11783 = !{!11784, !11785, !11786, !11787}
!11784 = !DILocalVariable(name: "dev", arg: 1, scope: !11780, file: !196, line: 493, type: !11675)
!11785 = !DILocalVariable(name: "count", arg: 2, scope: !11780, file: !196, line: 493, type: !2288)
!11786 = !DILocalVariable(name: "rv", scope: !11780, file: !196, line: 495, type: !214)
!11787 = !DILocalVariable(name: "i", scope: !11788, file: !196, line: 498, type: !120)
!11788 = distinct !DILexicalBlock(scope: !11789, file: !196, line: 497, column: 18)
!11789 = distinct !DILexicalBlock(scope: !11780, file: !196, line: 497, column: 6)
!11790 = !DILocation(line: 0, scope: !11780)
!11791 = !DILocation(line: 495, column: 35, scope: !11780)
!11792 = !DILocation(line: 497, column: 9, scope: !11789)
!11793 = !DILocation(line: 497, column: 6, scope: !11780)
!11794 = !DILocation(line: 0, scope: !11788)
!11795 = !DILocation(line: 500, column: 11, scope: !11788)
!11796 = !DILocation(line: 500, column: 40, scope: !11788)
!11797 = !DILocation(line: 502, column: 4, scope: !11798)
!11798 = distinct !DILexicalBlock(scope: !11788, file: !196, line: 501, column: 40)
!11799 = distinct !{!11799, !11800, !11801}
!11800 = !DILocation(line: 500, column: 3, scope: !11788)
!11801 = !DILocation(line: 503, column: 3, scope: !11788)
!11802 = !DILocation(line: 504, column: 10, scope: !11788)
!11803 = !DILocation(line: 505, column: 2, scope: !11788)
!11804 = !DILocation(line: 507, column: 2, scope: !11780)
!11805 = distinct !DISubprogram(name: "device_visitor", scope: !11672, file: !11672, line: 106, type: !11806, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !11808)
!11806 = !DISubroutineType(types: !11807)
!11807 = !{!103, !214, !120, !11762, !102}
!11808 = !{!11809, !11810, !11811, !11812, !11813, !11815, !11818, !11819}
!11809 = !DILocalVariable(name: "handles", arg: 1, scope: !11805, file: !11672, line: 106, type: !214)
!11810 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11805, file: !11672, line: 107, type: !120)
!11811 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11805, file: !11672, line: 108, type: !11762)
!11812 = !DILocalVariable(name: "context", arg: 4, scope: !11805, file: !11672, line: 109, type: !102)
!11813 = !DILocalVariable(name: "i", scope: !11814, file: !11672, line: 112, type: !120)
!11814 = distinct !DILexicalBlock(scope: !11805, file: !11672, line: 112, column: 2)
!11815 = !DILocalVariable(name: "dh", scope: !11816, file: !11672, line: 113, type: !216)
!11816 = distinct !DILexicalBlock(scope: !11817, file: !11672, line: 112, column: 44)
!11817 = distinct !DILexicalBlock(scope: !11814, file: !11672, line: 112, column: 2)
!11818 = !DILocalVariable(name: "rdev", scope: !11816, file: !11672, line: 114, type: !11675)
!11819 = !DILocalVariable(name: "rc", scope: !11816, file: !11672, line: 115, type: !103)
!11820 = !DILocation(line: 0, scope: !11805)
!11821 = !DILocation(line: 0, scope: !11814)
!11822 = !DILocation(line: 112, column: 23, scope: !11817)
!11823 = !DILocation(line: 112, column: 2, scope: !11814)
!11824 = distinct !{!11824, !11823, !11825}
!11825 = !DILocation(line: 120, column: 2, scope: !11814)
!11826 = !DILocation(line: 113, column: 24, scope: !11816)
!11827 = !DILocation(line: 0, scope: !11816)
!11828 = !DILocation(line: 114, column: 31, scope: !11816)
!11829 = !DILocation(line: 115, column: 12, scope: !11816)
!11830 = !DILocation(line: 117, column: 10, scope: !11831)
!11831 = distinct !DILexicalBlock(scope: !11816, file: !11672, line: 117, column: 7)
!11832 = !DILocation(line: 112, column: 39, scope: !11817)
!11833 = !DILocation(line: 123, column: 1, scope: !11805)
!11834 = distinct !DISubprogram(name: "device_from_handle", scope: !196, file: !196, line: 439, type: !11835, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !11837)
!11835 = !DISubroutineType(types: !11836)
!11836 = !{!11675, !216}
!11837 = !{!11838, !11839, !11840}
!11838 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !11834, file: !196, line: 439, type: !216)
!11839 = !DILocalVariable(name: "dev", scope: !11834, file: !196, line: 443, type: !11675)
!11840 = !DILocalVariable(name: "numdev", scope: !11834, file: !196, line: 444, type: !120)
!11841 = !DILocation(line: 0, scope: !11834)
!11842 = !DILocation(line: 446, column: 7, scope: !11843)
!11843 = distinct !DILexicalBlock(scope: !11834, file: !196, line: 446, column: 6)
!11844 = !DILocation(line: 446, column: 18, scope: !11843)
!11845 = !DILocation(line: 446, column: 23, scope: !11843)
!11846 = !DILocation(line: 450, column: 2, scope: !11834)
!11847 = distinct !DISubprogram(name: "device_supported_foreach", scope: !11672, file: !11672, line: 135, type: !11760, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !11848)
!11848 = !{!11849, !11850, !11851, !11852, !11853}
!11849 = !DILocalVariable(name: "dev", arg: 1, scope: !11847, file: !11672, line: 135, type: !11675)
!11850 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11847, file: !11672, line: 136, type: !11762)
!11851 = !DILocalVariable(name: "context", arg: 3, scope: !11847, file: !11672, line: 137, type: !102)
!11852 = !DILocalVariable(name: "handle_count", scope: !11847, file: !11672, line: 139, type: !120)
!11853 = !DILocalVariable(name: "handles", scope: !11847, file: !11672, line: 140, type: !214)
!11854 = !DILocation(line: 0, scope: !11847)
!11855 = !DILocation(line: 139, column: 2, scope: !11847)
!11856 = !DILocation(line: 139, column: 9, scope: !11847)
!11857 = !DILocation(line: 140, column: 35, scope: !11847)
!11858 = !DILocation(line: 142, column: 33, scope: !11847)
!11859 = !DILocation(line: 142, column: 9, scope: !11847)
!11860 = !DILocation(line: 143, column: 1, scope: !11847)
!11861 = !DILocation(line: 142, column: 2, scope: !11847)
!11862 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !196, file: !196, line: 573, type: !11781, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !11863)
!11863 = !{!11864, !11865, !11866, !11867, !11868}
!11864 = !DILocalVariable(name: "dev", arg: 1, scope: !11862, file: !196, line: 573, type: !11675)
!11865 = !DILocalVariable(name: "count", arg: 2, scope: !11862, file: !196, line: 573, type: !2288)
!11866 = !DILocalVariable(name: "rv", scope: !11862, file: !196, line: 575, type: !214)
!11867 = !DILocalVariable(name: "region", scope: !11862, file: !196, line: 576, type: !120)
!11868 = !DILocalVariable(name: "i", scope: !11862, file: !196, line: 577, type: !120)
!11869 = !DILocation(line: 0, scope: !11862)
!11870 = !DILocation(line: 575, column: 35, scope: !11862)
!11871 = !DILocation(line: 579, column: 9, scope: !11872)
!11872 = distinct !DILexicalBlock(scope: !11862, file: !196, line: 579, column: 6)
!11873 = !DILocation(line: 579, column: 6, scope: !11862)
!11874 = !DILocation(line: 582, column: 8, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11876, file: !196, line: 582, column: 8)
!11876 = distinct !DILexicalBlock(scope: !11877, file: !196, line: 581, column: 23)
!11877 = distinct !DILexicalBlock(scope: !11872, file: !196, line: 579, column: 18)
!11878 = !DILocation(line: 582, column: 12, scope: !11875)
!11879 = !DILocation(line: 585, column: 6, scope: !11876)
!11880 = !DILocation(line: 0, scope: !11877)
!11881 = !DILocation(line: 581, column: 17, scope: !11877)
!11882 = !DILocation(line: 581, column: 3, scope: !11877)
!11883 = !DILocation(line: 588, column: 10, scope: !11877)
!11884 = !DILocation(line: 588, column: 16, scope: !11877)
!11885 = !DILocation(line: 589, column: 4, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11877, file: !196, line: 588, column: 39)
!11887 = !DILocation(line: 588, column: 3, scope: !11877)
!11888 = distinct !{!11888, !11887, !11889}
!11889 = !DILocation(line: 590, column: 3, scope: !11877)
!11890 = !DILocation(line: 591, column: 10, scope: !11877)
!11891 = !DILocation(line: 592, column: 2, scope: !11877)
!11892 = !DILocation(line: 575, column: 25, scope: !11862)
!11893 = !DILocation(line: 594, column: 2, scope: !11862)
!11894 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1685, file: !1685, line: 49, type: !11895, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1682, retainedNodes: !162)
!11895 = !DISubroutineType(types: !11896)
!11896 = !{!2281}
!11897 = !DILocation(line: 51, column: 10, scope: !11894)
!11898 = !DILocation(line: 51, column: 20, scope: !11894)
!11899 = !DILocation(line: 51, column: 2, scope: !11894)
!11900 = distinct !DISubprogram(name: "coredump", scope: !2793, file: !2793, line: 209, type: !11901, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !12047)
!11901 = !DISubroutineType(types: !11902)
!11902 = !{null, !32, !11903, !11947}
!11903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11904, size: 32)
!11904 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11905)
!11905 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2413, line: 141, baseType: !11906)
!11906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2413, line: 97, size: 256, elements: !11907)
!11907 = !{!11908}
!11908 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !11906, file: !2413, line: 107, baseType: !11909, size: 256)
!11909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2413, line: 98, size: 256, elements: !11910)
!11910 = !{!11911, !11916, !11921, !11926, !11931, !11936, !11941, !11946}
!11911 = !DIDerivedType(tag: DW_TAG_member, scope: !11909, file: !2413, line: 99, baseType: !11912, size: 32)
!11912 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11909, file: !2413, line: 99, size: 32, elements: !11913)
!11913 = !{!11914, !11915}
!11914 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !11912, file: !2413, line: 99, baseType: !137, size: 32)
!11915 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !11912, file: !2413, line: 99, baseType: !137, size: 32)
!11916 = !DIDerivedType(tag: DW_TAG_member, scope: !11909, file: !2413, line: 100, baseType: !11917, size: 32, offset: 32)
!11917 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11909, file: !2413, line: 100, size: 32, elements: !11918)
!11918 = !{!11919, !11920}
!11919 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !11917, file: !2413, line: 100, baseType: !137, size: 32)
!11920 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !11917, file: !2413, line: 100, baseType: !137, size: 32)
!11921 = !DIDerivedType(tag: DW_TAG_member, scope: !11909, file: !2413, line: 101, baseType: !11922, size: 32, offset: 64)
!11922 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11909, file: !2413, line: 101, size: 32, elements: !11923)
!11923 = !{!11924, !11925}
!11924 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !11922, file: !2413, line: 101, baseType: !137, size: 32)
!11925 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !11922, file: !2413, line: 101, baseType: !137, size: 32)
!11926 = !DIDerivedType(tag: DW_TAG_member, scope: !11909, file: !2413, line: 102, baseType: !11927, size: 32, offset: 96)
!11927 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11909, file: !2413, line: 102, size: 32, elements: !11928)
!11928 = !{!11929, !11930}
!11929 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !11927, file: !2413, line: 102, baseType: !137, size: 32)
!11930 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !11927, file: !2413, line: 102, baseType: !137, size: 32)
!11931 = !DIDerivedType(tag: DW_TAG_member, scope: !11909, file: !2413, line: 103, baseType: !11932, size: 32, offset: 128)
!11932 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11909, file: !2413, line: 103, size: 32, elements: !11933)
!11933 = !{!11934, !11935}
!11934 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !11932, file: !2413, line: 103, baseType: !137, size: 32)
!11935 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !11932, file: !2413, line: 103, baseType: !137, size: 32)
!11936 = !DIDerivedType(tag: DW_TAG_member, scope: !11909, file: !2413, line: 104, baseType: !11937, size: 32, offset: 160)
!11937 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11909, file: !2413, line: 104, size: 32, elements: !11938)
!11938 = !{!11939, !11940}
!11939 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !11937, file: !2413, line: 104, baseType: !137, size: 32)
!11940 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !11937, file: !2413, line: 104, baseType: !137, size: 32)
!11941 = !DIDerivedType(tag: DW_TAG_member, scope: !11909, file: !2413, line: 105, baseType: !11942, size: 32, offset: 192)
!11942 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11909, file: !2413, line: 105, size: 32, elements: !11943)
!11943 = !{!11944, !11945}
!11944 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !11942, file: !2413, line: 105, baseType: !137, size: 32)
!11945 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !11942, file: !2413, line: 105, baseType: !137, size: 32)
!11946 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !11909, file: !2413, line: 106, baseType: !137, size: 32, offset: 224)
!11947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11948, size: 32)
!11948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !11949)
!11949 = !{!11950, !12008, !12020, !12021, !12022, !12023, !12029, !12042}
!11950 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11948, file: !263, line: 247, baseType: !11951, size: 384)
!11951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !11952)
!11952 = !{!11953, !11977, !11984, !11985, !11986, !11995, !11996, !11997}
!11953 = !DIDerivedType(tag: DW_TAG_member, scope: !11951, file: !263, line: 60, baseType: !11954, size: 64)
!11954 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11951, file: !263, line: 60, size: 64, elements: !11955)
!11955 = !{!11956, !11971}
!11956 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !11954, file: !263, line: 61, baseType: !11957, size: 64)
!11957 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !11958)
!11958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !11959)
!11959 = !{!11960, !11966}
!11960 = !DIDerivedType(tag: DW_TAG_member, scope: !11958, file: !273, line: 38, baseType: !11961, size: 32)
!11961 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11958, file: !273, line: 38, size: 32, elements: !11962)
!11962 = !{!11963, !11965}
!11963 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11961, file: !273, line: 39, baseType: !11964, size: 32)
!11964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11958, size: 32)
!11965 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11961, file: !273, line: 40, baseType: !11964, size: 32)
!11966 = !DIDerivedType(tag: DW_TAG_member, scope: !11958, file: !273, line: 42, baseType: !11967, size: 32, offset: 32)
!11967 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11958, file: !273, line: 42, size: 32, elements: !11968)
!11968 = !{!11969, !11970}
!11969 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11967, file: !273, line: 43, baseType: !11964, size: 32)
!11970 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11967, file: !273, line: 44, baseType: !11964, size: 32)
!11971 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !11954, file: !263, line: 62, baseType: !11972, size: 64)
!11972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !11973)
!11973 = !{!11974}
!11974 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11972, file: !289, line: 50, baseType: !11975, size: 64)
!11975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11976, size: 64, elements: !294)
!11976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11972, size: 32)
!11977 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !11951, file: !263, line: 68, baseType: !11978, size: 32, offset: 64)
!11978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11979, size: 32)
!11979 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !11980)
!11980 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !11981)
!11981 = !{!11982}
!11982 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11980, file: !299, line: 232, baseType: !11983, size: 64)
!11983 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !11958)
!11984 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !11951, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!11985 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !11951, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!11986 = !DIDerivedType(tag: DW_TAG_member, scope: !11951, file: !263, line: 90, baseType: !11987, size: 16, offset: 112)
!11987 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11951, file: !263, line: 90, size: 16, elements: !11988)
!11988 = !{!11989, !11994}
!11989 = !DIDerivedType(tag: DW_TAG_member, scope: !11987, file: !263, line: 91, baseType: !11990, size: 16)
!11990 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11987, file: !263, line: 91, size: 16, elements: !11991)
!11991 = !{!11992, !11993}
!11992 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !11990, file: !263, line: 96, baseType: !313, size: 8)
!11993 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !11990, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!11994 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !11987, file: !263, line: 100, baseType: !151, size: 16)
!11995 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !11951, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!11996 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !11951, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!11997 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !11951, file: !263, line: 131, baseType: !11998, size: 192, offset: 192)
!11998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !11999)
!11999 = !{!12000, !12001, !12007}
!12000 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11998, file: !299, line: 245, baseType: !11957, size: 64)
!12001 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !11998, file: !299, line: 246, baseType: !12002, size: 32, offset: 64)
!12002 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !12003)
!12003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12004, size: 32)
!12004 = !DISubroutineType(types: !12005)
!12005 = !{null, !12006}
!12006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11998, size: 32)
!12007 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !11998, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!12008 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !11948, file: !263, line: 250, baseType: !12009, size: 288, offset: 384)
!12009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !12010)
!12010 = !{!12011, !12012, !12013, !12014, !12015, !12016, !12017, !12018, !12019}
!12011 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12009, file: !334, line: 26, baseType: !137, size: 32)
!12012 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12009, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!12013 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12009, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!12014 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12009, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!12015 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12009, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!12016 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12009, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!12017 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12009, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!12018 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12009, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!12019 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12009, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!12020 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !11948, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!12021 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !11948, file: !263, line: 256, baseType: !11979, size: 64, offset: 704)
!12022 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !11948, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!12023 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !11948, file: !263, line: 300, baseType: !12024, size: 96, offset: 800)
!12024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !12025)
!12025 = !{!12026, !12027, !12028}
!12026 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12024, file: !263, line: 153, baseType: !22, size: 32)
!12027 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12024, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!12028 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12024, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!12029 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !11948, file: !263, line: 325, baseType: !12030, size: 32, offset: 896)
!12030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12031, size: 32)
!12031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !12032)
!12032 = !{!12033, !12039, !12040}
!12033 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12031, file: !357, line: 5074, baseType: !12034, size: 96)
!12034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !12035)
!12035 = !{!12036, !12037, !12038}
!12036 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12034, file: !113, line: 57, baseType: !116, size: 32)
!12037 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12034, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!12038 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12034, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!12039 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12031, file: !357, line: 5075, baseType: !11979, size: 64, offset: 96)
!12040 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12031, file: !357, line: 5076, baseType: !12041, offset: 160)
!12041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!12042 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !11948, file: !263, line: 343, baseType: !12043, size: 64, offset: 928)
!12043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !12044)
!12044 = !{!12045, !12046}
!12045 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12043, file: !334, line: 63, baseType: !137, size: 32)
!12046 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12043, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!12047 = !{!12048, !12049, !12050}
!12048 = !DILocalVariable(name: "reason", arg: 1, scope: !11900, file: !2793, line: 209, type: !32)
!12049 = !DILocalVariable(name: "esf", arg: 2, scope: !11900, file: !2793, line: 209, type: !11903)
!12050 = !DILocalVariable(name: "thread", arg: 3, scope: !11900, file: !2793, line: 210, type: !11947)
!12051 = !DILocation(line: 0, scope: !11900)
!12052 = !DILocation(line: 212, column: 1, scope: !11900)
!12053 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2793, file: !2793, line: 214, type: !12054, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !12056)
!12054 = !DISubroutineType(types: !12055)
!12055 = !{null, !22, !22}
!12056 = !{!12057, !12058}
!12057 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12053, file: !2793, line: 214, type: !22)
!12058 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12053, file: !2793, line: 214, type: !22)
!12059 = !DILocation(line: 0, scope: !12053)
!12060 = !DILocation(line: 216, column: 1, scope: !12053)
!12061 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2793, file: !2793, line: 218, type: !12062, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !12064)
!12062 = !DISubroutineType(types: !12063)
!12063 = !{null, !1726, !120}
!12064 = !{!12065, !12066}
!12065 = !DILocalVariable(name: "buf", arg: 1, scope: !12061, file: !2793, line: 218, type: !1726)
!12066 = !DILocalVariable(name: "buflen", arg: 2, scope: !12061, file: !2793, line: 218, type: !120)
!12067 = !DILocation(line: 0, scope: !12061)
!12068 = !DILocation(line: 220, column: 1, scope: !12061)
!12069 = distinct !DISubprogram(name: "coredump_query", scope: !2793, file: !2793, line: 222, type: !12070, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !12072)
!12070 = !DISubroutineType(types: !12071)
!12071 = !{!103, !2792, !102}
!12072 = !{!12073, !12074}
!12073 = !DILocalVariable(name: "query_id", arg: 1, scope: !12069, file: !2793, line: 222, type: !2792)
!12074 = !DILocalVariable(name: "arg", arg: 2, scope: !12069, file: !2793, line: 222, type: !102)
!12075 = !DILocation(line: 0, scope: !12069)
!12076 = !DILocation(line: 224, column: 2, scope: !12069)
!12077 = distinct !DISubprogram(name: "coredump_cmd", scope: !2793, file: !2793, line: 227, type: !12078, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !12080)
!12078 = !DISubroutineType(types: !12079)
!12079 = !{!103, !2799, !102}
!12080 = !{!12081, !12082}
!12081 = !DILocalVariable(name: "query_id", arg: 1, scope: !12077, file: !2793, line: 227, type: !2799)
!12082 = !DILocalVariable(name: "arg", arg: 2, scope: !12077, file: !2793, line: 227, type: !102)
!12083 = !DILocation(line: 0, scope: !12077)
!12084 = !DILocation(line: 229, column: 2, scope: !12077)
!12085 = distinct !DISubprogram(name: "arch_system_halt", scope: !12086, file: !12086, line: 23, type: !6139, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !12087)
!12086 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12087 = !{!12088}
!12088 = !DILocalVariable(name: "reason", arg: 1, scope: !12085, file: !12086, line: 23, type: !32)
!12089 = !DILocation(line: 0, scope: !12085)
!12090 = !DILocation(line: 55, column: 2, scope: !12091, inlinedAt: !12095)
!12091 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6128, file: !6128, line: 42, type: !6129, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !12092)
!12092 = !{!12093, !12094}
!12093 = !DILocalVariable(name: "key", scope: !12091, file: !6128, line: 44, type: !32)
!12094 = !DILocalVariable(name: "tmp", scope: !12091, file: !6128, line: 53, type: !32)
!12095 = distinct !DILocation(line: 31, column: 8, scope: !12085)
!12096 = !{i64 2223876}
!12097 = !DILocation(line: 0, scope: !12091, inlinedAt: !12095)
!12098 = !DILocation(line: 32, column: 2, scope: !12085)
!12099 = !DILocation(line: 32, column: 2, scope: !12100)
!12100 = distinct !DILexicalBlock(scope: !12101, file: !12086, line: 32, column: 2)
!12101 = distinct !DILexicalBlock(scope: !12085, file: !12086, line: 32, column: 2)
!12102 = distinct !{!12102, !12103, !12104}
!12103 = !DILocation(line: 32, column: 2, scope: !12101)
!12104 = !DILocation(line: 34, column: 2, scope: !12101)
!12105 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12086, file: !12086, line: 39, type: !12106, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !12108)
!12106 = !DISubroutineType(types: !12107)
!12107 = !{null, !32, !11903}
!12108 = !{!12109, !12110}
!12109 = !DILocalVariable(name: "reason", arg: 1, scope: !12105, file: !12086, line: 39, type: !32)
!12110 = !DILocalVariable(name: "esf", arg: 2, scope: !12105, file: !12086, line: 40, type: !11903)
!12111 = !DILocation(line: 0, scope: !12105)
!12112 = !DILocation(line: 46, column: 2, scope: !12105)
!12113 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12086, file: !12086, line: 81, type: !6139, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !12114)
!12114 = !{!12115}
!12115 = !DILocalVariable(name: "reason", arg: 1, scope: !12113, file: !12086, line: 81, type: !32)
!12116 = !DILocation(line: 0, scope: !12113)
!12117 = !DILocation(line: 83, column: 2, scope: !12113)
!12118 = distinct !DISubprogram(name: "z_fatal_error", scope: !12086, file: !12086, line: 96, type: !12106, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !12119)
!12119 = !{!12120, !12121, !12122, !12123}
!12120 = !DILocalVariable(name: "reason", arg: 1, scope: !12118, file: !12086, line: 96, type: !32)
!12121 = !DILocalVariable(name: "esf", arg: 2, scope: !12118, file: !12086, line: 96, type: !11903)
!12122 = !DILocalVariable(name: "key", scope: !12118, file: !12086, line: 102, type: !32)
!12123 = !DILocalVariable(name: "thread", scope: !12118, file: !12086, line: 103, type: !11947)
!12124 = !DILocation(line: 0, scope: !12118)
!12125 = !DILocation(line: 55, column: 2, scope: !12091, inlinedAt: !12126)
!12126 = distinct !DILocation(line: 102, column: 21, scope: !12118)
!12127 = !DILocation(line: 0, scope: !12091, inlinedAt: !12126)
!12128 = !DILocation(line: 119, column: 11, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !12118, file: !12086, line: 119, column: 6)
!12130 = !DILocation(line: 119, column: 20, scope: !12129)
!12131 = !DILocation(line: 131, column: 2, scope: !12118)
!12132 = !DILocation(line: 151, column: 7, scope: !12133)
!12133 = distinct !DILexicalBlock(scope: !12134, file: !12086, line: 146, column: 32)
!12134 = distinct !DILexicalBlock(scope: !12118, file: !12086, line: 146, column: 6)
!12135 = !DILocation(line: 151, column: 21, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12133, file: !12086, line: 151, column: 7)
!12137 = !DILocation(line: 104, column: 4, scope: !12118)
!12138 = !DILocalVariable(name: "key", arg: 1, scope: !12139, file: !6128, line: 84, type: !32)
!12139 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6128, file: !6128, line: 84, type: !6139, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !12140)
!12140 = !{!12138}
!12141 = !DILocation(line: 0, scope: !12139, inlinedAt: !12142)
!12142 = distinct !DILocation(line: 186, column: 2, scope: !12118)
!12143 = !DILocation(line: 95, column: 2, scope: !12139, inlinedAt: !12142)
!12144 = !{i64 2224693}
!12145 = !DILocation(line: 189, column: 3, scope: !12146)
!12146 = distinct !DILexicalBlock(scope: !12147, file: !12086, line: 188, column: 41)
!12147 = distinct !DILexicalBlock(scope: !12118, file: !12086, line: 188, column: 6)
!12148 = !DILocation(line: 191, column: 1, scope: !12118)
!12149 = distinct !DISubprogram(name: "k_current_get", scope: !357, file: !357, line: 530, type: !12150, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !162)
!12150 = !DISubroutineType(types: !12151)
!12151 = !{!12152}
!12152 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !11947)
!12153 = !DILocation(line: 535, column: 9, scope: !12149)
!12154 = !DILocation(line: 535, column: 2, scope: !12149)
!12155 = distinct !DISubprogram(name: "k_thread_abort", scope: !3276, file: !3276, line: 188, type: !12156, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !12158)
!12156 = !DISubroutineType(types: !12157)
!12157 = !{null, !12152}
!12158 = !{!12159}
!12159 = !DILocalVariable(name: "thread", arg: 1, scope: !12155, file: !3276, line: 188, type: !12152)
!12160 = !DILocation(line: 0, scope: !12155)
!12161 = !DILocation(line: 197, column: 2, scope: !12162)
!12162 = distinct !DILexicalBlock(scope: !12155, file: !3276, line: 197, column: 2)
!12163 = !{i64 2154841638}
!12164 = !DILocation(line: 198, column: 2, scope: !12155)
!12165 = !DILocation(line: 199, column: 1, scope: !12155)
!12166 = distinct !DISubprogram(name: "z_current_get", scope: !3276, file: !3276, line: 173, type: !12150, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !162)
!12167 = !DILocation(line: 180, column: 2, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12166, file: !3276, line: 180, column: 2)
!12169 = !{i64 2154841570}
!12170 = !DILocation(line: 181, column: 9, scope: !12166)
!12171 = !DILocation(line: 181, column: 2, scope: !12166)
!12172 = distinct !DISubprogram(name: "z_early_memset", scope: !1693, file: !1693, line: 108, type: !12173, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !12175)
!12173 = !DISubroutineType(types: !12174)
!12174 = !{null, !102, !103, !120}
!12175 = !{!12176, !12177, !12178}
!12176 = !DILocalVariable(name: "dst", arg: 1, scope: !12172, file: !1693, line: 108, type: !102)
!12177 = !DILocalVariable(name: "c", arg: 2, scope: !12172, file: !1693, line: 108, type: !103)
!12178 = !DILocalVariable(name: "n", arg: 3, scope: !12172, file: !1693, line: 108, type: !120)
!12179 = !DILocation(line: 0, scope: !12172)
!12180 = !DILocation(line: 110, column: 9, scope: !12172)
!12181 = !DILocation(line: 111, column: 1, scope: !12172)
!12182 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1693, file: !1693, line: 121, type: !12183, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !12185)
!12183 = !DISubroutineType(types: !12184)
!12184 = !{null, !102, !13, !120}
!12185 = !{!12186, !12187, !12188}
!12186 = !DILocalVariable(name: "dst", arg: 1, scope: !12182, file: !1693, line: 121, type: !102)
!12187 = !DILocalVariable(name: "src", arg: 2, scope: !12182, file: !1693, line: 121, type: !13)
!12188 = !DILocalVariable(name: "n", arg: 3, scope: !12182, file: !1693, line: 121, type: !120)
!12189 = !DILocation(line: 0, scope: !12182)
!12190 = !DILocation(line: 123, column: 9, scope: !12182)
!12191 = !DILocation(line: 124, column: 1, scope: !12182)
!12192 = distinct !DISubprogram(name: "z_bss_zero", scope: !1693, file: !1693, line: 132, type: !2826, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !162)
!12193 = !DILocation(line: 143, column: 2, scope: !12192)
!12194 = !DILocation(line: 145, column: 2, scope: !12192)
!12195 = !DILocation(line: 168, column: 1, scope: !12192)
!12196 = distinct !DISubprogram(name: "z_init_cpu", scope: !1693, file: !1693, line: 372, type: !7944, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !12197)
!12197 = !{!12198}
!12198 = !DILocalVariable(name: "id", arg: 1, scope: !12196, file: !1693, line: 372, type: !103)
!12199 = !DILocation(line: 0, scope: !12196)
!12200 = !DILocation(line: 374, column: 2, scope: !12196)
!12201 = !DILocation(line: 375, column: 34, scope: !12196)
!12202 = !DILocation(line: 375, column: 19, scope: !12196)
!12203 = !DILocation(line: 375, column: 31, scope: !12196)
!12204 = !DILocation(line: 376, column: 24, scope: !12196)
!12205 = !DILocation(line: 376, column: 19, scope: !12196)
!12206 = !DILocation(line: 376, column: 22, scope: !12196)
!12207 = !DILocation(line: 378, column: 26, scope: !12196)
!12208 = !DILocation(line: 378, column: 4, scope: !12196)
!12209 = !DILocation(line: 378, column: 50, scope: !12196)
!12210 = !DILocation(line: 377, column: 19, scope: !12196)
!12211 = !DILocation(line: 377, column: 29, scope: !12196)
!12212 = !DILocation(line: 384, column: 1, scope: !12196)
!12213 = distinct !DISubprogram(name: "init_idle_thread", scope: !1693, file: !1693, line: 343, type: !7944, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !12214)
!12214 = !{!12215, !12216, !12217, !12220}
!12215 = !DILocalVariable(name: "i", arg: 1, scope: !12213, file: !1693, line: 343, type: !103)
!12216 = !DILocalVariable(name: "thread", scope: !12213, file: !1693, line: 345, type: !1786)
!12217 = !DILocalVariable(name: "stack", scope: !12213, file: !1693, line: 346, type: !12218)
!12218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12219, size: 32)
!12219 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3155, line: 44, baseType: !1900)
!12220 = !DILocalVariable(name: "tname", scope: !12213, file: !1693, line: 358, type: !1022)
!12221 = !DILocation(line: 0, scope: !12213)
!12222 = !DILocation(line: 345, column: 29, scope: !12213)
!12223 = !DILocation(line: 346, column: 28, scope: !12213)
!12224 = !DILocation(line: 362, column: 37, scope: !12213)
!12225 = !DILocation(line: 362, column: 36, scope: !12213)
!12226 = !DILocation(line: 361, column: 2, scope: !12213)
!12227 = !DILocation(line: 365, column: 2, scope: !12213)
!12228 = !DILocation(line: 370, column: 1, scope: !12213)
!12229 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1901, file: !1901, line: 331, type: !12230, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !12232)
!12230 = !DISubroutineType(types: !12231)
!12231 = !{!1022, !12218}
!12232 = !{!12233}
!12233 = !DILocalVariable(name: "sym", arg: 1, scope: !12229, file: !1901, line: 331, type: !12218)
!12234 = !DILocation(line: 0, scope: !12229)
!12235 = !DILocation(line: 333, column: 21, scope: !12229)
!12236 = !DILocation(line: 333, column: 2, scope: !12229)
!12237 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12238, file: !12238, line: 155, type: !12239, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !12241)
!12238 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12239 = !DISubroutineType(types: !12240)
!12240 = !{null, !1786}
!12241 = !{!12242}
!12242 = !DILocalVariable(name: "thread", arg: 1, scope: !12237, file: !12238, line: 155, type: !1786)
!12243 = !DILocation(line: 0, scope: !12237)
!12244 = !DILocation(line: 157, column: 15, scope: !12237)
!12245 = !DILocation(line: 157, column: 28, scope: !12237)
!12246 = !DILocation(line: 158, column: 1, scope: !12237)
!12247 = distinct !DISubprogram(name: "z_cstart", scope: !1693, file: !1693, line: 501, type: !2826, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !12248)
!12248 = !{!12249}
!12249 = !DILocalVariable(name: "dummy_thread", scope: !12247, file: !1693, line: 518, type: !1787)
!12250 = !DILocation(line: 507, column: 2, scope: !12247)
!12251 = !DILocation(line: 43, column: 14, scope: !12252, inlinedAt: !12256)
!12252 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12253, file: !12253, line: 40, type: !2826, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !12254)
!12253 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12254 = !{!12255}
!12255 = !DILocalVariable(name: "msp", scope: !12252, file: !12253, line: 42, type: !137)
!12256 = distinct !DILocation(line: 44, column: 2, scope: !12257, inlinedAt: !12259)
!12257 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12258, file: !12258, line: 42, type: !2826, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !162)
!12258 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12259 = distinct !DILocation(line: 510, column: 2, scope: !12247)
!12260 = !DILocation(line: 43, column: 3, scope: !12252, inlinedAt: !12256)
!12261 = !DILocation(line: 43, column: 60, scope: !12252, inlinedAt: !12256)
!12262 = !DILocation(line: 0, scope: !12252, inlinedAt: !12256)
!12263 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12264, file: !6302, line: 1153, type: !137)
!12264 = distinct !DISubprogram(name: "__set_MSP", scope: !6302, file: !6302, line: 1153, type: !6391, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !12265)
!12265 = !{!12263}
!12266 = !DILocation(line: 0, scope: !12264, inlinedAt: !12267)
!12267 = distinct !DILocation(line: 46, column: 2, scope: !12252, inlinedAt: !12256)
!12268 = !DILocation(line: 1155, column: 3, scope: !12264, inlinedAt: !12267)
!12269 = !{i64 3560994}
!12270 = !DILocation(line: 62, column: 11, scope: !12252, inlinedAt: !12256)
!12271 = !DILocation(line: 102, column: 2, scope: !12272, inlinedAt: !12273)
!12272 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7094, file: !7094, line: 97, type: !2826, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !162)
!12273 = distinct !DILocation(line: 45, column: 2, scope: !12257, inlinedAt: !12259)
!12274 = !DILocation(line: 108, column: 2, scope: !12272, inlinedAt: !12273)
!12275 = !DILocation(line: 112, column: 2, scope: !12272, inlinedAt: !12273)
!12276 = !DILocation(line: 113, column: 2, scope: !12272, inlinedAt: !12273)
!12277 = !DILocation(line: 114, column: 2, scope: !12272, inlinedAt: !12273)
!12278 = !DILocation(line: 116, column: 2, scope: !12272, inlinedAt: !12273)
!12279 = !DILocation(line: 123, column: 13, scope: !12272, inlinedAt: !12273)
!12280 = !DILocation(line: 46, column: 2, scope: !12257, inlinedAt: !12259)
!12281 = !DILocation(line: 47, column: 2, scope: !12257, inlinedAt: !12259)
!12282 = !DILocation(line: 174, column: 12, scope: !12283, inlinedAt: !12284)
!12283 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7094, file: !7094, line: 169, type: !2826, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !162)
!12284 = distinct !DILocation(line: 48, column: 2, scope: !12257, inlinedAt: !12259)
!12285 = !DILocation(line: 179, column: 12, scope: !12283, inlinedAt: !12284)
!12286 = !DILocation(line: 50, column: 2, scope: !12257, inlinedAt: !12259)
!12287 = !DILocation(line: 57, column: 2, scope: !12257, inlinedAt: !12259)
!12288 = !DILocation(line: 518, column: 2, scope: !12247)
!12289 = !DILocation(line: 518, column: 18, scope: !12247)
!12290 = !DILocation(line: 520, column: 2, scope: !12247)
!12291 = !DILocation(line: 523, column: 2, scope: !12247)
!12292 = !DILocation(line: 526, column: 2, scope: !12247)
!12293 = !DILocation(line: 527, column: 2, scope: !12247)
!12294 = !DILocation(line: 543, column: 24, scope: !12247)
!12295 = !DILocation(line: 543, column: 2, scope: !12247)
!12296 = !DILocation(line: 0, scope: !1920)
!12297 = !DILocation(line: 246, column: 15, scope: !1938)
!12298 = !DILocation(line: 246, column: 36, scope: !1937)
!12299 = !DILocation(line: 246, column: 2, scope: !1938)
!12300 = !DILocation(line: 247, column: 37, scope: !1936)
!12301 = !DILocation(line: 0, scope: !1936)
!12302 = !DILocation(line: 248, column: 19, scope: !1936)
!12303 = !DILocation(line: 248, column: 12, scope: !1936)
!12304 = !DILocation(line: 250, column: 11, scope: !12305)
!12305 = distinct !DILexicalBlock(scope: !1936, file: !1693, line: 250, column: 7)
!12306 = !DILocation(line: 250, column: 7, scope: !1936)
!12307 = !DILocation(line: 254, column: 11, scope: !12308)
!12308 = distinct !DILexicalBlock(scope: !12309, file: !1693, line: 254, column: 8)
!12309 = distinct !DILexicalBlock(scope: !12305, file: !1693, line: 250, column: 20)
!12310 = !DILocation(line: 254, column: 8, scope: !12309)
!12311 = !DILocation(line: 255, column: 9, scope: !12312)
!12312 = distinct !DILexicalBlock(scope: !12308, file: !1693, line: 254, column: 17)
!12313 = !DILocation(line: 258, column: 9, scope: !12312)
!12314 = !DILocation(line: 261, column: 28, scope: !12312)
!12315 = !DILocation(line: 261, column: 10, scope: !12312)
!12316 = !DILocation(line: 261, column: 17, scope: !12312)
!12317 = !DILocation(line: 261, column: 26, scope: !12312)
!12318 = !DILocation(line: 262, column: 4, scope: !12312)
!12319 = !DILocation(line: 263, column: 9, scope: !12309)
!12320 = !DILocation(line: 263, column: 16, scope: !12309)
!12321 = !DILocation(line: 263, column: 28, scope: !12309)
!12322 = !DILocation(line: 264, column: 3, scope: !12309)
!12323 = !DILocation(line: 246, column: 60, scope: !1937)
!12324 = distinct !{!12324, !12299, !12325}
!12325 = !DILocation(line: 265, column: 2, scope: !1938)
!12326 = !DILocation(line: 266, column: 1, scope: !1920)
!12327 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !402, file: !402, line: 1814, type: !6336, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !12328)
!12328 = !{!12329, !12330}
!12329 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12327, file: !402, line: 1814, type: !659)
!12330 = !DILocalVariable(name: "priority", arg: 2, scope: !12327, file: !402, line: 1814, type: !137)
!12331 = !DILocation(line: 0, scope: !12327)
!12332 = !DILocation(line: 1822, column: 48, scope: !12333)
!12333 = distinct !DILexicalBlock(scope: !12334, file: !402, line: 1821, column: 3)
!12334 = distinct !DILexicalBlock(scope: !12327, file: !402, line: 1816, column: 7)
!12335 = !DILocation(line: 1822, column: 32, scope: !12333)
!12336 = !DILocation(line: 1822, column: 40, scope: !12333)
!12337 = !DILocation(line: 1822, column: 5, scope: !12333)
!12338 = !DILocation(line: 1822, column: 46, scope: !12333)
!12339 = !DILocation(line: 1824, column: 1, scope: !12327)
!12340 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12258, file: !12258, line: 32, type: !2826, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!12341 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12342, file: !12342, line: 215, type: !12239, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !12343)
!12342 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12343 = !{!12344}
!12344 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12341, file: !12342, line: 215, type: !1786)
!12345 = !DILocation(line: 0, scope: !12341)
!12346 = !DILocation(line: 217, column: 21, scope: !12341)
!12347 = !DILocation(line: 217, column: 34, scope: !12341)
!12348 = !DILocation(line: 221, column: 21, scope: !12341)
!12349 = !DILocation(line: 221, column: 34, scope: !12341)
!12350 = !DILocation(line: 223, column: 27, scope: !12341)
!12351 = !DILocation(line: 223, column: 33, scope: !12341)
!12352 = !DILocation(line: 224, column: 27, scope: !12341)
!12353 = !DILocation(line: 224, column: 32, scope: !12341)
!12354 = !DILocation(line: 232, column: 16, scope: !12341)
!12355 = !DILocation(line: 232, column: 30, scope: !12341)
!12356 = !DILocation(line: 239, column: 24, scope: !12341)
!12357 = !DILocation(line: 240, column: 1, scope: !12341)
!12358 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1693, file: !1693, line: 399, type: !12359, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !12361)
!12359 = !DISubroutineType(types: !12360)
!12360 = !{!1022}
!12361 = !{!12362}
!12362 = !DILocalVariable(name: "stack_ptr", scope: !12358, file: !1693, line: 401, type: !1022)
!12363 = !DILocation(line: 404, column: 2, scope: !12358)
!12364 = !DILocation(line: 416, column: 24, scope: !12358)
!12365 = !DILocation(line: 418, column: 14, scope: !12358)
!12366 = !DILocation(line: 0, scope: !12358)
!12367 = !DILocation(line: 423, column: 2, scope: !12358)
!12368 = !DILocation(line: 424, column: 2, scope: !12358)
!12369 = !DILocation(line: 426, column: 2, scope: !12358)
!12370 = !DILocation(line: 428, column: 2, scope: !12358)
!12371 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1693, file: !1693, line: 432, type: !12372, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !12374)
!12372 = !DISubroutineType(types: !12373)
!12373 = !{null, !1022}
!12374 = !{!12375}
!12375 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12371, file: !1693, line: 432, type: !1022)
!12376 = !DILocation(line: 0, scope: !12371)
!12377 = !DILocation(line: 435, column: 2, scope: !12371)
!12378 = !DILocation(line: 445, column: 2, scope: !12371)
!12379 = distinct !DISubprogram(name: "bg_thread_main", scope: !1693, file: !1693, line: 277, type: !3157, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1689, retainedNodes: !12380)
!12380 = !{!12381, !12382, !12383}
!12381 = !DILocalVariable(name: "unused1", arg: 1, scope: !12379, file: !1693, line: 277, type: !102)
!12382 = !DILocalVariable(name: "unused2", arg: 2, scope: !12379, file: !1693, line: 277, type: !102)
!12383 = !DILocalVariable(name: "unused3", arg: 3, scope: !12379, file: !1693, line: 277, type: !102)
!12384 = !DILocation(line: 0, scope: !12379)
!12385 = !DILocation(line: 291, column: 20, scope: !12379)
!12386 = !DILocation(line: 293, column: 2, scope: !12379)
!12387 = !DILocation(line: 297, column: 2, scope: !12379)
!12388 = !DILocation(line: 305, column: 2, scope: !12379)
!12389 = !DILocation(line: 307, column: 2, scope: !12379)
!12390 = !DILocation(line: 330, column: 8, scope: !12379)
!12391 = !DILocation(line: 333, column: 34, scope: !12379)
!12392 = !DILocation(line: 339, column: 1, scope: !12379)
!12393 = distinct !DISubprogram(name: "k_thread_foreach", scope: !1947, file: !1947, line: 45, type: !12394, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12402)
!12394 = !DISubroutineType(types: !12395)
!12395 = !{null, !12396, !102}
!12396 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !357, line: 103, baseType: !12397)
!12397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12398, size: 32)
!12398 = !DISubroutineType(types: !12399)
!12399 = !{null, !12400, !102}
!12400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12401, size: 32)
!12401 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1952)
!12402 = !{!12403, !12404}
!12403 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12393, file: !1947, line: 45, type: !12396)
!12404 = !DILocalVariable(name: "user_data", arg: 2, scope: !12393, file: !1947, line: 45, type: !102)
!12405 = !DILocation(line: 0, scope: !12393)
!12406 = !DILocation(line: 71, column: 1, scope: !12393)
!12407 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !1947, file: !1947, line: 73, type: !12394, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12408)
!12408 = !{!12409, !12410}
!12409 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12407, file: !1947, line: 73, type: !12396)
!12410 = !DILocalVariable(name: "user_data", arg: 2, scope: !12407, file: !1947, line: 73, type: !102)
!12411 = !DILocation(line: 0, scope: !12407)
!12412 = !DILocation(line: 95, column: 1, scope: !12407)
!12413 = distinct !DISubprogram(name: "k_is_in_isr", scope: !1947, file: !1947, line: 97, type: !7095, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !162)
!12414 = !DILocation(line: 1031, column: 3, scope: !12415, inlinedAt: !12418)
!12415 = distinct !DISubprogram(name: "__get_IPSR", scope: !6302, file: !6302, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12416)
!12416 = !{!12417}
!12417 = !DILocalVariable(name: "result", scope: !12415, file: !6302, line: 1029, type: !137)
!12418 = distinct !DILocation(line: 48, column: 10, scope: !12419, inlinedAt: !12420)
!12419 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7094, file: !7094, line: 46, type: !7095, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !162)
!12420 = distinct !DILocation(line: 99, column: 9, scope: !12413)
!12421 = !{i64 3566645}
!12422 = !DILocation(line: 0, scope: !12415, inlinedAt: !12418)
!12423 = !DILocation(line: 48, column: 9, scope: !12419, inlinedAt: !12420)
!12424 = !DILocation(line: 99, column: 2, scope: !12413)
!12425 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !1947, file: !1947, line: 106, type: !2826, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !162)
!12426 = !DILocation(line: 108, column: 2, scope: !12425)
!12427 = !DILocation(line: 108, column: 17, scope: !12425)
!12428 = !DILocation(line: 108, column: 30, scope: !12425)
!12429 = !DILocation(line: 109, column: 1, scope: !12425)
!12430 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !1947, file: !1947, line: 116, type: !2826, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !162)
!12431 = !DILocation(line: 118, column: 2, scope: !12430)
!12432 = !DILocation(line: 118, column: 17, scope: !12430)
!12433 = !DILocation(line: 118, column: 30, scope: !12430)
!12434 = !DILocation(line: 119, column: 1, scope: !12430)
!12435 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !1947, file: !1947, line: 126, type: !7095, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !162)
!12436 = !DILocation(line: 128, column: 10, scope: !12435)
!12437 = !DILocation(line: 128, column: 25, scope: !12435)
!12438 = !DILocation(line: 128, column: 38, scope: !12435)
!12439 = !DILocation(line: 128, column: 53, scope: !12435)
!12440 = !DILocation(line: 128, column: 2, scope: !12435)
!12441 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !1947, file: !1947, line: 187, type: !12442, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12444)
!12442 = !DISubroutineType(types: !12443)
!12443 = !{!103, !1951, !199}
!12444 = !{!12445, !12446}
!12445 = !DILocalVariable(name: "thread", arg: 1, scope: !12441, file: !1947, line: 187, type: !1951)
!12446 = !DILocalVariable(name: "value", arg: 2, scope: !12441, file: !1947, line: 187, type: !199)
!12447 = !DILocation(line: 0, scope: !12441)
!12448 = !DILocation(line: 206, column: 2, scope: !12441)
!12449 = distinct !DISubprogram(name: "k_thread_name_get", scope: !1947, file: !1947, line: 238, type: !12450, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12452)
!12450 = !DISubroutineType(types: !12451)
!12451 = !{!199, !1951}
!12452 = !{!12453}
!12453 = !DILocalVariable(name: "thread", arg: 1, scope: !12449, file: !1947, line: 238, type: !1951)
!12454 = !DILocation(line: 0, scope: !12449)
!12455 = !DILocation(line: 244, column: 2, scope: !12449)
!12456 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !1947, file: !1947, line: 248, type: !12457, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12459)
!12457 = !DISubroutineType(types: !12458)
!12458 = !{!103, !1950, !1022, !120}
!12459 = !{!12460, !12461, !12462}
!12460 = !DILocalVariable(name: "thread", arg: 1, scope: !12456, file: !1947, line: 248, type: !1950)
!12461 = !DILocalVariable(name: "buf", arg: 2, scope: !12456, file: !1947, line: 248, type: !1022)
!12462 = !DILocalVariable(name: "size", arg: 3, scope: !12456, file: !1947, line: 248, type: !120)
!12463 = !DILocation(line: 0, scope: !12456)
!12464 = !DILocation(line: 257, column: 2, scope: !12456)
!12465 = !DILocation(line: 0, scope: !1946)
!12466 = !DILocation(line: 281, column: 11, scope: !12467)
!12467 = distinct !DILexicalBlock(scope: !1946, file: !1947, line: 281, column: 6)
!12468 = !DILocation(line: 281, column: 20, scope: !12467)
!12469 = !DILocation(line: 275, column: 45, scope: !1946)
!12470 = !DILocation(line: 285, column: 10, scope: !1946)
!12471 = !DILocation(line: 0, scope: !2067)
!12472 = !DILocation(line: 293, column: 39, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !2067, file: !1947, line: 293, column: 2)
!12474 = !DILocation(line: 293, column: 2, scope: !2067)
!12475 = !DILocation(line: 273, column: 14, scope: !1946)
!12476 = !DILocation(line: 309, column: 2, scope: !1946)
!12477 = !DILocation(line: 309, column: 11, scope: !1946)
!12478 = !DILocation(line: 311, column: 2, scope: !1946)
!12479 = !DILocation(line: 293, column: 26, scope: !12473)
!12480 = !DILocation(line: 294, column: 9, scope: !12481)
!12481 = distinct !DILexicalBlock(scope: !12473, file: !1947, line: 293, column: 54)
!12482 = !DILocation(line: 295, column: 21, scope: !12483)
!12483 = distinct !DILexicalBlock(scope: !12481, file: !1947, line: 295, column: 7)
!12484 = !DILocation(line: 295, column: 28, scope: !12483)
!12485 = !DILocation(line: 295, column: 7, scope: !12481)
!12486 = !DILocation(line: 299, column: 25, scope: !12481)
!12487 = !DILocation(line: 299, column: 41, scope: !12481)
!12488 = !DILocation(line: 300, column: 7, scope: !12481)
!12489 = !DILocation(line: 300, column: 26, scope: !12481)
!12490 = !DILocation(line: 299, column: 10, scope: !12481)
!12491 = !DILocation(line: 299, column: 7, scope: !12481)
!12492 = !DILocation(line: 302, column: 16, scope: !12481)
!12493 = !DILocation(line: 304, column: 20, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12481, file: !1947, line: 304, column: 7)
!12495 = !DILocation(line: 304, column: 7, scope: !12481)
!12496 = !DILocation(line: 305, column: 26, scope: !12497)
!12497 = distinct !DILexicalBlock(scope: !12494, file: !1947, line: 304, column: 26)
!12498 = !DILocation(line: 305, column: 42, scope: !12497)
!12499 = !DILocation(line: 305, column: 11, scope: !12497)
!12500 = !DILocation(line: 305, column: 8, scope: !12497)
!12501 = !DILocation(line: 306, column: 3, scope: !12497)
!12502 = !DILocation(line: 293, column: 50, scope: !12473)
!12503 = !DILocation(line: 312, column: 1, scope: !1946)
!12504 = distinct !DISubprogram(name: "copy_bytes", scope: !1947, file: !1947, line: 261, type: !12505, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12507)
!12505 = !DISubroutineType(types: !12506)
!12506 = !{!120, !1022, !120, !199, !120}
!12507 = !{!12508, !12509, !12510, !12511, !12512}
!12508 = !DILocalVariable(name: "dest", arg: 1, scope: !12504, file: !1947, line: 261, type: !1022)
!12509 = !DILocalVariable(name: "dest_size", arg: 2, scope: !12504, file: !1947, line: 261, type: !120)
!12510 = !DILocalVariable(name: "src", arg: 3, scope: !12504, file: !1947, line: 261, type: !199)
!12511 = !DILocalVariable(name: "src_size", arg: 4, scope: !12504, file: !1947, line: 261, type: !120)
!12512 = !DILocalVariable(name: "bytes_to_copy", scope: !12504, file: !1947, line: 263, type: !120)
!12513 = !DILocation(line: 0, scope: !12504)
!12514 = !DILocation(line: 265, column: 18, scope: !12504)
!12515 = !DILocation(line: 266, column: 2, scope: !12504)
!12516 = !DILocation(line: 268, column: 2, scope: !12504)
!12517 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !1947, file: !1947, line: 383, type: !12518, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12520)
!12518 = !DISubroutineType(types: !12519)
!12519 = !{null, !1951}
!12520 = !{!12521}
!12521 = !DILocalVariable(name: "thread", arg: 1, scope: !12517, file: !1947, line: 383, type: !1951)
!12522 = !DILocation(line: 0, scope: !12517)
!12523 = !DILocation(line: 387, column: 2, scope: !12517)
!12524 = !DILocation(line: 388, column: 1, scope: !12517)
!12525 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !1947, file: !1947, line: 528, type: !12526, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12533)
!12526 = !DISubroutineType(types: !12527)
!12527 = !{!1022, !1951, !12528, !120, !3154, !102, !102, !102, !103, !137, !199}
!12528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12529, size: 32)
!12529 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3155, line: 44, baseType: !12530)
!12530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1901, line: 47, size: 8, elements: !12531)
!12531 = !{!12532}
!12532 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12530, file: !1901, line: 48, baseType: !109, size: 8)
!12533 = !{!12534, !12535, !12536, !12537, !12538, !12539, !12540, !12541, !12542, !12543, !12544}
!12534 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12525, file: !1947, line: 528, type: !1951)
!12535 = !DILocalVariable(name: "stack", arg: 2, scope: !12525, file: !1947, line: 529, type: !12528)
!12536 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12525, file: !1947, line: 529, type: !120)
!12537 = !DILocalVariable(name: "entry", arg: 4, scope: !12525, file: !1947, line: 530, type: !3154)
!12538 = !DILocalVariable(name: "p1", arg: 5, scope: !12525, file: !1947, line: 531, type: !102)
!12539 = !DILocalVariable(name: "p2", arg: 6, scope: !12525, file: !1947, line: 531, type: !102)
!12540 = !DILocalVariable(name: "p3", arg: 7, scope: !12525, file: !1947, line: 531, type: !102)
!12541 = !DILocalVariable(name: "prio", arg: 8, scope: !12525, file: !1947, line: 532, type: !103)
!12542 = !DILocalVariable(name: "options", arg: 9, scope: !12525, file: !1947, line: 532, type: !137)
!12543 = !DILocalVariable(name: "name", arg: 10, scope: !12525, file: !1947, line: 532, type: !199)
!12544 = !DILocalVariable(name: "stack_ptr", scope: !12525, file: !1947, line: 534, type: !1022)
!12545 = !DILocation(line: 0, scope: !12525)
!12546 = !DILocation(line: 550, column: 28, scope: !12525)
!12547 = !DILocation(line: 550, column: 2, scope: !12525)
!12548 = !DILocation(line: 553, column: 34, scope: !12525)
!12549 = !DILocation(line: 553, column: 2, scope: !12525)
!12550 = !DILocation(line: 554, column: 14, scope: !12525)
!12551 = !DILocation(line: 564, column: 2, scope: !12525)
!12552 = !DILocation(line: 567, column: 14, scope: !12525)
!12553 = !DILocation(line: 567, column: 24, scope: !12525)
!12554 = !DILocation(line: 612, column: 7, scope: !12555)
!12555 = distinct !DILexicalBlock(scope: !12525, file: !1947, line: 612, column: 6)
!12556 = !DILocation(line: 612, column: 6, scope: !12525)
!12557 = !DILocation(line: 627, column: 40, scope: !12525)
!12558 = !DILocation(line: 637, column: 2, scope: !12525)
!12559 = !DILocation(line: 613, column: 15, scope: !12560)
!12560 = distinct !DILexicalBlock(scope: !12555, file: !1947, line: 612, column: 17)
!12561 = !DILocation(line: 613, column: 29, scope: !12560)
!12562 = !DILocation(line: 638, column: 1, scope: !12525)
!12563 = distinct !DISubprogram(name: "z_waitq_init", scope: !12564, file: !12564, line: 47, type: !12565, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12567)
!12564 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12565 = !DISubroutineType(types: !12566)
!12566 = !{null, !1982}
!12567 = !{!12568}
!12568 = !DILocalVariable(name: "w", arg: 1, scope: !12563, file: !12564, line: 47, type: !1982)
!12569 = !DILocation(line: 0, scope: !12563)
!12570 = !DILocation(line: 49, column: 21, scope: !12563)
!12571 = !DILocation(line: 49, column: 2, scope: !12563)
!12572 = !DILocation(line: 50, column: 1, scope: !12563)
!12573 = distinct !DISubprogram(name: "z_init_thread_base", scope: !1947, file: !1947, line: 791, type: !12574, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12577)
!12574 = !DISubroutineType(types: !12575)
!12575 = !{null, !12576, !103, !137, !32}
!12576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 32)
!12577 = !{!12578, !12579, !12580, !12581}
!12578 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12573, file: !1947, line: 791, type: !12576)
!12579 = !DILocalVariable(name: "priority", arg: 2, scope: !12573, file: !1947, line: 791, type: !103)
!12580 = !DILocalVariable(name: "initial_state", arg: 3, scope: !12573, file: !1947, line: 792, type: !137)
!12581 = !DILocalVariable(name: "options", arg: 4, scope: !12573, file: !1947, line: 792, type: !32)
!12582 = !DILocation(line: 0, scope: !12573)
!12583 = !DILocation(line: 795, column: 15, scope: !12573)
!12584 = !DILocation(line: 795, column: 25, scope: !12573)
!12585 = !DILocation(line: 796, column: 30, scope: !12573)
!12586 = !DILocation(line: 796, column: 15, scope: !12573)
!12587 = !DILocation(line: 796, column: 28, scope: !12573)
!12588 = !DILocation(line: 797, column: 30, scope: !12573)
!12589 = !DILocation(line: 797, column: 15, scope: !12573)
!12590 = !DILocation(line: 797, column: 28, scope: !12573)
!12591 = !DILocation(line: 799, column: 22, scope: !12573)
!12592 = !DILocation(line: 799, column: 15, scope: !12573)
!12593 = !DILocation(line: 799, column: 20, scope: !12573)
!12594 = !DILocation(line: 801, column: 15, scope: !12573)
!12595 = !DILocation(line: 801, column: 28, scope: !12573)
!12596 = !DILocation(line: 814, column: 2, scope: !12573)
!12597 = !DILocation(line: 815, column: 1, scope: !12573)
!12598 = distinct !DISubprogram(name: "setup_thread_stack", scope: !1947, file: !1947, line: 449, type: !12599, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12601)
!12599 = !DISubroutineType(types: !12600)
!12600 = !{!1022, !1951, !12528, !120}
!12601 = !{!12602, !12603, !12604, !12605, !12606, !12607, !12608, !12609}
!12602 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12598, file: !1947, line: 449, type: !1951)
!12603 = !DILocalVariable(name: "stack", arg: 2, scope: !12598, file: !1947, line: 450, type: !12528)
!12604 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12598, file: !1947, line: 450, type: !120)
!12605 = !DILocalVariable(name: "stack_obj_size", scope: !12598, file: !1947, line: 452, type: !120)
!12606 = !DILocalVariable(name: "stack_buf_size", scope: !12598, file: !1947, line: 452, type: !120)
!12607 = !DILocalVariable(name: "stack_ptr", scope: !12598, file: !1947, line: 453, type: !1022)
!12608 = !DILocalVariable(name: "stack_buf_start", scope: !12598, file: !1947, line: 453, type: !1022)
!12609 = !DILocalVariable(name: "delta", scope: !12598, file: !1947, line: 454, type: !120)
!12610 = !DILocation(line: 0, scope: !12598)
!12611 = !DILocation(line: 465, column: 20, scope: !12612)
!12612 = distinct !DILexicalBlock(scope: !12598, file: !1947, line: 463, column: 2)
!12613 = !DILocation(line: 466, column: 21, scope: !12612)
!12614 = !DILocation(line: 473, column: 28, scope: !12598)
!12615 = !DILocation(line: 514, column: 33, scope: !12598)
!12616 = !DILocation(line: 514, column: 25, scope: !12598)
!12617 = !DILocation(line: 514, column: 31, scope: !12598)
!12618 = !DILocation(line: 515, column: 25, scope: !12598)
!12619 = !DILocation(line: 515, column: 30, scope: !12598)
!12620 = !DILocation(line: 516, column: 25, scope: !12598)
!12621 = !DILocation(line: 516, column: 31, scope: !12598)
!12622 = !DILocation(line: 520, column: 2, scope: !12598)
!12623 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1901, file: !1901, line: 331, type: !12624, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12626)
!12624 = !DISubroutineType(types: !12625)
!12625 = !{!1022, !12528}
!12626 = !{!12627}
!12627 = !DILocalVariable(name: "sym", arg: 1, scope: !12623, file: !1901, line: 331, type: !12528)
!12628 = !DILocation(line: 0, scope: !12623)
!12629 = !DILocation(line: 333, column: 21, scope: !12623)
!12630 = !DILocation(line: 333, column: 2, scope: !12623)
!12631 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !12632, file: !12632, line: 40, type: !12633, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12635)
!12632 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12633 = !DISubroutineType(types: !12634)
!12634 = !{null, !12576}
!12635 = !{!12636}
!12636 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12631, file: !12632, line: 40, type: !12576)
!12637 = !DILocation(line: 0, scope: !12631)
!12638 = !DILocation(line: 42, column: 31, scope: !12631)
!12639 = !DILocation(line: 42, column: 2, scope: !12631)
!12640 = !DILocation(line: 43, column: 1, scope: !12631)
!12641 = distinct !DISubprogram(name: "z_init_timeout", scope: !12632, file: !12632, line: 25, type: !2008, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12642)
!12642 = !{!12643}
!12643 = !DILocalVariable(name: "to", arg: 1, scope: !12641, file: !12632, line: 25, type: !2010)
!12644 = !DILocation(line: 0, scope: !12641)
!12645 = !DILocation(line: 27, column: 22, scope: !12641)
!12646 = !DILocation(line: 27, column: 2, scope: !12641)
!12647 = !DILocation(line: 28, column: 1, scope: !12641)
!12648 = distinct !DISubprogram(name: "sys_dnode_init", scope: !273, file: !273, line: 211, type: !12649, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12651)
!12649 = !DISubroutineType(types: !12650)
!12650 = !{null, !2054}
!12651 = !{!12652}
!12652 = !DILocalVariable(name: "node", arg: 1, scope: !12648, file: !273, line: 211, type: !2054)
!12653 = !DILocation(line: 0, scope: !12648)
!12654 = !DILocation(line: 213, column: 8, scope: !12648)
!12655 = !DILocation(line: 213, column: 13, scope: !12648)
!12656 = !DILocation(line: 214, column: 8, scope: !12648)
!12657 = !DILocation(line: 214, column: 13, scope: !12648)
!12658 = !DILocation(line: 215, column: 1, scope: !12648)
!12659 = distinct !DISubprogram(name: "sys_dlist_init", scope: !273, file: !273, line: 197, type: !12660, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12663)
!12660 = !DISubroutineType(types: !12661)
!12661 = !{null, !12662}
!12662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 32)
!12663 = !{!12664}
!12664 = !DILocalVariable(name: "list", arg: 1, scope: !12659, file: !273, line: 197, type: !12662)
!12665 = !DILocation(line: 0, scope: !12659)
!12666 = !DILocation(line: 199, column: 8, scope: !12659)
!12667 = !DILocation(line: 199, column: 13, scope: !12659)
!12668 = !DILocation(line: 200, column: 8, scope: !12659)
!12669 = !DILocation(line: 200, column: 13, scope: !12659)
!12670 = !DILocation(line: 201, column: 1, scope: !12659)
!12671 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !1947, file: !1947, line: 641, type: !12672, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12678)
!12672 = !DISubroutineType(types: !12673)
!12673 = !{!1950, !1951, !12528, !120, !3154, !102, !102, !102, !103, !137, !12674}
!12674 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1432, line: 67, baseType: !12675)
!12675 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1432, line: 65, size: 64, elements: !12676)
!12676 = !{!12677}
!12677 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12675, file: !1432, line: 66, baseType: !1431, size: 64)
!12678 = !{!12679, !12680, !12681, !12682, !12683, !12684, !12685, !12686, !12687, !12688}
!12679 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12671, file: !1947, line: 641, type: !1951)
!12680 = !DILocalVariable(name: "stack", arg: 2, scope: !12671, file: !1947, line: 642, type: !12528)
!12681 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12671, file: !1947, line: 643, type: !120)
!12682 = !DILocalVariable(name: "entry", arg: 4, scope: !12671, file: !1947, line: 643, type: !3154)
!12683 = !DILocalVariable(name: "p1", arg: 5, scope: !12671, file: !1947, line: 644, type: !102)
!12684 = !DILocalVariable(name: "p2", arg: 6, scope: !12671, file: !1947, line: 644, type: !102)
!12685 = !DILocalVariable(name: "p3", arg: 7, scope: !12671, file: !1947, line: 644, type: !102)
!12686 = !DILocalVariable(name: "prio", arg: 8, scope: !12671, file: !1947, line: 645, type: !103)
!12687 = !DILocalVariable(name: "options", arg: 9, scope: !12671, file: !1947, line: 645, type: !137)
!12688 = !DILocalVariable(name: "delay", arg: 10, scope: !12671, file: !1947, line: 645, type: !12674)
!12689 = !DILocation(line: 0, scope: !12671)
!12690 = !DILocation(line: 649, column: 2, scope: !12671)
!12691 = !DILocation(line: 652, column: 7, scope: !12692)
!12692 = distinct !DILexicalBlock(scope: !12671, file: !1947, line: 652, column: 6)
!12693 = !DILocation(line: 652, column: 6, scope: !12671)
!12694 = !DILocation(line: 653, column: 3, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12692, file: !1947, line: 652, column: 39)
!12696 = !DILocation(line: 654, column: 2, scope: !12695)
!12697 = !DILocation(line: 656, column: 2, scope: !12671)
!12698 = distinct !DISubprogram(name: "schedule_new_thread", scope: !1947, file: !1947, line: 401, type: !12699, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12701)
!12699 = !DISubroutineType(types: !12700)
!12700 = !{null, !1951, !12674}
!12701 = !{!12702, !12703}
!12702 = !DILocalVariable(name: "thread", arg: 1, scope: !12698, file: !1947, line: 401, type: !1951)
!12703 = !DILocalVariable(name: "delay", arg: 2, scope: !12698, file: !1947, line: 401, type: !12674)
!12704 = !DILocation(line: 0, scope: !12698)
!12705 = !DILocation(line: 404, column: 6, scope: !12706)
!12706 = distinct !DILexicalBlock(scope: !12698, file: !1947, line: 404, column: 6)
!12707 = !DILocation(line: 404, column: 6, scope: !12698)
!12708 = !DILocation(line: 405, column: 3, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !12706, file: !1947, line: 404, column: 38)
!12710 = !DILocation(line: 406, column: 2, scope: !12709)
!12711 = !DILocation(line: 407, column: 3, scope: !12712)
!12712 = distinct !DILexicalBlock(scope: !12706, file: !1947, line: 406, column: 9)
!12713 = !DILocation(line: 413, column: 1, scope: !12698)
!12714 = distinct !DISubprogram(name: "k_thread_start", scope: !3276, file: !3276, line: 205, type: !12715, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12717)
!12715 = !DISubroutineType(types: !12716)
!12716 = !{null, !1950}
!12717 = !{!12718}
!12718 = !DILocalVariable(name: "thread", arg: 1, scope: !12714, file: !3276, line: 205, type: !1950)
!12719 = !DILocation(line: 0, scope: !12714)
!12720 = !DILocation(line: 214, column: 2, scope: !12721)
!12721 = distinct !DILexicalBlock(scope: !12714, file: !3276, line: 214, column: 2)
!12722 = !{i64 2154866862}
!12723 = !DILocation(line: 215, column: 2, scope: !12714)
!12724 = !DILocation(line: 216, column: 1, scope: !12714)
!12725 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12632, file: !12632, line: 47, type: !12699, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12726)
!12726 = !{!12727, !12728}
!12727 = !DILocalVariable(name: "thread", arg: 1, scope: !12725, file: !12632, line: 47, type: !1951)
!12728 = !DILocalVariable(name: "ticks", arg: 2, scope: !12725, file: !12632, line: 47, type: !12674)
!12729 = !DILocation(line: 0, scope: !12725)
!12730 = !DILocation(line: 49, column: 30, scope: !12725)
!12731 = !DILocation(line: 49, column: 2, scope: !12725)
!12732 = !DILocation(line: 50, column: 1, scope: !12725)
!12733 = distinct !DISubprogram(name: "z_init_static_threads", scope: !1947, file: !1947, line: 748, type: !2826, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12734)
!12734 = !{!12735, !12753}
!12735 = !DILocalVariable(name: "thread_data", scope: !12736, file: !1947, line: 750, type: !12737)
!12736 = distinct !DILexicalBlock(scope: !12733, file: !1947, line: 750, column: 2)
!12737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12738, size: 32)
!12738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !357, line: 620, size: 384, elements: !12739)
!12739 = !{!12740, !12741, !12742, !12743, !12744, !12745, !12746, !12747, !12748, !12749, !12750, !12752}
!12740 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !12738, file: !357, line: 621, baseType: !1951, size: 32)
!12741 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !12738, file: !357, line: 622, baseType: !12528, size: 32, offset: 32)
!12742 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !12738, file: !357, line: 623, baseType: !32, size: 32, offset: 64)
!12743 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !12738, file: !357, line: 624, baseType: !3154, size: 32, offset: 96)
!12744 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !12738, file: !357, line: 625, baseType: !102, size: 32, offset: 128)
!12745 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !12738, file: !357, line: 626, baseType: !102, size: 32, offset: 160)
!12746 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !12738, file: !357, line: 627, baseType: !102, size: 32, offset: 192)
!12747 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !12738, file: !357, line: 628, baseType: !103, size: 32, offset: 224)
!12748 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !12738, file: !357, line: 629, baseType: !137, size: 32, offset: 256)
!12749 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !12738, file: !357, line: 630, baseType: !633, size: 32, offset: 288)
!12750 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !12738, file: !357, line: 631, baseType: !12751, size: 32, offset: 320)
!12751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2826, size: 32)
!12752 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !12738, file: !357, line: 632, baseType: !199, size: 32, offset: 352)
!12753 = !DILocalVariable(name: "thread_data", scope: !12754, file: !1947, line: 781, type: !12737)
!12754 = distinct !DILexicalBlock(scope: !12733, file: !1947, line: 781, column: 2)
!12755 = !DILocation(line: 0, scope: !12736)
!12756 = !DILocation(line: 750, column: 2, scope: !12736)
!12757 = !DILocation(line: 780, column: 2, scope: !12733)
!12758 = !DILocation(line: 0, scope: !12754)
!12759 = !DILocation(line: 781, column: 2, scope: !12754)
!12760 = !DILocation(line: 752, column: 17, scope: !12761)
!12761 = distinct !DILexicalBlock(scope: !12762, file: !1947, line: 750, column: 38)
!12762 = distinct !DILexicalBlock(scope: !12736, file: !1947, line: 750, column: 2)
!12763 = !DILocation(line: 753, column: 17, scope: !12761)
!12764 = !DILocation(line: 754, column: 17, scope: !12761)
!12765 = !DILocation(line: 755, column: 17, scope: !12761)
!12766 = !DILocation(line: 756, column: 17, scope: !12761)
!12767 = !DILocation(line: 757, column: 17, scope: !12761)
!12768 = !DILocation(line: 758, column: 17, scope: !12761)
!12769 = !DILocation(line: 759, column: 17, scope: !12761)
!12770 = !DILocation(line: 760, column: 17, scope: !12761)
!12771 = !DILocation(line: 751, column: 3, scope: !12761)
!12772 = !DILocation(line: 763, column: 16, scope: !12761)
!12773 = !DILocation(line: 763, column: 29, scope: !12761)
!12774 = !DILocation(line: 763, column: 39, scope: !12761)
!12775 = !DILocation(line: 750, column: 2, scope: !12762)
!12776 = !DILocation(line: 750, column: 2, scope: !12777)
!12777 = distinct !DILexicalBlock(scope: !12762, file: !1947, line: 750, column: 2)
!12778 = distinct !{!12778, !12756, !12779}
!12779 = !DILocation(line: 764, column: 2, scope: !12736)
!12780 = !DILocation(line: 787, column: 2, scope: !12733)
!12781 = !DILocation(line: 788, column: 1, scope: !12733)
!12782 = !DILocation(line: 782, column: 20, scope: !12783)
!12783 = distinct !DILexicalBlock(scope: !12784, file: !1947, line: 782, column: 7)
!12784 = distinct !DILexicalBlock(scope: !12785, file: !1947, line: 781, column: 38)
!12785 = distinct !DILexicalBlock(scope: !12754, file: !1947, line: 781, column: 2)
!12786 = !DILocation(line: 782, column: 31, scope: !12783)
!12787 = !DILocation(line: 782, column: 7, scope: !12784)
!12788 = !DILocation(line: 783, column: 37, scope: !12789)
!12789 = distinct !DILexicalBlock(scope: !12783, file: !1947, line: 782, column: 51)
!12790 = !DILocation(line: 784, column: 10, scope: !12789)
!12791 = !DILocation(line: 783, column: 4, scope: !12789)
!12792 = !DILocation(line: 785, column: 3, scope: !12789)
!12793 = !DILocation(line: 781, column: 2, scope: !12785)
!12794 = !DILocation(line: 781, column: 2, scope: !12795)
!12795 = distinct !DILexicalBlock(scope: !12785, file: !1947, line: 781, column: 2)
!12796 = distinct !{!12796, !12759, !12797}
!12797 = !DILocation(line: 786, column: 2, scope: !12754)
!12798 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !12799, file: !12799, line: 403, type: !12800, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12802)
!12799 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12800 = !DISubroutineType(types: !12801)
!12801 = !{!163, !163}
!12802 = !{!12803}
!12803 = !DILocalVariable(name: "t", arg: 1, scope: !12798, file: !12799, line: 403, type: !163)
!12804 = !DILocation(line: 0, scope: !12798)
!12805 = !DILocalVariable(name: "t", arg: 1, scope: !12806, file: !12799, line: 102, type: !163)
!12806 = distinct !DISubprogram(name: "z_tmcvt", scope: !12799, file: !12799, line: 102, type: !12807, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12809)
!12807 = !DISubroutineType(types: !12808)
!12808 = !{!163, !163, !137, !137, !211, !211, !211, !211}
!12809 = !{!12805, !12810, !12811, !12812, !12813, !12814, !12815, !12816, !12817, !12818, !12819}
!12810 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12806, file: !12799, line: 102, type: !137)
!12811 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12806, file: !12799, line: 103, type: !137)
!12812 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12806, file: !12799, line: 103, type: !211)
!12813 = !DILocalVariable(name: "result32", arg: 5, scope: !12806, file: !12799, line: 104, type: !211)
!12814 = !DILocalVariable(name: "round_up", arg: 6, scope: !12806, file: !12799, line: 104, type: !211)
!12815 = !DILocalVariable(name: "round_off", arg: 7, scope: !12806, file: !12799, line: 105, type: !211)
!12816 = !DILocalVariable(name: "mul_ratio", scope: !12806, file: !12799, line: 107, type: !211)
!12817 = !DILocalVariable(name: "div_ratio", scope: !12806, file: !12799, line: 109, type: !211)
!12818 = !DILocalVariable(name: "off", scope: !12806, file: !12799, line: 116, type: !163)
!12819 = !DILocalVariable(name: "rdivisor", scope: !12820, file: !12799, line: 119, type: !137)
!12820 = distinct !DILexicalBlock(scope: !12821, file: !12799, line: 118, column: 18)
!12821 = distinct !DILexicalBlock(scope: !12806, file: !12799, line: 118, column: 6)
!12822 = !DILocation(line: 0, scope: !12806, inlinedAt: !12823)
!12823 = distinct !DILocation(line: 406, column: 9, scope: !12798)
!12824 = !DILocation(line: 145, column: 13, scope: !12825, inlinedAt: !12823)
!12825 = distinct !DILexicalBlock(scope: !12826, file: !12799, line: 144, column: 10)
!12826 = distinct !DILexicalBlock(scope: !12827, file: !12799, line: 142, column: 7)
!12827 = distinct !DILexicalBlock(scope: !12828, file: !12799, line: 141, column: 24)
!12828 = distinct !DILexicalBlock(scope: !12829, file: !12799, line: 141, column: 13)
!12829 = distinct !DILexicalBlock(scope: !12806, file: !12799, line: 134, column: 6)
!12830 = !DILocation(line: 406, column: 2, scope: !12798)
!12831 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !1947, file: !1947, line: 817, type: !3152, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12832)
!12832 = !{!12833, !12834, !12835, !12836}
!12833 = !DILocalVariable(name: "entry", arg: 1, scope: !12831, file: !1947, line: 817, type: !3154)
!12834 = !DILocalVariable(name: "p1", arg: 2, scope: !12831, file: !1947, line: 818, type: !102)
!12835 = !DILocalVariable(name: "p2", arg: 3, scope: !12831, file: !1947, line: 818, type: !102)
!12836 = !DILocalVariable(name: "p3", arg: 4, scope: !12831, file: !1947, line: 818, type: !102)
!12837 = !DILocation(line: 0, scope: !12831)
!12838 = !DILocation(line: 822, column: 2, scope: !12831)
!12839 = !DILocation(line: 822, column: 17, scope: !12831)
!12840 = !DILocation(line: 822, column: 30, scope: !12831)
!12841 = !DILocation(line: 823, column: 2, scope: !12831)
!12842 = !DILocation(line: 845, column: 2, scope: !12831)
!12843 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !1947, file: !1947, line: 888, type: !12844, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12846)
!12844 = !DISubroutineType(types: !12845)
!12845 = !{!103, !1951}
!12846 = !{!12847}
!12847 = !DILocalVariable(name: "thread", arg: 1, scope: !12843, file: !1947, line: 888, type: !1951)
!12848 = !DILocation(line: 0, scope: !12843)
!12849 = !DILocation(line: 893, column: 2, scope: !12843)
!12850 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !1947, file: !1947, line: 897, type: !12851, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12853)
!12851 = !DISubroutineType(types: !12852)
!12852 = !{!103, !1951, !32}
!12853 = !{!12854, !12855}
!12854 = !DILocalVariable(name: "thread", arg: 1, scope: !12850, file: !1947, line: 897, type: !1951)
!12855 = !DILocalVariable(name: "options", arg: 2, scope: !12850, file: !1947, line: 897, type: !32)
!12856 = !DILocation(line: 0, scope: !12850)
!12857 = !DILocation(line: 902, column: 2, scope: !12850)
!12858 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !1947, file: !1947, line: 1072, type: !12859, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12864)
!12859 = !DISubroutineType(types: !12860)
!12860 = !{!103, !1950, !12861}
!12861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12862, size: 32)
!12862 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !263, line: 234, baseType: !12863)
!12863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !263, line: 192, elements: !162)
!12864 = !{!12865, !12866}
!12865 = !DILocalVariable(name: "thread", arg: 1, scope: !12858, file: !1947, line: 1072, type: !1950)
!12866 = !DILocalVariable(name: "stats", arg: 2, scope: !12858, file: !1947, line: 1073, type: !12861)
!12867 = !DILocation(line: 0, scope: !12858)
!12868 = !DILocation(line: 1075, column: 14, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !12858, file: !1947, line: 1075, column: 6)
!12870 = !DILocation(line: 1075, column: 23, scope: !12869)
!12871 = !DILocation(line: 1086, column: 1, scope: !12858)
!12872 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !1947, file: !1947, line: 1088, type: !12873, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !12875)
!12873 = !DISubroutineType(types: !12874)
!12874 = !{!103, !12861}
!12875 = !{!12876}
!12876 = !DILocalVariable(name: "stats", arg: 1, scope: !12872, file: !1947, line: 1088, type: !12861)
!12877 = !DILocation(line: 0, scope: !12872)
!12878 = !DILocation(line: 1094, column: 12, scope: !12879)
!12879 = distinct !DILexicalBlock(scope: !12872, file: !1947, line: 1094, column: 6)
!12880 = !DILocation(line: 1120, column: 1, scope: !12872)
!12881 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !12882, file: !12882, line: 20, type: !2826, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2807, retainedNodes: !162)
!12882 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12883 = !DILocation(line: 30, column: 2, scope: !12881)
!12884 = !DILocation(line: 31, column: 1, scope: !12881)
!12885 = distinct !DISubprogram(name: "idle", scope: !12882, file: !12882, line: 33, type: !3157, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2807, retainedNodes: !12886)
!12886 = !{!12887, !12888, !12889}
!12887 = !DILocalVariable(name: "unused1", arg: 1, scope: !12885, file: !12882, line: 33, type: !102)
!12888 = !DILocalVariable(name: "unused2", arg: 2, scope: !12885, file: !12882, line: 33, type: !102)
!12889 = !DILocalVariable(name: "unused3", arg: 3, scope: !12885, file: !12882, line: 33, type: !102)
!12890 = !DILocation(line: 0, scope: !12885)
!12891 = !DILocation(line: 41, column: 2, scope: !12885)
!12892 = !DILocation(line: 55, column: 2, scope: !12893, inlinedAt: !12897)
!12893 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6128, file: !6128, line: 42, type: !6129, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2807, retainedNodes: !12894)
!12894 = !{!12895, !12896}
!12895 = !DILocalVariable(name: "key", scope: !12893, file: !6128, line: 44, type: !32)
!12896 = !DILocalVariable(name: "tmp", scope: !12893, file: !6128, line: 53, type: !32)
!12897 = distinct !DILocation(line: 62, column: 10, scope: !12898)
!12898 = distinct !DILexicalBlock(scope: !12885, file: !12882, line: 41, column: 15)
!12899 = !{i64 2222218}
!12900 = !DILocation(line: 0, scope: !12893, inlinedAt: !12897)
!12901 = !DILocation(line: 86, column: 3, scope: !12898)
!12902 = distinct !{!12902, !12891, !12903}
!12903 = !DILocation(line: 105, column: 2, scope: !12885)
!12904 = distinct !DISubprogram(name: "k_cpu_idle", scope: !357, file: !357, line: 5627, type: !2826, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2807, retainedNodes: !162)
!12905 = !DILocation(line: 5629, column: 2, scope: !12904)
!12906 = !DILocation(line: 5630, column: 1, scope: !12904)
!12907 = !DISubprogram(name: "arch_cpu_idle", scope: !3155, file: !3155, line: 167, type: !2826, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!12908 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2179, file: !2179, line: 93, type: !12909, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !12911)
!12909 = !DISubroutineType(types: !12910)
!12910 = !{!633, !2074, !2074}
!12911 = !{!12912, !12913, !12914, !12915}
!12912 = !DILocalVariable(name: "thread_1", arg: 1, scope: !12908, file: !2179, line: 93, type: !2074)
!12913 = !DILocalVariable(name: "thread_2", arg: 2, scope: !12908, file: !2179, line: 94, type: !2074)
!12914 = !DILocalVariable(name: "b1", scope: !12908, file: !2179, line: 97, type: !633)
!12915 = !DILocalVariable(name: "b2", scope: !12908, file: !2179, line: 98, type: !633)
!12916 = !DILocation(line: 0, scope: !12908)
!12917 = !DILocation(line: 97, column: 30, scope: !12908)
!12918 = !DILocation(line: 98, column: 30, scope: !12908)
!12919 = !DILocation(line: 100, column: 9, scope: !12920)
!12920 = distinct !DILexicalBlock(scope: !12908, file: !2179, line: 100, column: 6)
!12921 = !DILocation(line: 100, column: 6, scope: !12908)
!12922 = !DILocation(line: 125, column: 1, scope: !12908)
!12923 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2179, file: !2179, line: 428, type: !12924, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !12926)
!12924 = !DISubroutineType(types: !12925)
!12925 = !{null, !2074}
!12926 = !{!12927}
!12927 = !DILocalVariable(name: "curr", arg: 1, scope: !12923, file: !2179, line: 428, type: !2074)
!12928 = !DILocation(line: 0, scope: !12923)
!12929 = !DILocation(line: 434, column: 6, scope: !12930)
!12930 = distinct !DILexicalBlock(scope: !12923, file: !2179, line: 434, column: 6)
!12931 = !DILocation(line: 434, column: 23, scope: !12930)
!12932 = !DILocation(line: 434, column: 6, scope: !12923)
!12933 = !DILocation(line: 435, column: 50, scope: !12934)
!12934 = distinct !DILexicalBlock(scope: !12930, file: !2179, line: 434, column: 29)
!12935 = !DILocation(line: 435, column: 48, scope: !12934)
!12936 = !DILocation(line: 435, column: 29, scope: !12934)
!12937 = !DILocation(line: 436, column: 24, scope: !12934)
!12938 = !DILocation(line: 436, column: 3, scope: !12934)
!12939 = !DILocation(line: 437, column: 2, scope: !12934)
!12940 = !DILocation(line: 438, column: 1, scope: !12923)
!12941 = distinct !DISubprogram(name: "slice_time", scope: !2179, file: !2179, line: 407, type: !12942, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !12944)
!12942 = !DISubroutineType(types: !12943)
!12943 = !{!103, !2074}
!12944 = !{!12945, !12946}
!12945 = !DILocalVariable(name: "curr", arg: 1, scope: !12941, file: !2179, line: 407, type: !2074)
!12946 = !DILocalVariable(name: "ret", scope: !12941, file: !2179, line: 409, type: !103)
!12947 = !DILocation(line: 0, scope: !12941)
!12948 = !DILocation(line: 409, column: 12, scope: !12941)
!12949 = !DILocation(line: 416, column: 2, scope: !12941)
!12950 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2179, file: !2179, line: 440, type: !12951, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !12953)
!12951 = !DISubroutineType(types: !12952)
!12952 = !{null, !633, !103}
!12953 = !{!12954, !12955, !12956, !12962}
!12954 = !DILocalVariable(name: "slice", arg: 1, scope: !12950, file: !2179, line: 440, type: !633)
!12955 = !DILocalVariable(name: "prio", arg: 2, scope: !12950, file: !2179, line: 440, type: !103)
!12956 = !DILocalVariable(name: "__i", scope: !12957, file: !2179, line: 442, type: !12958)
!12957 = distinct !DILexicalBlock(scope: !12950, file: !2179, line: 442, column: 2)
!12958 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !368, line: 106, baseType: !12959)
!12959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !368, line: 32, size: 32, elements: !12960)
!12960 = !{!12961}
!12961 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12959, file: !368, line: 33, baseType: !103, size: 32)
!12962 = !DILocalVariable(name: "__key", scope: !12957, file: !2179, line: 442, type: !12958)
!12963 = !DILocation(line: 0, scope: !12950)
!12964 = !DILocation(line: 0, scope: !12957)
!12965 = !DILocalVariable(name: "l", arg: 1, scope: !12966, file: !368, line: 136, type: !12969)
!12966 = distinct !DISubprogram(name: "k_spin_lock", scope: !368, file: !368, line: 136, type: !12967, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !12970)
!12967 = !DISubroutineType(types: !12968)
!12968 = !{!12958, !12969}
!12969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 32)
!12970 = !{!12965, !12971}
!12971 = !DILocalVariable(name: "k", scope: !12966, file: !368, line: 139, type: !12958)
!12972 = !DILocation(line: 0, scope: !12966, inlinedAt: !12973)
!12973 = distinct !DILocation(line: 442, column: 2, scope: !12957)
!12974 = !DILocation(line: 55, column: 2, scope: !12975, inlinedAt: !12979)
!12975 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6128, file: !6128, line: 42, type: !6129, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !12976)
!12976 = !{!12977, !12978}
!12977 = !DILocalVariable(name: "key", scope: !12975, file: !6128, line: 44, type: !32)
!12978 = !DILocalVariable(name: "tmp", scope: !12975, file: !6128, line: 53, type: !32)
!12979 = distinct !DILocation(line: 145, column: 10, scope: !12966, inlinedAt: !12973)
!12980 = !{i64 2266189}
!12981 = !DILocation(line: 0, scope: !12975, inlinedAt: !12979)
!12982 = !DILocation(line: 443, column: 29, scope: !12983)
!12983 = distinct !DILexicalBlock(scope: !12984, file: !2179, line: 442, column: 26)
!12984 = distinct !DILexicalBlock(scope: !12957, file: !2179, line: 442, column: 2)
!12985 = !DILocation(line: 444, column: 17, scope: !12983)
!12986 = !DILocation(line: 445, column: 51, scope: !12987)
!12987 = distinct !DILexicalBlock(scope: !12983, file: !2179, line: 445, column: 7)
!12988 = !DILocation(line: 445, column: 7, scope: !12983)
!12989 = !DILocation(line: 0, scope: !12983)
!12990 = !DILocation(line: 451, column: 18, scope: !12983)
!12991 = !DILocation(line: 452, column: 3, scope: !12983)
!12992 = !DILocalVariable(name: "key", arg: 2, scope: !12993, file: !368, line: 190, type: !12958)
!12993 = distinct !DISubprogram(name: "k_spin_unlock", scope: !368, file: !368, line: 189, type: !12994, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !12996)
!12994 = !DISubroutineType(types: !12995)
!12995 = !{null, !12969, !12958}
!12996 = !{!12997, !12992}
!12997 = !DILocalVariable(name: "l", arg: 1, scope: !12993, file: !368, line: 189, type: !12969)
!12998 = !DILocation(line: 0, scope: !12993, inlinedAt: !12999)
!12999 = distinct !DILocation(line: 442, column: 2, scope: !12984)
!13000 = !DILocalVariable(name: "key", arg: 1, scope: !13001, file: !6128, line: 84, type: !32)
!13001 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6128, file: !6128, line: 84, type: !6139, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13002)
!13002 = !{!13000}
!13003 = !DILocation(line: 0, scope: !13001, inlinedAt: !13004)
!13004 = distinct !DILocation(line: 215, column: 2, scope: !12993, inlinedAt: !12999)
!13005 = !DILocation(line: 95, column: 2, scope: !13001, inlinedAt: !13004)
!13006 = !{i64 2267006}
!13007 = !DILocation(line: 454, column: 1, scope: !12950)
!13008 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !12799, file: !12799, line: 389, type: !7307, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13009)
!13009 = !{!13010}
!13010 = !DILocalVariable(name: "t", arg: 1, scope: !13008, file: !12799, line: 389, type: !137)
!13011 = !DILocation(line: 0, scope: !13008)
!13012 = !DILocalVariable(name: "t", arg: 1, scope: !13013, file: !12799, line: 102, type: !163)
!13013 = distinct !DISubprogram(name: "z_tmcvt", scope: !12799, file: !12799, line: 102, type: !12807, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13014)
!13014 = !{!13012, !13015, !13016, !13017, !13018, !13019, !13020, !13021, !13022, !13023, !13024}
!13015 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13013, file: !12799, line: 102, type: !137)
!13016 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13013, file: !12799, line: 103, type: !137)
!13017 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13013, file: !12799, line: 103, type: !211)
!13018 = !DILocalVariable(name: "result32", arg: 5, scope: !13013, file: !12799, line: 104, type: !211)
!13019 = !DILocalVariable(name: "round_up", arg: 6, scope: !13013, file: !12799, line: 104, type: !211)
!13020 = !DILocalVariable(name: "round_off", arg: 7, scope: !13013, file: !12799, line: 105, type: !211)
!13021 = !DILocalVariable(name: "mul_ratio", scope: !13013, file: !12799, line: 107, type: !211)
!13022 = !DILocalVariable(name: "div_ratio", scope: !13013, file: !12799, line: 109, type: !211)
!13023 = !DILocalVariable(name: "off", scope: !13013, file: !12799, line: 116, type: !163)
!13024 = !DILocalVariable(name: "rdivisor", scope: !13025, file: !12799, line: 119, type: !137)
!13025 = distinct !DILexicalBlock(scope: !13026, file: !12799, line: 118, column: 18)
!13026 = distinct !DILexicalBlock(scope: !13013, file: !12799, line: 118, column: 6)
!13027 = !DILocation(line: 0, scope: !13013, inlinedAt: !13028)
!13028 = distinct !DILocation(line: 392, column: 9, scope: !13008)
!13029 = !DILocation(line: 143, column: 25, scope: !13030, inlinedAt: !13028)
!13030 = distinct !DILexicalBlock(scope: !13031, file: !12799, line: 142, column: 17)
!13031 = distinct !DILexicalBlock(scope: !13032, file: !12799, line: 142, column: 7)
!13032 = distinct !DILexicalBlock(scope: !13033, file: !12799, line: 141, column: 24)
!13033 = distinct !DILexicalBlock(scope: !13034, file: !12799, line: 141, column: 13)
!13034 = distinct !DILexicalBlock(scope: !13013, file: !12799, line: 134, column: 6)
!13035 = !DILocation(line: 392, column: 2, scope: !13008)
!13036 = distinct !DISubprogram(name: "z_time_slice", scope: !2179, file: !2179, line: 502, type: !7944, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13037)
!13037 = !{!13038, !13039}
!13038 = !DILocalVariable(name: "ticks", arg: 1, scope: !13036, file: !2179, line: 502, type: !103)
!13039 = !DILocalVariable(name: "key", scope: !13036, file: !2179, line: 511, type: !12958)
!13040 = !DILocation(line: 0, scope: !13036)
!13041 = !DILocation(line: 0, scope: !12966, inlinedAt: !13042)
!13042 = distinct !DILocation(line: 511, column: 25, scope: !13036)
!13043 = !DILocation(line: 55, column: 2, scope: !12975, inlinedAt: !13044)
!13044 = distinct !DILocation(line: 145, column: 10, scope: !12966, inlinedAt: !13042)
!13045 = !DILocation(line: 0, scope: !12975, inlinedAt: !13044)
!13046 = !DILocation(line: 514, column: 6, scope: !13047)
!13047 = distinct !DILexicalBlock(scope: !13036, file: !2179, line: 514, column: 6)
!13048 = !DILocation(line: 514, column: 25, scope: !13047)
!13049 = !DILocation(line: 514, column: 22, scope: !13047)
!13050 = !DILocation(line: 514, column: 6, scope: !13036)
!13051 = !DILocation(line: 515, column: 3, scope: !13052)
!13052 = distinct !DILexicalBlock(scope: !13047, file: !2179, line: 514, column: 35)
!13053 = !DILocation(line: 0, scope: !12993, inlinedAt: !13054)
!13054 = distinct !DILocation(line: 516, column: 3, scope: !13052)
!13055 = !DILocation(line: 0, scope: !13001, inlinedAt: !13056)
!13056 = distinct !DILocation(line: 215, column: 2, scope: !12993, inlinedAt: !13054)
!13057 = !DILocation(line: 95, column: 2, scope: !13001, inlinedAt: !13056)
!13058 = !DILocation(line: 517, column: 3, scope: !13052)
!13059 = !DILocation(line: 519, column: 18, scope: !13036)
!13060 = !DILocation(line: 522, column: 6, scope: !13061)
!13061 = distinct !DILexicalBlock(scope: !13036, file: !2179, line: 522, column: 6)
!13062 = !DILocation(line: 522, column: 27, scope: !13061)
!13063 = !DILocation(line: 522, column: 30, scope: !13061)
!13064 = !DILocation(line: 522, column: 6, scope: !13036)
!13065 = !DILocation(line: 523, column: 30, scope: !13066)
!13066 = distinct !DILexicalBlock(scope: !13067, file: !2179, line: 523, column: 7)
!13067 = distinct !DILexicalBlock(scope: !13061, file: !2179, line: 522, column: 51)
!13068 = !DILocation(line: 523, column: 13, scope: !13066)
!13069 = !DILocation(line: 523, column: 7, scope: !13067)
!13070 = !DILocation(line: 530, column: 10, scope: !13071)
!13071 = distinct !DILexicalBlock(scope: !13066, file: !2179, line: 523, column: 43)
!13072 = !DILocation(line: 531, column: 3, scope: !13071)
!13073 = !DILocation(line: 532, column: 30, scope: !13074)
!13074 = distinct !DILexicalBlock(scope: !13066, file: !2179, line: 531, column: 10)
!13075 = !DILocation(line: 535, column: 29, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13061, file: !2179, line: 534, column: 9)
!13077 = !DILocation(line: 0, scope: !12993, inlinedAt: !13078)
!13078 = distinct !DILocation(line: 537, column: 2, scope: !13036)
!13079 = !DILocation(line: 0, scope: !13001, inlinedAt: !13080)
!13080 = distinct !DILocation(line: 215, column: 2, scope: !12993, inlinedAt: !13078)
!13081 = !DILocation(line: 95, column: 2, scope: !13001, inlinedAt: !13080)
!13082 = !DILocation(line: 538, column: 1, scope: !13036)
!13083 = distinct !DISubprogram(name: "sliceable", scope: !2179, file: !2179, line: 468, type: !13084, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13086)
!13084 = !DISubroutineType(types: !13085)
!13085 = !{!211, !2074}
!13086 = !{!13087, !13088}
!13087 = !DILocalVariable(name: "thread", arg: 1, scope: !13083, file: !2179, line: 468, type: !2074)
!13088 = !DILocalVariable(name: "ret", scope: !13083, file: !2179, line: 470, type: !211)
!13089 = !DILocation(line: 0, scope: !13083)
!13090 = !DILocation(line: 470, column: 13, scope: !13083)
!13091 = !DILocation(line: 471, column: 3, scope: !13083)
!13092 = !DILocation(line: 471, column: 7, scope: !13083)
!13093 = !DILocation(line: 472, column: 3, scope: !13083)
!13094 = !DILocation(line: 472, column: 37, scope: !13083)
!13095 = !DILocation(line: 472, column: 24, scope: !13083)
!13096 = !DILocation(line: 472, column: 43, scope: !13083)
!13097 = !DILocation(line: 472, column: 7, scope: !13083)
!13098 = !DILocation(line: 473, column: 3, scope: !13083)
!13099 = !DILocation(line: 473, column: 7, scope: !13083)
!13100 = !DILocation(line: 473, column: 6, scope: !13083)
!13101 = !DILocation(line: 479, column: 2, scope: !13083)
!13102 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2179, file: !2179, line: 482, type: !13103, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13105)
!13103 = !DISubroutineType(types: !13104)
!13104 = !{!12958, !12958}
!13105 = !{!13106, !13107}
!13106 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !13102, file: !2179, line: 482, type: !12958)
!13107 = !DILocalVariable(name: "curr", scope: !13102, file: !2179, line: 484, type: !2074)
!13108 = !DILocation(line: 0, scope: !13102)
!13109 = !DILocation(line: 484, column: 26, scope: !13102)
!13110 = !DILocation(line: 493, column: 7, scope: !13111)
!13111 = distinct !DILexicalBlock(scope: !13102, file: !2179, line: 493, column: 6)
!13112 = !DILocation(line: 493, column: 6, scope: !13102)
!13113 = !DILocation(line: 494, column: 3, scope: !13114)
!13114 = distinct !DILexicalBlock(scope: !13111, file: !2179, line: 493, column: 49)
!13115 = !DILocation(line: 495, column: 2, scope: !13114)
!13116 = !DILocation(line: 496, column: 2, scope: !13102)
!13117 = !DILocation(line: 499, column: 1, scope: !13102)
!13118 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12238, file: !12238, line: 106, type: !13084, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13119)
!13119 = !{!13120, !13121}
!13120 = !DILocalVariable(name: "thread", arg: 1, scope: !13118, file: !12238, line: 106, type: !2074)
!13121 = !DILocalVariable(name: "state", scope: !13118, file: !12238, line: 108, type: !208)
!13122 = !DILocation(line: 0, scope: !13118)
!13123 = !DILocation(line: 108, column: 31, scope: !13118)
!13124 = !DILocation(line: 110, column: 16, scope: !13118)
!13125 = !DILocation(line: 111, column: 41, scope: !13118)
!13126 = !DILocation(line: 110, column: 2, scope: !13118)
!13127 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2179, file: !2179, line: 393, type: !12924, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13128)
!13128 = !{!13129}
!13129 = !DILocalVariable(name: "thread", arg: 1, scope: !13127, file: !2179, line: 393, type: !2074)
!13130 = !DILocation(line: 0, scope: !13127)
!13131 = !DILocation(line: 395, column: 6, scope: !13132)
!13132 = distinct !DILexicalBlock(scope: !13127, file: !2179, line: 395, column: 6)
!13133 = !DILocation(line: 395, column: 6, scope: !13127)
!13134 = !DILocalVariable(name: "thread", arg: 1, scope: !13135, file: !2179, line: 264, type: !2074)
!13135 = distinct !DISubprogram(name: "dequeue_thread", scope: !2179, file: !2179, line: 264, type: !12924, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13136)
!13136 = !{!13134}
!13137 = !DILocation(line: 0, scope: !13135, inlinedAt: !13138)
!13138 = distinct !DILocation(line: 396, column: 3, scope: !13139)
!13139 = distinct !DILexicalBlock(scope: !13132, file: !2179, line: 395, column: 34)
!13140 = !DILocation(line: 266, column: 15, scope: !13135, inlinedAt: !13138)
!13141 = !DILocation(line: 266, column: 28, scope: !13135, inlinedAt: !13138)
!13142 = !DILocalVariable(name: "thread", arg: 1, scope: !13143, file: !2179, line: 232, type: !2074)
!13143 = distinct !DISubprogram(name: "runq_remove", scope: !2179, file: !2179, line: 232, type: !12924, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13144)
!13144 = !{!13142}
!13145 = !DILocation(line: 0, scope: !13143, inlinedAt: !13146)
!13146 = distinct !DILocation(line: 268, column: 3, scope: !13147, inlinedAt: !13138)
!13147 = distinct !DILexicalBlock(scope: !13148, file: !2179, line: 267, column: 35)
!13148 = distinct !DILexicalBlock(scope: !13135, file: !2179, line: 267, column: 6)
!13149 = !DILocation(line: 234, column: 2, scope: !13143, inlinedAt: !13146)
!13150 = !DILocation(line: 397, column: 2, scope: !13139)
!13151 = !DILocalVariable(name: "thread", arg: 1, scope: !13152, file: !2179, line: 250, type: !2074)
!13152 = distinct !DISubprogram(name: "queue_thread", scope: !2179, file: !2179, line: 250, type: !12924, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13153)
!13153 = !{!13151}
!13154 = !DILocation(line: 0, scope: !13152, inlinedAt: !13155)
!13155 = distinct !DILocation(line: 398, column: 2, scope: !13127)
!13156 = !DILocation(line: 252, column: 15, scope: !13152, inlinedAt: !13155)
!13157 = !DILocation(line: 252, column: 28, scope: !13152, inlinedAt: !13155)
!13158 = !DILocalVariable(name: "thread", arg: 1, scope: !13159, file: !2179, line: 227, type: !2074)
!13159 = distinct !DISubprogram(name: "runq_add", scope: !2179, file: !2179, line: 227, type: !12924, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13160)
!13160 = !{!13158}
!13161 = !DILocation(line: 0, scope: !13159, inlinedAt: !13162)
!13162 = distinct !DILocation(line: 254, column: 3, scope: !13163, inlinedAt: !13155)
!13163 = distinct !DILexicalBlock(scope: !13164, file: !2179, line: 253, column: 35)
!13164 = distinct !DILexicalBlock(scope: !13152, file: !2179, line: 253, column: 6)
!13165 = !DILocalVariable(name: "pq", arg: 1, scope: !13166, file: !2179, line: 181, type: !13169)
!13166 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2179, file: !2179, line: 181, type: !13167, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13170)
!13167 = !DISubroutineType(types: !13168)
!13168 = !{null, !13169, !2074}
!13169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 32)
!13170 = !{!13165, !13171, !13172}
!13171 = !DILocalVariable(name: "thread", arg: 2, scope: !13166, file: !2179, line: 182, type: !2074)
!13172 = !DILocalVariable(name: "t", scope: !13166, file: !2179, line: 184, type: !2074)
!13173 = !DILocation(line: 0, scope: !13166, inlinedAt: !13174)
!13174 = distinct !DILocation(line: 229, column: 2, scope: !13159, inlinedAt: !13162)
!13175 = !DILocation(line: 188, column: 2, scope: !13176, inlinedAt: !13174)
!13176 = distinct !DILexicalBlock(scope: !13166, file: !2179, line: 188, column: 2)
!13177 = !DILocation(line: 188, column: 2, scope: !13178, inlinedAt: !13174)
!13178 = distinct !DILexicalBlock(scope: !13176, file: !2179, line: 188, column: 2)
!13179 = !DILocation(line: 0, scope: !13176, inlinedAt: !13174)
!13180 = !DILocation(line: 189, column: 7, scope: !13181, inlinedAt: !13174)
!13181 = distinct !DILexicalBlock(scope: !13182, file: !2179, line: 189, column: 7)
!13182 = distinct !DILexicalBlock(scope: !13178, file: !2179, line: 188, column: 56)
!13183 = !DILocation(line: 189, column: 35, scope: !13181, inlinedAt: !13174)
!13184 = !DILocation(line: 189, column: 7, scope: !13182, inlinedAt: !13174)
!13185 = !DILocation(line: 191, column: 21, scope: !13186, inlinedAt: !13174)
!13186 = distinct !DILexicalBlock(scope: !13181, file: !2179, line: 189, column: 40)
!13187 = !DILocation(line: 190, column: 4, scope: !13186, inlinedAt: !13174)
!13188 = !DILocation(line: 192, column: 4, scope: !13186, inlinedAt: !13174)
!13189 = distinct !{!13189, !13175, !13190}
!13190 = !DILocation(line: 194, column: 2, scope: !13176, inlinedAt: !13174)
!13191 = !DILocation(line: 196, column: 37, scope: !13166, inlinedAt: !13174)
!13192 = !DILocation(line: 196, column: 2, scope: !13166, inlinedAt: !13174)
!13193 = !DILocation(line: 197, column: 1, scope: !13166, inlinedAt: !13174)
!13194 = !DILocation(line: 399, column: 25, scope: !13127)
!13195 = !DILocation(line: 399, column: 22, scope: !13127)
!13196 = !DILocation(line: 399, column: 2, scope: !13127)
!13197 = !DILocation(line: 400, column: 1, scope: !13127)
!13198 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12238, file: !12238, line: 136, type: !13084, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13199)
!13199 = !{!13200}
!13200 = !DILocalVariable(name: "thread", arg: 1, scope: !13198, file: !12238, line: 136, type: !2074)
!13201 = !DILocation(line: 0, scope: !13198)
!13202 = !DILocation(line: 138, column: 9, scope: !13198)
!13203 = !DILocation(line: 138, column: 2, scope: !13198)
!13204 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2179, file: !2179, line: 1137, type: !13167, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13205)
!13205 = !{!13206, !13207}
!13206 = !DILocalVariable(name: "pq", arg: 1, scope: !13204, file: !2179, line: 1137, type: !13169)
!13207 = !DILocalVariable(name: "thread", arg: 2, scope: !13204, file: !2179, line: 1137, type: !2074)
!13208 = !DILocation(line: 0, scope: !13204)
!13209 = !DILocation(line: 1141, column: 33, scope: !13204)
!13210 = !DILocation(line: 1141, column: 2, scope: !13204)
!13211 = !DILocation(line: 1142, column: 1, scope: !13204)
!13212 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !273, file: !273, line: 294, type: !13213, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13215)
!13213 = !DISubroutineType(types: !13214)
!13214 = !{!2175, !13169}
!13215 = !{!13216}
!13216 = !DILocalVariable(name: "list", arg: 1, scope: !13212, file: !273, line: 294, type: !13169)
!13217 = !DILocation(line: 0, scope: !13212)
!13218 = !DILocation(line: 296, column: 9, scope: !13212)
!13219 = !DILocation(line: 296, column: 49, scope: !13212)
!13220 = !DILocation(line: 296, column: 2, scope: !13212)
!13221 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !273, file: !273, line: 443, type: !13222, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13224)
!13222 = !DISubroutineType(types: !13223)
!13223 = !{null, !2175, !2175}
!13224 = !{!13225, !13226, !13227}
!13225 = !DILocalVariable(name: "successor", arg: 1, scope: !13221, file: !273, line: 443, type: !2175)
!13226 = !DILocalVariable(name: "node", arg: 2, scope: !13221, file: !273, line: 443, type: !2175)
!13227 = !DILocalVariable(name: "prev", scope: !13221, file: !273, line: 445, type: !13228)
!13228 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2175)
!13229 = !DILocation(line: 0, scope: !13221)
!13230 = !DILocation(line: 445, column: 39, scope: !13221)
!13231 = !DILocation(line: 447, column: 8, scope: !13221)
!13232 = !DILocation(line: 447, column: 13, scope: !13221)
!13233 = !DILocation(line: 448, column: 8, scope: !13221)
!13234 = !DILocation(line: 448, column: 13, scope: !13221)
!13235 = !DILocation(line: 449, column: 8, scope: !13221)
!13236 = !DILocation(line: 449, column: 13, scope: !13221)
!13237 = !DILocation(line: 450, column: 18, scope: !13221)
!13238 = !DILocation(line: 451, column: 1, scope: !13221)
!13239 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !273, file: !273, line: 341, type: !13240, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13242)
!13240 = !DISubroutineType(types: !13241)
!13241 = !{!2175, !13169, !2175}
!13242 = !{!13243, !13244}
!13243 = !DILocalVariable(name: "list", arg: 1, scope: !13239, file: !273, line: 341, type: !13169)
!13244 = !DILocalVariable(name: "node", arg: 2, scope: !13239, file: !273, line: 342, type: !2175)
!13245 = !DILocation(line: 0, scope: !13239)
!13246 = !DILocation(line: 344, column: 15, scope: !13239)
!13247 = !DILocation(line: 344, column: 9, scope: !13239)
!13248 = !DILocation(line: 344, column: 26, scope: !13239)
!13249 = !DILocation(line: 344, column: 2, scope: !13239)
!13250 = distinct !DISubprogram(name: "sys_dlist_append", scope: !273, file: !273, line: 404, type: !13251, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13253)
!13251 = !DISubroutineType(types: !13252)
!13252 = !{null, !13169, !2175}
!13253 = !{!13254, !13255, !13256}
!13254 = !DILocalVariable(name: "list", arg: 1, scope: !13250, file: !273, line: 404, type: !13169)
!13255 = !DILocalVariable(name: "node", arg: 2, scope: !13250, file: !273, line: 404, type: !2175)
!13256 = !DILocalVariable(name: "tail", scope: !13250, file: !273, line: 406, type: !13228)
!13257 = !DILocation(line: 0, scope: !13250)
!13258 = !DILocation(line: 406, column: 34, scope: !13250)
!13259 = !DILocation(line: 408, column: 8, scope: !13250)
!13260 = !DILocation(line: 408, column: 13, scope: !13250)
!13261 = !DILocation(line: 409, column: 8, scope: !13250)
!13262 = !DILocation(line: 409, column: 13, scope: !13250)
!13263 = !DILocation(line: 411, column: 8, scope: !13250)
!13264 = !DILocation(line: 411, column: 13, scope: !13250)
!13265 = !DILocation(line: 412, column: 13, scope: !13250)
!13266 = !DILocation(line: 413, column: 1, scope: !13250)
!13267 = distinct !DISubprogram(name: "update_cache", scope: !2179, file: !2179, line: 559, type: !7944, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13268)
!13268 = !{!13269, !13270}
!13269 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !13267, file: !2179, line: 559, type: !103)
!13270 = !DILocalVariable(name: "thread", scope: !13267, file: !2179, line: 562, type: !2074)
!13271 = !DILocation(line: 0, scope: !13267)
!13272 = !DILocation(line: 239, column: 9, scope: !13273, inlinedAt: !13276)
!13273 = distinct !DISubprogram(name: "runq_best", scope: !2179, file: !2179, line: 237, type: !13274, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !162)
!13274 = !DISubroutineType(types: !13275)
!13275 = !{!2074}
!13276 = distinct !DILocation(line: 314, column: 28, scope: !13277, inlinedAt: !13280)
!13277 = distinct !DISubprogram(name: "next_up", scope: !2179, file: !2179, line: 312, type: !13274, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13278)
!13278 = !{!13279}
!13279 = !DILocalVariable(name: "thread", scope: !13277, file: !2179, line: 314, type: !2074)
!13280 = distinct !DILocation(line: 562, column: 28, scope: !13267)
!13281 = !DILocation(line: 0, scope: !13277, inlinedAt: !13280)
!13282 = !DILocation(line: 340, column: 17, scope: !13277, inlinedAt: !13280)
!13283 = !DILocation(line: 340, column: 9, scope: !13277, inlinedAt: !13280)
!13284 = !DILocalVariable(name: "thread", arg: 1, scope: !13285, file: !2179, line: 127, type: !2074)
!13285 = distinct !DISubprogram(name: "should_preempt", scope: !2179, file: !2179, line: 127, type: !13286, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13288)
!13286 = !DISubroutineType(types: !13287)
!13287 = !{!211, !2074, !103}
!13288 = !{!13284, !13289}
!13289 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !13285, file: !2179, line: 128, type: !103)
!13290 = !DILocation(line: 0, scope: !13285, inlinedAt: !13291)
!13291 = distinct !DILocation(line: 564, column: 6, scope: !13292)
!13292 = distinct !DILexicalBlock(scope: !13267, file: !2179, line: 564, column: 6)
!13293 = !DILocation(line: 133, column: 17, scope: !13294, inlinedAt: !13291)
!13294 = distinct !DILexicalBlock(scope: !13285, file: !2179, line: 133, column: 6)
!13295 = !DILocation(line: 0, scope: !13292)
!13296 = !DILocation(line: 133, column: 6, scope: !13285, inlinedAt: !13291)
!13297 = !DILocation(line: 140, column: 6, scope: !13298, inlinedAt: !13291)
!13298 = distinct !DILexicalBlock(scope: !13285, file: !2179, line: 140, column: 6)
!13299 = !DILocation(line: 140, column: 6, scope: !13285, inlinedAt: !13291)
!13300 = !DILocation(line: 150, column: 9, scope: !13301, inlinedAt: !13291)
!13301 = distinct !DILexicalBlock(scope: !13285, file: !2179, line: 149, column: 6)
!13302 = !DILocation(line: 149, column: 6, scope: !13285, inlinedAt: !13291)
!13303 = !DILocation(line: 157, column: 6, scope: !13304, inlinedAt: !13291)
!13304 = distinct !DILexicalBlock(scope: !13285, file: !2179, line: 157, column: 6)
!13305 = !DILocation(line: 564, column: 6, scope: !13267)
!13306 = !DILocation(line: 566, column: 14, scope: !13307)
!13307 = distinct !DILexicalBlock(scope: !13308, file: !2179, line: 566, column: 7)
!13308 = distinct !DILexicalBlock(scope: !13292, file: !2179, line: 564, column: 42)
!13309 = !DILocation(line: 566, column: 7, scope: !13308)
!13310 = !DILocation(line: 567, column: 4, scope: !13311)
!13311 = distinct !DILexicalBlock(scope: !13307, file: !2179, line: 566, column: 27)
!13312 = !DILocation(line: 568, column: 3, scope: !13311)
!13313 = !DILocation(line: 585, column: 1, scope: !13267)
!13314 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2179, file: !2179, line: 1144, type: !13315, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13317)
!13315 = !DISubroutineType(types: !13316)
!13316 = !{!2074, !13169}
!13317 = !{!13318, !13319, !13320}
!13318 = !DILocalVariable(name: "pq", arg: 1, scope: !13314, file: !2179, line: 1144, type: !13169)
!13319 = !DILocalVariable(name: "thread", scope: !13314, file: !2179, line: 1146, type: !2074)
!13320 = !DILocalVariable(name: "n", scope: !13314, file: !2179, line: 1147, type: !2175)
!13321 = !DILocation(line: 0, scope: !13314)
!13322 = !DILocation(line: 1147, column: 19, scope: !13314)
!13323 = !DILocation(line: 1152, column: 2, scope: !13314)
!13324 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12238, file: !12238, line: 115, type: !13084, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13325)
!13325 = !{!13326}
!13326 = !DILocalVariable(name: "thread", arg: 1, scope: !13324, file: !12238, line: 115, type: !2074)
!13327 = !DILocation(line: 0, scope: !13324)
!13328 = !DILocation(line: 117, column: 46, scope: !13324)
!13329 = !DILocation(line: 117, column: 10, scope: !13324)
!13330 = !DILocation(line: 117, column: 9, scope: !13324)
!13331 = !DILocation(line: 117, column: 2, scope: !13324)
!13332 = distinct !DISubprogram(name: "is_preempt", scope: !2179, file: !2179, line: 62, type: !12942, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13333)
!13333 = !{!13334}
!13334 = !DILocalVariable(name: "thread", arg: 1, scope: !13332, file: !2179, line: 62, type: !2074)
!13335 = !DILocation(line: 0, scope: !13332)
!13336 = !DILocation(line: 65, column: 22, scope: !13332)
!13337 = !DILocation(line: 65, column: 30, scope: !13332)
!13338 = !DILocation(line: 65, column: 2, scope: !13332)
!13339 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12632, file: !12632, line: 35, type: !13340, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13344)
!13340 = !DISubroutineType(types: !13341)
!13341 = !{!211, !13342}
!13342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13343, size: 32)
!13343 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2125)
!13344 = !{!13345}
!13345 = !DILocalVariable(name: "to", arg: 1, scope: !13339, file: !12632, line: 35, type: !13342)
!13346 = !DILocation(line: 0, scope: !13339)
!13347 = !DILocation(line: 37, column: 35, scope: !13339)
!13348 = !DILocation(line: 37, column: 10, scope: !13339)
!13349 = !DILocation(line: 37, column: 9, scope: !13339)
!13350 = !DILocation(line: 37, column: 2, scope: !13339)
!13351 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !273, file: !273, line: 225, type: !13352, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13356)
!13352 = !DISubroutineType(types: !13353)
!13353 = !{!211, !13354}
!13354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13355, size: 32)
!13355 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2084)
!13356 = !{!13357}
!13357 = !DILocalVariable(name: "node", arg: 1, scope: !13351, file: !273, line: 225, type: !13354)
!13358 = !DILocation(line: 0, scope: !13351)
!13359 = !DILocation(line: 227, column: 15, scope: !13351)
!13360 = !DILocation(line: 227, column: 20, scope: !13351)
!13361 = !DILocation(line: 227, column: 2, scope: !13351)
!13362 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !273, file: !273, line: 325, type: !13240, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13363)
!13363 = !{!13364, !13365}
!13364 = !DILocalVariable(name: "list", arg: 1, scope: !13362, file: !273, line: 325, type: !13169)
!13365 = !DILocalVariable(name: "node", arg: 2, scope: !13362, file: !273, line: 326, type: !2175)
!13366 = !DILocation(line: 0, scope: !13362)
!13367 = !DILocation(line: 328, column: 24, scope: !13362)
!13368 = !DILocation(line: 328, column: 15, scope: !13362)
!13369 = !DILocation(line: 328, column: 9, scope: !13362)
!13370 = !DILocation(line: 328, column: 45, scope: !13362)
!13371 = !DILocation(line: 328, column: 2, scope: !13362)
!13372 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !273, file: !273, line: 266, type: !13373, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13375)
!13373 = !DISubroutineType(types: !13374)
!13374 = !{!211, !13169}
!13375 = !{!13376}
!13376 = !DILocalVariable(name: "list", arg: 1, scope: !13372, file: !273, line: 266, type: !13169)
!13377 = !DILocation(line: 0, scope: !13372)
!13378 = !DILocation(line: 268, column: 15, scope: !13372)
!13379 = !DILocation(line: 268, column: 20, scope: !13372)
!13380 = !DILocation(line: 268, column: 2, scope: !13372)
!13381 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !273, file: !273, line: 496, type: !13382, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13384)
!13382 = !DISubroutineType(types: !13383)
!13383 = !{null, !2175}
!13384 = !{!13385, !13386, !13387}
!13385 = !DILocalVariable(name: "node", arg: 1, scope: !13381, file: !273, line: 496, type: !2175)
!13386 = !DILocalVariable(name: "prev", scope: !13381, file: !273, line: 498, type: !13228)
!13387 = !DILocalVariable(name: "next", scope: !13381, file: !273, line: 499, type: !13228)
!13388 = !DILocation(line: 0, scope: !13381)
!13389 = !DILocation(line: 498, column: 34, scope: !13381)
!13390 = !DILocation(line: 499, column: 34, scope: !13381)
!13391 = !DILocation(line: 501, column: 8, scope: !13381)
!13392 = !DILocation(line: 501, column: 13, scope: !13381)
!13393 = !DILocation(line: 502, column: 8, scope: !13381)
!13394 = !DILocation(line: 502, column: 13, scope: !13381)
!13395 = !DILocation(line: 503, column: 2, scope: !13381)
!13396 = !DILocation(line: 504, column: 1, scope: !13381)
!13397 = distinct !DISubprogram(name: "sys_dnode_init", scope: !273, file: !273, line: 211, type: !13382, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13398)
!13398 = !{!13399}
!13399 = !DILocalVariable(name: "node", arg: 1, scope: !13397, file: !273, line: 211, type: !2175)
!13400 = !DILocation(line: 0, scope: !13397)
!13401 = !DILocation(line: 213, column: 8, scope: !13397)
!13402 = !DILocation(line: 213, column: 13, scope: !13397)
!13403 = !DILocation(line: 214, column: 8, scope: !13397)
!13404 = !DILocation(line: 214, column: 13, scope: !13397)
!13405 = !DILocation(line: 215, column: 1, scope: !13397)
!13406 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12238, file: !12238, line: 131, type: !13407, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13409)
!13407 = !DISubroutineType(types: !13408)
!13408 = !{!211, !2074, !137}
!13409 = !{!13410, !13411}
!13410 = !DILocalVariable(name: "thread", arg: 1, scope: !13406, file: !12238, line: 131, type: !2074)
!13411 = !DILocalVariable(name: "state", arg: 2, scope: !13406, file: !12238, line: 131, type: !137)
!13412 = !DILocation(line: 0, scope: !13406)
!13413 = !DILocation(line: 133, column: 23, scope: !13406)
!13414 = !DILocation(line: 133, column: 45, scope: !13406)
!13415 = !DILocation(line: 133, column: 2, scope: !13406)
!13416 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12238, file: !12238, line: 211, type: !13417, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13419)
!13417 = !DISubroutineType(types: !13418)
!13418 = !{!211, !103, !103}
!13419 = !{!13420, !13421}
!13420 = !DILocalVariable(name: "prio", arg: 1, scope: !13416, file: !12238, line: 211, type: !103)
!13421 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13416, file: !12238, line: 211, type: !103)
!13422 = !DILocation(line: 0, scope: !13416)
!13423 = !DILocation(line: 213, column: 9, scope: !13416)
!13424 = !DILocation(line: 213, column: 2, scope: !13416)
!13425 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12238, file: !12238, line: 83, type: !13084, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13426)
!13426 = !{!13427}
!13427 = !DILocalVariable(name: "thread", arg: 1, scope: !13425, file: !12238, line: 83, type: !2074)
!13428 = !DILocation(line: 0, scope: !13425)
!13429 = !DILocation(line: 89, column: 16, scope: !13425)
!13430 = !DILocation(line: 89, column: 2, scope: !13425)
!13431 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12238, file: !12238, line: 206, type: !13417, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13432)
!13432 = !{!13433, !13434}
!13433 = !DILocalVariable(name: "prio1", arg: 1, scope: !13431, file: !12238, line: 206, type: !103)
!13434 = !DILocalVariable(name: "prio2", arg: 2, scope: !13431, file: !12238, line: 206, type: !103)
!13435 = !DILocation(line: 0, scope: !13431)
!13436 = !DILocation(line: 208, column: 15, scope: !13431)
!13437 = !DILocation(line: 208, column: 2, scope: !13431)
!13438 = distinct !DISubprogram(name: "z_ready_thread", scope: !2179, file: !2179, line: 635, type: !12924, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13439)
!13439 = !{!13440, !13441, !13443}
!13440 = !DILocalVariable(name: "thread", arg: 1, scope: !13438, file: !2179, line: 635, type: !2074)
!13441 = !DILocalVariable(name: "__i", scope: !13442, file: !2179, line: 637, type: !12958)
!13442 = distinct !DILexicalBlock(scope: !13438, file: !2179, line: 637, column: 2)
!13443 = !DILocalVariable(name: "__key", scope: !13442, file: !2179, line: 637, type: !12958)
!13444 = !DILocation(line: 0, scope: !13438)
!13445 = !DILocation(line: 0, scope: !13442)
!13446 = !DILocation(line: 0, scope: !12966, inlinedAt: !13447)
!13447 = distinct !DILocation(line: 637, column: 2, scope: !13442)
!13448 = !DILocation(line: 55, column: 2, scope: !12975, inlinedAt: !13449)
!13449 = distinct !DILocation(line: 145, column: 10, scope: !12966, inlinedAt: !13447)
!13450 = !DILocation(line: 0, scope: !12975, inlinedAt: !13449)
!13451 = !DILocation(line: 639, column: 4, scope: !13452)
!13452 = distinct !DILexicalBlock(scope: !13453, file: !2179, line: 638, column: 41)
!13453 = distinct !DILexicalBlock(scope: !13454, file: !2179, line: 638, column: 7)
!13454 = distinct !DILexicalBlock(scope: !13455, file: !2179, line: 637, column: 26)
!13455 = distinct !DILexicalBlock(scope: !13442, file: !2179, line: 637, column: 2)
!13456 = !DILocation(line: 0, scope: !12993, inlinedAt: !13457)
!13457 = distinct !DILocation(line: 637, column: 2, scope: !13455)
!13458 = !DILocation(line: 0, scope: !13001, inlinedAt: !13459)
!13459 = distinct !DILocation(line: 215, column: 2, scope: !12993, inlinedAt: !13457)
!13460 = !DILocation(line: 95, column: 2, scope: !13001, inlinedAt: !13459)
!13461 = !DILocation(line: 642, column: 1, scope: !13438)
!13462 = distinct !DISubprogram(name: "ready_thread", scope: !2179, file: !2179, line: 617, type: !12924, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13463)
!13463 = !{!13464}
!13464 = !DILocalVariable(name: "thread", arg: 1, scope: !13462, file: !2179, line: 617, type: !2074)
!13465 = !DILocation(line: 0, scope: !13462)
!13466 = !DILocation(line: 626, column: 7, scope: !13467)
!13467 = distinct !DILexicalBlock(scope: !13462, file: !2179, line: 626, column: 6)
!13468 = !DILocation(line: 626, column: 34, scope: !13467)
!13469 = !DILocation(line: 626, column: 37, scope: !13467)
!13470 = !DILocation(line: 626, column: 6, scope: !13462)
!13471 = !DILocation(line: 0, scope: !13152, inlinedAt: !13472)
!13472 = distinct !DILocation(line: 629, column: 3, scope: !13473)
!13473 = distinct !DILexicalBlock(scope: !13467, file: !2179, line: 626, column: 64)
!13474 = !DILocation(line: 252, column: 15, scope: !13152, inlinedAt: !13472)
!13475 = !DILocation(line: 252, column: 28, scope: !13152, inlinedAt: !13472)
!13476 = !DILocation(line: 0, scope: !13159, inlinedAt: !13477)
!13477 = distinct !DILocation(line: 254, column: 3, scope: !13163, inlinedAt: !13472)
!13478 = !DILocation(line: 0, scope: !13166, inlinedAt: !13479)
!13479 = distinct !DILocation(line: 229, column: 2, scope: !13159, inlinedAt: !13477)
!13480 = !DILocation(line: 188, column: 2, scope: !13176, inlinedAt: !13479)
!13481 = !DILocation(line: 188, column: 2, scope: !13178, inlinedAt: !13479)
!13482 = !DILocation(line: 0, scope: !13176, inlinedAt: !13479)
!13483 = !DILocation(line: 189, column: 7, scope: !13181, inlinedAt: !13479)
!13484 = !DILocation(line: 189, column: 35, scope: !13181, inlinedAt: !13479)
!13485 = !DILocation(line: 189, column: 7, scope: !13182, inlinedAt: !13479)
!13486 = !DILocation(line: 191, column: 21, scope: !13186, inlinedAt: !13479)
!13487 = !DILocation(line: 190, column: 4, scope: !13186, inlinedAt: !13479)
!13488 = !DILocation(line: 192, column: 4, scope: !13186, inlinedAt: !13479)
!13489 = distinct !{!13489, !13480, !13490}
!13490 = !DILocation(line: 194, column: 2, scope: !13176, inlinedAt: !13479)
!13491 = !DILocation(line: 196, column: 37, scope: !13166, inlinedAt: !13479)
!13492 = !DILocation(line: 196, column: 2, scope: !13166, inlinedAt: !13479)
!13493 = !DILocation(line: 197, column: 1, scope: !13166, inlinedAt: !13479)
!13494 = !DILocation(line: 630, column: 3, scope: !13473)
!13495 = !DILocation(line: 632, column: 2, scope: !13473)
!13496 = !DILocation(line: 633, column: 1, scope: !13462)
!13497 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12238, file: !12238, line: 120, type: !13084, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13498)
!13498 = !{!13499}
!13499 = !DILocalVariable(name: "thread", arg: 1, scope: !13497, file: !12238, line: 120, type: !2074)
!13500 = !DILocation(line: 0, scope: !13497)
!13501 = !DILocation(line: 122, column: 12, scope: !13497)
!13502 = !DILocation(line: 122, column: 62, scope: !13497)
!13503 = !DILocation(line: 123, column: 4, scope: !13497)
!13504 = !DILocation(line: 122, column: 2, scope: !13497)
!13505 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2179, file: !2179, line: 644, type: !12924, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13506)
!13506 = !{!13507, !13508, !13510}
!13507 = !DILocalVariable(name: "thread", arg: 1, scope: !13505, file: !2179, line: 644, type: !2074)
!13508 = !DILocalVariable(name: "__i", scope: !13509, file: !2179, line: 646, type: !12958)
!13509 = distinct !DILexicalBlock(scope: !13505, file: !2179, line: 646, column: 2)
!13510 = !DILocalVariable(name: "__key", scope: !13509, file: !2179, line: 646, type: !12958)
!13511 = !DILocation(line: 0, scope: !13505)
!13512 = !DILocation(line: 0, scope: !13509)
!13513 = !DILocation(line: 0, scope: !12966, inlinedAt: !13514)
!13514 = distinct !DILocation(line: 646, column: 2, scope: !13509)
!13515 = !DILocation(line: 55, column: 2, scope: !12975, inlinedAt: !13516)
!13516 = distinct !DILocation(line: 145, column: 10, scope: !12966, inlinedAt: !13514)
!13517 = !DILocation(line: 0, scope: !12975, inlinedAt: !13516)
!13518 = !DILocation(line: 647, column: 3, scope: !13519)
!13519 = distinct !DILexicalBlock(scope: !13520, file: !2179, line: 646, column: 26)
!13520 = distinct !DILexicalBlock(scope: !13509, file: !2179, line: 646, column: 2)
!13521 = !DILocation(line: 0, scope: !12993, inlinedAt: !13522)
!13522 = distinct !DILocation(line: 646, column: 2, scope: !13520)
!13523 = !DILocation(line: 0, scope: !13001, inlinedAt: !13524)
!13524 = distinct !DILocation(line: 215, column: 2, scope: !12993, inlinedAt: !13522)
!13525 = !DILocation(line: 95, column: 2, scope: !13001, inlinedAt: !13524)
!13526 = !DILocation(line: 649, column: 1, scope: !13505)
!13527 = distinct !DISubprogram(name: "z_sched_start", scope: !2179, file: !2179, line: 651, type: !12924, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13528)
!13528 = !{!13529, !13530}
!13529 = !DILocalVariable(name: "thread", arg: 1, scope: !13527, file: !2179, line: 651, type: !2074)
!13530 = !DILocalVariable(name: "key", scope: !13527, file: !2179, line: 653, type: !12958)
!13531 = !DILocation(line: 0, scope: !13527)
!13532 = !DILocation(line: 0, scope: !12966, inlinedAt: !13533)
!13533 = distinct !DILocation(line: 653, column: 25, scope: !13527)
!13534 = !DILocation(line: 55, column: 2, scope: !12975, inlinedAt: !13535)
!13535 = distinct !DILocation(line: 145, column: 10, scope: !12966, inlinedAt: !13533)
!13536 = !DILocation(line: 0, scope: !12975, inlinedAt: !13535)
!13537 = !DILocation(line: 655, column: 6, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13527, file: !2179, line: 655, column: 6)
!13539 = !DILocation(line: 655, column: 6, scope: !13527)
!13540 = !DILocation(line: 0, scope: !12993, inlinedAt: !13541)
!13541 = distinct !DILocation(line: 656, column: 3, scope: !13542)
!13542 = distinct !DILexicalBlock(scope: !13538, file: !2179, line: 655, column: 36)
!13543 = !DILocation(line: 0, scope: !13001, inlinedAt: !13544)
!13544 = distinct !DILocation(line: 215, column: 2, scope: !12993, inlinedAt: !13541)
!13545 = !DILocation(line: 95, column: 2, scope: !13001, inlinedAt: !13544)
!13546 = !DILocation(line: 657, column: 3, scope: !13542)
!13547 = !DILocation(line: 660, column: 2, scope: !13527)
!13548 = !DILocation(line: 661, column: 2, scope: !13527)
!13549 = !DILocation(line: 662, column: 2, scope: !13527)
!13550 = !DILocation(line: 663, column: 1, scope: !13527)
!13551 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12238, file: !12238, line: 126, type: !13084, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13552)
!13552 = !{!13553}
!13553 = !DILocalVariable(name: "thread", arg: 1, scope: !13551, file: !12238, line: 126, type: !2074)
!13554 = !DILocation(line: 0, scope: !13551)
!13555 = !DILocation(line: 128, column: 23, scope: !13551)
!13556 = !DILocation(line: 128, column: 36, scope: !13551)
!13557 = !DILocation(line: 128, column: 56, scope: !13551)
!13558 = !DILocation(line: 128, column: 2, scope: !13551)
!13559 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12238, file: !12238, line: 155, type: !12924, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13560)
!13560 = !{!13561}
!13561 = !DILocalVariable(name: "thread", arg: 1, scope: !13559, file: !12238, line: 155, type: !2074)
!13562 = !DILocation(line: 0, scope: !13559)
!13563 = !DILocation(line: 157, column: 15, scope: !13559)
!13564 = !DILocation(line: 157, column: 28, scope: !13559)
!13565 = !DILocation(line: 158, column: 1, scope: !13559)
!13566 = distinct !DISubprogram(name: "z_reschedule", scope: !2179, file: !2179, line: 967, type: !12994, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13567)
!13567 = !{!13568, !13569}
!13568 = !DILocalVariable(name: "lock", arg: 1, scope: !13566, file: !2179, line: 967, type: !12969)
!13569 = !DILocalVariable(name: "key", arg: 2, scope: !13566, file: !2179, line: 967, type: !12958)
!13570 = !DILocation(line: 0, scope: !13566)
!13571 = !DILocation(line: 969, column: 6, scope: !13572)
!13572 = distinct !DILexicalBlock(scope: !13566, file: !2179, line: 969, column: 6)
!13573 = !DILocation(line: 969, column: 23, scope: !13572)
!13574 = !DILocation(line: 969, column: 26, scope: !13572)
!13575 = !DILocation(line: 969, column: 6, scope: !13566)
!13576 = !DILocalVariable(name: "key", arg: 2, scope: !13577, file: !12342, line: 193, type: !12958)
!13577 = distinct !DISubprogram(name: "z_swap", scope: !12342, file: !12342, line: 193, type: !13578, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13580)
!13578 = !DISubroutineType(types: !13579)
!13579 = !{!103, !12969, !12958}
!13580 = !{!13581, !13576}
!13581 = !DILocalVariable(name: "lock", arg: 1, scope: !13577, file: !12342, line: 193, type: !12969)
!13582 = !DILocation(line: 0, scope: !13577, inlinedAt: !13583)
!13583 = distinct !DILocation(line: 970, column: 3, scope: !13584)
!13584 = distinct !DILexicalBlock(scope: !13572, file: !2179, line: 969, column: 39)
!13585 = !DILocation(line: 196, column: 9, scope: !13577, inlinedAt: !13583)
!13586 = !DILocation(line: 971, column: 2, scope: !13584)
!13587 = !DILocation(line: 0, scope: !12993, inlinedAt: !13588)
!13588 = distinct !DILocation(line: 972, column: 3, scope: !13589)
!13589 = distinct !DILexicalBlock(scope: !13572, file: !2179, line: 971, column: 9)
!13590 = !DILocation(line: 0, scope: !13001, inlinedAt: !13591)
!13591 = distinct !DILocation(line: 215, column: 2, scope: !12993, inlinedAt: !13588)
!13592 = !DILocation(line: 95, column: 2, scope: !13001, inlinedAt: !13591)
!13593 = !DILocation(line: 975, column: 1, scope: !13566)
!13594 = distinct !DISubprogram(name: "resched", scope: !2179, file: !2179, line: 940, type: !13595, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13597)
!13595 = !DISubroutineType(types: !13596)
!13596 = !{!211, !137}
!13597 = !{!13598}
!13598 = !DILocalVariable(name: "key", arg: 1, scope: !13594, file: !2179, line: 940, type: !137)
!13599 = !DILocation(line: 0, scope: !13594)
!13600 = !DILocalVariable(name: "key", arg: 1, scope: !13601, file: !6128, line: 112, type: !32)
!13601 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6128, file: !6128, line: 112, type: !13602, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13604)
!13602 = !DISubroutineType(types: !13603)
!13603 = !{!211, !32}
!13604 = !{!13600}
!13605 = !DILocation(line: 0, scope: !13601, inlinedAt: !13606)
!13606 = distinct !DILocation(line: 946, column: 9, scope: !13594)
!13607 = !DILocation(line: 115, column: 13, scope: !13601, inlinedAt: !13606)
!13608 = !DILocation(line: 946, column: 32, scope: !13594)
!13609 = !DILocation(line: 1031, column: 3, scope: !13610, inlinedAt: !13613)
!13610 = distinct !DISubprogram(name: "__get_IPSR", scope: !6302, file: !6302, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13611)
!13611 = !{!13612}
!13612 = !DILocalVariable(name: "result", scope: !13610, file: !6302, line: 1029, type: !137)
!13613 = distinct !DILocation(line: 48, column: 10, scope: !13614, inlinedAt: !13615)
!13614 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7094, file: !7094, line: 46, type: !7095, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !162)
!13615 = distinct !DILocation(line: 946, column: 36, scope: !13594)
!13616 = !{i64 3583802}
!13617 = !DILocation(line: 0, scope: !13610, inlinedAt: !13613)
!13618 = !DILocation(line: 48, column: 9, scope: !13614, inlinedAt: !13615)
!13619 = !DILocation(line: 946, column: 2, scope: !13594)
!13620 = distinct !DISubprogram(name: "need_swap", scope: !2179, file: !2179, line: 953, type: !7095, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13621)
!13621 = !{!13622}
!13622 = !DILocalVariable(name: "new_thread", scope: !13620, file: !2179, line: 959, type: !2074)
!13623 = !DILocation(line: 962, column: 31, scope: !13620)
!13624 = !DILocation(line: 0, scope: !13620)
!13625 = !DILocation(line: 963, column: 23, scope: !13620)
!13626 = !DILocation(line: 963, column: 20, scope: !13620)
!13627 = !DILocation(line: 963, column: 2, scope: !13620)
!13628 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12342, file: !12342, line: 181, type: !6312, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13629)
!13629 = !{!13630, !13631}
!13630 = !DILocalVariable(name: "key", arg: 1, scope: !13628, file: !12342, line: 181, type: !32)
!13631 = !DILocalVariable(name: "ret", scope: !13628, file: !12342, line: 183, type: !103)
!13632 = !DILocation(line: 0, scope: !13628)
!13633 = !DILocation(line: 185, column: 8, scope: !13628)
!13634 = !DILocation(line: 186, column: 2, scope: !13628)
!13635 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2179, file: !2179, line: 665, type: !12924, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13636)
!13636 = !{!13637, !13638, !13640}
!13637 = !DILocalVariable(name: "thread", arg: 1, scope: !13635, file: !2179, line: 665, type: !2074)
!13638 = !DILocalVariable(name: "__i", scope: !13639, file: !2179, line: 671, type: !12958)
!13639 = distinct !DILexicalBlock(scope: !13635, file: !2179, line: 671, column: 2)
!13640 = !DILocalVariable(name: "__key", scope: !13639, file: !2179, line: 671, type: !12958)
!13641 = !DILocation(line: 0, scope: !13635)
!13642 = !DILocation(line: 669, column: 8, scope: !13635)
!13643 = !DILocation(line: 0, scope: !13639)
!13644 = !DILocation(line: 0, scope: !12966, inlinedAt: !13645)
!13645 = distinct !DILocation(line: 671, column: 2, scope: !13639)
!13646 = !DILocation(line: 55, column: 2, scope: !12975, inlinedAt: !13647)
!13647 = distinct !DILocation(line: 145, column: 10, scope: !12966, inlinedAt: !13645)
!13648 = !DILocation(line: 0, scope: !12975, inlinedAt: !13647)
!13649 = !DILocation(line: 672, column: 7, scope: !13650)
!13650 = distinct !DILexicalBlock(scope: !13651, file: !2179, line: 672, column: 7)
!13651 = distinct !DILexicalBlock(scope: !13652, file: !2179, line: 671, column: 26)
!13652 = distinct !DILexicalBlock(scope: !13639, file: !2179, line: 671, column: 2)
!13653 = !DILocation(line: 672, column: 7, scope: !13651)
!13654 = !DILocation(line: 0, scope: !13135, inlinedAt: !13655)
!13655 = distinct !DILocation(line: 673, column: 4, scope: !13656)
!13656 = distinct !DILexicalBlock(scope: !13650, file: !2179, line: 672, column: 35)
!13657 = !DILocation(line: 266, column: 15, scope: !13135, inlinedAt: !13655)
!13658 = !DILocation(line: 266, column: 28, scope: !13135, inlinedAt: !13655)
!13659 = !DILocation(line: 0, scope: !13143, inlinedAt: !13660)
!13660 = distinct !DILocation(line: 268, column: 3, scope: !13147, inlinedAt: !13655)
!13661 = !DILocation(line: 234, column: 2, scope: !13143, inlinedAt: !13660)
!13662 = !DILocation(line: 674, column: 3, scope: !13656)
!13663 = !DILocation(line: 675, column: 3, scope: !13651)
!13664 = !DILocation(line: 676, column: 26, scope: !13651)
!13665 = !DILocation(line: 676, column: 23, scope: !13651)
!13666 = !DILocation(line: 676, column: 3, scope: !13651)
!13667 = !DILocation(line: 0, scope: !12993, inlinedAt: !13668)
!13668 = distinct !DILocation(line: 671, column: 2, scope: !13652)
!13669 = !DILocation(line: 0, scope: !13001, inlinedAt: !13670)
!13670 = distinct !DILocation(line: 215, column: 2, scope: !12993, inlinedAt: !13668)
!13671 = !DILocation(line: 95, column: 2, scope: !13001, inlinedAt: !13670)
!13672 = !DILocation(line: 679, column: 16, scope: !13673)
!13673 = distinct !DILexicalBlock(scope: !13635, file: !2179, line: 679, column: 6)
!13674 = !DILocation(line: 679, column: 13, scope: !13673)
!13675 = !DILocation(line: 679, column: 6, scope: !13635)
!13676 = !DILocation(line: 680, column: 3, scope: !13677)
!13677 = distinct !DILexicalBlock(scope: !13673, file: !2179, line: 679, column: 26)
!13678 = !DILocation(line: 681, column: 2, scope: !13677)
!13679 = !DILocation(line: 684, column: 1, scope: !13635)
!13680 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !12632, file: !12632, line: 52, type: !12942, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13681)
!13681 = !{!13682}
!13682 = !DILocalVariable(name: "thread", arg: 1, scope: !13680, file: !12632, line: 52, type: !2074)
!13683 = !DILocation(line: 0, scope: !13680)
!13684 = !DILocation(line: 54, column: 39, scope: !13680)
!13685 = !DILocation(line: 54, column: 9, scope: !13680)
!13686 = !DILocation(line: 54, column: 2, scope: !13680)
!13687 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12238, file: !12238, line: 141, type: !12924, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13688)
!13688 = !{!13689}
!13689 = !DILocalVariable(name: "thread", arg: 1, scope: !13687, file: !12238, line: 141, type: !2074)
!13690 = !DILocation(line: 0, scope: !13687)
!13691 = !DILocation(line: 143, column: 15, scope: !13687)
!13692 = !DILocation(line: 143, column: 28, scope: !13687)
!13693 = !DILocation(line: 146, column: 1, scope: !13687)
!13694 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12238, file: !12238, line: 73, type: !2826, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !162)
!13695 = !DILocation(line: 55, column: 2, scope: !12975, inlinedAt: !13696)
!13696 = distinct !DILocation(line: 75, column: 30, scope: !13694)
!13697 = !DILocation(line: 0, scope: !12975, inlinedAt: !13696)
!13698 = !DILocation(line: 75, column: 9, scope: !13694)
!13699 = !DILocation(line: 76, column: 1, scope: !13694)
!13700 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2179, file: !2179, line: 977, type: !6391, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13701)
!13701 = !{!13702}
!13702 = !DILocalVariable(name: "key", arg: 1, scope: !13700, file: !2179, line: 977, type: !137)
!13703 = !DILocation(line: 0, scope: !13700)
!13704 = !DILocation(line: 979, column: 6, scope: !13705)
!13705 = distinct !DILexicalBlock(scope: !13700, file: !2179, line: 979, column: 6)
!13706 = !DILocation(line: 979, column: 6, scope: !13700)
!13707 = !DILocation(line: 980, column: 3, scope: !13708)
!13708 = distinct !DILexicalBlock(scope: !13705, file: !2179, line: 979, column: 20)
!13709 = !DILocation(line: 981, column: 2, scope: !13708)
!13710 = !DILocation(line: 0, scope: !13001, inlinedAt: !13711)
!13711 = distinct !DILocation(line: 982, column: 3, scope: !13712)
!13712 = distinct !DILexicalBlock(scope: !13705, file: !2179, line: 981, column: 9)
!13713 = !DILocation(line: 95, column: 2, scope: !13001, inlinedAt: !13711)
!13714 = !DILocation(line: 985, column: 1, scope: !13700)
!13715 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2179, file: !2179, line: 695, type: !12924, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13716)
!13716 = !{!13717, !13718}
!13717 = !DILocalVariable(name: "thread", arg: 1, scope: !13715, file: !2179, line: 695, type: !2074)
!13718 = !DILocalVariable(name: "key", scope: !13715, file: !2179, line: 699, type: !12958)
!13719 = !DILocation(line: 0, scope: !13715)
!13720 = !DILocation(line: 0, scope: !12966, inlinedAt: !13721)
!13721 = distinct !DILocation(line: 699, column: 25, scope: !13715)
!13722 = !DILocation(line: 55, column: 2, scope: !12975, inlinedAt: !13723)
!13723 = distinct !DILocation(line: 145, column: 10, scope: !12966, inlinedAt: !13721)
!13724 = !DILocation(line: 0, scope: !12975, inlinedAt: !13723)
!13725 = !DILocation(line: 702, column: 7, scope: !13726)
!13726 = distinct !DILexicalBlock(scope: !13715, file: !2179, line: 702, column: 6)
!13727 = !DILocation(line: 702, column: 6, scope: !13715)
!13728 = !DILocation(line: 0, scope: !12993, inlinedAt: !13729)
!13729 = distinct !DILocation(line: 703, column: 3, scope: !13730)
!13730 = distinct !DILexicalBlock(scope: !13726, file: !2179, line: 702, column: 38)
!13731 = !DILocation(line: 0, scope: !13001, inlinedAt: !13732)
!13732 = distinct !DILocation(line: 215, column: 2, scope: !12993, inlinedAt: !13729)
!13733 = !DILocation(line: 95, column: 2, scope: !13001, inlinedAt: !13732)
!13734 = !DILocation(line: 704, column: 3, scope: !13730)
!13735 = !DILocation(line: 707, column: 2, scope: !13715)
!13736 = !DILocation(line: 708, column: 2, scope: !13715)
!13737 = !DILocation(line: 710, column: 2, scope: !13715)
!13738 = !DILocation(line: 713, column: 1, scope: !13715)
!13739 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12238, file: !12238, line: 96, type: !13084, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13740)
!13740 = !{!13741}
!13741 = !DILocalVariable(name: "thread", arg: 1, scope: !13739, file: !12238, line: 96, type: !2074)
!13742 = !DILocation(line: 0, scope: !13739)
!13743 = !DILocation(line: 98, column: 23, scope: !13739)
!13744 = !DILocation(line: 98, column: 36, scope: !13739)
!13745 = !DILocation(line: 98, column: 57, scope: !13739)
!13746 = !DILocation(line: 98, column: 2, scope: !13739)
!13747 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12238, file: !12238, line: 148, type: !12924, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13748)
!13748 = !{!13749}
!13749 = !DILocalVariable(name: "thread", arg: 1, scope: !13747, file: !12238, line: 148, type: !2074)
!13750 = !DILocation(line: 0, scope: !13747)
!13751 = !DILocation(line: 150, column: 15, scope: !13747)
!13752 = !DILocation(line: 150, column: 28, scope: !13747)
!13753 = !DILocation(line: 153, column: 1, scope: !13747)
!13754 = distinct !DISubprogram(name: "z_pend_thread", scope: !2179, file: !2179, line: 770, type: !13755, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13761)
!13755 = !DISubroutineType(types: !13756)
!13756 = !{null, !2074, !2105, !13757}
!13757 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1432, line: 67, baseType: !13758)
!13758 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1432, line: 65, size: 64, elements: !13759)
!13759 = !{!13760}
!13760 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13758, file: !1432, line: 66, baseType: !1431, size: 64)
!13761 = !{!13762, !13763, !13764, !13765, !13767}
!13762 = !DILocalVariable(name: "thread", arg: 1, scope: !13754, file: !2179, line: 770, type: !2074)
!13763 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13754, file: !2179, line: 770, type: !2105)
!13764 = !DILocalVariable(name: "timeout", arg: 3, scope: !13754, file: !2179, line: 771, type: !13757)
!13765 = !DILocalVariable(name: "__i", scope: !13766, file: !2179, line: 774, type: !12958)
!13766 = distinct !DILexicalBlock(scope: !13754, file: !2179, line: 774, column: 2)
!13767 = !DILocalVariable(name: "__key", scope: !13766, file: !2179, line: 774, type: !12958)
!13768 = !DILocation(line: 0, scope: !13754)
!13769 = !DILocation(line: 0, scope: !13766)
!13770 = !DILocation(line: 0, scope: !12966, inlinedAt: !13771)
!13771 = distinct !DILocation(line: 774, column: 2, scope: !13766)
!13772 = !DILocation(line: 55, column: 2, scope: !12975, inlinedAt: !13773)
!13773 = distinct !DILocation(line: 145, column: 10, scope: !12966, inlinedAt: !13771)
!13774 = !DILocation(line: 0, scope: !12975, inlinedAt: !13773)
!13775 = !DILocation(line: 775, column: 3, scope: !13776)
!13776 = distinct !DILexicalBlock(scope: !13777, file: !2179, line: 774, column: 26)
!13777 = distinct !DILexicalBlock(scope: !13766, file: !2179, line: 774, column: 2)
!13778 = !DILocation(line: 0, scope: !12993, inlinedAt: !13779)
!13779 = distinct !DILocation(line: 774, column: 2, scope: !13777)
!13780 = !DILocation(line: 0, scope: !13001, inlinedAt: !13781)
!13781 = distinct !DILocation(line: 215, column: 2, scope: !12993, inlinedAt: !13779)
!13782 = !DILocation(line: 95, column: 2, scope: !13001, inlinedAt: !13781)
!13783 = !DILocation(line: 777, column: 1, scope: !13754)
!13784 = distinct !DISubprogram(name: "pend_locked", scope: !2179, file: !2179, line: 760, type: !13755, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13785)
!13785 = !{!13786, !13787, !13788}
!13786 = !DILocalVariable(name: "thread", arg: 1, scope: !13784, file: !2179, line: 760, type: !2074)
!13787 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13784, file: !2179, line: 760, type: !2105)
!13788 = !DILocalVariable(name: "timeout", arg: 3, scope: !13784, file: !2179, line: 761, type: !13757)
!13789 = !DILocation(line: 0, scope: !13784)
!13790 = !DILocation(line: 766, column: 2, scope: !13784)
!13791 = !DILocation(line: 767, column: 2, scope: !13784)
!13792 = !DILocation(line: 768, column: 1, scope: !13784)
!13793 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2179, file: !2179, line: 740, type: !13794, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13796)
!13794 = !DISubroutineType(types: !13795)
!13795 = !{null, !2074, !2105}
!13796 = !{!13797, !13798}
!13797 = !DILocalVariable(name: "thread", arg: 1, scope: !13793, file: !2179, line: 740, type: !2074)
!13798 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13793, file: !2179, line: 740, type: !2105)
!13799 = !DILocation(line: 0, scope: !13793)
!13800 = !DILocation(line: 742, column: 2, scope: !13793)
!13801 = !DILocation(line: 743, column: 2, scope: !13793)
!13802 = !DILocation(line: 747, column: 13, scope: !13803)
!13803 = distinct !DILexicalBlock(scope: !13793, file: !2179, line: 747, column: 6)
!13804 = !DILocation(line: 747, column: 6, scope: !13793)
!13805 = !DILocation(line: 748, column: 16, scope: !13806)
!13806 = distinct !DILexicalBlock(scope: !13803, file: !2179, line: 747, column: 22)
!13807 = !DILocation(line: 748, column: 26, scope: !13806)
!13808 = !DILocation(line: 749, column: 28, scope: !13806)
!13809 = !DILocation(line: 0, scope: !13166, inlinedAt: !13810)
!13810 = distinct !DILocation(line: 749, column: 3, scope: !13806)
!13811 = !DILocation(line: 188, column: 2, scope: !13176, inlinedAt: !13810)
!13812 = !DILocation(line: 188, column: 2, scope: !13178, inlinedAt: !13810)
!13813 = !DILocation(line: 0, scope: !13176, inlinedAt: !13810)
!13814 = !DILocation(line: 189, column: 7, scope: !13181, inlinedAt: !13810)
!13815 = !DILocation(line: 189, column: 35, scope: !13181, inlinedAt: !13810)
!13816 = !DILocation(line: 189, column: 7, scope: !13182, inlinedAt: !13810)
!13817 = !DILocation(line: 191, column: 21, scope: !13186, inlinedAt: !13810)
!13818 = !DILocation(line: 190, column: 4, scope: !13186, inlinedAt: !13810)
!13819 = !DILocation(line: 192, column: 4, scope: !13186, inlinedAt: !13810)
!13820 = distinct !{!13820, !13811, !13821}
!13821 = !DILocation(line: 194, column: 2, scope: !13176, inlinedAt: !13810)
!13822 = !DILocation(line: 196, column: 37, scope: !13166, inlinedAt: !13810)
!13823 = !DILocation(line: 196, column: 2, scope: !13166, inlinedAt: !13810)
!13824 = !DILocation(line: 197, column: 1, scope: !13166, inlinedAt: !13810)
!13825 = !DILocation(line: 751, column: 1, scope: !13793)
!13826 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2179, file: !2179, line: 753, type: !13827, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13829)
!13827 = !DISubroutineType(types: !13828)
!13828 = !{null, !2074, !13757}
!13829 = !{!13830, !13831}
!13830 = !DILocalVariable(name: "thread", arg: 1, scope: !13826, file: !2179, line: 753, type: !2074)
!13831 = !DILocalVariable(name: "timeout", arg: 2, scope: !13826, file: !2179, line: 753, type: !13757)
!13832 = !DILocation(line: 0, scope: !13826)
!13833 = !DILocation(line: 755, column: 7, scope: !13834)
!13834 = distinct !DILexicalBlock(scope: !13826, file: !2179, line: 755, column: 6)
!13835 = !DILocation(line: 755, column: 6, scope: !13826)
!13836 = !DILocation(line: 756, column: 3, scope: !13837)
!13837 = distinct !DILexicalBlock(scope: !13834, file: !2179, line: 755, column: 41)
!13838 = !DILocation(line: 757, column: 2, scope: !13837)
!13839 = !DILocation(line: 758, column: 1, scope: !13826)
!13840 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12632, file: !12632, line: 47, type: !13827, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13841)
!13841 = !{!13842, !13843}
!13842 = !DILocalVariable(name: "thread", arg: 1, scope: !13840, file: !12632, line: 47, type: !2074)
!13843 = !DILocalVariable(name: "ticks", arg: 2, scope: !13840, file: !12632, line: 47, type: !13757)
!13844 = !DILocation(line: 0, scope: !13840)
!13845 = !DILocation(line: 49, column: 30, scope: !13840)
!13846 = !DILocation(line: 49, column: 2, scope: !13840)
!13847 = !DILocation(line: 50, column: 1, scope: !13840)
!13848 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2179, file: !2179, line: 795, type: !2131, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13849)
!13849 = !{!13850, !13851, !13852, !13854, !13855}
!13850 = !DILocalVariable(name: "timeout", arg: 1, scope: !13848, file: !2179, line: 795, type: !2133)
!13851 = !DILocalVariable(name: "thread", scope: !13848, file: !2179, line: 797, type: !2074)
!13852 = !DILocalVariable(name: "__i", scope: !13853, file: !2179, line: 800, type: !12958)
!13853 = distinct !DILexicalBlock(scope: !13848, file: !2179, line: 800, column: 2)
!13854 = !DILocalVariable(name: "__key", scope: !13853, file: !2179, line: 800, type: !12958)
!13855 = !DILocalVariable(name: "killed", scope: !13856, file: !2179, line: 801, type: !211)
!13856 = distinct !DILexicalBlock(scope: !13857, file: !2179, line: 800, column: 26)
!13857 = distinct !DILexicalBlock(scope: !13853, file: !2179, line: 800, column: 2)
!13858 = !DILocation(line: 0, scope: !13848)
!13859 = !DILocation(line: 797, column: 28, scope: !13848)
!13860 = !DILocation(line: 0, scope: !13853)
!13861 = !DILocation(line: 0, scope: !12966, inlinedAt: !13862)
!13862 = distinct !DILocation(line: 800, column: 2, scope: !13853)
!13863 = !DILocation(line: 55, column: 2, scope: !12975, inlinedAt: !13864)
!13864 = distinct !DILocation(line: 145, column: 10, scope: !12966, inlinedAt: !13862)
!13865 = !DILocation(line: 0, scope: !12975, inlinedAt: !13864)
!13866 = !DILocation(line: 801, column: 27, scope: !13856)
!13867 = !DILocation(line: 801, column: 32, scope: !13856)
!13868 = !DILocation(line: 801, column: 61, scope: !13856)
!13869 = !DILocation(line: 0, scope: !13856)
!13870 = !DILocation(line: 804, column: 7, scope: !13856)
!13871 = !DILocation(line: 805, column: 21, scope: !13872)
!13872 = distinct !DILexicalBlock(scope: !13873, file: !2179, line: 805, column: 8)
!13873 = distinct !DILexicalBlock(scope: !13874, file: !2179, line: 804, column: 16)
!13874 = distinct !DILexicalBlock(scope: !13856, file: !2179, line: 804, column: 7)
!13875 = !DILocation(line: 805, column: 31, scope: !13872)
!13876 = !DILocation(line: 805, column: 8, scope: !13873)
!13877 = !DILocation(line: 806, column: 5, scope: !13878)
!13878 = distinct !DILexicalBlock(scope: !13872, file: !2179, line: 805, column: 40)
!13879 = !DILocation(line: 807, column: 4, scope: !13878)
!13880 = !DILocation(line: 808, column: 4, scope: !13873)
!13881 = !DILocation(line: 809, column: 4, scope: !13873)
!13882 = !DILocation(line: 810, column: 4, scope: !13873)
!13883 = !DILocation(line: 811, column: 3, scope: !13873)
!13884 = !DILocation(line: 0, scope: !12993, inlinedAt: !13885)
!13885 = distinct !DILocation(line: 800, column: 2, scope: !13857)
!13886 = !DILocation(line: 0, scope: !13001, inlinedAt: !13887)
!13887 = distinct !DILocation(line: 215, column: 2, scope: !12993, inlinedAt: !13885)
!13888 = !DILocation(line: 95, column: 2, scope: !13001, inlinedAt: !13887)
!13889 = !DILocation(line: 813, column: 1, scope: !13848)
!13890 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2179, file: !2179, line: 779, type: !12924, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13891)
!13891 = !{!13892}
!13892 = !DILocalVariable(name: "thread", arg: 1, scope: !13890, file: !2179, line: 779, type: !2074)
!13893 = !DILocation(line: 0, scope: !13890)
!13894 = !DILocation(line: 781, column: 2, scope: !13890)
!13895 = !DILocation(line: 782, column: 2, scope: !13890)
!13896 = !DILocation(line: 783, column: 15, scope: !13890)
!13897 = !DILocation(line: 783, column: 25, scope: !13890)
!13898 = !DILocation(line: 784, column: 1, scope: !13890)
!13899 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12238, file: !12238, line: 165, type: !12924, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13900)
!13900 = !{!13901}
!13901 = !DILocalVariable(name: "thread", arg: 1, scope: !13899, file: !12238, line: 165, type: !2074)
!13902 = !DILocation(line: 0, scope: !13899)
!13903 = !DILocation(line: 167, column: 15, scope: !13899)
!13904 = !DILocation(line: 167, column: 28, scope: !13899)
!13905 = !DILocation(line: 168, column: 1, scope: !13899)
!13906 = distinct !DISubprogram(name: "unready_thread", scope: !2179, file: !2179, line: 731, type: !12924, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13907)
!13907 = !{!13908}
!13908 = !DILocalVariable(name: "thread", arg: 1, scope: !13906, file: !2179, line: 731, type: !2074)
!13909 = !DILocation(line: 0, scope: !13906)
!13910 = !DILocation(line: 733, column: 6, scope: !13911)
!13911 = distinct !DILexicalBlock(scope: !13906, file: !2179, line: 733, column: 6)
!13912 = !DILocation(line: 733, column: 6, scope: !13906)
!13913 = !DILocation(line: 0, scope: !13135, inlinedAt: !13914)
!13914 = distinct !DILocation(line: 734, column: 3, scope: !13915)
!13915 = distinct !DILexicalBlock(scope: !13911, file: !2179, line: 733, column: 34)
!13916 = !DILocation(line: 266, column: 15, scope: !13135, inlinedAt: !13914)
!13917 = !DILocation(line: 266, column: 28, scope: !13135, inlinedAt: !13914)
!13918 = !DILocation(line: 0, scope: !13143, inlinedAt: !13919)
!13919 = distinct !DILocation(line: 268, column: 3, scope: !13147, inlinedAt: !13914)
!13920 = !DILocation(line: 234, column: 2, scope: !13143, inlinedAt: !13919)
!13921 = !DILocation(line: 735, column: 2, scope: !13915)
!13922 = !DILocation(line: 736, column: 25, scope: !13906)
!13923 = !DILocation(line: 736, column: 22, scope: !13906)
!13924 = !DILocation(line: 736, column: 2, scope: !13906)
!13925 = !DILocation(line: 737, column: 1, scope: !13906)
!13926 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12238, file: !12238, line: 160, type: !12924, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13927)
!13927 = !{!13928}
!13928 = !DILocalVariable(name: "thread", arg: 1, scope: !13926, file: !12238, line: 160, type: !2074)
!13929 = !DILocation(line: 0, scope: !13926)
!13930 = !DILocation(line: 162, column: 15, scope: !13926)
!13931 = !DILocation(line: 162, column: 28, scope: !13926)
!13932 = !DILocation(line: 163, column: 1, scope: !13926)
!13933 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2179, file: !2179, line: 786, type: !12924, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13934)
!13934 = !{!13935, !13936, !13938}
!13935 = !DILocalVariable(name: "thread", arg: 1, scope: !13933, file: !2179, line: 786, type: !2074)
!13936 = !DILocalVariable(name: "__i", scope: !13937, file: !2179, line: 788, type: !12958)
!13937 = distinct !DILexicalBlock(scope: !13933, file: !2179, line: 788, column: 2)
!13938 = !DILocalVariable(name: "__key", scope: !13937, file: !2179, line: 788, type: !12958)
!13939 = !DILocation(line: 0, scope: !13933)
!13940 = !DILocation(line: 0, scope: !13937)
!13941 = !DILocation(line: 0, scope: !12966, inlinedAt: !13942)
!13942 = distinct !DILocation(line: 788, column: 2, scope: !13937)
!13943 = !DILocation(line: 55, column: 2, scope: !12975, inlinedAt: !13944)
!13944 = distinct !DILocation(line: 145, column: 10, scope: !12966, inlinedAt: !13942)
!13945 = !DILocation(line: 0, scope: !12975, inlinedAt: !13944)
!13946 = !DILocation(line: 789, column: 3, scope: !13947)
!13947 = distinct !DILexicalBlock(scope: !13948, file: !2179, line: 788, column: 26)
!13948 = distinct !DILexicalBlock(scope: !13937, file: !2179, line: 788, column: 2)
!13949 = !DILocation(line: 0, scope: !12993, inlinedAt: !13950)
!13950 = distinct !DILocation(line: 788, column: 2, scope: !13948)
!13951 = !DILocation(line: 0, scope: !13001, inlinedAt: !13952)
!13952 = distinct !DILocation(line: 215, column: 2, scope: !12993, inlinedAt: !13950)
!13953 = !DILocation(line: 95, column: 2, scope: !13001, inlinedAt: !13952)
!13954 = !DILocation(line: 791, column: 1, scope: !13933)
!13955 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2179, file: !2179, line: 816, type: !13956, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13958)
!13956 = !DISubroutineType(types: !13957)
!13957 = !{!103, !137, !2105, !13757}
!13958 = !{!13959, !13960, !13961, !13962, !13963, !13965}
!13959 = !DILocalVariable(name: "key", arg: 1, scope: !13955, file: !2179, line: 816, type: !137)
!13960 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13955, file: !2179, line: 816, type: !2105)
!13961 = !DILocalVariable(name: "timeout", arg: 3, scope: !13955, file: !2179, line: 816, type: !13757)
!13962 = !DILocalVariable(name: "ret", scope: !13955, file: !2179, line: 828, type: !103)
!13963 = !DILocalVariable(name: "__i", scope: !13964, file: !2179, line: 829, type: !12958)
!13964 = distinct !DILexicalBlock(scope: !13955, file: !2179, line: 829, column: 2)
!13965 = !DILocalVariable(name: "__key", scope: !13964, file: !2179, line: 829, type: !12958)
!13966 = !DILocation(line: 0, scope: !13955)
!13967 = !DILocation(line: 823, column: 14, scope: !13955)
!13968 = !DILocation(line: 823, column: 2, scope: !13955)
!13969 = !DILocation(line: 826, column: 20, scope: !13955)
!13970 = !DILocation(line: 826, column: 18, scope: !13955)
!13971 = !DILocation(line: 828, column: 12, scope: !13955)
!13972 = !DILocation(line: 0, scope: !13964)
!13973 = !DILocation(line: 0, scope: !12966, inlinedAt: !13974)
!13974 = distinct !DILocation(line: 829, column: 2, scope: !13964)
!13975 = !DILocation(line: 55, column: 2, scope: !12975, inlinedAt: !13976)
!13976 = distinct !DILocation(line: 145, column: 10, scope: !12966, inlinedAt: !13974)
!13977 = !DILocation(line: 0, scope: !12975, inlinedAt: !13976)
!13978 = !DILocation(line: 830, column: 7, scope: !13979)
!13979 = distinct !DILexicalBlock(scope: !13980, file: !2179, line: 830, column: 7)
!13980 = distinct !DILexicalBlock(scope: !13981, file: !2179, line: 829, column: 26)
!13981 = distinct !DILexicalBlock(scope: !13964, file: !2179, line: 829, column: 2)
!13982 = !DILocation(line: 830, column: 26, scope: !13979)
!13983 = !DILocation(line: 830, column: 23, scope: !13979)
!13984 = !DILocation(line: 830, column: 7, scope: !13980)
!13985 = !DILocation(line: 831, column: 20, scope: !13986)
!13986 = distinct !DILexicalBlock(scope: !13979, file: !2179, line: 830, column: 36)
!13987 = !DILocation(line: 832, column: 3, scope: !13986)
!13988 = !DILocation(line: 0, scope: !12993, inlinedAt: !13989)
!13989 = distinct !DILocation(line: 829, column: 2, scope: !13981)
!13990 = !DILocation(line: 0, scope: !13001, inlinedAt: !13991)
!13991 = distinct !DILocation(line: 215, column: 2, scope: !12993, inlinedAt: !13989)
!13992 = !DILocation(line: 95, column: 2, scope: !13001, inlinedAt: !13991)
!13993 = !DILocation(line: 834, column: 2, scope: !13955)
!13994 = distinct !DISubprogram(name: "z_pend_curr", scope: !2179, file: !2179, line: 840, type: !13995, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !13997)
!13995 = !DISubroutineType(types: !13996)
!13996 = !{!103, !12969, !12958, !2105, !13757}
!13997 = !{!13998, !13999, !14000, !14001}
!13998 = !DILocalVariable(name: "lock", arg: 1, scope: !13994, file: !2179, line: 840, type: !12969)
!13999 = !DILocalVariable(name: "key", arg: 2, scope: !13994, file: !2179, line: 840, type: !12958)
!14000 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13994, file: !2179, line: 841, type: !2105)
!14001 = !DILocalVariable(name: "timeout", arg: 4, scope: !13994, file: !2179, line: 841, type: !13757)
!14002 = !DILocation(line: 0, scope: !13994)
!14003 = !DILocation(line: 844, column: 20, scope: !13994)
!14004 = !DILocation(line: 844, column: 18, scope: !13994)
!14005 = !DILocation(line: 0, scope: !12966, inlinedAt: !14006)
!14006 = distinct !DILocation(line: 856, column: 9, scope: !13994)
!14007 = !DILocation(line: 55, column: 2, scope: !12975, inlinedAt: !14008)
!14008 = distinct !DILocation(line: 145, column: 10, scope: !12966, inlinedAt: !14006)
!14009 = !DILocation(line: 0, scope: !12975, inlinedAt: !14008)
!14010 = !DILocation(line: 857, column: 14, scope: !13994)
!14011 = !DILocation(line: 857, column: 2, scope: !13994)
!14012 = !DILocation(line: 0, scope: !13577, inlinedAt: !14013)
!14013 = distinct !DILocation(line: 859, column: 9, scope: !13994)
!14014 = !DILocation(line: 196, column: 9, scope: !13577, inlinedAt: !14013)
!14015 = !DILocation(line: 859, column: 2, scope: !13994)
!14016 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2179, file: !2179, line: 862, type: !14017, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14019)
!14017 = !DISubroutineType(types: !14018)
!14018 = !{!2074, !2105}
!14019 = !{!14020, !14021, !14022, !14024}
!14020 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14016, file: !2179, line: 862, type: !2105)
!14021 = !DILocalVariable(name: "thread", scope: !14016, file: !2179, line: 864, type: !2074)
!14022 = !DILocalVariable(name: "__i", scope: !14023, file: !2179, line: 866, type: !12958)
!14023 = distinct !DILexicalBlock(scope: !14016, file: !2179, line: 866, column: 2)
!14024 = !DILocalVariable(name: "__key", scope: !14023, file: !2179, line: 866, type: !12958)
!14025 = !DILocation(line: 0, scope: !14016)
!14026 = !DILocation(line: 0, scope: !14023)
!14027 = !DILocation(line: 0, scope: !12966, inlinedAt: !14028)
!14028 = distinct !DILocation(line: 866, column: 2, scope: !14023)
!14029 = !DILocation(line: 55, column: 2, scope: !12975, inlinedAt: !14030)
!14030 = distinct !DILocation(line: 145, column: 10, scope: !12966, inlinedAt: !14028)
!14031 = !DILocation(line: 0, scope: !12975, inlinedAt: !14030)
!14032 = !DILocation(line: 867, column: 12, scope: !14033)
!14033 = distinct !DILexicalBlock(scope: !14034, file: !2179, line: 866, column: 26)
!14034 = distinct !DILexicalBlock(scope: !14023, file: !2179, line: 866, column: 2)
!14035 = !DILocation(line: 869, column: 14, scope: !14036)
!14036 = distinct !DILexicalBlock(scope: !14033, file: !2179, line: 869, column: 7)
!14037 = !DILocation(line: 869, column: 7, scope: !14033)
!14038 = !DILocation(line: 870, column: 4, scope: !14039)
!14039 = distinct !DILexicalBlock(scope: !14036, file: !2179, line: 869, column: 23)
!14040 = !DILocation(line: 871, column: 3, scope: !14039)
!14041 = !DILocation(line: 0, scope: !12993, inlinedAt: !14042)
!14042 = distinct !DILocation(line: 866, column: 2, scope: !14034)
!14043 = !DILocation(line: 0, scope: !13001, inlinedAt: !14044)
!14044 = distinct !DILocation(line: 215, column: 2, scope: !12993, inlinedAt: !14042)
!14045 = !DILocation(line: 95, column: 2, scope: !13001, inlinedAt: !14044)
!14046 = !DILocation(line: 874, column: 2, scope: !14016)
!14047 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2179, file: !2179, line: 877, type: !14017, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14048)
!14048 = !{!14049, !14050, !14051, !14053}
!14049 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14047, file: !2179, line: 877, type: !2105)
!14050 = !DILocalVariable(name: "thread", scope: !14047, file: !2179, line: 879, type: !2074)
!14051 = !DILocalVariable(name: "__i", scope: !14052, file: !2179, line: 881, type: !12958)
!14052 = distinct !DILexicalBlock(scope: !14047, file: !2179, line: 881, column: 2)
!14053 = !DILocalVariable(name: "__key", scope: !14052, file: !2179, line: 881, type: !12958)
!14054 = !DILocation(line: 0, scope: !14047)
!14055 = !DILocation(line: 0, scope: !14052)
!14056 = !DILocation(line: 0, scope: !12966, inlinedAt: !14057)
!14057 = distinct !DILocation(line: 881, column: 2, scope: !14052)
!14058 = !DILocation(line: 55, column: 2, scope: !12975, inlinedAt: !14059)
!14059 = distinct !DILocation(line: 145, column: 10, scope: !12966, inlinedAt: !14057)
!14060 = !DILocation(line: 0, scope: !12975, inlinedAt: !14059)
!14061 = !DILocation(line: 882, column: 12, scope: !14062)
!14062 = distinct !DILexicalBlock(scope: !14063, file: !2179, line: 881, column: 26)
!14063 = distinct !DILexicalBlock(scope: !14052, file: !2179, line: 881, column: 2)
!14064 = !DILocation(line: 884, column: 14, scope: !14065)
!14065 = distinct !DILexicalBlock(scope: !14062, file: !2179, line: 884, column: 7)
!14066 = !DILocation(line: 884, column: 7, scope: !14062)
!14067 = !DILocation(line: 885, column: 4, scope: !14068)
!14068 = distinct !DILexicalBlock(scope: !14065, file: !2179, line: 884, column: 23)
!14069 = !DILocation(line: 886, column: 10, scope: !14068)
!14070 = !DILocation(line: 887, column: 3, scope: !14068)
!14071 = !DILocation(line: 0, scope: !12993, inlinedAt: !14072)
!14072 = distinct !DILocation(line: 881, column: 2, scope: !14063)
!14073 = !DILocation(line: 0, scope: !13001, inlinedAt: !14074)
!14074 = distinct !DILocation(line: 215, column: 2, scope: !12993, inlinedAt: !14072)
!14075 = !DILocation(line: 95, column: 2, scope: !13001, inlinedAt: !14074)
!14076 = !DILocation(line: 890, column: 2, scope: !14047)
!14077 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2179, file: !2179, line: 893, type: !12924, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14078)
!14078 = !{!14079}
!14079 = !DILocalVariable(name: "thread", arg: 1, scope: !14077, file: !2179, line: 893, type: !2074)
!14080 = !DILocation(line: 0, scope: !14077)
!14081 = !DILocation(line: 0, scope: !13933, inlinedAt: !14082)
!14082 = distinct !DILocation(line: 895, column: 2, scope: !14077)
!14083 = !DILocation(line: 0, scope: !13937, inlinedAt: !14082)
!14084 = !DILocation(line: 0, scope: !12966, inlinedAt: !14085)
!14085 = distinct !DILocation(line: 788, column: 2, scope: !13937, inlinedAt: !14082)
!14086 = !DILocation(line: 55, column: 2, scope: !12975, inlinedAt: !14087)
!14087 = distinct !DILocation(line: 145, column: 10, scope: !12966, inlinedAt: !14085)
!14088 = !DILocation(line: 0, scope: !12975, inlinedAt: !14087)
!14089 = !DILocation(line: 789, column: 3, scope: !13947, inlinedAt: !14082)
!14090 = !DILocation(line: 0, scope: !12993, inlinedAt: !14091)
!14091 = distinct !DILocation(line: 788, column: 2, scope: !13948, inlinedAt: !14082)
!14092 = !DILocation(line: 0, scope: !13001, inlinedAt: !14093)
!14093 = distinct !DILocation(line: 215, column: 2, scope: !12993, inlinedAt: !14091)
!14094 = !DILocation(line: 95, column: 2, scope: !13001, inlinedAt: !14093)
!14095 = !DILocation(line: 896, column: 8, scope: !14077)
!14096 = !DILocation(line: 897, column: 1, scope: !14077)
!14097 = distinct !DISubprogram(name: "z_set_prio", scope: !2179, file: !2179, line: 902, type: !13286, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14098)
!14098 = !{!14099, !14100, !14101, !14102, !14104}
!14099 = !DILocalVariable(name: "thread", arg: 1, scope: !14097, file: !2179, line: 902, type: !2074)
!14100 = !DILocalVariable(name: "prio", arg: 2, scope: !14097, file: !2179, line: 902, type: !103)
!14101 = !DILocalVariable(name: "need_sched", scope: !14097, file: !2179, line: 904, type: !211)
!14102 = !DILocalVariable(name: "__i", scope: !14103, file: !2179, line: 906, type: !12958)
!14103 = distinct !DILexicalBlock(scope: !14097, file: !2179, line: 906, column: 2)
!14104 = !DILocalVariable(name: "__key", scope: !14103, file: !2179, line: 906, type: !12958)
!14105 = !DILocation(line: 0, scope: !14097)
!14106 = !DILocation(line: 0, scope: !14103)
!14107 = !DILocation(line: 0, scope: !12966, inlinedAt: !14108)
!14108 = distinct !DILocation(line: 906, column: 2, scope: !14103)
!14109 = !DILocation(line: 55, column: 2, scope: !12975, inlinedAt: !14110)
!14110 = distinct !DILocation(line: 145, column: 10, scope: !12966, inlinedAt: !14108)
!14111 = !DILocation(line: 0, scope: !12975, inlinedAt: !14110)
!14112 = !DILocation(line: 907, column: 16, scope: !14113)
!14113 = distinct !DILexicalBlock(scope: !14114, file: !2179, line: 906, column: 26)
!14114 = distinct !DILexicalBlock(scope: !14103, file: !2179, line: 906, column: 2)
!14115 = !DILocation(line: 909, column: 7, scope: !14113)
!14116 = !DILocation(line: 0, scope: !13135, inlinedAt: !14117)
!14117 = distinct !DILocation(line: 912, column: 5, scope: !14118)
!14118 = distinct !DILexicalBlock(scope: !14119, file: !2179, line: 911, column: 63)
!14119 = distinct !DILexicalBlock(scope: !14120, file: !2179, line: 911, column: 8)
!14120 = distinct !DILexicalBlock(scope: !14121, file: !2179, line: 909, column: 19)
!14121 = distinct !DILexicalBlock(scope: !14113, file: !2179, line: 909, column: 7)
!14122 = !DILocation(line: 266, column: 28, scope: !13135, inlinedAt: !14117)
!14123 = !DILocation(line: 0, scope: !13143, inlinedAt: !14124)
!14124 = distinct !DILocation(line: 268, column: 3, scope: !13147, inlinedAt: !14117)
!14125 = !DILocation(line: 234, column: 2, scope: !13143, inlinedAt: !14124)
!14126 = !DILocation(line: 913, column: 23, scope: !14118)
!14127 = !DILocation(line: 0, scope: !13152, inlinedAt: !14128)
!14128 = distinct !DILocation(line: 914, column: 5, scope: !14118)
!14129 = !DILocation(line: 252, column: 28, scope: !13152, inlinedAt: !14128)
!14130 = !DILocation(line: 0, scope: !13159, inlinedAt: !14131)
!14131 = distinct !DILocation(line: 254, column: 3, scope: !13163, inlinedAt: !14128)
!14132 = !DILocation(line: 0, scope: !13166, inlinedAt: !14133)
!14133 = distinct !DILocation(line: 229, column: 2, scope: !13159, inlinedAt: !14131)
!14134 = !DILocation(line: 188, column: 2, scope: !13176, inlinedAt: !14133)
!14135 = !DILocation(line: 188, column: 2, scope: !13178, inlinedAt: !14133)
!14136 = !DILocation(line: 0, scope: !13176, inlinedAt: !14133)
!14137 = !DILocation(line: 189, column: 7, scope: !13181, inlinedAt: !14133)
!14138 = !DILocation(line: 189, column: 35, scope: !13181, inlinedAt: !14133)
!14139 = !DILocation(line: 189, column: 7, scope: !13182, inlinedAt: !14133)
!14140 = !DILocation(line: 190, column: 4, scope: !13186, inlinedAt: !14133)
!14141 = !DILocation(line: 192, column: 4, scope: !13186, inlinedAt: !14133)
!14142 = distinct !{!14142, !14134, !14143}
!14143 = !DILocation(line: 194, column: 2, scope: !13176, inlinedAt: !14133)
!14144 = !DILocation(line: 196, column: 2, scope: !13166, inlinedAt: !14133)
!14145 = !DILocation(line: 197, column: 1, scope: !13166, inlinedAt: !14133)
!14146 = !DILocation(line: 918, column: 4, scope: !14120)
!14147 = !DILocation(line: 919, column: 3, scope: !14120)
!14148 = !DILocation(line: 920, column: 22, scope: !14149)
!14149 = distinct !DILexicalBlock(scope: !14121, file: !2179, line: 919, column: 10)
!14150 = !DILocation(line: 0, scope: !12993, inlinedAt: !14151)
!14151 = distinct !DILocation(line: 906, column: 2, scope: !14114)
!14152 = !DILocation(line: 0, scope: !13001, inlinedAt: !14153)
!14153 = distinct !DILocation(line: 215, column: 2, scope: !12993, inlinedAt: !14151)
!14154 = !DILocation(line: 95, column: 2, scope: !13001, inlinedAt: !14153)
!14155 = !DILocation(line: 926, column: 2, scope: !14097)
!14156 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2179, file: !2179, line: 929, type: !14157, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14159)
!14157 = !DISubroutineType(types: !14158)
!14158 = !{null, !2074, !103}
!14159 = !{!14160, !14161, !14162}
!14160 = !DILocalVariable(name: "thread", arg: 1, scope: !14156, file: !2179, line: 929, type: !2074)
!14161 = !DILocalVariable(name: "prio", arg: 2, scope: !14156, file: !2179, line: 929, type: !103)
!14162 = !DILocalVariable(name: "need_sched", scope: !14156, file: !2179, line: 931, type: !211)
!14163 = !DILocation(line: 0, scope: !14156)
!14164 = !DILocation(line: 931, column: 20, scope: !14156)
!14165 = !DILocation(line: 935, column: 17, scope: !14166)
!14166 = distinct !DILexicalBlock(scope: !14156, file: !2179, line: 935, column: 6)
!14167 = !DILocation(line: 935, column: 20, scope: !14166)
!14168 = !DILocation(line: 935, column: 35, scope: !14166)
!14169 = !DILocation(line: 935, column: 48, scope: !14166)
!14170 = !DILocation(line: 935, column: 6, scope: !14156)
!14171 = !DILocation(line: 936, column: 3, scope: !14172)
!14172 = distinct !DILexicalBlock(scope: !14166, file: !2179, line: 935, column: 55)
!14173 = !DILocation(line: 937, column: 2, scope: !14172)
!14174 = !DILocation(line: 938, column: 1, scope: !14156)
!14175 = distinct !DISubprogram(name: "k_sched_lock", scope: !2179, file: !2179, line: 987, type: !2826, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14176)
!14176 = !{!14177, !14179}
!14177 = !DILocalVariable(name: "__i", scope: !14178, file: !2179, line: 989, type: !12958)
!14178 = distinct !DILexicalBlock(scope: !14175, file: !2179, line: 989, column: 2)
!14179 = !DILocalVariable(name: "__key", scope: !14178, file: !2179, line: 989, type: !12958)
!14180 = !DILocation(line: 0, scope: !14178)
!14181 = !DILocation(line: 0, scope: !12966, inlinedAt: !14182)
!14182 = distinct !DILocation(line: 989, column: 2, scope: !14178)
!14183 = !DILocation(line: 55, column: 2, scope: !12975, inlinedAt: !14184)
!14184 = distinct !DILocation(line: 145, column: 10, scope: !12966, inlinedAt: !14182)
!14185 = !DILocation(line: 0, scope: !12975, inlinedAt: !14184)
!14186 = !DILocation(line: 992, column: 3, scope: !14187)
!14187 = distinct !DILexicalBlock(scope: !14188, file: !2179, line: 989, column: 26)
!14188 = distinct !DILexicalBlock(scope: !14178, file: !2179, line: 989, column: 2)
!14189 = !DILocation(line: 0, scope: !12993, inlinedAt: !14190)
!14190 = distinct !DILocation(line: 989, column: 2, scope: !14188)
!14191 = !DILocation(line: 0, scope: !13001, inlinedAt: !14192)
!14192 = distinct !DILocation(line: 215, column: 2, scope: !12993, inlinedAt: !14190)
!14193 = !DILocation(line: 95, column: 2, scope: !13001, inlinedAt: !14192)
!14194 = !DILocation(line: 994, column: 1, scope: !14175)
!14195 = distinct !DISubprogram(name: "z_sched_lock", scope: !12238, file: !12238, line: 251, type: !2826, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !162)
!14196 = !DILocation(line: 256, column: 4, scope: !14195)
!14197 = !DILocation(line: 256, column: 19, scope: !14195)
!14198 = !DILocation(line: 256, column: 2, scope: !14195)
!14199 = !DILocation(line: 258, column: 2, scope: !14200)
!14200 = distinct !DILexicalBlock(scope: !14195, file: !12238, line: 258, column: 2)
!14201 = !{i64 2154966038}
!14202 = !DILocation(line: 259, column: 1, scope: !14195)
!14203 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2179, file: !2179, line: 996, type: !2826, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14204)
!14204 = !{!14205, !14207}
!14205 = !DILocalVariable(name: "__i", scope: !14206, file: !2179, line: 998, type: !12958)
!14206 = distinct !DILexicalBlock(scope: !14203, file: !2179, line: 998, column: 2)
!14207 = !DILocalVariable(name: "__key", scope: !14206, file: !2179, line: 998, type: !12958)
!14208 = !DILocation(line: 0, scope: !14206)
!14209 = !DILocation(line: 0, scope: !12966, inlinedAt: !14210)
!14210 = distinct !DILocation(line: 998, column: 2, scope: !14206)
!14211 = !DILocation(line: 55, column: 2, scope: !12975, inlinedAt: !14212)
!14212 = distinct !DILocation(line: 145, column: 10, scope: !12966, inlinedAt: !14210)
!14213 = !DILocation(line: 0, scope: !12975, inlinedAt: !14212)
!14214 = !DILocation(line: 1002, column: 5, scope: !14215)
!14215 = distinct !DILexicalBlock(scope: !14216, file: !2179, line: 998, column: 26)
!14216 = distinct !DILexicalBlock(scope: !14206, file: !2179, line: 998, column: 2)
!14217 = !DILocation(line: 1002, column: 20, scope: !14215)
!14218 = !DILocation(line: 1002, column: 3, scope: !14215)
!14219 = !DILocation(line: 1003, column: 3, scope: !14215)
!14220 = !DILocation(line: 0, scope: !12993, inlinedAt: !14221)
!14221 = distinct !DILocation(line: 998, column: 2, scope: !14216)
!14222 = !DILocation(line: 0, scope: !13001, inlinedAt: !14223)
!14223 = distinct !DILocation(line: 215, column: 2, scope: !12993, inlinedAt: !14221)
!14224 = !DILocation(line: 95, column: 2, scope: !13001, inlinedAt: !14223)
!14225 = !DILocation(line: 1011, column: 2, scope: !14203)
!14226 = !DILocation(line: 1012, column: 1, scope: !14203)
!14227 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2179, file: !2179, line: 1014, type: !13274, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !162)
!14228 = !DILocation(line: 1028, column: 25, scope: !14227)
!14229 = !DILocation(line: 1028, column: 2, scope: !14227)
!14230 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2179, file: !2179, line: 1155, type: !14231, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14233)
!14231 = !DISubroutineType(types: !14232)
!14232 = !{!211, !2103, !2103}
!14233 = !{!14234, !14235, !14236, !14237, !14238}
!14234 = !DILocalVariable(name: "a", arg: 1, scope: !14230, file: !2179, line: 1155, type: !2103)
!14235 = !DILocalVariable(name: "b", arg: 2, scope: !14230, file: !2179, line: 1155, type: !2103)
!14236 = !DILocalVariable(name: "thread_a", scope: !14230, file: !2179, line: 1157, type: !2074)
!14237 = !DILocalVariable(name: "thread_b", scope: !14230, file: !2179, line: 1157, type: !2074)
!14238 = !DILocalVariable(name: "cmp", scope: !14230, file: !2179, line: 1158, type: !633)
!14239 = !DILocation(line: 0, scope: !14230)
!14240 = !DILocation(line: 1160, column: 13, scope: !14230)
!14241 = !DILocation(line: 1161, column: 13, scope: !14230)
!14242 = !DILocation(line: 1163, column: 8, scope: !14230)
!14243 = !DILocation(line: 1165, column: 10, scope: !14244)
!14244 = distinct !DILexicalBlock(scope: !14230, file: !2179, line: 1165, column: 6)
!14245 = !DILocation(line: 1165, column: 6, scope: !14230)
!14246 = !DILocation(line: 1167, column: 17, scope: !14247)
!14247 = distinct !DILexicalBlock(scope: !14244, file: !2179, line: 1167, column: 13)
!14248 = !DILocation(line: 1167, column: 13, scope: !14244)
!14249 = !DILocation(line: 1170, column: 25, scope: !14250)
!14250 = distinct !DILexicalBlock(scope: !14247, file: !2179, line: 1169, column: 9)
!14251 = !DILocation(line: 1170, column: 52, scope: !14250)
!14252 = !DILocation(line: 1170, column: 35, scope: !14250)
!14253 = !DILocation(line: 1170, column: 3, scope: !14250)
!14254 = !DILocation(line: 0, scope: !14244)
!14255 = !DILocation(line: 1173, column: 1, scope: !14230)
!14256 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2179, file: !2179, line: 1175, type: !14257, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14272)
!14257 = !DISubroutineType(types: !14258)
!14258 = !{null, !14259, !2074}
!14259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14260, size: 32)
!14260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !14261, line: 37, size: 128, elements: !14262)
!14261 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14262 = !{!14263, !14271}
!14263 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !14260, file: !14261, line: 38, baseType: !14264, size: 96)
!14264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !289, line: 83, size: 96, elements: !14265)
!14265 = !{!14266, !14267, !14270}
!14266 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !14264, file: !289, line: 84, baseType: !2103, size: 32)
!14267 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !14264, file: !289, line: 85, baseType: !14268, size: 32, offset: 32)
!14268 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !289, line: 81, baseType: !14269)
!14269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14231, size: 32)
!14270 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !14264, file: !289, line: 86, baseType: !103, size: 32, offset: 64)
!14271 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !14260, file: !14261, line: 39, baseType: !103, size: 32, offset: 96)
!14272 = !{!14273, !14274, !14275, !14276, !14285}
!14273 = !DILocalVariable(name: "pq", arg: 1, scope: !14256, file: !2179, line: 1175, type: !14259)
!14274 = !DILocalVariable(name: "thread", arg: 2, scope: !14256, file: !2179, line: 1175, type: !2074)
!14275 = !DILocalVariable(name: "t", scope: !14256, file: !2179, line: 1177, type: !2074)
!14276 = !DILocalVariable(name: "__f", scope: !14277, file: !2179, line: 1190, type: !14280)
!14277 = distinct !DILexicalBlock(scope: !14278, file: !2179, line: 1190, column: 3)
!14278 = distinct !DILexicalBlock(scope: !14279, file: !2179, line: 1189, column: 27)
!14279 = distinct !DILexicalBlock(scope: !14256, file: !2179, line: 1189, column: 6)
!14280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !289, line: 155, size: 96, elements: !14281)
!14281 = !{!14282, !14283, !14284}
!14282 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !14280, file: !289, line: 156, baseType: !2174, size: 32)
!14283 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !14280, file: !289, line: 157, baseType: !1726, size: 32, offset: 32)
!14284 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !14280, file: !289, line: 158, baseType: !633, size: 32, offset: 64)
!14285 = !DILocalVariable(name: "n", scope: !14286, file: !2179, line: 1190, type: !2103)
!14286 = distinct !DILexicalBlock(scope: !14287, file: !2179, line: 1190, column: 3)
!14287 = distinct !DILexicalBlock(scope: !14277, file: !2179, line: 1190, column: 3)
!14288 = !DILocation(line: 0, scope: !14256)
!14289 = !DILocation(line: 1181, column: 31, scope: !14256)
!14290 = !DILocation(line: 1181, column: 45, scope: !14256)
!14291 = !DILocation(line: 1181, column: 15, scope: !14256)
!14292 = !DILocation(line: 1181, column: 25, scope: !14256)
!14293 = !DILocation(line: 1189, column: 11, scope: !14279)
!14294 = !DILocation(line: 1189, column: 7, scope: !14279)
!14295 = !DILocation(line: 1189, column: 6, scope: !14256)
!14296 = !DILocation(line: 1190, column: 3, scope: !14277)
!14297 = !DILocation(line: 1190, column: 3, scope: !14286)
!14298 = !DILocation(line: 0, scope: !14286)
!14299 = !DILocation(line: 1190, column: 3, scope: !14287)
!14300 = !DILocation(line: 1193, column: 2, scope: !14278)
!14301 = !DILocation(line: 1191, column: 42, scope: !14302)
!14302 = distinct !DILexicalBlock(scope: !14287, file: !2179, line: 1190, column: 54)
!14303 = !DILocation(line: 1191, column: 12, scope: !14302)
!14304 = !DILocation(line: 1191, column: 22, scope: !14302)
!14305 = distinct !{!14305, !14296, !14306}
!14306 = !DILocation(line: 1192, column: 3, scope: !14277)
!14307 = !DILocation(line: 1195, column: 17, scope: !14256)
!14308 = !DILocation(line: 1195, column: 37, scope: !14256)
!14309 = !DILocation(line: 1195, column: 2, scope: !14256)
!14310 = !DILocation(line: 1196, column: 1, scope: !14256)
!14311 = !DISubprogram(name: "z_rb_foreach_next", scope: !289, file: !289, line: 176, type: !14312, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!14312 = !DISubroutineType(types: !14313)
!14313 = !{!2103, !14314, !14315}
!14314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14264, size: 32)
!14315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14280, size: 32)
!14316 = !DISubprogram(name: "rb_insert", scope: !289, file: !289, line: 105, type: !14317, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!14317 = !DISubroutineType(types: !14318)
!14318 = !{null, !14314, !2103}
!14319 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2179, file: !2179, line: 1198, type: !14257, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14320)
!14320 = !{!14321, !14322}
!14321 = !DILocalVariable(name: "pq", arg: 1, scope: !14319, file: !2179, line: 1198, type: !14259)
!14322 = !DILocalVariable(name: "thread", arg: 2, scope: !14319, file: !2179, line: 1198, type: !2074)
!14323 = !DILocation(line: 0, scope: !14319)
!14324 = !DILocation(line: 1202, column: 17, scope: !14319)
!14325 = !DILocation(line: 1202, column: 37, scope: !14319)
!14326 = !DILocation(line: 1202, column: 2, scope: !14319)
!14327 = !DILocation(line: 1204, column: 16, scope: !14328)
!14328 = distinct !DILexicalBlock(scope: !14319, file: !2179, line: 1204, column: 6)
!14329 = !DILocation(line: 1204, column: 7, scope: !14328)
!14330 = !DILocation(line: 1204, column: 6, scope: !14319)
!14331 = !DILocation(line: 1205, column: 7, scope: !14332)
!14332 = distinct !DILexicalBlock(scope: !14328, file: !2179, line: 1204, column: 22)
!14333 = !DILocation(line: 1205, column: 22, scope: !14332)
!14334 = !DILocation(line: 1206, column: 2, scope: !14332)
!14335 = !DILocation(line: 1207, column: 1, scope: !14319)
!14336 = !DISubprogram(name: "rb_remove", scope: !289, file: !289, line: 110, type: !14317, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!14337 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2179, file: !2179, line: 1209, type: !14338, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14340)
!14338 = !DISubroutineType(types: !14339)
!14339 = !{!2074, !14259}
!14340 = !{!14341, !14342, !14343}
!14341 = !DILocalVariable(name: "pq", arg: 1, scope: !14337, file: !2179, line: 1209, type: !14259)
!14342 = !DILocalVariable(name: "thread", scope: !14337, file: !2179, line: 1211, type: !2074)
!14343 = !DILocalVariable(name: "n", scope: !14337, file: !2179, line: 1212, type: !2103)
!14344 = !DILocation(line: 0, scope: !14337)
!14345 = !DILocation(line: 1212, column: 37, scope: !14337)
!14346 = !DILocation(line: 1212, column: 21, scope: !14337)
!14347 = !DILocation(line: 1217, column: 2, scope: !14337)
!14348 = distinct !DISubprogram(name: "rb_get_min", scope: !289, file: !289, line: 115, type: !14349, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14351)
!14349 = !DISubroutineType(types: !14350)
!14350 = !{!2103, !14314}
!14351 = !{!14352}
!14352 = !DILocalVariable(name: "tree", arg: 1, scope: !14348, file: !289, line: 115, type: !14314)
!14353 = !DILocation(line: 0, scope: !14348)
!14354 = !DILocation(line: 117, column: 9, scope: !14348)
!14355 = !DILocation(line: 117, column: 2, scope: !14348)
!14356 = !DISubprogram(name: "z_rb_get_minmax", scope: !289, file: !289, line: 100, type: !14357, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!14357 = !DISubroutineType(types: !14358)
!14358 = !{!2103, !14314, !208}
!14359 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2179, file: !2179, line: 1246, type: !14360, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14370)
!14360 = !DISubroutineType(types: !14361)
!14361 = !{!2074, !14362}
!14362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14363, size: 32)
!14363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !14261, line: 53, size: 2080, elements: !14364)
!14364 = !{!14365, !14369}
!14365 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !14363, file: !14261, line: 54, baseType: !14366, size: 2048)
!14366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2110, size: 2048, elements: !14367)
!14367 = !{!14368}
!14368 = !DISubrange(count: 32)
!14369 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !14363, file: !14261, line: 55, baseType: !32, size: 32, offset: 2048)
!14370 = !{!14371, !14372, !14373, !14374}
!14371 = !DILocalVariable(name: "pq", arg: 1, scope: !14359, file: !2179, line: 1246, type: !14362)
!14372 = !DILocalVariable(name: "thread", scope: !14359, file: !2179, line: 1252, type: !2074)
!14373 = !DILocalVariable(name: "l", scope: !14359, file: !2179, line: 1253, type: !13169)
!14374 = !DILocalVariable(name: "n", scope: !14359, file: !2179, line: 1254, type: !2175)
!14375 = !DILocation(line: 0, scope: !14359)
!14376 = !DILocation(line: 1248, column: 11, scope: !14377)
!14377 = distinct !DILexicalBlock(scope: !14359, file: !2179, line: 1248, column: 6)
!14378 = !DILocation(line: 1248, column: 7, scope: !14377)
!14379 = !DILocation(line: 1248, column: 6, scope: !14359)
!14380 = !DILocation(line: 1253, column: 31, scope: !14359)
!14381 = !DILocation(line: 1253, column: 20, scope: !14359)
!14382 = !DILocation(line: 1254, column: 19, scope: !14359)
!14383 = !DILocation(line: 1260, column: 1, scope: !14359)
!14384 = distinct !DISubprogram(name: "z_unpend_all", scope: !2179, file: !2179, line: 1262, type: !14385, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14387)
!14385 = !DISubroutineType(types: !14386)
!14386 = !{!103, !2105}
!14387 = !{!14388, !14389, !14390}
!14388 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14384, file: !2179, line: 1262, type: !2105)
!14389 = !DILocalVariable(name: "need_sched", scope: !14384, file: !2179, line: 1264, type: !103)
!14390 = !DILocalVariable(name: "thread", scope: !14384, file: !2179, line: 1265, type: !2074)
!14391 = !DILocation(line: 0, scope: !14384)
!14392 = !DILocation(line: 1267, column: 19, scope: !14384)
!14393 = !DILocation(line: 1267, column: 41, scope: !14384)
!14394 = !DILocation(line: 1267, column: 2, scope: !14384)
!14395 = !DILocation(line: 1268, column: 3, scope: !14396)
!14396 = distinct !DILexicalBlock(scope: !14384, file: !2179, line: 1267, column: 50)
!14397 = !DILocation(line: 1269, column: 3, scope: !14396)
!14398 = distinct !{!14398, !14394, !14399}
!14399 = !DILocation(line: 1271, column: 2, scope: !14384)
!14400 = !DILocation(line: 1273, column: 2, scope: !14384)
!14401 = distinct !DISubprogram(name: "z_waitq_head", scope: !12564, file: !12564, line: 52, type: !14017, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14402)
!14402 = !{!14403}
!14403 = !DILocalVariable(name: "w", arg: 1, scope: !14401, file: !12564, line: 52, type: !2105)
!14404 = !DILocation(line: 0, scope: !14401)
!14405 = !DILocation(line: 54, column: 52, scope: !14401)
!14406 = !DILocation(line: 54, column: 28, scope: !14401)
!14407 = !DILocation(line: 54, column: 9, scope: !14401)
!14408 = !DILocation(line: 54, column: 2, scope: !14401)
!14409 = distinct !DISubprogram(name: "init_ready_q", scope: !2179, file: !2179, line: 1276, type: !14410, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14417)
!14410 = !DISubroutineType(types: !14411)
!14411 = !{null, !14412}
!14412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14413, size: 32)
!14413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !299, line: 83, size: 96, elements: !14414)
!14414 = !{!14415, !14416}
!14415 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !14413, file: !299, line: 86, baseType: !2074, size: 32)
!14416 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !14413, file: !299, line: 90, baseType: !2110, size: 64, offset: 32)
!14417 = !{!14418}
!14418 = !DILocalVariable(name: "rq", arg: 1, scope: !14409, file: !2179, line: 1276, type: !14412)
!14419 = !DILocation(line: 0, scope: !14409)
!14420 = !DILocation(line: 1289, column: 22, scope: !14409)
!14421 = !DILocation(line: 1289, column: 2, scope: !14409)
!14422 = !DILocation(line: 1291, column: 1, scope: !14409)
!14423 = distinct !DISubprogram(name: "sys_dlist_init", scope: !273, file: !273, line: 197, type: !14424, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14426)
!14424 = !DISubroutineType(types: !14425)
!14425 = !{null, !13169}
!14426 = !{!14427}
!14427 = !DILocalVariable(name: "list", arg: 1, scope: !14423, file: !273, line: 197, type: !13169)
!14428 = !DILocation(line: 0, scope: !14423)
!14429 = !DILocation(line: 199, column: 8, scope: !14423)
!14430 = !DILocation(line: 199, column: 13, scope: !14423)
!14431 = !DILocation(line: 200, column: 8, scope: !14423)
!14432 = !DILocation(line: 200, column: 13, scope: !14423)
!14433 = !DILocation(line: 201, column: 1, scope: !14423)
!14434 = distinct !DISubprogram(name: "z_sched_init", scope: !2179, file: !2179, line: 1293, type: !2826, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !162)
!14435 = !DILocation(line: 1302, column: 2, scope: !14434)
!14436 = !DILocation(line: 1306, column: 2, scope: !14434)
!14437 = !DILocation(line: 1309, column: 1, scope: !14434)
!14438 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2179, file: !2179, line: 1311, type: !14439, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14442)
!14439 = !DISubroutineType(types: !14440)
!14440 = !{!103, !14441}
!14441 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !2074)
!14442 = !{!14443}
!14443 = !DILocalVariable(name: "thread", arg: 1, scope: !14438, file: !2179, line: 1311, type: !14441)
!14444 = !DILocation(line: 0, scope: !14438)
!14445 = !DILocation(line: 1313, column: 22, scope: !14438)
!14446 = !DILocation(line: 1313, column: 9, scope: !14438)
!14447 = !DILocation(line: 1313, column: 2, scope: !14438)
!14448 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2179, file: !2179, line: 1325, type: !14449, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14451)
!14449 = !DISubroutineType(types: !14450)
!14450 = !{null, !14441, !103}
!14451 = !{!14452, !14453, !14454}
!14452 = !DILocalVariable(name: "thread", arg: 1, scope: !14448, file: !2179, line: 1325, type: !14441)
!14453 = !DILocalVariable(name: "prio", arg: 2, scope: !14448, file: !2179, line: 1325, type: !103)
!14454 = !DILocalVariable(name: "th", scope: !14448, file: !2179, line: 1334, type: !2074)
!14455 = !DILocation(line: 0, scope: !14448)
!14456 = !DILocation(line: 1336, column: 2, scope: !14448)
!14457 = !DILocation(line: 1337, column: 1, scope: !14448)
!14458 = distinct !DISubprogram(name: "k_can_yield", scope: !2179, file: !2179, line: 1384, type: !7095, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !162)
!14459 = !DILocation(line: 1386, column: 11, scope: !14458)
!14460 = !DILocation(line: 1386, column: 29, scope: !14458)
!14461 = !DILocation(line: 1386, column: 32, scope: !14458)
!14462 = !DILocation(line: 1386, column: 46, scope: !14458)
!14463 = !DILocation(line: 1387, column: 28, scope: !14458)
!14464 = !DILocation(line: 1387, column: 4, scope: !14458)
!14465 = !DILocation(line: 1386, column: 2, scope: !14458)
!14466 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !357, file: !357, line: 989, type: !7095, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !162)
!14467 = !DILocation(line: 993, column: 10, scope: !14466)
!14468 = !DILocation(line: 993, column: 2, scope: !14466)
!14469 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2179, file: !2179, line: 1390, type: !2826, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14470)
!14470 = !{!14471}
!14471 = !DILocalVariable(name: "key", scope: !14469, file: !2179, line: 1396, type: !12958)
!14472 = !DILocation(line: 0, scope: !12966, inlinedAt: !14473)
!14473 = distinct !DILocation(line: 1396, column: 25, scope: !14469)
!14474 = !DILocation(line: 55, column: 2, scope: !12975, inlinedAt: !14475)
!14475 = distinct !DILocation(line: 145, column: 10, scope: !12966, inlinedAt: !14473)
!14476 = !DILocation(line: 0, scope: !12975, inlinedAt: !14475)
!14477 = !DILocation(line: 0, scope: !14469)
!14478 = !DILocation(line: 1400, column: 18, scope: !14479)
!14479 = distinct !DILexicalBlock(scope: !14480, file: !2179, line: 1399, column: 36)
!14480 = distinct !DILexicalBlock(scope: !14469, file: !2179, line: 1398, column: 6)
!14481 = !DILocation(line: 0, scope: !13135, inlinedAt: !14482)
!14482 = distinct !DILocation(line: 1400, column: 3, scope: !14479)
!14483 = !DILocation(line: 266, column: 15, scope: !13135, inlinedAt: !14482)
!14484 = !DILocation(line: 266, column: 28, scope: !13135, inlinedAt: !14482)
!14485 = !DILocation(line: 0, scope: !13143, inlinedAt: !14486)
!14486 = distinct !DILocation(line: 268, column: 3, scope: !13147, inlinedAt: !14482)
!14487 = !DILocation(line: 234, column: 2, scope: !13143, inlinedAt: !14486)
!14488 = !DILocation(line: 1402, column: 15, scope: !14469)
!14489 = !DILocation(line: 0, scope: !13152, inlinedAt: !14490)
!14490 = distinct !DILocation(line: 1402, column: 2, scope: !14469)
!14491 = !DILocation(line: 252, column: 15, scope: !13152, inlinedAt: !14490)
!14492 = !DILocation(line: 252, column: 28, scope: !13152, inlinedAt: !14490)
!14493 = !DILocation(line: 0, scope: !13159, inlinedAt: !14494)
!14494 = distinct !DILocation(line: 254, column: 3, scope: !13163, inlinedAt: !14490)
!14495 = !DILocation(line: 0, scope: !13166, inlinedAt: !14496)
!14496 = distinct !DILocation(line: 229, column: 2, scope: !13159, inlinedAt: !14494)
!14497 = !DILocation(line: 188, column: 2, scope: !13176, inlinedAt: !14496)
!14498 = !DILocation(line: 188, column: 2, scope: !13178, inlinedAt: !14496)
!14499 = !DILocation(line: 0, scope: !13176, inlinedAt: !14496)
!14500 = !DILocation(line: 189, column: 7, scope: !13181, inlinedAt: !14496)
!14501 = !DILocation(line: 189, column: 35, scope: !13181, inlinedAt: !14496)
!14502 = !DILocation(line: 189, column: 7, scope: !13182, inlinedAt: !14496)
!14503 = !DILocation(line: 191, column: 21, scope: !13186, inlinedAt: !14496)
!14504 = !DILocation(line: 190, column: 4, scope: !13186, inlinedAt: !14496)
!14505 = !DILocation(line: 192, column: 4, scope: !13186, inlinedAt: !14496)
!14506 = distinct !{!14506, !14497, !14507}
!14507 = !DILocation(line: 194, column: 2, scope: !13176, inlinedAt: !14496)
!14508 = !DILocation(line: 196, column: 37, scope: !13166, inlinedAt: !14496)
!14509 = !DILocation(line: 196, column: 2, scope: !13166, inlinedAt: !14496)
!14510 = !DILocation(line: 197, column: 1, scope: !13166, inlinedAt: !14496)
!14511 = !DILocation(line: 1403, column: 2, scope: !14469)
!14512 = !DILocation(line: 0, scope: !13577, inlinedAt: !14513)
!14513 = distinct !DILocation(line: 1404, column: 2, scope: !14469)
!14514 = !DILocation(line: 196, column: 9, scope: !13577, inlinedAt: !14513)
!14515 = !DILocation(line: 1405, column: 1, scope: !14469)
!14516 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2179, file: !2179, line: 1459, type: !14517, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14519)
!14517 = !DISubroutineType(types: !14518)
!14518 = !{!633, !13757}
!14519 = !{!14520, !14521, !14522}
!14520 = !DILocalVariable(name: "timeout", arg: 1, scope: !14516, file: !2179, line: 1459, type: !13757)
!14521 = !DILocalVariable(name: "ticks", scope: !14516, file: !2179, line: 1461, type: !1431)
!14522 = !DILocalVariable(name: "ret", scope: !14516, file: !2179, line: 1480, type: !633)
!14523 = !DILocation(line: 0, scope: !14516)
!14524 = !DILocation(line: 1468, column: 6, scope: !14525)
!14525 = distinct !DILexicalBlock(scope: !14516, file: !2179, line: 1468, column: 6)
!14526 = !DILocation(line: 1468, column: 6, scope: !14516)
!14527 = !DILocation(line: 1469, column: 20, scope: !14528)
!14528 = distinct !DILexicalBlock(scope: !14525, file: !2179, line: 1468, column: 40)
!14529 = !DILocation(line: 1469, column: 3, scope: !14528)
!14530 = !DILocation(line: 1473, column: 3, scope: !14528)
!14531 = !DILocation(line: 1478, column: 10, scope: !14516)
!14532 = !DILocation(line: 1480, column: 16, scope: !14516)
!14533 = !DILocation(line: 1485, column: 1, scope: !14516)
!14534 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3276, file: !3276, line: 310, type: !14535, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14537)
!14535 = !DISubroutineType(types: !14536)
!14536 = !{null, !14441}
!14537 = !{!14538}
!14538 = !DILocalVariable(name: "thread", arg: 1, scope: !14534, file: !3276, line: 310, type: !14441)
!14539 = !DILocation(line: 0, scope: !14534)
!14540 = !DILocation(line: 319, column: 2, scope: !14541)
!14541 = distinct !DILexicalBlock(scope: !14534, file: !3276, line: 319, column: 2)
!14542 = !{i64 2154884427}
!14543 = !DILocation(line: 320, column: 2, scope: !14534)
!14544 = !DILocation(line: 321, column: 1, scope: !14534)
!14545 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2179, file: !2179, line: 1415, type: !14546, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14548)
!14546 = !DISubroutineType(types: !14547)
!14547 = !{!633, !1431}
!14548 = !{!14549, !14550, !14551, !14552}
!14549 = !DILocalVariable(name: "ticks", arg: 1, scope: !14545, file: !2179, line: 1415, type: !1431)
!14550 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !14545, file: !2179, line: 1418, type: !137)
!14551 = !DILocalVariable(name: "timeout", scope: !14545, file: !2179, line: 1430, type: !13757)
!14552 = !DILocalVariable(name: "key", scope: !14545, file: !2179, line: 1437, type: !12958)
!14553 = !DILocation(line: 0, scope: !14545)
!14554 = !DILocation(line: 1425, column: 12, scope: !14555)
!14555 = distinct !DILexicalBlock(scope: !14545, file: !2179, line: 1425, column: 6)
!14556 = !DILocation(line: 1425, column: 6, scope: !14545)
!14557 = !DILocation(line: 1426, column: 3, scope: !14558)
!14558 = distinct !DILexicalBlock(scope: !14555, file: !2179, line: 1425, column: 18)
!14559 = !DILocation(line: 1427, column: 3, scope: !14558)
!14560 = !DILocation(line: 1431, column: 24, scope: !14561)
!14561 = distinct !DILexicalBlock(scope: !14545, file: !2179, line: 1431, column: 6)
!14562 = !DILocation(line: 1431, column: 6, scope: !14545)
!14563 = !DILocation(line: 1432, column: 35, scope: !14564)
!14564 = distinct !DILexicalBlock(scope: !14561, file: !2179, line: 1431, column: 30)
!14565 = !DILocation(line: 1432, column: 27, scope: !14564)
!14566 = !DILocation(line: 1433, column: 2, scope: !14564)
!14567 = !DILocation(line: 1434, column: 27, scope: !14568)
!14568 = distinct !DILexicalBlock(scope: !14561, file: !2179, line: 1433, column: 9)
!14569 = !DILocation(line: 0, scope: !14561)
!14570 = !DILocation(line: 0, scope: !12966, inlinedAt: !14571)
!14571 = distinct !DILocation(line: 1437, column: 25, scope: !14545)
!14572 = !DILocation(line: 55, column: 2, scope: !12975, inlinedAt: !14573)
!14573 = distinct !DILocation(line: 145, column: 10, scope: !12966, inlinedAt: !14571)
!14574 = !DILocation(line: 0, scope: !12975, inlinedAt: !14573)
!14575 = !DILocation(line: 1440, column: 20, scope: !14545)
!14576 = !DILocation(line: 1440, column: 18, scope: !14545)
!14577 = !DILocation(line: 1442, column: 2, scope: !14545)
!14578 = !DILocation(line: 1443, column: 23, scope: !14545)
!14579 = !DILocation(line: 1443, column: 2, scope: !14545)
!14580 = !DILocation(line: 1444, column: 29, scope: !14545)
!14581 = !DILocation(line: 1444, column: 2, scope: !14545)
!14582 = !DILocation(line: 0, scope: !13577, inlinedAt: !14583)
!14583 = distinct !DILocation(line: 1446, column: 8, scope: !14545)
!14584 = !DILocation(line: 196, column: 9, scope: !13577, inlinedAt: !14583)
!14585 = !DILocation(line: 1450, column: 10, scope: !14545)
!14586 = !DILocation(line: 1450, column: 45, scope: !14545)
!14587 = !DILocation(line: 1450, column: 43, scope: !14545)
!14588 = !DILocation(line: 1451, column: 6, scope: !14545)
!14589 = !DILocation(line: 1457, column: 1, scope: !14545)
!14590 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !12799, file: !12799, line: 1103, type: !12800, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14591)
!14591 = !{!14592}
!14592 = !DILocalVariable(name: "t", arg: 1, scope: !14590, file: !12799, line: 1103, type: !163)
!14593 = !DILocation(line: 0, scope: !14590)
!14594 = !DILocation(line: 0, scope: !13013, inlinedAt: !14595)
!14595 = distinct !DILocation(line: 1106, column: 9, scope: !14590)
!14596 = !DILocation(line: 139, column: 13, scope: !14597, inlinedAt: !14595)
!14597 = distinct !DILexicalBlock(scope: !14598, file: !12799, line: 138, column: 10)
!14598 = distinct !DILexicalBlock(scope: !14599, file: !12799, line: 136, column: 7)
!14599 = distinct !DILexicalBlock(scope: !13034, file: !12799, line: 134, column: 17)
!14600 = !DILocation(line: 1106, column: 2, scope: !14590)
!14601 = distinct !DISubprogram(name: "k_yield", scope: !3276, file: !3276, line: 140, type: !2826, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !162)
!14602 = !DILocation(line: 148, column: 2, scope: !14603)
!14603 = distinct !DILexicalBlock(scope: !14601, file: !3276, line: 148, column: 2)
!14604 = !{i64 2154883747}
!14605 = !DILocation(line: 149, column: 2, scope: !14601)
!14606 = !DILocation(line: 150, column: 1, scope: !14601)
!14607 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2179, file: !2179, line: 1495, type: !14608, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14610)
!14608 = !DISubroutineType(types: !14609)
!14609 = !{!633, !103}
!14610 = !{!14611, !14612}
!14611 = !DILocalVariable(name: "us", arg: 1, scope: !14607, file: !2179, line: 1495, type: !103)
!14612 = !DILocalVariable(name: "ticks", scope: !14607, file: !2179, line: 1497, type: !633)
!14613 = !DILocation(line: 0, scope: !14607)
!14614 = !DILocation(line: 1501, column: 31, scope: !14607)
!14615 = !DILocation(line: 1501, column: 10, scope: !14607)
!14616 = !DILocation(line: 1502, column: 23, scope: !14607)
!14617 = !DILocation(line: 1502, column: 10, scope: !14607)
!14618 = !DILocation(line: 1506, column: 31, scope: !14607)
!14619 = !DILocation(line: 1506, column: 9, scope: !14607)
!14620 = !DILocation(line: 1506, column: 2, scope: !14607)
!14621 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !12799, file: !12799, line: 571, type: !12800, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14622)
!14622 = !{!14623}
!14623 = !DILocalVariable(name: "t", arg: 1, scope: !14621, file: !12799, line: 571, type: !163)
!14624 = !DILocation(line: 0, scope: !14621)
!14625 = !DILocation(line: 0, scope: !13013, inlinedAt: !14626)
!14626 = distinct !DILocation(line: 574, column: 9, scope: !14621)
!14627 = !DILocation(line: 135, column: 5, scope: !14599, inlinedAt: !14626)
!14628 = !DILocation(line: 139, column: 13, scope: !14597, inlinedAt: !14626)
!14629 = !DILocation(line: 574, column: 2, scope: !14621)
!14630 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !12799, file: !12799, line: 1187, type: !12800, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14631)
!14631 = !{!14632}
!14632 = !DILocalVariable(name: "t", arg: 1, scope: !14630, file: !12799, line: 1187, type: !163)
!14633 = !DILocation(line: 0, scope: !14630)
!14634 = !DILocation(line: 0, scope: !13013, inlinedAt: !14635)
!14635 = distinct !DILocation(line: 1190, column: 9, scope: !14630)
!14636 = !DILocation(line: 145, column: 13, scope: !14637, inlinedAt: !14635)
!14637 = distinct !DILexicalBlock(scope: !13031, file: !12799, line: 144, column: 10)
!14638 = !DILocation(line: 1190, column: 2, scope: !14630)
!14639 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2179, file: !2179, line: 1517, type: !14535, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14640)
!14640 = !{!14641}
!14641 = !DILocalVariable(name: "thread", arg: 1, scope: !14639, file: !2179, line: 1517, type: !14441)
!14642 = !DILocation(line: 0, scope: !14639)
!14643 = !DILocation(line: 1521, column: 6, scope: !14644)
!14644 = distinct !DILexicalBlock(scope: !14639, file: !2179, line: 1521, column: 6)
!14645 = !DILocation(line: 1521, column: 6, scope: !14639)
!14646 = !DILocation(line: 1525, column: 6, scope: !14647)
!14647 = distinct !DILexicalBlock(scope: !14639, file: !2179, line: 1525, column: 6)
!14648 = !DILocation(line: 1525, column: 37, scope: !14647)
!14649 = !DILocation(line: 1525, column: 6, scope: !14639)
!14650 = !DILocation(line: 1527, column: 20, scope: !14651)
!14651 = distinct !DILexicalBlock(scope: !14652, file: !2179, line: 1527, column: 7)
!14652 = distinct !DILexicalBlock(scope: !14647, file: !2179, line: 1525, column: 42)
!14653 = !DILocation(line: 1527, column: 33, scope: !14651)
!14654 = !DILocation(line: 1527, column: 7, scope: !14652)
!14655 = !DILocation(line: 1532, column: 2, scope: !14639)
!14656 = !DILocation(line: 1533, column: 2, scope: !14639)
!14657 = !DILocation(line: 1031, column: 3, scope: !13610, inlinedAt: !14658)
!14658 = distinct !DILocation(line: 48, column: 10, scope: !13614, inlinedAt: !14659)
!14659 = distinct !DILocation(line: 1537, column: 7, scope: !14660)
!14660 = distinct !DILexicalBlock(scope: !14639, file: !2179, line: 1537, column: 6)
!14661 = !DILocation(line: 0, scope: !13610, inlinedAt: !14658)
!14662 = !DILocation(line: 48, column: 9, scope: !13614, inlinedAt: !14659)
!14663 = !DILocation(line: 1537, column: 6, scope: !14639)
!14664 = !DILocation(line: 1538, column: 3, scope: !14665)
!14665 = distinct !DILexicalBlock(scope: !14660, file: !2179, line: 1537, column: 25)
!14666 = !DILocation(line: 1539, column: 2, scope: !14665)
!14667 = !DILocation(line: 1540, column: 1, scope: !14639)
!14668 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12238, file: !12238, line: 101, type: !13084, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14669)
!14669 = !{!14670}
!14670 = !DILocalVariable(name: "thread", arg: 1, scope: !14668, file: !12238, line: 101, type: !2074)
!14671 = !DILocation(line: 0, scope: !14668)
!14672 = !DILocation(line: 103, column: 23, scope: !14668)
!14673 = !DILocation(line: 103, column: 36, scope: !14668)
!14674 = !DILocation(line: 103, column: 55, scope: !14668)
!14675 = !DILocation(line: 103, column: 2, scope: !14668)
!14676 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2179, file: !2179, line: 1567, type: !14677, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14679)
!14677 = !DISubroutineType(types: !14678)
!14678 = !{!14441}
!14679 = !{!14680}
!14680 = !DILocalVariable(name: "ret", scope: !14676, file: !2179, line: 1577, type: !14441)
!14681 = !DILocation(line: 1577, column: 30, scope: !14676)
!14682 = !DILocation(line: 0, scope: !14676)
!14683 = !DILocation(line: 1582, column: 2, scope: !14676)
!14684 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2179, file: !2179, line: 1593, type: !7369, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !162)
!14685 = !DILocation(line: 1031, column: 3, scope: !13610, inlinedAt: !14686)
!14686 = distinct !DILocation(line: 48, column: 10, scope: !13614, inlinedAt: !14687)
!14687 = distinct !DILocation(line: 1595, column: 10, scope: !14684)
!14688 = !DILocation(line: 0, scope: !13610, inlinedAt: !14686)
!14689 = !DILocation(line: 48, column: 9, scope: !13614, inlinedAt: !14687)
!14690 = !DILocation(line: 1595, column: 27, scope: !14684)
!14691 = !DILocation(line: 1595, column: 41, scope: !14684)
!14692 = !DILocation(line: 1595, column: 30, scope: !14684)
!14693 = !DILocation(line: 1595, column: 2, scope: !14684)
!14694 = distinct !DISubprogram(name: "z_thread_abort", scope: !2179, file: !2179, line: 1725, type: !12924, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14695)
!14695 = !{!14696, !14697}
!14696 = !DILocalVariable(name: "thread", arg: 1, scope: !14694, file: !2179, line: 1725, type: !2074)
!14697 = !DILocalVariable(name: "key", scope: !14694, file: !2179, line: 1727, type: !12958)
!14698 = !DILocation(line: 0, scope: !14694)
!14699 = !DILocation(line: 0, scope: !12966, inlinedAt: !14700)
!14700 = distinct !DILocation(line: 1727, column: 25, scope: !14694)
!14701 = !DILocation(line: 55, column: 2, scope: !12975, inlinedAt: !14702)
!14702 = distinct !DILocation(line: 145, column: 10, scope: !12966, inlinedAt: !14700)
!14703 = !DILocation(line: 0, scope: !12975, inlinedAt: !14702)
!14704 = !DILocation(line: 1729, column: 20, scope: !14705)
!14705 = distinct !DILexicalBlock(scope: !14694, file: !2179, line: 1729, column: 6)
!14706 = !DILocation(line: 1729, column: 33, scope: !14705)
!14707 = !DILocation(line: 1729, column: 48, scope: !14705)
!14708 = !DILocation(line: 1729, column: 6, scope: !14694)
!14709 = !DILocation(line: 0, scope: !12993, inlinedAt: !14710)
!14710 = distinct !DILocation(line: 1730, column: 3, scope: !14711)
!14711 = distinct !DILexicalBlock(scope: !14705, file: !2179, line: 1729, column: 54)
!14712 = !DILocation(line: 0, scope: !13001, inlinedAt: !14713)
!14713 = distinct !DILocation(line: 215, column: 2, scope: !12993, inlinedAt: !14710)
!14714 = !DILocation(line: 95, column: 2, scope: !13001, inlinedAt: !14713)
!14715 = !DILocation(line: 1732, column: 3, scope: !14716)
!14716 = distinct !DILexicalBlock(scope: !14711, file: !2179, line: 1732, column: 3)
!14717 = !{i64 2155621157, i64 2155621173, i64 2155621199, i64 2155621227, i64 2155621247}
!14718 = !DILocation(line: 1733, column: 3, scope: !14711)
!14719 = !DILocation(line: 1736, column: 20, scope: !14720)
!14720 = distinct !DILexicalBlock(scope: !14694, file: !2179, line: 1736, column: 6)
!14721 = !DILocation(line: 1736, column: 33, scope: !14720)
!14722 = !DILocation(line: 1736, column: 49, scope: !14720)
!14723 = !DILocation(line: 1736, column: 6, scope: !14694)
!14724 = !DILocation(line: 0, scope: !12993, inlinedAt: !14725)
!14725 = distinct !DILocation(line: 1737, column: 3, scope: !14726)
!14726 = distinct !DILexicalBlock(scope: !14720, file: !2179, line: 1736, column: 56)
!14727 = !DILocation(line: 0, scope: !13001, inlinedAt: !14728)
!14728 = distinct !DILocation(line: 215, column: 2, scope: !12993, inlinedAt: !14725)
!14729 = !DILocation(line: 95, column: 2, scope: !13001, inlinedAt: !14728)
!14730 = !DILocation(line: 1738, column: 3, scope: !14726)
!14731 = !DILocation(line: 1775, column: 2, scope: !14694)
!14732 = !DILocation(line: 1776, column: 16, scope: !14733)
!14733 = distinct !DILexicalBlock(scope: !14694, file: !2179, line: 1776, column: 6)
!14734 = !DILocation(line: 1776, column: 13, scope: !14733)
!14735 = !DILocation(line: 1776, column: 25, scope: !14733)
!14736 = !DILocation(line: 1031, column: 3, scope: !13610, inlinedAt: !14737)
!14737 = distinct !DILocation(line: 48, column: 10, scope: !13614, inlinedAt: !14738)
!14738 = distinct !DILocation(line: 1776, column: 29, scope: !14733)
!14739 = !DILocation(line: 0, scope: !13610, inlinedAt: !14737)
!14740 = !DILocation(line: 48, column: 9, scope: !13614, inlinedAt: !14738)
!14741 = !DILocation(line: 1776, column: 6, scope: !14694)
!14742 = !DILocation(line: 0, scope: !13577, inlinedAt: !14743)
!14743 = distinct !DILocation(line: 1777, column: 3, scope: !14744)
!14744 = distinct !DILexicalBlock(scope: !14733, file: !2179, line: 1776, column: 47)
!14745 = !DILocation(line: 196, column: 9, scope: !13577, inlinedAt: !14743)
!14746 = !DILocation(line: 1779, column: 2, scope: !14744)
!14747 = !DILocation(line: 0, scope: !12993, inlinedAt: !14748)
!14748 = distinct !DILocation(line: 1780, column: 2, scope: !14694)
!14749 = !DILocation(line: 0, scope: !13001, inlinedAt: !14750)
!14750 = distinct !DILocation(line: 215, column: 2, scope: !12993, inlinedAt: !14748)
!14751 = !DILocation(line: 95, column: 2, scope: !13001, inlinedAt: !14750)
!14752 = !DILocation(line: 1781, column: 1, scope: !14694)
!14753 = distinct !DISubprogram(name: "end_thread", scope: !2179, file: !2179, line: 1690, type: !12924, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14754)
!14754 = !{!14755}
!14755 = !DILocalVariable(name: "thread", arg: 1, scope: !14753, file: !2179, line: 1690, type: !2074)
!14756 = !DILocation(line: 0, scope: !14753)
!14757 = !DILocation(line: 1695, column: 20, scope: !14758)
!14758 = distinct !DILexicalBlock(scope: !14753, file: !2179, line: 1695, column: 6)
!14759 = !DILocation(line: 1695, column: 33, scope: !14758)
!14760 = !DILocation(line: 1695, column: 49, scope: !14758)
!14761 = !DILocation(line: 1695, column: 6, scope: !14753)
!14762 = !DILocation(line: 1697, column: 29, scope: !14763)
!14763 = distinct !DILexicalBlock(scope: !14758, file: !2179, line: 1695, column: 56)
!14764 = !DILocation(line: 1698, column: 7, scope: !14765)
!14765 = distinct !DILexicalBlock(scope: !14763, file: !2179, line: 1698, column: 7)
!14766 = !DILocation(line: 1698, column: 7, scope: !14763)
!14767 = !DILocation(line: 0, scope: !13135, inlinedAt: !14768)
!14768 = distinct !DILocation(line: 1699, column: 4, scope: !14769)
!14769 = distinct !DILexicalBlock(scope: !14765, file: !2179, line: 1698, column: 35)
!14770 = !DILocation(line: 266, column: 28, scope: !13135, inlinedAt: !14768)
!14771 = !DILocation(line: 0, scope: !13143, inlinedAt: !14772)
!14772 = distinct !DILocation(line: 268, column: 3, scope: !13147, inlinedAt: !14768)
!14773 = !DILocation(line: 234, column: 2, scope: !13143, inlinedAt: !14772)
!14774 = !DILocation(line: 1700, column: 3, scope: !14769)
!14775 = !DILocation(line: 1701, column: 20, scope: !14776)
!14776 = distinct !DILexicalBlock(scope: !14763, file: !2179, line: 1701, column: 7)
!14777 = !DILocation(line: 1701, column: 30, scope: !14776)
!14778 = !DILocation(line: 1701, column: 7, scope: !14763)
!14779 = !DILocation(line: 1702, column: 4, scope: !14780)
!14780 = distinct !DILexicalBlock(scope: !14776, file: !2179, line: 1701, column: 39)
!14781 = !DILocation(line: 1703, column: 3, scope: !14780)
!14782 = !DILocation(line: 1704, column: 9, scope: !14763)
!14783 = !DILocation(line: 1705, column: 23, scope: !14763)
!14784 = !DILocation(line: 1705, column: 3, scope: !14763)
!14785 = !DILocation(line: 1706, column: 3, scope: !14763)
!14786 = !DILocation(line: 1722, column: 2, scope: !14763)
!14787 = !DILocation(line: 1723, column: 1, scope: !14753)
!14788 = distinct !DISubprogram(name: "unpend_all", scope: !2179, file: !2179, line: 1674, type: !14789, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14791)
!14789 = !DISubroutineType(types: !14790)
!14790 = !{null, !2105}
!14791 = !{!14792, !14793}
!14792 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14788, file: !2179, line: 1674, type: !2105)
!14793 = !DILocalVariable(name: "thread", scope: !14788, file: !2179, line: 1676, type: !2074)
!14794 = !DILocation(line: 0, scope: !14788)
!14795 = !DILocation(line: 1678, column: 19, scope: !14788)
!14796 = !DILocation(line: 1678, column: 41, scope: !14788)
!14797 = !DILocation(line: 1678, column: 2, scope: !14788)
!14798 = !DILocation(line: 1679, column: 3, scope: !14799)
!14799 = distinct !DILexicalBlock(scope: !14788, file: !2179, line: 1678, column: 50)
!14800 = !DILocation(line: 1680, column: 9, scope: !14799)
!14801 = !DILocalVariable(name: "thread", arg: 1, scope: !14802, file: !12258, line: 65, type: !2074)
!14802 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12258, file: !12258, line: 65, type: !14803, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14805)
!14803 = !DISubroutineType(types: !14804)
!14804 = !{null, !2074, !32}
!14805 = !{!14801, !14806}
!14806 = !DILocalVariable(name: "value", arg: 2, scope: !14802, file: !12258, line: 65, type: !32)
!14807 = !DILocation(line: 0, scope: !14802, inlinedAt: !14808)
!14808 = distinct !DILocation(line: 1681, column: 3, scope: !14799)
!14809 = !DILocation(line: 67, column: 15, scope: !14802, inlinedAt: !14808)
!14810 = !DILocation(line: 67, column: 33, scope: !14802, inlinedAt: !14808)
!14811 = !DILocation(line: 1682, column: 3, scope: !14799)
!14812 = distinct !{!14812, !14797, !14813}
!14813 = !DILocation(line: 1683, column: 2, scope: !14788)
!14814 = !DILocation(line: 1684, column: 1, scope: !14788)
!14815 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2179, file: !2179, line: 1794, type: !14816, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14818)
!14816 = !DISubroutineType(types: !14817)
!14817 = !{!103, !2074, !13757}
!14818 = !{!14819, !14820, !14821, !14822}
!14819 = !DILocalVariable(name: "thread", arg: 1, scope: !14815, file: !2179, line: 1794, type: !2074)
!14820 = !DILocalVariable(name: "timeout", arg: 2, scope: !14815, file: !2179, line: 1794, type: !13757)
!14821 = !DILocalVariable(name: "key", scope: !14815, file: !2179, line: 1796, type: !12958)
!14822 = !DILocalVariable(name: "ret", scope: !14815, file: !2179, line: 1797, type: !103)
!14823 = !DILocation(line: 0, scope: !14815)
!14824 = !DILocation(line: 0, scope: !12966, inlinedAt: !14825)
!14825 = distinct !DILocation(line: 1796, column: 25, scope: !14815)
!14826 = !DILocation(line: 55, column: 2, scope: !12975, inlinedAt: !14827)
!14827 = distinct !DILocation(line: 145, column: 10, scope: !12966, inlinedAt: !14825)
!14828 = !DILocation(line: 0, scope: !12975, inlinedAt: !14827)
!14829 = !DILocation(line: 1801, column: 20, scope: !14830)
!14830 = distinct !DILexicalBlock(scope: !14815, file: !2179, line: 1801, column: 6)
!14831 = !DILocation(line: 1801, column: 33, scope: !14830)
!14832 = !DILocation(line: 1801, column: 49, scope: !14830)
!14833 = !DILocation(line: 1801, column: 6, scope: !14815)
!14834 = !DILocation(line: 1803, column: 13, scope: !14835)
!14835 = distinct !DILexicalBlock(scope: !14830, file: !2179, line: 1803, column: 13)
!14836 = !DILocation(line: 1803, column: 13, scope: !14830)
!14837 = !DILocation(line: 1805, column: 24, scope: !14838)
!14838 = distinct !DILexicalBlock(scope: !14835, file: !2179, line: 1805, column: 13)
!14839 = !DILocation(line: 1805, column: 21, scope: !14838)
!14840 = !DILocation(line: 1805, column: 34, scope: !14838)
!14841 = !DILocation(line: 1806, column: 20, scope: !14838)
!14842 = !DILocation(line: 1806, column: 44, scope: !14838)
!14843 = !DILocation(line: 1806, column: 30, scope: !14838)
!14844 = !DILocation(line: 1805, column: 13, scope: !14835)
!14845 = !DILocation(line: 1810, column: 42, scope: !14846)
!14846 = distinct !DILexicalBlock(scope: !14838, file: !2179, line: 1808, column: 9)
!14847 = !DILocation(line: 1810, column: 3, scope: !14846)
!14848 = !DILocation(line: 1811, column: 22, scope: !14846)
!14849 = !DILocation(line: 1811, column: 3, scope: !14846)
!14850 = !DILocation(line: 0, scope: !13577, inlinedAt: !14851)
!14851 = distinct !DILocation(line: 1814, column: 9, scope: !14846)
!14852 = !DILocation(line: 196, column: 9, scope: !13577, inlinedAt: !14851)
!14853 = !DILocation(line: 1817, column: 3, scope: !14846)
!14854 = !DILocation(line: 0, scope: !14830)
!14855 = !DILocation(line: 0, scope: !12993, inlinedAt: !14856)
!14856 = distinct !DILocation(line: 1822, column: 2, scope: !14815)
!14857 = !DILocation(line: 0, scope: !13001, inlinedAt: !14858)
!14858 = distinct !DILocation(line: 215, column: 2, scope: !12993, inlinedAt: !14856)
!14859 = !DILocation(line: 95, column: 2, scope: !13001, inlinedAt: !14858)
!14860 = !DILocation(line: 1823, column: 2, scope: !14815)
!14861 = !DILocation(line: 1824, column: 1, scope: !14815)
!14862 = distinct !DISubprogram(name: "z_sched_wake", scope: !2179, file: !2179, line: 1882, type: !14863, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14865)
!14863 = !DISubroutineType(types: !14864)
!14864 = !{!211, !2105, !103, !102}
!14865 = !{!14866, !14867, !14868, !14869, !14870, !14871, !14873}
!14866 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14862, file: !2179, line: 1882, type: !2105)
!14867 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !14862, file: !2179, line: 1882, type: !103)
!14868 = !DILocalVariable(name: "swap_data", arg: 3, scope: !14862, file: !2179, line: 1882, type: !102)
!14869 = !DILocalVariable(name: "thread", scope: !14862, file: !2179, line: 1884, type: !2074)
!14870 = !DILocalVariable(name: "ret", scope: !14862, file: !2179, line: 1885, type: !211)
!14871 = !DILocalVariable(name: "__i", scope: !14872, file: !2179, line: 1887, type: !12958)
!14872 = distinct !DILexicalBlock(scope: !14862, file: !2179, line: 1887, column: 2)
!14873 = !DILocalVariable(name: "__key", scope: !14872, file: !2179, line: 1887, type: !12958)
!14874 = !DILocation(line: 0, scope: !14862)
!14875 = !DILocation(line: 0, scope: !14872)
!14876 = !DILocation(line: 0, scope: !12966, inlinedAt: !14877)
!14877 = distinct !DILocation(line: 1887, column: 2, scope: !14872)
!14878 = !DILocation(line: 55, column: 2, scope: !12975, inlinedAt: !14879)
!14879 = distinct !DILocation(line: 145, column: 10, scope: !12966, inlinedAt: !14877)
!14880 = !DILocation(line: 0, scope: !12975, inlinedAt: !14879)
!14881 = !DILocation(line: 1888, column: 12, scope: !14882)
!14882 = distinct !DILexicalBlock(scope: !14883, file: !2179, line: 1887, column: 26)
!14883 = distinct !DILexicalBlock(scope: !14872, file: !2179, line: 1887, column: 2)
!14884 = !DILocation(line: 1890, column: 14, scope: !14885)
!14885 = distinct !DILexicalBlock(scope: !14882, file: !2179, line: 1890, column: 7)
!14886 = !DILocation(line: 1890, column: 7, scope: !14882)
!14887 = !DILocalVariable(name: "thread", arg: 1, scope: !14888, file: !14889, line: 134, type: !2074)
!14888 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !14889, file: !14889, line: 134, type: !14890, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14892)
!14889 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14890 = !DISubroutineType(types: !14891)
!14891 = !{null, !2074, !32, !102}
!14892 = !{!14887, !14893, !14894}
!14893 = !DILocalVariable(name: "value", arg: 2, scope: !14888, file: !14889, line: 135, type: !32)
!14894 = !DILocalVariable(name: "data", arg: 3, scope: !14888, file: !14889, line: 136, type: !102)
!14895 = !DILocation(line: 0, scope: !14888, inlinedAt: !14896)
!14896 = distinct !DILocation(line: 1891, column: 4, scope: !14897)
!14897 = distinct !DILexicalBlock(scope: !14885, file: !2179, line: 1890, column: 23)
!14898 = !DILocation(line: 0, scope: !14802, inlinedAt: !14899)
!14899 = distinct !DILocation(line: 138, column: 2, scope: !14888, inlinedAt: !14896)
!14900 = !DILocation(line: 67, column: 15, scope: !14802, inlinedAt: !14899)
!14901 = !DILocation(line: 67, column: 33, scope: !14802, inlinedAt: !14899)
!14902 = !DILocation(line: 139, column: 15, scope: !14888, inlinedAt: !14896)
!14903 = !DILocation(line: 139, column: 25, scope: !14888, inlinedAt: !14896)
!14904 = !DILocation(line: 1894, column: 4, scope: !14897)
!14905 = !DILocation(line: 1895, column: 10, scope: !14897)
!14906 = !DILocation(line: 1896, column: 4, scope: !14897)
!14907 = !DILocation(line: 1898, column: 3, scope: !14897)
!14908 = !DILocation(line: 0, scope: !12993, inlinedAt: !14909)
!14909 = distinct !DILocation(line: 1887, column: 2, scope: !14883)
!14910 = !DILocation(line: 0, scope: !13001, inlinedAt: !14911)
!14911 = distinct !DILocation(line: 215, column: 2, scope: !12993, inlinedAt: !14909)
!14912 = !DILocation(line: 95, column: 2, scope: !13001, inlinedAt: !14911)
!14913 = !DILocation(line: 1901, column: 2, scope: !14862)
!14914 = distinct !DISubprogram(name: "z_sched_wait", scope: !2179, file: !2179, line: 1904, type: !14915, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !14918)
!14915 = !DISubroutineType(types: !14916)
!14916 = !{!103, !12969, !12958, !2105, !13757, !14917}
!14917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!14918 = !{!14919, !14920, !14921, !14922, !14923, !14924}
!14919 = !DILocalVariable(name: "lock", arg: 1, scope: !14914, file: !2179, line: 1904, type: !12969)
!14920 = !DILocalVariable(name: "key", arg: 2, scope: !14914, file: !2179, line: 1904, type: !12958)
!14921 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14914, file: !2179, line: 1905, type: !2105)
!14922 = !DILocalVariable(name: "timeout", arg: 4, scope: !14914, file: !2179, line: 1905, type: !13757)
!14923 = !DILocalVariable(name: "data", arg: 5, scope: !14914, file: !2179, line: 1905, type: !14917)
!14924 = !DILocalVariable(name: "ret", scope: !14914, file: !2179, line: 1907, type: !103)
!14925 = !DILocation(line: 0, scope: !14914)
!14926 = !DILocation(line: 1907, column: 12, scope: !14914)
!14927 = !DILocation(line: 1909, column: 11, scope: !14928)
!14928 = distinct !DILexicalBlock(scope: !14914, file: !2179, line: 1909, column: 6)
!14929 = !DILocation(line: 1909, column: 6, scope: !14914)
!14930 = !DILocation(line: 1910, column: 11, scope: !14931)
!14931 = distinct !DILexicalBlock(scope: !14928, file: !2179, line: 1909, column: 20)
!14932 = !DILocation(line: 1910, column: 26, scope: !14931)
!14933 = !DILocation(line: 1910, column: 9, scope: !14931)
!14934 = !DILocation(line: 1911, column: 2, scope: !14931)
!14935 = !DILocation(line: 1912, column: 2, scope: !14914)
!14936 = distinct !DISubprogram(name: "z_data_copy", scope: !14937, file: !14937, line: 22, type: !2826, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2809, retainedNodes: !162)
!14937 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14938 = !DILocation(line: 24, column: 2, scope: !14936)
!14939 = !DILocation(line: 27, column: 2, scope: !14936)
!14940 = !DILocation(line: 31, column: 2, scope: !14936)
!14941 = !DILocation(line: 71, column: 1, scope: !14936)
!14942 = distinct !DISubprogram(name: "z_add_timeout", scope: !2216, file: !2216, line: 88, type: !14943, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !14949)
!14943 = !DISubroutineType(types: !14944)
!14944 = !{null, !2189, !2208, !14945}
!14945 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1432, line: 67, baseType: !14946)
!14946 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1432, line: 65, size: 64, elements: !14947)
!14947 = !{!14948}
!14948 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14946, file: !1432, line: 66, baseType: !1431, size: 64)
!14949 = !{!14950, !14951, !14952, !14953, !14959, !14960, !14963, !14966}
!14950 = !DILocalVariable(name: "to", arg: 1, scope: !14942, file: !2216, line: 88, type: !2189)
!14951 = !DILocalVariable(name: "fn", arg: 2, scope: !14942, file: !2216, line: 88, type: !2208)
!14952 = !DILocalVariable(name: "timeout", arg: 3, scope: !14942, file: !2216, line: 89, type: !14945)
!14953 = !DILocalVariable(name: "__i", scope: !14954, file: !2216, line: 102, type: !14955)
!14954 = distinct !DILexicalBlock(scope: !14942, file: !2216, line: 102, column: 2)
!14955 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !368, line: 106, baseType: !14956)
!14956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !368, line: 32, size: 32, elements: !14957)
!14957 = !{!14958}
!14958 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14956, file: !368, line: 33, baseType: !103, size: 32)
!14959 = !DILocalVariable(name: "__key", scope: !14954, file: !2216, line: 102, type: !14955)
!14960 = !DILocalVariable(name: "t", scope: !14961, file: !2216, line: 103, type: !2189)
!14961 = distinct !DILexicalBlock(scope: !14962, file: !2216, line: 102, column: 24)
!14962 = distinct !DILexicalBlock(scope: !14954, file: !2216, line: 102, column: 2)
!14963 = !DILocalVariable(name: "ticks", scope: !14964, file: !2216, line: 107, type: !1431)
!14964 = distinct !DILexicalBlock(scope: !14965, file: !2216, line: 106, column: 39)
!14965 = distinct !DILexicalBlock(scope: !14961, file: !2216, line: 105, column: 7)
!14966 = !DILocalVariable(name: "next_time", scope: !14967, file: !2216, line: 137, type: !633)
!14967 = distinct !DILexicalBlock(scope: !14968, file: !2216, line: 127, column: 22)
!14968 = distinct !DILexicalBlock(scope: !14961, file: !2216, line: 127, column: 7)
!14969 = !DILocation(line: 0, scope: !14942)
!14970 = !DILocation(line: 91, column: 6, scope: !14971)
!14971 = distinct !DILexicalBlock(scope: !14942, file: !2216, line: 91, column: 6)
!14972 = !DILocation(line: 91, column: 6, scope: !14942)
!14973 = !DILocation(line: 100, column: 6, scope: !14942)
!14974 = !DILocation(line: 100, column: 9, scope: !14942)
!14975 = !DILocation(line: 0, scope: !14954)
!14976 = !DILocalVariable(name: "l", arg: 1, scope: !14977, file: !368, line: 136, type: !14980)
!14977 = distinct !DISubprogram(name: "k_spin_lock", scope: !368, file: !368, line: 136, type: !14978, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !14981)
!14978 = !DISubroutineType(types: !14979)
!14979 = !{!14955, !14980}
!14980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 32)
!14981 = !{!14976, !14982}
!14982 = !DILocalVariable(name: "k", scope: !14977, file: !368, line: 139, type: !14955)
!14983 = !DILocation(line: 0, scope: !14977, inlinedAt: !14984)
!14984 = distinct !DILocation(line: 102, column: 2, scope: !14954)
!14985 = !DILocation(line: 55, column: 2, scope: !14986, inlinedAt: !14990)
!14986 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6128, file: !6128, line: 42, type: !6129, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !14987)
!14987 = !{!14988, !14989}
!14988 = !DILocalVariable(name: "key", scope: !14986, file: !6128, line: 44, type: !32)
!14989 = !DILocalVariable(name: "tmp", scope: !14986, file: !6128, line: 53, type: !32)
!14990 = distinct !DILocation(line: 145, column: 10, scope: !14977, inlinedAt: !14984)
!14991 = !{i64 2227731}
!14992 = !DILocation(line: 0, scope: !14986, inlinedAt: !14990)
!14993 = !DILocation(line: 106, column: 33, scope: !14965)
!14994 = !DILocation(line: 105, column: 7, scope: !14961)
!14995 = !DILocation(line: 107, column: 50, scope: !14964)
!14996 = !DILocation(line: 107, column: 48, scope: !14964)
!14997 = !DILocation(line: 0, scope: !14964)
!14998 = !DILocation(line: 109, column: 17, scope: !14964)
!14999 = !DILocation(line: 110, column: 3, scope: !14964)
!15000 = !DILocation(line: 111, column: 31, scope: !15001)
!15001 = distinct !DILexicalBlock(scope: !14965, file: !2216, line: 110, column: 10)
!15002 = !DILocation(line: 111, column: 37, scope: !15001)
!15003 = !DILocation(line: 111, column: 35, scope: !15001)
!15004 = !DILocation(line: 0, scope: !14965)
!15005 = !DILocation(line: 109, column: 8, scope: !14964)
!15006 = !DILocation(line: 109, column: 15, scope: !14964)
!15007 = !DILocation(line: 114, column: 12, scope: !15008)
!15008 = distinct !DILexicalBlock(scope: !14961, file: !2216, line: 114, column: 3)
!15009 = !DILocation(line: 0, scope: !14961)
!15010 = !DILocation(line: 114, column: 3, scope: !15008)
!15011 = !DILocation(line: 115, column: 24, scope: !15012)
!15012 = distinct !DILexicalBlock(scope: !15013, file: !2216, line: 115, column: 8)
!15013 = distinct !DILexicalBlock(scope: !15014, file: !2216, line: 114, column: 45)
!15014 = distinct !DILexicalBlock(scope: !15008, file: !2216, line: 114, column: 3)
!15015 = !DILocation(line: 115, column: 11, scope: !15012)
!15016 = !DILocation(line: 115, column: 18, scope: !15012)
!15017 = !DILocation(line: 115, column: 8, scope: !15013)
!15018 = !DILocation(line: 116, column: 15, scope: !15019)
!15019 = distinct !DILexicalBlock(scope: !15012, file: !2216, line: 115, column: 32)
!15020 = !DILocation(line: 117, column: 26, scope: !15019)
!15021 = !DILocation(line: 117, column: 37, scope: !15019)
!15022 = !DILocation(line: 117, column: 5, scope: !15019)
!15023 = !DILocation(line: 123, column: 7, scope: !14961)
!15024 = !DILocation(line: 120, column: 15, scope: !15013)
!15025 = !DILocation(line: 114, column: 36, scope: !15014)
!15026 = distinct !{!15026, !15010, !15027}
!15027 = !DILocation(line: 121, column: 3, scope: !15008)
!15028 = !DILocation(line: 124, column: 41, scope: !15029)
!15029 = distinct !DILexicalBlock(scope: !15030, file: !2216, line: 123, column: 18)
!15030 = distinct !DILexicalBlock(scope: !14961, file: !2216, line: 123, column: 7)
!15031 = !DILocation(line: 124, column: 4, scope: !15029)
!15032 = !DILocation(line: 125, column: 3, scope: !15029)
!15033 = !DILocation(line: 127, column: 13, scope: !14968)
!15034 = !DILocation(line: 127, column: 10, scope: !14968)
!15035 = !DILocation(line: 127, column: 7, scope: !14961)
!15036 = !DILocation(line: 137, column: 24, scope: !14967)
!15037 = !DILocation(line: 0, scope: !14967)
!15038 = !DILocation(line: 139, column: 18, scope: !15039)
!15039 = distinct !DILexicalBlock(scope: !14967, file: !2216, line: 139, column: 8)
!15040 = !DILocation(line: 139, column: 23, scope: !15039)
!15041 = !DILocation(line: 141, column: 5, scope: !15042)
!15042 = distinct !DILexicalBlock(scope: !15039, file: !2216, line: 140, column: 48)
!15043 = !DILocation(line: 142, column: 4, scope: !15042)
!15044 = !DILocalVariable(name: "key", arg: 2, scope: !15045, file: !368, line: 190, type: !14955)
!15045 = distinct !DISubprogram(name: "k_spin_unlock", scope: !368, file: !368, line: 189, type: !15046, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !15048)
!15046 = !DISubroutineType(types: !15047)
!15047 = !{null, !14980, !14955}
!15048 = !{!15049, !15044}
!15049 = !DILocalVariable(name: "l", arg: 1, scope: !15045, file: !368, line: 189, type: !14980)
!15050 = !DILocation(line: 0, scope: !15045, inlinedAt: !15051)
!15051 = distinct !DILocation(line: 102, column: 2, scope: !14962)
!15052 = !DILocalVariable(name: "key", arg: 1, scope: !15053, file: !6128, line: 84, type: !32)
!15053 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6128, file: !6128, line: 84, type: !6139, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !15054)
!15054 = !{!15052}
!15055 = !DILocation(line: 0, scope: !15053, inlinedAt: !15056)
!15056 = distinct !DILocation(line: 215, column: 2, scope: !15045, inlinedAt: !15051)
!15057 = !DILocation(line: 95, column: 2, scope: !15053, inlinedAt: !15056)
!15058 = !{i64 2228548}
!15059 = !DILocation(line: 148, column: 1, scope: !14942)
!15060 = distinct !DISubprogram(name: "elapsed", scope: !2216, file: !2216, line: 62, type: !15061, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !162)
!15061 = !DISubroutineType(types: !15062)
!15062 = !{!633}
!15063 = !DILocation(line: 64, column: 9, scope: !15060)
!15064 = !DILocation(line: 64, column: 28, scope: !15060)
!15065 = !DILocation(line: 64, column: 35, scope: !15060)
!15066 = !DILocation(line: 64, column: 2, scope: !15060)
!15067 = distinct !DISubprogram(name: "first", scope: !2216, file: !2216, line: 39, type: !15068, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !15070)
!15068 = !DISubroutineType(types: !15069)
!15069 = !{!2189}
!15070 = !{!15071}
!15071 = !DILocalVariable(name: "t", scope: !15067, file: !2216, line: 41, type: !15072)
!15072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 32)
!15073 = !DILocation(line: 41, column: 19, scope: !15067)
!15074 = !DILocation(line: 0, scope: !15067)
!15075 = !DILocation(line: 43, column: 9, scope: !15067)
!15076 = !DILocation(line: 43, column: 2, scope: !15067)
!15077 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !273, file: !273, line: 443, type: !15078, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !15080)
!15078 = !DISubroutineType(types: !15079)
!15079 = !{null, !15072, !15072}
!15080 = !{!15081, !15082, !15083}
!15081 = !DILocalVariable(name: "successor", arg: 1, scope: !15077, file: !273, line: 443, type: !15072)
!15082 = !DILocalVariable(name: "node", arg: 2, scope: !15077, file: !273, line: 443, type: !15072)
!15083 = !DILocalVariable(name: "prev", scope: !15077, file: !273, line: 445, type: !15084)
!15084 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15072)
!15085 = !DILocation(line: 0, scope: !15077)
!15086 = !DILocation(line: 445, column: 39, scope: !15077)
!15087 = !DILocation(line: 447, column: 8, scope: !15077)
!15088 = !DILocation(line: 447, column: 13, scope: !15077)
!15089 = !DILocation(line: 448, column: 8, scope: !15077)
!15090 = !DILocation(line: 448, column: 13, scope: !15077)
!15091 = !DILocation(line: 449, column: 8, scope: !15077)
!15092 = !DILocation(line: 449, column: 13, scope: !15077)
!15093 = !DILocation(line: 450, column: 18, scope: !15077)
!15094 = !DILocation(line: 451, column: 1, scope: !15077)
!15095 = distinct !DISubprogram(name: "next", scope: !2216, file: !2216, line: 46, type: !15096, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !15098)
!15096 = !DISubroutineType(types: !15097)
!15097 = !{!2189, !2189}
!15098 = !{!15099, !15100}
!15099 = !DILocalVariable(name: "t", arg: 1, scope: !15095, file: !2216, line: 46, type: !2189)
!15100 = !DILocalVariable(name: "n", scope: !15095, file: !2216, line: 48, type: !15072)
!15101 = !DILocation(line: 0, scope: !15095)
!15102 = !DILocation(line: 48, column: 58, scope: !15095)
!15103 = !DILocation(line: 48, column: 19, scope: !15095)
!15104 = !DILocation(line: 50, column: 9, scope: !15095)
!15105 = !DILocation(line: 50, column: 2, scope: !15095)
!15106 = distinct !DISubprogram(name: "sys_dlist_append", scope: !273, file: !273, line: 404, type: !15107, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !15110)
!15107 = !DISubroutineType(types: !15108)
!15108 = !{null, !15109, !15072}
!15109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2222, size: 32)
!15110 = !{!15111, !15112, !15113}
!15111 = !DILocalVariable(name: "list", arg: 1, scope: !15106, file: !273, line: 404, type: !15109)
!15112 = !DILocalVariable(name: "node", arg: 2, scope: !15106, file: !273, line: 404, type: !15072)
!15113 = !DILocalVariable(name: "tail", scope: !15106, file: !273, line: 406, type: !15084)
!15114 = !DILocation(line: 0, scope: !15106)
!15115 = !DILocation(line: 406, column: 34, scope: !15106)
!15116 = !DILocation(line: 408, column: 8, scope: !15106)
!15117 = !DILocation(line: 408, column: 13, scope: !15106)
!15118 = !DILocation(line: 409, column: 8, scope: !15106)
!15119 = !DILocation(line: 409, column: 13, scope: !15106)
!15120 = !DILocation(line: 411, column: 8, scope: !15106)
!15121 = !DILocation(line: 411, column: 13, scope: !15106)
!15122 = !DILocation(line: 412, column: 13, scope: !15106)
!15123 = !DILocation(line: 413, column: 1, scope: !15106)
!15124 = distinct !DISubprogram(name: "next_timeout", scope: !2216, file: !2216, line: 67, type: !15061, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !15125)
!15125 = !{!15126, !15127, !15128}
!15126 = !DILocalVariable(name: "to", scope: !15124, file: !2216, line: 69, type: !2189)
!15127 = !DILocalVariable(name: "ticks_elapsed", scope: !15124, file: !2216, line: 70, type: !633)
!15128 = !DILocalVariable(name: "ret", scope: !15124, file: !2216, line: 71, type: !633)
!15129 = !DILocation(line: 69, column: 24, scope: !15124)
!15130 = !DILocation(line: 0, scope: !15124)
!15131 = !DILocation(line: 70, column: 26, scope: !15124)
!15132 = !DILocation(line: 73, column: 10, scope: !15133)
!15133 = distinct !DILexicalBlock(scope: !15124, file: !2216, line: 73, column: 6)
!15134 = !DILocation(line: 73, column: 19, scope: !15133)
!15135 = !DILocation(line: 74, column: 21, scope: !15133)
!15136 = !DILocation(line: 74, column: 30, scope: !15133)
!15137 = !DILocation(line: 74, column: 28, scope: !15133)
!15138 = !DILocation(line: 74, column: 45, scope: !15133)
!15139 = !DILocation(line: 73, column: 6, scope: !15124)
!15140 = !DILocation(line: 77, column: 9, scope: !15141)
!15141 = distinct !DILexicalBlock(scope: !15133, file: !2216, line: 76, column: 9)
!15142 = !DILocation(line: 0, scope: !15133)
!15143 = !DILocation(line: 81, column: 20, scope: !15144)
!15144 = distinct !DILexicalBlock(scope: !15124, file: !2216, line: 81, column: 6)
!15145 = !DILocation(line: 81, column: 6, scope: !15144)
!15146 = !DILocation(line: 81, column: 32, scope: !15144)
!15147 = !DILocation(line: 85, column: 2, scope: !15124)
!15148 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !273, file: !273, line: 341, type: !15149, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !15151)
!15149 = !DISubroutineType(types: !15150)
!15150 = !{!15072, !15109, !15072}
!15151 = !{!15152, !15153}
!15152 = !DILocalVariable(name: "list", arg: 1, scope: !15148, file: !273, line: 341, type: !15109)
!15153 = !DILocalVariable(name: "node", arg: 2, scope: !15148, file: !273, line: 342, type: !15072)
!15154 = !DILocation(line: 0, scope: !15148)
!15155 = !DILocation(line: 344, column: 15, scope: !15148)
!15156 = !DILocation(line: 344, column: 9, scope: !15148)
!15157 = !DILocation(line: 344, column: 26, scope: !15148)
!15158 = !DILocation(line: 344, column: 2, scope: !15148)
!15159 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !273, file: !273, line: 325, type: !15149, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !15160)
!15160 = !{!15161, !15162}
!15161 = !DILocalVariable(name: "list", arg: 1, scope: !15159, file: !273, line: 325, type: !15109)
!15162 = !DILocalVariable(name: "node", arg: 2, scope: !15159, file: !273, line: 326, type: !15072)
!15163 = !DILocation(line: 0, scope: !15159)
!15164 = !DILocation(line: 328, column: 24, scope: !15159)
!15165 = !DILocation(line: 328, column: 15, scope: !15159)
!15166 = !DILocation(line: 328, column: 9, scope: !15159)
!15167 = !DILocation(line: 328, column: 45, scope: !15159)
!15168 = !DILocation(line: 328, column: 2, scope: !15159)
!15169 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !273, file: !273, line: 294, type: !15170, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !15172)
!15170 = !DISubroutineType(types: !15171)
!15171 = !{!15072, !15109}
!15172 = !{!15173}
!15173 = !DILocalVariable(name: "list", arg: 1, scope: !15169, file: !273, line: 294, type: !15109)
!15174 = !DILocation(line: 0, scope: !15169)
!15175 = !DILocation(line: 296, column: 9, scope: !15169)
!15176 = !DILocation(line: 296, column: 2, scope: !15169)
!15177 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !273, file: !273, line: 266, type: !15178, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !15180)
!15178 = !DISubroutineType(types: !15179)
!15179 = !{!211, !15109}
!15180 = !{!15181}
!15181 = !DILocalVariable(name: "list", arg: 1, scope: !15177, file: !273, line: 266, type: !15109)
!15182 = !DILocation(line: 0, scope: !15177)
!15183 = !DILocation(line: 268, column: 15, scope: !15177)
!15184 = !DILocation(line: 268, column: 20, scope: !15177)
!15185 = !DILocation(line: 268, column: 2, scope: !15177)
!15186 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2216, file: !2216, line: 150, type: !15187, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !15189)
!15187 = !DISubroutineType(types: !15188)
!15188 = !{!103, !2189}
!15189 = !{!15190, !15191, !15192, !15194}
!15190 = !DILocalVariable(name: "to", arg: 1, scope: !15186, file: !2216, line: 150, type: !2189)
!15191 = !DILocalVariable(name: "ret", scope: !15186, file: !2216, line: 152, type: !103)
!15192 = !DILocalVariable(name: "__i", scope: !15193, file: !2216, line: 154, type: !14955)
!15193 = distinct !DILexicalBlock(scope: !15186, file: !2216, line: 154, column: 2)
!15194 = !DILocalVariable(name: "__key", scope: !15193, file: !2216, line: 154, type: !14955)
!15195 = !DILocation(line: 0, scope: !15186)
!15196 = !DILocation(line: 0, scope: !15193)
!15197 = !DILocation(line: 0, scope: !14977, inlinedAt: !15198)
!15198 = distinct !DILocation(line: 154, column: 2, scope: !15193)
!15199 = !DILocation(line: 55, column: 2, scope: !14986, inlinedAt: !15200)
!15200 = distinct !DILocation(line: 145, column: 10, scope: !14977, inlinedAt: !15198)
!15201 = !DILocation(line: 0, scope: !14986, inlinedAt: !15200)
!15202 = !DILocation(line: 155, column: 7, scope: !15203)
!15203 = distinct !DILexicalBlock(scope: !15204, file: !2216, line: 155, column: 7)
!15204 = distinct !DILexicalBlock(scope: !15205, file: !2216, line: 154, column: 24)
!15205 = distinct !DILexicalBlock(scope: !15193, file: !2216, line: 154, column: 2)
!15206 = !DILocation(line: 155, column: 7, scope: !15204)
!15207 = !DILocation(line: 156, column: 4, scope: !15208)
!15208 = distinct !DILexicalBlock(scope: !15203, file: !2216, line: 155, column: 39)
!15209 = !DILocation(line: 158, column: 3, scope: !15208)
!15210 = !DILocation(line: 0, scope: !15045, inlinedAt: !15211)
!15211 = distinct !DILocation(line: 154, column: 2, scope: !15205)
!15212 = !DILocation(line: 0, scope: !15053, inlinedAt: !15213)
!15213 = distinct !DILocation(line: 215, column: 2, scope: !15045, inlinedAt: !15211)
!15214 = !DILocation(line: 95, column: 2, scope: !15053, inlinedAt: !15213)
!15215 = !DILocation(line: 161, column: 2, scope: !15186)
!15216 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !273, file: !273, line: 225, type: !15217, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !15221)
!15217 = !DISubroutineType(types: !15218)
!15218 = !{!211, !15219}
!15219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15220, size: 32)
!15220 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2193)
!15221 = !{!15222}
!15222 = !DILocalVariable(name: "node", arg: 1, scope: !15216, file: !273, line: 225, type: !15219)
!15223 = !DILocation(line: 0, scope: !15216)
!15224 = !DILocation(line: 227, column: 15, scope: !15216)
!15225 = !DILocation(line: 227, column: 20, scope: !15216)
!15226 = !DILocation(line: 227, column: 2, scope: !15216)
!15227 = distinct !DISubprogram(name: "remove_timeout", scope: !2216, file: !2216, line: 53, type: !2210, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !15228)
!15228 = !{!15229}
!15229 = !DILocalVariable(name: "t", arg: 1, scope: !15227, file: !2216, line: 53, type: !2189)
!15230 = !DILocation(line: 0, scope: !15227)
!15231 = !DILocation(line: 55, column: 6, scope: !15232)
!15232 = distinct !DILexicalBlock(scope: !15227, file: !2216, line: 55, column: 6)
!15233 = !DILocation(line: 55, column: 14, scope: !15232)
!15234 = !DILocation(line: 55, column: 6, scope: !15227)
!15235 = !DILocation(line: 56, column: 25, scope: !15236)
!15236 = distinct !DILexicalBlock(scope: !15232, file: !2216, line: 55, column: 23)
!15237 = !DILocation(line: 56, column: 12, scope: !15236)
!15238 = !DILocation(line: 56, column: 19, scope: !15236)
!15239 = !DILocation(line: 57, column: 2, scope: !15236)
!15240 = !DILocation(line: 59, column: 23, scope: !15227)
!15241 = !DILocation(line: 59, column: 2, scope: !15227)
!15242 = !DILocation(line: 60, column: 1, scope: !15227)
!15243 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !273, file: !273, line: 496, type: !15244, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !15246)
!15244 = !DISubroutineType(types: !15245)
!15245 = !{null, !15072}
!15246 = !{!15247, !15248, !15249}
!15247 = !DILocalVariable(name: "node", arg: 1, scope: !15243, file: !273, line: 496, type: !15072)
!15248 = !DILocalVariable(name: "prev", scope: !15243, file: !273, line: 498, type: !15084)
!15249 = !DILocalVariable(name: "next", scope: !15243, file: !273, line: 499, type: !15084)
!15250 = !DILocation(line: 0, scope: !15243)
!15251 = !DILocation(line: 498, column: 34, scope: !15243)
!15252 = !DILocation(line: 499, column: 34, scope: !15243)
!15253 = !DILocation(line: 501, column: 8, scope: !15243)
!15254 = !DILocation(line: 501, column: 13, scope: !15243)
!15255 = !DILocation(line: 502, column: 8, scope: !15243)
!15256 = !DILocation(line: 502, column: 13, scope: !15243)
!15257 = !DILocation(line: 503, column: 2, scope: !15243)
!15258 = !DILocation(line: 504, column: 1, scope: !15243)
!15259 = distinct !DISubprogram(name: "sys_dnode_init", scope: !273, file: !273, line: 211, type: !15244, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !15260)
!15260 = !{!15261}
!15261 = !DILocalVariable(name: "node", arg: 1, scope: !15259, file: !273, line: 211, type: !15072)
!15262 = !DILocation(line: 0, scope: !15259)
!15263 = !DILocation(line: 213, column: 8, scope: !15259)
!15264 = !DILocation(line: 213, column: 13, scope: !15259)
!15265 = !DILocation(line: 214, column: 8, scope: !15259)
!15266 = !DILocation(line: 214, column: 13, scope: !15259)
!15267 = !DILocation(line: 215, column: 1, scope: !15259)
!15268 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2216, file: !2216, line: 183, type: !15269, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !15273)
!15269 = !DISubroutineType(types: !15270)
!15270 = !{!1431, !15271}
!15271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15272, size: 32)
!15272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2190)
!15273 = !{!15274, !15275, !15276, !15278}
!15274 = !DILocalVariable(name: "timeout", arg: 1, scope: !15268, file: !2216, line: 183, type: !15271)
!15275 = !DILocalVariable(name: "ticks", scope: !15268, file: !2216, line: 185, type: !1431)
!15276 = !DILocalVariable(name: "__i", scope: !15277, file: !2216, line: 187, type: !14955)
!15277 = distinct !DILexicalBlock(scope: !15268, file: !2216, line: 187, column: 2)
!15278 = !DILocalVariable(name: "__key", scope: !15277, file: !2216, line: 187, type: !14955)
!15279 = !DILocation(line: 0, scope: !15268)
!15280 = !DILocation(line: 0, scope: !15277)
!15281 = !DILocation(line: 0, scope: !14977, inlinedAt: !15282)
!15282 = distinct !DILocation(line: 187, column: 2, scope: !15277)
!15283 = !DILocation(line: 55, column: 2, scope: !14986, inlinedAt: !15284)
!15284 = distinct !DILocation(line: 145, column: 10, scope: !14977, inlinedAt: !15282)
!15285 = !DILocation(line: 0, scope: !14986, inlinedAt: !15284)
!15286 = !DILocation(line: 188, column: 11, scope: !15287)
!15287 = distinct !DILexicalBlock(scope: !15288, file: !2216, line: 187, column: 24)
!15288 = distinct !DILexicalBlock(scope: !15277, file: !2216, line: 187, column: 2)
!15289 = !DILocation(line: 0, scope: !15045, inlinedAt: !15290)
!15290 = distinct !DILocation(line: 187, column: 2, scope: !15288)
!15291 = !DILocation(line: 0, scope: !15053, inlinedAt: !15292)
!15292 = distinct !DILocation(line: 215, column: 2, scope: !15045, inlinedAt: !15290)
!15293 = !DILocation(line: 95, column: 2, scope: !15053, inlinedAt: !15292)
!15294 = !DILocation(line: 191, column: 2, scope: !15268)
!15295 = distinct !DISubprogram(name: "timeout_rem", scope: !2216, file: !2216, line: 165, type: !15269, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !15296)
!15296 = !{!15297, !15298, !15299}
!15297 = !DILocalVariable(name: "timeout", arg: 1, scope: !15295, file: !2216, line: 165, type: !15271)
!15298 = !DILocalVariable(name: "ticks", scope: !15295, file: !2216, line: 167, type: !1431)
!15299 = !DILocalVariable(name: "t", scope: !15300, file: !2216, line: 173, type: !2189)
!15300 = distinct !DILexicalBlock(scope: !15295, file: !2216, line: 173, column: 2)
!15301 = !DILocation(line: 0, scope: !15295)
!15302 = !DILocation(line: 169, column: 6, scope: !15303)
!15303 = distinct !DILexicalBlock(scope: !15295, file: !2216, line: 169, column: 6)
!15304 = !DILocation(line: 169, column: 6, scope: !15295)
!15305 = !DILocation(line: 173, column: 28, scope: !15300)
!15306 = !DILocation(line: 0, scope: !15300)
!15307 = !DILocation(line: 173, column: 39, scope: !15308)
!15308 = distinct !DILexicalBlock(scope: !15300, file: !2216, line: 173, column: 2)
!15309 = !DILocation(line: 173, column: 2, scope: !15300)
!15310 = !DILocation(line: 174, column: 15, scope: !15311)
!15311 = distinct !DILexicalBlock(scope: !15308, file: !2216, line: 173, column: 61)
!15312 = !DILocation(line: 174, column: 9, scope: !15311)
!15313 = !DILocation(line: 175, column: 15, scope: !15314)
!15314 = distinct !DILexicalBlock(scope: !15311, file: !2216, line: 175, column: 7)
!15315 = !DILocation(line: 175, column: 7, scope: !15311)
!15316 = !DILocation(line: 173, column: 52, scope: !15308)
!15317 = distinct !{!15317, !15309, !15318}
!15318 = !DILocation(line: 178, column: 2, scope: !15300)
!15319 = !DILocation(line: 180, column: 17, scope: !15295)
!15320 = !DILocation(line: 180, column: 15, scope: !15295)
!15321 = !DILocation(line: 180, column: 2, scope: !15295)
!15322 = !DILocation(line: 181, column: 1, scope: !15295)
!15323 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12632, file: !12632, line: 35, type: !15324, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !15326)
!15324 = !DISubroutineType(types: !15325)
!15325 = !{!211, !15271}
!15326 = !{!15327}
!15327 = !DILocalVariable(name: "to", arg: 1, scope: !15323, file: !12632, line: 35, type: !15271)
!15328 = !DILocation(line: 0, scope: !15323)
!15329 = !DILocation(line: 37, column: 35, scope: !15323)
!15330 = !DILocation(line: 37, column: 10, scope: !15323)
!15331 = !DILocation(line: 37, column: 9, scope: !15323)
!15332 = !DILocation(line: 37, column: 2, scope: !15323)
!15333 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2216, file: !2216, line: 194, type: !15269, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !15334)
!15334 = !{!15335, !15336, !15337, !15339}
!15335 = !DILocalVariable(name: "timeout", arg: 1, scope: !15333, file: !2216, line: 194, type: !15271)
!15336 = !DILocalVariable(name: "ticks", scope: !15333, file: !2216, line: 196, type: !1431)
!15337 = !DILocalVariable(name: "__i", scope: !15338, file: !2216, line: 198, type: !14955)
!15338 = distinct !DILexicalBlock(scope: !15333, file: !2216, line: 198, column: 2)
!15339 = !DILocalVariable(name: "__key", scope: !15338, file: !2216, line: 198, type: !14955)
!15340 = !DILocation(line: 0, scope: !15333)
!15341 = !DILocation(line: 0, scope: !15338)
!15342 = !DILocation(line: 0, scope: !14977, inlinedAt: !15343)
!15343 = distinct !DILocation(line: 198, column: 2, scope: !15338)
!15344 = !DILocation(line: 55, column: 2, scope: !14986, inlinedAt: !15345)
!15345 = distinct !DILocation(line: 145, column: 10, scope: !14977, inlinedAt: !15343)
!15346 = !DILocation(line: 0, scope: !14986, inlinedAt: !15345)
!15347 = !DILocation(line: 199, column: 11, scope: !15348)
!15348 = distinct !DILexicalBlock(scope: !15349, file: !2216, line: 198, column: 24)
!15349 = distinct !DILexicalBlock(scope: !15338, file: !2216, line: 198, column: 2)
!15350 = !DILocation(line: 199, column: 23, scope: !15348)
!15351 = !DILocation(line: 0, scope: !15045, inlinedAt: !15352)
!15352 = distinct !DILocation(line: 198, column: 2, scope: !15349)
!15353 = !DILocation(line: 0, scope: !15053, inlinedAt: !15354)
!15354 = distinct !DILocation(line: 215, column: 2, scope: !15045, inlinedAt: !15352)
!15355 = !DILocation(line: 95, column: 2, scope: !15053, inlinedAt: !15354)
!15356 = !DILocation(line: 199, column: 21, scope: !15348)
!15357 = !DILocation(line: 202, column: 2, scope: !15333)
!15358 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2216, file: !2216, line: 205, type: !15061, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !15359)
!15359 = !{!15360, !15361, !15363}
!15360 = !DILocalVariable(name: "ret", scope: !15358, file: !2216, line: 207, type: !633)
!15361 = !DILocalVariable(name: "__i", scope: !15362, file: !2216, line: 209, type: !14955)
!15362 = distinct !DILexicalBlock(scope: !15358, file: !2216, line: 209, column: 2)
!15363 = !DILocalVariable(name: "__key", scope: !15362, file: !2216, line: 209, type: !14955)
!15364 = !DILocation(line: 0, scope: !15358)
!15365 = !DILocation(line: 0, scope: !15362)
!15366 = !DILocation(line: 0, scope: !14977, inlinedAt: !15367)
!15367 = distinct !DILocation(line: 209, column: 2, scope: !15362)
!15368 = !DILocation(line: 55, column: 2, scope: !14986, inlinedAt: !15369)
!15369 = distinct !DILocation(line: 145, column: 10, scope: !14977, inlinedAt: !15367)
!15370 = !DILocation(line: 0, scope: !14986, inlinedAt: !15369)
!15371 = !DILocation(line: 210, column: 9, scope: !15372)
!15372 = distinct !DILexicalBlock(scope: !15373, file: !2216, line: 209, column: 24)
!15373 = distinct !DILexicalBlock(scope: !15362, file: !2216, line: 209, column: 2)
!15374 = !DILocation(line: 0, scope: !15045, inlinedAt: !15375)
!15375 = distinct !DILocation(line: 209, column: 2, scope: !15373)
!15376 = !DILocation(line: 0, scope: !15053, inlinedAt: !15377)
!15377 = distinct !DILocation(line: 215, column: 2, scope: !15045, inlinedAt: !15375)
!15378 = !DILocation(line: 95, column: 2, scope: !15053, inlinedAt: !15377)
!15379 = !DILocation(line: 212, column: 2, scope: !15358)
!15380 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2216, file: !2216, line: 215, type: !10252, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !15381)
!15381 = !{!15382, !15383, !15384, !15386, !15387, !15390, !15391}
!15382 = !DILocalVariable(name: "ticks", arg: 1, scope: !15380, file: !2216, line: 215, type: !633)
!15383 = !DILocalVariable(name: "is_idle", arg: 2, scope: !15380, file: !2216, line: 215, type: !211)
!15384 = !DILocalVariable(name: "__i", scope: !15385, file: !2216, line: 217, type: !14955)
!15385 = distinct !DILexicalBlock(scope: !15380, file: !2216, line: 217, column: 2)
!15386 = !DILocalVariable(name: "__key", scope: !15385, file: !2216, line: 217, type: !14955)
!15387 = !DILocalVariable(name: "next_to", scope: !15388, file: !2216, line: 218, type: !103)
!15388 = distinct !DILexicalBlock(scope: !15389, file: !2216, line: 217, column: 24)
!15389 = distinct !DILexicalBlock(scope: !15385, file: !2216, line: 217, column: 2)
!15390 = !DILocalVariable(name: "sooner", scope: !15388, file: !2216, line: 219, type: !211)
!15391 = !DILocalVariable(name: "imminent", scope: !15388, file: !2216, line: 221, type: !211)
!15392 = !DILocation(line: 0, scope: !15380)
!15393 = !DILocation(line: 0, scope: !15385)
!15394 = !DILocation(line: 0, scope: !14977, inlinedAt: !15395)
!15395 = distinct !DILocation(line: 217, column: 2, scope: !15385)
!15396 = !DILocation(line: 55, column: 2, scope: !14986, inlinedAt: !15397)
!15397 = distinct !DILocation(line: 145, column: 10, scope: !14977, inlinedAt: !15395)
!15398 = !DILocation(line: 0, scope: !14986, inlinedAt: !15397)
!15399 = !DILocation(line: 218, column: 17, scope: !15388)
!15400 = !DILocation(line: 0, scope: !15388)
!15401 = !DILocation(line: 221, column: 27, scope: !15388)
!15402 = !DILocation(line: 233, column: 17, scope: !15403)
!15403 = distinct !DILexicalBlock(scope: !15388, file: !2216, line: 233, column: 7)
!15404 = !DILocation(line: 234, column: 26, scope: !15405)
!15405 = distinct !DILexicalBlock(scope: !15403, file: !2216, line: 233, column: 56)
!15406 = !DILocation(line: 234, column: 4, scope: !15405)
!15407 = !DILocation(line: 235, column: 3, scope: !15405)
!15408 = !DILocation(line: 0, scope: !15045, inlinedAt: !15409)
!15409 = distinct !DILocation(line: 217, column: 2, scope: !15389)
!15410 = !DILocation(line: 0, scope: !15053, inlinedAt: !15411)
!15411 = distinct !DILocation(line: 215, column: 2, scope: !15045, inlinedAt: !15409)
!15412 = !DILocation(line: 95, column: 2, scope: !15053, inlinedAt: !15411)
!15413 = !DILocation(line: 237, column: 1, scope: !15380)
!15414 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2216, file: !2216, line: 239, type: !15415, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !15417)
!15415 = !DISubroutineType(types: !15416)
!15416 = !{null, !633}
!15417 = !{!15418, !15419, !15420, !15422}
!15418 = !DILocalVariable(name: "ticks", arg: 1, scope: !15414, file: !2216, line: 239, type: !633)
!15419 = !DILocalVariable(name: "key", scope: !15414, file: !2216, line: 245, type: !14955)
!15420 = !DILocalVariable(name: "t", scope: !15421, file: !2216, line: 262, type: !2189)
!15421 = distinct !DILexicalBlock(scope: !15414, file: !2216, line: 261, column: 67)
!15422 = !DILocalVariable(name: "dt", scope: !15421, file: !2216, line: 263, type: !103)
!15423 = !DILocation(line: 0, scope: !15414)
!15424 = !DILocation(line: 242, column: 2, scope: !15414)
!15425 = !DILocation(line: 0, scope: !14977, inlinedAt: !15426)
!15426 = distinct !DILocation(line: 245, column: 25, scope: !15414)
!15427 = !DILocation(line: 55, column: 2, scope: !14986, inlinedAt: !15428)
!15428 = distinct !DILocation(line: 145, column: 10, scope: !14977, inlinedAt: !15426)
!15429 = !DILocation(line: 0, scope: !14986, inlinedAt: !15428)
!15430 = !DILocation(line: 261, column: 9, scope: !15414)
!15431 = !DILocation(line: 261, column: 17, scope: !15414)
!15432 = !DILocation(line: 261, column: 25, scope: !15414)
!15433 = !DILocation(line: 261, column: 37, scope: !15414)
!15434 = !DILocation(line: 261, column: 47, scope: !15414)
!15435 = !DILocation(line: 261, column: 44, scope: !15414)
!15436 = !DILocation(line: 261, column: 2, scope: !15414)
!15437 = !DILocation(line: 0, scope: !15421)
!15438 = !DILocation(line: 263, column: 12, scope: !15421)
!15439 = !DILocation(line: 265, column: 16, scope: !15421)
!15440 = !DILocation(line: 265, column: 13, scope: !15421)
!15441 = !DILocation(line: 266, column: 13, scope: !15421)
!15442 = !DILocation(line: 267, column: 3, scope: !15421)
!15443 = !DILocation(line: 0, scope: !15045, inlinedAt: !15444)
!15444 = distinct !DILocation(line: 269, column: 3, scope: !15421)
!15445 = !DILocation(line: 0, scope: !15053, inlinedAt: !15446)
!15446 = distinct !DILocation(line: 215, column: 2, scope: !15045, inlinedAt: !15444)
!15447 = !DILocation(line: 95, column: 2, scope: !15053, inlinedAt: !15446)
!15448 = !DILocation(line: 270, column: 6, scope: !15421)
!15449 = !DILocation(line: 270, column: 3, scope: !15421)
!15450 = !DILocation(line: 0, scope: !14977, inlinedAt: !15451)
!15451 = distinct !DILocation(line: 271, column: 9, scope: !15421)
!15452 = !DILocation(line: 55, column: 2, scope: !14986, inlinedAt: !15453)
!15453 = distinct !DILocation(line: 145, column: 10, scope: !14977, inlinedAt: !15451)
!15454 = !DILocation(line: 0, scope: !14986, inlinedAt: !15453)
!15455 = !DILocation(line: 272, column: 22, scope: !15421)
!15456 = distinct !{!15456, !15436, !15457}
!15457 = !DILocation(line: 273, column: 2, scope: !15414)
!15458 = !DILocation(line: 276, column: 19, scope: !15459)
!15459 = distinct !DILexicalBlock(scope: !15460, file: !2216, line: 275, column: 23)
!15460 = distinct !DILexicalBlock(scope: !15414, file: !2216, line: 275, column: 6)
!15461 = !DILocation(line: 277, column: 2, scope: !15459)
!15462 = !DILocation(line: 279, column: 15, scope: !15414)
!15463 = !DILocation(line: 279, column: 12, scope: !15414)
!15464 = !DILocation(line: 280, column: 21, scope: !15414)
!15465 = !DILocation(line: 282, column: 24, scope: !15414)
!15466 = !DILocation(line: 282, column: 2, scope: !15414)
!15467 = !DILocation(line: 0, scope: !15045, inlinedAt: !15468)
!15468 = distinct !DILocation(line: 284, column: 2, scope: !15414)
!15469 = !DILocation(line: 0, scope: !15053, inlinedAt: !15470)
!15470 = distinct !DILocation(line: 215, column: 2, scope: !15045, inlinedAt: !15468)
!15471 = !DILocation(line: 95, column: 2, scope: !15053, inlinedAt: !15470)
!15472 = !DILocation(line: 285, column: 1, scope: !15414)
!15473 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2216, file: !2216, line: 287, type: !15474, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !15476)
!15474 = !DISubroutineType(types: !15475)
!15475 = !{!330}
!15476 = !{!15477, !15478, !15480}
!15477 = !DILocalVariable(name: "t", scope: !15473, file: !2216, line: 289, type: !163)
!15478 = !DILocalVariable(name: "__i", scope: !15479, file: !2216, line: 291, type: !14955)
!15479 = distinct !DILexicalBlock(scope: !15473, file: !2216, line: 291, column: 2)
!15480 = !DILocalVariable(name: "__key", scope: !15479, file: !2216, line: 291, type: !14955)
!15481 = !DILocation(line: 0, scope: !15473)
!15482 = !DILocation(line: 0, scope: !15479)
!15483 = !DILocation(line: 0, scope: !14977, inlinedAt: !15484)
!15484 = distinct !DILocation(line: 291, column: 2, scope: !15479)
!15485 = !DILocation(line: 55, column: 2, scope: !14986, inlinedAt: !15486)
!15486 = distinct !DILocation(line: 145, column: 10, scope: !14977, inlinedAt: !15484)
!15487 = !DILocation(line: 0, scope: !14986, inlinedAt: !15486)
!15488 = !DILocation(line: 292, column: 7, scope: !15489)
!15489 = distinct !DILexicalBlock(scope: !15490, file: !2216, line: 291, column: 24)
!15490 = distinct !DILexicalBlock(scope: !15479, file: !2216, line: 291, column: 2)
!15491 = !DILocation(line: 292, column: 19, scope: !15489)
!15492 = !DILocation(line: 0, scope: !15045, inlinedAt: !15493)
!15493 = distinct !DILocation(line: 291, column: 2, scope: !15490)
!15494 = !DILocation(line: 0, scope: !15053, inlinedAt: !15495)
!15495 = distinct !DILocation(line: 215, column: 2, scope: !15045, inlinedAt: !15493)
!15496 = !DILocation(line: 95, column: 2, scope: !15053, inlinedAt: !15495)
!15497 = !DILocation(line: 292, column: 17, scope: !15489)
!15498 = !DILocation(line: 294, column: 2, scope: !15473)
!15499 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2216, file: !2216, line: 297, type: !135, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !162)
!15500 = !DILocation(line: 300, column: 19, scope: !15499)
!15501 = !DILocation(line: 300, column: 9, scope: !15499)
!15502 = !DILocation(line: 300, column: 2, scope: !15499)
!15503 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2216, file: !2216, line: 306, type: !15474, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !162)
!15504 = !DILocation(line: 308, column: 9, scope: !15503)
!15505 = !DILocation(line: 308, column: 2, scope: !15503)
!15506 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2216, file: !2216, line: 319, type: !6391, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !15507)
!15507 = !{!15508, !15509, !15510, !15511}
!15508 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !15506, file: !2216, line: 319, type: !137)
!15509 = !DILocalVariable(name: "start_cycles", scope: !15506, file: !2216, line: 328, type: !137)
!15510 = !DILocalVariable(name: "cycles_to_wait", scope: !15506, file: !2216, line: 331, type: !137)
!15511 = !DILocalVariable(name: "current_cycles", scope: !15512, file: !2216, line: 338, type: !137)
!15512 = distinct !DILexicalBlock(scope: !15513, file: !2216, line: 337, column: 11)
!15513 = distinct !DILexicalBlock(scope: !15514, file: !2216, line: 337, column: 2)
!15514 = distinct !DILexicalBlock(scope: !15506, file: !2216, line: 337, column: 2)
!15515 = !DILocation(line: 0, scope: !15506)
!15516 = !DILocation(line: 322, column: 19, scope: !15517)
!15517 = distinct !DILexicalBlock(scope: !15506, file: !2216, line: 322, column: 6)
!15518 = !DILocation(line: 322, column: 6, scope: !15506)
!15519 = !DILocation(line: 328, column: 26, scope: !15506)
!15520 = !DILocation(line: 333, column: 43, scope: !15506)
!15521 = !DILocation(line: 337, column: 2, scope: !15506)
!15522 = !DILocation(line: 338, column: 29, scope: !15512)
!15523 = !DILocation(line: 0, scope: !15512)
!15524 = !DILocation(line: 341, column: 23, scope: !15525)
!15525 = distinct !DILexicalBlock(scope: !15512, file: !2216, line: 341, column: 7)
!15526 = !DILocation(line: 341, column: 39, scope: !15525)
!15527 = !DILocation(line: 349, column: 1, scope: !15506)
!15528 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !357, file: !357, line: 1675, type: !135, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !162)
!15529 = !DILocation(line: 1677, column: 9, scope: !15528)
!15530 = !DILocation(line: 1677, column: 2, scope: !15528)
!15531 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !15532, file: !15532, line: 24, type: !135, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !162)
!15532 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15533 = !DILocation(line: 26, column: 9, scope: !15531)
!15534 = !DILocation(line: 26, column: 2, scope: !15531)
!15535 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2216, file: !2216, line: 364, type: !15536, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !15538)
!15536 = !DISubroutineType(types: !15537)
!15537 = !{!163, !14945}
!15538 = !{!15539, !15540}
!15539 = !DILocalVariable(name: "timeout", arg: 1, scope: !15535, file: !2216, line: 364, type: !14945)
!15540 = !DILocalVariable(name: "dt", scope: !15535, file: !2216, line: 366, type: !1431)
!15541 = !DILocation(line: 0, scope: !15535)
!15542 = !DILocation(line: 368, column: 6, scope: !15535)
!15543 = !DILocation(line: 371, column: 10, scope: !15544)
!15544 = distinct !DILexicalBlock(scope: !15545, file: !2216, line: 370, column: 47)
!15545 = distinct !DILexicalBlock(scope: !15546, file: !2216, line: 370, column: 13)
!15546 = distinct !DILexicalBlock(scope: !15535, file: !2216, line: 368, column: 6)
!15547 = !DILocation(line: 371, column: 3, scope: !15544)
!15548 = !DILocation(line: 376, column: 58, scope: !15549)
!15549 = distinct !DILexicalBlock(scope: !15550, file: !2216, line: 376, column: 7)
!15550 = distinct !DILexicalBlock(scope: !15545, file: !2216, line: 372, column: 9)
!15551 = !DILocation(line: 376, column: 7, scope: !15550)
!15552 = !DILocation(line: 376, column: 43, scope: !15549)
!15553 = !DILocation(line: 377, column: 4, scope: !15554)
!15554 = distinct !DILexicalBlock(scope: !15549, file: !2216, line: 376, column: 64)
!15555 = !DILocation(line: 379, column: 10, scope: !15550)
!15556 = !DILocation(line: 379, column: 33, scope: !15550)
!15557 = !DILocation(line: 379, column: 31, scope: !15550)
!15558 = !DILocation(line: 379, column: 3, scope: !15550)
!15559 = !DILocation(line: 0, scope: !15546)
!15560 = !DILocation(line: 381, column: 1, scope: !15535)
!15561 = distinct !DISubprogram(name: "boot_banner", scope: !15562, file: !15562, line: 26, type: !2826, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2812, retainedNodes: !162)
!15562 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15563 = !DILocation(line: 34, column: 2, scope: !15561)
!15564 = !DILocation(line: 36, column: 1, scope: !15561)
